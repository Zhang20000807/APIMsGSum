SimpleName,num,bleu score,description,MethodName,all score
_default_POA,1,1,Returns the root POA from the ORB instance associated with the servant. Subclasses may override this method to return a different POA.,;org.omg.PortableServer.Servant._default_POA(),;1
_get_codebase,1,1,Returns the codebase for this object reference.,;org.omg.CORBA_2_3.portable.ObjectImpl._get_codebase(),;1
_get_interface,1,1,Throws an org.omg.CORBA.NO_IMPLEMENT exception with the message "This is a locally constrained object." This method does not apply to local objects and is therefore not implemented. This method is the default implementation of the org.omg.CORBA.Object method.,;org.omg.CORBA.LocalObject._get_interface(),;1
_object_id,1,1,"Allows easy execution of common methods, equivalent to calling PortableServer::Current::get_object_id.",;org.omg.PortableServer.Servant._object_id(),;1
_poa,1,1,"Allows easy execution of common methods, equivalent to PortableServer::Current:get_POA.",;org.omg.PortableServer.Servant._poa(),;1
_postEdit,1,1,"Called only from postEdit and endUpdate. Calls undoableEditHappened in all listeners. No synchronization is performed here, since the two calling methods are synchronized.",;javax.swing.undo.UndoableEditSupport._postEdit(UndoableEdit),;1
abortGrabbing,1,1,Request the PixelGrabber to abort the image fetch.,;java.awt.image.PixelGrabber.abortGrabbing(),;1
acceptEither,1,1,Description copied from interface:CompletionStage,";java.util.concurrent.CompletableFuture.acceptEither(CompletionStage&lt;?,Consumer&lt;?)",;1
acquiredBy,1,1,Returns the channel upon whose file this lock was acquired.,;java.nio.channels.FileLock.acquiredBy(),;1
action,1,1,"Deprecated.As of JDK version 1.1, should register this component as ActionListener on component which fires action events.",";java.awt.Component.action(Event,Object)",;1
activate,1,1,Activate the object for this id.,;java.rmi.activation.ActivationID.activate(boolean),;1
activateLink,1,1,"Calls linkActivated on the associated JEditorPane if the given position represents a link.This is implemented to forward to the method with the same name, but with the following args both == -1.",";javax.swing.text.html.HTMLEditorKit.LinkController.activateLink(int,JEditorPane)",;1
activeGroupCount,1,1,Returns an estimate of the number of active groups in this thread group and its subgroups. Recursively iterates over all subgroups in this thread group. The value returned is only an estimate because the number of thread groups may change dynamically while this method traverses internal data structures. This method is intended primarily for debugging and monitoring purposes.,;java.lang.ThreadGroup.activeGroupCount(),;1
add_in_arg,1,1,Creates an input argument and adds it to this Request object.,;org.omg.CORBA.Request.add_in_arg(),;1
add_inout_arg,1,1,Adds an input/output argument to this Request object.,;org.omg.CORBA.Request.add_inout_arg(),;1
add_item,1,1,"Creates a new NamedValue object initialized with the given name and flag, and adds it to the end of this NVList object. The flag can be any one of the argument passing modes: ARG_IN.value, ARG_OUT.value, or ARG_INOUT.value.",";org.omg.CORBA.NVList.add_item(String,int)",;1
add_named_in_arg,1,1,Creates an input argument with the given name and adds it to this Request object.,;org.omg.CORBA.Request.add_named_in_arg(String),;1
add_named_inout_arg,1,1,Adds an input/output argument with the given name to this Request object.,;org.omg.CORBA.Request.add_named_inout_arg(String),;1
add_named_out_arg,1,1,Adds an output argument with the given name to this Request object.,;org.omg.CORBA.Request.add_named_out_arg(String),;1
add_out_arg,1,1,Adds an output argument to this Request object.,;org.omg.CORBA.Request.add_out_arg(),;1
add_value,1,1,"Creates a new NamedValue object initialized with the given name, value, and flag, and adds it to the end of this NVList object.",";org.omg.CORBA.NVList.add_value(String,Any,int)",;1
addAllAbsent,1,1,"Appends all of the elements in the specified collection that are not already contained in this list, to the end of this list, in the order that they are returned by the specified collection's iterator.",;java.util.concurrent.CopyOnWriteArrayList.addAllAbsent(Collection&lt;?),;1
addAncestorListener,1,1,Registers listener so that it will receive AncestorEvents when it or any of its ancestors move or are made visible or invisible. Events are also sent when the component or its ancestors are added or removed from the containment hierarchy.,;javax.swing.JComponent.addAncestorListener(AncestorListener),;1
addAttachmentPart,1,1,Adds the given AttachmentPart object to this SOAPMessage object. An AttachmentPart object must be created before it can be added to a message.,;javax.xml.soap.SOAPMessage.addAttachmentPart(AttachmentPart),;1
addAttributeChangeNotificationListener,1,1,Description copied from interface:ModelMBeanNotificationBroadcaster,";javax.management.modelmbean.RequiredModelMBean.addAttributeChangeNotificationListener(NotificationListener,String,Object)",;1
addAuxiliaryLookAndFeel,1,1,Adds a LookAndFeel to the list of auxiliary look and feels. The auxiliary look and feels tell the multiplexing look and feel what other LookAndFeel classes for a component instance are to be used in addition to the default LookAndFeel class when creating a multiplexing UI. The change will only take effect when a new UI class is created or when the default look and feel is changed on a component instance. Note these are not the same as the installed look and feels.,;javax.swing.UIManager.addAuxiliaryLookAndFeel(LookAndFeel),;1
addAWTEventListener,1,1,"Adds an AWTEventListener to receive all AWTEvents dispatched system-wide that conform to the given eventMask. First, if there is a security manager, its checkPermission method is called with an AWTPermission(""listenToAllAWTEvents"") permission. This may result in a SecurityException. eventMask is a bitmask of event types to receive. It is constructed by bitwise OR-ing together the event masks defined in AWTEvent. Note: event listener use is not recommended for normal application use, but are intended solely to support special purpose facilities including support for accessibility, event record/playback, and diagnostic tracing. If listener is null, no exception is thrown and no action is performed.",";java.awt.Toolkit.addAWTEventListener(AWTEventListener,long)",;1
addBeanContextMembershipListener,1,1,Adds a BeanContextMembershipListener,;java.beans.beancontext.BeanContextSupport.addBeanContextMembershipListener(BeanContextMembershipListener),;1
addBeanContextServicesListener,1,1,add a BeanContextServicesListener,;java.beans.beancontext.BeanContextServicesSupport.addBeanContextServicesListener(BeanContextServicesListener),;1
addBooleanAttribute,1,1,"Adds a new attribute to a previously defined element that will be defined by the enumerated values TRUE and FALSE, with a datatype of DATATYPE_BOOLEAN.",";javax.imageio.metadata.IIOMetadataFormatImpl.addBooleanAttribute(String,String,boolean,boolean)",;1
addButtonComponents,1,1,Creates the appropriate object to represent each of the objects in buttons and adds it to container. This differs from addMessageComponents in that it will recurse on buttons and that if button is not a Component it will create an instance of JButton.,";javax.swing.plaf.basic.BasicOptionPaneUI.addButtonComponents(Container,Object[],int)",;1
addCaretListener,1,1,Adds a caret listener for notification of any changes to the caret.,;javax.swing.text.JTextComponent.addCaretListener(CaretListener),;1
addCertificate,1,1,Deprecated.,;java.security.Identity.addCertificate(Certificate),;1
addCertPathChecker,1,1,Adds a PKIXCertPathChecker to the list of certification path checkers. See the setCertPathCheckers method for more details. Note that the PKIXCertPathChecker is cloned to protect against subsequent modifications.,;java.security.cert.PKIXParameters.addCertPathChecker(PKIXCertPathChecker),;1
addCertStore,1,1,Adds a CertStore to the end of the list of CertStores used in finding certificates and CRLs.,;java.security.cert.PKIXParameters.addCertStore(CertStore),;1
addChildElement,1,1,Adds an existing element to the list of legal children for a given parent node type.,";javax.imageio.metadata.IIOMetadataFormatImpl.addChildElement(String,String)",;1
addChoosableFileFilter,1,1,"Adds a filter to the list of user choosable file filters. For information on setting the file selection mode, see setFileSelectionMode.",;javax.swing.JFileChooser.addChoosableFileFilter(FileFilter),;1
addChooserPanel,1,1,Adds a color chooser panel to the color chooser.,;javax.swing.JColorChooser.addChooserPanel(AbstractColorChooserPanel),;1
addColumnModelListener,1,1,Adds a listener for table column model events.,;javax.swing.table.DefaultTableColumnModel.addColumnModelListener(TableColumnModelListener),;1
addColumnSelectionInterval,1,1,"Adds the columns from index0 to index1, inclusive, to the current selection.",";javax.swing.JTable.addColumnSelectionInterval(int,int)",;1
addComponentListener,1,1,"Adds the specified component listener to receive component events from this component. If listener l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Component.addComponentListener(ComponentListener),;1
addConnectionNotificationListener,1,1,Description copied from interface:JMXConnector,";javax.management.remote.rmi.RMIConnector.addConnectionNotificationListener(NotificationListener,NotificationFilter,Object)",;1
addContainerListener,1,1,"Adds the specified container listener to receive container events from this container. If l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Container.addContainerListener(ContainerListener),;1
addCSSAttribute,1,1,Adds a CSS attribute to the given set.,";javax.swing.text.html.StyleSheet.addCSSAttribute(MutableAttributeSet,CSS.Attribute,String)",;1
addCSSAttributeFromHTML,1,1,Adds a CSS attribute to the given set.,";javax.swing.text.html.StyleSheet.addCSSAttributeFromHTML(MutableAttributeSet,CSS.Attribute,String)",;1
addDragGestureListener,1,1,Register a new DragGestureListener.,;java.awt.dnd.DragGestureRecognizer.addDragGestureListener(DragGestureListener),;1
addDragSourceMotionListener,1,1,"Adds the specified DragSourceMotionListener to this DragSource to receive drag motion events during drag operations intiated with this DragSource. If a null listener is specified, no action is taken and no exception is thrown.",;java.awt.dnd.DragSource.addDragSourceMotionListener(DragSourceMotionListener),;1
addDropTargetListener,1,1,Adds a new DropTargetListener (UNICAST SOURCE).,;java.awt.dnd.DropTarget.addDropTargetListener(DropTargetListener),;1
addEditor,1,1,This public method is implementation specific and should be private. do not call or override. To implement a specific editor create a custom ComboBoxEditor,;javax.swing.plaf.basic.BasicComboBoxUI.addEditor(),;1
addFlavorForUnencodedNative,1,1,"Adds a mapping from a single String native to a single DataFlavor. Unlike getFlavorsForNative, the mapping will only be established in one direction, and the native will not be encoded. To establish a two-way mapping, call addUnencodedNativeForFlavor as well. The new mapping will be of lower priority than any existing mapping. This method has no effect if a mapping from the specified String native to the specified or equal DataFlavor already exists.",";java.awt.datatransfer.SystemFlavorMap.addFlavorForUnencodedNative(String,DataFlavor)",;1
addFlavorListener,1,1,"Registers the specified FlavorListener to receive FlavorEvents from this clipboard. If listener is null, no exception is thrown and no action is performed.",;java.awt.datatransfer.Clipboard.addFlavorListener(FlavorListener),;1
addFocusListener,1,1,"Adds the specified focus listener to receive focus events from this component when this component gains input focus. If listener l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Component.addFocusListener(FocusListener),;1
addHandler,1,1,"Add a log Handler to receive logging messages. By default, Loggers also send their output to their parent logger. Typically the root Logger is configured with a set of Handlers that essentially act as default handlers for all loggers.",;java.util.logging.Logger.addHandler(Handler),;1
addHandshakeCompletedListener,1,1,Registers an event listener to receive notifications that an SSL handshake has completed on this connection.,;javax.net.ssl.SSLSocket.addHandshakeCompletedListener(HandshakeCompletedListener),;1
addHeader,1,1,Adds a MimeHeader object with the specified name and value to this MimeHeaders object's list of headers. Note that RFC822 headers can contain only US-ASCII characters.,";javax.xml.soap.MimeHeaders.addHeader(String,String)",;1
addHierarchyBoundsListener,1,1,"Adds the specified hierarchy bounds listener to receive hierarchy bounds events from this component when the hierarchy to which this container belongs changes. If listener l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Component.addHierarchyBoundsListener(HierarchyBoundsListener),;1
addHierarchyListener,1,1,"Adds the specified hierarchy listener to receive hierarchy changed events from this component when the hierarchy to which this container belongs changes. If listener l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Component.addHierarchyListener(HierarchyListener),;1
addHighlight,1,1,Adds a highlight to the view. Returns a tag that can be used to refer to the highlight.,";javax.swing.text.DefaultHighlighter.addHighlight(int,int,Highlighter.HighlightPainter)",;1
addHyperlinkListener,1,1,"Adds a hyperlink listener for notification of any changes, for example when a link is selected and entered.",;javax.swing.JEditorPane.addHyperlinkListener(HyperlinkListener),;1
addIcon,1,1,Creates and adds a JLabel representing the icon returned from getIcon to top. This is messaged from createMessageArea,;javax.swing.plaf.basic.BasicOptionPaneUI.addIcon(Container),;1
addIdentity,1,1,Deprecated.,;java.security.IdentityScope.addIdentity(Identity),;1
addIfAbsent,1,1,"Appends the element, if not present.",;java.util.concurrent.CopyOnWriteArrayList.addIfAbsent(E),;1
addIIOReadProgressListener,1,1,"Adds an IIOReadProgressListener to the list of registered progress listeners. If listener is null, no exception will be thrown and no action will be taken.",;javax.imageio.ImageReader.addIIOReadProgressListener(IIOReadProgressListener),;1
addIIOReadUpdateListener,1,1,"Adds an IIOReadUpdateListener to the list of registered update listeners. If listener is null, no exception will be thrown and no action will be taken. The listener will receive notification of pixel updates as images and thumbnails are decoded, including the starts and ends of progressive passes. If no update listeners are present, the reader may choose to perform fewer updates to the pixels of the destination images and/or thumbnails, which may result in more efficient decoding. For example, in progressive JPEG decoding each pass contains updates to a set of coefficients, which would have to be transformed into pixel values and converted to an RGB color space for each pass if listeners are present. If no listeners are present, the coefficients may simply be accumulated and the final results transformed and color converted one time only. The final results of decoding will be the same whether or not intermediate updates are performed. Thus if only the final image is desired it may be preferable not to register any IIOReadUpdateListeners. In general, progressive updating is most effective when fetching images over a network connection that is very slow compared to local CPU processing; over a fast connection, progressive updates may actually slow down the presentation of the image.",;javax.imageio.ImageReader.addIIOReadUpdateListener(IIOReadUpdateListener),;1
addIIOReadWarningListener,1,1,"Adds an IIOReadWarningListener to the list of registered warning listeners. If listener is null, no exception will be thrown and no action will be taken. Messages sent to the given listener will be localized, if possible, to match the current Locale. If no Locale has been set, warning messages may be localized as the reader sees fit.",;javax.imageio.ImageReader.addIIOReadWarningListener(IIOReadWarningListener),;1
addIIOWriteProgressListener,1,1,"Adds an IIOWriteProgressListener to the list of registered progress listeners. If listener is null, no exception will be thrown and no action will be taken.",;javax.imageio.ImageWriter.addIIOWriteProgressListener(IIOWriteProgressListener),;1
addIIOWriteWarningListener,1,1,"Adds an IIOWriteWarningListener to the list of registered warning listeners. If listener is null, no exception will be thrown and no action will be taken. Messages sent to the given listener will be localized, if possible, to match the current Locale. If no Locale has been set, warning messages may be localized as the writer sees fit.",;javax.imageio.ImageWriter.addIIOWriteWarningListener(IIOWriteWarningListener),;1
addInternal,1,1,"Returns the resulting multicast listener from adding listener-a and listener-b together. If listener-a is null, it returns listener-b; If listener-b is null, it returns listener-a If neither are null, then it creates and returns a new AWTEventMulticaster instance which chains a with b.",";java.awt.AWTEventMulticaster.addInternal(EventListener,EventListener)",;1
addInternalFrameListener,1,1,Adds the specified listener to receive internal frame events from this internal frame.,;javax.swing.JInternalFrame.addInternalFrameListener(InternalFrameListener),;1
addInvalidComponent,1,1,Mark the component as in need of layout and queue a runnable for the event dispatching thread that will validate the components first isValidateRoot() ancestor.,;javax.swing.RepaintManager.addInvalidComponent(JComponent),;1
addIssuer,1,1,"Adds a name to the issuerNames criterion. The issuer distinguished name in the X509CRL must match at least one of the specified distinguished names. This method allows the caller to add a name to the set of issuer names which X509CRLs may contain. The specified name is added to any previous value for the issuerNames criterion. If the specified name is a duplicate, it may be ignored.",;java.security.cert.X509CRLSelector.addIssuer(X500Principal),;1
addKeyEventDispatcher,1,1,"Adds a KeyEventDispatcher to this KeyboardFocusManager's dispatcher chain. This KeyboardFocusManager will request that each KeyEventDispatcher dispatch KeyEvents generated by the user before finally dispatching the KeyEvent itself. KeyEventDispatchers will be notified in the order in which they were added. Notifications will halt as soon as one KeyEventDispatcher returns true from its dispatchKeyEvent method. There is no limit to the total number of KeyEventDispatchers which can be added, nor to the number of times which a particular KeyEventDispatcher instance can be added. If a null dispatcher is specified, no action is taken and no exception is thrown. In a multithreaded application, KeyEventDispatcher behaves the same as other AWT listeners. See AWT Threading Issues for more details.",;java.awt.KeyboardFocusManager.addKeyEventDispatcher(KeyEventDispatcher),;1
addKeyEventPostProcessor,1,1,"Adds a KeyEventPostProcessor to this KeyboardFocusManager's post- processor chain. After a KeyEvent has been dispatched to and handled by its target, KeyboardFocusManager will request that each KeyEventPostProcessor perform any necessary post-processing as part of the KeyEvent's final resolution. KeyEventPostProcessors will be notified in the order in which they were added; the current KeyboardFocusManager will be notified last. Notifications will halt as soon as one KeyEventPostProcessor returns true from its postProcessKeyEvent method. There is no limit to the the total number of KeyEventPostProcessors that can be added, nor to the number of times that a particular KeyEventPostProcessor instance can be added. If a null post-processor is specified, no action is taken and no exception is thrown. In a multithreaded application, KeyEventPostProcessor behaves the same as other AWT listeners. See AWT Threading Issues for more details.",;java.awt.KeyboardFocusManager.addKeyEventPostProcessor(KeyEventPostProcessor),;1
addKeyListener,1,1,"Adds the specified key listener to receive key events from this component. If l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Component.addKeyListener(KeyListener),;1
addKeymap,1,1,Adds a new keymap into the keymap hierarchy. Keymap bindings resolve from bottom up so an attribute specified in a child will override an attribute specified in the parent.,";javax.swing.text.JTextComponent.addKeymap(String,Keymap)",;1
addListDataListener,1,1,Adds a listener to the list that's notified each time a change to the data model occurs.,;javax.swing.AbstractListModel.addListDataListener(ListDataListener),;1
addLogger,1,1,Add a named logger. This does nothing and returns false if a logger with the same name is already registered. The Logger factory methods call this method to register each newly created Logger. The application should retain its own reference to the Logger object to avoid it being garbage collected. The LogManager may only retain a weak reference.,;java.util.logging.LogManager.addLogger(Logger),;1
addMailcap,1,1,Add entries to the registry. Programmatically added entries are searched before other entries. The string that is passed in should be in mailcap format.,;javax.activation.MailcapCommandMap.addMailcap(String),;1
addMenuDragMouseListener,1,1,Adds a MenuDragMouseListener to the menu item.,;javax.swing.JMenuItem.addMenuDragMouseListener(MenuDragMouseListener),;1
addMenuListener,1,1,Adds a listener for menu events.,;javax.swing.JMenu.addMenuListener(MenuListener),;1
addMessageComponents,1,1,"Creates the appropriate object to represent msg and places it into container. If msg is an instance of Component, it is added directly, if it is an Icon, a JLabel is created to represent it, otherwise a JLabel is created for the string, if d is an Object[], this method will be recursively invoked for the children. internallyCreated is true if Objc is an instance of Component and was created internally by this method (this is used to correctly set hasCustomComponents only if !internallyCreated).",";javax.swing.plaf.basic.BasicOptionPaneUI.addMessageComponents(Container,GridBagConstraints,Object,int,boolean)",;1
addMimeTypes,1,1,Prepend the MIME type values to the registry.,;javax.activation.MimetypesFileTypeMap.addMimeTypes(String),;1
addMouseWheelListener,1,1,"Adds the specified mouse wheel listener to receive mouse wheel events from this component. Containers also receive mouse wheel events from sub-components. For information on how mouse wheel events are dispatched, see the class description for MouseWheelEvent. If l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Component.addMouseWheelListener(MouseWheelListener),;1
addObservedObject,1,1,"Adds the specified object in the set of observed MBeans, if this object is not already present.",;javax.management.monitor.Monitor.addObservedObject(ObjectName),;1
addObserver,1,1,"Adds an observer to the set of observers for this object, provided that it is not the same as some observer already in the set. The order in which notifications will be delivered to multiple observers is not specified. See the class comment.",;java.util.Observable.addObserver(Observer),;1
addPoint,1,1,"Appends the specified coordinates to this Polygon. If an operation that calculates the bounding box of this Polygon has already been performed, such as getBounds or contains, then this method updates the bounding box.",";java.awt.Polygon.addPoint(int,int)",;1
addProvider,1,1,"Adds a provider to the next position available. If there is a security manager, the SecurityManager.checkSecurityAccess(java.lang.String) method is called with the ""insertProvider"" permission target name to see if it's ok to add a new provider. If this permission check is denied, checkSecurityAccess is called again with the ""insertProvider.""+provider.getName() permission target name. If both checks are denied, a SecurityException is thrown.",;java.security.Security.addProvider(Provider),;1
addProviderAtEnd,1,1,"This method is used to indicate to the GSSManager that the application would like a particular provider to be used if no other provider can be found that supports the given mechanism. When a value of null is used instead of an Oid for the mechanism, the GSSManager must use the indicated provider for any mechanism. Calling this method repeatedly preserves the older settings but raises them above newer ones in preference thus forming an ordered list of providers and Oid pairs that grows at the bottom. Thus the older provider settings will be utilized first before this one is. If there are any previously existing preferences that conflict with the preference being set here, then the GSSManager should ignore this request. If the GSSManager implementation does not support an SPI with a pluggable provider architecture it should throw a GSSException with the status code GSSException.UNAVAILABLE to indicate that the operation is unavailable. Suppose an application desired that when a mechanism of Oid m1 is needed the system default providers always be checked first, and only when they do not support m1 should a provider A be checked. It would then make the call: GSSManager mgr = GSSManager.getInstance(); mgr.addProviderAtEnd(A, m1); Now, if it also desired that for all mechanisms the provider B be checked after all configured providers have been checked, it would then call: mgr.addProviderAtEnd(B, null); Effectively the list of preferences now becomes {..., (A, m1), (B, null)}. Suppose at a later time the following call is made to the same GSSManager instance: mgr.addProviderAtEnd(B, m2) then the previous setting with the pair (B, null) subsumes this and therefore this request should be ignored. The same would happen if a request is made for the already existing pairs of (A, m1) or (B, null). Please note, however, that the following call: mgr.addProviderAtEnd(A, null) is not subsumed by the previous setting of (A, m1) and the list will effectively become {..., (A, m1), (B, null), (A, null)}",";org.ietf.jgss.GSSManager.addProviderAtEnd(Provider,Oid)",;1
addProviderAtFront,1,1,"This method is used to indicate to the GSSManager that the application would like a particular provider to be used ahead of all others when support is desired for the given mechanism. When a value of null is used instead of an Oid for the mechanism, the GSSManager must use the indicated provider ahead of all others no matter what the mechanism is. Only when the indicated provider does not support the needed mechanism should the GSSManager move on to a different provider. Calling this method repeatedly preserves the older settings but lowers them in preference thus forming an ordered list of provider and Oid pairs that grows at the top. Calling addProviderAtFront with a null Oid will remove all previous preferences that were set for this provider in the GSSManager instance. Calling addProviderAtFront with a non-null Oid will remove any previous preference that was set using this mechanism and this provider together. If the GSSManager implementation does not support an SPI with a pluggable provider architecture it should throw a GSSException with the status code GSSException.UNAVAILABLE to indicate that the operation is unavailable. Suppose an application desired that the provider A always be checked first when any mechanism is needed, it would call: GSSManager mgr = GSSManager.getInstance(); // mgr may at this point have its own pre-configured list // of provider preferences. The following will prepend to // any such list: mgr.addProviderAtFront(A, null); Now if it also desired that the mechanism of Oid m1 always be obtained from the provider B before the previously set A was checked, it would call: mgr.addProviderAtFront(B, m1); The GSSManager would then first check with B if m1 was needed. In case B did not provide support for m1, the GSSManager would continue on to check with A. If any mechanism m2 is needed where m2 is different from m1 then the GSSManager would skip B and check with A directly. Suppose at a later time the following call is made to the same GSSManager instance: mgr.addProviderAtFront(B, null) then the previous setting with the pair (B, m1) is subsumed by this and should be removed. Effectively the list of preferences now becomes {(B, null), (A, null), ... //followed by the pre-configured list. Please note, however, that the following call: mgr.addProviderAtFront(A, m3) does not subsume the previous setting of (A, null) and the list will effectively become {(A, m3), (B, null), (A, null), ...}",";org.ietf.jgss.GSSManager.addProviderAtFront(Provider,Oid)",;1
addRelation,1,1,"Adds an MBean created by the user (and registered by him in the MBean Server) as a relation in the Relation Service. To be added as a relation, the MBean must conform to the following: - implement the Relation interface - have for RelationService ObjectName the ObjectName of current Relation Service - have a relation id unique and unused in current Relation Service - have for relation type a relation type created in the Relation Service - have roles conforming to the role info provided in the relation type.",;javax.management.relation.RelationService.addRelation(ObjectName),;1
addRelationType,1,1,Adds given object as a relation type. The object is expected to implement the RelationType interface.,;javax.management.relation.RelationService.addRelationType(RelationType),;1
addRenderingHints,1,1,Sets the values of an arbitrary number of preferences for the rendering algorithms. Only values for the rendering hints that are present in the specified Map object are modified. All other preferences not present in the specified object are left unmodified. Hint categories include controls for rendering quality and overall time/quality trade-off in the rendering process. Refer to the RenderingHints class for definitions of some common keys and values.,";java.awt.Graphics2D.addRenderingHints(Map&lt;?,?&gt;)",;1
addRequestProperty,1,1,Adds a general request property specified by a key-value pair. This method will not overwrite existing values associated with the same key.,";java.net.URLConnection.addRequestProperty(String,String)",;1
addResourceBundle,1,1,"Adds a resource bundle to the list of resource bundles that are searched for localized values. Resource bundles are searched in the reverse order they were added. In other words, the most recently added bundle is searched first.",;javax.swing.UIDefaults.addResourceBundle(String),;1
addResponseHeader,1,1,Adds a response header with the given name and value. This method allows a response header to have multiple values. This is a convenience method to add a response header(instead of using the getResponseHeaders()).,";javax.xml.ws.spi.http.HttpExchange.addResponseHeader(String,String)",;1
addRoleInfo,1,1,"Add a role info. This method of course should not be used after the creation of the relation type, because updating it would invalidate that the relations created associated to that type still conform to it. Can throw a RuntimeException if trying to update a relation type declared in the Relation Service.",;javax.management.relation.RelationTypeSupport.addRoleInfo(RoleInfo),;1
addRowSelectionInterval,1,1,"Adds the rows from index0 to index1, inclusive, to the current selection.",";javax.swing.JTable.addRowSelectionInterval(int,int)",;1
addRowSetListener,1,1,"The listener will be notified whenever an event occurs on this RowSet object. A listener might, for example, be a table or graph that needs to be updated in order to accurately reflect the current state of the RowSet object. Note: if the RowSetListener object is null, this method silently discards the null value and does not add a null reference to the set of listeners. Note: if the listener is already set, and the new RowSetListerner instance is added to the set of listeners already registered to receive event notifications from this RowSet.",;javax.sql.rowset.BaseRowSet.addRowSetListener(RowSetListener),;1
addRowSorterListener,1,1,Adds a RowSorterListener to receive notification about this RowSorter. If the same listener is added more than once it will receive multiple notifications. If l is null nothing is done.,;javax.swing.RowSorter.addRowSorterListener(RowSorterListener),;1
addRule,1,1,Adds a set of rules to the sheet. The rules are expected to be in valid CSS format. Typically this would be called as a result of parsing a &lt;style&gt; tag.,;javax.swing.text.html.StyleSheet.addRule(String),;1
addSelectionRow,1,1,Adds the path at the specified row to the current selection.,;javax.swing.JTree.addSelectionRow(int),;1
addSelectionRows,1,1,Adds the paths at each of the specified rows to the current selection.,;javax.swing.JTree.addSelectionRows(int[]),;1
addSingletonComponent,1,1,"Removes an existing component. When a new component, such as the left corner, or vertical scrollbar, is added, the old one, if it exists, must be removed. This method returns newC. If oldC is not equal to newC and is non-null, it will be removed from its parent.",";javax.swing.ScrollPaneLayout.addSingletonComponent(Component,Component)",;1
addStyleSheet,1,1,Adds the rules from the StyleSheet ss to those of the receiver. ss's rules will override the rules of any previously added style sheets. An added StyleSheet will never override the rules of the receiving style sheet.,;javax.swing.text.html.StyleSheet.addStyleSheet(StyleSheet),;1
addSubComponents,1,1,Override the parent's method avoid creating a menu bar. Metal frames do not have system menus.,;javax.swing.plaf.metal.MetalInternalFrameTitlePane.addSubComponents(),;1
addSuppressed,1,1,"Appends the specified exception to the exceptions that were suppressed in order to deliver this exception. This method is thread-safe and typically called (automatically and implicitly) by the try-with-resources statement. The suppression behavior is enabled unless disabled via a constructor. When suppression is disabled, this method does nothing other than to validate its argument. Note that when one exception causes another exception, the first exception is usually caught and then the second exception is thrown in response. In other words, there is a causal connection between the two exceptions. In contrast, there are situations where two independent exceptions can be thrown in sibling code blocks, in particular in the try block of a try-with-resources statement and the compiler-generated finally block which closes the resource. In these situations, only one of the thrown exceptions can be propagated. In the try-with-resources statement, when there are two such exceptions, the exception originating from the try block is propagated and the exception from the finally block is added to the list of exceptions suppressed by the exception from the try block. As an exception unwinds the stack, it can accumulate multiple suppressed exceptions. An exception may have suppressed exceptions while also being caused by another exception. Whether or not an exception has a cause is semantically known at the time of its creation, unlike whether or not an exception will suppress other exceptions which is typically only determined after an exception is thrown. Note that programmer written code is also able to take advantage of calling this method in situations where there are multiple sibling exceptions and only one can be propagated.",;java.lang.Throwable.addSuppressed(Throwable),;1
addSwaRefAttachment,1,1,"Add MIME data as an attachment and return attachment's content-id, cid. This method is called by JAXB marshal process for each element/attribute typed as {http://ws-i.org/profiles/basic/1.1/xsd}swaRef. The MIME-based package processor implementing this method is responsible for attaching the specified data to a MIME attachment, and generating a content-id, cid, that uniquely identifies the attachment within the MIME-based package. Caller inserts the returned content-id, cid, into the XML content being marshalled.",;javax.xml.bind.attachment.AttachmentMarshaller.addSwaRefAttachment(DataHandler),;1
addSystemMenuItems,1,1,Override the parent's method to do nothing. Metal frames do not have system menus.,;javax.swing.plaf.metal.MetalInternalFrameTitlePane.addSystemMenuItems(JMenu),;1
addTableModelListener,1,1,Adds a listener to the list that's notified each time a change to the data model occurs.,;javax.swing.table.AbstractTableModel.addTableModelListener(TableModelListener),;1
addTask,1,1,Add a task that is not needed immediately because the results are not believed to be visible.,;javax.swing.text.LayoutQueue.addTask(Runnable),;1
addTextListener,1,1,"Adds the specified text event listener to receive text events from this text component. If l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.TextComponent.addTextListener(TextListener),;1
addTileObserver,1,1,"Adds a tile observer. If the observer is already present, it receives multiple notifications.",;java.awt.image.BufferedImage.addTileObserver(TileObserver),;1
addToEnvironment,1,1,Description copied from interface:Context,";javax.naming.InitialContext.addToEnvironment(String,Object)",;1
addToPendingCount,1,1,Adds (atomically) the given value to the pending count.,;java.util.concurrent.CountedCompleter.addToPendingCount(int),;1
addTreeExpansionListener,1,1,Adds a listener for TreeExpansion events.,;javax.swing.JTree.addTreeExpansionListener(TreeExpansionListener),;1
addTreeModelListener,1,1,Adds a listener for the TreeModelEvent posted after the tree changes.,;javax.swing.tree.DefaultTreeModel.addTreeModelListener(TreeModelListener),;1
addTreeWillExpandListener,1,1,Adds a listener for TreeWillExpand events.,;javax.swing.JTree.addTreeWillExpandListener(TreeWillExpandListener),;1
addUnencodedNativeForFlavor,1,1,"Adds a mapping from the specified DataFlavor (and all DataFlavors equal to the specified DataFlavor) to the specified String native. Unlike getNativesForFlavor, the mapping will only be established in one direction, and the native will not be encoded. To establish a two-way mapping, call addFlavorForUnencodedNative as well. The new mapping will be of lower priority than any existing mapping. This method has no effect if a mapping from the specified or equal DataFlavor to the specified String native already exists.",";java.awt.datatransfer.SystemFlavorMap.addUnencodedNativeForFlavor(DataFlavor,String)",;1
addUnicodeLocaleAttribute,1,1,"Adds a unicode locale attribute, if not already present, otherwise has no effect. The attribute must not be null and must be well-formed or an exception is thrown.",;java.util.Locale.Builder.addUnicodeLocaleAttribute(String),;1
addWindowFocusListener,1,1,"Adds the specified window focus listener to receive window events from this window. If l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Window.addWindowFocusListener(WindowFocusListener),;1
addWindowListener,1,1,"Adds the specified window listener to receive window events from this window. If l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Window.addWindowListener(WindowListener),;1
addWindowStateListener,1,1,"Adds the specified window state listener to receive window events from this window. If l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Window.addWindowStateListener(WindowStateListener),;1
adjustAllocation,1,1,"Adjusts the allocation given to the view to be a suitable allocation for a text field. If the view has been allocated more than the preferred span vertically, the allocation is changed to be centered vertically. Horizontally the view is adjusted according to the horizontal alignment property set on the associated JTextField (if that is the type of the hosting component).",;javax.swing.text.FieldView.adjustAllocation(Shape),;1
adjustForGravity,1,1,"Adjusts the x, y, width, and height fields to the correct values depending on the constraint geometry and pads. This method should only be used internally by GridBagLayout.",";java.awt.GridBagLayout.adjustForGravity(GridBagConstraints,Rectangle)",;1
AdjustForGravity,1,1,This method is obsolete and supplied for backwards compatibility only; new code should call adjustForGravity instead. This method is the same as adjustForGravity; refer to adjustForGravity for details on parameters.,";java.awt.GridBagLayout.AdjustForGravity(GridBagConstraints,Rectangle)",;1
adjustmentValueChanged,1,1,Handles the adjustmentValueChanged event by invoking the adjustmentValueChanged methods on listener-a and listener-b.,;java.awt.AWTEventMulticaster.adjustmentValueChanged(AdjustmentEvent),;1
adjustRow,1,1,"Adjusts the given row if possible to fit within the layout span. By default this will try to find the highest break weight possible nearest the end of the row. If a forced break is encountered, the break will be positioned there.",";javax.swing.text.FlowView.FlowStrategy.adjustRow(FlowView,int,int,int)",;1
adjustSizes,1,1,Adjust a specified array of sizes by a given amount.,";javax.swing.SizeRequirements.adjustSizes(int,SizeRequirements[])",;1
adjustVisibility,1,1,"Scrolls the associated view (if necessary) to make the caret visible. Since how this should be done is somewhat of a policy, this method can be reimplemented to change the behavior. By default the scrollRectToVisible method is called on the associated component.",;javax.swing.text.DefaultCaret.adjustVisibility(Rectangle),;1
afterExecute,1,1,"Method invoked upon completion of execution of the given Runnable. This method is invoked by the thread that executed the task. If non-null, the Throwable is the uncaught RuntimeException or Error that caused execution to terminate abruptly. This implementation does nothing, but may be customized in subclasses. Note: To properly nest multiple overridings, subclasses should generally invoke super.afterExecute at the beginning of this method. Note: When actions are enclosed in tasks (such as FutureTask) either explicitly or via methods such as submit, these task objects catch and maintain computational exceptions, and so they do not cause abrupt termination, and the internal exceptions are not passed to this method. If you would like to trap both kinds of failures in this method, you can further probe for such cases, as in this sample subclass that prints either the direct cause or the underlying exception if a task has been aborted: class ExtendedExecutor extends ThreadPoolExecutor { // ... protected void afterExecute(Runnable r, Throwable t) { super.afterExecute(r, t); if (t == null &amp;&amp; r instanceof Future&lt;?&gt;) { try { Object result = ((Future&lt;?&gt;) r).get(); } catch (CancellationException ce) { t = ce; } catch (ExecutionException ee) { t = ee.getCause(); } catch (InterruptedException ie) { Thread.currentThread().interrupt(); // ignore/reset } } if (t != null) System.out.println(t); } }",";java.util.concurrent.ThreadPoolExecutor.afterExecute(Runnable,Throwable)",;1
afterMarshal,1,1,"Callback method invoked after marshalling source to XML. This method is invoked after source and all its descendants have been marshalled. Note that if the class of source defines its own afterMarshal method, the class specific callback method is invoked just before this method is invoked.",;javax.xml.bind.Marshaller.Listener.afterMarshal(Object),;1
afterOffset,1,1,"Creates a TextHitInfo at the specified offset, associated with the character after the offset.",;java.awt.font.TextHitInfo.afterOffset(int),;1
afterUnmarshal,1,1,"Callback method invoked after unmarshalling XML data into target. This method is invoked after all the properties (except IDREF) are unmarshalled into target, but before target is set into its parent object. Note that if the class of target defines its own afterUnmarshal method, the class specific callback method is invoked before this method is invoked.",";javax.xml.bind.Unmarshaller.Listener.afterUnmarshal(Object,Object)",;1
allocateArray,1,1,Allocate an array to store items of the type appropriate (which is determined by the subclass).,;javax.swing.text.GapContent.allocateArray(int),;1
allocateDirect,1,1,"Allocates a new direct byte buffer. The new buffer's position will be zero, its limit will be its capacity, its mark will be undefined, and each of its elements will be initialized to zero. Whether or not it has a backing array is unspecified.",;java.nio.ByteBuffer.allocateDirect(int),;1
allowCoreThreadTimeOut,1,1,"Sets the policy governing whether core threads may time out and terminate if no tasks arrive within the keep-alive time, being replaced if needed when new tasks arrive. When false, core threads are never terminated due to lack of incoming tasks. When true, the same keep-alive policy applying to non-core threads applies also to core threads. To avoid continual thread replacement, the keep-alive time must be greater than zero when setting true. This method should in general be called before the pool is actively used.",;java.util.concurrent.ThreadPoolExecutor.allowCoreThreadTimeOut(boolean),;1
allowMultipleSelections,1,1,Get the boolean determining whether multiple selections from the choices list are allowed.,;javax.security.auth.callback.ChoiceCallback.allowMultipleSelections(),;1
allowsCoreThreadTimeOut,1,1,"Returns true if this pool allows core threads to time out and terminate if no tasks arrive within the keepAlive time, being replaced if needed when new tasks arrive. When true, the same keep-alive policy applying to non-core threads applies also to core threads. When false (the default), core threads are never terminated due to lack of incoming tasks.",;java.util.concurrent.ThreadPoolExecutor.allowsCoreThreadTimeOut(),;1
allowsMultipleSelections,1,1,"Deprecated.As of JDK version 1.1, replaced by isMultipleMode().",;java.awt.List.allowsMultipleSelections(),;1
allowThreadSuspension,1,1,"Deprecated.The definition of this call depends on suspend(), which is deprecated. Further, the behavior of this call was never specified.",;java.lang.ThreadGroup.allowThreadSuspension(boolean),;1
andFilter,1,1,"Returns a RowFilter that includes entries if all of the supplied filters include the entry. The following example creates a RowFilter that will include any entries containing the string ""foo"" and the string ""bar"": List&lt;RowFilter&lt;Object,Object&gt;&gt; filters = new ArrayList&lt;RowFilter&lt;Object,Object&gt;&gt;(2); filters.add(RowFilter.regexFilter(""foo"")); filters.add(RowFilter.regexFilter(""bar"")); RowFilter&lt;Object,Object&gt; fooBarFilter = RowFilter.andFilter(filters);",";javax.swing.RowFilter.andFilter(Iterable&lt;?,?)",;1
annotateClass,1,1,"Subclasses may implement this method to allow class data to be stored in the stream. By default this method does nothing. The corresponding method in ObjectInputStream is resolveClass. This method is called exactly once for each unique class in the stream. The class name and signature will have already been written to the stream. This method may make free use of the ObjectOutputStream to save any representation of the class it deems suitable (for example, the bytes of the class file). The resolveClass method in the corresponding subclass of ObjectInputStream must read and use any data or objects written by annotateClass.",;java.io.ObjectOutputStream.annotateClass(Class&lt;?&gt;),;1
annotateProxyClass,1,1,"Subclasses may implement this method to store custom data in the stream along with descriptors for dynamic proxy classes. This method is called exactly once for each unique proxy class descriptor in the stream. The default implementation of this method in ObjectOutputStream does nothing. The corresponding method in ObjectInputStream is resolveProxyClass. For a given subclass of ObjectOutputStream that overrides this method, the resolveProxyClass method in the corresponding subclass of ObjectInputStream must read any data or objects written by annotateProxyClass.",;java.io.ObjectOutputStream.annotateProxyClass(Class&lt;?&gt;),;1
anyOf,1,1,"Returns a new CompletableFuture that is completed when any of the given CompletableFutures complete, with the same result. Otherwise, if it completed exceptionally, the returned CompletableFuture also does so, with a CompletionException holding this exception as its cause. If no CompletableFutures are provided, returns an incomplete CompletableFuture.",;java.util.concurrent.CompletableFuture.anyOf(CompletableFuture&lt;?&gt;...),;1
anySubString,1,1,Returns a query expression that represents a matching constraint on a string argument. The value must contain the given literal string value.,";javax.management.Query.anySubString(AttributeValueExp,StringValueExp)",;1
appendChild,1,1,Adds the node newChild to the end of the list of children of this node.,;javax.imageio.metadata.IIOMetadataNode.appendChild(Node),;1
appendChronologyId,1,1,"Appends the chronology ID, such as 'ISO' or 'ThaiBuddhist', to the formatter. This appends an instruction to format/parse the chronology ID to the builder. During formatting, the chronology is obtained using a mechanism equivalent to querying the temporal with TemporalQueries.chronology(). It will be printed using the result of Chronology.getId(). If the chronology cannot be obtained then an exception is thrown unless the section of the formatter is optional. During parsing, the chronology is parsed and must match one of the chronologies in Chronology.getAvailableChronologies(). If the chronology cannot be parsed then an exception is thrown unless the section of the formatter is optional. The parser uses the case sensitive setting.",;java.time.format.DateTimeFormatterBuilder.appendChronologyId(),;1
appendChronologyText,1,1,Appends the chronology name to the formatter. The calendar system name will be output during a format. If the chronology cannot be obtained then an exception will be thrown.,;java.time.format.DateTimeFormatterBuilder.appendChronologyText(TextStyle),;1
appendEvent,1,1,Listeners registered on the Component by this Recognizer shall record all Events that are recognized as part of the series of Events that go to comprise a Drag and Drop initiating gesture via this API. This method is used by a DragGestureRecognizer implementation to add an InputEvent subclass (that it believes is one in a series of events that comprise a Drag and Drop operation) to the array of events that this DragGestureRecognizer maintains internally.,;java.awt.dnd.DragGestureRecognizer.appendEvent(InputEvent),;1
appendFraction,1,1,"Appends the fractional value of a date-time field to the formatter. The fractional value of the field will be output including the preceding decimal point. The preceding value is not output. For example, the second-of-minute value of 15 would be output as .25. The width of the printed fraction can be controlled. Setting the minimum width to zero will cause no output to be generated. The printed fraction will have the minimum width necessary between the minimum and maximum widths - trailing zeroes are omitted. No rounding occurs due to the maximum width - digits are simply dropped. When parsing in strict mode, the number of parsed digits must be between the minimum and maximum width. When parsing in lenient mode, the minimum width is considered to be zero and the maximum is nine. If the value cannot be obtained then an exception will be thrown. If the value is negative an exception will be thrown. If the field does not have a fixed set of valid values then an exception will be thrown. If the field value in the date-time to be printed is invalid it cannot be printed and an exception will be thrown.",";java.time.format.DateTimeFormatterBuilder.appendFraction(TemporalField,int,int,boolean)",;1
appendOffsetId,1,1,"Appends the zone offset, such as '+01:00', to the formatter. This appends an instruction to format/parse the offset ID to the builder. This is equivalent to calling appendOffset(""+HH:MM:ss"", ""Z"").",;java.time.format.DateTimeFormatterBuilder.appendOffsetId(),;1
appendOptional,1,1,"Appends a formatter to the builder which will optionally format/parse. This method has the same effect as appending each of the constituent parts directly to this builder surrounded by an optionalStart() and optionalEnd(). The formatter will format if data is available for all the fields contained within it. The formatter will parse if the string matches, otherwise no error is returned.",;java.time.format.DateTimeFormatterBuilder.appendOptional(DateTimeFormatter),;1
appendPattern,1,1,"Appends the elements defined by the specified pattern to the builder. All letters 'A' to 'Z' and 'a' to 'z' are reserved as pattern letters. The characters '#', '{' and '}' are reserved for future use. The characters '[' and ']' indicate optional patterns. The following pattern letters are defined: Symbol Meaning Presentation Examples ------ ------- ------------ ------- G era text AD; Anno Domini; A u year year 2004; 04 y year-of-era year 2004; 04 D day-of-year number 189 M/L month-of-year number/text 7; 07; Jul; July; J d day-of-month number 10 Q/q quarter-of-year number/text 3; 03; Q3; 3rd quarter Y week-based-year year 1996; 96 w week-of-week-based-year number 27 W week-of-month number 4 E day-of-week text Tue; Tuesday; T e/c localized day-of-week number/text 2; 02; Tue; Tuesday; T F week-of-month number 3 a am-pm-of-day text PM h clock-hour-of-am-pm (1-12) number 12 K hour-of-am-pm (0-11) number 0 k clock-hour-of-am-pm (1-24) number 0 H hour-of-day (0-23) number 0 m minute-of-hour number 30 s second-of-minute number 55 S fraction-of-second fraction 978 A milli-of-day number 1234 n nano-of-second number 987654321 N nano-of-day number 1234000000 V time-zone ID zone-id America/Los_Angeles; Z; -08:30 z time-zone name zone-name Pacific Standard Time; PST O localized zone-offset offset-O GMT+8; GMT+08:00; UTC-08:00; X zone-offset 'Z' for zero offset-X Z; -08; -0830; -08:30; -083015; -08:30:15; x zone-offset offset-x +0000; -08; -0830; -08:30; -083015; -08:30:15; Z zone-offset offset-Z +0000; -0800; -08:00; p pad next pad modifier 1 ' escape for text delimiter '' single quote literal ' [ optional section start ] optional section end # reserved for future use { reserved for future use } reserved for future use The count of pattern letters determine the format. See DateTimeFormatter for a user-focused description of the patterns. The following tables define how the pattern letters map to the builder. Date fields: Pattern letters to output a date. Pattern Count Equivalent builder methods ------- ----- -------------------------- G 1 appendText(ChronoField.ERA, TextStyle.SHORT) GG 2 appendText(ChronoField.ERA, TextStyle.SHORT) GGG 3 appendText(ChronoField.ERA, TextStyle.SHORT) GGGG 4 appendText(ChronoField.ERA, TextStyle.FULL) GGGGG 5 appendText(ChronoField.ERA, TextStyle.NARROW) u 1 appendValue(ChronoField.YEAR, 1, 19, SignStyle.NORMAL); uu 2 appendValueReduced(ChronoField.YEAR, 2, 2000); uuu 3 appendValue(ChronoField.YEAR, 3, 19, SignStyle.NORMAL); u..u 4..n appendValue(ChronoField.YEAR, n, 19, SignStyle.EXCEEDS_PAD); y 1 appendValue(ChronoField.YEAR_OF_ERA, 1, 19, SignStyle.NORMAL); yy 2 appendValueReduced(ChronoField.YEAR_OF_ERA, 2, 2000); yyy 3 appendValue(ChronoField.YEAR_OF_ERA, 3, 19, SignStyle.NORMAL); y..y 4..n appendValue(ChronoField.YEAR_OF_ERA, n, 19, SignStyle.EXCEEDS_PAD); Y 1 append special localized WeekFields element for numeric week-based-year YY 2 append special localized WeekFields element for reduced numeric week-based-year 2 digits; YYY 3 append special localized WeekFields element for numeric week-based-year (3, 19, SignStyle.NORMAL); Y..Y 4..n append special localized WeekFields element for numeric week-based-year (n, 19, SignStyle.EXCEEDS_PAD); Q 1 appendValue(IsoFields.QUARTER_OF_YEAR); QQ 2 appendValue(IsoFields.QUARTER_OF_YEAR, 2); QQQ 3 appendText(IsoFields.QUARTER_OF_YEAR, TextStyle.SHORT) QQQQ 4 appendText(IsoFields.QUARTER_OF_YEAR, TextStyle.FULL) QQQQQ 5 appendText(IsoFields.QUARTER_OF_YEAR, TextStyle.NARROW) q 1 appendValue(IsoFields.QUARTER_OF_YEAR); qq 2 appendValue(IsoFields.QUARTER_OF_YEAR, 2); qqq 3 appendText(IsoFields.QUARTER_OF_YEAR, TextStyle.SHORT_STANDALONE) qqqq 4 appendText(IsoFields.QUARTER_OF_YEAR, TextStyle.FULL_STANDALONE) qqqqq 5 appendText(IsoFields.QUARTER_OF_YEAR, TextStyle.NARROW_STANDALONE) M 1 appendValue(ChronoField.MONTH_OF_YEAR); MM 2 appendValue(ChronoField.MONTH_OF_YEAR, 2); MMM 3 appendText(ChronoField.MONTH_OF_YEAR, TextStyle.SHORT) MMMM 4 appendText(ChronoField.MONTH_OF_YEAR, TextStyle.FULL) MMMMM 5 appendText(ChronoField.MONTH_OF_YEAR, TextStyle.NARROW) L 1 appendValue(ChronoField.MONTH_OF_YEAR); LL 2 appendValue(ChronoField.MONTH_OF_YEAR, 2); LLL 3 appendText(ChronoField.MONTH_OF_YEAR, TextStyle.SHORT_STANDALONE) LLLL 4 appendText(ChronoField.MONTH_OF_YEAR, TextStyle.FULL_STANDALONE) LLLLL 5 appendText(ChronoField.MONTH_OF_YEAR, TextStyle.NARROW_STANDALONE) w 1 append special localized WeekFields element for numeric week-of-year ww 2 append special localized WeekFields element for numeric week-of-year, zero-padded W 1 append special localized WeekFields element for numeric week-of-month d 1 appendValue(ChronoField.DAY_OF_MONTH) dd 2 appendValue(ChronoField.DAY_OF_MONTH, 2) D 1 appendValue(ChronoField.DAY_OF_YEAR) DD 2 appendValue(ChronoField.DAY_OF_YEAR, 2) DDD 3 appendValue(ChronoField.DAY_OF_YEAR, 3) F 1 appendValue(ChronoField.ALIGNED_DAY_OF_WEEK_IN_MONTH) E 1 appendText(ChronoField.DAY_OF_WEEK, TextStyle.SHORT) EE 2 appendText(ChronoField.DAY_OF_WEEK, TextStyle.SHORT) EEE 3 appendText(ChronoField.DAY_OF_WEEK, TextStyle.SHORT) EEEE 4 appendText(ChronoField.DAY_OF_WEEK, TextStyle.FULL) EEEEE 5 appendText(ChronoField.DAY_OF_WEEK, TextStyle.NARROW) e 1 append special localized WeekFields element for numeric day-of-week ee 2 append special localized WeekFields element for numeric day-of-week, zero-padded eee 3 appendText(ChronoField.DAY_OF_WEEK, TextStyle.SHORT) eeee 4 appendText(ChronoField.DAY_OF_WEEK, TextStyle.FULL) eeeee 5 appendText(ChronoField.DAY_OF_WEEK, TextStyle.NARROW) c 1 append special localized WeekFields element for numeric day-of-week ccc 3 appendText(ChronoField.DAY_OF_WEEK, TextStyle.SHORT_STANDALONE) cccc 4 appendText(ChronoField.DAY_OF_WEEK, TextStyle.FULL_STANDALONE) ccccc 5 appendText(ChronoField.DAY_OF_WEEK, TextStyle.NARROW_STANDALONE) Time fields: Pattern letters to output a time. Pattern Count Equivalent builder methods ------- ----- -------------------------- a 1 appendText(ChronoField.AMPM_OF_DAY, TextStyle.SHORT) h 1 appendValue(ChronoField.CLOCK_HOUR_OF_AMPM) hh 2 appendValue(ChronoField.CLOCK_HOUR_OF_AMPM, 2) H 1 appendValue(ChronoField.HOUR_OF_DAY) HH 2 appendValue(ChronoField.HOUR_OF_DAY, 2) k 1 appendValue(ChronoField.CLOCK_HOUR_OF_DAY) kk 2 appendValue(ChronoField.CLOCK_HOUR_OF_DAY, 2) K 1 appendValue(ChronoField.HOUR_OF_AMPM) KK 2 appendValue(ChronoField.HOUR_OF_AMPM, 2) m 1 appendValue(ChronoField.MINUTE_OF_HOUR) mm 2 appendValue(ChronoField.MINUTE_OF_HOUR, 2) s 1 appendValue(ChronoField.SECOND_OF_MINUTE) ss 2 appendValue(ChronoField.SECOND_OF_MINUTE, 2) S..S 1..n appendFraction(ChronoField.NANO_OF_SECOND, n, n, false) A 1 appendValue(ChronoField.MILLI_OF_DAY) A..A 2..n appendValue(ChronoField.MILLI_OF_DAY, n) n 1 appendValue(ChronoField.NANO_OF_SECOND) n..n 2..n appendValue(ChronoField.NANO_OF_SECOND, n) N 1 appendValue(ChronoField.NANO_OF_DAY) N..N 2..n appendValue(ChronoField.NANO_OF_DAY, n) Zone ID: Pattern letters to output ZoneId. Pattern Count Equivalent builder methods ------- ----- -------------------------- VV 2 appendZoneId() z 1 appendZoneText(TextStyle.SHORT) zz 2 appendZoneText(TextStyle.SHORT) zzz 3 appendZoneText(TextStyle.SHORT) zzzz 4 appendZoneText(TextStyle.FULL) Zone offset: Pattern letters to output ZoneOffset. Pattern Count Equivalent builder methods ------- ----- -------------------------- O 1 appendLocalizedOffsetPrefixed(TextStyle.SHORT); OOOO 4 appendLocalizedOffsetPrefixed(TextStyle.FULL); X 1 appendOffset(""+HHmm"",""Z"") XX 2 appendOffset(""+HHMM"",""Z"") XXX 3 appendOffset(""+HH:MM"",""Z"") XXXX 4 appendOffset(""+HHMMss"",""Z"") XXXXX 5 appendOffset(""+HH:MM:ss"",""Z"") x 1 appendOffset(""+HHmm"",""+00"") xx 2 appendOffset(""+HHMM"",""+0000"") xxx 3 appendOffset(""+HH:MM"",""+00:00"") xxxx 4 appendOffset(""+HHMMss"",""+0000"") xxxxx 5 appendOffset(""+HH:MM:ss"",""+00:00"") Z 1 appendOffset(""+HHMM"",""+0000"") ZZ 2 appendOffset(""+HHMM"",""+0000"") ZZZ 3 appendOffset(""+HHMM"",""+0000"") ZZZZ 4 appendLocalizedOffset(TextStyle.FULL); ZZZZZ 5 appendOffset(""+HH:MM:ss"",""Z"") Modifiers: Pattern letters that modify the rest of the pattern: Pattern Count Equivalent builder methods ------- ----- -------------------------- [ 1 optionalStart() ] 1 optionalEnd() p..p 1..n padNext(n) Any sequence of letters not specified above, unrecognized letter or reserved character will throw an exception. Future versions may add to the set of patterns. It is recommended to use single quotes around all characters that you want to output directly to ensure that future changes do not break your application. Note that the pattern string is similar, but not identical, to SimpleDateFormat. The pattern string is also similar, but not identical, to that defined by the Unicode Common Locale Data Repository (CLDR/LDML). Pattern letters 'X' and 'u' are aligned with Unicode CLDR/LDML. By contrast, SimpleDateFormat uses 'u' for the numeric day of week. Pattern letters 'y' and 'Y' parse years of two digits and more than 4 digits differently. Pattern letters 'n', 'A', 'N', and 'p' are added. Number types will reject large numbers.",;java.time.format.DateTimeFormatterBuilder.appendPattern(String),;1
appendRemainingComponent,1,1,Adds a single component to the end of remaining name.,;javax.naming.spi.ResolveResult.appendRemainingComponent(String),;1
appendRemainingName,1,1,Adds components to the end of remaining name.,;javax.naming.spi.ResolveResult.appendRemainingName(Name),;1
appendTail,1,1,"Implements a terminal append-and-replace step. This method reads characters from the input sequence, starting at the append position, and appends them to the given string buffer. It is intended to be invoked after one or more invocations of the appendReplacement method in order to copy the remainder of the input sequence.",;java.util.regex.Matcher.appendTail(StringBuffer),;1
appendTo,1,1,Returns a redirect to append to the specified file. Each write operation first advances the position to the end of the file and then writes the requested data. Whether the advancement of the position and the writing of the data are done in a single atomic operation is system-dependent and therefore unspecified. It will always be true that Redirect.appendTo(file).file() == file &amp;&amp; Redirect.appendTo(file).type() == Redirect.Type.APPEND,;java.lang.ProcessBuilder.Redirect.appendTo(File),;1
appendZoneId,1,1,"Appends the time-zone ID, such as 'Europe/Paris' or '+02:00', to the formatter. This appends an instruction to format/parse the zone ID to the builder. The zone ID is obtained in a strict manner suitable for ZonedDateTime. By contrast, OffsetDateTime does not have a zone ID suitable for use with this method, see appendZoneOrOffsetId(). During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with TemporalQueries.zoneId(). It will be printed using the result of ZoneId.getId(). If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional. During parsing, the text must match a known zone or offset. There are two types of zone ID, offset-based, such as '+01:30' and region-based, such as 'Europe/London'. These are parsed differently. If the parse starts with '+', '-', 'UT', 'UTC' or 'GMT', then the parser expects an offset-based zone and will not match region-based zones. The offset ID, such as '+02:30', may be at the start of the parse, or prefixed by 'UT', 'UTC' or 'GMT'. The offset ID parsing is equivalent to using appendOffset(String, String) using the arguments 'HH:MM:ss' and the no offset string '0'. If the parse starts with 'UT', 'UTC' or 'GMT', and the parser cannot match a following offset ID, then ZoneOffset.UTC is selected. In all other cases, the list of known region-based zones is used to find the longest available match. If no match is found, and the parse starts with 'Z', then ZoneOffset.UTC is selected. The parser uses the case sensitive setting. For example, the following will parse: ""Europe/London"" -- ZoneId.of(""Europe/London"") ""Z"" -- ZoneOffset.UTC ""UT"" -- ZoneId.of(""UT"") ""UTC"" -- ZoneId.of(""UTC"") ""GMT"" -- ZoneId.of(""GMT"") ""+01:30"" -- ZoneOffset.of(""+01:30"") ""UT+01:30"" -- ZoneOffset.of(""+01:30"") ""UTC+01:30"" -- ZoneOffset.of(""+01:30"") ""GMT+01:30"" -- ZoneOffset.of(""+01:30"")",;java.time.format.DateTimeFormatterBuilder.appendZoneId(),;1
appendZoneOrOffsetId,1,1,"Appends the time-zone ID, such as 'Europe/Paris' or '+02:00', to the formatter, using the best available zone ID. This appends an instruction to format/parse the best available zone or offset ID to the builder. The zone ID is obtained in a lenient manner that first attempts to find a true zone ID, such as that on ZonedDateTime, and then attempts to find an offset, such as that on OffsetDateTime. During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with TemporalQueries.zone(). It will be printed using the result of ZoneId.getId(). If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional. During parsing, the text must match a known zone or offset. There are two types of zone ID, offset-based, such as '+01:30' and region-based, such as 'Europe/London'. These are parsed differently. If the parse starts with '+', '-', 'UT', 'UTC' or 'GMT', then the parser expects an offset-based zone and will not match region-based zones. The offset ID, such as '+02:30', may be at the start of the parse, or prefixed by 'UT', 'UTC' or 'GMT'. The offset ID parsing is equivalent to using appendOffset(String, String) using the arguments 'HH:MM:ss' and the no offset string '0'. If the parse starts with 'UT', 'UTC' or 'GMT', and the parser cannot match a following offset ID, then ZoneOffset.UTC is selected. In all other cases, the list of known region-based zones is used to find the longest available match. If no match is found, and the parse starts with 'Z', then ZoneOffset.UTC is selected. The parser uses the case sensitive setting. For example, the following will parse: ""Europe/London"" -- ZoneId.of(""Europe/London"") ""Z"" -- ZoneOffset.UTC ""UT"" -- ZoneId.of(""UT"") ""UTC"" -- ZoneId.of(""UTC"") ""GMT"" -- ZoneId.of(""GMT"") ""+01:30"" -- ZoneOffset.of(""+01:30"") ""UT+01:30"" -- ZoneOffset.of(""UT+01:30"") ""UTC+01:30"" -- ZoneOffset.of(""UTC+01:30"") ""GMT+01:30"" -- ZoneOffset.of(""GMT+01:30"") Note that this method is identical to appendZoneId() except in the mechanism used to obtain the zone.",;java.time.format.DateTimeFormatterBuilder.appendZoneOrOffsetId(),;1
appendZoneRegionId,1,1,"Appends the time-zone region ID, such as 'Europe/Paris', to the formatter, rejecting the zone ID if it is a ZoneOffset. This appends an instruction to format/parse the zone ID to the builder only if it is a region-based ID. During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with TemporalQueries.zoneId(). If the zone is a ZoneOffset or it cannot be obtained then an exception is thrown unless the section of the formatter is optional. If the zone is not an offset, then the zone will be printed using the zone ID from ZoneId.getId(). During parsing, the text must match a known zone or offset. There are two types of zone ID, offset-based, such as '+01:30' and region-based, such as 'Europe/London'. These are parsed differently. If the parse starts with '+', '-', 'UT', 'UTC' or 'GMT', then the parser expects an offset-based zone and will not match region-based zones. The offset ID, such as '+02:30', may be at the start of the parse, or prefixed by 'UT', 'UTC' or 'GMT'. The offset ID parsing is equivalent to using appendOffset(String, String) using the arguments 'HH:MM:ss' and the no offset string '0'. If the parse starts with 'UT', 'UTC' or 'GMT', and the parser cannot match a following offset ID, then ZoneOffset.UTC is selected. In all other cases, the list of known region-based zones is used to find the longest available match. If no match is found, and the parse starts with 'Z', then ZoneOffset.UTC is selected. The parser uses the case sensitive setting. For example, the following will parse: ""Europe/London"" -- ZoneId.of(""Europe/London"") ""Z"" -- ZoneOffset.UTC ""UT"" -- ZoneId.of(""UT"") ""UTC"" -- ZoneId.of(""UTC"") ""GMT"" -- ZoneId.of(""GMT"") ""+01:30"" -- ZoneOffset.of(""+01:30"") ""UT+01:30"" -- ZoneOffset.of(""+01:30"") ""UTC+01:30"" -- ZoneOffset.of(""+01:30"") ""GMT+01:30"" -- ZoneOffset.of(""+01:30"") Note that this method is identical to appendZoneId() except in the mechanism used to obtain the zone. Note also that parsing accepts offsets, whereas formatting will never produce one.",;java.time.format.DateTimeFormatterBuilder.appendZoneRegionId(),;1
applyPropertyChange,1,1,Notifies the LayerUI when any of its property are changed and enables updating every JLayer this LayerUI instance is set to.,";javax.swing.plaf.LayerUI.applyPropertyChange(PropertyChangeEvent,JLayer&lt;?)",;1
applyToEither,1,1,Description copied from interface:CompletionStage,";java.util.concurrent.CompletableFuture.applyToEither(CompletionStage&lt;?,Function&lt;?,U&gt;)",;1
approveSelection,1,1,"Called by the UI when the user hits the Approve button (labeled ""Open"" or ""Save"", by default). This can also be called by the programmer. This method causes an action event to fire with the command string equal to APPROVE_SELECTION.",;javax.swing.JFileChooser.approveSelection(),;1
areExtraMouseButtonsEnabled,1,1,"Reports whether events from extra mouse buttons are allowed to be processed and posted into EventQueue. To change the returned value it is necessary to set the sun.awt.enableExtraMouseButtons property before the Toolkit class initialization. This setting could be done on the application startup by the following command: java -Dsun.awt.enableExtraMouseButtons=false Application Alternatively, the property could be set in the application by using the following code: System.setProperty(""sun.awt.enableExtraMouseButtons"", ""true""); before the Toolkit class initialization. If not set by the time of the Toolkit class initialization, this property will be initialized with true. Changing this value after the Toolkit class initialization will have no effect.",;java.awt.Toolkit.areExtraMouseButtonsEnabled(),;1
arePathsContiguous,1,1,"Returns true if the paths are contiguous, or this object has no RowMapper.",;javax.swing.tree.DefaultTreeSelectionModel.arePathsContiguous(TreePath[]),;1
arrangeGrid,1,1,Lays out the grid. This method should only be used internally by GridBagLayout.,;java.awt.GridBagLayout.arrangeGrid(Container),;1
ArrangeGrid,1,1,This method is obsolete and supplied for backwards compatibility only; new code should call arrangeGrid instead. This method is the same as arrangeGrid; refer to arrangeGrid for details on the parameter.,;java.awt.GridBagLayout.ArrangeGrid(Container),;1
arrayElementGetter,1,1,"Produces a method handle giving read access to elements of an array. The type of the method handle will have a return type of the array's element type. Its first argument will be the array type, and the second will be int.",;java.lang.invoke.MethodHandles.arrayElementGetter(Class&lt;?&gt;),;1
arrayElementSetter,1,1,Produces a method handle giving write access to elements of an array. The type of the method handle will have a void return type. Its last argument will be the array's element type. The first and second arguments will be the array type and int.,;java.lang.invoke.MethodHandles.arrayElementSetter(Class&lt;?&gt;),;1
arrive,1,1,"Arrives at this phaser, without waiting for others to arrive. It is a usage error for an unregistered party to invoke this method. However, this error may result in an IllegalStateException only upon some subsequent operation on this phaser, if ever.",;java.util.concurrent.Phaser.arrive(),;1
arriveAndAwaitAdvance,1,1,"Arrives at this phaser and awaits others. Equivalent in effect to awaitAdvance(arrive()). If you need to await with interruption or timeout, you can arrange this with an analogous construction using one of the other forms of the awaitAdvance method. If instead you need to deregister upon arrival, use awaitAdvance(arriveAndDeregister()). It is a usage error for an unregistered party to invoke this method. However, this error may result in an IllegalStateException only upon some subsequent operation on this phaser, if ever.",;java.util.concurrent.Phaser.arriveAndAwaitAdvance(),;1
arriveAndDeregister,1,1,"Arrives at this phaser and deregisters from it without waiting for others to arrive. Deregistration reduces the number of parties required to advance in future phases. If this phaser has a parent, and deregistration causes this phaser to have zero parties, this phaser is also deregistered from its parent. It is a usage error for an unregistered party to invoke this method. However, this error may result in an IllegalStateException only upon some subsequent operation on this phaser, if ever.",;java.util.concurrent.Phaser.arriveAndDeregister(),;1
asCharBuffer,1,1,"Creates a view of this byte buffer as a char buffer. The content of the new buffer will start at this buffer's current position. Changes to this buffer's content will be visible in the new buffer, and vice versa; the two buffers' position, limit, and mark values will be independent. The new buffer's position will be zero, its capacity and its limit will be the number of bytes remaining in this buffer divided by two, and its mark will be undefined. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.",;java.nio.ByteBuffer.asCharBuffer(),;1
asCollector,1,1,"Makes an array-collecting method handle, which accepts a given number of trailing positional arguments and collects them into an array argument. The new method handle adapts, as its target, the current method handle. The type of the adapter will be the same as the type of the target, except that a single trailing parameter (usually of type arrayType) is replaced by arrayLength parameters whose type is element type of arrayType. If the array type differs from the final argument type on the original target, the original target is adapted to take the array type directly, as if by a call to asType. When called, the adapter replaces its trailing arrayLength arguments by a single new array of type arrayType, whose elements comprise (in order) the replaced arguments. Finally the target is called. What the target eventually returns is returned unchanged by the adapter. (The array may also be a shared constant when arrayLength is zero.) (Note: The arrayType is often identical to the last parameter type of the original target. It is an explicit argument for symmetry with asSpreader, and also to allow the target to use a simple Object as its last parameter type.) In order to create a collecting adapter which is not restricted to a particular number of collected arguments, use asVarargsCollector instead. Here are some examples of array-collecting method handles: MethodHandle deepToString = publicLookup() .findStatic(Arrays.class, ""deepToString"", methodType(String.class, Object[].class));assertEquals(""[won]"", (String) deepToString.invokeExact(new Object[]{""won""}));MethodHandle ts1 = deepToString.asCollector(Object[].class, 1);assertEquals(methodType(String.class, Object.class), ts1.type());//assertEquals(""[won]"", (String) ts1.invokeExact( new Object[]{""won""})); //FAILassertEquals(""[[won]]"", (String) ts1.invokeExact((Object) new Object[]{""won""}));// arrayType can be a subtype of Object[]MethodHandle ts2 = deepToString.asCollector(String[].class, 2);assertEquals(methodType(String.class, String.class, String.class), ts2.type());assertEquals(""[two, too]"", (String) ts2.invokeExact(""two"", ""too""));MethodHandle ts0 = deepToString.asCollector(Object[].class, 0);assertEquals(""[]"", (String) ts0.invokeExact());// collectors can be nested, Lisp-styleMethodHandle ts22 = deepToString.asCollector(Object[].class, 3).asCollector(String[].class, 2);assertEquals(""[A, B, [C, D]]"", ((String) ts22.invokeExact((Object)'A', (Object)""B"", ""C"", ""D"")));// arrayType can be any primitive array typeMethodHandle bytesToString = publicLookup() .findStatic(Arrays.class, ""toString"", methodType(String.class, byte[].class)) .asCollector(byte[].class, 3);assertEquals(""[1, 2, 3]"", (String) bytesToString.invokeExact((byte)1, (byte)2, (byte)3));MethodHandle longsToString = publicLookup() .findStatic(Arrays.class, ""toString"", methodType(String.class, long[].class)) .asCollector(long[].class, 1);assertEquals(""[123]"", (String) longsToString.invokeExact((long)123));",";java.lang.invoke.MethodHandle.asCollector(Class&lt;?&gt;,int)",;1
asDoubleBuffer,1,1,"Creates a view of this byte buffer as a double buffer. The content of the new buffer will start at this buffer's current position. Changes to this buffer's content will be visible in the new buffer, and vice versa; the two buffers' position, limit, and mark values will be independent. The new buffer's position will be zero, its capacity and its limit will be the number of bytes remaining in this buffer divided by eight, and its mark will be undefined. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.",;java.nio.ByteBuffer.asDoubleBuffer(),;1
asFileAttribute,1,1,"Creates a FileAttribute, encapsulating a copy of the given file permissions, suitable for passing to the createFile or createDirectory methods.",;java.nio.file.attribute.PosixFilePermissions.asFileAttribute(Set&lt;PosixFilePermission&gt;),;1
asFixedArity,1,1,"Makes a fixed arity method handle which is otherwise equivalent to the current method handle. If the current method handle is not of variable arity, the current method handle is returned. This is true even if the current method handle could not be a valid input to asVarargsCollector. Otherwise, the resulting fixed-arity method handle has the same type and behavior of the current method handle, except that isVarargsCollector will be false. The fixed-arity method handle may (or may not) be the a previous argument to asVarargsCollector. Here is an example, of a list-making variable arity method handle: MethodHandle asListVar = publicLookup() .findStatic(Arrays.class, ""asList"", methodType(List.class, Object[].class)) .asVarargsCollector(Object[].class);MethodHandle asListFix = asListVar.asFixedArity();assertEquals(""[1]"", asListVar.invoke(1).toString());Exception caught = null;try { asListFix.invoke((Object)1); }catch (Exception ex) { caught = ex; }assert(caught instanceof ClassCastException);assertEquals(""[two, too]"", asListVar.invoke(""two"", ""too"").toString());try { asListFix.invoke(""two"", ""too""); }catch (Exception ex) { caught = ex; }assert(caught instanceof WrongMethodTypeException);Object[] argv = { ""three"", ""thee"", ""tee"" };assertEquals(""[three, thee, tee]"", asListVar.invoke(argv).toString());assertEquals(""[three, thee, tee]"", asListFix.invoke(argv).toString());assertEquals(1, ((List) asListVar.invoke((Object)argv)).size());assertEquals(""[three, thee, tee]"", asListFix.invoke((Object)argv).toString());",;java.lang.invoke.MethodHandle.asFixedArity(),;1
asFloatBuffer,1,1,"Creates a view of this byte buffer as a float buffer. The content of the new buffer will start at this buffer's current position. Changes to this buffer's content will be visible in the new buffer, and vice versa; the two buffers' position, limit, and mark values will be independent. The new buffer's position will be zero, its capacity and its limit will be the number of bytes remaining in this buffer divided by four, and its mark will be undefined. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.",;java.nio.ByteBuffer.asFloatBuffer(),;1
asIntBuffer,1,1,"Creates a view of this byte buffer as an int buffer. The content of the new buffer will start at this buffer's current position. Changes to this buffer's content will be visible in the new buffer, and vice versa; the two buffers' position, limit, and mark values will be independent. The new buffer's position will be zero, its capacity and its limit will be the number of bytes remaining in this buffer divided by four, and its mark will be undefined. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.",;java.nio.ByteBuffer.asIntBuffer(),;1
asInterfaceInstance,1,1,"Produces an instance of the given single-method interface which redirects its calls to the given method handle. A single-method interface is an interface which declares a uniquely named method. When determining the uniquely named method of a single-method interface, the public Object methods (toString, equals, hashCode) are disregarded. For example, Comparator is a single-method interface, even though it re-declares the Object.equals method. The interface must be public. No additional access checks are performed. The resulting instance of the required type will respond to invocation of the type's uniquely named method by calling the given target on the incoming arguments, and returning or throwing whatever the target returns or throws. The invocation will be as if by target.invoke. The target's type will be checked before the instance is created, as if by a call to asType, which may result in a WrongMethodTypeException. The uniquely named method is allowed to be multiply declared, with distinct type descriptors. (E.g., it can be overloaded, or can possess bridge methods.) All such declarations are connected directly to the target method handle. Argument and return types are adjusted by asType for each individual declaration. The wrapper instance will implement the requested interface and its super-types, but no other single-method interfaces. This means that the instance will not unexpectedly pass an instanceof test for any unrequested type. Implementation Note: Therefore, each instance must implement a unique single-method interface. Implementations may not bundle together multiple single-method interfaces onto single implementation classes in the style of AWTEventMulticaster. The method handle may throw an undeclared exception, which means any checked exception (or other checked throwable) not declared by the requested type's single abstract method. If this happens, the throwable will be wrapped in an instance of UndeclaredThrowableException and thrown in that wrapped form. Like Integer.valueOf, asInterfaceInstance is a factory method whose results are defined by their behavior. It is not guaranteed to return a new instance for every call. Because of the possibility of bridge methods and other corner cases, the interface may also have several abstract methods with the same name but having distinct descriptors (types of returns and parameters). In this case, all the methods are bound in common to the one given target. The type check and effective asType conversion is applied to each method type descriptor, and all abstract methods are bound to the target in common. Beyond this type check, no further checks are made to determine that the abstract methods are related in any way. Future versions of this API may accept additional types, such as abstract classes with single abstract methods. Future versions of this API may also equip wrapper instances with one or more additional public ""marker"" interfaces. If a security manager is installed, this method is caller sensitive. During any invocation of the target method handle via the returned wrapper, the original creator of the wrapper (the caller) will be visible to context checks requested by the security manager.",";java.lang.invoke.MethodHandleProxies.asInterfaceInstance(Class&lt;T&gt;,MethodHandle)",;1
asksAllowsChildren,1,1,Tells how leaf nodes are determined.,;javax.swing.tree.DefaultTreeModel.asksAllowsChildren(),;1
asLifoQueue,1,1,"Returns a view of a Deque as a Last-in-first-out (Lifo) Queue. Method add is mapped to push, remove is mapped to pop and so on. This view can be useful when you would like to use a method requiring a Queue but you need Lifo ordering. Each method invocation on the queue returned by this method results in exactly one method invocation on the backing deque, with one exception. The addAll method is implemented as a sequence of addFirst invocations on the backing deque.",;java.util.Collections.asLifoQueue(Deque&lt;T&gt;),;1
asLongBuffer,1,1,"Creates a view of this byte buffer as a long buffer. The content of the new buffer will start at this buffer's current position. Changes to this buffer's content will be visible in the new buffer, and vice versa; the two buffers' position, limit, and mark values will be independent. The new buffer's position will be zero, its capacity and its limit will be the number of bytes remaining in this buffer divided by eight, and its mark will be undefined. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.",;java.nio.ByteBuffer.asLongBuffer(),;1
asPredicate,1,1,Creates a predicate which can be used to match a string.,;java.util.regex.Pattern.asPredicate(),;1
asReadLock,1,1,"Returns a plain Lock view of this StampedLock in which the Lock.lock() method is mapped to readLock(), and similarly for other methods. The returned Lock does not support a Condition; method Lock.newCondition() throws UnsupportedOperationException.",;java.util.concurrent.locks.StampedLock.asReadLock(),;1
asReadWriteLock,1,1,"Returns a ReadWriteLock view of this StampedLock in which the ReadWriteLock.readLock() method is mapped to asReadLock(), and ReadWriteLock.writeLock() to asWriteLock().",;java.util.concurrent.locks.StampedLock.asReadWriteLock(),;1
assembleSystemMenu,1,1,Override the parent's method to do nothing. Metal frames do not have system menus.,;javax.swing.plaf.metal.MetalInternalFrameTitlePane.assembleSystemMenu(),;1
asShortBuffer,1,1,"Creates a view of this byte buffer as a short buffer. The content of the new buffer will start at this buffer's current position. Changes to this buffer's content will be visible in the new buffer, and vice versa; the two buffers' position, limit, and mark values will be independent. The new buffer's position will be zero, its capacity and its limit will be the number of bytes remaining in this buffer divided by two, and its mark will be undefined. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.",;java.nio.ByteBuffer.asShortBuffer(),;1
asSpreader,1,1,"Makes an array-spreading method handle, which accepts a trailing array argument and spreads its elements as positional arguments. The new method handle adapts, as its target, the current method handle. The type of the adapter will be the same as the type of the target, except that the final arrayLength parameters of the target's type are replaced by a single array parameter of type arrayType. If the array element type differs from any of the corresponding argument types on the original target, the original target is adapted to take the array elements directly, as if by a call to asType. When called, the adapter replaces a trailing array argument by the array's elements, each as its own argument to the target. (The order of the arguments is preserved.) They are converted pairwise by casting and/or unboxing to the types of the trailing parameters of the target. Finally the target is called. What the target eventually returns is returned unchanged by the adapter. Before calling the target, the adapter verifies that the array contains exactly enough elements to provide a correct argument count to the target method handle. (The array may also be null when zero elements are required.) If, when the adapter is called, the supplied array argument does not have the correct number of elements, the adapter will throw an IllegalArgumentException instead of invoking the target. Here are some simple examples of array-spreading method handles: MethodHandle equals = publicLookup() .findVirtual(String.class, ""equals"", methodType(boolean.class, Object.class));assert( (boolean) equals.invokeExact(""me"", (Object)""me""));assert(!(boolean) equals.invokeExact(""me"", (Object)""thee""));// spread both arguments from a 2-array:MethodHandle eq2 = equals.asSpreader(Object[].class, 2);assert( (boolean) eq2.invokeExact(new Object[]{ ""me"", ""me"" }));assert(!(boolean) eq2.invokeExact(new Object[]{ ""me"", ""thee"" }));// try to spread from anything but a 2-array:for (int n = 0; n &lt;= 10; n++) { Object[] badArityArgs = (n == 2 ? null : new Object[n]); try { assert((boolean) eq2.invokeExact(badArityArgs) &amp;&amp; false); } catch (IllegalArgumentException ex) { } // OK}// spread both arguments from a String array:MethodHandle eq2s = equals.asSpreader(String[].class, 2);assert( (boolean) eq2s.invokeExact(new String[]{ ""me"", ""me"" }));assert(!(boolean) eq2s.invokeExact(new String[]{ ""me"", ""thee"" }));// spread second arguments from a 1-array:MethodHandle eq1 = equals.asSpreader(Object[].class, 1);assert( (boolean) eq1.invokeExact(""me"", new Object[]{ ""me"" }));assert(!(boolean) eq1.invokeExact(""me"", new Object[]{ ""thee"" }));// spread no arguments from a 0-array or null:MethodHandle eq0 = equals.asSpreader(Object[].class, 0);assert( (boolean) eq0.invokeExact(""me"", (Object)""me"", new Object[0]));assert(!(boolean) eq0.invokeExact(""me"", (Object)""thee"", (Object[])null));// asSpreader and asCollector are approximate inverses:for (int n = 0; n &lt;= 2; n++) { for (Class&lt;?&gt; a : new Class&lt;?&gt;[]{Object[].class, String[].class, CharSequence[].class}) { MethodHandle equals2 = equals.asSpreader(a, n).asCollector(a, n); assert( (boolean) equals2.invokeWithArguments(""me"", ""me"")); assert(!(boolean) equals2.invokeWithArguments(""me"", ""thee"")); }}MethodHandle caToString = publicLookup() .findStatic(Arrays.class, ""toString"", methodType(String.class, char[].class));assertEquals(""[A, B, C]"", (String) caToString.invokeExact(""ABC"".toCharArray()));MethodHandle caString3 = caToString.asCollector(char[].class, 3);assertEquals(""[A, B, C]"", (String) caString3.invokeExact('A', 'B', 'C'));MethodHandle caToString2 = caString3.asSpreader(char[].class, 2);assertEquals(""[A, B, C]"", (String) caToString2.invokeExact('A', ""BC"".toCharArray()));",";java.lang.invoke.MethodHandle.asSpreader(Class&lt;?&gt;,int)",;1
asSubclass,1,1,"Casts this Class object to represent a subclass of the class represented by the specified class object. Checks that the cast is valid, and throws a ClassCastException if it is not. If this method succeeds, it always returns a reference to this class object. This method is useful when a client needs to ""narrow"" the type of a Class object to pass it to an API that restricts the Class objects that it is willing to accept. A cast would generate a compile-time warning, as the correctness of the cast could not be checked at runtime (because generic types are implemented by erasure).",;java.lang.Class.asSubclass(Class&lt;U&gt;),;1
asVarargsCollector,1,1,"Makes a variable arity adapter which is able to accept any number of trailing positional arguments and collect them into an array argument. The type and behavior of the adapter will be the same as the type and behavior of the target, except that certain invoke and asType requests can lead to trailing positional arguments being collected into target's trailing parameter. Also, the last parameter type of the adapter will be arrayType, even if the target has a different last parameter type. This transformation may return this if the method handle is already of variable arity and its trailing parameter type is identical to arrayType. When called with invokeExact, the adapter invokes the target with no argument changes. (Note: This behavior is different from a fixed arity collector, since it accepts a whole array of indeterminate length, rather than a fixed number of arguments.) When called with plain, inexact invoke, if the caller type is the same as the adapter, the adapter invokes the target as with invokeExact. (This is the normal behavior for invoke when types match.) Otherwise, if the caller and adapter arity are the same, and the trailing parameter type of the caller is a reference type identical to or assignable to the trailing parameter type of the adapter, the arguments and return values are converted pairwise, as if by asType on a fixed arity method handle. Otherwise, the arities differ, or the adapter's trailing parameter type is not assignable from the corresponding caller type. In this case, the adapter replaces all trailing arguments from the original trailing argument position onward, by a new array of type arrayType, whose elements comprise (in order) the replaced arguments. The caller type must provides as least enough arguments, and of the correct type, to satisfy the target's requirement for positional arguments before the trailing array argument. Thus, the caller must supply, at a minimum, N-1 arguments, where N is the arity of the target. Also, there must exist conversions from the incoming arguments to the target's arguments. As with other uses of plain invoke, if these basic requirements are not fulfilled, a WrongMethodTypeException may be thrown. In all cases, what the target eventually returns is returned unchanged by the adapter. In the final case, it is exactly as if the target method handle were temporarily adapted with a fixed arity collector to the arity required by the caller type. (As with asCollector, if the array length is zero, a shared constant may be used instead of a new array. If the implied call to asCollector would throw an IllegalArgumentException or WrongMethodTypeException, the call to the variable arity adapter must throw WrongMethodTypeException.) The behavior of asType is also specialized for variable arity adapters, to maintain the invariant that plain, inexact invoke is always equivalent to an asType call to adjust the target type, followed by invokeExact. Therefore, a variable arity adapter responds to an asType request by building a fixed arity collector, if and only if the adapter and requested type differ either in arity or trailing argument type. The resulting fixed arity collector has its type further adjusted (if necessary) to the requested type by pairwise conversion, as if by another application of asType. When a method handle is obtained by executing an ldc instruction of a CONSTANT_MethodHandle constant, and the target method is marked as a variable arity method (with the modifier bit 0x0080), the method handle will accept multiple arities, as if the method handle constant were created by means of a call to asVarargsCollector. In order to create a collecting adapter which collects a predetermined number of arguments, and whose type reflects this predetermined number, use asCollector instead. No method handle transformations produce new method handles with variable arity, unless they are documented as doing so. Therefore, besides asVarargsCollector, all methods in MethodHandle and MethodHandles will return a method handle with fixed arity, except in the cases where they are specified to return their original operand (e.g., asType of the method handle's own type). Calling asVarargsCollector on a method handle which is already of variable arity will produce a method handle with the same type and behavior. It may (or may not) return the original variable arity method handle. Here is an example, of a list-making variable arity method handle: MethodHandle deepToString = publicLookup() .findStatic(Arrays.class, ""deepToString"", methodType(String.class, Object[].class));MethodHandle ts1 = deepToString.asVarargsCollector(Object[].class);assertEquals(""[won]"", (String) ts1.invokeExact( new Object[]{""won""}));assertEquals(""[won]"", (String) ts1.invoke( new Object[]{""won""}));assertEquals(""[won]"", (String) ts1.invoke( ""won"" ));assertEquals(""[[won]]"", (String) ts1.invoke((Object) new Object[]{""won""}));// findStatic of Arrays.asList(...) produces a variable arity method handle:MethodHandle asList = publicLookup() .findStatic(Arrays.class, ""asList"", methodType(List.class, Object[].class));assertEquals(methodType(List.class, Object[].class), asList.type());assert(asList.isVarargsCollector());assertEquals(""[]"", asList.invoke().toString());assertEquals(""[1]"", asList.invoke(1).toString());assertEquals(""[two, too]"", asList.invoke(""two"", ""too"").toString());String[] argv = { ""three"", ""thee"", ""tee"" };assertEquals(""[three, thee, tee]"", asList.invoke(argv).toString());assertEquals(""[three, thee, tee]"", asList.invoke((Object[])argv).toString());List ls = (List) asList.invoke((Object)argv);assertEquals(1, ls.size());assertEquals(""[three, thee, tee]"", Arrays.toString((Object[])ls.get(0))); Discussion: These rules are designed as a dynamically-typed variation of the Java rules for variable arity methods. In both cases, callers to a variable arity method or method handle can either pass zero or more positional arguments, or else pass pre-collected arrays of any length. Users should be aware of the special role of the final argument, and of the effect of a type match on that final argument, which determines whether or not a single trailing argument is interpreted as a whole array or a single element of an array to be collected. Note that the dynamic type of the trailing argument has no effect on this decision, only a comparison between the symbolic type descriptor of the call site and the type descriptor of the method handle.)",;java.lang.invoke.MethodHandle.asVarargsCollector(Class&lt;?&gt;),;1
asWriteLock,1,1,"Returns a plain Lock view of this StampedLock in which the Lock.lock() method is mapped to writeLock(), and similarly for other methods. The returned Lock does not support a Condition; method Lock.newCondition() throws UnsupportedOperationException.",;java.util.concurrent.locks.StampedLock.asWriteLock(),;1
atEndOfMonth,1,1,"Returns a LocalDate at the end of the month. This returns a LocalDate based on this year-month. The day-of-month is set to the last valid day of the month, taking into account leap years. This method can be used as part of a chain to produce a date: LocalDate date = year.atMonth(month).atEndOfMonth();",;java.time.YearMonth.atEndOfMonth(),;1
atMonthDay,1,1,Combines this year with a month-day to create a LocalDate. This returns a LocalDate formed from this year and the specified month-day. A month-day of February 29th will be adjusted to February 28th in the resulting date if the year is not a leap year.,;java.time.Year.atMonthDay(MonthDay),;1
attach,1,1,Attaches the given object to this key. An attached object may later be retrieved via the attachment method. Only one object may be attached at a time; invoking this method causes any previous attachment to be discarded. The current attachment may be discarded by attaching null.,;java.nio.channels.SelectionKey.attach(Object),;1
attachment,1,1,Retrieves the current attachment.,;java.nio.channels.SelectionKey.attachment(),;1
attemptMark,1,1,"Atomically sets the value of the mark to the given update value if the current reference is == to the expected reference. Any given invocation of this operation may fail (return false) spuriously, but repeated invocation when the current value holds the expected value and no other thread is also attempting to set the value will eventually succeed.",";java.util.concurrent.atomic.AtomicMarkableReference.attemptMark(V,boolean)",;1
attemptStamp,1,1,"Atomically sets the value of the stamp to the given update value if the current reference is == to the expected reference. Any given invocation of this operation may fail (return false) spuriously, but repeated invocation when the current value holds the expected value and no other thread is also attempting to set the value will eventually succeed.",";java.util.concurrent.atomic.AtomicStampedReference.attemptStamp(V,int)",;1
attribute,1,1,Adds an extension attribute to the W3CEndpointReference instance's wsa:EndpointReference element.,";javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder.attribute(QName,String)",;1
attributeDecl,1,1,Description copied from interface:DeclHandler,";org.xml.sax.ext.DefaultHandler2.attributeDecl(String,String,String,String,String)",;1
attributeNames,1,1,Gets an enumeration of the locale-independent names of this feature.,;java.beans.FeatureDescriptor.attributeNames(),;1
atYear,1,1,Combines this month-day with a year to create a LocalDate. This returns a LocalDate formed from this month-day and the specified year. A month-day of February 29th will be adjusted to February 28th in the resulting date if the year is not a leap year. This instance is immutable and unaffected by this method call.,;java.time.MonthDay.atYear(int),;1
atZoneSameInstant,1,1,"Combines this date-time with a time-zone to create a ZonedDateTime ensuring that the result has the same instant. This returns a ZonedDateTime formed from this date-time and the specified time-zone. This conversion will ignore the visible local date-time and use the underlying instant instead. This avoids any problems with local time-line gaps or overlaps. The result might have different values for fields such as hour, minute an even day. To attempt to retain the values of the fields, use atZoneSimilarLocal(ZoneId). To use the offset as the zone ID, use toZonedDateTime().",;java.time.OffsetDateTime.atZoneSameInstant(ZoneId),;1
atZoneSimilarLocal,1,1,"Combines this date-time with a time-zone to create a ZonedDateTime trying to keep the same local date and time. This returns a ZonedDateTime formed from this date-time and the specified time-zone. Where possible, the result will have the same local date-time as this object. Time-zone rules, such as daylight savings, mean that not every time on the local time-line exists. If the local date-time is in a gap or overlap according to the rules then a resolver is used to determine the resultant local time and offset. This method uses ZonedDateTime.ofLocal(LocalDateTime, ZoneId, ZoneOffset) to retain the offset from this instance if possible. Finer control over gaps and overlaps is available in two ways. If you simply want to use the later offset at overlaps then call ZonedDateTime.withLaterOffsetAtOverlap() immediately after this method. To create a zoned date-time at the same instant irrespective of the local time-line, use atZoneSameInstant(ZoneId). To use the offset as the zone ID, use toZonedDateTime().",;java.time.OffsetDateTime.atZoneSimilarLocal(ZoneId),;1
augmentList,1,1,"Takes one list of commands and augments it with another list of commands. The second list takes precedence over the first list; that is, when both lists contain a command with the same name, the command from the second list is used.",";javax.swing.text.TextAction.augmentList(Action[],Action[])",;1
autoScrollDown,1,1,This protected method is implementation specific and should be private. do not call or override.,;javax.swing.plaf.basic.BasicComboPopup.autoScrollDown(),;1
autoScrollUp,1,1,This protected method is implementation specific and should be private. do not call or override.,;javax.swing.plaf.basic.BasicComboPopup.autoScrollUp(),;1
availableCharsets,1,1,"Constructs a sorted map from canonical charset names to charset objects. The map returned by this method will have one entry for each charset for which support is available in the current Java virtual machine. If two or more supported charsets have the same canonical name then the resulting map will contain just one of them; which one it will contain is not specified. The invocation of this method, and the subsequent use of the resulting map, may cause time-consuming disk or network I/O operations to occur. This method is provided for applications that need to enumerate all of the available charsets, for example to allow user charset selection. This method is not used by the forName method, which instead employs an efficient incremental lookup algorithm. This method may return different results at different times if new charset providers are dynamically made available to the current Java virtual machine. In the absence of such changes, the charsets returned by this method are exactly those that can be retrieved via the forName method.",;java.nio.charset.Charset.availableCharsets(),;1
availablePermits,1,1,Returns the current number of permits available in this semaphore. This method is typically used for debugging and testing purposes.,;java.util.concurrent.Semaphore.availablePermits(),;1
availableProcessors,1,1,Returns the number of processors available to the Java virtual machine. This value may change during a particular invocation of the virtual machine. Applications that are sensitive to the number of available processors should therefore occasionally poll this property and adjust their resource usage appropriately.,;java.lang.Runtime.availableProcessors(),;1
averageBytesPerChar,1,1,Returns the average number of bytes that will be produced for each character of input. This heuristic value may be used to estimate the size of the output buffer required for a given input sequence.,;java.nio.charset.CharsetEncoder.averageBytesPerChar(),;1
averageCharsPerByte,1,1,Returns the average number of characters that will be produced for each byte of input. This heuristic value may be used to estimate the size of the output buffer required for a given input sequence.,;java.nio.charset.CharsetDecoder.averageCharsPerByte(),;1
averagingDouble,1,1,"Returns a Collector that produces the arithmetic mean of a double-valued function applied to the input elements. If no elements are present, the result is 0. The average returned can vary depending upon the order in which values are recorded, due to accumulated rounding error in addition of values of differing magnitudes. Values sorted by increasing absolute magnitude tend to yield more accurate results. If any recorded value is a NaN or the sum is at any point a NaN then the average will be NaN.",;java.util.stream.Collectors.averagingDouble(ToDoubleFunction&lt;?),;1
averagingInt,1,1,"Returns a Collector that produces the arithmetic mean of an integer-valued function applied to the input elements. If no elements are present, the result is 0.",;java.util.stream.Collectors.averagingInt(ToIntFunction&lt;?),;1
averagingLong,1,1,"Returns a Collector that produces the arithmetic mean of a long-valued function applied to the input elements. If no elements are present, the result is 0.",;java.util.stream.Collectors.averagingLong(ToLongFunction&lt;?),;1
avoidingGui,1,1,Used to determine if the BeanContext child is avoiding using its GUI.,;java.beans.beancontext.BeanContextSupport.avoidingGui(),;1
awaitAdvance,1,1,"Awaits the phase of this phaser to advance from the given phase value, returning immediately if the current phase is not equal to the given phase value or this phaser is terminated.",;java.util.concurrent.Phaser.awaitAdvance(int),;1
awaitQuiescence,1,1,"If called by a ForkJoinTask operating in this pool, equivalent in effect to ForkJoinTask.helpQuiesce(). Otherwise, waits and/or attempts to assist performing tasks until this pool isQuiescent() or the indicated timeout elapses.",";java.util.concurrent.ForkJoinPool.awaitQuiescence(long,TimeUnit)",;1
baseIsLeftToRight,1,1,Return true if the base direction is left-to-right.,;java.text.Bidi.baseIsLeftToRight(),;1
baselineLayout,1,1,"Computes the location and extent of each child view in this BoxView given the targetSpan, which is the width (or height) of the region we have to work with.",";javax.swing.text.BoxView.baselineLayout(int,int,int[],int[])",;1
baselineRequirements,1,1,Calculates the size requirements for this BoxView by examining the size of each child view.,";javax.swing.text.BoxView.baselineRequirements(int,SizeRequirements)",;1
bcsChildren,1,1,Returns an iterator of all children of this BeanContext.,;java.beans.beancontext.BeanContextSupport.bcsChildren(),;1
beep,1,1,Emits an audio beep depending on native system settings and hardware capabilities.,;java.awt.Toolkit.beep(),;1
beforeExecute,1,1,"Method invoked prior to executing the given Runnable in the given thread. This method is invoked by thread t that will execute task r, and may be used to re-initialize ThreadLocals, or to perform logging. This implementation does nothing, but may be customized in subclasses. Note: To properly nest multiple overridings, subclasses should generally invoke super.beforeExecute at the end of this method.",";java.util.concurrent.ThreadPoolExecutor.beforeExecute(Thread,Runnable)",;1
beforeMarshal,1,1,"Callback method invoked before marshalling from source to XML. This method is invoked just before marshalling process starts to marshal source. Note that if the class of source defines its own beforeMarshal method, the class specific callback method is invoked just before this method is invoked.",;javax.xml.bind.Marshaller.Listener.beforeMarshal(Object),;1
beforeOffset,1,1,"Creates a TextHitInfo at the specified offset, associated with the character before the offset.",;java.awt.font.TextHitInfo.beforeOffset(int),;1
beforeUnmarshal,1,1,"Callback method invoked before unmarshalling into target. This method is invoked immediately after target was created and before the unmarshalling of this object begins. Note that if the class of target defines its own beforeUnmarshal method, the class specific callback method is invoked before this method is invoked.",";javax.xml.bind.Unmarshaller.Listener.beforeUnmarshal(Object,Object)",;1
beginDraggingFrame,1,1,Description copied from interface:DesktopManager,;javax.swing.DefaultDesktopManager.beginDraggingFrame(JComponent),;1
beginHandshake,1,1,"Initiates handshaking (initial or renegotiation) on this SSLEngine. This method is not needed for the initial handshake, as the wrap() and unwrap() methods will implicitly call this method if handshaking has not already begun. Note that the peer may also request a session renegotiation with this SSLEngine by sending the appropriate session renegotiate handshake message. Unlike the SSLSocket#startHandshake() method, this method does not block until handshaking is completed. To force a complete SSL/TLS session renegotiation, the current session should be invalidated prior to calling this method. Some protocols may not support multiple handshakes on an existing engine and may throw an SSLException.",;javax.net.ssl.SSLEngine.beginHandshake(),;1
beginResizingFrame,1,1,Description copied from interface:DesktopManager,";javax.swing.DefaultDesktopManager.beginResizingFrame(JComponent,int)",;1
bindTo,1,1,"Binds a value x to the first argument of a method handle, without invoking it. The new method handle adapts, as its target, the current method handle by binding it to the given argument. The type of the bound handle will be the same as the type of the target, except that a single leading reference parameter will be omitted. When called, the bound handle inserts the given value x as a new leading argument to the target. The other arguments are also passed unchanged. What the target eventually returns is returned unchanged by the bound handle. The reference x must be convertible to the first parameter type of the target. (Note: Because method handles are immutable, the target method handle retains its original type and behavior.)",;java.lang.invoke.MethodHandle.bindTo(Object),;1
bitLength,1,1,"Returns the number of bits in the minimal two's-complement representation of this BigInteger, excluding a sign bit. For positive BigIntegers, this is equivalent to the number of bits in the ordinary binary representation. (Computes (ceil(log2(this &lt; 0 ? -this : this+1))).)",;java.math.BigInteger.bitLength(),;1
block,1,1,"Block multicast datagrams from the given source address. If this membership key is not source-specific, and the underlying operating system supports source filtering, then this method blocks multicast datagrams from the given source address. If the given source address is already blocked then this method has no effect. After a source address is blocked it may still be possible to receive datagrams from that source. This can arise when datagrams are waiting to be received in the socket's receive buffer.",;java.nio.channels.MembershipKey.block(InetAddress),;1
booleanValue,1,1,Returns the value of this Boolean object as a boolean primitive.,;java.lang.Boolean.booleanValue(),;1
bounds,1,1,"Deprecated.As of JDK version 1.1, replaced by getBounds().",;java.awt.Component.bounds(),;1
breadthFirstEnumeration,1,1,"Creates and returns an enumeration that traverses the subtree rooted at this node in breadth-first order. The first node returned by the enumeration's nextElement() method is this node. Modifying the tree by inserting, removing, or moving a node invalidates any enumerations created before the modification.",;javax.swing.tree.DefaultMutableTreeNode.breadthFirstEnumeration(),;1
breaksFlow,1,1,"Returns true if this tag causes a line break to the flow of data, otherwise returns false.",;javax.swing.text.html.HTML.Tag.breaksFlow(),;1
brighter,1,1,"Creates a new Color that is a brighter version of this Color. This method applies an arbitrary scale factor to each of the three RGB components of this Color to create a brighter version of this Color. The alpha value is preserved. Although brighter and darker are inverse operations, the results of a series of invocations of these two methods might be inconsistent because of rounding errors.",;java.awt.Color.brighter(),;1
browse,1,1,"Launches the default browser to display a URI. If the default browser is not able to handle the specified URI, the application registered for handling URIs of the specified type is invoked. The application is determined from the protocol and path of the URI, as defined by the URI class. If the calling thread does not have the necessary permissions, and this is invoked from within an applet, AppletContext.showDocument() is used. Similarly, if the calling does not have the necessary permissions, and this is invoked from within a Java Web Started application, BasicService.showDocument() is used.",;java.awt.Desktop.browse(URI),;1
buildChooser,1,1,Builds a new chooser panel.,;javax.swing.colorchooser.AbstractColorChooserPanel.buildChooser(),;1
bulkRegister,1,1,"Adds the given number of new unarrived parties to this phaser. If an ongoing invocation of onAdvance(int, int) is in progress, this method may await its completion before returning. If this phaser has a parent, and the given number of parties is greater than zero, and this phaser previously had no registered parties, this child phaser is also registered with its parent. If this phaser is terminated, the attempt to register has no effect, and a negative value is returned.",;java.util.concurrent.Phaser.bulkRegister(int),;1
burstStringInto,1,1,Recursively creates new JLabel instances to represent d. Each JLabel instance is added to c.,";javax.swing.plaf.basic.BasicOptionPaneUI.burstStringInto(Container,String,int)",;1
bytesConsumed,1,1,Returns the number of bytes consumed from the input buffer.,;javax.net.ssl.SSLEngineResult.bytesConsumed(),;1
bytesProduced,1,1,Returns the number of bytes written to the output buffer.,;javax.net.ssl.SSLEngineResult.bytesProduced(),;1
bytesWidth,1,1,Returns the total advance width for showing the specified array of bytes in this Font. The advance is the distance from the leftmost point to the rightmost point on the string's baseline. The advance of a String is not necessarily the sum of the advances of its characters. This is equivalent to measuring a String of the characters in the specified range.,";java.awt.FontMetrics.bytesWidth(byte[],int,int)",;1
cachedChildren,1,1,Returns all known unremoved children of this node.,;java.util.prefs.AbstractPreferences.cachedChildren(),;1
cacheMBeanInfo,1,1,"Customization hook: cache the MBeanInfo built for this object. Subclasses may redefine this method in order to implement their own caching policy. The default implementation stores info in this instance. A subclass can define other policies, such as not saving info (so it is reconstructed every time getMBeanInfo() is called) or sharing a unique MBeanInfo object when several StandardMBean instances have equal MBeanInfo values.",;javax.management.StandardMBean.cacheMBeanInfo(MBeanInfo),;1
calculateBreakPosition,1,1,This is called by the nested wrapped line views to determine the break location. This can be reimplemented to alter the breaking behavior. It will either break at word or character boundaries depending upon the break argument given at construction.,";javax.swing.text.WrappedPlainView.calculateBreakPosition(int,int)",;1
calculateIndex,1,1,"Calculates the index that would be used in this TabularData instance to refer to the specified composite data value parameter if it were added to this instance. This method checks for the type validity of the specified value, but does not check if the calculated index is already used to refer to a value in this TabularData instance.",;javax.management.openmbean.TabularDataSupport.calculateIndex(CompositeData),;1
calculateInnerArea,1,1,"Stores the position and size of the inner painting area of the specified component in r and returns r. The position and size specify the bounds of the component, adjusted so as not to include the border area (the insets). This method is useful for classes that implement painting code.",";javax.swing.SwingUtilities.calculateInnerArea(JComponent,Rectangle)",;1
call,1,1,Sends the given message to the specified endpoint and blocks until it has returned the response.,";javax.xml.soap.SOAPConnection.call(SOAPMessage,Object)",;1
cancelledKeys,1,1,Retrieves this selector's cancelled-key set. This set should only be used while synchronized upon it.,;java.nio.channels.spi.AbstractSelector.cancelledKeys(),;1
cancelSelection,1,1,Called by the UI when the user chooses the Cancel button. This can also be called by the programmer. This method causes an action event to fire with the command string equal to CANCEL_SELECTION.,;javax.swing.JFileChooser.cancelSelection(),;1
canDecodeInput,1,1,"Returns true if the supplied source object appears to be of the format supported by this reader. Returning true from this method does not guarantee that reading will succeed, only that there appears to be a reasonable chance of success based on a brief inspection of the stream contents. If the source is an ImageInputStream, implementations will commonly check the first several bytes of the stream for a ""magic number"" associated with the format. Once actual reading has commenced, the reader may still indicate failure at any time prior to the completion of decoding. It is important that the state of the object not be disturbed in order that other ImageReaderSpis can properly determine whether they are able to decode the object. In particular, if the source is an ImageInputStream, a mark/reset pair should be used to preserve the stream position. Formats such as ""raw,"" which can potentially attempt to read nearly any stream, should return false in order to avoid being invoked in preference to a closer match. If source is not an instance of one of the classes returned by getInputTypes, the method should simply return false.",;javax.imageio.spi.ImageReaderSpi.canDecodeInput(Object),;1
canEditImmediately,1,1,"Returns true if event is null, or it is a MouseEvent with a click count &gt; 2 and inHitRegion returns true.",;javax.swing.tree.DefaultTreeCellEditor.canEditImmediately(EventObject),;1
canExecute,1,1,Tests whether the application can execute the file denoted by this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to execute files that are not marked executable. Consequently this method may return true even though the file does not have execute permissions.,;java.io.File.canExecute(),;1
canInsertEmpty,1,1,"Returns true if the writer supports the insertion of a new, empty image at the given index. The pixel values of the image are undefined, and may be specified in pieces using the replacePixels methods. Existing images with indices greater than or equal to the insertion index will have their indices increased by 1. A value for imageIndex of -1 may be used to signify an index one larger than the current largest index. A writer that does not support insertion of empty images may return false without performing bounds checking on the index. The default implementation throws an IllegalStateException if the output is null, and otherwise returns false without checking the value of imageIndex.",;javax.imageio.ImageWriter.canInsertEmpty(int),;1
canInsertImage,1,1,"Returns true if the writer supports the insertion of a new image at the given index. Existing images with indices greater than or equal to the insertion index will have their indices increased by 1. A value for imageIndex of -1 may be used to signify an index one larger than the current largest index. A writer that does not support any image insertion may return false without performing bounds checking on the index. The default implementation throws an IllegalStateException if the output is null, and otherwise returns false without checking the value of imageIndex.",;javax.imageio.ImageWriter.canInsertImage(int),;1
canNodeAppear,1,1,Description copied from interface:IIOMetadataFormat,";javax.imageio.metadata.IIOMetadataFormatImpl.canNodeAppear(String,ImageTypeSpecifier)",;1
canOffsetTiles,1,1,"Returns true if the writer can perform tiling with non-zero grid offsets while writing. If this method returns false, then setTiling will throw an UnsupportedOperationException if the grid offset arguments are not both zero. If canWriteTiles returns false, this method will return false as well.",;javax.imageio.ImageWriteParam.canOffsetTiles(),;1
canPathsBeAdded,1,1,"Used to test if a particular set of TreePaths can be added. This will return true if paths is null (or empty), or this object has no RowMapper, or nothing is currently selected, or the selection mode is DISCONTIGUOUS_TREE_SELECTION, or adding the paths to the current selection still results in a contiguous set of TreePaths.",;javax.swing.tree.DefaultTreeSelectionModel.canPathsBeAdded(TreePath[]),;1
canPathsBeRemoved,1,1,Returns true if the paths can be removed without breaking the continuity of the model. This is rather expensive.,;javax.swing.tree.DefaultTreeSelectionModel.canPathsBeRemoved(TreePath[]),;1
canRead,1,1,Tests whether the application can read the file denoted by this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to read files that are marked as unreadable. Consequently this method may return true even though the file does not have read permissions.,;java.io.File.canRead(),;1
canReadRaster,1,1,"Returns true if this plug-in supports reading just a Raster of pixel data. If this method returns false, calls to readRaster or readTileRaster will throw an UnsupportedOperationException. The default implementation returns false.",;javax.imageio.ImageReader.canReadRaster(),;1
canRemoveImage,1,1,"Returns true if the writer supports the removal of an existing image at the given index. Existing images with indices greater than the insertion index will have their indices decreased by 1. A writer that does not support any image removal may return false without performing bounds checking on the index. The default implementation throws an IllegalStateException if the output is null, and otherwise returns false without checking the value of imageIndex.",;javax.imageio.ImageWriter.canRemoveImage(int),;1
canReplaceImageMetadata,1,1,"Returns true if it is possible to replace the image metadata associated with an existing image with index imageIndex. If this method returns false, a call to replaceImageMetadata(imageIndex) will throw an UnsupportedOperationException. A writer that does not support any image metadata replacement may return false without performing bounds checking on the index. The default implementation throws an IllegalStateException if the output is null, and otherwise returns false without checking the value of imageIndex.",;javax.imageio.ImageWriter.canReplaceImageMetadata(int),;1
canReplacePixels,1,1,"Returns true if the writer allows pixels of the given image to be replaced using the replacePixels methods. A writer that does not support any pixel replacement may return false without performing bounds checking on the index. The default implementation throws an IllegalStateException if the output is null, and otherwise returns false without checking the value of imageIndex.",;javax.imageio.ImageWriter.canReplacePixels(int),;1
canReplaceStreamMetadata,1,1,"Returns true if it is possible to replace the stream metadata already present in the output. The default implementation throws an IllegalStateException if the output is null, and otherwise returns false.",;javax.imageio.ImageWriter.canReplaceStreamMetadata(),;1
canSetSourceRenderSize,1,1,"Returns true if this reader allows the source image to be rendered at an arbitrary size as part of the decoding process, by means of the setSourceRenderSize method. If this method returns false, calls to setSourceRenderSize will throw an UnsupportedOperationException.",;javax.imageio.ImageReadParam.canSetSourceRenderSize(),;1
canUndoOrRedo,1,1,Returns true if it is possible to invoke undo or redo.,;javax.swing.undo.UndoManager.canUndoOrRedo(),;1
canWrite,1,1,Tests whether the application can modify the file denoted by this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to modify files that are marked read-only. Consequently this method may return true even though the file is marked read-only.,;java.io.File.canWrite(),;1
canWriteCompressed,1,1,Returns true if this writer supports compression.,;javax.imageio.ImageWriteParam.canWriteCompressed(),;1
canWriteEmpty,1,1,"Returns true if the writer supports the writing of a complete image stream consisting of a single image with undefined pixel values and associated metadata and thumbnails to the output. The pixel values may be defined by future calls to the replacePixels methods. If the output is an ImageOutputStream, its existing contents prior to the current seek position are not affected, and need not be readable or writable. The default implementation throws an IllegalStateException if the output is null, and otherwise returns false.",;javax.imageio.ImageWriter.canWriteEmpty(),;1
canWriteProgressive,1,1,Returns true if the writer can write out images as a series of passes of progressively increasing quality.,;javax.imageio.ImageWriteParam.canWriteProgressive(),;1
canWriteRasters,1,1,"Returns true if the methods that take an IIOImage parameter are capable of dealing with a Raster (as opposed to RenderedImage) source image. If this method returns false, then those methods will throw an UnsupportedOperationException if supplied with an IIOImage containing a Raster. The default implementation returns false.",;javax.imageio.ImageWriter.canWriteRasters(),;1
canWriteSequence,1,1,"Returns true if the writer is able to append an image to an image stream that already contains header information and possibly prior images. If canWriteSequence returns false, writeToSequence and endWriteSequence will throw an UnsupportedOperationException. The default implementation returns false.",;javax.imageio.ImageWriter.canWriteSequence(),;1
canWriteTiles,1,1,"Returns true if the writer can perform tiling while writing. If this method returns false, then setTiling will throw an UnsupportedOperationException.",;javax.imageio.ImageWriteParam.canWriteTiles(),;1
cardinality,1,1,Returns the number of bits set to true in this BitSet.,;java.util.BitSet.cardinality(),;1
caretPositionChanged,1,1,Handles the caretPositionChanged event by invoking the caretPositionChanged methods on listener-a and listener-b.,;java.awt.AWTEventMulticaster.caretPositionChanged(InputMethodEvent),;1
cast,1,1,Casts an object to the class or interface represented by this Class object.,;java.lang.Class.cast(Object),;1
catchException,1,1,"Makes a method handle which adapts a target method handle, by running it inside an exception handler. If the target returns normally, the adapter returns that value. If an exception matching the specified type is thrown, the fallback handle is called instead on the exception, plus the original arguments. The target and handler must have the same corresponding argument and return types, except that handler may omit trailing arguments (similarly to the predicate in guardWithTest). Also, the handler must have an extra leading parameter of exType or a supertype. Here is pseudocode for the resulting adapter: T target(A..., B...); T handler(ExType, A...); T adapter(A... a, B... b) { try { return target(a..., b...); } catch (ExType ex) { return handler(ex, a...); } } Note that the saved arguments (a... in the pseudocode) cannot be modified by execution of the target, and so are passed unchanged from the caller to the handler, if the handler is invoked. The target and handler must return the same type, even if the handler always throws. (This might happen, for instance, because the handler is simulating a finally clause). To create such a throwing handler, compose the handler creation logic with throwException, in order to create a method handle of the correct return type.",";java.lang.invoke.MethodHandles.catchException(MethodHandle,Class&lt;?,MethodHandle)",;1
certificates,1,1,Deprecated.,;java.security.Identity.certificates(),;1
changeHighlight,1,1,Changes a highlight.,";javax.swing.text.DefaultHighlighter.changeHighlight(Object,int,int)",;1
changeParameterType,1,1,Finds or creates a method type with a single different parameter type. Convenience method for methodType.,";java.lang.invoke.MethodType.changeParameterType(int,Class&lt;?&gt;)",;1
changeReturnType,1,1,Finds or creates a method type with a different return type. Convenience method for methodType.,;java.lang.invoke.MethodType.changeReturnType(Class&lt;?&gt;),;1
changeShape,1,1,Change the size requests for this shape. An invalidate() is propagated upward as a result so that layout will eventually happen with using the new sizes.,";javax.swing.Box.Filler.changeShape(Dimension,Dimension,Dimension)",;1
changeToParentDirectory,1,1,Changes the directory to be set to the parent of the current directory.,;javax.swing.JFileChooser.changeToParentDirectory(),;1
charCount,1,1,"Determines the number of char values needed to represent the specified character (Unicode code point). If the specified character is equal to or greater than 0x10000, then the method returns 2. Otherwise, the method returns 1. This method doesn't validate the specified character to be a valid Unicode code point. The caller must validate the character value using isValidCodePoint if necessary.",;java.lang.Character.charCount(int),;1
chars,1,1,Description copied from interface:CharSequence,;java.nio.CharBuffer.chars(),;1
charsetForName,1,1,Retrieves a charset for the given charset name.,;java.nio.charset.spi.CharsetProvider.charsetForName(String),;1
charsets,1,1,Creates an iterator that iterates over the charsets supported by this provider. This method is used in the implementation of the Charset.availableCharsets method.,;java.nio.charset.spi.CharsetProvider.charsets(),;1
charsWidth,1,1,Returns the total advance width for showing the specified array of characters in this Font. The advance is the distance from the leftmost point to the rightmost point on the string's baseline. The advance of a String is not necessarily the sum of the advances of its characters. This is equivalent to measuring a String of the characters in the specified range.,";java.awt.FontMetrics.charsWidth(char[],int,int)",;1
charValue,1,1,Returns the value of this Character object.,;java.lang.Character.charValue(),;1
checkAccept,1,1,"Throws a SecurityException if the calling thread is not permitted to accept a socket connection from the specified host and port number. This method is invoked for the current security manager by the accept method of class ServerSocket. This method calls checkPermission with the SocketPermission(host+"":""+port,""accept"") permission. If you override this method, then you should make a call to super.checkAccept at the point the overridden method would normally throw an exception.",";java.lang.SecurityManager.checkAccept(String,int)",;1
checkAwtEventQueueAccess,1,1,Deprecated.The dependency on AWTPermission creates an impediment to future modularization of the Java platform. Users of this method should instead invoke checkPermission(java.security.Permission) directly. This method will be changed in a future release to check the permission java.security.AllPermission.,;java.lang.SecurityManager.checkAwtEventQueueAccess(),;1
checkClosed,1,1,Throws an IOException if the stream has been closed. Subclasses may call this method from any of their methods that require the stream not to be closed.,;javax.imageio.stream.ImageInputStreamImpl.checkClosed(),;1
checkCreateClassLoader,1,1,"Throws a SecurityException if the calling thread is not allowed to create a new class loader. This method calls checkPermission with the RuntimePermission(""createClassLoader"") permission. If you override this method, then you should make a call to super.checkCreateClassLoader at the point the overridden method would normally throw an exception.",;java.lang.SecurityManager.checkCreateClassLoader(),;1
checkDelete,1,1,"Throws a SecurityException if the calling thread is not allowed to delete the specified file. This method is invoked for the current security manager by the delete method of class File. This method calls checkPermission with the FilePermission(file,""delete"") permission. If you override this method, then you should make a call to super.checkDelete at the point the overridden method would normally throw an exception.",;java.lang.SecurityManager.checkDelete(String),;1
checkedCollection,1,1,"Returns a dynamically typesafe view of the specified collection. Any attempt to insert an element of the wrong type will result in an immediate ClassCastException. Assuming a collection contains no incorrectly typed elements prior to the time a dynamically typesafe view is generated, and that all subsequent access to the collection takes place through the view, it is guaranteed that the collection cannot contain an incorrectly typed element. The generics mechanism in the language provides compile-time (static) type checking, but it is possible to defeat this mechanism with unchecked casts. Usually this is not a problem, as the compiler issues warnings on all such unchecked operations. There are, however, times when static type checking alone is not sufficient. For example, suppose a collection is passed to a third-party library and it is imperative that the library code not corrupt the collection by inserting an element of the wrong type. Another use of dynamically typesafe views is debugging. Suppose a program fails with a ClassCastException, indicating that an incorrectly typed element was put into a parameterized collection. Unfortunately, the exception can occur at any time after the erroneous element is inserted, so it typically provides little or no information as to the real source of the problem. If the problem is reproducible, one can quickly determine its source by temporarily modifying the program to wrap the collection with a dynamically typesafe view. For example, this declaration: Collection&lt;String&gt; c = new HashSet&lt;&gt;(); may be replaced temporarily by this one: Collection&lt;String&gt; c = Collections.checkedCollection( new HashSet&lt;&gt;(), String.class); Running the program again will cause it to fail at the point where an incorrectly typed element is inserted into the collection, clearly identifying the source of the problem. Once the problem is fixed, the modified declaration may be reverted back to the original. The returned collection does not pass the hashCode and equals operations through to the backing collection, but relies on Object's equals and hashCode methods. This is necessary to preserve the contracts of these operations in the case that the backing collection is a set or a list. The returned collection will be serializable if the specified collection is serializable. Since null is considered to be a value of any reference type, the returned collection permits insertion of null elements whenever the backing collection does.",";java.util.Collections.checkedCollection(Collection&lt;E&gt;,Class&lt;E&gt;)",;1
checkedList,1,1,"Returns a dynamically typesafe view of the specified list. Any attempt to insert an element of the wrong type will result in an immediate ClassCastException. Assuming a list contains no incorrectly typed elements prior to the time a dynamically typesafe view is generated, and that all subsequent access to the list takes place through the view, it is guaranteed that the list cannot contain an incorrectly typed element. A discussion of the use of dynamically typesafe views may be found in the documentation for the checkedCollection method. The returned list will be serializable if the specified list is serializable. Since null is considered to be a value of any reference type, the returned list permits insertion of null elements whenever the backing list does.",";java.util.Collections.checkedList(List&lt;E&gt;,Class&lt;E&gt;)",;1
checkedMap,1,1,"Returns a dynamically typesafe view of the specified map. Any attempt to insert a mapping whose key or value have the wrong type will result in an immediate ClassCastException. Similarly, any attempt to modify the value currently associated with a key will result in an immediate ClassCastException, whether the modification is attempted directly through the map itself, or through a Map.Entry instance obtained from the map's entry set view. Assuming a map contains no incorrectly typed keys or values prior to the time a dynamically typesafe view is generated, and that all subsequent access to the map takes place through the view (or one of its collection views), it is guaranteed that the map cannot contain an incorrectly typed key or value. A discussion of the use of dynamically typesafe views may be found in the documentation for the checkedCollection method. The returned map will be serializable if the specified map is serializable. Since null is considered to be a value of any reference type, the returned map permits insertion of null keys or values whenever the backing map does.",";java.util.Collections.checkedMap(Map&lt;K,V&gt;,Class&lt;K&gt;,Class&lt;V&gt;)",;1
checkedNavigableMap,1,1,"Returns a dynamically typesafe view of the specified navigable map. Any attempt to insert a mapping whose key or value have the wrong type will result in an immediate ClassCastException. Similarly, any attempt to modify the value currently associated with a key will result in an immediate ClassCastException, whether the modification is attempted directly through the map itself, or through a Map.Entry instance obtained from the map's entry set view. Assuming a map contains no incorrectly typed keys or values prior to the time a dynamically typesafe view is generated, and that all subsequent access to the map takes place through the view (or one of its collection views), it is guaranteed that the map cannot contain an incorrectly typed key or value. A discussion of the use of dynamically typesafe views may be found in the documentation for the checkedCollection method. The returned map will be serializable if the specified map is serializable. Since null is considered to be a value of any reference type, the returned map permits insertion of null keys or values whenever the backing map does.",";java.util.Collections.checkedNavigableMap(NavigableMap&lt;K,V&gt;,Class&lt;K&gt;,Class&lt;V&gt;)",;1
checkedNavigableSet,1,1,"Returns a dynamically typesafe view of the specified navigable set. Any attempt to insert an element of the wrong type will result in an immediate ClassCastException. Assuming a navigable set contains no incorrectly typed elements prior to the time a dynamically typesafe view is generated, and that all subsequent access to the navigable set takes place through the view, it is guaranteed that the navigable set cannot contain an incorrectly typed element. A discussion of the use of dynamically typesafe views may be found in the documentation for the checkedCollection method. The returned navigable set will be serializable if the specified navigable set is serializable. Since null is considered to be a value of any reference type, the returned navigable set permits insertion of null elements whenever the backing sorted set does.",";java.util.Collections.checkedNavigableSet(NavigableSet&lt;E&gt;,Class&lt;E&gt;)",;1
checkedQueue,1,1,"Returns a dynamically typesafe view of the specified queue. Any attempt to insert an element of the wrong type will result in an immediate ClassCastException. Assuming a queue contains no incorrectly typed elements prior to the time a dynamically typesafe view is generated, and that all subsequent access to the queue takes place through the view, it is guaranteed that the queue cannot contain an incorrectly typed element. A discussion of the use of dynamically typesafe views may be found in the documentation for the checkedCollection method. The returned queue will be serializable if the specified queue is serializable. Since null is considered to be a value of any reference type, the returned queue permits insertion of null elements whenever the backing queue does.",";java.util.Collections.checkedQueue(Queue&lt;E&gt;,Class&lt;E&gt;)",;1
checkedSet,1,1,"Returns a dynamically typesafe view of the specified set. Any attempt to insert an element of the wrong type will result in an immediate ClassCastException. Assuming a set contains no incorrectly typed elements prior to the time a dynamically typesafe view is generated, and that all subsequent access to the set takes place through the view, it is guaranteed that the set cannot contain an incorrectly typed element. A discussion of the use of dynamically typesafe views may be found in the documentation for the checkedCollection method. The returned set will be serializable if the specified set is serializable. Since null is considered to be a value of any reference type, the returned set permits insertion of null elements whenever the backing set does.",";java.util.Collections.checkedSet(Set&lt;E&gt;,Class&lt;E&gt;)",;1
checkedSortedMap,1,1,"Returns a dynamically typesafe view of the specified sorted map. Any attempt to insert a mapping whose key or value have the wrong type will result in an immediate ClassCastException. Similarly, any attempt to modify the value currently associated with a key will result in an immediate ClassCastException, whether the modification is attempted directly through the map itself, or through a Map.Entry instance obtained from the map's entry set view. Assuming a map contains no incorrectly typed keys or values prior to the time a dynamically typesafe view is generated, and that all subsequent access to the map takes place through the view (or one of its collection views), it is guaranteed that the map cannot contain an incorrectly typed key or value. A discussion of the use of dynamically typesafe views may be found in the documentation for the checkedCollection method. The returned map will be serializable if the specified map is serializable. Since null is considered to be a value of any reference type, the returned map permits insertion of null keys or values whenever the backing map does.",";java.util.Collections.checkedSortedMap(SortedMap&lt;K,V&gt;,Class&lt;K&gt;,Class&lt;V&gt;)",;1
checkedSortedSet,1,1,"Returns a dynamically typesafe view of the specified sorted set. Any attempt to insert an element of the wrong type will result in an immediate ClassCastException. Assuming a sorted set contains no incorrectly typed elements prior to the time a dynamically typesafe view is generated, and that all subsequent access to the sorted set takes place through the view, it is guaranteed that the sorted set cannot contain an incorrectly typed element. A discussion of the use of dynamically typesafe views may be found in the documentation for the checkedCollection method. The returned sorted set will be serializable if the specified sorted set is serializable. Since null is considered to be a value of any reference type, the returned sorted set permits insertion of null elements whenever the backing sorted set does.",";java.util.Collections.checkedSortedSet(SortedSet&lt;E&gt;,Class&lt;E&gt;)",;1
checkExec,1,1,"Throws a SecurityException if the calling thread is not allowed to create a subprocess. This method is invoked for the current security manager by the exec methods of class Runtime. This method calls checkPermission with the FilePermission(cmd,""execute"") permission if cmd is an absolute path, otherwise it calls checkPermission with FilePermission(""&lt;&lt;ALL FILES&gt;&gt;"",""execute""). If you override this method, then you should make a call to super.checkExec at the point the overridden method would normally throw an exception.",;java.lang.SecurityManager.checkExec(String),;1
checkExit,1,1,"Throws a SecurityException if the calling thread is not allowed to cause the Java Virtual Machine to halt with the specified status code. This method is invoked for the current security manager by the exit method of class Runtime. A status of 0 indicates success; other values indicate various errors. This method calls checkPermission with the RuntimePermission(""exitVM.""+status) permission. If you override this method, then you should make a call to super.checkExit at the point the overridden method would normally throw an exception.",;java.lang.SecurityManager.checkExit(int),;1
checkForClickInExpandControl,1,1,"If the mouseX and mouseY are in the expand/collapse region of the row, this will toggle the row.",";javax.swing.plaf.basic.BasicTreeUI.checkForClickInExpandControl(TreePath,int,int)",;1
checkGuard,1,1,"Implements the guard interface for a permission. The SecurityManager.checkPermission method is called, passing this permission object as the permission to check. Returns silently if access is granted. Otherwise, throws a SecurityException.",;java.security.Permission.checkGuard(Object),;1
checkHorizontalKey,1,1,Verify that key is a legal value for the horizontalAlignment properties.,";javax.swing.JLabel.checkHorizontalKey(int,String)",;1
checkLink,1,1,"Throws a SecurityException if the calling thread is not allowed to dynamic link the library code specified by the string argument file. The argument is either a simple library name or a complete filename. This method is invoked for the current security manager by methods load and loadLibrary of class Runtime. This method calls checkPermission with the RuntimePermission(""loadLibrary.""+lib) permission. If you override this method, then you should make a call to super.checkLink at the point the overridden method would normally throw an exception.",;java.lang.SecurityManager.checkLink(String),;1
checkListen,1,1,"Throws a SecurityException if the calling thread is not allowed to wait for a connection request on the specified local port number. This method calls checkPermission with the SocketPermission(""localhost:""+port,""listen""). If you override this method, then you should make a call to super.checkListen at the point the overridden method would normally throw an exception.",;java.lang.SecurityManager.checkListen(int),;1
checkMaxDegree,1,1,"Returns true if the value parameter is lower than or equal to the expected maximum degree, false otherwise.",;javax.management.relation.RoleInfo.checkMaxDegree(int),;1
checkMemberAccess,1,1,Deprecated.This method relies on the caller being at a stack depth of 4 which is error-prone and cannot be enforced by the runtime. Users of this method should instead invoke checkPermission(java.security.Permission) directly. This method will be changed in a future release to check the permission java.security.AllPermission.,";java.lang.SecurityManager.checkMemberAccess(Class&lt;?&gt;,int)",;1
checkMinDegree,1,1,"Returns true if the value parameter is greater than or equal to the expected minimum degree, false otherwise.",;javax.management.relation.RoleInfo.checkMinDegree(int),;1
checkPackageAccess,1,1,"Throws a SecurityException if the calling thread is not allowed to access the package specified by the argument. This method is used by the loadClass method of class loaders. This method first gets a list of restricted packages by obtaining a comma-separated list from a call to java.security.Security.getProperty(""package.access""), and checks to see if pkg starts with or equals any of the restricted packages. If it does, then checkPermission gets called with the RuntimePermission(""accessClassInPackage.""+pkg) permission. If this method is overridden, then super.checkPackageAccess should be called as the first line in the overridden method.",;java.lang.SecurityManager.checkPackageAccess(String),;1
checkPackageDefinition,1,1,"Throws a SecurityException if the calling thread is not allowed to define classes in the package specified by the argument. This method is used by the loadClass method of some class loaders. This method first gets a list of restricted packages by obtaining a comma-separated list from a call to java.security.Security.getProperty(""package.definition""), and checks to see if pkg starts with or equals any of the restricted packages. If it does, then checkPermission gets called with the RuntimePermission(""defineClassInPackage.""+pkg) permission. If this method is overridden, then super.checkPackageDefinition should be called as the first line in the overridden method.",;java.lang.SecurityManager.checkPackageDefinition(String),;1
checkPainter,1,1,"Check to see that a glyph painter exists. If a painter doesn't exist, a default glyph painter will be installed.",;javax.swing.text.GlyphView.checkPainter(),;1
checkPrintJobAccess,1,1,"Throws a SecurityException if the calling thread is not allowed to initiate a print job request. This method calls checkPermission with the RuntimePermission(""queuePrintJob"") permission. If you override this method, then you should make a call to super.checkPrintJobAccess at the point the overridden method would normally throw an exception.",;java.lang.SecurityManager.checkPrintJobAccess(),;1
checkPropertiesAccess,1,1,"Throws a SecurityException if the calling thread is not allowed to access or modify the system properties. This method is used by the getProperties and setProperties methods of class System. This method calls checkPermission with the PropertyPermission(""*"", ""read,write"") permission. If you override this method, then you should make a call to super.checkPropertiesAccess at the point the overridden method would normally throw an exception.",;java.lang.SecurityManager.checkPropertiesAccess(),;1
checkPropertyAccess,1,1,"Throws a SecurityException if the calling thread is not allowed to access the system property with the specified key name. This method is used by the getProperty method of class System. This method calls checkPermission with the PropertyPermission(key, ""read"") permission. If you override this method, then you should make a call to super.checkPropertyAccess at the point the overridden method would normally throw an exception.",;java.lang.SecurityManager.checkPropertyAccess(String),;1
checkReadParamBandSettings,1,1,"A utility method that may be used by readers to test the validity of the source and destination band settings of an ImageReadParam. This method may be called as soon as the reader knows both the number of bands of the source image as it exists in the input stream, and the number of bands of the destination image that being written. The method retrieves the source and destination band setting arrays from param using the getSourceBands and getDestinationBandsmethods (or considers them to be null if param is null). If the source band setting array is null, it is considered to be equal to the array { 0, 1, ..., numSrcBands - 1 }, and similarly for the destination band setting array. The method then tests that both arrays are equal in length, and that neither array contains a value larger than the largest available band index. Any failure results in an IllegalArgumentException being thrown; success results in the method returning silently.",";javax.imageio.ImageReader.checkReadParamBandSettings(ImageReadParam,int,int)",;1
checkRoleReading,1,1,Checks if given Role can be read in a relation of the given type.,";javax.management.relation.RelationService.checkRoleReading(String,String)",;1
checkRoleWriting,1,1,Checks if given Role can be set in a relation of given type.,";javax.management.relation.RelationService.checkRoleWriting(Role,String,Boolean)",;1
checkSecurityAccess,1,1,"Determines whether the permission with the specified permission target name should be granted or denied. If the requested permission is allowed, this method returns quietly. If denied, a SecurityException is raised. This method creates a SecurityPermission object for the given permission target name and calls checkPermission with it. See the documentation for SecurityPermission for a list of possible permission target names. If you override this method, then you should make a call to super.checkSecurityAccess at the point the overridden method would normally throw an exception.",;java.lang.SecurityManager.checkSecurityAccess(String),;1
checkSetFactory,1,1,"Throws a SecurityException if the calling thread is not allowed to set the socket factory used by ServerSocket or Socket, or the stream handler factory used by URL. This method calls checkPermission with the RuntimePermission(""setFactory"") permission. If you override this method, then you should make a call to super.checkSetFactory at the point the overridden method would normally throw an exception.",;java.lang.SecurityManager.checkSetFactory(),;1
checkSystemClipboardAccess,1,1,Deprecated.The dependency on AWTPermission creates an impediment to future modularization of the Java platform. Users of this method should instead invoke checkPermission(java.security.Permission) directly. This method will be changed in a future release to check the permission java.security.AllPermission.,;java.lang.SecurityManager.checkSystemClipboardAccess(),;1
checkTopLevelWindow,1,1,Deprecated.The dependency on AWTPermission creates an impediment to future modularization of the Java platform. Users of this method should instead invoke checkPermission(java.security.Permission) directly. This method will be changed in a future release to check the permission java.security.AllPermission.,;java.lang.SecurityManager.checkTopLevelWindow(Object),;1
checkValidIntValue,1,1,Checks that the specified value is valid and fits in an int. This validates that the value is within the valid range of values and that all valid values are within the bounds of an int. The field is only used to improve the error message.,";java.time.temporal.ValueRange.checkValidIntValue(long,TemporalField)",;1
checkValidValue,1,1,Checks that the specified value is valid. This validates that the value is within the valid range of values. The field is only used to improve the error message.,";java.time.temporal.ValueRange.checkValidValue(long,TemporalField)",;1
checkVerticalKey,1,1,Verify that key is a legal value for the verticalAlignment or verticalTextPosition properties.,";javax.swing.JLabel.checkVerticalKey(int,String)",;1
childDeserializedHook,1,1,Called by readObject with the newly deserialized child and BCSChild.,";java.beans.beancontext.BeanContextSupport.childDeserializedHook(Object,BeanContextSupport.BCSChild)",;1
childJustAddedHook,1,1,subclasses may override this method to simply extend add() semantics after the child has been added and before the event notification has occurred. The method is called with the child synchronized.,";java.beans.beancontext.BeanContextSupport.childJustAddedHook(Object,BeanContextSupport.BCSChild)",;1
childrenNamesSpi,1,1,"Returns the names of the children of this preference node. (The returned array will be of size zero if this node has no children.) This method need not return the names of any nodes already cached, but may do so without harm. This method is invoked with the lock on this node held. If this node throws a BackingStoreException, the exception will propagate out beyond the enclosing childrenNames() invocation.",;java.util.prefs.AbstractPreferences.childrenNamesSpi(),;1
childSpi,1,1,"Returns the named child of this preference node, creating it if it does not already exist. It is guaranteed that name is non-null, non-empty, does not contain the slash character ('/'), and is no longer than Preferences.MAX_NAME_LENGTH characters. Also, it is guaranteed that this node has not been removed. (The implementor needn't check for any of these things.) Finally, it is guaranteed that the named node has not been returned by a previous invocation of this method or getChild(String) after the last time that it was removed. In other words, a cached value will always be used in preference to invoking this method. Subclasses need not maintain their own cache of previously returned children. The implementer must ensure that the returned node has not been removed. If a like-named child of this node was previously removed, the implementer must return a newly constructed AbstractPreferences node; once removed, an AbstractPreferences node cannot be ""resuscitated."" If this method causes a node to be created, this node is not guaranteed to be persistent until the flush method is invoked on this node or one of its ancestors (or descendants). This method is invoked with the lock on this node held.",;java.util.prefs.AbstractPreferences.childSpi(String),;1
childValue,1,1,"Computes the child's initial value for this inheritable thread-local variable as a function of the parent's value at the time the child thread is created. This method is called from within the parent thread before the child is started. This method merely returns its input argument, and should be overridden if a different behavior is desired.",;java.lang.InheritableThreadLocal.childValue(T),;1
chooseEngineClientAlias,1,1,Choose an alias to authenticate the client side of an SSLEngine connection given the public key type and the list of certificate issuer authorities recognized by the peer (if any). The default implementation returns null.,";javax.net.ssl.X509ExtendedKeyManager.chooseEngineClientAlias(String[],Principal[],SSLEngine)",;1
chooseEngineServerAlias,1,1,Choose an alias to authenticate the server side of an SSLEngine connection given the public key type and the list of certificate issuer authorities recognized by the peer (if any). The default implementation returns null.,";javax.net.ssl.X509ExtendedKeyManager.chooseEngineServerAlias(String,Principal[],SSLEngine)",;1
chronology,1,1,"A query for the Chronology. This queries a TemporalAccessor for the chronology. If the target TemporalAccessor represents a date, or part of a date, then it should return the chronology that the date is expressed in. As a result of this definition, objects only representing time, such as LocalTime, will return null. The result from JDK classes implementing TemporalAccessor is as follows:LocalDate returns IsoChronology.INSTANCELocalTime returns null (does not represent a date)LocalDateTime returns IsoChronology.INSTANCEZonedDateTime returns IsoChronology.INSTANCEOffsetTime returns null (does not represent a date)OffsetDateTime returns IsoChronology.INSTANCEChronoLocalDate returns the associated chronologyChronoLocalDateTime returns the associated chronologyChronoZonedDateTime returns the associated chronologyEra returns the associated chronologyDayOfWeek returns null (shared across chronologies)Month returns IsoChronology.INSTANCEYear returns IsoChronology.INSTANCEYearMonth returns IsoChronology.INSTANCEMonthDay returns null IsoChronology.INSTANCEZoneOffset returns null (does not represent a date)Instant returns null (does not represent a date) The method Chronology.from(TemporalAccessor) can be used as a TemporalQuery via a method reference, Chronology::from. That method is equivalent to this query, except that it throws an exception if a chronology cannot be obtained.",;java.time.temporal.TemporalQueries.chronology(),;1
classattr,1,1,Returns a new class attribute expression which can be used in any Query call that expects a ValueExp.Evaluating this expression for a given objectName includes performing MBeanServer.getObjectInstance(objectName).,;javax.management.Query.classattr(),;1
classDepth,1,1,Deprecated.This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.,;java.lang.SecurityManager.classDepth(String),;1
classEquals,1,1,"Tests to see if two class objects, or their names are equal.",";java.beans.beancontext.BeanContextSupport.classEquals(Class,Class)",;1
classLoaderDepth,1,1,Deprecated.This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.,;java.lang.SecurityManager.classLoaderDepth(),;1
classModifiers,1,1,Return an int value OR-ing together the source language modifiers that can be applied to a class.,;java.lang.reflect.Modifier.classModifiers(),;1
clearAssertionStatus,1,1,Sets the default assertion status for this class loader to false and discards any package defaults or class assertion status settings associated with the class loader. This method is provided so that class loaders can be made to ignore any command line or persistent assertion status settings and "start with a clean slate.",;java.lang.ClassLoader.clearAssertionStatus(),;1
clearAutoscroll,1,1,clear autoscrolling,;java.awt.dnd.DropTarget.clearAutoscroll(),;1
clearBit,1,1,Returns a BigInteger whose value is equivalent to this BigInteger with the designated bit cleared. (Computes (this &amp; ~(1&lt;&lt;n)).),;java.math.BigInteger.clearBit(int),;1
clearChanged,1,1,"Indicates that this object has no longer changed, or that it has already notified all of its observers of its most recent change, so that the hasChanged method will now return false. This method is called automatically by the notifyObservers methods.",;java.util.Observable.clearChanged(),;1
clearContent,1,1,Clears out the content of this AttachmentPart object. The MIME header portion is left untouched.,;javax.xml.soap.AttachmentPart.clearContent(),;1
clearExtensions,1,1,"Resets the extensions to their initial, empty state. Language, script, region and variant are unchanged.",;java.util.Locale.Builder.clearExtensions(),;1
clearFocusOwner,1,1,"Clears the focus owner at both the Java and native levels if the focus owner exists and resides in the same context as the calling thread, otherwise the method returns silently. The focus owner component will receive a permanent FOCUS_LOST event. After this operation completes, the native windowing system will discard all user-generated KeyEvents until the user selects a new Component to receive focus, or a Component is given focus explicitly via a call to requestFocus(). This operation does not change the focused or active Windows.",;java.awt.KeyboardFocusManager.clearFocusOwner(),;1
clearGlobalFocusOwner,1,1,"Clears the global focus owner at both the Java and native levels. If there exists a focus owner, that Component will receive a permanent FOCUS_LOST event. After this operation completes, the native windowing system will discard all user-generated KeyEvents until the user selects a new Component to receive focus, or a Component is given focus explicitly via a call to requestFocus(). This operation does not change the focused or active Windows. If a SecurityManager is installed, the calling thread must be granted the ""replaceKeyboardFocusManager"" AWTPermission. If this permission is not granted, this method will throw a SecurityException, and the current focus owner will not be cleared. This method is intended to be used only by KeyboardFocusManager set as current KeyboardFocusManager for the calling thread's context. It is not for general client use.",;java.awt.KeyboardFocusManager.clearGlobalFocusOwner(),;1
clearProperty,1,1,"Removes the system property indicated by the specified key. First, if a security manager exists, its SecurityManager.checkPermission method is called with a PropertyPermission(key, ""write"") permission. This may result in a SecurityException being thrown. If no exception is thrown, the specified property is removed.",;java.lang.System.clearProperty(String),;1
clearSelectedPath,1,1,Tell the menu selection to close and unselect all the menu components. Call this method when a choice has been made,;javax.swing.MenuSelectionManager.clearSelectedPath(),;1
clearToggledPaths,1,1,Clears the cache of toggled tree paths. This does NOT send out any TreeExpansionListener events.,;javax.swing.JTree.clearToggledPaths(),;1
clientClosed,1,1,"Method called when a client connection created by makeClient is closed. A subclass that defines makeClient must arrange for this method to be called when the resultant object's close method is called. This enables it to be removed from the RMIServerImpl's list of connections. It is not an error for client not to be in that list.After removing client from the list of connections, this method calls closeClient(client).",;javax.management.remote.rmi.RMIServerImpl.clientClosed(RMIConnection),;1
clip,1,1,"Intersects the current Clip with the interior of the specified Shape and sets the Clip to the resulting intersection. The specified Shape is transformed with the current Graphics2DTransform before being intersected with the current Clip. This method is used to make the current Clip smaller. To make the Clip larger, use setClip. The user clip modified by this method is independent of the clipping associated with device bounds and visibility. If no clip has previously been set, or if the clip has been cleared using setClip with a null argument, the specified Shape becomes the new user clip.",;java.awt.Graphics2D.clip(Shape),;1
clockSequence,1,1,"The clock sequence value associated with this UUID. The 14 bit clock sequence value is constructed from the clock sequence field of this UUID. The clock sequence field is used to guarantee temporal uniqueness in a time-based UUID. The clockSequence value is only meaningful in a time-based UUID, which has version type 1. If this UUID is not a time-based UUID then this method throws UnsupportedOperationException.",;java.util.UUID.clockSequence(),;1
cloneNode,1,1,"Returns a duplicate of this node. The duplicate node has no parent (getParentNode returns null). If a shallow clone is being performed (deep is false), the new node will not have any children or siblings. If a deep clone is being performed, the new node will form the root of a complete cloned subtree.",;javax.imageio.metadata.IIOMetadataNode.cloneNode(boolean),;1
cloneWithSource,1,1,"Returns a copy of the receiver, but with the source being newSource.",;javax.swing.event.TreeSelectionEvent.cloneWithSource(Object),;1
closeInbound,1,1,"Signals that no more inbound network data will be sent to this SSLEngine. If the application initiated the closing process by calling closeOutbound(), under some circumstances it is not required that the initiator wait for the peer's corresponding close message. (See section 7.2.1 of the TLS specification (RFC 2246) for more information on waiting for closure alerts.) In such cases, this method need not be called. But if the application did not initiate the closure process, or if the circumstances above do not apply, this method should be called whenever the end of the SSL/TLS data stream is reached. This ensures closure of the inbound side, and checks that the peer followed the SSL/TLS close procedure properly, thus detecting possible truncation attacks. This method is idempotent: if the inbound side has already been closed, this method does not do anything. wrap() should be called to flush any remaining handshake data.",;javax.net.ssl.SSLEngine.closeInbound(),;1
closeOutbound,1,1,"Signals that no more outbound application data will be sent on this SSLEngine. This method is idempotent: if the outbound side has already been closed, this method does not do anything. wrap(ByteBuffer, ByteBuffer) should be called to flush any remaining handshake data.",;javax.net.ssl.SSLEngine.closeOutbound(),;1
closeOutUnwantedEmbeddedTags,1,1,"Searches the attribute set and for each tag that is stored in the tag vector. If the tag is not found, then the tag is removed from the vector and a corresponding end tag is written out.",;javax.swing.text.html.HTMLWriter.closeOutUnwantedEmbeddedTags(AttributeSet),;1
closePath,1,1,Closes the current subpath by drawing a straight line back to the coordinates of the last moveTo. If the path is already closed then this method has no effect.,;java.awt.geom.Path2D.closePath(),;1
coalesceEvents,1,1,"Potentially coalesce an event being posted with an existing event. This method is called by EventQueue.postEvent if an event with the same ID as the event to be posted is found in the queue (both events must have this component as their source). This method either returns a coalesced event which replaces the existing event (and the new event is then discarded), or null to indicate that no combining should be done (add the second event to the end of the queue). Either event parameter may be modified and returned, as the other one is discarded unless null is returned. This implementation of coalesceEvents coalesces two event types: mouse move (and drag) events, and paint (and update) events. For mouse move events the last event is always returned, causing intermediate moves to be discarded. For paint events, the new event is coalesced into a complex RepaintArea in the peer. The new AWTEvent is always returned.",";java.awt.Component.coalesceEvents(AWTEvent,AWTEvent)",;1
collapsePath,1,1,Ensures that the node identified by the specified path is collapsed and viewable.,;javax.swing.JTree.collapsePath(TreePath),;1
collapseRow,1,1,Ensures that the node in the specified row is collapsed. If row is &lt; 0 or &gt;= getRowCount this will have no effect.,;javax.swing.JTree.collapseRow(int),;1
collectArguments,1,1,"Adapts a target method handle by pre-processing a sub-sequence of its arguments with a filter (another method handle). The pre-processed arguments are replaced by the result (if any) of the filter function. The target is then called on the modified (usually shortened) argument list. If the filter returns a value, the target must accept that value as its argument in position pos, preceded and/or followed by any arguments not passed to the filter. If the filter returns void, the target must accept all arguments not passed to the filter. No arguments are reordered, and a result returned from the filter replaces (in order) the whole subsequence of arguments originally passed to the adapter. The argument types (if any) of the filter replace zero or one argument types of the target, at position pos, in the resulting adapted method handle. The return type of the filter (if any) must be identical to the argument type of the target at position pos, and that target argument is supplied by the return value of the filter. In all cases, pos must be greater than or equal to zero, and pos must also be less than or equal to the target's arity. Example:import static java.lang.invoke.MethodHandles.*;import static java.lang.invoke.MethodType.*;...MethodHandle deepToString = publicLookup() .findStatic(Arrays.class, ""deepToString"", methodType(String.class, Object[].class));MethodHandle ts1 = deepToString.asCollector(String[].class, 1);assertEquals(""[strange]"", (String) ts1.invokeExact(""strange""));MethodHandle ts2 = deepToString.asCollector(String[].class, 2);assertEquals(""[up, down]"", (String) ts2.invokeExact(""up"", ""down""));MethodHandle ts3 = deepToString.asCollector(String[].class, 3);MethodHandle ts3_ts2 = collectArguments(ts3, 1, ts2);assertEquals(""[top, [up, down], strange]"", (String) ts3_ts2.invokeExact(""top"", ""up"", ""down"", ""strange""));MethodHandle ts3_ts2_ts1 = collectArguments(ts3_ts2, 3, ts1);assertEquals(""[top, [up, down], [strange]]"", (String) ts3_ts2_ts1.invokeExact(""top"", ""up"", ""down"", ""strange""));MethodHandle ts3_ts2_ts3 = collectArguments(ts3_ts2, 1, ts3);assertEquals(""[top, [[up, down, strange], charm], bottom]"", (String) ts3_ts2_ts3.invokeExact(""top"", ""up"", ""down"", ""strange"", ""charm"", ""bottom"")); Here is pseudocode for the resulting adapter: T target(A...,V,C...); V filter(B...); T adapter(A... a,B... b,C... c) { V v = filter(b...); return target(a...,v,c...); } // and if the filter has no arguments: T target2(A...,V,C...); V filter2(); T adapter2(A... a,C... c) { V v = filter2(); return target2(a...,v,c...); } // and if the filter has a void return: T target3(A...,C...); void filter3(B...); void adapter3(A... a,B... b,C... c) { filter3(b...); return target3(a...,c...); } A collection adapter collectArguments(mh, 0, coll) is equivalent to one which first ""folds"" the affected arguments, and then drops them, in separate steps as follows: mh = MethodHandles.dropArguments(mh, 1, coll.type().parameterList()); //step 2 mh = MethodHandles.foldArguments(mh, coll); //step 1 If the target method handle consumes no arguments besides than the result (if any) of the filter coll, then collectArguments(mh, 0, coll) is equivalent to filterReturnValue(coll, mh). If the filter method handle coll consumes one argument and produces a non-void result, then collectArguments(mh, N, coll) is equivalent to filterArguments(mh, N, coll). Other equivalences are possible but would require argument permutation.",";java.lang.invoke.MethodHandles.collectArguments(MethodHandle,int,MethodHandle)",;1
collectingAndThen,1,1,"Adapts a Collector to perform an additional finishing transformation. For example, one could adapt the toList() collector to always produce an immutable list with: List&lt;String&gt; people = people.stream().collect(collectingAndThen(toList(), Collections::unmodifiableList));",";java.util.stream.Collectors.collectingAndThen(Collector&lt;T,A,R&gt;,Function&lt;R,RR&gt;)",;1
commentChar,1,1,Specified that the character argument starts a single-line comment. All characters from the comment character to the end of the line are ignored by this stream tokenizer. Any other attribute settings for the specified character are cleared.,;java.io.StreamTokenizer.commentChar(int),;1
commonPool,1,1,"Returns the common pool instance. This pool is statically constructed; its run state is unaffected by attempts to shutdown() or shutdownNow(). However this pool and any ongoing processing are automatically terminated upon program System.exit(int). Any program that relies on asynchronous task processing to complete before program termination should invoke commonPool().awaitQuiescence, before exit.",;java.util.concurrent.ForkJoinPool.commonPool(),;1
compareAndSetForkJoinTaskTag,1,1,"Atomically conditionally sets the tag value for this task. Among other applications, tags can be used as visit markers in tasks operating on graphs, as in methods that check: if (task.compareAndSetForkJoinTaskTag((short)0, (short)1)) before processing, otherwise exiting because the node has already been visited.",";java.util.concurrent.ForkJoinTask.compareAndSetForkJoinTaskTag(short,short)",;1
compareAndSetPendingCount,1,1,Sets (atomically) the pending count to the given count only if it currently holds the given expected value.,";java.util.concurrent.CountedCompleter.compareAndSetPendingCount(int,int)",;1
compareDocumentPosition,1,1,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.,;javax.imageio.metadata.IIOMetadataNode.compareDocumentPosition(Node),;1
compareToIgnoreCase,1,1,"Compares two strings lexicographically, ignoring case differences. This method returns an integer whose sign is that of calling compareTo with normalized versions of the strings where case differences have been eliminated by calling Character.toLowerCase(Character.toUpperCase(character)) on each character. Note that this method does not take locale into account, and will result in an unsatisfactory ordering for certain locales. The java.text package provides collators to allow locale-sensitive ordering.",;java.lang.String.compareToIgnoreCase(String),;1
compileClass,1,1,Compiles the specified class.,;java.lang.Compiler.compileClass(Class&lt;?&gt;),;1
compileClasses,1,1,Compiles all classes whose name matches the specified string.,;java.lang.Compiler.compileClasses(String),;1
complementOf,1,1,"Creates an enum set with the same element type as the specified enum set, initially containing all the elements of this type that are not contained in the specified set.",;java.util.EnumSet.complementOf(EnumSet&lt;E&gt;),;1
completedFuture,1,1,Returns a new CompletableFuture that is already completed with the given value.,;java.util.concurrent.CompletableFuture.completedFuture(U),;1
completeUIInstall,1,1,Invoked from installUI after all the defaults/listeners have been installed.,;javax.swing.plaf.basic.BasicTreeUI.completeUIInstall(),;1
componentForPoint,1,1,Returns the component in the currently selected path which contains sourcePoint.,";javax.swing.MenuSelectionManager.componentForPoint(Component,Point)",;1
computeBlit,1,1,Computes the parameters for a blit where the backing store image currently contains oldLoc in the upper left hand corner and we're scrolling to newLoc. The parameters are modified to return the values required for the blit.,";javax.swing.JViewport.computeBlit(int,int,Point,Point,Dimension,Rectangle)",;1
computeDifference,1,1,"Convenience returning an array of rect representing the regions within rectA that do not overlap with rectB. If the two Rects do not overlap, returns an empty array",";javax.swing.SwingUtilities.computeDifference(Rectangle,Rectangle)",;1
computeIntersection,1,1,"Convenience to calculate the intersection of two rectangles without allocating a new rectangle. If the two rectangles don't intersect, then the returned rectangle begins at (0,0) and has zero width and height.",";javax.swing.SwingUtilities.computeIntersection(int,int,int,int,Rectangle)",;1
computePopupBounds,1,1,"Calculate the placement and size of the popup portion of the combo box based on the combo box location and the enclosing screen bounds. If no transformations are required, then the returned rectangle will have the same values as the parameters.",";javax.swing.plaf.basic.BasicComboPopup.computePopupBounds(int,int,int,int)",;1
computeRegions,1,1,"Computes the source region of interest and the destination region of interest, taking the width and height of the source image, an optional destination image, and an optional ImageReadParam into account. The source region begins with the entire source image. Then that is clipped to the source region specified in the ImageReadParam, if one is specified. If either of the destination offsets are negative, the source region is clipped so that its top left will coincide with the top left of the destination image, taking subsampling into account. Then the result is clipped to the destination image on the right and bottom, if one is specified, taking subsampling and destination offsets into account. Similarly, the destination region begins with the source image, is translated to the destination offset given in the ImageReadParam if there is one, and finally is clipped to the destination image, if there is one. If either the source or destination regions end up having a width or height of 0, an IllegalArgumentException is thrown. The getSourceRegion&gt; method may be used if only source clipping is desired.",";javax.imageio.ImageReader.computeRegions(ImageReadParam,int,int,BufferedImage,Rectangle,Rectangle)",;1
computeUnion,1,1,Convenience method that calculates the union of two rectangles without allocating a new rectangle.,";javax.swing.SwingUtilities.computeUnion(int,int,int,int,Rectangle)",;1
computeValue,1,1,"Computes the given class's derived value for this ClassValue. This method will be invoked within the first thread that accesses the value with the get method. Normally, this method is invoked at most once per class, but it may be invoked again if there has been a call to remove. If this method throws an exception, the corresponding call to get will terminate abnormally with that exception, and no class value will be recorded.",;java.lang.ClassValue.computeValue(Class&lt;?&gt;),;1
computeVisibleRect,1,1,Returns the Component's "visible rect rectangle" - the intersection of the visible rectangles for this component and all of its ancestors. The return value is stored in visibleRect.,;javax.swing.JComponent.computeVisibleRect(Rectangle),;1
concat,1,1,"Concatenates the specified string to the end of this string. If the length of the argument string is 0, then this String object is returned. Otherwise, a String object is returned that represents a character sequence that is the concatenation of the character sequence represented by this String object and the character sequence represented by the argument string. Examples: ""cares"".concat(""s"") returns ""caress"" ""to"".concat(""get"").concat(""her"") returns ""together""",;java.lang.String.concat(String),;1
concatenate,1,1,"Concatenates an AffineTransform Tx to this AffineTransform Cx in the most commonly useful way to provide a new user space that is mapped to the former user space by Tx. Cx is updated to perform the combined transformation. Transforming a point p by the updated transform Cx' is equivalent to first transforming p by Tx and then transforming the result by the original transform Cx like this: Cx'(p) = Cx(Tx(p)) In matrix notation, if this transform Cx is represented by the matrix [this] and Tx is represented by the matrix [Tx] then this method does the following: [this] = [this] x [Tx]",;java.awt.geom.AffineTransform.concatenate(AffineTransform),;1
concatenateTransform,1,1,Modifies the current user-to-device transform by appending another transform. In matrix notation the operation is: [this] = [this] x [modTransform],;java.awt.image.renderable.RenderContext.concatenateTransform(AffineTransform),;1
concetenateTransform,1,1,Deprecated.replaced by concatenateTransform(AffineTransform).,;java.awt.image.renderable.RenderContext.concetenateTransform(AffineTransform),;1
concrete_base_type,1,1,Returns the TypeCode object that describes the concrete base type of the value type that this TypeCode object describes. Returns null if it doesn't have a concrete base type.,;org.omg.CORBA.TypeCode.concrete_base_type(),;1
configureArrowButton,1,1,This public method is implementation specific and should be private. Do not call or override.,;javax.swing.plaf.basic.BasicComboBoxUI.configureArrowButton(),;1
configureEnclosingScrollPane,1,1,"If this JTable is the viewportView of an enclosing JScrollPane (the usual situation), configure this ScrollPane by, amongst other things, installing the table's tableHeader as the columnHeaderView of the scroll pane. When a JTable is added to a JScrollPane in the usual way, using new JScrollPane(myTable), addNotify is called in the JTable (when the table is added to the viewport). JTable's addNotify method in turn calls this method, which is protected so that this default installation procedure can be overridden by a subclass.",;javax.swing.JTable.configureEnclosingScrollPane(),;1
configureGraphics,1,1,"Configures the given Graphics2D. Often, rendering hints or compositing rules are applied to a Graphics2D object prior to painting, which should affect all of the subsequent painting operations. This method provides a convenient hook for configuring the Graphics object prior to rendering, regardless of whether the render operation is performed to an intermediate buffer or directly to the display.",;javax.swing.plaf.nimbus.AbstractRegionPainter.configureGraphics(Graphics2D),;1
configureLayoutCache,1,1,Resets the TreeState instance based on the tree we're providing the look and feel for.,;javax.swing.plaf.basic.BasicTreeUI.configureLayoutCache(),;1
configureList,1,1,Configures the list which is used to hold the combo box items in the popup. This method is called when the UI class is created.,;javax.swing.plaf.basic.BasicComboPopup.configureList(),;1
configurePopup,1,1,Configures the popup portion of the combo box. This method is called when the UI class is created.,;javax.swing.plaf.basic.BasicComboPopup.configurePopup(),;1
configureScroller,1,1,Configures the scrollable portion which holds the list within the combo box popup. This method is called when the UI class is created.,;javax.swing.plaf.basic.BasicComboPopup.configureScroller(),;1
connectFailed,1,1,"Called to indicate that a connection could not be established to a proxy/socks server. An implementation of this method can temporarily remove the proxies or reorder the sequence of proxies returned by select(URI), using the address and the IOException caught when trying to connect.",";java.net.ProxySelector.connectFailed(URI,SocketAddress,IOException)",;1
console,1,1,"Returns the unique Console object associated with the current Java virtual machine, if any.",;java.lang.System.console(),;1
constructorModifiers,1,1,Return an int value OR-ing together the source language modifiers that can be applied to a constructor.,;java.lang.reflect.Modifier.constructorModifiers(),;1
containedIn,1,1,A utility method to test if this Oid value is contained within the supplied Oid array.,;org.ietf.jgss.Oid.containedIn(Oid[]),;1
containsAlias,1,1,Checks if the given alias exists in this keystore.,;java.security.KeyStore.containsAlias(String),;1
containsAngle,1,1,Determines whether or not the specified angle is within the angular extents of the arc.,;java.awt.geom.Arc2D.containsAngle(double),;1
containsAttribute,1,1,Checks whether the attribute list contains a specified attribute name/value pair.,";javax.swing.text.SimpleAttributeSet.containsAttribute(Object,Object)",;1
containsAttributes,1,1,Checks whether the attribute list contains all the specified name/value pairs.,;javax.swing.text.SimpleAttributeSet.containsAttributes(AttributeSet),;1
containsObservedObject,1,1,Tests whether the specified object is in the set of observed MBeans.,;javax.management.monitor.Monitor.containsObservedObject(ObjectName),;1
content_type,1,1,"Returns the TypeCode object representing the IDL type for the members of the object described by this TypeCode object. For sequences and arrays, it returns the element type. For aliases, it returns the original type. Note that multidimensional arrays are represented by nesting TypeCode objects, one per dimension. For boxed valuetypes, it returns the boxed type. The method content_type can be invoked on sequence, array, alias, and boxed valuetype TypeCode objects.",;org.omg.CORBA.TypeCode.content_type(),;1
contentsChanged,1,1,This method is public as an implementation side effect. do not call or override.,;javax.swing.JComboBox.contentsChanged(ListDataEvent),;1
contentsRestored,1,1,"Returns whether the drawing buffer was recently restored from a lost state and reinitialized to the default background color (white). Since the buffers in a buffer strategy are usually type VolatileImage, they may become lost. If a surface has been recently restored from a lost state since the last call to getDrawGraphics, it may require repainting. For a discussion on lost buffers, see VolatileImage.",;java.awt.image.BufferStrategy.contentsRestored(),;1
context_name,1,1,Retrieves the name of this Context object.,;org.omg.CORBA.Context.context_name(),;1
contexts,1,1,Retrieves the ContextList object for this request. This list contains context Strings that need to be resolved and sent with the invocation.,;org.omg.CORBA.Request.contexts(),;1
controlDown,1,1,NOTE: The Event class is obsolete and is available only for backwards compatibility. It has been replaced by the AWTEvent class and its subclasses. Checks if the Control key is down.,;java.awt.Event.controlDown(),;1
convertColumnIndexToModel,1,1,"Maps the index of the column in the view at viewColumnIndex to the index of the column in the table model. Returns the index of the corresponding column in the model. If viewColumnIndex is less than zero, returns viewColumnIndex.",;javax.swing.JTable.convertColumnIndexToModel(int),;1
convertColumnIndexToView,1,1,"Maps the index of the column in the table model at modelColumnIndex to the index of the column in the view. Returns the index of the corresponding column in the view; returns -1 if this column is not being displayed. If modelColumnIndex is less than zero, returns modelColumnIndex.",;javax.swing.JTable.convertColumnIndexToView(int),;1
convertImageMetadata,1,1,Description copied from interface:ImageTranscoder,";javax.imageio.ImageWriter.convertImageMetadata(IIOMetadata,ImageTypeSpecifier,ImageWriteParam)",;1
convertMouseEvent,1,1,"Returns a MouseEvent similar to sourceEvent except that its x and y members have been converted to destination's coordinate system. If source is null, sourceEvent x and y members are assumed to be into destination's root component coordinate system. If destination is null, the returned MouseEvent will be in source's coordinate system. sourceEvent will not be changed. A new event is returned. the source field of the returned event will be set to destination if destination is non-null use the translateMouseEvent() method to translate a mouse event from one component to another without changing the source.",";javax.swing.SwingUtilities.convertMouseEvent(Component,MouseEvent,Component)",;1
convertPointFromScreen,1,1,Convert a point from a screen coordinates to a component's coordinate system,";javax.swing.SwingUtilities.convertPointFromScreen(Point,Component)",;1
convertPointToScreen,1,1,Convert a point from a component's coordinate system to screen coordinates.,";javax.swing.SwingUtilities.convertPointToScreen(Point,Component)",;1
convertPreviousRowIndexToModel,1,1,"Returns the location of index in terms of the model prior to the sort. This method is only useful for events of type SORTED. This method will return -1 if the index is not valid, or the locations prior to the sort have not been provided.",;javax.swing.event.RowSorterEvent.convertPreviousRowIndexToModel(int),;1
convertRectangle,1,1,"Convert the rectangle aRectangle in source coordinate system to destination coordinate system. If source is null, aRectangle is assumed to be in destination's root component coordinate system. If destination is null, aRectangle will be converted to source's root component coordinate system. If both source and destination are null, return aRectangle without any conversion.",";javax.swing.SwingUtilities.convertRectangle(Component,Rectangle,Component)",;1
convertRowToY,1,1,Return the JList relative Y coordinate of the origin of the specified row or -1 if row isn't valid.,;javax.swing.plaf.basic.BasicListUI.convertRowToY(int),;1
convertStreamMetadata,1,1,Description copied from interface:ImageTranscoder,";javax.imageio.ImageWriter.convertStreamMetadata(IIOMetadata,ImageWriteParam)",;1
convertToIntDiscrete,1,1,"Returns a new BufferedImage of TYPE_INT_ARGB or TYPE_INT_RGB that has a Raster with pixel data computed by expanding the indices in the source Raster using the color/alpha component arrays of this ColorModel. Only the lower n bits of each index value in the source Raster, as specified in the class description above, are used to compute the color/alpha values in the returned image. If forceARGB is true, a TYPE_INT_ARGB image is returned regardless of whether or not this ColorModel has an alpha component array or a transparent pixel.",";java.awt.image.IndexColorModel.convertToIntDiscrete(Raster,boolean)",;1
convertValueToText,1,1,"Called by the renderers to convert the specified value to text. This implementation returns value.toString, ignoring all other arguments. To control the conversion, subclass this method and use any of the arguments you need.",";javax.swing.JTree.convertValueToText(Object,boolean,boolean,boolean,int,boolean)",;1
convertYToRow,1,1,"Convert the JList relative coordinate to the row that contains it, based on the current layout. If y0 doesn't fall within any row, return -1.",;javax.swing.plaf.basic.BasicListUI.convertYToRow(int),;1
copyAttributes,1,1,Makes a copy of the attributes.,;javax.swing.text.SimpleAttributeSet.copyAttributes(),;1
copyChildren,1,1,Gets a copy of the this BeanContext's children.,;java.beans.beancontext.BeanContextSupport.copyChildren(),;1
copyData,1,1,"Computes an arbitrary rectangular region of the BufferedImage and copies it into a specified WritableRaster. The region to be computed is determined from the bounds of the specified WritableRaster. The specified WritableRaster must have a SampleModel that is compatible with this image. If outRaster is null, an appropriate WritableRaster is created.",;java.awt.image.BufferedImage.copyData(WritableRaster),;1
copyObject,1,1,"Copies or connects an object. Used by local stubs to copy an actual parameter, result object, or exception.",";javax.rmi.CORBA.Util.copyObject(Object,ORB)",;1
copyObjects,1,1,"Copies or connects an array of objects. Used by local stubs to copy any number of actual parameters, preserving sharing across parameters as necessary to support RMI semantics.",";javax.rmi.CORBA.Util.copyObjects(Object[],ORB)",;1
countAttachments,1,1,Gets a count of the number of attachments in this message. This count does not include the SOAP part.,;javax.xml.soap.SOAPMessage.countAttachments(),;1
countComponents,1,1,"Deprecated.As of JDK version 1.1, replaced by getComponentCount().",;java.awt.Container.countComponents(),;1
countDown,1,1,"Decrements the count of the latch, releasing all waiting threads if the count reaches zero. If the current count is greater than zero then it is decremented. If the new count is zero then all waiting threads are re-enabled for thread scheduling purposes. If the current count equals zero then nothing happens.",;java.util.concurrent.CountDownLatch.countDown(),;1
counting,1,1,"Returns a Collector accepting elements of type T that counts the number of input elements. If no elements are present, the result is 0.",;java.util.stream.Collectors.counting(),;1
countMenus,1,1,"Deprecated.As of JDK version 1.1, replaced by getMenuCount().",;java.awt.MenuBar.countMenus(),;1
countObservers,1,1,Returns the number of observers of this Observable object.,;java.util.Observable.countObservers(),;1
countStackFrames,1,1,"Deprecated.The definition of this call depends on suspend(), which is deprecated. Further, the results of this call were never well-defined.",;java.lang.Thread.countStackFrames(),;1
countTokens,1,1,Calculates the number of times that this tokenizer's nextToken method can be called before it generates an exception. The current position is not advanced.,;java.util.StringTokenizer.countTokens(),;1
create_abstract_interface_tc,1,1,Create a TypeCode object for an IDL abstract interface.,";org.omg.CORBA.ORB.create_abstract_interface_tc(String,String)",;1
create_alias_tc,1,1,"Creates a TypeCode object representing an IDL alias (typedef). The TypeCode object is initialized with the given id, name, and original type.",";org.omg.CORBA.ORB.create_alias_tc(String,String,TypeCode)",;1
create_any,1,1,Creates an IDL Any object initialized to contain a Typecode object whose kind field is set to TCKind.tc_null.,;org.omg.CORBA.ORB.create_any(),;1
create_array_tc,1,1,Creates a TypeCode object representing an IDL array. The TypeCode object is initialized with the given length and element type.,";org.omg.CORBA.ORB.create_array_tc(int,TypeCode)",;1
create_basic_dyn_any,1,1,Deprecated.Use the new DynAnyFactory API instead,;org.omg.CORBA.ORB.create_basic_dyn_any(TypeCode),;1
create_child,1,1,"Creates a Context object with the given string as its name and with this Context object set as its parent. The new Context object is chained into its parent Context object. This means that in a search for matching property names, if a match is not found in this context, the search will continue in the parent. If that is not successful, the search will continue in the grandparent, if there is one, and so on.",;org.omg.CORBA.Context.create_child(String),;1
create_context_list,1,1,Creates an empty ContextList object.,;org.omg.CORBA.ORB.create_context_list(),;1
create_dyn_array,1,1,Deprecated.Use the new DynAnyFactory API instead,;org.omg.CORBA.ORB.create_dyn_array(TypeCode),;1
create_dyn_enum,1,1,Deprecated.Use the new DynAnyFactory API instead,;org.omg.CORBA.ORB.create_dyn_enum(TypeCode),;1
create_dyn_sequence,1,1,Deprecated.Use the new DynAnyFactory API instead,;org.omg.CORBA.ORB.create_dyn_sequence(TypeCode),;1
create_dyn_struct,1,1,Deprecated.Use the new DynAnyFactory API instead,;org.omg.CORBA.ORB.create_dyn_struct(TypeCode),;1
create_dyn_union,1,1,Deprecated.Use the new DynAnyFactory API instead,;org.omg.CORBA.ORB.create_dyn_union(TypeCode),;1
create_enum_tc,1,1,"Creates a TypeCode object representing an IDL enum. The TypeCode object is initialized with the given id, name, and members.",";org.omg.CORBA.ORB.create_enum_tc(String,String,String[])",;1
create_environment,1,1,Creates an Environment object.,;org.omg.CORBA.ORB.create_environment(),;1
create_exception_list,1,1,Creates an empty ExceptionList object.,;org.omg.CORBA.ORB.create_exception_list(),;1
create_exception_tc,1,1,"Creates a TypeCode object representing an IDL exception. The TypeCode object is initialized with the given id, name, and members.",";org.omg.CORBA.ORB.create_exception_tc(String,String,StructMember[])",;1
create_fixed_tc,1,1,Create a TypeCode object for an IDL fixed type.,";org.omg.CORBA.ORB.create_fixed_tc(short,short)",;1
create_interface_tc,1,1,Creates a TypeCode object representing an IDL interface. The TypeCode object is initialized with the given id and name.,";org.omg.CORBA.ORB.create_interface_tc(String,String)",;1
create_list,1,1,Allocates an NVList with (probably) enough space for the specified number of NamedValue objects. Note that the specified size is only a hint to help with storage allocation and does not imply the maximum size of the list.,;org.omg.CORBA.ORB.create_list(int),;1
create_named_value,1,1,"Creates a NamedValue object using the given name, value, and argument mode flags. A NamedValue object serves as (1) a parameter or return value or (2) a context property. It may be used by itself or as an element in an NVList object.",";org.omg.CORBA.ORB.create_named_value(String,Any,int)",;1
create_native_tc,1,1,Create a TypeCode object for an IDL native type.,";org.omg.CORBA.ORB.create_native_tc(String,String)",;1
create_operation_list,1,1,"Creates an NVList initialized with argument descriptions for the operation described in the given OperationDef object. This OperationDef object is obtained from an Interface Repository. The arguments in the returned NVList object are in the same order as in the original IDL operation definition, which makes it possible for the list to be used in dynamic invocation requests.",;org.omg.CORBA.ORB.create_operation_list(Object),;1
create_policy,1,1,"Can be invoked to create new instances of policy objects of a specific type with specified initial state. If create_policy fails to instantiate a new Policy object due to its inability to interpret the requested type and content of the policy, it raises the PolicyError exception with the appropriate reason.",";org.omg.CORBA.ORB.create_policy(int,Any)",;1
create_recursive_sequence_tc,1,1,Deprecated.Use a combination of create_recursive_tc and create_sequence_tc instead,";org.omg.CORBA.ORB.create_recursive_sequence_tc(int,int)",;1
create_recursive_tc,1,1,"Create a recursive TypeCode object which serves as a placeholder for a concrete TypeCode during the process of creating TypeCodes which contain recursion. The id parameter specifies the repository id of the type for which the recursive TypeCode is serving as a placeholder. Once the recursive TypeCode has been properly embedded in the enclosing TypeCode which corresponds to the specified repository id, it will function as a normal TypeCode. Invoking operations on the recursive TypeCode before it has been embedded in the enclosing TypeCode will result in a BAD_TYPECODE exception. For example, the following IDL type declaration contains recursion: Struct Node { Sequence&lt;Node&gt; subnodes; }; To create a TypeCode for struct Node, you would invoke the TypeCode creation operations as shown below: String nodeID = ""IDL:Node:1.0""; TypeCode recursiveSeqTC = orb.create_sequence_tc(0, orb.create_recursive_tc(nodeID)); StructMember[] members = { new StructMember(""subnodes"", recursiveSeqTC, null) }; TypeCode structNodeTC = orb.create_struct_tc(nodeID, ""Node"", members); Also note that the following is an illegal IDL type declaration: Struct Node { Node next; }; Recursive types can only appear within sequences which can be empty. That way marshaling problems, when transmitting the struct in an Any, are avoided.",;org.omg.CORBA.ORB.create_recursive_tc(String),;1
create_sequence_tc,1,1,Creates a TypeCode object representing an IDL sequence. The TypeCode object is initialized with the given bound and element type.,";org.omg.CORBA.ORB.create_sequence_tc(int,TypeCode)",;1
create_string_tc,1,1,"Creates a TypeCode object representing a bounded IDL string. The TypeCode object is initialized with the given bound, which represents the maximum length of the string. Zero indicates that the string described by this type code is unbounded.",;org.omg.CORBA.ORB.create_string_tc(int),;1
create_struct_tc,1,1,"Creates a TypeCode object representing an IDL struct. The TypeCode object is initialized with the given id, name, and members.",";org.omg.CORBA.ORB.create_struct_tc(String,String,StructMember[])",;1
create_union_tc,1,1,"Creates a TypeCode object representing an IDL union. The TypeCode object is initialized with the given id, name, discriminator type, and members.",";org.omg.CORBA.ORB.create_union_tc(String,String,TypeCode,UnionMember[])",;1
create_value_box_tc,1,1,Creates a TypeCode object for an IDL value box.,";org.omg.CORBA.ORB.create_value_box_tc(String,String,TypeCode)",;1
create_value_tc,1,1,Create a TypeCode object for an IDL value type. The concrete_base parameter is the TypeCode for the immediate concrete valuetype base of the valuetype for which the TypeCode is being created. It may be null if the valuetype does not have a concrete base.,";org.omg.CORBA.ORB.create_value_tc(String,String,short,TypeCode,ValueMember[])",;1
create_wstring_tc,1,1,"Creates a TypeCode object representing a bounded IDL wstring (wide string). The TypeCode object is initialized with the given bound, which represents the maximum length of the wide string. Zero indicates that the string described by this type code is unbounded.",;org.omg.CORBA.ORB.create_wstring_tc(int),;1
createAudioAction,1,1,"Creates and returns an Action used to play a sound. If key is non-null, an Action is created using the value from the defaults with key key. The value identifies the sound resource to load when actionPerformed is invoked on the Action. The sound resource is loaded into a byte[] by way of getClass().getResourceAsStream().",;javax.swing.plaf.basic.BasicLookAndFeel.createAudioAction(Object),;1
createBanded,1,1,Returns a specifier for a banded image format that will use a ComponentColorModel and a BandedSampleModel to store each channel in a separate array.,";javax.imageio.ImageTypeSpecifier.createBanded(ColorSpace,int[],int[],int,boolean,boolean)",;1
createBaselineGroup,1,1,Creates and returns a ParallelGroup that aligns it's elements along the baseline.,";javax.swing.GroupLayout.createBaselineGroup(boolean,boolean)",;1
createBCSSServiceProvider,1,1,subclasses can override this method to create new subclasses of BCSSServiceProvider without having to override addService() in order to instantiate.,";java.beans.beancontext.BeanContextServicesSupport.createBCSSServiceProvider(Class,BeanContextServiceProvider)",;1
createBlackLineBorder,1,1,Convenience method for getting the Color.black LineBorder of thickness 1.,;javax.swing.border.LineBorder.createBlackLineBorder(),;1
createBorderListener,1,1,Returns the MouseInputAdapter that will be installed on the TitlePane.,;javax.swing.plaf.metal.MetalInternalFrameUI.createBorderListener(JInternalFrame),;1
createBufferedImage,1,1,Creates a BufferedImage with a given width and height according to the specification embodied in this object.,";javax.imageio.ImageTypeSpecifier.createBufferedImage(int,int)",;1
createButton,1,1,Creates this toolkit's implementation of Button using the specified peer interface.,;java.awt.Toolkit.createButton(Button),;1
createButtonArea,1,1,Creates and returns a Container containing the buttons. The buttons are created by calling getButtons.,;javax.swing.plaf.basic.BasicOptionPaneUI.createButtonArea(),;1
createCanvas,1,1,Creates this toolkit's implementation of Canvas using the specified peer interface.,;java.awt.Toolkit.createCanvas(Canvas),;1
createCData,1,1,Create a Characters event with the CData flag set to true,;javax.xml.stream.XMLEventFactory.createCData(String),;1
createCellEditorListener,1,1,Creates a listener to handle events from the current editor.,;javax.swing.plaf.basic.BasicTreeUI.createCellEditorListener(),;1
createCellRendererPane,1,1,Returns the renderer pane that renderer components are placed in.,;javax.swing.plaf.basic.BasicTreeUI.createCellRendererPane(),;1
createCharacters,1,1,"Create a Characters event, this method does not check if the content is all whitespace. To create a space event use #createSpace(String)",;javax.xml.stream.XMLEventFactory.createCharacters(String),;1
createCheckbox,1,1,Creates this toolkit's implementation of Checkbox using the specified peer interface.,;java.awt.Toolkit.createCheckbox(Checkbox),;1
createCheckboxMenuItem,1,1,Creates this toolkit's implementation of CheckboxMenuItem using the specified peer interface.,;java.awt.Toolkit.createCheckboxMenuItem(CheckboxMenuItem),;1
createChild,1,1,"Returns a new Raster which shares all or part of this Raster's DataBuffer. The new Raster will possess a reference to the current Raster, accessible through its getParent() method. The parentX, parentY, width and height parameters form a Rectangle in this Raster's coordinate space, indicating the area of pixels to be shared. An error will be thrown if this Rectangle is not contained with the bounds of the current Raster. The new Raster may additionally be translated to a different coordinate system for the plane than that used by the current Raster. The childMinX and childMinY parameters give the new (x, y) coordinate of the upper-left pixel of the returned Raster; the coordinate (childMinX, childMinY) in the new Raster will map to the same pixel as the coordinate (parentX, parentY) in the current Raster. The new Raster may be defined to contain only a subset of the bands of the current Raster, possibly reordered, by means of the bandList parameter. If bandList is null, it is taken to include all of the bands of the current Raster in their current order. To create a new Raster that contains a subregion of the current Raster, but shares its coordinate system and bands, this method should be called with childMinX equal to parentX, childMinY equal to parentY, and bandList equal to null.",";java.awt.image.Raster.createChild(int,int,int,int,int,int,int[])",;1
createChildren,1,1,"Adds to parent all the children in children. If children is an array or vector all of its elements are added is children, otherwise if children is a hashtable all the key/value pairs are added in the order Enumeration returns them.",";javax.swing.JTree.DynamicUtilTreeNode.createChildren(DefaultMutableTreeNode,Object)",;1
createChildState,1,1,New ChildState records are created through this method to allow subclasses the extend the ChildState records to do/hold more,;javax.swing.text.AsyncBoxView.createChildState(View),;1
createChoice,1,1,Creates this toolkit's implementation of Choice using the specified peer interface.,;java.awt.Toolkit.createChoice(Choice),;1
createComment,1,1,Create a comment,;javax.xml.stream.XMLEventFactory.createComment(String),;1
createComponentListener,1,1,Creates and returns a new ComponentHandler. This is used for the large model to mark the validCachedPreferredSize as invalid when the component moves.,;javax.swing.plaf.basic.BasicTreeUI.createComponentListener(),;1
createCompoundEdit,1,1,Called only from beginUpdate. Exposed here for subclasses' use.,;javax.swing.undo.UndoableEditSupport.createCompoundEdit(),;1
createConnection,1,1,Create a new SOAPConnection.,;javax.xml.soap.SOAPConnectionFactory.createConnection(),;1
createContainer,1,1,Creates the container to manage placement of editingComponent.,;javax.swing.tree.DefaultTreeCellEditor.createContainer(),;1
createContainerListener,1,1,Creates a container listener that will be added to the JToolBar. If this method returns null then it will not be added to the toolbar.,;javax.swing.plaf.metal.MetalToolBarUI.createContainerListener(),;1
createContentPane,1,1,Called by the constructor methods to create the default contentPane. By default this method creates a new JComponent add sets a BorderLayout as its LayoutManager.,;javax.swing.JRootPane.createContentPane(),;1
createCustomCursor,1,1,"Creates a new custom cursor object. If the image to display is invalid, the cursor will be hidden (made completely transparent), and the hotspot will be set to (0, 0). Note that multi-frame images are invalid and may cause this method to hang.",";java.awt.Toolkit.createCustomCursor(Image,Point,String)",;1
createDecreaseButton,1,1,Returns the view that represents the decrease view.,;javax.swing.plaf.metal.MetalScrollBarUI.createDecreaseButton(int),;1
createDefaultColumnsFromModel,1,1,Creates default columns for the table from the data model using the getColumnCount method defined in the TableModel interface. Clears any existing columns before creating the new columns based on information from the model.,;javax.swing.JTable.createDefaultColumnsFromModel(),;1
createDefaultDataModel,1,1,"Returns the default table model object, which is a DefaultTableModel. A subclass can override this method to return a different table model object.",;javax.swing.JTable.createDefaultDataModel(),;1
createDefaultDragGestureRecognizer,1,1,"Creates a new DragGestureRecognizer that implements the default abstract subclass of DragGestureRecognizer for this DragSource, and sets the specified Component and DragGestureListener on the newly created object. For this DragSource the default is MouseDragGestureRecognizer.",";java.awt.dnd.DragSource.createDefaultDragGestureRecognizer(Component,int,DragGestureListener)",;1
createDefaultEditors,1,1,"Creates default cell editors for objects, numbers, and boolean values.",;javax.swing.JTable.createDefaultEditors(),;1
createDefaultHeaderRenderer,1,1,"As of Java 2 platform v1.3, this method is not called by the TableColumn constructor. Previously this method was used by the TableColumn to create a default header renderer. As of Java 2 platform v1.3, the default header renderer is null. JTableHeader now provides its own shared default renderer, just as the JTable does for its cell renderers.",;javax.swing.table.TableColumn.createDefaultHeaderRenderer(),;1
createDefaultKeySelectionManager,1,1,Returns an instance of the default key-selection manager.,;javax.swing.JComboBox.createDefaultKeySelectionManager(),;1
createDefaultRenderer,1,1,Returns a default renderer to be used when no header renderer is defined by a TableColumn.,;javax.swing.table.JTableHeader.createDefaultRenderer(),;1
createDefaultRenderers,1,1,"Creates default cell renderers for objects, numbers, doubles, dates, booleans, and icons.",;javax.swing.JTable.createDefaultRenderers(),;1
createDefaultRendering,1,1,Gets a RenderedImage instance of this image with a default width and height in pixels. The RenderContext is built automatically with an appropriate usr2dev transform and an area of interest of the full image. All the rendering hints come from hints passed in. Implementors of this interface must be sure that there is a defined default width and height.,;java.awt.image.renderable.RenderableImageOp.createDefaultRendering(),;1
createDefaultSelectionModel,1,1,"Returns the default selection model object, which is a DefaultListSelectionModel. A subclass can override this method to return a different selection model object.",;javax.swing.JTable.createDefaultSelectionModel(),;1
createDefaultTableHeader,1,1,"Returns the default table header object, which is a JTableHeader. A subclass can override this method to return a different table header object.",;javax.swing.JTable.createDefaultTableHeader(),;1
createDefaultTheme,1,1,Ensures the current MetalTheme is non-null. This is a cover method for getCurrentTheme.,;javax.swing.plaf.metal.MetalLookAndFeel.createDefaultTheme(),;1
createDesktopPeer,1,1,Creates this toolkit's implementation of the Desktop using the specified peer interface.,;java.awt.Toolkit.createDesktopPeer(Desktop),;1
createDetail,1,1,Creates a new Detail object which serves as a container for DetailEntry objects. This factory method creates Detail objects for use in situations where it is not practical to use the SOAPFault abstraction.,;javax.xml.soap.SOAPFactory.createDetail(),;1
createDirectories,1,1,"Creates a directory by creating all nonexistent parent directories first. Unlike the createDirectory method, an exception is not thrown if the directory could not be created because it already exists. The attrs parameter is optional file-attributes to set atomically when creating the nonexistent directories. Each file attribute is identified by its name. If more than one attribute of the same name is included in the array then all but the last occurrence is ignored. If this method fails, then it may do so after creating some, but not all, of the parent directories.",";java.nio.file.Files.createDirectories(Path,FileAttribute&lt;?&gt;...)",;1
createDisabledImage,1,1,Creates a disabled image,;javax.swing.GrayFilter.createDisabledImage(Image),;1
createDragSourceContext,1,1,"Creates the DragSourceContext to handle the current drag operation. To incorporate a new DragSourceContext subclass, subclass DragSource and override this method. If dragImage is null, no image is used to represent the drag over feedback for this drag operation, but NullPointerException is not thrown. If dsl is null, no drag source listener is registered with the created DragSourceContext, but NullPointerException is not thrown.",";java.awt.dnd.DragSource.createDragSourceContext(java.awt.dnd.peer.DragSourceContextPeer,DragGestureEvent,Cursor,Image,Point,Transferable,DragSourceListener)",;1
createDragSourceContextPeer,1,1,Creates the peer for a DragSourceContext. Always throws InvalidDndOperationException if GraphicsEnvironment.isHeadless() returns true.,;java.awt.Toolkit.createDragSourceContextPeer(DragGestureEvent),;1
createDropTargetAutoScroller,1,1,create an embedded autoscroller,";java.awt.dnd.DropTarget.createDropTargetAutoScroller(Component,Point)",;1
createDropTargetContext,1,1,Creates the DropTargetContext associated with this DropTarget. Subclasses may override this method to instantiate their own DropTargetContext subclass. This call is typically *only* called by the platform's DropTargetContextPeer as a drag operation encounters this DropTarget. Accessing the Context while no Drag is current has undefined results.,;java.awt.dnd.DropTarget.createDropTargetContext(),;1
createDTD,1,1,Create a document type definition event This string contains the entire document type declaration that matches the doctypedecl in the XML 1.0 specification,;javax.xml.stream.XMLEventFactory.createDTD(String),;1
createEditorComponent,1,1,Creates the internal editor component. Override this to provide a custom implementation.,;javax.swing.plaf.basic.BasicComboBoxEditor.createEditorComponent(),;1
createEditorKitForContentType,1,1,"Creates a handler for the given type from the default registry of editor kits. The registry is created if necessary. If the registered class has not yet been loaded, an attempt is made to dynamically load the prototype of the kit for the given type. If the type was registered with a ClassLoader, that ClassLoader will be used to load the prototype. If there was no registered ClassLoader, Class.forName will be used to load the prototype. Once a prototype EditorKit instance is successfully located, it is cloned and the clone is returned.",;javax.swing.JEditorPane.createEditorKitForContentType(String),;1
createEndDocument,1,1,Creates a new instance of an EndDocument event,;javax.xml.stream.XMLEventFactory.createEndDocument(),;1
createEntityReference,1,1,Creates a new instance of a EntityReference event,";javax.xml.stream.XMLEventFactory.createEntityReference(String,EntityDeclaration)",;1
createExtendedResponse,1,1,"Creates an extended response object that corresponds to the LDAP StartTLS extended request. The result must be a concrete subclass of StartTlsResponse and must have a public zero-argument constructor. This method locates the implementation class by locating configuration files that have the name: META-INF/services/javax.naming.ldap.StartTlsResponse The configuration files and their corresponding implementation classes must be accessible to the calling thread's context class loader. Each configuration file should contain a list of fully-qualified class names, one per line. Space and tab characters surrounding each name, as well as blank lines, are ignored. The comment character is '#' (0x23); on each line all characters following the first comment character are ignored. The file must be encoded in UTF-8. This method will return an instance of the first implementation class that it is able to load and instantiate successfully from the list of class names collected from the configuration files. This method uses the calling thread's context classloader to find the configuration files and to load the implementation class. If no class can be found in this way, this method will use an implementation-specific way to locate an implementation. If none is found, a NamingException is thrown.",";javax.naming.ldap.StartTlsRequest.createExtendedResponse(String,byte[],int,int)",;1
createFile,1,1,"Creates a new and empty file, failing if the file already exists. The check for the existence of the file and the creation of the new file if it does not exist are a single operation that is atomic with respect to all other filesystem activities that might affect the directory. The attrs parameter is optional file-attributes to set atomically when creating the file. Each attribute is identified by its name. If more than one attribute of the same name is included in the array then all but the last occurrence is ignored.",";java.nio.file.Files.createFile(Path,FileAttribute&lt;?&gt;...)",;1
createFileDialog,1,1,Creates this toolkit's implementation of FileDialog using the specified peer interface.,;java.awt.Toolkit.createFileDialog(FileDialog),;1
createFileSystemRoot,1,1,Creates a new File object for f with correct behavior for a file system root directory.,;javax.swing.filechooser.FileSystemView.createFileSystemRoot(File),;1
createFloatingFrame,1,1,"No longer used, use BasicToolBarUI.createFloatingWindow(JToolBar)",;javax.swing.plaf.basic.BasicToolBarUI.createFloatingFrame(JToolBar),;1
createFloatingWindow,1,1,Creates a window which contains the toolbar after it has been dragged out from its container,;javax.swing.plaf.basic.BasicToolBarUI.createFloatingWindow(JToolBar),;1
createFrame,1,1,Creates this toolkit's implementation of Frame using the specified peer interface.,;java.awt.Toolkit.createFrame(Frame),;1
createFromBufferedImageType,1,1,Returns an ImageTypeSpecifier that encodes one of the standard BufferedImage types (other than TYPE_CUSTOM).,;javax.imageio.ImageTypeSpecifier.createFromBufferedImageType(int),;1
createFromRenderedImage,1,1,Returns an ImageTypeSpecifier that encodes the layout of a RenderedImage (which may be a BufferedImage).,;javax.imageio.ImageTypeSpecifier.createFromRenderedImage(RenderedImage),;1
createGlue,1,1,"Creates an invisible ""glue"" component that can be useful in a Box whose visible components have a maximum width (for a horizontal box) or height (for a vertical box). You can think of the glue component as being a gooey substance that expands as much as necessary to fill the space between its neighboring components. For example, suppose you have a horizontal box that contains two fixed-size components. If the box gets extra space, the fixed-size components won't become larger, so where does the extra space go? Without glue, the extra space goes to the right of the second component. If you put glue between the fixed-size components, then the extra space goes there. If you put glue before the first fixed-size component, the extra space goes there, and the fixed-size components are shoved against the right edge of the box. If you put glue before the first fixed-size component and after the second fixed-size component, the fixed-size components are centered in the box. To use glue, call Box.createGlue and add the returned component to a container. The glue component has no minimum or preferred size, so it takes no space unless excess space is available. If excess space is available, then the glue component takes its share of available horizontal or vertical space, just like any other component that has no maximum width or height.",;javax.swing.Box.createGlue(),;1
createGrayLineBorder,1,1,Convenience method for getting the Color.gray LineBorder of thickness 1.,;javax.swing.border.LineBorder.createGrayLineBorder(),;1
createGroup,1,1,"Create and set the activation group for the current VM. The activation group can only be set if it is not currently set. An activation group is set using the createGroup method when the Activator initiates the re-creation of an activation group in order to carry out incoming activate requests. A group must first be registered with the ActivationSystem before it can be created via this method. The group class specified by the ActivationGroupDesc must be a concrete subclass of ActivationGroup and have a public constructor that takes two arguments: the ActivationGroupID for the group and the MarshalledObject containing the group's initialization data (obtained from the ActivationGroupDesc. If the group class name specified in the ActivationGroupDesc is null, then this method will behave as if the group descriptor contained the name of the default activation group implementation class. Note that if your application creates its own custom activation group, a security manager must be set for that group. Otherwise objects cannot be activated in the group. SecurityManager is set by default. If a security manager is already set in the group VM, this method first calls the security manager's checkSetFactory method. This could result in a SecurityException. If your application needs to set a different security manager, you must ensure that the policy file specified by the group's ActivationGroupDesc grants the group the necessary permissions to set a new security manager. (Note: This will be necessary if your group downloads and sets a security manager). After the group is created, the ActivationSystem is informed that the group is active by calling the activeGroup method which returns the ActivationMonitor for the group. The application need not call activeGroup independently since it is taken care of by this method. Once a group is created, subsequent calls to the currentGroupID method will return the identifier for this group until the group becomes inactive.",";java.rmi.activation.ActivationGroup.createGroup(ActivationGroupID,ActivationGroupDesc,long)",;1
createHandler,1,1,"Creates a new handler for SAX parser that can be used to parse embedded XML archives created by the XMLEncoder class. The owner should be used if parsed XML document contains the method call within context of the &lt;java&gt; element. The null value may cause illegal parsing in such case. The same problem may occur, if the owner class does not contain expected method to call. See details here.",";java.beans.XMLDecoder.createHandler(Object,ExceptionListener,ClassLoader)",;1
createHighlighter,1,1,Creates the object to use for adding highlights. By default an instance of BasicHighlighter is created. This method can be redefined to provide something else that implements the Highlighter interface or a subclass of DefaultHighlighter.,;javax.swing.plaf.basic.BasicTextUI.createHighlighter(),;1
createHorizontalBox,1,1,"Creates a Box that displays its components from left to right. If you want a Box that respects the component orientation you should create the Box using the constructor and pass in BoxLayout.LINE_AXIS, eg: Box lineBox = new Box(BoxLayout.LINE_AXIS);",;javax.swing.Box.createHorizontalBox(),;1
createHorizontalGlue,1,1,Creates a horizontal glue component.,;javax.swing.Box.createHorizontalGlue(),;1
createHorizontalScrollBar,1,1,Returns a JScrollPane.ScrollBar by default. Subclasses may override this method to force ScrollPaneUI implementations to use a JScrollBar subclass. Used by ScrollPaneUI implementations to create the horizontal scrollbar.,;javax.swing.JScrollPane.createHorizontalScrollBar(),;1
createHorizontalStrut,1,1,"Creates an invisible, fixed-width component. In a horizontal box, you typically use this method to force a certain amount of space between two components. In a vertical box, you might use this method to force the box to be at least the specified width. The invisible component has no height unless excess space is available, in which case it takes its share of available space, just like any other component that has no maximum height.",;javax.swing.Box.createHorizontalStrut(int),;1
createHTMLView,1,1,Create an html renderer for the given component and string of html.,";javax.swing.plaf.basic.BasicHTML.createHTMLView(JComponent,String)",;1
createIgnorableSpace,1,1,Create an ignorable space,;javax.xml.stream.XMLEventFactory.createIgnorableSpace(String),;1
createImageInputStream,1,1,"Returns an ImageInputStream that will take its input from the given Object. The set of ImageInputStreamSpis registered with the IIORegistry class is queried and the first one that is able to take input from the supplied object is used to create the returned ImageInputStream. If no suitable ImageInputStreamSpi exists, null is returned. The current cache settings from getUseCacheand getCacheDirectory will be used to control caching.",;javax.imageio.ImageIO.createImageInputStream(Object),;1
createImageOutputStream,1,1,"Returns an ImageOutputStream that will send its output to the given Object. The set of ImageOutputStreamSpis registered with the IIORegistry class is queried and the first one that is able to send output from the supplied object is used to create the returned ImageOutputStream. If no suitable ImageOutputStreamSpi exists, null is returned. The current cache settings from getUseCacheand getCacheDirectory will be used to control caching.",;javax.imageio.ImageIO.createImageOutputStream(Object),;1
createIncreaseButton,1,1,Returns the view that represents the increase view.,;javax.swing.plaf.metal.MetalScrollBarUI.createIncreaseButton(int),;1
createIndexed,1,1,Returns a specifier for an indexed-color image format that will pack index values of the given bit depth into array elements of the specified data type.,";javax.imageio.ImageTypeSpecifier.createIndexed(byte[],byte[],byte[],byte[],int,int)",;1
createInterleaved,1,1,"Returns a specifier for an interleaved image format that will use a ComponentColorModel and a PixelInterleavedSampleModel to store each pixel component in a separate byte, short, or int.",";javax.imageio.ImageTypeSpecifier.createInterleaved(ColorSpace,int[],int,boolean,boolean)",;1
createInternalFrame,1,1,"Creates and returns an instance of JInternalFrame. The internal frame is created with the specified title, and wrapping the JOptionPane. The returned JInternalFrame is added to the JDesktopPane ancestor of parentComponent, or components parent if one its ancestors isn't a JDesktopPane, or if parentComponent doesn't have a parent then a RuntimeException is thrown.",";javax.swing.JOptionPane.createInternalFrame(Component,String)",;1
createInverse,1,1,"Returns an AffineTransform object representing the inverse transformation. The inverse transform Tx' of this transform Tx maps coordinates transformed by Tx back to their original coordinates. In other words, Tx'(Tx(p)) = p = Tx(Tx'(p)). If this transform maps all coordinates onto a point or a line then it will not have an inverse, since coordinates that do not lie on the destination point or line will not have an inverse mapping. The getDeterminant method can be used to determine if this transform has no inverse, in which case an exception will be thrown if the createInverse method is called.",;java.awt.geom.AffineTransform.createInverse(),;1
createJAXBIntrospector,1,1,Creates a JAXBIntrospector object that can be used to introspect JAXB objects.,;javax.xml.bind.JAXBContext.createJAXBIntrospector(),;1
createKeyboardDownRightListener,1,1,Deprecated.As of Java 2 platform v1.3.,;javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardDownRightListener(),;1
createKeyboardEndListener,1,1,Deprecated.As of Java 2 platform v1.3.,;javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardEndListener(),;1
createKeyboardHomeListener,1,1,Deprecated.As of Java 2 platform v1.3.,;javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardHomeListener(),;1
createKeyboardResizeToggleListener,1,1,Deprecated.As of Java 2 platform v1.3.,;javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardResizeToggleListener(),;1
createKeyboardUpLeftListener,1,1,Deprecated.As of Java 2 platform v1.3.,;javax.swing.plaf.basic.BasicSplitPaneUI.createKeyboardUpLeftListener(),;1
createKeymap,1,1,"Creates the keymap to use for the text component, and installs any necessary bindings into it. By default, the keymap is shared between all instances of this type of TextUI. The keymap has the name defined by the getKeymapName method. If the keymap is not found, then DEFAULT_KEYMAP from JTextComponent is used. The set of bindings used to create the keymap is fetched from the UIManager using a key formed by combining the getPropertyPrefix() method and the string .keyBindings. The type is expected to be JTextComponent.KeyBinding[].",;javax.swing.plaf.basic.BasicTextUI.createKeymap(),;1
createLabel,1,1,Creates this toolkit's implementation of Label using the specified peer interface.,;java.awt.Toolkit.createLabel(Label),;1
createLayeredPane,1,1,Called by the constructor methods to create the default layeredPane. Bt default it creates a new JLayeredPane.,;javax.swing.JRootPane.createLayeredPane(),;1
createLayoutCache,1,1,"Creates the object responsible for managing what is expanded, as well as the size of nodes.",;javax.swing.plaf.basic.BasicTreeUI.createLayoutCache(),;1
createLeftOneTouchButton,1,1,Creates and return an instance of JButton that can be used to collapse the left component in the split pane.,;javax.swing.plaf.basic.BasicSplitPaneDivider.createLeftOneTouchButton(),;1
createLineBidi,1,1,Create a Bidi object representing the bidi information on a line of text within the paragraph represented by the current Bidi. This call is not required if the entire paragraph fits on one line.,";java.text.Bidi.createLineBidi(int,int)",;1
createListMouseListener,1,1,Creates a mouse listener that watches for mouse events in the popup's list. If this method returns null then it will not be added to the combo box.,;javax.swing.plaf.basic.BasicComboPopup.createListMouseListener(),;1
createListMouseMotionListener,1,1,Creates a mouse motion listener that watches for mouse motion events in the popup's list. If this method returns null then it will not be added to the combo box.,;javax.swing.plaf.basic.BasicComboPopup.createListMouseMotionListener(),;1
createLoweredBevelBorder,1,1,"Creates a border with a lowered beveled edge, using brighter shades of the component's current background color for highlighting, and darker shading for shadows. (In a lowered border, shadows are on top and highlights are underneath.)",;javax.swing.BorderFactory.createLoweredBevelBorder(),;1
createLoweredSoftBevelBorder,1,1,"Creates a beveled border with a lowered edge and softened corners, using brighter shades of the component's current background color for highlighting, and darker shading for shadows. In a lowered border, shadows are on top and highlights are underneath.",;javax.swing.BorderFactory.createLoweredSoftBevelBorder(),;1
createMarshaller,1,1,Create a Marshaller object that can be used to convert a java content tree into XML data.,;javax.xml.bind.JAXBContext.createMarshaller(),;1
createMenu,1,1,Creates this toolkit's implementation of Menu using the specified peer interface.,;java.awt.Toolkit.createMenu(Menu),;1
createMenuBar,1,1,Creates this toolkit's implementation of MenuBar using the specified peer interface.,;java.awt.Toolkit.createMenuBar(MenuBar),;1
createMenuItem,1,1,Creates this toolkit's implementation of MenuItem using the specified peer interface.,;java.awt.Toolkit.createMenuItem(MenuItem),;1
createMouseMotionListener,1,1,"Creates the mouse motion listener which will be added to the combo box. Warning: When overriding this method, make sure to maintain the existing behavior.",;javax.swing.plaf.basic.BasicComboPopup.createMouseMotionListener(),;1
createMouseWheelListener,1,1,"Creates an instance of MouseWheelListener, which is added to the JScrollPane by installUI(). The returned MouseWheelListener is used to handle mouse wheel-driven scrolling.",;javax.swing.plaf.basic.BasicScrollPaneUI.createMouseWheelListener(),;1
createNewFile,1,1,"Atomically creates a new, empty file named by this abstract pathname if and only if a file with this name does not yet exist. The check for the existence of the file and the creation of the file if it does not exist are a single operation that is atomic with respect to all other filesystem activities that might affect the file. Note: this method should not be used for file-locking, as the resulting protocol cannot be made to work reliably. The FileLock facility should be used instead.",;java.io.File.createNewFile(),;1
createNewFolder,1,1,Creates a new folder with a default folder name.,;javax.swing.filechooser.FileSystemView.createNewFolder(File),;1
createNodeDimensions,1,1,Creates an instance of NodeDimensions that is able to determine the size of a given node in the tree.,;javax.swing.plaf.basic.BasicTreeUI.createNodeDimensions(),;1
createOutput,1,1,"Decides where the schema file (of the given namespace URI) will be written, and return it as a Result object. This method is called only once for any given namespace. IOW, all the components in one namespace is always written into the same schema document.",";javax.xml.bind.SchemaOutputResolver.createOutput(String,String)",;1
createPacked,1,1,"Returns a specifier for a packed image format that will use a DirectColorModel and a packed SampleModel to store each pixel packed into in a single byte, short, or int.",";javax.imageio.ImageTypeSpecifier.createPacked(ColorSpace,int,int,int,int,int,boolean)",;1
createPanel,1,1,Creates this toolkit's implementation of Panel using the specified peer interface.,;java.awt.Toolkit.createPanel(Panel),;1
createPopupMenu,1,1,Creates this toolkit's implementation of PopupMenu using the specified peer interface.,;java.awt.Toolkit.createPopupMenu(PopupMenu),;1
createProcessingInstruction,1,1,Create a processing instruction,";javax.xml.stream.XMLEventFactory.createProcessingInstruction(String,String)",;1
createPropertyEditor,1,1,"Constructs an instance of a property editor using the current property editor class. If the property editor class has a public constructor that takes an Object argument then it will be invoked using the bean parameter as the argument. Otherwise, the default constructor will be invoked.",;java.beans.PropertyDescriptor.createPropertyEditor(Object),;1
createRaisedBevelBorder,1,1,"Creates a border with a raised beveled edge, using brighter shades of the component's current background color for highlighting, and darker shading for shadows. (In a raised border, highlights are on top and shadows are underneath.)",;javax.swing.BorderFactory.createRaisedBevelBorder(),;1
createRaisedSoftBevelBorder,1,1,"Creates a beveled border with a raised edge and softened corners, using brighter shades of the component's current background color for highlighting, and darker shading for shadows. In a raised border, highlights are on top and shadows are underneath.",;javax.swing.BorderFactory.createRaisedSoftBevelBorder(),;1
createRaster,1,1,"Creates a Raster with the specified SampleModel and DataBuffer. The upper left corner of the Raster is given by the location argument. If location is null, (0, 0) will be used.",";java.awt.image.Raster.createRaster(SampleModel,DataBuffer,Point)",;1
createRelation,1,1,"Creates a simple relation (represented by a RelationSupport object) of given relation type, and adds it in the Relation Service. Roles are initialized according to the role list provided in parameter. The ones not initialized in this way are set to an empty ArrayList of ObjectNames. A RelationNotification, with type RELATION_BASIC_CREATION, is sent.",";javax.management.relation.RelationService.createRelation(String,String,RoleList)",;1
createRelationType,1,1,"Creates a relation type (a RelationTypeSupport object) with given role infos (provided by the RoleInfo objects), and adds it in the Relation Service.",";javax.management.relation.RelationService.createRelationType(String,RoleInfo[])",;1
createRightOneTouchButton,1,1,Creates and return an instance of JButton that can be used to collapse the right component in the split pane.,;javax.swing.plaf.basic.BasicSplitPaneDivider.createRightOneTouchButton(),;1
createRigidArea,1,1,Creates an invisible component that's always the specified size.,;javax.swing.Box.createRigidArea(Dimension),;1
createRolloverListener,1,1,Creates a property change listener that will be added to the JToolBar. If this method returns null then it will not be added to the toolbar.,;javax.swing.plaf.metal.MetalToolBarUI.createRolloverListener(),;1
createRootLayout,1,1,Called by the constructor methods to create the default layoutManager.,;javax.swing.JRootPane.createRootLayout(),;1
createSaslClient,1,1,"Creates a SaslClient using the parameters supplied. This method uses theJCA Security Provider Framework, described in the ""Java Cryptography Architecture API Specification &amp; Reference"", for locating and selecting a SaslClient implementation. First, it obtains an ordered list of SaslClientFactory instances from the registered security providers for the ""SaslClientFactory"" service and the specified SASL mechanism(s). It then invokes createSaslClient() on each factory instance on the list until one produces a non-null SaslClient instance. It returns the non-null SaslClient instance, or null if the search fails to produce a non-null SaslClient instance. A security provider for SaslClientFactory registers with the JCA Security Provider Framework keys of the form SaslClientFactory.mechanism_name and values that are class names of implementations of javax.security.sasl.SaslClientFactory. For example, a provider that contains a factory class, com.wiz.sasl.digest.ClientFactory, that supports the ""DIGEST-MD5"" mechanism would register the following entry with the JCA: SaslClientFactory.DIGEST-MD5 com.wiz.sasl.digest.ClientFactory See the ""Java Cryptography Architecture API Specification &amp; Reference"" for information about how to install and configure security service providers. If a mechanism is listed in the jdk.sasl.disabledMechanisms security property, it will be ignored and won't be negotiated.",";javax.security.sasl.Sasl.createSaslClient(String[],String,String,String,Map&lt;String,?&gt;,CallbackHandler)",;1
createSaslServer,1,1,"Creates a SaslServer for the specified mechanism. This method uses theJCA Security Provider Framework, described in the ""Java Cryptography Architecture API Specification &amp; Reference"", for locating and selecting a SaslServer implementation. First, it obtains an ordered list of SaslServerFactory instances from the registered security providers for the ""SaslServerFactory"" service and the specified mechanism. It then invokes createSaslServer() on each factory instance on the list until one produces a non-null SaslServer instance. It returns the non-null SaslServer instance, or null if the search fails to produce a non-null SaslServer instance. A security provider for SaslServerFactory registers with the JCA Security Provider Framework keys of the form SaslServerFactory.mechanism_name and values that are class names of implementations of javax.security.sasl.SaslServerFactory. For example, a provider that contains a factory class, com.wiz.sasl.digest.ServerFactory, that supports the ""DIGEST-MD5"" mechanism would register the following entry with the JCA: SaslServerFactory.DIGEST-MD5 com.wiz.sasl.digest.ServerFactory See the ""Java Cryptography Architecture API Specification &amp; Reference"" for information about how to install and configure security service providers. If mechanism is listed in the jdk.sasl.disabledMechanisms security property, it will be ignored and this method returns null.",";javax.security.sasl.Sasl.createSaslServer(String,String,String,Map&lt;String,?&gt;,CallbackHandler)",;1
createScaledRendering,1,1,"Creates a RenderedImage instance of this image with width w, and height h in pixels. The RenderContext is built automatically with an appropriate usr2dev transform and an area of interest of the full image. All the rendering hints come from hints passed in. If w == 0, it will be taken to equal Math.round(h*(getWidth()/getHeight())). Similarly, if h == 0, it will be taken to equal Math.round(w*(getHeight()/getWidth())). One of w or h must be non-zero or else an IllegalArgumentException will be thrown. The created RenderedImage may have a property identified by the String HINTS_OBSERVED to indicate which RenderingHints were used to create the image. In addition any RenderedImages that are obtained via the getSources() method on the created RenderedImage may have such a property.",";java.awt.image.renderable.RenderableImageOp.createScaledRendering(int,int,RenderingHints)",;1
createScreenCapture,1,1,Creates an image containing pixels read from the screen. This image does not include the mouse cursor.,;java.awt.Robot.createScreenCapture(Rectangle),;1
createScrollbar,1,1,Creates this toolkit's implementation of Scrollbar using the specified peer interface.,;java.awt.Toolkit.createScrollbar(Scrollbar),;1
createScroller,1,1,Creates the scroll pane which houses the scrollable list.,;javax.swing.plaf.basic.BasicComboPopup.createScroller(),;1
createScrollPane,1,1,Creates this toolkit's implementation of ScrollPane using the specified peer interface.,;java.awt.Toolkit.createScrollPane(ScrollPane),;1
createScrollPaneForTable,1,1,"Deprecated.As of Swing version 1.0.2, replaced by new JScrollPane(aTable).",;javax.swing.JTable.createScrollPaneForTable(JTable),;1
createSecondaryLoop,1,1,Creates a new secondary loop associated with this event queue. Use the SecondaryLoop.enter() and SecondaryLoop.exit() methods to start and stop the event loop and dispatch the events from this queue.,;java.awt.EventQueue.createSecondaryLoop(),;1
createSelectionModelPropertyChangeListener,1,1,Creates the listener responsible for getting property change events from the selection model.,;javax.swing.plaf.basic.BasicTreeUI.createSelectionModelPropertyChangeListener(),;1
createSequentialGroup,1,1,Creates and returns a SequentialGroup.,;javax.swing.GroupLayout.createSequentialGroup(),;1
createSNIMatcher,1,1,"Creates an SNIMatcher object for SNIHostNames. This method can be used by a server to verify the acceptable SNIHostNames. For example, SNIMatcher matcher = SNIHostName.createSNIMatcher(""www\\.example\\.com""); will accept the hostname ""www.example.com"". SNIMatcher matcher = SNIHostName.createSNIMatcher(""www\\.example\\.(com|org)""); will accept hostnames ""www.example.com"" and ""www.example.org"".",;javax.net.ssl.SNIHostName.createSNIMatcher(String),;1
createSpace,1,1,Create a Characters event with the isSpace flag set to true,;javax.xml.stream.XMLEventFactory.createSpace(String),;1
createStrokedShape,1,1,Returns a Shape whose interior defines the stroked outline of a specified Shape.,;java.awt.BasicStroke.createStrokedShape(Shape),;1
createTableCell,1,1,Deprecated.Table cells can now be any arbitrary View implementation and should be produced by the ViewFactory rather than the table.,;javax.swing.text.TableView.createTableCell(Element),;1
createTableRow,1,1,Creates a new table row.,;javax.swing.text.TableView.createTableRow(Element),;1
createTextArea,1,1,Creates this toolkit's implementation of TextArea using the specified peer interface.,;java.awt.Toolkit.createTextArea(TextArea),;1
createTextField,1,1,Creates this toolkit's implementation of TextField using the specified peer interface.,;java.awt.Toolkit.createTextField(TextField),;1
createToolTip,1,1,"Returns the instance of JToolTip that should be used to display the tooltip. Components typically would not override this method, but it can be used to cause different tooltips to be displayed differently.",;javax.swing.JComponent.createToolTip(),;1
createTrack,1,1,"Creates a new, initially empty track as part of this sequence. The track initially contains the meta-event End of Track. The newly created track is returned. All tracks in the sequence may be retrieved using getTracks(). Tracks may be removed from the sequence using deleteTrack(javax.sound.midi.Track).",;javax.sound.midi.Sequence.createTrack(),;1
createTranscoderInstance,1,1,Returns an instance of the ImageTranscoder implementation associated with this service provider.,;javax.imageio.spi.ImageTranscoderSpi.createTranscoderInstance(),;1
createTransferable,1,1,"Creates a Transferable to use as the source for a data transfer. Returns the representation of the data to be transferred, or null if the component's property is null",;javax.swing.TransferHandler.createTransferable(JComponent),;1
createTransferableProxy,1,1,Creates a TransferableProxy to proxy for the specified Transferable.,";java.awt.dnd.DropTargetContext.createTransferableProxy(Transferable,boolean)",;1
createTransformedArea,1,1,Creates a new Area object that contains the same geometry as this Area transformed by the specified AffineTransform. This Area object is unchanged.,;java.awt.geom.Area.createTransformedArea(AffineTransform),;1
createTransition,1,1,Creates a transition instance for the specified year. Calculations are performed using the ISO-8601 chronology.,;java.time.zone.ZoneOffsetTransitionRule.createTransition(int),;1
createTranslatedChild,1,1,"Create a Raster with the same size, SampleModel and DataBuffer as this one, but with a different location. The new Raster will possess a reference to the current Raster, accessible through its getParent() method.",";java.awt.image.Raster.createTranslatedChild(int,int)",;1
createTreeCellEditor,1,1,This is invoked if a TreeCellEditor is not supplied in the constructor. It returns a TextField editor.,;javax.swing.tree.DefaultTreeCellEditor.createTreeCellEditor(),;1
createTreeExpansionListener,1,1,Creates and returns the object responsible for updating the treestate when nodes expanded state changes.,;javax.swing.plaf.basic.BasicTreeUI.createTreeExpansionListener(),;1
createTreeSelectionListener,1,1,Creates the listener that updates the display based on selection change methods.,;javax.swing.plaf.basic.BasicTreeUI.createTreeSelectionListener(),;1
createUIs,1,1,"Creates the ComponentUI objects required to present the target component, placing the objects in the uis vector and returning the ComponentUI object that best represents the component's UI. This method finds the ComponentUI objects by invoking getDefaults().getUI(target) on each default and auxiliary look and feel currently in use. The first UI object this method adds to the uis vector is for the default look and feel. This method is invoked by the createUI method of MultiXxxxUI classes.",";javax.swing.plaf.multi.MultiLookAndFeel.createUIs(ComponentUI,Vector,JComponent)",;1
createUnmarshalException,1,1,"Creates an UnmarshalException from a SAXException. This is an utility method provided for the derived classes. When a provider-implemented ContentHandler wants to throw a JAXBException, it needs to wrap the exception by a SAXException. If the unmarshaller implementation blindly wrap SAXException by JAXBException, such an exception will be a JAXBException wrapped by a SAXException wrapped by another JAXBException. This is silly. This method checks the nested exception of SAXException and reduce those excessive wrapping.",;javax.xml.bind.helpers.AbstractUnmarshallerImpl.createUnmarshalException(SAXException),;1
createUnresolved,1,1,Creates an unresolved socket address from a hostname and a port number. No attempt will be made to resolve the hostname into an InetAddress. The address will be flagged as unresolved. A valid port value is between 0 and 65535. A port number of zero will let the system pick up an ephemeral port in a bind operation.,";java.net.InetSocketAddress.createUnresolved(String,int)",;1
createValidator,1,1,Deprecated.since JAXB2.0,;javax.xml.bind.JAXBContext.createValidator(),;1
createValueHandler,1,1,Returns a singleton instance of a class that implements the ValueHandler interface.,;javax.rmi.CORBA.Util.createValueHandler(),;1
createVerticalBox,1,1,"Creates a Box that displays its components from top to bottom. If you want a Box that respects the component orientation you should create the Box using the constructor and pass in BoxLayout.PAGE_AXIS, eg: Box lineBox = new Box(BoxLayout.PAGE_AXIS);",;javax.swing.Box.createVerticalBox(),;1
createVerticalGlue,1,1,Creates a vertical glue component.,;javax.swing.Box.createVerticalGlue(),;1
createVerticalScrollBar,1,1,Returns a JScrollPane.ScrollBar by default. Subclasses may override this method to force ScrollPaneUI implementations to use a JScrollBar subclass. Used by ScrollPaneUI implementations to create the vertical scrollbar.,;javax.swing.JScrollPane.createVerticalScrollBar(),;1
createVerticalStrut,1,1,"Creates an invisible, fixed-height component. In a vertical box, you typically use this method to force a certain amount of space between two components. In a horizontal box, you might use this method to force the box to be at least the specified height. The invisible component has no width unless excess space is available, in which case it takes its share of available space, just like any other component that has no maximum width.",;javax.swing.Box.createVerticalStrut(int),;1
createView,1,1,"Creates a view that can be used to represent the current piece of the flow. This can be either an entire view from the logical view, or a fragment of the logical view.",";javax.swing.text.FlowView.FlowStrategy.createView(FlowView,int,int,int)",;1
createViewListener,1,1,Creates a listener for the view.,;javax.swing.JViewport.createViewListener(),;1
createViewport,1,1,"Returns a new JViewport by default. Used to create the viewport (as needed) in setViewportView, setRowHeaderView, and setColumnHeaderView. Subclasses may override this method to return a subclass of JViewport.",;javax.swing.JScrollPane.createViewport(),;1
createWindow,1,1,Creates this toolkit's implementation of Window using the specified peer interface.,;java.awt.Toolkit.createWindow(Window),;1
createWinListener,1,1,Creates a window-closing listener for the popup.,;javax.swing.JMenu.createWinListener(JPopupMenu),;1
createWritableChild,1,1,"Returns a new WritableRaster which shares all or part of this WritableRaster's DataBuffer. The new WritableRaster will possess a reference to the current WritableRaster, accessible through its getParent() and getWritableParent() methods. The parentX, parentY, width and height parameters form a Rectangle in this WritableRaster's coordinate space, indicating the area of pixels to be shared. An error will be thrown if this Rectangle is not contained with the bounds of the current WritableRaster. The new WritableRaster may additionally be translated to a different coordinate system for the plane than that used by the current WritableRaster. The childMinX and childMinY parameters give the new (x, y) coordinate of the upper-left pixel of the returned WritableRaster; the coordinate (childMinX, childMinY) in the new WritableRaster will map to the same pixel as the coordinate (parentX, parentY) in the current WritableRaster. The new WritableRaster may be defined to contain only a subset of the bands of the current WritableRaster, possibly reordered, by means of the bandList parameter. If bandList is null, it is taken to include all of the bands of the current WritableRaster in their current order. To create a new WritableRaster that contains a subregion of the current WritableRaster, but shares its coordinate system and bands, this method should be called with childMinX equal to parentX, childMinY equal to parentY, and bandList equal to null.",";java.awt.image.WritableRaster.createWritableChild(int,int,int,int,int,int,int[])",;1
createWritableTranslatedChild,1,1,"Create a WritableRaster with the same size, SampleModel and DataBuffer as this one, but with a different location. The new WritableRaster will possess a reference to the current WritableRaster, accessible through its getParent() and getWritableParent() methods.",";java.awt.image.WritableRaster.createWritableTranslatedChild(int,int)",;1
createXMLReader,1,1,"Attempt to create an XML reader from a class name. Given a class name, this method attempts to load and instantiate the class as an XML reader.Note that this method will not be usable in environments where the caller (perhaps an applet) is not permitted to load classes dynamically.",;org.xml.sax.helpers.XMLReaderFactory.createXMLReader(String),;1
createZone,1,1,Create a view to represent a zone for the given range within the model (which should be within the range of this objects responsibility). This is called by the zone management logic to create new zones. Subclasses can provide a different implementation for a zone by changing this method.,";javax.swing.text.ZoneView.createZone(int,int)",;1
currentClassLoader,1,1,Deprecated.This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.,;java.lang.SecurityManager.currentClassLoader(),;1
currentGroupID,1,1,Returns the current activation group's identifier. Returns null if no group is currently active for this VM.,;java.rmi.activation.ActivationGroup.currentGroupID(),;1
currentLoadedClass,1,1,Deprecated.This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.,;java.lang.SecurityManager.currentLoadedClass(),;1
currentThread,1,1,Returns a reference to the currently executing thread object.,;java.lang.Thread.currentThread(),;1
currentTimeMillis,1,1,"Returns the current time in milliseconds. Note that while the unit of time of the return value is a millisecond, the granularity of the value depends on the underlying operating system and may be larger. For example, many operating systems measure time in units of tens of milliseconds. See the description of the class Date for a discussion of slight discrepancies that may arise between ""computer time"" and coordinated universal time (UTC).",;java.lang.System.currentTimeMillis(),;1
damage,1,1,"Damages the area surrounding the caret to cause it to be repainted in a new location. If paint() is reimplemented, this method should also be reimplemented. This method should update the caret bounds (x, y, width, and height).",;javax.swing.text.DefaultCaret.damage(Rectangle),;1
damageLineRange,1,1,Repaint the given line range.,";javax.swing.text.PlainView.damageLineRange(int,int,Shape,Component)",;1
darker,1,1,"Creates a new Color that is a darker version of this Color. This method applies an arbitrary scale factor to each of the three RGB components of this Color to create a darker version of this Color. The alpha value is preserved. Although brighter and darker are inverse operations, the results of a series of invocations of these two methods might be inconsistent because of rounding errors.",;java.awt.Color.darker(),;1
dateFilter,1,1,"Returns a RowFilter that includes entries that have at least one Date value meeting the specified criteria. For example, the following RowFilter includes only entries with at least one date value after the current date: RowFilter.dateFilter(ComparisonType.AFTER, new Date());",";javax.swing.RowFilter.dateFilter(RowFilter.ComparisonType,Date,int...)",;1
dayOfWeek,1,1,"Returns a field to access the day of week based on this WeekFields. This is similar to ChronoField.DAY_OF_WEEK but uses values for the day-of-week based on this WeekFields. The days are numbered from 1 to 7 where the first day-of-week is assigned the value 1. For example, if the first day-of-week is Sunday, then that will have the value 1, with other days ranging from Monday as 2 to Saturday as 7. In the resolving phase of parsing, a localized day-of-week will be converted to a standardized ChronoField day-of-week. The day-of-week must be in the valid range 1 to 7. Other fields in this class build dates using the standardized day-of-week.",;java.time.temporal.WeekFields.dayOfWeek(),;1
dayOfWeekInMonth,1,1,"Returns the day-of-week in month adjuster, which returns a new date in the same month with the ordinal day-of-week. This is used for expressions like the 'second Tuesday in March'. The ISO calendar system behaves as follows: The input 2011-12-15 for (1,TUESDAY) will return 2011-12-06. The input 2011-12-15 for (2,TUESDAY) will return 2011-12-13. The input 2011-12-15 for (3,TUESDAY) will return 2011-12-20. The input 2011-12-15 for (4,TUESDAY) will return 2011-12-27. The input 2011-12-15 for (5,TUESDAY) will return 2012-01-03. The input 2011-12-15 for (-1,TUESDAY) will return 2011-12-27 (last in month). The input 2011-12-15 for (-4,TUESDAY) will return 2011-12-06 (3 weeks before last in month). The input 2011-12-15 for (-5,TUESDAY) will return 2011-11-29 (4 weeks before last in month). The input 2011-12-15 for (0,TUESDAY) will return 2011-11-29 (last in previous month). For a positive or zero ordinal, the algorithm is equivalent to finding the first day-of-week that matches within the month and then adding a number of weeks to it. For a negative ordinal, the algorithm is equivalent to finding the last day-of-week that matches within the month and then subtracting a number of weeks to it. The ordinal number of weeks is not validated and is interpreted leniently according to this algorithm. This definition means that an ordinal of zero finds the last matching day-of-week in the previous month. The behavior is suitable for use with most calendar systems. It uses the DAY_OF_WEEK and DAY_OF_MONTH fields and the DAYS unit, and assumes a seven day week.",";java.time.temporal.TemporalAdjusters.dayOfWeekInMonth(int,DayOfWeek)",;1
decapitalize,1,1,"Utility method to take a string and convert it to normal Java variable name capitalization. This normally means converting the first character from upper case to lower case, but in the (unusual) special case when there is more than one character and both the first and second characters are upper case, we leave it alone. Thus ""FooBah"" becomes ""fooBah"" and ""X"" becomes ""x"", but ""URL"" stays as ""URL"".",;java.beans.Introspector.decapitalize(String),;1
declarePrefix,1,1,"Declare a Namespace prefix. All prefixes must be declared before they are referenced. For example, a SAX driver (parser) would scan an element's attributes in two passes: first for namespace declarations, then a second pass using processName() to interpret prefixes against (potentially redefined) prefixes. This method declares a prefix in the current Namespace context; the prefix will remain in force until this context is popped, unless it is shadowed in a descendant context.To declare the default element Namespace, use the empty string as the prefix.Note that there is an asymmetry in this library: getPrefix will not return the """" prefix, even if you have declared a default element namespace. To check for a default namespace, you have to look it up explicitly using getURI. This asymmetry exists to make it easier to look up prefixes for attribute names, where the default prefix is not allowed.",";org.xml.sax.helpers.NamespaceSupport.declarePrefix(String,String)",;1
decodeAnchorX,1,1,"Decodes and returns a float value representing the actual pixel location for the anchor point given the encoded X value of the control point, and the offset distance to the anchor from that control point.",";javax.swing.plaf.nimbus.AbstractRegionPainter.decodeAnchorX(float,float)",;1
decodeAnchorY,1,1,"Decodes and returns a float value representing the actual pixel location for the anchor point given the encoded Y value of the control point, and the offset distance to the anchor from that control point.",";javax.swing.plaf.nimbus.AbstractRegionPainter.decodeAnchorY(float,float)",;1
decodeDataFlavor,1,1,Decodes a String native for use as a DataFlavor.,;java.awt.datatransfer.SystemFlavorMap.decodeDataFlavor(String),;1
decodeGradient,1,1,"Given parameters for creating a LinearGradientPaint, this method will create and return a linear gradient paint. One primary purpose for this method is to avoid creating a LinearGradientPaint where the start and end points are equal. In such a case, the end y point is slightly increased to avoid the overlap.",";javax.swing.plaf.nimbus.AbstractRegionPainter.decodeGradient(float,float,float,float,float[],Color[])",;1
decodeJavaMIMEType,1,1,Decodes a String native for use as a Java MIME type.,;java.awt.datatransfer.SystemFlavorMap.decodeJavaMIMEType(String),;1
decodeLineStyle,1,1,this function converts between the string passed into the client property and the internal representation (currently and int),;javax.swing.plaf.metal.MetalTreeUI.decodeLineStyle(Object),;1
decodeLoop,1,1,"Decodes one or more bytes into one or more characters. This method encapsulates the basic decoding loop, decoding as many bytes as possible until it either runs out of input, runs out of room in the output buffer, or encounters a decoding error. This method is invoked by the decode method, which handles result interpretation and error recovery. The buffers are read from, and written to, starting at their current positions. At most in.remaining() bytes will be read, and at most out.remaining() characters will be written. The buffers' positions will be advanced to reflect the bytes read and the characters written, but their marks and limits will not be modified. This method returns a CoderResult object to describe its reason for termination, in the same manner as the decode method. Most implementations of this method will handle decoding errors by returning an appropriate result object for interpretation by the decode method. An optimized implementation may instead examine the relevant error action and implement that action itself. An implementation of this method may perform arbitrary lookahead by returning CoderResult.UNDERFLOW until it receives sufficient input.",";java.nio.charset.CharsetDecoder.decodeLoop(ByteBuffer,CharBuffer)",;1
decodeRadialGradient,1,1,"Given parameters for creating a RadialGradientPaint, this method will create and return a radial gradient paint. One primary purpose for this method is to avoid creating a RadialGradientPaint where the radius is non-positive. In such a case, the radius is just slightly increased to avoid 0.",";javax.swing.plaf.nimbus.AbstractRegionPainter.decodeRadialGradient(float,float,float,float[],Color[])",;1
decodeX,1,1,Decodes and returns a float value representing the actual pixel location for the given encoded X value.,;javax.swing.plaf.nimbus.AbstractRegionPainter.decodeX(float),;1
decodeY,1,1,Decodes and returns a float value representing the actual pixel location for the given encoded y value.,;javax.swing.plaf.nimbus.AbstractRegionPainter.decodeY(float),;1
decrement,1,1,Equivalent to add(-1).,;java.util.concurrent.atomic.LongAdder.decrement(),;1
decrementPendingCountUnlessZero,1,1,"If the pending count is nonzero, (atomically) decrements it.",;java.util.concurrent.CountedCompleter.decrementPendingCountUnlessZero(),;1
decrIndent,1,1,Decrements the indent level.,;javax.swing.text.AbstractWriter.decrIndent(),;1
deepEquals,1,1,"Returns true if the arguments are deeply equal to each other and false otherwise. Two null values are deeply equal. If both arguments are arrays, the algorithm in Arrays.deepEquals is used to determine equality. Otherwise, equality is determined by using the equals method of the first argument.",";java.util.Objects.deepEquals(Object,Object)",;1
deepHashCode,1,1,"Returns a hash code based on the ""deep contents"" of the specified array. If the array contains other arrays as elements, the hash code is based on their contents and so on, ad infinitum. It is therefore unacceptable to invoke this method on an array that contains itself as an element, either directly or indirectly through one or more levels of arrays. The behavior of such an invocation is undefined. For any two arrays a and b such that Arrays.deepEquals(a, b), it is also the case that Arrays.deepHashCode(a) == Arrays.deepHashCode(b). The computation of the value returned by this method is similar to that of the value returned by List.hashCode() on a list containing the same elements as a in the same order, with one difference: If an element e of a is itself an array, its hash code is computed not by calling e.hashCode(), but as by calling the appropriate overloading of Arrays.hashCode(e) if e is an array of a primitive type, or as by calling Arrays.deepHashCode(e) recursively if e is an array of a reference type. If a is null, this method returns 0.",;java.util.Arrays.deepHashCode(Object[]),;1
deepToString,1,1,"Returns a string representation of the ""deep contents"" of the specified array. If the array contains other arrays as elements, the string representation contains their contents and so on. This method is designed for converting multidimensional arrays to strings. The string representation consists of a list of the array's elements, enclosed in square brackets (""[]""). Adjacent elements are separated by the characters "", "" (a comma followed by a space). Elements are converted to strings as by String.valueOf(Object), unless they are themselves arrays. If an element e is an array of a primitive type, it is converted to a string as by invoking the appropriate overloading of Arrays.toString(e). If an element e is an array of a reference type, it is converted to a string as by invoking this method recursively. To avoid infinite recursion, if the specified array contains itself as an element, or contains an indirect reference to itself through one or more levels of arrays, the self-reference is converted to the string ""[...]"". For example, an array containing only a reference to itself would be rendered as ""[[...]]"". This method returns ""null"" if the specified array is null.",;java.util.Arrays.deepToString(Object[]),;1
def_kind,1,1,Description copied from interface:IRObjectOperations,;org.omg.CORBA._IDLTypeStub.def_kind(),;1
defAttributeList,1,1,Creates and returns an AttributeList.,";javax.swing.text.html.parser.DTD.defAttributeList(String,int,int,String,String,AttributeList)",;1
default_index,1,1,"Returns the index of the default member, or -1 if there is no default member. The method default_index can be invoked only on union TypeCode objects.",;org.omg.CORBA.TypeCode.default_index(),;1
defaultCharset,1,1,Returns the default charset of this Java virtual machine. The default charset is determined during virtual-machine startup and typically depends upon the locale and charset of the underlying operating system.,;java.nio.charset.Charset.defaultCharset(),;1
defaulted,1,1,Return true if the named field is defaulted and has no value in this stream.,;java.io.ObjectInputStream.GetField.defaulted(String),;1
defaultManager,1,1,Returns the default menu selection manager.,;javax.swing.MenuSelectionManager.defaultManager(),;1
defaultReadObject,1,1,Read the non-static and non-transient fields of the current class from this stream. This may only be called from the readObject method of the class being deserialized. It will throw the NotActiveException if it is called otherwise.,;java.io.ObjectInputStream.defaultReadObject(),;1
defaultThreadFactory,1,1,"Returns a default thread factory used to create new threads. This factory creates all new threads used by an Executor in the same ThreadGroup. If there is a SecurityManager, it uses the group of System.getSecurityManager(), else the group of the thread invoking this defaultThreadFactory method. Each new thread is created as a non-daemon thread with priority set to the smaller of Thread.NORM_PRIORITY and the maximum priority permitted in the thread group. New threads have names accessible via Thread.getName() of pool-N-thread-M, where N is the sequence number of this factory, and M is the sequence number of the thread created by this factory.",;java.util.concurrent.Executors.defaultThreadFactory(),;1
defaultWriteObject,1,1,Write the non-static and non-transient fields of the current class to this stream. This may only be called from the writeObject method of the class being serialized. It will throw the NotActiveException if it is called otherwise.,;java.io.ObjectOutputStream.defaultWriteObject(),;1
defContentModel,1,1,Creates and returns a new content model.,";javax.swing.text.html.parser.DTD.defContentModel(int,Object,ContentModel)",;1
defElement,1,1,Creates and returns an Element.,";javax.swing.text.html.parser.DTD.defElement(String,int,boolean,boolean,ContentModel,String[],String[],AttributeList)",;1
defineAttributes,1,1,Defines attributes for an Element.,";javax.swing.text.html.parser.DTD.defineAttributes(String,AttributeList)",;1
defineElement,1,1,"Returns the Element which matches the specified parameters. If one doesn't exist, a new one is created and returned.",";javax.swing.text.html.parser.DTD.defineElement(String,int,boolean,boolean,ContentModel,BitSet,BitSet,AttributeList)",;1
defineEntity,1,1,"Defines an entity. If the Entity specified by name, type, and data exists, it is returned; otherwise a new Entity is created and is returned.",";javax.swing.text.html.parser.DTD.defineEntity(String,int,char[])",;1
delay,1,1,"Sleeps for the specified time. To catch any InterruptedExceptions that occur, Thread.sleep() may be used instead.",;java.awt.Robot.delay(int),;1
delegateFocus,1,1,This is is a utility method that helps event handlers figure out where to send the focus when the popup is brought up. The standard implementation delegates the focus to the editor (if the combo box is editable) or to the JComboBox if it is not editable.,;javax.swing.plaf.basic.BasicComboPopup.delegateFocus(MouseEvent),;1
delete_values,1,1,"Deletes from this Context object the NamedValue object(s) whose name field matches the given property name. If the String object supplied for propname has a trailing wildcard character (""*""), then all NamedValue objects whose name fields match will be deleted. The search scope is always limited to this Context object. If no matching property is found, an exception is returned.",;org.omg.CORBA.Context.delete_values(String),;1
deleteEntry,1,1,Deletes the entry identified by the given alias from this keystore.,;java.security.KeyStore.deleteEntry(String),;1
deleteObserver,1,1,Deletes an observer from the set of observers of this object. Passing null to this method will have no effect.,;java.util.Observable.deleteObserver(Observer),;1
deleteObservers,1,1,Clears the observer list so that this object no longer has any observers.,;java.util.Observable.deleteObservers(),;1
deleteOnExit,1,1,"Requests that the file or directory denoted by this abstract pathname be deleted when the virtual machine terminates. Files (or directories) are deleted in the reverse order that they are registered. Invoking this method to delete a file or directory that is already registered for deletion has no effect. Deletion will be attempted only for normal termination of the virtual machine, as defined by the Java Language Specification. Once deletion has been requested, it is not possible to cancel the request. This method should therefore be used with care. Note: this method should not be used for file-locking, as the resulting protocol cannot be made to work reliably. The FileLock facility should be used instead.",;java.io.File.deleteOnExit(),;1
deleteTrack,1,1,Removes the specified track from the sequence.,;javax.sound.midi.Sequence.deleteTrack(Track),;1
delimiter,1,1,Returns the Pattern this Scanner is currently using to match delimiters.,;java.util.Scanner.delimiter(),;1
delItem,1,1,Deprecated.replaced by remove(String) and remove(int).,;java.awt.List.delItem(int),;1
delItems,1,1,"Deprecated.As of JDK version 1.1, Not for public use in the future. This method is expected to be retained only as a package private method.",";java.awt.List.delItems(int,int)",;1
depth,1,1,Fetches the current depth of element tree.,;javax.swing.text.ElementIterator.depth(),;1
depthFirstEnumeration,1,1,"Creates and returns an enumeration that traverses the subtree rooted at this node in depth-first order. The first node returned by the enumeration's nextElement() method is the leftmost leaf. This is the same as a postorder traversal. Modifying the tree by inserting, removing, or moving a node invalidates any enumerations created before the modification.",;javax.swing.tree.DefaultMutableTreeNode.depthFirstEnumeration(),;1
deregister,1,1,Removes the given key from its channel's key set. This method must be invoked by the selector for each channel that it deregisters.,;java.nio.channels.spi.AbstractSelector.deregister(AbstractSelectionKey),;1
deregisterDriver,1,1,"Removes the specified driver from the DriverManager's list of registered drivers. If a null value is specified for the driver to be removed, then no action is taken. If a security manager exists and its checkPermission denies permission, then a SecurityException will be thrown. If the specified driver is not found in the list of registered drivers, then no action is taken. If the driver was found, it will be removed from the list of registered drivers. If a DriverAction instance was specified when the JDBC driver was registered, its deregister method will be called prior to the driver being removed from the list of registered drivers.",;java.sql.DriverManager.deregisterDriver(Driver),;1
deselect,1,1,"Deselects the item at the specified index. Note that passing out of range parameters is invalid, and will result in unspecified behavior. If the item at the specified index is not selected, then the operation is ignored.",;java.awt.List.deselect(int),;1
deserialize,1,1,used by readObject to deserialize a collection.,";java.beans.beancontext.BeanContextSupport.deserialize(ObjectInputStream,Collection)",;1
desiredAssertionStatus,1,1,"Returns the assertion status that would be assigned to this class if it were to be initialized at the time this method is invoked. If this class has had its assertion status set, the most recent setting will be returned; otherwise, if any package default assertion status pertains to this class, the most recent setting for the most specific pertinent package default assertion status is returned; otherwise, if this class is not a system class (i.e., it has a class loader) its class loader's default assertion status is returned; otherwise, the system class default assertion status is returned. Few programmers will have any need for this method; it is provided for the benefit of the JRE itself. (It allows a class to determine at the time that it is initialized whether assertions should be enabled.) Note that this method is not guaranteed to return the actual assertion status that was (or will be) associated with the specified class when it was (or will be) initialized.",;java.lang.Class.desiredAssertionStatus(),;1
destroyForcibly,1,1,Kills the subprocess. The subprocess represented by this Process object is forcibly terminated. The default implementation of this method invokes destroy() and so may not forcibly terminate the process. Concrete implementations of this class are strongly encouraged to override this method with a compliant implementation. Invoking this method on Process objects returned by ProcessBuilder.start() and Runtime.exec(java.lang.String) will forcibly terminate the process. Note: The subprocess may not terminate immediately. i.e. isAlive() may return true for a brief period after destroyForcibly() is called. This method may be chained to waitFor() if needed.,;java.lang.Process.destroyForcibly(),;1
detectedCharset,1,1,"Retrieves the charset that was detected by this decoder(optional operation). If this decoder implements an auto-detecting charset then this method returns the actual charset once it has been detected. After that point, this method returns the same value for the duration of the current decoding operation. If not enough input bytes have yet been read to determine the actual charset then this method throws an IllegalStateException. The default implementation of this method always throws an UnsupportedOperationException; it should be overridden by auto-detecting decoders to return the appropriate value.",;java.nio.charset.CharsetDecoder.detectedCharset(),;1
dialogInit,1,1,Called by the constructors to init the JDialog properly.,;javax.swing.JDialog.dialogInit(),;1
disableAllAttributes,1,1,Disables all the attribute names.,;javax.management.AttributeChangeNotificationFilter.disableAllAttributes(),;1
disableAllObjectNames,1,1,Disables any MBeanServerNotification (all ObjectNames are deselected).,;javax.management.relation.MBeanServerNotificationFilter.disableAllObjectNames(),;1
disableAllTypes,1,1,Disables all notification types.,;javax.management.NotificationFilterSupport.disableAllTypes(),;1
disableAttribute,1,1,"Disables all the attribute change notifications the attribute name of which equals the specified attribute name to be sent to the listener. If the specified name is not in the list of enabled attribute names, this method has no effect.",;javax.management.AttributeChangeNotificationFilter.disableAttribute(String),;1
disableObjectName,1,1,Disables MBeanServerNotifications concerning given ObjectName.,;javax.management.relation.MBeanServerNotificationFilter.disableObjectName(ObjectName),;1
disableResizedPosting,1,1,Deprecated.as of Java 2 platform v1.3,;javax.swing.table.TableColumn.disableResizedPosting(),;1
disableSwingFocusManager,1,1,"Deprecated.as of 1.4, replaced by KeyboardFocusManager.setDefaultFocusTraversalPolicy(FocusTraversalPolicy)",;javax.swing.FocusManager.disableSwingFocusManager(),;1
disableType,1,1,"Removes the given prefix from the prefix list. If the specified prefix is not in the list of enabled notification types, this method has no effect.",;javax.management.NotificationFilterSupport.disableType(String),;1
discardAllEdits,1,1,Empties the undo manager sending each edit a die message in the process.,;javax.swing.undo.UndoManager.discardAllEdits(),;1
discriminator_kind,1,1,Returns the TCKind value of the discriminators TypeCode.,;org.omg.DynamicAny._DynUnionStub.discriminator_kind(),;1
discriminator_type,1,1,Returns a TypeCode object describing all non-default member labels. The method discriminator_type can be invoked only on union TypeCode objects.,;org.omg.CORBA.TypeCode.discriminator_type(),;1
disjoint,1,1,"Returns true if the two specified collections have no elements in common. Care must be exercised if this method is used on collections that do not comply with the general contract for Collection. Implementations may elect to iterate over either collection and test for containment in the other collection (or to perform any equivalent computation). If either collection uses a nonstandard equality test (as does a SortedSet whose ordering is not compatible with equals, or the key set of an IdentityHashMap), both collections must use the same nonstandard equality test, or the result of this method is undefined. Care must also be exercised when using collections that have restrictions on the elements that they may contain. Collection implementations are allowed to throw exceptions for any operation involving elements they deem ineligible. For absolute safety the specified collections should contain only elements which are eligible elements for both collections. Note that it is permissible to pass the same collection in both parameters, in which case the method will return true if and only if the collection is empty.",";java.util.Collections.disjoint(Collection&lt;?&gt;,Collection&lt;?&gt;)",;1
dismiss,1,1,"Disconnect this editor from the specified JSpinner. By default, this method removes itself from the spinners ChangeListener list.",;javax.swing.JSpinner.DefaultEditor.dismiss(JSpinner),;1
displayMessage,1,1,"Displays a popup message near the tray icon. The message will disappear after a time or if the user clicks on it. Clicking on the message may trigger an ActionEvent. Either the caption or the text may be null, but an NullPointerException is thrown if both are null. When displayed, the caption or text strings may be truncated on some platforms; the number of characters that may be displayed is platform-dependent. Note: Some platforms may not support showing a message.",";java.awt.TrayIcon.displayMessage(String,String,TrayIcon.MessageType)",;1
div,1,1,Returns a binary expression representing the quotient of two numeric values.,";javax.management.Query.div(ValueExp,ValueExp)",;1
dividedBy,1,1,Returns a copy of this duration divided by the specified value. This instance is immutable and unaffected by this method call.,;java.time.Duration.dividedBy(long),;1
doAccessibleAction,1,1,Performs the specified Action on the object,;javax.accessibility.AccessibleHyperlink.doAccessibleAction(int),;1
doDefaultCloseAction,1,1,Fires an INTERNAL_FRAME_CLOSING event and then performs the action specified by the internal frame's default close operation. This method is typically invoked by the look-and-feel-implemented action handler for the internal frame's close button.,;javax.swing.JInternalFrame.doDefaultCloseAction(),;1
doInBackground,1,1,"Computes a result, or throws an exception if unable to do so. Note that this method is executed only once. Note: this method is executed in a background thread.",;javax.swing.SwingWorker.doInBackground(),;1
dontUseGui,1,1,notify this instance that it may no longer render a GUI.,;java.beans.beancontext.BeanContextSupport.dontUseGui(),;1
doPaint,1,1,"Actually performs the painting operation. Subclasses must implement this method. The graphics object passed may represent the actual surface being rendered to, or it may be an intermediate buffer. It has also been pre-translated. Simply render the component as if it were located at 0, 0 and had a width of width and a height of height. For performance reasons, you may want to read the clip from the Graphics2D object and only render within that space.",";javax.swing.plaf.nimbus.AbstractRegionPainter.doPaint(Graphics2D,JComponent,int,int,Object[])",;1
doPhase,1,1,Executes the next phase of this key agreement with the given key that was received from one of the other parties involved in this key agreement.,";javax.crypto.KeyAgreement.doPhase(Key,boolean)",;1
doubleToLongBits,1,1,"Returns a representation of the specified floating-point value according to the IEEE 754 floating-point ""double format"" bit layout. Bit 63 (the bit that is selected by the mask 0x8000000000000000L) represents the sign of the floating-point number. Bits 62-52 (the bits that are selected by the mask 0x7ff0000000000000L) represent the exponent. Bits 51-0 (the bits that are selected by the mask 0x000fffffffffffffL) represent the significand (sometimes called the mantissa) of the floating-point number. If the argument is positive infinity, the result is 0x7ff0000000000000L. If the argument is negative infinity, the result is 0xfff0000000000000L. If the argument is NaN, the result is 0x7ff8000000000000L. In all cases, the result is a long integer that, when given to the longBitsToDouble(long) method, will produce a floating-point value the same as the argument to doubleToLongBits (except all NaN values are collapsed to a single ""canonical"" NaN value).",;java.lang.Double.doubleToLongBits(double),;1
doubleToRawLongBits,1,1,"Returns a representation of the specified floating-point value according to the IEEE 754 floating-point ""double format"" bit layout, preserving Not-a-Number (NaN) values. Bit 63 (the bit that is selected by the mask 0x8000000000000000L) represents the sign of the floating-point number. Bits 62-52 (the bits that are selected by the mask 0x7ff0000000000000L) represent the exponent. Bits 51-0 (the bits that are selected by the mask 0x000fffffffffffffL) represent the significand (sometimes called the mantissa) of the floating-point number. If the argument is positive infinity, the result is 0x7ff0000000000000L. If the argument is negative infinity, the result is 0xfff0000000000000L. If the argument is NaN, the result is the long integer representing the actual NaN value. Unlike the doubleToLongBits method, doubleToRawLongBits does not collapse all the bit patterns encoding a NaN to a single ""canonical"" NaN value. In all cases, the result is a long integer that, when given to the longBitsToDouble(long) method, will produce a floating-point value the same as the argument to doubleToRawLongBits.",;java.lang.Double.doubleToRawLongBits(double),;1
dragFrame,1,1,Moves the visible location of the frame being dragged to the location specified. The means by which this occurs can vary depending on the dragging algorithm being used. The actual logical location of the frame might not change until endDraggingFrame is called.,";javax.swing.DefaultDesktopManager.dragFrame(JComponent,int,int)",;1
drain,1,1,Drain any buffered data in ObjectOutputStream. Similar to flush but does not propagate the flush to the underlying stream.,;java.io.ObjectOutputStream.drain(),;1
drainPermits,1,1,Acquires and returns all permits that are immediately available.,;java.util.concurrent.Semaphore.drainPermits(),;1
drainTasksTo,1,1,"Removes all available unexecuted submitted and forked tasks from scheduling queues and adds them to the given collection, without altering their execution status. These may include artificially generated or wrapped tasks. This method is designed to be invoked only when the pool is known to be quiescent. Invocations at other times may not remove all tasks. A failure encountered while attempting to add elements to collection c may result in elements being in neither, either or both collections when the associated exception is thrown. The behavior of this operation is undefined if the specified collection is modified while the operation is in progress.",;java.util.concurrent.ForkJoinPool.drainTasksTo(Collection&lt;?),;1
drawEchoCharacter,1,1,"Renders the echo character, or whatever graphic should be used to display the password characters. The color in the Graphics object is set to the appropriate foreground color for selected or unselected text.",";javax.swing.text.PasswordView.drawEchoCharacter(Graphics,int,int,char)",;1
drawGlyphVector,1,1,"Renders the text of the specified GlyphVector using the Graphics2D context's rendering attributes. The rendering attributes applied include the Clip, Transform, Paint, and Composite attributes. The GlyphVector specifies individual glyphs from a Font. The GlyphVector can also contain the glyph positions. This is the fastest way to render a set of characters to the screen.",";java.awt.Graphics2D.drawGlyphVector(GlyphVector,float,float)",;1
drawRenderableImage,1,1,"Renders a RenderableImage, applying a transform from image space into user space before drawing. The transformation from user space into device space is done with the current Transform in the Graphics2D. The specified transformation is applied to the image before the transform attribute in the Graphics2D context is applied. The rendering attributes applied include the Clip, Transform, and Composite attributes. Note that no rendering is done if the specified transform is noninvertible. Rendering hints set on the Graphics2D object might be used in rendering the RenderableImage. If explicit control is required over specific hints recognized by a specific RenderableImage, or if knowledge of which hints are used is required, then a RenderedImage should be obtained directly from the RenderableImage and rendered usingdrawRenderedImage.",";java.awt.Graphics2D.drawRenderableImage(RenderableImage,AffineTransform)",;1
drawRenderedImage,1,1,"Renders a RenderedImage, applying a transform from image space into user space before drawing. The transformation from user space into device space is done with the current Transform in the Graphics2D. The specified transformation is applied to the image before the transform attribute in the Graphics2D context is applied. The rendering attributes applied include the Clip, Transform, and Composite attributes. Note that no rendering is done if the specified transform is noninvertible.",";java.awt.Graphics2D.drawRenderedImage(RenderedImage,AffineTransform)",;1
drawStringUnderlineCharAt,1,1,"Draw a string with the graphics g at location (x, y) just like g.drawString would. The character at index underlinedIndex in text will be underlined. If index is beyond the bounds of text (including &lt; 0), nothing will be underlined.",";javax.swing.plaf.basic.BasicGraphicsUtils.drawStringUnderlineCharAt(Graphics,String,int,int,int)",;1
drawTabbedText,1,1,"Draws the given text, expanding any tabs that are contained using the given tab expansion technique. This particular implementation renders in a 1.1 style coordinate system where ints are used and 72dpi is assumed.",";javax.swing.text.Utilities.drawTabbedText(Segment,int,int,Graphics,TabExpander,int)",;1
dropParameterTypes,1,1,Finds or creates a method type with some parameter types omitted. Convenience method for methodType.,";java.lang.invoke.MethodType.dropParameterTypes(int,int)",;1
dump,1,1,Gives a diagnostic dump.,;javax.swing.text.AbstractDocument.dump(PrintStream),;1
dumpStack,1,1,Prints a stack trace of the current thread to the standard error stream. This method is used only for debugging.,;java.lang.Thread.dumpStack(),;1
edit,1,1,Launches the associated editor application and opens a file for editing.,;java.awt.Desktop.edit(File),;1
editablePropertyChanged,1,1,Deprecated.As of Java 2 platform v1.4.,;javax.swing.plaf.metal.MetalComboBoxUI.editablePropertyChanged(PropertyChangeEvent),;1
editingCanceled,1,1,"Invoked when editing is canceled. The editor object is discarded and the cell is rendered once again. Application code will not use these methods explicitly, they are used internally by JTable.",;javax.swing.JTable.editingCanceled(ChangeEvent),;1
editingStopped,1,1,"Invoked when editing is finished. The changes are saved and the editor is discarded. Application code will not use these methods explicitly, they are used internally by JTable.",;javax.swing.JTable.editingStopped(ChangeEvent),;1
editToBeRedone,1,1,Returns the the next significant edit to be redone if redo is invoked. This returns null if there are no edits to be redone.,;javax.swing.undo.UndoManager.editToBeRedone(),;1
editToBeUndone,1,1,Returns the the next significant edit to be undone if undo is invoked. This returns null if there are no edits to be undone.,;javax.swing.undo.UndoManager.editToBeUndone(),;1
elementCountToTag,1,1,"Returns number of elements, starting at the deepest leaf, needed to get to an element representing tag. This will return -1 if no elements is found representing tag, or 0 if the parent of the leaf at offset represents tag.",";javax.swing.text.html.HTMLEditorKit.HTMLTextAction.elementCountToTag(HTMLDocument,int,HTML.Tag)",;1
elementDecl,1,1,Description copied from interface:DeclHandler,";org.xml.sax.ext.DefaultHandler2.elementDecl(String,String)",;1
emptyDoubleSpliterator,1,1,Creates an empty Spliterator.OfDoubleThe empty spliterator reports Spliterator.SIZED and Spliterator.SUBSIZED. Calls to Spliterator.trySplit() always return null.,;java.util.Spliterators.emptyDoubleSpliterator(),;1
emptyIntSpliterator,1,1,Creates an empty Spliterator.OfIntThe empty spliterator reports Spliterator.SIZED and Spliterator.SUBSIZED. Calls to Spliterator.trySplit() always return null.,;java.util.Spliterators.emptyIntSpliterator(),;1
emptyList,1,1,Returns an empty list (immutable). This list is serializable. This example illustrates the type-safe way to obtain an empty list: List&lt;String&gt; s = Collections.emptyList();,;java.util.Collections.emptyList(),;1
emptyLongSpliterator,1,1,Creates an empty Spliterator.OfLongThe empty spliterator reports Spliterator.SIZED and Spliterator.SUBSIZED. Calls to Spliterator.trySplit() always return null.,;java.util.Spliterators.emptyLongSpliterator(),;1
emptyMap,1,1,"Returns an empty map (immutable). This map is serializable. This example illustrates the type-safe way to obtain an empty map: Map&lt;String, Date&gt; s = Collections.emptyMap();",;java.util.Collections.emptyMap(),;1
emptyNavigableMap,1,1,"Returns an empty navigable map (immutable). This map is serializable. This example illustrates the type-safe way to obtain an empty map: NavigableMap&lt;String, Date&gt; s = Collections.emptyNavigableMap();",;java.util.Collections.emptyNavigableMap(),;1
emptyNavigableSet,1,1,Returns an empty navigable set (immutable). This set is serializable. This example illustrates the type-safe way to obtain an empty navigable set: NavigableSet&lt;String&gt; s = Collections.emptyNavigableSet();,;java.util.Collections.emptyNavigableSet(),;1
emptySet,1,1,"Returns an empty set (immutable). This set is serializable. Unlike the like-named field, this method is parameterized. This example illustrates the type-safe way to obtain an empty set: Set&lt;String&gt; s = Collections.emptySet();",;java.util.Collections.emptySet(),;1
emptySortedMap,1,1,"Returns an empty sorted map (immutable). This map is serializable. This example illustrates the type-safe way to obtain an empty map: SortedMap&lt;String, Date&gt; s = Collections.emptySortedMap();",;java.util.Collections.emptySortedMap(),;1
emptySortedSet,1,1,Returns an empty sorted set (immutable). This set is serializable. This example illustrates the type-safe way to obtain an empty sorted set: SortedSet&lt;String&gt; s = Collections.emptySortedSet();,;java.util.Collections.emptySortedSet(),;1
emptySpliterator,1,1,Creates an empty SpliteratorThe empty spliterator reports Spliterator.SIZED and Spliterator.SUBSIZED. Calls to Spliterator.trySplit() always return null.,;java.util.Spliterators.emptySpliterator(),;1
emptyTag,1,1,Writes out all empty elements (all tags that have no corresponding end tag).,;javax.swing.text.html.HTMLWriter.emptyTag(Element),;1
enableAllObjectNames,1,1,Enables all MBeanServerNotifications (all ObjectNames are selected).,;javax.management.relation.MBeanServerNotificationFilter.enableAllObjectNames(),;1
enableAttribute,1,1,"Enables all the attribute change notifications the attribute name of which equals the specified name to be sent to the listener. If the specified name is already in the list of enabled attribute names, this method has no effect.",;javax.management.AttributeChangeNotificationFilter.enableAttribute(String),;1
enableObjectName,1,1,Enables MBeanServerNotifications concerning given ObjectName.,;javax.management.relation.MBeanServerNotificationFilter.enableObjectName(ObjectName),;1
enableReplaceObject,1,1,"Enable the stream to do replacement of objects in the stream. When enabled, the replaceObject method is called for every object being serialized. If enable is true, and there is a security manager installed, this method first calls the security manager's checkPermission method with a SerializablePermission(""enableSubstitution"") permission to ensure it's ok to enable the stream to do replacement of objects in the stream.",;java.io.ObjectOutputStream.enableReplaceObject(boolean),;1
enableResizedPosting,1,1,Deprecated.as of Java 2 platform v1.3,;javax.swing.table.TableColumn.enableResizedPosting(),;1
enableResolveObject,1,1,"Enable the stream to allow objects read from the stream to be replaced. When enabled, the resolveObject method is called for every object being deserialized. If enable is true, and there is a security manager installed, this method first calls the security manager's checkPermission method with the SerializablePermission(""enableSubstitution"") permission to ensure it's ok to enable the stream to allow objects read from the stream to be replaced.",;java.io.ObjectInputStream.enableResolveObject(boolean),;1
enableType,1,1,"Enables all the notifications the type of which starts with the specified prefix to be sent to the listener. If the specified prefix is already in the list of enabled notification types, this method has no effect. Example: // Enables all notifications the type of which starts with ""my_example"" to be sent. myFilter.enableType(""my_example""); // Enables all notifications the type of which is ""my_example.my_type"" to be sent. myFilter.enableType(""my_example.my_type""); Note that: myFilter.enableType(""my_example.*""); will no match any notification type.",;javax.management.NotificationFilterSupport.enableType(String),;1
encodeLoop,1,1,"Encodes one or more characters into one or more bytes. This method encapsulates the basic encoding loop, encoding as many characters as possible until it either runs out of input, runs out of room in the output buffer, or encounters an encoding error. This method is invoked by the encode method, which handles result interpretation and error recovery. The buffers are read from, and written to, starting at their current positions. At most in.remaining() characters will be read, and at most out.remaining() bytes will be written. The buffers' positions will be advanced to reflect the characters read and the bytes written, but their marks and limits will not be modified. This method returns a CoderResult object to describe its reason for termination, in the same manner as the encode method. Most implementations of this method will handle encoding errors by returning an appropriate result object for interpretation by the encode method. An optimized implementation may instead examine the relevant error action and implement that action itself. An implementation of this method may perform arbitrary lookahead by returning CoderResult.UNDERFLOW until it receives sufficient input.",";java.nio.charset.CharsetEncoder.encodeLoop(CharBuffer,ByteBuffer)",;1
encodeToString,1,1,"Encodes the specified byte array into a String using the Base64 encoding scheme. This method first encodes all input bytes into a base64 encoded byte array and then constructs a new String by using the encoded byte array and the ISO-8859-1 charset. In other words, an invocation of this method has exactly the same effect as invoking new String(encode(src), StandardCharsets.ISO_8859_1).",;java.util.Base64.Encoder.encodeToString(byte[]),;1
endCDATA,1,1,Description copied from interface:LexicalHandler,;org.xml.sax.ext.DefaultHandler2.endCDATA(),;1
endComposition,1,1,"Ends any input composition that may currently be going on in this context. Depending on the platform and possibly user preferences, this may commit or delete uncommitted text. Any changes to the text are communicated to the active component using an input method event. If no input methods are available, then this method has no effect. A text editing component may call this in a variety of situations, for example, when the user moves the insertion point within the text (but outside the composed text), or when the component's text is saved to a file or copied to the clipboard.",;java.awt.im.InputContext.endComposition(),;1
endDraggingFrame,1,1,Description copied from interface:DesktopManager,;javax.swing.DefaultDesktopManager.endDraggingFrame(JComponent),;1
endDTD,1,1,Description copied from interface:LexicalHandler,;org.xml.sax.ext.DefaultHandler2.endDTD(),;1
endEntity,1,1,Description copied from interface:LexicalHandler,;org.xml.sax.ext.DefaultHandler2.endEntity(String),;1
endFontTag,1,1,"This is no longer used, instead &lt;span&gt; will be written out. Writes out an end tag for the &lt;font&gt; tag.",;javax.swing.text.html.MinimalHTMLWriter.endFontTag(),;1
endInsertEmpty,1,1,"Completes the insertion of a new image that was begun with a prior call to prepareInsertEmpty. The default implementation throws an IllegalStateException if the output is null, and otherwise throws an UnsupportedOperationException.",;javax.imageio.ImageWriter.endInsertEmpty(),;1
endpointName,1,1,Sets the endpointName as wsam:ServiceName/@EndpointName in the wsa:Metadata element. This method can only be called after the serviceName method has been called. See 2.1 Referencing WSDL Metadata from an EPR for more details.,;javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder.endpointName(QName),;1
endReplacePixels,1,1,"Terminates a sequence of calls to replacePixels. If canReplacePixels returns false, and UnsupportedOperationException will be thrown. The default implementation throws an IllegalStateException if the output is null, and otherwise throws an UnsupportedOperationException.",;javax.imageio.ImageWriter.endReplacePixels(),;1
endResizingFrame,1,1,Description copied from interface:DesktopManager,;javax.swing.DefaultDesktopManager.endResizingFrame(JComponent),;1
endUpdate,1,1,DEADLOCK WARNING: Calling this method may call undoableEditHappened in all listeners. It is unwise to call this method from one of its listeners.,;javax.swing.undo.UndoableEditSupport.endUpdate(),;1
endWriteEmpty,1,1,"Completes the writing of a new image that was begun with a prior call to prepareWriteEmpty. If canWriteEmpty() returns false, an UnsupportedOperationException will be thrown. The default implementation throws an IllegalStateException if the output is null, and otherwise throws an UnsupportedOperationException.",;javax.imageio.ImageWriter.endWriteEmpty(),;1
endWriteSequence,1,1,"Completes the writing of a sequence of images begun with prepareWriteSequence. Any stream metadata that should come at the end of the sequence of images is written out, and any header information at the beginning of the sequence is patched up if necessary. If the output is an ImageOutputStream, data through the stream metadata at the end of the sequence are flushed and need not be readable or writable. If canWriteSequence returns false, this method will throw an UnsupportedOperationException. The default implementation throws an IllegalStateException if the output is null, and otherwise throws an UnsupportedOperationException.",;javax.imageio.ImageWriter.endWriteSequence(),;1
engineAliases,1,1,Lists all the alias names of this keystore.,;java.security.KeyStoreSpi.engineAliases(),;1
engineBuild,1,1,Attempts to build a certification path using the specified algorithm parameter set.,;java.security.cert.CertPathBuilderSpi.engineBuild(CertPathParameters),;1
engineContainsAlias,1,1,Checks if the given alias exists in this keystore.,;java.security.KeyStoreSpi.engineContainsAlias(String),;1
engineDeleteEntry,1,1,Deletes the entry identified by the given alias from this keystore.,;java.security.KeyStoreSpi.engineDeleteEntry(String),;1
engineDoPhase,1,1,Executes the next phase of this key agreement with the given key that was received from one of the other parties involved in this key agreement.,";javax.crypto.KeyAgreementSpi.engineDoPhase(Key,boolean)",;1
engineEntryInstanceOf,1,1,Determines if the keystore Entry for the specified alias is an instance or subclass of the specified entryClass.,";java.security.KeyStoreSpi.engineEntryInstanceOf(String,Class&lt;?)",;1
engineGenerateCertificate,1,1,"Generates a certificate object and initializes it with the data read from the input stream inStream. In order to take advantage of the specialized certificate format supported by this certificate factory, the returned certificate object can be typecast to the corresponding certificate class. For example, if this certificate factory implements X.509 certificates, the returned certificate object can be typecast to the X509Certificate class. In the case of a certificate factory for X.509 certificates, the certificate provided in inStream must be DER-encoded and may be supplied in binary or printable (Base64) encoding. If the certificate is provided in Base64 encoding, it must be bounded at the beginning by -----BEGIN CERTIFICATE-----, and must be bounded at the end by -----END CERTIFICATE-----. Note that if the given input stream does not support mark and reset, this method will consume the entire input stream. Otherwise, each call to this method consumes one certificate and the read position of the input stream is positioned to the next available byte after the inherent end-of-certificate marker. If the data in the input stream does not contain an inherent end-of-certificate marker (other than EOF) and there is trailing data after the certificate is parsed, a CertificateException is thrown.",;java.security.cert.CertificateFactorySpi.engineGenerateCertificate(InputStream),;1
engineGenerateCertificates,1,1,"Returns a (possibly empty) collection view of the certificates read from the given input stream inStream. In order to take advantage of the specialized certificate format supported by this certificate factory, each element in the returned collection view can be typecast to the corresponding certificate class. For example, if this certificate factory implements X.509 certificates, the elements in the returned collection can be typecast to the X509Certificate class. In the case of a certificate factory for X.509 certificates, inStream may contain a single DER-encoded certificate in the formats described for generateCertificate. In addition, inStream may contain a PKCS#7 certificate chain. This is a PKCS#7 SignedData object, with the only significant field being certificates. In particular, the signature and the contents are ignored. This format allows multiple certificates to be downloaded at once. If no certificates are present, an empty collection is returned. Note that if the given input stream does not support mark and reset, this method will consume the entire input stream.",;java.security.cert.CertificateFactorySpi.engineGenerateCertificates(InputStream),;1
engineGenerateCRL,1,1,"Generates a certificate revocation list (CRL) object and initializes it with the data read from the input stream inStream. In order to take advantage of the specialized CRL format supported by this certificate factory, the returned CRL object can be typecast to the corresponding CRL class. For example, if this certificate factory implements X.509 CRLs, the returned CRL object can be typecast to the X509CRL class. Note that if the given input stream does not support mark and reset, this method will consume the entire input stream. Otherwise, each call to this method consumes one CRL and the read position of the input stream is positioned to the next available byte after the inherent end-of-CRL marker. If the data in the input stream does not contain an inherent end-of-CRL marker (other than EOF) and there is trailing data after the CRL is parsed, a CRLException is thrown.",;java.security.cert.CertificateFactorySpi.engineGenerateCRL(InputStream),;1
engineGenerateCRLs,1,1,"Returns a (possibly empty) collection view of the CRLs read from the given input stream inStream. In order to take advantage of the specialized CRL format supported by this certificate factory, each element in the returned collection view can be typecast to the corresponding CRL class. For example, if this certificate factory implements X.509 CRLs, the elements in the returned collection can be typecast to the X509CRL class. In the case of a certificate factory for X.509 CRLs, inStream may contain a single DER-encoded CRL. In addition, inStream may contain a PKCS#7 CRL set. This is a PKCS#7 SignedData object, with the only significant field being crls. In particular, the signature and the contents are ignored. This format allows multiple CRLs to be downloaded at once. If no CRLs are present, an empty collection is returned. Note that if the given input stream does not support mark and reset, this method will consume the entire input stream.",;java.security.cert.CertificateFactorySpi.engineGenerateCRLs(InputStream),;1
engineGenerateKey,1,1,Generates a secret key.,;javax.crypto.KeyGeneratorSpi.engineGenerateKey(),;1
engineGenerateParameters,1,1,Generates the parameters.,;java.security.AlgorithmParameterGeneratorSpi.engineGenerateParameters(),;1
engineGeneratePrivate,1,1,Generates a private key object from the provided key specification (key material).,;java.security.KeyFactorySpi.engineGeneratePrivate(KeySpec),;1
engineGeneratePublic,1,1,Generates a public key object from the provided key specification (key material).,;java.security.KeyFactorySpi.engineGeneratePublic(KeySpec),;1
engineGenerateSeed,1,1,Returns the given number of seed bytes. This call may be used to seed other random number generators.,;java.security.SecureRandomSpi.engineGenerateSeed(int),;1
engineGetAppConfigurationEntry,1,1,Retrieve the AppConfigurationEntries for the specified name.,;javax.security.auth.login.ConfigurationSpi.engineGetAppConfigurationEntry(String),;1
engineGetBlockSize,1,1,Returns the block size (in bytes).,;javax.crypto.CipherSpi.engineGetBlockSize(),;1
engineGetCertificate,1,1,"Returns the certificate associated with the given alias. If the given alias name identifies an entry created by a call to setCertificateEntry, or created by a call to setEntry with a TrustedCertificateEntry, then the trusted certificate contained in that entry is returned. If the given alias name identifies an entry created by a call to setKeyEntry, or created by a call to setEntry with a PrivateKeyEntry, then the first element of the certificate chain in that entry (if a chain exists) is returned.",;java.security.KeyStoreSpi.engineGetCertificate(String),;1
engineGetCertificateAlias,1,1,"Returns the (alias) name of the first keystore entry whose certificate matches the given certificate. This method attempts to match the given certificate with each keystore entry. If the entry being considered was created by a call to setCertificateEntry, or created by a call to setEntry with a TrustedCertificateEntry, then the given certificate is compared to that entry's certificate. If the entry being considered was created by a call to setKeyEntry, or created by a call to setEntry with a PrivateKeyEntry, then the given certificate is compared to the first element of that entry's certificate chain.",;java.security.KeyStoreSpi.engineGetCertificateAlias(Certificate),;1
engineGetCertificateChain,1,1,"Returns the certificate chain associated with the given alias. The certificate chain must have been associated with the alias by a call to setKeyEntry, or by a call to setEntry with a PrivateKeyEntry.",;java.security.KeyStoreSpi.engineGetCertificateChain(String),;1
engineGetCertificates,1,1,"Returns a Collection of Certificates that match the specified selector. If no Certificates match the selector, an empty Collection will be returned. For some CertStore types, the resulting Collection may not contain all of the Certificates that match the selector. For instance, an LDAP CertStore may not search all entries in the directory. Instead, it may just search entries that are likely to contain the Certificates it is looking for. Some CertStore implementations (especially LDAP CertStores) may throw a CertStoreException unless a non-null CertSelector is provided that includes specific criteria that can be used to find the certificates. Issuer and/or subject names are especially useful criteria.",;java.security.cert.CertStoreSpi.engineGetCertificates(CertSelector),;1
engineGetCertPathEncodings,1,1,"Returns an iteration of the CertPath encodings supported by this certificate factory, with the default encoding first. See the CertPath Encodings section in the Java Cryptography Architecture Standard Algorithm Name Documentation for information about standard encoding names. Attempts to modify the returned Iterator via its remove method result in an UnsupportedOperationException. This method was added to version 1.4 of the Java 2 Platform Standard Edition. In order to maintain backwards compatibility with existing service providers, this method cannot be abstract and by default throws an UnsupportedOperationException.",;java.security.cert.CertificateFactorySpi.engineGetCertPathEncodings(),;1
engineGetClientSessionContext,1,1,Returns a client SSLSessionContext object for this context.,;javax.net.ssl.SSLContextSpi.engineGetClientSessionContext(),;1
engineGetCreationDate,1,1,Returns the creation date of the entry identified by the given alias.,;java.security.KeyStoreSpi.engineGetCreationDate(String),;1
engineGetCRLs,1,1,"Returns a Collection of CRLs that match the specified selector. If no CRLs match the selector, an empty Collection will be returned. For some CertStore types, the resulting Collection may not contain all of the CRLs that match the selector. For instance, an LDAP CertStore may not search all entries in the directory. Instead, it may just search entries that are likely to contain the CRLs it is looking for. Some CertStore implementations (especially LDAP CertStores) may throw a CertStoreException unless a non-null CRLSelector is provided that includes specific criteria that can be used to find the CRLs. Issuer names and/or the certificate to be checked are especially useful.",;java.security.cert.CertStoreSpi.engineGetCRLs(CRLSelector),;1
engineGetDefaultSSLParameters,1,1,Returns a copy of the SSLParameters indicating the default settings for this SSL context. The parameters will always have the ciphersuite and protocols arrays set to non-null values. The default implementation obtains the parameters from an SSLSocket created by calling the SocketFactory.createSocket() method of this context's SocketFactory.,;javax.net.ssl.SSLContextSpi.engineGetDefaultSSLParameters(),;1
engineGetDigestLength,1,1,"Returns the digest length in bytes. This concrete method has been added to this previously-defined abstract class. (For backwards compatibility, it cannot be abstract.) The default behavior is to return 0. This method may be overridden by a provider to return the digest length.",;java.security.MessageDigestSpi.engineGetDigestLength(),;1
engineGetEntry,1,1,Gets a KeyStore.Entry for the specified alias with the specified protection parameter.,";java.security.KeyStoreSpi.engineGetEntry(String,KeyStore.ProtectionParameter)",;1
engineGetIV,1,1,"Returns the initialization vector (IV) in a new buffer. This is useful in the context of password-based encryption or decryption, where the IV is derived from a user-provided passphrase.",;javax.crypto.CipherSpi.engineGetIV(),;1
engineGetKey,1,1,"Returns the key associated with the given alias, using the given password to recover it. The key must have been associated with the alias by a call to setKeyEntry, or by a call to setEntry with a PrivateKeyEntry or SecretKeyEntry.",";java.security.KeyStoreSpi.engineGetKey(String,char[])",;1
engineGetKeyManagers,1,1,Returns one key manager for each type of key material.,;javax.net.ssl.KeyManagerFactorySpi.engineGetKeyManagers(),;1
engineGetKeySize,1,1,Returns the key size of the given key object in bits. This concrete method has been added to this previously-defined abstract class. It throws an UnsupportedOperationException if it is not overridden by the provider.,;javax.crypto.CipherSpi.engineGetKeySize(Key),;1
engineGetMacLength,1,1,Returns the length of the MAC in bytes.,;javax.crypto.MacSpi.engineGetMacLength(),;1
engineGetParameter,1,1,Deprecated.,;java.security.SignatureSpi.engineGetParameter(String),;1
engineGetParameterSpec,1,1,"Returns a (transparent) specification of this parameters object. paramSpec identifies the specification class in which the parameters should be returned. It could, for example, be DSAParameterSpec.class, to indicate that the parameters should be returned in an instance of the DSAParameterSpec class.",;java.security.AlgorithmParametersSpi.engineGetParameterSpec(Class&lt;T&gt;),;1
engineGetServerSessionContext,1,1,Returns a server SSLSessionContext object for this context.,;javax.net.ssl.SSLContextSpi.engineGetServerSessionContext(),;1
engineGetServerSocketFactory,1,1,Returns a ServerSocketFactory object for this context.,;javax.net.ssl.SSLContextSpi.engineGetServerSocketFactory(),;1
engineGetSocketFactory,1,1,Returns a SocketFactory object for this context.,;javax.net.ssl.SSLContextSpi.engineGetSocketFactory(),;1
engineGetSupportedSSLParameters,1,1,Returns a copy of the SSLParameters indicating the maximum supported settings for this SSL context. The parameters will always have the ciphersuite and protocols arrays set to non-null values. The default implementation obtains the parameters from an SSLSocket created by calling the SocketFactory.createSocket() method of this context's SocketFactory.,;javax.net.ssl.SSLContextSpi.engineGetSupportedSSLParameters(),;1
engineGetTrustManagers,1,1,Returns one trust manager for each type of trust material.,;javax.net.ssl.TrustManagerFactorySpi.engineGetTrustManagers(),;1
engineImplies,1,1,Check whether the policy has granted a Permission to a ProtectionDomain.,";java.security.PolicySpi.engineImplies(ProtectionDomain,Permission)",;1
engineInitVerify,1,1,Initializes this signature object with the specified public key for verification operations.,;java.security.SignatureSpi.engineInitVerify(PublicKey),;1
engineIsCertificateEntry,1,1,"Returns true if the entry identified by the given alias was created by a call to setCertificateEntry, or created by a call to setEntry with a TrustedCertificateEntry.",;java.security.KeyStoreSpi.engineIsCertificateEntry(String),;1
engineIsKeyEntry,1,1,"Returns true if the entry identified by the given alias was created by a call to setKeyEntry, or created by a call to setEntry with a PrivateKeyEntry or a SecretKeyEntry.",;java.security.KeyStoreSpi.engineIsKeyEntry(String),;1
engineNextBytes,1,1,"Generates a user-specified number of random bytes. If a call to engineSetSeed had not occurred previously, the first call to this method forces this SecureRandom implementation to seed itself. This self-seeding will not occur if engineSetSeed was previously called.",;java.security.SecureRandomSpi.engineNextBytes(byte[]),;1
engineSetCertificateEntry,1,1,"Assigns the given certificate to the given alias. If the given alias identifies an existing entry created by a call to setCertificateEntry, or created by a call to setEntry with a TrustedCertificateEntry, the trusted certificate in the existing entry is overridden by the given certificate.",";java.security.KeyStoreSpi.engineSetCertificateEntry(String,Certificate)",;1
engineSetEntry,1,1,"Saves a KeyStore.Entry under the specified alias. The specified protection parameter is used to protect the Entry. If an entry already exists for the specified alias, it is overridden.",";java.security.KeyStoreSpi.engineSetEntry(String,KeyStore.Entry,KeyStore.ProtectionParameter)",;1
engineSetMode,1,1,Sets the mode of this cipher.,;javax.crypto.CipherSpi.engineSetMode(String),;1
engineSetPadding,1,1,Sets the padding mechanism of this cipher.,;javax.crypto.CipherSpi.engineSetPadding(String),;1
engineSetSeed,1,1,"Reseeds this random object. The given seed supplements, rather than replaces, the existing seed. Thus, repeated calls are guaranteed never to reduce randomness.",;java.security.SecureRandomSpi.engineSetSeed(byte[]),;1
engineSize,1,1,Retrieves the number of entries in this keystore.,;java.security.KeyStoreSpi.engineSize(),;1
engineToString,1,1,Returns a formatted string describing the parameters.,;java.security.AlgorithmParametersSpi.engineToString(),;1
engineUnwrap,1,1,"Unwrap a previously wrapped key. This concrete method has been added to this previously-defined abstract class. (For backwards compatibility, it cannot be abstract.) It may be overridden by a provider to unwrap a previously wrapped key. Such an override is expected to throw an InvalidKeyException if the given wrapped key cannot be unwrapped. If this method is not overridden, it always throws an UnsupportedOperationException.",";javax.crypto.CipherSpi.engineUnwrap(byte[],String,int)",;1
engineValidate,1,1,"Validates the specified certification path using the specified algorithm parameter set. The CertPath specified must be of a type that is supported by the validation algorithm, otherwise an InvalidAlgorithmParameterException will be thrown. For example, a CertPathValidator that implements the PKIX algorithm validates CertPath objects of type X.509.",";java.security.cert.CertPathValidatorSpi.engineValidate(CertPath,CertPathParameters)",;1
engineWrap,1,1,"Wrap a key. This concrete method has been added to this previously-defined abstract class. (For backwards compatibility, it cannot be abstract.) It may be overridden by a provider to wrap a key. Such an override is expected to throw an IllegalBlockSizeException or InvalidKeyException (under the specified circumstances), if the given key cannot be wrapped. If this method is not overridden, it always throws an UnsupportedOperationException.",;javax.crypto.CipherSpi.engineWrap(Key),;1
enqueue,1,1,"Adds this reference object to the queue with which it is registered, if any. This method is invoked only by Java code; when the garbage collector enqueues references it does so directly, without invoking this method.",;java.lang.ref.Reference.enqueue(),;1
ensureIndexIsVisible,1,1,"Scrolls the list within an enclosing viewport to make the specified cell completely visible. This calls scrollRectToVisible with the bounds of the specified cell. For this method to work, the JList must be within a JViewport. If the given index is outside the list's range of cells, this method results in nothing.",;javax.swing.JList.ensureIndexIsVisible(int),;1
ensureRowsAreVisible,1,1,Ensures that the rows identified by beginRow through endRow are visible.,";javax.swing.plaf.basic.BasicTreeUI.ensureRowsAreVisible(int,int)",;1
entryInstanceOf,1,1,Determines if the keystore Entry for the specified alias is an instance or subclass of the specified entryClass.,";java.security.KeyStore.entryInstanceOf(String,Class&lt;?)",;1
enumeration,1,1,Returns an enumeration over the specified collection. This provides interoperability with legacy APIs that require an enumeration as input.,;java.util.Collections.enumeration(Collection&lt;T&gt;),;1
env,1,1,Retrieves the Environment object for this request. It contains the exception that the method being invoked has thrown (after the invocation returns).,;org.omg.CORBA.Request.env(),;1
environment,1,1,"Returns a string map view of this process builder's environment. Whenever a process builder is created, the environment is initialized to a copy of the current process environment (see System.getenv()). Subprocesses subsequently started by this object's start() method will use this map as their environment. The returned object may be modified using ordinary Map operations. These modifications will be visible to subprocesses started via the start() method. Two ProcessBuilder instances always contain independent process environments, so changes to the returned map will never be reflected in any other ProcessBuilder instance or the values returned by System.getenv. If the system does not support environment variables, an empty map is returned. The returned map does not permit null keys or values. Attempting to insert or query the presence of a null key or value will throw a NullPointerException. Attempting to query the presence of a key or value which is not of type String will throw a ClassCastException. The behavior of the returned map is system-dependent. A system may not allow modifications to environment variables or may forbid certain variable names or values. For this reason, attempts to modify the map may fail with UnsupportedOperationException or IllegalArgumentException if the modification is not permitted by the operating system. Since the external format of environment variable names and values is system-dependent, there may not be a one-to-one mapping between them and Java's Unicode strings. Nevertheless, the map is implemented in such a way that environment variables which are not modified by Java code will have an unmodified native representation in the subprocess. The returned map and its collection views may not obey the general contract of the Object.equals(java.lang.Object) and Object.hashCode() methods. The returned map is typically case-sensitive on all platforms. If a security manager exists, its checkPermission method is called with a RuntimePermission(""getenv.*"") permission. This may result in a SecurityException being thrown. When passing information to a Java subprocess, system properties are generally preferred over environment variables.",;java.lang.ProcessBuilder.environment(),;1
eolIsSignificant,1,1,"Determines whether or not ends of line are treated as tokens. If the flag argument is true, this tokenizer treats end of lines as tokens; the nextToken method returns TT_EOL and also sets the ttype field to this value when an end of line is read. A line is a sequence of characters ending with either a carriage-return character ('\r') or a newline character (''). In addition, a carriage-return character followed immediately by a newline character is treated as a single end-of-line token. If the flag is false, end-of-line characters are treated as white space and serve only to separate tokens.",;java.io.StreamTokenizer.eolIsSignificant(boolean),;1
eq,1,1,Returns a query expression that represents an equality constraint on two values.,";javax.management.Query.eq(ValueExp,ValueExp)",;1
equivalent,1,1,Tests to see if the given TypeCode object is equivalent to this TypeCode object.,;org.omg.CORBA.TypeCode.equivalent(TypeCode),;1
erase,1,1,Erases all reference types to Object. Convenience method for methodType. All primitive types (including void) will remain unchanged.,;java.lang.invoke.MethodType.erase(),;1
escapeValue,1,1,"Given the value of an attribute, returns a string escaped according to the rules specified in RFC 2253. For example, if the val is ""Sue, Grabbit and Runn"", the escaped value returned by this method is ""Sue\, Grabbit and Runn"". A string value is represented as a String and binary value as a byte array.",;javax.naming.ldap.Rdn.escapeValue(Object),;1
etherealize,1,1,"This operation is invoked whenever a servant for an object is deactivated, assuming the POA has the USE_SERVANT_MANAGER and RETAIN policies.",";org.omg.PortableServer._ServantActivatorStub.etherealize(byte[],POA,Servant,boolean,boolean)",;1
eventTypeEnabled,1,1,"If wheel scrolling is enabled, we return true for MouseWheelEvents",;java.awt.ScrollPane.eventTypeEnabled(int),;1
exactInvoker,1,1,"Produces a special invoker method handle which can be used to invoke any method handle of the given type, as if by invokeExact. The resulting invoker will have a type which is exactly equal to the desired type, except that it will accept an additional leading argument of type MethodHandle. This method is equivalent to the following code (though it may be more efficient): publicLookup().findVirtual(MethodHandle.class, ""invokeExact"", type)Discussion: Invoker method handles can be useful when working with variable method handles of unknown types. For example, to emulate an invokeExact call to a variable method handle M, extract its type T, look up the invoker method X for T, and call the invoker method, as X.invoke(T, A...). (It would not work to call X.invokeExact, since the type T is unknown.) If spreading, collecting, or other argument transformations are required, they can be applied once to the invoker X and reused on many M method handle values, as long as they are compatible with the type of X. (Note: The invoker method is not available via the Core Reflection API. An attempt to call java.lang.reflect.Method.invoke on the declared invokeExact or invoke method will raise an UnsupportedOperationException.) This method throws no reflective or security exceptions.",;java.lang.invoke.MethodHandles.exactInvoker(MethodType),;1
except,1,1,Deprecated.use set_exception(),;org.omg.CORBA.ServerRequest.except(Any),;1
exceptionally,1,1,"Returns a new CompletableFuture that is completed when this CompletableFuture completes, with the result of the given function of the exception triggering this CompletableFuture's completion when it completes exceptionally; otherwise, if this CompletableFuture completes normally, then the returned CompletableFuture also completes normally with the same value. Note: More flexible versions of this functionality are available using methods whenComplete and handle.",";java.util.concurrent.CompletableFuture.exceptionally(Function&lt;Throwable,?)",;1
exceptions,1,1,Retrieves the ExceptionList object for this request. This list contains TypeCode objects describing the exceptions that may be thrown by the method being invoked.,;org.omg.CORBA.Request.exceptions(),;1
exclusiveOr,1,1,"Sets the shape of this Area to be the combined area of its current shape and the shape of the specified Area, minus their intersection. The resulting shape of this Area will include only areas that were contained in either this Area or in the specified Area, but not in both. // Example: Area a1 = new Area([triangle 0,0 =&gt; 8,0 =&gt; 0,8]); Area a2 = new Area([triangle 0,0 =&gt; 8,0 =&gt; 8,8]); a1.exclusiveOr(a2); a1(before) xor a2 = a1(after) ################ ################ ############## ############## ## ## ############ ############ #### #### ########## ########## ###### ###### ######## ######## ################ ###### ###### ###### ###### #### #### #### #### ## ## ## ##",;java.awt.geom.Area.exclusiveOr(Area),;1
exitValue,1,1,Returns the exit value for the subprocess.,;java.lang.Process.exitValue(),;1
expandPath,1,1,"Ensures that the node identified by the specified path is expanded and viewable. If the last item in the path is a leaf, this will have no effect.",;javax.swing.JTree.expandPath(TreePath),;1
expandRow,1,1,Ensures that the node in the specified row is expanded and viewable. If row is &lt; 0 or &gt;= getRowCount this will have no effect.,;javax.swing.JTree.expandRow(int),;1
exportAsDrag,1,1,"Causes the Swing drag support to be initiated. This is called by the various UI implementations in the javax.swing.plaf.basic package if the dragEnabled property is set on the component. This can be called by custom UI implementations to use the Swing drag support. This method can also be called by a Swing extension written as a subclass of JComponent to take advantage of the Swing drag support. The transfer will not necessarily have been completed at the return of this call (i.e. the call does not block waiting for the drop). The transfer will take place through the Swing implementation of the java.awt.dnd mechanism, requiring no further effort from the developer. The exportDone method will be called when the transfer has completed.",";javax.swing.TransferHandler.exportAsDrag(JComponent,InputEvent,int)",;1
exportDone,1,1,Invoked after data has been exported. This method should remove the data that was transferred if the action was MOVE. This method is implemented to do nothing since MOVE is not a supported action of this implementation (getSourceActions does not include MOVE).,";javax.swing.TransferHandler.exportDone(JComponent,Transferable,int)",;1
exportToClipboard,1,1,"Causes a transfer from the given component to the given clipboard. This method is called by the default cut and copy actions registered in a component's action map. The transfer will take place using the java.awt.datatransfer mechanism, requiring no further effort from the developer. Any data transfer will be complete and the exportDone method will be called with the action that occurred, before this method returns. Should the clipboard be unavailable when attempting to place data on it, the IllegalStateException thrown by Clipboard.setContents(Transferable, ClipboardOwner) will be propagated through this method. However, exportDone will first be called with an action of NONE for consistency.",";javax.swing.TransferHandler.exportToClipboard(JComponent,Clipboard,int)",;1
extendedOperation,1,1,Description copied from interface:LdapContext,;javax.naming.ldap.InitialLdapContext.extendedOperation(ExtendedRequest),;1
externalEntityDecl,1,1,Description copied from interface:DeclHandler,";org.xml.sax.ext.DefaultHandler2.externalEntityDecl(String,String,String)",;1
extract_any,1,1,Extracts the Any object in this Any object's value field.,;org.omg.CORBA.Any.extract_any(),;1
extract_boolean,1,1,Extracts the boolean in this Any object's value field.,;org.omg.CORBA.Any.extract_boolean(),;1
extract_char,1,1,Extracts the char in this Any object's value field.,;org.omg.CORBA.Any.extract_char(),;1
extract_double,1,1,Extracts the double in this Any object's value field.,;org.omg.CORBA.Any.extract_double(),;1
extract_fixed,1,1,Extracts the java.math.BigDecimal object in this Any object's value field.,;org.omg.CORBA.Any.extract_fixed(),;1
extract_float,1,1,Extracts the float in this Any object's value field.,;org.omg.CORBA.Any.extract_float(),;1
extract_long,1,1,Extracts the int in this Any object's value field.,;org.omg.CORBA.Any.extract_long(),;1
extract_longlong,1,1,Extracts the long in this Any object's value field.,;org.omg.CORBA.Any.extract_longlong(),;1
extract_Object,1,1,Extracts the org.omg.CORBA.Object in this Any object's value field.,;org.omg.CORBA.Any.extract_Object(),;1
extract_octet,1,1,Extracts the byte in this Any object's value field.,;org.omg.CORBA.Any.extract_octet(),;1
extract_Principal,1,1,Deprecated.Deprecated by CORBA 2.2.,;org.omg.CORBA.Any.extract_Principal(),;1
extract_short,1,1,Extracts the short in this Any object's value field.,;org.omg.CORBA.Any.extract_short(),;1
extract_Streamable,1,1,Extracts a Streamable from this Any object's value field. This method allows the extraction of non-primitive IDL types.,;org.omg.CORBA.Any.extract_Streamable(),;1
extract_string,1,1,Extracts the String object in this Any object's value field.,;org.omg.CORBA.Any.extract_string(),;1
extract_TypeCode,1,1,Extracts the TypeCode object in this Any object's value field.,;org.omg.CORBA.Any.extract_TypeCode(),;1
extract_ulong,1,1,Extracts the int in this Any object's value field.,;org.omg.CORBA.Any.extract_ulong(),;1
extract_ulonglong,1,1,Extracts the long in this Any object's value field.,;org.omg.CORBA.Any.extract_ulonglong(),;1
extract_ushort,1,1,Extracts the short in this Any object's value field.,;org.omg.CORBA.Any.extract_ushort(),;1
extract_Value,1,1,Extracts the java.io.Serializable object in this Any object's value field.,;org.omg.CORBA.Any.extract_Value(),;1
extract_wchar,1,1,Extracts the char in this Any object's value field.,;org.omg.CORBA.Any.extract_wchar(),;1
extract_wstring,1,1,Extracts the String object in this Any object's value field.,;org.omg.CORBA.Any.extract_wstring(),;1
fieldModifiers,1,1,Return an int value OR-ing together the source language modifiers that can be applied to a field.,;java.lang.reflect.Modifier.fieldModifiers(),;1
file,1,1,"Returns the File source or destination associated with this redirect, or null if there is no such file.",;java.lang.ProcessBuilder.Redirect.file(),;1
fillInStackTrace,1,1,"Fills in the execution stack trace. This method records within this Throwable object information about the current state of the stack frames for the current thread. If the stack trace of this Throwable is not writable, calling this method has no effect.",;java.lang.Throwable.fillInStackTrace(),;1
filterArguments,1,1,"Adapts a target method handle by pre-processing one or more of its arguments, each with its own unary filter function, and then calling the target with each pre-processed argument replaced by the result of its corresponding filter function. The pre-processing is performed by one or more method handles, specified in the elements of the filters array. The first element of the filter array corresponds to the pos argument of the target, and so on in sequence. Null arguments in the array are treated as identity functions, and the corresponding arguments left unchanged. (If there are no non-null elements in the array, the original target is returned.) Each filter is applied to the corresponding argument of the adapter. If a filter F applies to the Nth argument of the target, then F must be a method handle which takes exactly one argument. The type of F's sole argument replaces the corresponding argument type of the target in the resulting adapted method handle. The return type of F must be identical to the corresponding parameter type of the target. It is an error if there are elements of filters (null or not) which do not correspond to argument positions in the target. Example:import static java.lang.invoke.MethodHandles.*;import static java.lang.invoke.MethodType.*;...MethodHandle cat = lookup().findVirtual(String.class, ""concat"", methodType(String.class, String.class));MethodHandle upcase = lookup().findVirtual(String.class, ""toUpperCase"", methodType(String.class));assertEquals(""xy"", (String) cat.invokeExact(""x"", ""y""));MethodHandle f0 = filterArguments(cat, 0, upcase);assertEquals(""Xy"", (String) f0.invokeExact(""x"", ""y"")); // XyMethodHandle f1 = filterArguments(cat, 1, upcase);assertEquals(""xY"", (String) f1.invokeExact(""x"", ""y"")); // xYMethodHandle f2 = filterArguments(cat, 0, upcase, upcase);assertEquals(""XY"", (String) f2.invokeExact(""x"", ""y"")); // XY Here is pseudocode for the resulting adapter: V target(P... p, A[i]... a[i], B... b); A[i] filter[i](V[i]); T adapter(P... p, V[i]... v[i], B... b) { return target(p..., f[i](v[i])..., b...); }",";java.lang.invoke.MethodHandles.filterArguments(MethodHandle,int,MethodHandle...)",;1
filterIndexColorModel,1,1,Filters an IndexColorModel object by running each entry in its color tables through the filterRGB function that RGBImageFilter subclasses must provide. Uses coordinates of -1 to indicate that a color table entry is being filtered rather than an actual pixel value.,;java.awt.image.RGBImageFilter.filterIndexColorModel(IndexColorModel),;1
filterReturnValue,1,1,"Adapts a target method handle by post-processing its return value (if any) with a filter (another method handle). The result of the filter is returned from the adapter. If the target returns a value, the filter must accept that value as its only argument. If the target returns void, the filter must accept no arguments. The return type of the filter replaces the return type of the target in the resulting adapted method handle. The argument type of the filter (if any) must be identical to the return type of the target. Example:import static java.lang.invoke.MethodHandles.*;import static java.lang.invoke.MethodType.*;...MethodHandle cat = lookup().findVirtual(String.class, ""concat"", methodType(String.class, String.class));MethodHandle length = lookup().findVirtual(String.class, ""length"", methodType(int.class));System.out.println((String) cat.invokeExact(""x"", ""y"")); // xyMethodHandle f0 = filterReturnValue(cat, length);System.out.println((int) f0.invokeExact(""x"", ""y"")); // 2 Here is pseudocode for the resulting adapter: V target(A...); T filter(V); T adapter(A... a) { V v = target(a...); return filter(v); } // and if the target has a void return: void target2(A...); T filter2(); T adapter2(A... a) { target2(a...); return filter2(); } // and if the filter has a void return: V target3(A...); void filter3(V); void adapter3(A... a) { V v = target3(a...); filter3(v); }",";java.lang.invoke.MethodHandles.filterReturnValue(MethodHandle,MethodHandle)",;1
filterRGBPixels,1,1,Filters a buffer of pixels in the default RGB ColorModel by passing them one by one through the filterRGB method.,";java.awt.image.RGBImageFilter.filterRGBPixels(int,int,int,int,int[],int,int)",;1
finalSubString,1,1,Returns a query expression that represents a matching constraint on a string argument. The value must end with the given literal string value.,";javax.management.Query.finalSubString(AttributeValueExp,StringValueExp)",;1
findAssociatedMBeans,1,1,Retrieves the MBeans associated to given one in a relation. This corresponds to CIM Associators and AssociatorNames operations.,";javax.management.relation.RelationService.findAssociatedMBeans(ObjectName,String,String)",;1
findColumn,1,1,Returns a column given its name. Implementation is naive so this should be overridden if this method is to be called often. This method is not in the TableModel interface and is not used by the JTable.,;javax.swing.table.AbstractTableModel.findColumn(String),;1
findConstructor,1,1,"Produces a method handle which creates an object and initializes it, using the constructor of the specified type. The parameter types of the method handle will be those of the constructor, while the return type will be a reference to the constructor's class. The constructor and all its argument types must be accessible to the lookup object. The requested type must have a return type of void. (This is consistent with the JVM's treatment of constructor type descriptors.) The returned method handle will have variable arity if and only if the constructor's variable arity modifier bit (0x0080) is set. If the returned method handle is invoked, the constructor's class will be initialized, if it has not already been initialized. Example:import static java.lang.invoke.MethodHandles.*;import static java.lang.invoke.MethodType.*;...MethodHandle MH_newArrayList = publicLookup().findConstructor( ArrayList.class, methodType(void.class, Collection.class));Collection orig = Arrays.asList(""x"", ""y"");Collection copy = (ArrayList) MH_newArrayList.invokeExact(orig);assert(orig != copy);assertEquals(orig, copy);// a variable-arity constructor:MethodHandle MH_newProcessBuilder = publicLookup().findConstructor( ProcessBuilder.class, methodType(void.class, String[].class));ProcessBuilder pb = (ProcessBuilder) MH_newProcessBuilder.invoke(""x"", ""y"", ""z"");assertEquals(""[x, y, z]"", pb.command().toString());",";java.lang.invoke.MethodHandles.Lookup.findConstructor(Class&lt;?&gt;,MethodType)",;1
findEditor,1,1,Locate a value editor for a given target type.,;java.beans.PropertyEditorManager.findEditor(Class&lt;?&gt;),;1
findElementMatchingTag,1,1,Returns the deepest element at offset matching tag.,";javax.swing.text.html.HTMLEditorKit.HTMLTextAction.findElementMatchingTag(HTMLDocument,int,HTML.Tag)",;1
findFocusOwner,1,1,"Deprecated.As of 1.4, replaced by KeyboardFocusManager.getFocusOwner().",;javax.swing.SwingUtilities.findFocusOwner(Component),;1
findGetter,1,1,Produces a method handle giving read access to a non-static field. The type of the method handle will have a return type of the field's value type. The method handle's single argument will be the instance containing the field. Access checking is performed immediately on behalf of the lookup class.,";java.lang.invoke.MethodHandles.Lookup.findGetter(Class&lt;?&gt;,String,Class&lt;?&gt;)",;1
findLibrary,1,1,"Returns the absolute path name of a native library. The VM invokes this method to locate the native libraries that belong to classes loaded with this class loader. If this method returns null, the VM searches the library along the path specified as the ""java.library.path"" property.",;java.lang.ClassLoader.findLibrary(String),;1
findLoadedClass,1,1,Returns the class with the given binary name if this loader has been recorded by the Java virtual machine as an initiating loader of a class with that binary name. Otherwise null is returned.,;java.lang.ClassLoader.findLoadedClass(String),;1
findMBeanServer,1,1,Return a list of registered MBeanServer objects. A registered MBeanServer object is one that was created by one of the createMBeanServer methods and not subsequently released with releaseMBeanServer.,;javax.management.MBeanServerFactory.findMBeanServer(String),;1
findMedia,1,1,"The specified dimensions are used to locate a matching MediaSize instance from amongst all the standard MediaSize instances. If there is no exact match, the closest match is used. The MediaSize is in turn used to locate the MediaSizeName object. This method may return null if the closest matching MediaSize has no corresponding Media instance. This method is useful for clients which have only dimensions and want to find a Media which corresponds to the dimensions.",";javax.print.attribute.standard.MediaSize.findMedia(float,float,int)",;1
findOffsetToCharactersInString,1,1,"Finds the next character in the document with a character in string, starting at offset start. If there are no characters found, -1 will be returned.",";javax.swing.text.ParagraphView.findOffsetToCharactersInString(char[],int)",;1
findReferencingRelations,1,1,Retrieves the relations where a given MBean is referenced. This corresponds to the CIM "References" and "ReferenceNames" operations.,";javax.management.relation.RelationService.findReferencingRelations(ObjectName,String,String)",;1
findRelationsOfType,1,1,Returns the relation ids for relations of the given type.,;javax.management.relation.RelationService.findRelationsOfType(String),;1
findSetter,1,1,"Produces a method handle giving write access to a non-static field. The type of the method handle will have a void return type. The method handle will take two arguments, the instance containing the field, and the value to be stored. The second argument will be of the field's value type. Access checking is performed immediately on behalf of the lookup class.",";java.lang.invoke.MethodHandles.Lookup.findSetter(Class&lt;?&gt;,String,Class&lt;?&gt;)",;1
findSpecial,1,1,"Produces an early-bound method handle for a virtual method. It will bypass checks for overriding methods on the receiver, as if called from an invokespecial instruction from within the explicitly specified specialCaller. The type of the method handle will be that of the method, with a suitably restricted receiver type prepended. (The receiver type will be specialCaller or a subtype.) The method and all its argument types must be accessible to the lookup object. Before method resolution, if the explicitly specified caller class is not identical with the lookup class, or if this lookup object does not have private access privileges, the access fails. The returned method handle will have variable arity if and only if the method's variable arity modifier bit (0x0080) is set. (Note: JVM internal methods named ""&lt;init&gt;"" are not visible to this API, even though the invokespecial instruction can refer to them in special circumstances. Use findConstructor to access instance initialization methods in a safe manner.)Example:import static java.lang.invoke.MethodHandles.*;import static java.lang.invoke.MethodType.*;...static class Listie extends ArrayList { public String toString() { return ""[wee Listie]""; } static Lookup lookup() { return MethodHandles.lookup(); }}...// no access to constructor via invokeSpecial:MethodHandle MH_newListie = Listie.lookup() .findConstructor(Listie.class, methodType(void.class));Listie l = (Listie) MH_newListie.invokeExact();try { assertEquals(""impossible"", Listie.lookup().findSpecial( Listie.class, ""&lt;init&gt;"", methodType(void.class), Listie.class)); } catch (NoSuchMethodException ex) { } // OK// access to super and self methods via invokeSpecial:MethodHandle MH_super = Listie.lookup().findSpecial( ArrayList.class, ""toString"" , methodType(String.class), Listie.class);MethodHandle MH_this = Listie.lookup().findSpecial( Listie.class, ""toString"" , methodType(String.class), Listie.class);MethodHandle MH_duper = Listie.lookup().findSpecial( Object.class, ""toString"" , methodType(String.class), Listie.class);assertEquals(""[]"", (String) MH_super.invokeExact(l));assertEquals(""""+l, (String) MH_this.invokeExact(l));assertEquals(""[]"", (String) MH_duper.invokeExact(l)); // ArrayList methodtry { assertEquals(""inaccessible"", Listie.lookup().findSpecial( String.class, ""toString"", methodType(String.class), Listie.class)); } catch (IllegalAccessException ex) { } // OKListie subl = new Listie() { public String toString() { return ""[subclass]""; } };assertEquals(""""+l, (String) MH_this.invokeExact(subl)); // Listie method",";java.lang.invoke.MethodHandles.Lookup.findSpecial(Class&lt;?&gt;,String,MethodType,Class&lt;?&gt;)",;1
findStatic,1,1,"Produces a method handle for a static method. The type of the method handle will be that of the method. (Since static methods do not take receivers, there is no additional receiver argument inserted into the method handle type, as there would be with findVirtual or findSpecial.) The method and all its argument types must be accessible to the lookup object. The returned method handle will have variable arity if and only if the method's variable arity modifier bit (0x0080) is set. If the returned method handle is invoked, the method's class will be initialized, if it has not already been initialized. Example:import static java.lang.invoke.MethodHandles.*;import static java.lang.invoke.MethodType.*;...MethodHandle MH_asList = publicLookup().findStatic(Arrays.class, ""asList"", methodType(List.class, Object[].class));assertEquals(""[x, y]"", MH_asList.invoke(""x"", ""y"").toString());",";java.lang.invoke.MethodHandles.Lookup.findStatic(Class&lt;?&gt;,String,MethodType)",;1
findStaticGetter,1,1,"Produces a method handle giving read access to a static field. The type of the method handle will have a return type of the field's value type. The method handle will take no arguments. Access checking is performed immediately on behalf of the lookup class. If the returned method handle is invoked, the field's class will be initialized, if it has not already been initialized.",";java.lang.invoke.MethodHandles.Lookup.findStaticGetter(Class&lt;?&gt;,String,Class&lt;?&gt;)",;1
findStaticSetter,1,1,"Produces a method handle giving write access to a static field. The type of the method handle will have a void return type. The method handle will take a single argument, of the field's value type, the value to be stored. Access checking is performed immediately on behalf of the lookup class. If the returned method handle is invoked, the field's class will be initialized, if it has not already been initialized.",";java.lang.invoke.MethodHandles.Lookup.findStaticSetter(Class&lt;?&gt;,String,Class&lt;?&gt;)",;1
findSystemClass,1,1,"Finds a class with the specified binary name, loading it if necessary. This method loads the class through the system class loader (see getSystemClassLoader()). The Class object returned might have more than one ClassLoader associated with it. Subclasses of ClassLoader need not usually invoke this method, because most class loaders need to override just findClass(String).",;java.lang.ClassLoader.findSystemClass(String),;1
findVirtual,1,1,"Produces a method handle for a virtual method. The type of the method handle will be that of the method, with the receiver type (usually refc) prepended. The method and all its argument types must be accessible to the lookup object. When called, the handle will treat the first argument as a receiver and dispatch on the receiver's type to determine which method implementation to enter. (The dispatching action is identical with that performed by an invokevirtual or invokeinterface instruction.) The first argument will be of type refc if the lookup class has full privileges to access the member. Otherwise the member must be protected and the first argument will be restricted in type to the lookup class. The returned method handle will have variable arity if and only if the method's variable arity modifier bit (0x0080) is set. Because of the general equivalence between invokevirtual instructions and method handles produced by findVirtual, if the class is MethodHandle and the name string is invokeExact or invoke, the resulting method handle is equivalent to one produced by MethodHandles.exactInvoker or MethodHandles.invoker with the same type argument. Example:import static java.lang.invoke.MethodHandles.*;import static java.lang.invoke.MethodType.*;...MethodHandle MH_concat = publicLookup().findVirtual(String.class, ""concat"", methodType(String.class, String.class));MethodHandle MH_hashCode = publicLookup().findVirtual(Object.class, ""hashCode"", methodType(int.class));MethodHandle MH_hashCode_String = publicLookup().findVirtual(String.class, ""hashCode"", methodType(int.class));assertEquals(""xy"", (String) MH_concat.invokeExact(""x"", ""y""));assertEquals(""xy"".hashCode(), (int) MH_hashCode.invokeExact((Object)""xy""));assertEquals(""xy"".hashCode(), (int) MH_hashCode_String.invokeExact(""xy""));// interface method:MethodHandle MH_subSequence = publicLookup().findVirtual(CharSequence.class, ""subSequence"", methodType(CharSequence.class, int.class, int.class));assertEquals(""def"", MH_subSequence.invoke(""abcdefghi"", 3, 6).toString());// constructor ""internal method"" must be accessed differently:MethodType MT_newString = methodType(void.class); //()V for new String()try { assertEquals(""impossible"", lookup() .findVirtual(String.class, ""&lt;init&gt;"", MT_newString)); } catch (NoSuchMethodException ex) { } // OKMethodHandle MH_newString = publicLookup() .findConstructor(String.class, MT_newString);assertEquals("""", (String) MH_newString.invokeExact());",";java.lang.invoke.MethodHandles.Lookup.findVirtual(Class&lt;?&gt;,String,MethodType)",;1
finishConnect,1,1,"Finishes the process of connecting a socket channel. A non-blocking connection operation is initiated by placing a socket channel in non-blocking mode and then invoking its connect method. Once the connection is established, or the attempt has failed, the socket channel will become connectable and this method may be invoked to complete the connection sequence. If the connection operation failed then invoking this method will cause an appropriate IOException to be thrown. If this channel is already connected then this method will not block and will immediately return true. If this channel is in non-blocking mode then this method will return false if the connection process is not yet complete. If this channel is in blocking mode then this method will block until the connection either completes or fails, and will always either return true or throw a checked exception describing the failure. This method may be invoked at any time. If a read or write operation upon this channel is invoked while an invocation of this method is in progress then that operation will first block until this invocation is complete. If a connection attempt fails, that is, if an invocation of this method throws a checked exception, then the channel will be closed.",;java.nio.channels.SocketChannel.finishConnect(),;1
fireActionEvent,1,1,Notifies all listeners that have registered interest for notification on this event type.,;javax.swing.JComboBox.fireActionEvent(),;1
fireAdjustmentValueChanged,1,1,Notify listeners that the scrollbar's model has changed.,";javax.swing.JScrollBar.fireAdjustmentValueChanged(int,int,int)",;1
fireCaretUpdate,1,1,Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method. The listener list is processed in a last-to-first manner.,;javax.swing.text.JTextComponent.fireCaretUpdate(CaretEvent),;1
fireChildrenAdded,1,1,Fire a BeanContextshipEvent on the BeanContextMembershipListener interface,;java.beans.beancontext.BeanContextSupport.fireChildrenAdded(BeanContextMembershipEvent),;1
fireChildrenRemoved,1,1,Fire a BeanContextshipEvent on the BeanContextMembershipListener interface,;java.beans.beancontext.BeanContextSupport.fireChildrenRemoved(BeanContextMembershipEvent),;1
fireColumnAdded,1,1,Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method.,;javax.swing.table.DefaultTableColumnModel.fireColumnAdded(TableColumnModelEvent),;1
fireColumnMarginChanged,1,1,Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method.,;javax.swing.table.DefaultTableColumnModel.fireColumnMarginChanged(),;1
fireColumnMoved,1,1,Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method.,;javax.swing.table.DefaultTableColumnModel.fireColumnMoved(TableColumnModelEvent),;1
fireColumnRemoved,1,1,Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method.,;javax.swing.table.DefaultTableColumnModel.fireColumnRemoved(TableColumnModelEvent),;1
fireColumnSelectionChanged,1,1,Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method.,;javax.swing.table.DefaultTableColumnModel.fireColumnSelectionChanged(ListSelectionEvent),;1
fireContentsChanged,1,1,"AbstractListModel subclasses must call this method after one or more elements of the list change. The changed elements are specified by the closed interval index0, index1 -- the endpoints are included. Note that index0 need not be less than or equal to index1.",";javax.swing.AbstractListModel.fireContentsChanged(Object,int,int)",;1
fireDragGestureRecognized,1,1,Notify the DragGestureListener that a Drag and Drop initiating gesture has occurred. Then reset the state of the Recognizer.,";java.awt.dnd.DragGestureRecognizer.fireDragGestureRecognized(int,Point)",;1
fireEditingCanceled,1,1,Notifies all listeners that have registered interest for notification on this event type. The event instance is created lazily.,;javax.swing.AbstractCellEditor.fireEditingCanceled(),;1
fireEditingStopped,1,1,Notifies all listeners that have registered interest for notification on this event type. The event instance is created lazily.,;javax.swing.AbstractCellEditor.fireEditingStopped(),;1
fireHyperlinkUpdate,1,1,Notifies all listeners that have registered interest for notification on this event type. This is normally called by the currently installed EditorKit if a content type that supports hyperlinks is currently active and there was activity with a link. The listener list is processed last to first.,;javax.swing.JEditorPane.fireHyperlinkUpdate(HyperlinkEvent),;1
fireInsertUpdate,1,1,Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method.,;javax.swing.text.AbstractDocument.fireInsertUpdate(DocumentEvent),;1
fireInternalFrameEvent,1,1,Fires an internal frame event.,;javax.swing.JInternalFrame.fireInternalFrameEvent(int),;1
fireIntervalAdded,1,1,"AbstractListModel subclasses must call this method after one or more elements are added to the model. The new elements are specified by a closed interval index0, index1 -- the enpoints are included. Note that index0 need not be less than or equal to index1.",";javax.swing.AbstractListModel.fireIntervalAdded(Object,int,int)",;1
fireIntervalRemoved,1,1,AbstractListModel subclasses must call this method after one or more elements are removed from the model. index0 and index1 are the end points of the interval that's been removed. Note that index0 need not be less than or equal to index1.,";javax.swing.AbstractListModel.fireIntervalRemoved(Object,int,int)",;1
fireMenuCanceled,1,1,Notifies all listeners that have registered interest for notification on this event type. The event instance is created lazily.,;javax.swing.JMenu.fireMenuCanceled(),;1
fireMenuDeselected,1,1,Notifies all listeners that have registered interest for notification on this event type. The event instance is created lazily.,;javax.swing.JMenu.fireMenuDeselected(),;1
fireMenuDragMouseDragged,1,1,Notifies all listeners that have registered interest for notification on this event type.,;javax.swing.JMenuItem.fireMenuDragMouseDragged(MenuDragMouseEvent),;1
fireMenuDragMouseEntered,1,1,Notifies all listeners that have registered interest for notification on this event type.,;javax.swing.JMenuItem.fireMenuDragMouseEntered(MenuDragMouseEvent),;1
fireMenuDragMouseExited,1,1,Notifies all listeners that have registered interest for notification on this event type.,;javax.swing.JMenuItem.fireMenuDragMouseExited(MenuDragMouseEvent),;1
fireMenuDragMouseReleased,1,1,Notifies all listeners that have registered interest for notification on this event type.,;javax.swing.JMenuItem.fireMenuDragMouseReleased(MenuDragMouseEvent),;1
fireMenuKeyPressed,1,1,Notifies all listeners that have registered interest for notification on this event type.,;javax.swing.JMenuItem.fireMenuKeyPressed(MenuKeyEvent),;1
fireMenuKeyReleased,1,1,Notifies all listeners that have registered interest for notification on this event type.,;javax.swing.JMenuItem.fireMenuKeyReleased(MenuKeyEvent),;1
fireMenuKeyTyped,1,1,Notifies all listeners that have registered interest for notification on this event type.,;javax.swing.JMenuItem.fireMenuKeyTyped(MenuKeyEvent),;1
fireMenuSelected,1,1,Notifies all listeners that have registered interest for notification on this event type. The event instance is created lazily.,;javax.swing.JMenu.fireMenuSelected(),;1
fireRemoveUpdate,1,1,Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method.,;javax.swing.text.AbstractDocument.fireRemoveUpdate(DocumentEvent),;1
fireRowSorterChanged,1,1,Notifies listener that the mapping has changed.,;javax.swing.RowSorter.fireRowSorterChanged(int[]),;1
fireSelectionValueChanged,1,1,"Notifies ListSelectionListeners added directly to the list of selection changes made to the selection model. JList listens for changes made to the selection in the selection model, and forwards notification to listeners added to the list directly, by calling this method. This method constructs a ListSelectionEvent with this list as the source, and the specified arguments, and sends it to the registered ListSelectionListeners.",";javax.swing.JList.fireSelectionValueChanged(int,int,boolean)",;1
fireSortOrderChanged,1,1,Notifies listener that the sort order has changed.,;javax.swing.RowSorter.fireSortOrderChanged(),;1
fireTableCellUpdated,1,1,"Notifies all listeners that the value of the cell at [row, column] has been updated.",";javax.swing.table.AbstractTableModel.fireTableCellUpdated(int,int)",;1
fireTableChanged,1,1,Forwards the given notification event to all TableModelListeners that registered themselves as listeners for this table model.,;javax.swing.table.AbstractTableModel.fireTableChanged(TableModelEvent),;1
fireTableDataChanged,1,1,Notifies all listeners that all cell values in the table's rows may have changed. The number of rows may also have changed and the JTable should redraw the table from scratch. The structure of the table (as in the order of the columns) is assumed to be the same.,;javax.swing.table.AbstractTableModel.fireTableDataChanged(),;1
fireTableRowsDeleted,1,1,"Notifies all listeners that rows in the range [firstRow, lastRow], inclusive, have been deleted.",";javax.swing.table.AbstractTableModel.fireTableRowsDeleted(int,int)",;1
fireTableRowsInserted,1,1,"Notifies all listeners that rows in the range [firstRow, lastRow], inclusive, have been inserted.",";javax.swing.table.AbstractTableModel.fireTableRowsInserted(int,int)",;1
fireTableRowsUpdated,1,1,"Notifies all listeners that rows in the range [firstRow, lastRow], inclusive, have been updated.",";javax.swing.table.AbstractTableModel.fireTableRowsUpdated(int,int)",;1
fireTableStructureChanged,1,1,"Notifies all listeners that the table's structure has changed. The number of columns in the table, and the names and types of the new columns may be different from the previous state. If the JTable receives this event and its autoCreateColumnsFromModel flag is set it discards any table columns that it had and reallocates default columns in the order they appear in the model. This is the same as calling setModel(TableModel) on the JTable.",;javax.swing.table.AbstractTableModel.fireTableStructureChanged(),;1
fireTreeCollapsed,1,1,Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the path parameter.,;javax.swing.JTree.fireTreeCollapsed(TreePath),;1
fireTreeExpanded,1,1,Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the path parameter.,;javax.swing.JTree.fireTreeExpanded(TreePath),;1
fireTreeNodesChanged,1,1,Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method.,";javax.swing.tree.DefaultTreeModel.fireTreeNodesChanged(Object,Object[],int[],Object[])",;1
fireTreeNodesInserted,1,1,Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method.,";javax.swing.tree.DefaultTreeModel.fireTreeNodesInserted(Object,Object[],int[],Object[])",;1
fireTreeNodesRemoved,1,1,Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method.,";javax.swing.tree.DefaultTreeModel.fireTreeNodesRemoved(Object,Object[],int[],Object[])",;1
fireTreeStructureChanged,1,1,Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method.,";javax.swing.tree.DefaultTreeModel.fireTreeStructureChanged(Object,Object[],int[],Object[])",;1
fireTreeWillCollapse,1,1,Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the path parameter.,;javax.swing.JTree.fireTreeWillCollapse(TreePath),;1
fireTreeWillExpand,1,1,Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the path parameter.,;javax.swing.JTree.fireTreeWillExpand(TreePath),;1
firstComplete,1,1,"If this task's pending count is zero, returns this task; otherwise decrements its pending count and returns null. This method is designed to be used with nextComplete() in completion traversal loops.",;java.util.concurrent.CountedCompleter.firstComplete(),;1
firstDayOfMonth,1,1,"Returns the ""first day of month"" adjuster, which returns a new date set to the first day of the current month. The ISO calendar system behaves as follows: The input 2011-01-15 will return 2011-01-01. The input 2011-02-15 will return 2011-02-01. The behavior is suitable for use with most calendar systems. It is equivalent to: temporal.with(DAY_OF_MONTH, 1);",;java.time.temporal.TemporalAdjusters.firstDayOfMonth(),;1
firstDayOfNextMonth,1,1,"Returns the ""first day of next month"" adjuster, which returns a new date set to the first day of the next month. The ISO calendar system behaves as follows: The input 2011-01-15 will return 2011-02-01. The input 2011-02-15 will return 2011-03-01. The behavior is suitable for use with most calendar systems. It is equivalent to: temporal.with(DAY_OF_MONTH, 1).plus(1, MONTHS);",;java.time.temporal.TemporalAdjusters.firstDayOfNextMonth(),;1
firstDayOfNextYear,1,1,"Returns the ""first day of next year"" adjuster, which returns a new date set to the first day of the next year. The ISO calendar system behaves as follows: The input 2011-01-15 will return 2012-01-01. The behavior is suitable for use with most calendar systems. It is equivalent to: temporal.with(DAY_OF_YEAR, 1).plus(1, YEARS);",;java.time.temporal.TemporalAdjusters.firstDayOfNextYear(),;1
firstDayOfYear,1,1,"Returns the ""first day of year"" adjuster, which returns a new date set to the first day of the current year. The ISO calendar system behaves as follows: The input 2011-01-15 will return 2011-01-01. The input 2011-02-15 will return 2011-01-01. The behavior is suitable for use with most calendar systems. It is equivalent to: temporal.with(DAY_OF_YEAR, 1);",;java.time.temporal.TemporalAdjusters.firstDayOfYear(),;1
firstInMonth,1,1,"Returns the first in month adjuster, which returns a new date in the same month with the first matching day-of-week. This is used for expressions like 'first Tuesday in March'. The ISO calendar system behaves as follows: The input 2011-12-15 for (MONDAY) will return 2011-12-05. The input 2011-12-15 for (FRIDAY) will return 2011-12-02. The behavior is suitable for use with most calendar systems. It uses the DAY_OF_WEEK and DAY_OF_MONTH fields and the DAYS unit, and assumes a seven day week.",;java.time.temporal.TemporalAdjusters.firstInMonth(DayOfWeek),;1
fixed,1,1,"Obtains a clock that always returns the same instant. This clock simply returns the specified instant. As such, it is not a clock in the conventional sense. The main use case for this is in testing, where the fixed clock ensures tests are not dependent on the current clock. The returned implementation is immutable, thread-safe and Serializable.",";java.time.Clock.fixed(Instant,ZoneId)",;1
fixed_digits,1,1,"Returns the number of digits in the fixed type described by this TypeCode object. For example, the typecode for the number 3000.275d could be fixed&lt;7,3&gt;, where 7 is the precision and 3 is the scale.",;org.omg.CORBA.TypeCode.fixed_digits(),;1
fixed_scale,1,1,"Returns the scale of the fixed type described by this TypeCode object. A positive number indicates the number of digits to the right of the decimal point. For example, the number 3000d could have the typecode fixed&lt;4,0&gt;, where the first number is the precision and the second number is the scale. A negative number is also possible and adds zeroes to the left of the decimal point. In this case, fixed&lt;1,-3&gt;, could be the typecode for the number 3000d.",;org.omg.CORBA.TypeCode.fixed_scale(),;1
flashColor,1,1,Returns the Color used to flash drawing operations.,;javax.swing.DebugGraphics.flashColor(),;1
flashCount,1,1,Returns the number of times that drawing operations will flash.,;javax.swing.DebugGraphics.flashCount(),;1
flashTime,1,1,Returns the time delay of drawing operation flashing.,;javax.swing.DebugGraphics.flashTime(),;1
flatMap,1,1,"If a value is present, apply the provided Optional-bearing mapping function to it, return that result, otherwise return an empty Optional. This method is similar to map(Function), but the provided mapper is one whose result is already an Optional, and if invoked, flatMap does not wrap it with an additional Optional.",";java.util.Optional.flatMap(Function&lt;?,Optional&lt;U&gt;&gt;)",;1
flipBit,1,1,Returns a BigInteger whose value is equivalent to this BigInteger with the designated bit flipped. (Computes (this ^ (1&lt;&lt;n)).),;java.math.BigInteger.flipBit(int),;1
floatToIntBits,1,1,"Returns a representation of the specified floating-point value according to the IEEE 754 floating-point ""single format"" bit layout. Bit 31 (the bit that is selected by the mask 0x80000000) represents the sign of the floating-point number. Bits 30-23 (the bits that are selected by the mask 0x7f800000) represent the exponent. Bits 22-0 (the bits that are selected by the mask 0x007fffff) represent the significand (sometimes called the mantissa) of the floating-point number. If the argument is positive infinity, the result is 0x7f800000. If the argument is negative infinity, the result is 0xff800000. If the argument is NaN, the result is 0x7fc00000. In all cases, the result is an integer that, when given to the intBitsToFloat(int) method, will produce a floating-point value the same as the argument to floatToIntBits (except all NaN values are collapsed to a single ""canonical"" NaN value).",;java.lang.Float.floatToIntBits(float),;1
floatToRawIntBits,1,1,"Returns a representation of the specified floating-point value according to the IEEE 754 floating-point ""single format"" bit layout, preserving Not-a-Number (NaN) values. Bit 31 (the bit that is selected by the mask 0x80000000) represents the sign of the floating-point number. Bits 30-23 (the bits that are selected by the mask 0x7f800000) represent the exponent. Bits 22-0 (the bits that are selected by the mask 0x007fffff) represent the significand (sometimes called the mantissa) of the floating-point number. If the argument is positive infinity, the result is 0x7f800000. If the argument is negative infinity, the result is 0xff800000. If the argument is NaN, the result is the integer representing the actual NaN value. Unlike the floatToIntBits method, floatToRawIntBits does not collapse all the bit patterns encoding a NaN to a single ""canonical"" NaN value. In all cases, the result is an integer that, when given to the intBitsToFloat(int) method, will produce a floating-point value the same as the argument to floatToRawIntBits.",;java.lang.Float.floatToRawIntBits(float),;1
flushBits,1,1,"If the bit offset is non-zero, forces the remaining bits in the current byte to 0 and advances the stream position by one. This method should be called by subclasses at the beginning of the write(int) and write(byte[], int, int) methods.",;javax.imageio.stream.ImageOutputStreamImpl.flushBits(),;1
flushCaches,1,1,Flush all of the Introspector's internal caches. This method is not normally required. It is normally only needed by advanced tools that update existing "Class" objects in-place and need to make the Introspector re-analyze existing Class objects.,;java.beans.Introspector.flushCaches(),;1
flushFromCaches,1,1,"Flush the Introspector's internal cached information for a given class. This method is not normally required. It is normally only needed by advanced tools that update existing ""Class"" objects in-place and need to make the Introspector re-analyze an existing Class object. Note that only the direct state associated with the target Class object is flushed. We do not flush state for other Class objects with the same name, nor do we flush state for any related Class objects (such as subclasses), even though their state may include information indirectly obtained from the target Class object.",;java.beans.Introspector.flushFromCaches(Class&lt;?&gt;),;1
flushRequirementChanges,1,1,Publish the changes in preferences upward to the parent view. This is normally called by the layout thread.,;javax.swing.text.AsyncBoxView.flushRequirementChanges(),;1
flushSpi,1,1,"This method is invoked with this node locked. The contract of this method is to force any cached changes in the contents of this preference node to the backing store, guaranteeing their persistence. (It is perfectly possible that this node does not exist on the backing store, either because it has been deleted by another VM, or because it has not yet been created.) Note that this method should not flush the preferences in any subnodes of this node. If the backing store naturally flushes an entire subtree at once, the implementer is encouraged to override flush(), rather than merely overriding this method. If this node throws a BackingStoreException, the exception will propagate out beyond the enclosing flush() invocation.",;java.util.prefs.AbstractPreferences.flushSpi(),;1
foldArguments,1,1,"Adapts a target method handle by pre-processing some of its arguments, and then calling the target with the result of the pre-processing, inserted into the original sequence of arguments. The pre-processing is performed by combiner, a second method handle. Of the arguments passed to the adapter, the first N arguments are copied to the combiner, which is then called. (Here, N is defined as the parameter count of the combiner.) After this, control passes to the target, with any result from the combiner inserted before the original N incoming arguments. If the combiner returns a value, the first parameter type of the target must be identical with the return type of the combiner, and the next N parameter types of the target must exactly match the parameters of the combiner. If the combiner has a void return, no result will be inserted, and the first N parameter types of the target must exactly match the parameters of the combiner. The resulting adapter is the same type as the target, except that the first parameter type is dropped, if it corresponds to the result of the combiner. (Note that dropArguments can be used to remove any arguments that either the combiner or the target does not wish to receive. If some of the incoming arguments are destined only for the combiner, consider using asCollector instead, since those arguments will not need to be live on the stack on entry to the target.) Example:import static java.lang.invoke.MethodHandles.*;import static java.lang.invoke.MethodType.*;...MethodHandle trace = publicLookup().findVirtual(java.io.PrintStream.class, ""println"", methodType(void.class, String.class)) .bindTo(System.out);MethodHandle cat = lookup().findVirtual(String.class, ""concat"", methodType(String.class, String.class));assertEquals(""boojum"", (String) cat.invokeExact(""boo"", ""jum""));MethodHandle catTrace = foldArguments(cat, trace);// also prints ""boo"":assertEquals(""boojum"", (String) catTrace.invokeExact(""boo"", ""jum"")); Here is pseudocode for the resulting adapter: // there are N arguments in A... T target(V, A[N]..., B...); V combiner(A...); T adapter(A... a, B... b) { V v = combiner(a...); return target(v, a..., b...); } // and if the combiner has a void return: T target2(A[N]..., B...); void combiner2(A...); T adapter2(A... a, B... b) { combiner2(a...); return target2(a..., b...); }",";java.lang.invoke.MethodHandles.foldArguments(MethodHandle,MethodHandle)",;1
following,1,1,"Returns the first boundary following the specified character offset. If the specified offset equals to the last text boundary, it returns BreakIterator.DONE and the iterator's current position is unchanged. Otherwise, the iterator's current position is set to the returned boundary. The value returned is always greater than the offset or the value BreakIterator.DONE.",;java.text.BreakIterator.following(int),;1
forceTermination,1,1,"Forces this phaser to enter termination state. Counts of registered parties are unaffected. If this phaser is a member of a tiered set of phasers, then all of the phasers in the set are terminated. If this phaser is already terminated, this method has no effect. This method may be useful for coordinating recovery after one or more tasks encounter unexpected exceptions.",;java.util.concurrent.Phaser.forceTermination(),;1
forClass,1,1,Return the class in the local VM that this version is mapped to. Null is returned if there is no corresponding local class.,;java.io.ObjectStreamClass.forClass(),;1
forDigit,1,1,"Determines the character representation for a specific digit in the specified radix. If the value of radix is not a valid radix, or the value of digit is not a valid digit in the specified radix, the null character ('\u0000') is returned. The radix argument is valid if it is greater than or equal to MIN_RADIX and less than or equal to MAX_RADIX. The digit argument is valid if 0 &lt;= digit &lt; radix. If the digit is less than 10, then '0' + digit is returned. Otherwise, the value 'a' + digit - 10 is returned.",";java.lang.Character.forDigit(int,int)",;1
fork,1,1,"Arranges to asynchronously execute this task in the pool the current task is running in, if applicable, or using the ForkJoinPool.commonPool() if not inForkJoinPool(). While it is not necessarily enforced, it is a usage error to fork a task more than once unless it has completed and been reinitialized. Subsequent modifications to the state of this task or any data it operates on are not necessarily consistently observable by any thread other than the one executing it unless preceded by a call to join() or related methods, or a call to isDone() returning true.",;java.util.concurrent.ForkJoinTask.fork(),;1
formatTo,1,1,"Formats a date-time object to an Appendable using this formatter. This outputs the formatted date-time to the specified destination. Appendable is a general purpose interface that is implemented by all key character output classes including StringBuffer, StringBuilder, PrintStream and Writer. Although Appendable methods throw an IOException, this method does not. Instead, any IOException is wrapped in a runtime exception.",";java.time.format.DateTimeFormatter.formatTo(TemporalAccessor,Appendable)",;1
forwardUpdateToView,1,1,"Forwards the DocumentEvent to the give child view. This simply messages the view with a call to insertUpdate, removeUpdate, or changedUpdate depending upon the type of the event. This is called by forwardUpdate to forward the event to children that need it.",";javax.swing.text.View.forwardUpdateToView(View,DocumentEvent,Shape,ViewFactory)",;1
frameInit,1,1,Called by the constructors to init the JFrame properly.,;javax.swing.JFrame.frameInit(),;1
freeMemory,1,1,Returns the amount of free memory in the Java Virtual Machine. Calling the gc method may result in increasing the value returned by freeMemory.,;java.lang.Runtime.freeMemory(),;1
frequency,1,1,"Returns the number of elements in the specified collection equal to the specified object. More formally, returns the number of elements e in the collection such that (o == null ? e == null : o.equals(e)).",";java.util.Collections.frequency(Collection&lt;?&gt;,Object)",;1
fromMethodDescriptorString,1,1,"Finds or creates an instance of a method type, given the spelling of its bytecode descriptor. Convenience method for methodType. Any class or interface name embedded in the descriptor string will be resolved by calling ClassLoader.loadClass(java.lang.String) on the given loader (or if it is null, on the system class loader). Note that it is possible to encounter method types which cannot be constructed by this method, because their component types are not all reachable from a common class loader. This method is included for the benefit of applications that must generate bytecodes that process method handles and invokedynamic.",";java.lang.invoke.MethodType.fromMethodDescriptorString(String,ClassLoader)",;1
fromMillis,1,1,Returns a FileTime representing the given value in milliseconds.,;java.nio.file.attribute.FileTime.fromMillis(long),;1
gcd,1,1,Returns a BigInteger whose value is the greatest common divisor of abs(this) and abs(val). Returns 0 if this == 0 &amp;&amp; val == 0.,;java.math.BigInteger.gcd(BigInteger),;1
generateCertificate,1,1,"Generates a certificate object and initializes it with the data read from the input stream inStream. In order to take advantage of the specialized certificate format supported by this certificate factory, the returned certificate object can be typecast to the corresponding certificate class. For example, if this certificate factory implements X.509 certificates, the returned certificate object can be typecast to the X509Certificate class. In the case of a certificate factory for X.509 certificates, the certificate provided in inStream must be DER-encoded and may be supplied in binary or printable (Base64) encoding. If the certificate is provided in Base64 encoding, it must be bounded at the beginning by -----BEGIN CERTIFICATE-----, and must be bounded at the end by -----END CERTIFICATE-----. Note that if the given input stream does not support mark and reset, this method will consume the entire input stream. Otherwise, each call to this method consumes one certificate and the read position of the input stream is positioned to the next available byte after the inherent end-of-certificate marker. If the data in the input stream does not contain an inherent end-of-certificate marker (other than EOF) and there is trailing data after the certificate is parsed, a CertificateException is thrown.",;java.security.cert.CertificateFactory.generateCertificate(InputStream),;1
generateCertificates,1,1,"Returns a (possibly empty) collection view of the certificates read from the given input stream inStream. In order to take advantage of the specialized certificate format supported by this certificate factory, each element in the returned collection view can be typecast to the corresponding certificate class. For example, if this certificate factory implements X.509 certificates, the elements in the returned collection can be typecast to the X509Certificate class. In the case of a certificate factory for X.509 certificates, inStream may contain a sequence of DER-encoded certificates in the formats described for generateCertificate. In addition, inStream may contain a PKCS#7 certificate chain. This is a PKCS#7 SignedData object, with the only significant field being certificates. In particular, the signature and the contents are ignored. This format allows multiple certificates to be downloaded at once. If no certificates are present, an empty collection is returned. Note that if the given input stream does not support mark and reset, this method will consume the entire input stream.",;java.security.cert.CertificateFactory.generateCertificates(InputStream),;1
generateCRL,1,1,"Generates a certificate revocation list (CRL) object and initializes it with the data read from the input stream inStream. In order to take advantage of the specialized CRL format supported by this certificate factory, the returned CRL object can be typecast to the corresponding CRL class. For example, if this certificate factory implements X.509 CRLs, the returned CRL object can be typecast to the X509CRL class. Note that if the given input stream does not support mark and reset, this method will consume the entire input stream. Otherwise, each call to this method consumes one CRL and the read position of the input stream is positioned to the next available byte after the inherent end-of-CRL marker. If the data in the input stream does not contain an inherent end-of-CRL marker (other than EOF) and there is trailing data after the CRL is parsed, a CRLException is thrown.",;java.security.cert.CertificateFactory.generateCRL(InputStream),;1
generateCRLs,1,1,"Returns a (possibly empty) collection view of the CRLs read from the given input stream inStream. In order to take advantage of the specialized CRL format supported by this certificate factory, each element in the returned collection view can be typecast to the corresponding CRL class. For example, if this certificate factory implements X.509 CRLs, the elements in the returned collection can be typecast to the X509CRL class. In the case of a certificate factory for X.509 CRLs, inStream may contain a sequence of DER-encoded CRLs. In addition, inStream may contain a PKCS#7 CRL set. This is a PKCS#7 SignedData object, with the only significant field being crls. In particular, the signature and the contents are ignored. This format allows multiple CRLs to be downloaded at once. If no CRLs are present, an empty collection is returned. Note that if the given input stream does not support mark and reset, this method will consume the entire input stream.",;java.security.cert.CertificateFactory.generateCRLs(InputStream),;1
generateKey,1,1,Generates a secret key.,;javax.crypto.KeyGenerator.generateKey(),;1
generateParameters,1,1,Generates the parameters.,;java.security.AlgorithmParameterGenerator.generateParameters(),;1
generatePrivate,1,1,Generates a private key object from the provided key specification (key material).,;java.security.KeyFactory.generatePrivate(KeySpec),;1
generatePublic,1,1,Generates a public key object from the provided key specification (key material).,;java.security.KeyFactory.generatePublic(KeySpec),;1
generateSchema,1,1,Generates the schema documents for this context.,;javax.xml.bind.JAXBContext.generateSchema(SchemaOutputResolver),;1
generateSeed,1,1,"Returns the given number of seed bytes, computed using the seed generation algorithm that this class uses to seed itself. This call may be used to seed other random number generators.",;java.security.SecureRandom.generateSeed(int),;1
generic,1,1,"Converts all types, both reference and primitive, to Object. Convenience method for genericMethodType. The expression type.wrap().erase() produces the same value as type.generic().",;java.lang.invoke.MethodType.generic(),;1
genKeyPair,1,1,"Generates a key pair. If this KeyPairGenerator has not been initialized explicitly, provider-specific defaults will be used for the size and other (algorithm-specific) values of the generated keys. This will generate a new key pair every time it is called. This method is functionally equivalent to generateKeyPair.",;java.security.KeyPairGenerator.genKeyPair(),;1
geq,1,1,Returns a query expression that represents a "greater than or equal to" constraint on two values.,";javax.management.Query.geq(ValueExp,ValueExp)",;1
get_as_string,1,1,Returns the value of the DynEnum as an IDL identifier.,;org.omg.DynamicAny._DynEnumStub.get_as_string(),;1
get_as_ulong,1,1,"Returns the value of the DynEnum as the enumerated value's ordinal value. Enumerators have ordinal values 0 to n-1, as they appear from left to right in the corresponding IDL definition.",;org.omg.DynamicAny._DynEnumStub.get_as_ulong(),;1
get_codebase,1,1,Returns the codebase for object reference provided.,;org.omg.CORBA_2_3.portable.Delegate.get_codebase(Object),;1
get_compact_typecode,1,1,"Strips out all optional name and member name fields, but leaves all alias typecodes intact.",;org.omg.CORBA.TypeCode.get_compact_typecode(),;1
get_current,1,1,Deprecated.use resolve_initial_references.,;org.omg.CORBA.ORB.get_current(),;1
get_default_context,1,1,Gets the default Context object.,;org.omg.CORBA.ORB.get_default_context(),;1
get_discriminator,1,1,Returns the current discriminator value.,;org.omg.DynamicAny._DynUnionStub.get_discriminator(),;1
get_domain_managers,1,1,"Retrieves the DomainManagers of this object. This allows administration services (and applications) to retrieve the domain managers, and hence the security and other policies applicable to individual objects that are members of the domain.",;org.omg.CORBA.portable.Delegate.get_domain_managers(Object),;1
get_interface_def,1,1,Return an InterfaceDef for the object reference provided.,;org.omg.CORBA.portable.Delegate.get_interface_def(Object),;1
get_length,1,1,Returns the current length of the sequence.,;org.omg.DynamicAny._DynSequenceStub.get_length(),;1
get_next_response,1,1,Gets the next Request instance for which a response has been received.,;org.omg.CORBA.ORB.get_next_response(),;1
get_policy,1,1,Returns the Policy object of the specified type which applies to this object.,";org.omg.CORBA.portable.Delegate.get_policy(Object,int)",;1
get_primitive_tc,1,1,Retrieves the TypeCode object that represents the given primitive IDL type.,;org.omg.CORBA.ORB.get_primitive_tc(TCKind),;1
get_response,1,1,Allows the user to access the response for the invocation triggered earlier with the send_deferred method.,;org.omg.CORBA.Request.get_response(),;1
get_service_information,1,1,"Used to obtain information about CORBA facilities and services that are supported by this ORB. The service type for which information is being requested is passed in as the in parameter service_type, the values defined by constants in the CORBA module. If service information is available for that type, that is returned in the out parameter service_info, and the operation returns the value true. If no information for the requested services type is available, the operation returns false (i.e., the service is not supported by this ORB).",";org.omg.CORBA.ORB.get_service_information(short,ServiceInformationHolder)",;1
get_value,1,1,Returns the value of a DynFixed.,;org.omg.DynamicAny._DynFixedStub.get_value(),;1
get_values,1,1,"Retrieves the NamedValue objects whose name field matches the given name or name pattern. This method allows for wildcard searches, which means that there can be multiple matches and therefore multiple values returned. If the property is not found at the indicated level, the search continues up the context object tree until a match is found or all Context objects in the chain have been exhausted. If no match is found, an error is returned and no property list is returned.",";org.omg.CORBA.Context.get_values(String,int,String)",;1
get2DigitYearStart,1,1,Returns the beginning date of the 100-year period 2-digit years are interpreted as being within.,;java.text.SimpleDateFormat.get2DigitYearStart(),;1
getA,1,1,Returns the first coefficient a of the elliptic curve.,;java.security.spec.EllipticCurve.getA(),;1
getAbsoluteFile,1,1,Returns the absolute form of this abstract pathname. Equivalent to newFile(this.getAbsolutePath()).,;java.io.File.getAbsoluteFile(),;1
getAbsolutePath,1,1,"Returns the absolute pathname string of this abstract pathname. If this abstract pathname is already absolute, then the pathname string is simply returned as if by the getPath() method. If this abstract pathname is the empty abstract pathname then the pathname string of the current user directory, which is named by the system property user.dir, is returned. Otherwise this pathname is resolved in a system-dependent way. On UNIX systems, a relative pathname is made absolute by resolving it against the current user directory. On Microsoft Windows systems, a relative pathname is made absolute by resolving it against the current directory of the drive named by the pathname, if any; if not, it is resolved against the current user directory.",;java.io.File.getAbsolutePath(),;1
getAccelerationPriority,1,1,Returns the current value of the acceleration priority hint.,;java.awt.Image.getAccelerationPriority(),;1
getAccelerator,1,1,Returns the KeyStroke which serves as an accelerator for the menu item.,;javax.swing.JMenuItem.getAccelerator(),;1
getAcceptorAddress,1,1,Get the acceptor's address for this channel binding.,;org.ietf.jgss.ChannelBinding.getAcceptorAddress(),;1
getAccessibleAction,1,1,Gets the AccessibleAction associated with this object that supports one or more actions.,;javax.accessibility.AccessibleContext.getAccessibleAction(),;1
getAccessibleActionAnchor,1,1,"Returns an object that represents the link anchor, as appropriate for that link. E.g. from HTML: &lt;a href=""http://www.sun.com/access""&gt;Accessibility&lt;/a&gt; this method would return a String containing the text: ""Accessibility"". Similarly, from this HTML: &lt;a HREF=""#top""&gt;&lt;img src=""top-hat.gif"" alt=""top hat""&gt;&lt;/a&gt; this might return the object ImageIcon(""top-hat.gif"", ""top hat"");",;javax.accessibility.AccessibleHyperlink.getAccessibleActionAnchor(int),;1
getAccessibleActionCount,1,1,"Returns the number of accessible actions available in this Link If there are more than one, the first one is NOT considered the ""default"" action of this LINK object (e.g. in an HTML imagemap). In general, links will have only one AccessibleAction in them.",;javax.accessibility.AccessibleHyperlink.getAccessibleActionCount(),;1
getAccessibleActionDescription,1,1,"Returns a String description of this particular link action. This should be a text string associated with anchoring text, this should be the anchor text. E.g. from HTML: &lt;a HREF=""http://www.sun.com/access""&gt;Accessibility&lt;/a&gt; this method would return ""Accessibility"". Similarly, from this HTML: &lt;a HREF=""#top""&gt;&lt;img src=""top-hat.gif"" alt=""top hat""&gt;&lt;/a&gt; this method would return ""top hat""",;javax.accessibility.AccessibleHyperlink.getAccessibleActionDescription(int),;1
getAccessibleActionObject,1,1,"Returns an object that represents the link action, as appropriate for that link. E.g. from HTML: &lt;a HREF=""http://www.sun.com/access""&gt;Accessibility&lt;/a&gt; this method would return a java.net.URL(""http://www.sun.com/access.html"");",;javax.accessibility.AccessibleHyperlink.getAccessibleActionObject(int),;1
getAccessibleAt,1,1,"Returns the Accessible child contained at the local coordinate Point, if one exists. Otherwise returns null.",";javax.swing.SwingUtilities.getAccessibleAt(Component,Point)",;1
getAccessibleComponent,1,1,Gets the AccessibleComponent associated with this object that has a graphical representation.,;javax.accessibility.AccessibleContext.getAccessibleComponent(),;1
getAccessibleDescription,1,1,"Gets the accessibleDescription property of this object. The accessibleDescription property of this object is a short localized phrase describing the purpose of the object. For example, in the case of a 'Cancel' button, the accessibleDescription could be 'Ignore changes and close dialog box.'",;javax.accessibility.AccessibleContext.getAccessibleDescription(),;1
getAccessibleEditableText,1,1,Gets the AccessibleEditableText associated with this object presenting editable text on the display.,;javax.accessibility.AccessibleContext.getAccessibleEditableText(),;1
getAccessibleIcon,1,1,Gets the AccessibleIcons associated with an object that has one or more associated icons,;javax.accessibility.AccessibleContext.getAccessibleIcon(),;1
getAccessibleName,1,1,"Gets the accessibleName property of this object. The accessibleName property of an object is a localized String that designates the purpose of the object. For example, the accessibleName property of a label or button might be the text of the label or button itself. In the case of an object that doesn't display its name, the accessibleName should still be set. For example, in the case of a text field used to enter the name of a city, the accessibleName for the en_US locale could be 'city.'",;javax.accessibility.AccessibleContext.getAccessibleName(),;1
getAccessibleParent,1,1,Gets the Accessible parent of this object.,;javax.accessibility.AccessibleContext.getAccessibleParent(),;1
getAccessibleRelationSet,1,1,Gets the AccessibleRelationSet associated with an object,;javax.accessibility.AccessibleContext.getAccessibleRelationSet(),;1
getAccessibleRole,1,1,"Gets the role of this object. The role of the object is the generic purpose or use of the class of this object. For example, the role of a push button is AccessibleRole.PUSH_BUTTON. The roles in AccessibleRole are provided so component developers can pick from a set of predefined roles. This enables assistive technologies to provide a consistent interface to various tweaked subclasses of components (e.g., use AccessibleRole.PUSH_BUTTON for all components that act like a push button) as well as distinguish between subclasses that behave differently (e.g., AccessibleRole.CHECK_BOX for check boxes and AccessibleRole.RADIO_BUTTON for radio buttons). Note that the AccessibleRole class is also extensible, so custom component developers can define their own AccessibleRole's if the set of predefined roles is inadequate.",;javax.accessibility.AccessibleContext.getAccessibleRole(),;1
getAccessibleSelection,1,1,Gets the AccessibleSelection associated with this object which allows its Accessible children to be selected.,;javax.accessibility.AccessibleContext.getAccessibleSelection(),;1
getAccessibleTable,1,1,Gets the AccessibleTable associated with an object,;javax.accessibility.AccessibleContext.getAccessibleTable(),;1
getAccessibleText,1,1,Gets the AccessibleText associated with this object presenting text on the display.,;javax.accessibility.AccessibleContext.getAccessibleText(),;1
getAccessibleValue,1,1,Gets the AccessibleValue associated with this object that supports a Numerical value.,;javax.accessibility.AccessibleContext.getAccessibleValue(),;1
getAccessory,1,1,Returns the accessory component.,;javax.swing.JFileChooser.getAccessory(),;1
getActionForKeyStroke,1,1,Returns the object that will perform the action registered for a given keystroke.,;javax.swing.JComponent.getActionForKeyStroke(KeyStroke),;1
getActionMap,1,1,"Returns the ActionMap used to determine what Action to fire for particular KeyStroke binding. The returned ActionMap, unless otherwise set, will have the ActionMap from the UI set as the parent.",;javax.swing.JComponent.getActionMap(),;1
getActiveCount,1,1,Returns the approximate number of threads that are actively executing tasks.,;java.util.concurrent.ThreadPoolExecutor.getActiveCount(),;1
getActiveThreadCount,1,1,Returns an estimate of the number of threads that are currently stealing or executing tasks. This method may overestimate the number of active threads.,;java.util.concurrent.ForkJoinPool.getActiveThreadCount(),;1
getActiveWindow,1,1,"Returns the active Window, if the active Window is in the same context as the calling thread. Only a Frame or a Dialog can be the active Window. The native windowing system may denote the active Window or its children with special decorations, such as a highlighted title bar. The active Window is always either the focused Window, or the first Frame or Dialog that is an owner of the focused Window.",;java.awt.KeyboardFocusManager.getActiveWindow(),;1
getAdditionalBeanInfo,1,1,Claim there are no other relevant BeanInfo objects. You may override this if you want to (for example) return a BeanInfo for a base class.,;java.beans.SimpleBeanInfo.getAdditionalBeanInfo(),;1
getAddListenerMethod,1,1,Gets the method used to add event listeners.,;java.beans.EventSetDescriptor.getAddListenerMethod(),;1
getAdjustable,1,1,Returns the Adjustable object where this event originated.,;java.awt.event.AdjustmentEvent.getAdjustable(),;1
getAdvanceBetween,1,1,"Returns the graphical width of a line beginning at start and including characters up to limit. start and limit are absolute indices, not relative to the start of the paragraph.",";java.awt.font.TextMeasurer.getAdvanceBetween(int,int)",;1
getAdvanceX,1,1,Returns the x-component of the advance of the glyph.,;java.awt.font.GlyphMetrics.getAdvanceX(),;1
getAdvanceY,1,1,Returns the y-component of the advance of the glyph.,;java.awt.font.GlyphMetrics.getAdvanceY(),;1
getAffineX,1,1,Returns the affine x-coordinate x. Note: POINT_INFINITY has a null affine x-coordinate.,;java.security.spec.ECPoint.getAffineX(),;1
getAffineY,1,1,Returns the affine y-coordinate y. Note: POINT_INFINITY has a null affine y-coordinate.,;java.security.spec.ECPoint.getAffineY(),;1
getAlgName,1,1,Returns the encryption algorithm. Note: Standard name is returned instead of the specified one in the constructor when such mapping is available. See Appendix A in the Java Cryptography Architecture Reference Guide for information about standard Cipher algorithm names.,;javax.crypto.EncryptedPrivateKeyInfo.getAlgName(),;1
getAlgorithmConstraints,1,1,Returns the cryptographic algorithm constraints.,;javax.net.ssl.SSLParameters.getAlgorithmConstraints(),;1
getAlgorithmProperty,1,1,Deprecated.This method used to return the value of a proprietary property in the master file of the "SUN" Cryptographic Service Provider in order to determine how to parse algorithm-specific parameters. Use the new provider-based and algorithm-independent AlgorithmParameters and KeyFactory engine classes (introduced in the J2SE version 1.2 platform) instead.,";java.security.Security.getAlgorithmProperty(String,String)",;1
getAlgorithms,1,1,"Returns a Set of Strings containing the names of all available algorithms or types for the specified Java cryptographic service (e.g., Signature, MessageDigest, Cipher, Mac, KeyStore). Returns an empty Set if there is no provider that supports the specified service or if serviceName is null. For a complete list of Java cryptographic services, please see the Java Cryptography Architecture API Specification &amp; Reference. Note: the returned set is immutable.",;java.security.Security.getAlgorithms(String),;1
getAlgParameters,1,1,Returns the algorithm parameters used by the encryption algorithm.,;javax.crypto.EncryptedPrivateKeyInfo.getAlgParameters(),;1
getAlias,1,1,Returns the KeyStore alias.,;javax.security.auth.x500.X500PrivateCredential.getAlias(),;1
getAlignedSizeRequirements,1,1,Determines the total space necessary to align a set of components. The needs of each component in the set are represented by an entry in the passed-in SizeRequirements array. The total space required will never be more than Integer.MAX_VALUE.,;javax.swing.SizeRequirements.getAlignedSizeRequirements(SizeRequirements[]),;1
getAlignOnBaseline,1,1,Returns true if components are to be vertically aligned along their baseline. The default is false.,;java.awt.FlowLayout.getAlignOnBaseline(),;1
getAllByName,1,1,"Given the name of a host, returns an array of its IP addresses, based on the configured name service on the system. The host name can either be a machine name, such as ""java.sun.com"", or a textual representation of its IP address. If a literal IP address is supplied, only the validity of the address format is checked. For host specified in literal IPv6 address, either the form defined in RFC 2732 or the literal IPv6 address format defined in RFC 2373 is accepted. A literal IPv6 address may also be qualified by appending a scoped zone identifier or scope_id. The syntax and usage of scope_ids is described here. If the host is null then an InetAddress representing an address of the loopback interface is returned. See RFC3330 section2 and RFC2373 section2.5.3. If there is a security manager and host is not null and host.length() is not equal to zero, the security manager's checkConnect method is called with the hostname and -1 as its arguments to see if the operation is allowed.",;java.net.InetAddress.getAllByName(String),;1
getAllFonts,1,1,"Returns an array containing a one-point size instance of all fonts available in this GraphicsEnvironment. Typical usage would be to allow a user to select a particular font. Then, the application can size the font and set various font attributes by calling the deriveFont method on the chosen instance. This method provides for the application the most precise control over which Font instance is used to render text. If a font in this GraphicsEnvironment has multiple programmable variations, only one instance of that Font is returned in the array, and other variations must be derived by the application. If a font in this environment has multiple programmable variations, such as Multiple-Master fonts, only one instance of that font is returned in the Font array. The other variations must be derived by the application.",;java.awt.GraphicsEnvironment.getAllFonts(),;1
getAllFrames,1,1,Returns all JInternalFrames currently displayed in the desktop. Returns iconified frames as well as expanded frames.,;javax.swing.JDesktopPane.getAllFrames(),;1
getAllFramesInLayer,1,1,Returns all JInternalFrames currently displayed in the specified layer of the desktop. Returns iconified frames as well expanded frames.,;javax.swing.JDesktopPane.getAllFramesInLayer(int),;1
getAllHeaders,1,1,Returns all the MimeHeaders in this MimeHeaders object.,;javax.xml.soap.MimeHeaders.getAllHeaders(),;1
getAllNotificationIDs,1,1,Gets all timer notification identifiers registered into the list of notifications.,;javax.management.timer.Timer.getAllNotificationIDs(),;1
getAllowsChildren,1,1,Returns true if this node is allowed to have children.,;javax.swing.tree.DefaultMutableTreeNode.getAllowsChildren(),;1
getAllowsInvalid,1,1,Returns whether or not the value being edited is allowed to be invalid for a length of time.,;javax.swing.text.DefaultFormatter.getAllowsInvalid(),;1
getAllowUserInteraction,1,1,Returns the value of the allowUserInteraction field for this object.,;java.net.URLConnection.getAllowUserInteraction(),;1
getAllRelationIds,1,1,Returns all the relation ids for all the relations handled by the Relation Service.,;javax.management.relation.RelationService.getAllRelationIds(),;1
getAllRelationTypeNames,1,1,Retrieves names of all known relation types.,;javax.management.relation.RelationService.getAllRelationTypeNames(),;1
getAllStackTraces,1,1,"Returns a map of stack traces for all live threads. The map keys are threads and each map value is an array of StackTraceElement that represents the stack dump of the corresponding Thread. The returned stack traces are in the format specified for the getStackTrace method. The threads may be executing while this method is called. The stack trace of each thread only represents a snapshot and each stack trace may be obtained at different time. A zero-length array will be returned in the map value if the virtual machine has no stack trace information about a thread. If there is a security manager, then the security manager's checkPermission method is called with a RuntimePermission(""getStackTrace"") permission as well as RuntimePermission(""modifyThreadGroup"") permission to see if it is ok to get the stack trace of all threads.",;java.lang.Thread.getAllStackTraces(),;1
getAllTags,1,1,Returns the set of actual HTML tags that are recognized by the default HTML reader. This set does not include tags that are manufactured by the reader.,;javax.swing.text.html.HTML.getAllTags(),;1
getAlphaMask,1,1,Returns the mask indicating which bits in an int pixel representation contain the alpha component.,;java.awt.image.DirectColorModel.getAlphaMask(),;1
getAlphas,1,1,Copies the array of alpha transparency components into the specified array. Only the initial entries of the array as specified by getMapSize are written.,;java.awt.image.IndexColorModel.getAlphas(byte[]),;1
getAltText,1,1,Returns the text to display if the image can't be loaded. This is obtained from the Elements attribute set with the attribute name HTML.Attribute.ALT.,;javax.swing.text.html.ImageView.getAltText(),;1
getAmountFull,1,1,"This determines the amount of the progress bar that should be filled based on the percent done gathered from the model. This is a common operation so it was abstracted out. It assumes that your progress bar is linear. That is, if you are making a circular progress indicator, you will want to override this method.",";javax.swing.plaf.basic.BasicProgressBarUI.getAmountFull(Insets,int,int)",;1
getAmPmStrings,1,1,Gets ampm strings. For example: "AM" and "PM".,;java.text.DateFormatSymbols.getAmPmStrings(),;1
getAncestor,1,1,Returns the ancestor that the event actually occurred on.,;javax.swing.event.AncestorEvent.getAncestor(),;1
getAncestorListeners,1,1,Returns an array of all the ancestor listeners registered on this component.,;javax.swing.JComponent.getAncestorListeners(),;1
getAncestorNamed,1,1,"Convenience method for searching above comp in the component hierarchy and returns the first object of name it finds. Can return null, if name cannot be found.",";javax.swing.SwingUtilities.getAncestorNamed(String,Component)",;1
getAncestorOfClass,1,1,"Convenience method for searching above comp in the component hierarchy and returns the first object of class c it finds. Can return null, if a class c cannot be found.",";javax.swing.SwingUtilities.getAncestorOfClass(Class&lt;?&gt;,Component)",;1
getAncestorParent,1,1,"Returns the parent of the ancestor the event actually occurred on. This is most interesting in an ANCESTOR_REMOVED event, as the ancestor may no longer be in the component hierarchy.",;javax.swing.event.AncestorEvent.getAncestorParent(),;1
getAnchorRect,1,1,Returns a copy of the anchor rectangle which positions and sizes the textured image.,;java.awt.TexturePaint.getAnchorRect(),;1
getAnchorSelectionPath,1,1,Returns the path identified as the anchor.,;javax.swing.JTree.getAnchorSelectionPath(),;1
getAnimationIndex,1,1,Gets the index of the current animation frame.,;javax.swing.plaf.basic.BasicProgressBarUI.getAnimationIndex(),;1
getAnnotatedExceptionTypes,1,1,Returns an array of AnnotatedType objects that represent the use of types to specify the declared exceptions of the method/constructor represented by this Executable. The order of the objects in the array corresponds to the order of the exception types in the declaration of the method/constructor. Returns an array of length 0 if the method/constructor declares no exceptions.,;java.lang.reflect.Executable.getAnnotatedExceptionTypes(),;1
getAnnotatedInterfaces,1,1,"Returns an array of AnnotatedType objects that represent the use of types to specify superinterfaces of the entity represented by this Class object. (The use of type Foo to specify a superinterface in '... implements Foo' is distinct from the declaration of type Foo.) If this Class object represents a class, the return value is an array containing objects representing the uses of interface types to specify interfaces implemented by the class. The order of the objects in the array corresponds to the order of the interface types used in the 'implements' clause of the declaration of this Class object. If this Class object represents an interface, the return value is an array containing objects representing the uses of interface types to specify interfaces directly extended by the interface. The order of the objects in the array corresponds to the order of the interface types used in the 'extends' clause of the declaration of this Class object. If this Class object represents a class or interface whose declaration does not explicitly indicate any annotated superinterfaces, the return value is an array of length 0. If this Class object represents either the Object class, an array type, a primitive type, or void, the return value is an array of length 0.",;java.lang.Class.getAnnotatedInterfaces(),;1
getAnnotatedParameterTypes,1,1,Returns an array of AnnotatedType objects that represent the use of types to specify formal parameter types of the method/constructor represented by this Executable. The order of the objects in the array corresponds to the order of the formal parameter types in the declaration of the method/constructor. Returns an array of length 0 if the method/constructor declares no parameters.,;java.lang.reflect.Executable.getAnnotatedParameterTypes(),;1
getAnnotatedSuperclass,1,1,"Returns an AnnotatedType object that represents the use of a type to specify the superclass of the entity represented by this Class object. (The use of type Foo to specify the superclass in '... extends Foo' is distinct from the declaration of type Foo.) If this Class object represents a type whose declaration does not explicitly indicate an annotated superclass, then the return value is an AnnotatedType object representing an element with no annotations. If this Class represents either the Object class, an interface type, an array type, a primitive type, or void, the return value is null.",;java.lang.Class.getAnnotatedSuperclass(),;1
getAntiAliasingHint,1,1,Return the text anti-aliasing rendering mode hint used in this FontRenderContext. This will be one of the text antialiasing rendering hint values defined in java.awt.RenderingHints.,;java.awt.font.FontRenderContext.getAntiAliasingHint(),;1
getAppConfigurationEntry,1,1,Retrieve the AppConfigurationEntries for the specified name from this Configuration.,;javax.security.auth.login.Configuration.getAppConfigurationEntry(String),;1
getAppletContext,1,1,"Determines this applet's context, which allows the applet to query and affect the environment in which it runs. This environment of an applet represents the document that contains the applet.",;java.applet.Applet.getAppletContext(),;1
getAppletInfo,1,1,"Returns information about this applet. An applet should override this method to return a String containing information about the author, version, and copyright of the applet. The implementation of this method provided by the Applet class returns null.",;java.applet.Applet.getAppletInfo(),;1
getApplicationData,1,1,Get the application specified data for this channel binding.,;org.ietf.jgss.ChannelBinding.getApplicationData(),;1
getApplicationProtocols,1,1,"Returns a prioritized array of application-layer protocol names that can be negotiated over the SSL/TLS/DTLS protocols. The array could be empty (zero-length), in which case protocol indications will not be used. This method will return a new array each time it is invoked.",;javax.net.ssl.SSLParameters.getApplicationProtocols(),;1
getApproveButtonMnemonic,1,1,Returns the approve button's mnemonic.,;javax.swing.JFileChooser.getApproveButtonMnemonic(),;1
getApproveButtonToolTipText,1,1,"Returns the tooltip text used in the ApproveButton. If null, the UI object will determine the button's text.",;javax.swing.JFileChooser.getApproveButtonToolTipText(),;1
getArcType,1,1,"Returns the arc closure type of the arc: OPEN, CHORD, or PIE.",;java.awt.geom.Arc2D.getArcType(),;1
getAreaOfInterest,1,1,Gets the ares of interest currently contained in the RenderContext.,;java.awt.image.renderable.RenderContext.getAreaOfInterest(),;1
getArguments,1,1,Returns the arguments for the method to invoke. The number of arguments and their types must match the method being called. null can be used as a synonym of an empty array.,;java.beans.Statement.getArguments(),;1
getArrayLength,1,1,Get the length of the allocated array.,;javax.swing.text.GapContent.getArrayLength(),;1
getArrayType,1,1,"Create an ArrayType instance in a type-safe manner. Multidimensional arrays can be built up by calling this method as many times as necessary. Calling this method twice with the same parameters may return the same object or two equal but not identical objects. As an example, the following piece of code: ArrayType&lt;String[]&gt; t1 = ArrayType.getArrayType(SimpleType.STRING); ArrayType&lt;String[][]&gt; t2 = ArrayType.getArrayType(t1); ArrayType&lt;String[][][]&gt; t3 = ArrayType.getArrayType(t2); System.out.println(""array class name = "" + t3.getClassName()); System.out.println(""element class name = "" + t3.getElementOpenType().getClassName()); System.out.println(""array type name = "" + t3.getTypeName()); System.out.println(""array type description = "" + t3.getDescription()); would produce the following output: array class name = [[[Ljava.lang.String; element class name = java.lang.String array type name = [[[Ljava.lang.String; array type description = 3-dimension array of java.lang.String",;javax.management.openmbean.ArrayType.getArrayType(OpenType&lt;E&gt;),;1
getArrivedParties,1,1,"Returns the number of registered parties that have arrived at the current phase of this phaser. If this phaser has terminated, the returned value is meaningless and arbitrary.",;java.util.concurrent.Phaser.getArrivedParties(),;1
getAsciiName,1,1,"Returns the StandardCharsets.US_ASCII-compliant hostname of this SNIHostName object. Note that, per RFC 6066, the returned hostname may be an internationalized domain name that contains A-labels. See RFC 5890 for more information about the detailed A-label specification.",;javax.net.ssl.SNIHostName.getAsciiName(),;1
getAsciiStream,1,1,"Retrieves the CLOB value designated by this SerialClob object as an ascii stream. This method forwards the getAsciiStream call to the underlying Clob object in the event that this SerialClob object is instantiated with a Clob object. If this SerialClob object is instantiated with a char array, a SerialException object is thrown.",;javax.sql.rowset.serial.SerialClob.getAsciiStream(),;1
getAsDouble,1,1,"If a value is present in this OptionalDouble, returns the value, otherwise throws NoSuchElementException.",;java.util.OptionalDouble.getAsDouble(),;1
getAsInt,1,1,"If a value is present in this OptionalInt, returns the value, otherwise throws NoSuchElementException.",;java.util.OptionalInt.getAsInt(),;1
getAsLong,1,1,"If a value is present in this OptionalLong, returns the value, otherwise throws NoSuchElementException.",;java.util.OptionalLong.getAsLong(),;1
getAspectRatio,1,1,"Returns the aspect ratio of the given image (that is, its width divided by its height) as a float. For images that are inherently resizable, this method provides a way to determine the appropriate width given a desired height, or vice versa. For non-resizable images, the true width and height are used. The default implementation simply returns (float)getWidth(imageIndex)/getHeight(imageIndex).",;javax.imageio.ImageReader.getAspectRatio(int),;1
getAssociatedStylesheet,1,1,"Get the stylesheet specification(s) associated with the XML Source document via the xml-stylesheet processing instruction that match the given criteria. Note that it is possible to return several stylesheets, in which case they are applied as if they were a list of imports or cascades in a single stylesheet.",";javax.xml.transform.TransformerFactory.getAssociatedStylesheet(Source,String,String,String)",;1
getAsText,1,1,Gets the property value as a string suitable for presentation to a human to edit.,;java.beans.PropertyEditorSupport.getAsText(),;1
getAsTree,1,1,Returns an XML DOM Node object that represents the root of a tree of metadata contained within this object according to the conventions defined by a given metadata format. The names of the available metadata formats may be queried using the getMetadataFormatNames method.,;javax.imageio.metadata.IIOMetadata.getAsTree(String),;1
getAsynchronousLoadPriority,1,1,"Gets the asynchronous loading priority. If less than zero, the document should not be loaded asynchronously.",;javax.swing.text.AbstractDocument.getAsynchronousLoadPriority(),;1
getAsyncMode,1,1,Returns true if this pool uses local first-in-first-out scheduling mode for forked tasks that are never joined.,;java.util.concurrent.ForkJoinPool.getAsyncMode(),;1
getAttachment,1,1,"Returns an AttachmentPart object that is associated with an attachment that is referenced by this SOAPElement or null if no such attachment exists. References can be made via an href attribute as described in SOAP Messages with Attachments, or via a single Text child node containing a URI as described in the WS-I Attachments Profile 1.0 for elements of schema type ref:swaRef. These two mechanisms must be supported. The support for references via href attribute also implies that this method should also be supported on an element that is an xop:Include element ( XOP). other reference mechanisms may be supported by individual implementations of this standard. Contact your vendor for details.",;javax.xml.soap.SOAPMessage.getAttachment(SOAPElement),;1
getAttachmentAsByteArray,1,1,"Retrieve the attachment identified by content-id, cid, as a byte[].",;javax.xml.bind.attachment.AttachmentUnmarshaller.getAttachmentAsByteArray(String),;1
getAttachmentAsDataHandler,1,1,"Lookup MIME content by content-id, cid, and return as a DataHandler.The returned DataHandler instance must be configured to meet the following required mapping constaint. Required Mappings between MIME and Java Types MIME TypeJava TypeDataHandler.getContentType()instanceof DataHandler.getContent()image/gifjava.awt.Imageimage/jpegjava.awt.Imagetext/xml or application/xmljavax.xml.transform.Source Note that it is allowable to support additional mappings.",;javax.xml.bind.attachment.AttachmentUnmarshaller.getAttachmentAsDataHandler(String),;1
getAttributeByValue,1,1,Get an attribute by value.,;javax.swing.text.html.parser.Element.getAttributeByValue(String),;1
getAttributeContext,1,1,Fetches the context for managing attributes. This method effectively establishes the strategy used for compressing AttributeSet information.,;javax.swing.text.AbstractDocument.getAttributeContext(),;1
getAttributeDataType,1,1,Description copied from interface:IIOMetadataFormat,";javax.imageio.metadata.IIOMetadataFormatImpl.getAttributeDataType(String,String)",;1
getAttributeDefaultValue,1,1,Description copied from interface:IIOMetadataFormat,";javax.imageio.metadata.IIOMetadataFormatImpl.getAttributeDefaultValue(String,String)",;1
getAttributeDefinition,1,1,Retrieves this attribute's schema definition. This method by default throws OperationNotSupportedException. A subclass should override this method if it supports schema.,;javax.naming.directory.BasicAttribute.getAttributeDefinition(),;1
getAttributeDescription,1,1,"Returns a String containing a description of the named attribute, or null. The description will be localized for the supplied Locale if possible. The default implementation will first locate a ResourceBundle using the current resource base name set by setResourceBaseName and the supplied Locale, using the fallback mechanism described in the comments for ResourceBundle.getBundle. If a ResourceBundle is found, the element name followed by a ""/"" character followed by the attribute name (elementName + ""/"" + attrName) will be used as a key to its getString method, and the result returned. If no ResourceBundle is found, or no such key is present, null will be returned. If locale is null, the current default Locale returned by Locale.getLocale will be used.",";javax.imageio.metadata.IIOMetadataFormatImpl.getAttributeDescription(String,String,Locale)",;1
getAttributeEnumerations,1,1,Description copied from interface:IIOMetadataFormat,";javax.imageio.metadata.IIOMetadataFormatImpl.getAttributeEnumerations(String,String)",;1
getAttributeKey,1,1,"Fetches an attribute constant for a well-known attribute name (i.e. one of the attributes in the set {FACE, COMMENT, SIZE, COLOR, CLEAR, BACKGROUND, BGCOLOR, TEXT, LINK, VLINK, ALINK, WIDTH, HEIGHT, ALIGN, NAME, HREF, REL, REV, TITLE, TARGET, SHAPE, COORDS, ISMAP, NOHREF, ALT, ID, SRC, HSPACE, VSPACE, USEMAP, LOWSRC, CODEBASE, CODE, ARCHIVE, VALUE, VALUETYPE, TYPE, CLASS, STYLE, LANG, DIR, DECLARE, CLASSID, DATA, CODETYPE, STANDBY, BORDER, SHAPES, NOSHADE, COMPACT, START, ACTION, METHOD, ENCTYPE, CHECKED, MAXLENGTH, MULTIPLE, SELECTED, ROWS, COLS, DUMMY, CELLSPACING, CELLPADDING, VALIGN, HALIGN, NOWRAP, ROWSPAN, COLSPAN, PROMPT, HTTPEQUIV, CONTENT, LANGUAGE, VERSION, N, FRAMEBORDER, MARGINWIDTH, MARGINHEIGHT, SCROLLING, NORESIZE, MEDIA, ENDTAG}). If the given name does not represent one of the well-known attributes, then null will be returned.",;javax.swing.text.html.HTML.getAttributeKey(String),;1
getAttributeListMaxLength,1,1,Description copied from interface:IIOMetadataFormat,";javax.imageio.metadata.IIOMetadataFormatImpl.getAttributeListMaxLength(String,String)",;1
getAttributeListMinLength,1,1,Description copied from interface:IIOMetadataFormat,";javax.imageio.metadata.IIOMetadataFormatImpl.getAttributeListMinLength(String,String)",;1
getAttributeLocalName,1,1,Description copied from interface:XMLStreamReader,;javax.xml.stream.util.StreamReaderDelegate.getAttributeLocalName(int),;1
getAttributeMaxValue,1,1,Description copied from interface:IIOMetadataFormat,";javax.imageio.metadata.IIOMetadataFormatImpl.getAttributeMaxValue(String,String)",;1
getAttributeMinValue,1,1,Description copied from interface:IIOMetadataFormat,";javax.imageio.metadata.IIOMetadataFormatImpl.getAttributeMinValue(String,String)",;1
getAttributeNamespace,1,1,Description copied from interface:XMLStreamReader,;javax.xml.stream.util.StreamReaderDelegate.getAttributeNamespace(int),;1
getAttributeNode,1,1,Description copied from interface:Element,;javax.imageio.metadata.IIOMetadataNode.getAttributeNode(String),;1
getAttributeNodeNS,1,1,Equivalent to getAttributeNode(localName).,";javax.imageio.metadata.IIOMetadataNode.getAttributeNodeNS(String,String)",;1
getAttributeNS,1,1,Equivalent to getAttribute(localName).,";javax.imageio.metadata.IIOMetadataNode.getAttributeNS(String,String)",;1
getAttributePrefix,1,1,Description copied from interface:XMLStreamReader,;javax.xml.stream.util.StreamReaderDelegate.getAttributePrefix(int),;1
getAttributesScope,1,1,Get the lowest scope in which an attribute is defined.,;javax.script.SimpleScriptContext.getAttributesScope(String),;1
getAttributeSyntaxDefinition,1,1,Retrieves the syntax definition associated with this attribute. This method by default throws OperationNotSupportedException. A subclass should override this method if it supports schema.,;javax.naming.directory.BasicAttribute.getAttributeSyntaxDefinition(),;1
getAttributeTypeInfo,1,1,Returns the immutable TypeInfo object for the specified attribute of the current element. The method may only be called by the startElement event of the ContentHandler that the application sets to the ValidatorHandler.,;javax.xml.validation.TypeInfoProvider.getAttributeTypeInfo(int),;1
getAttributeValueType,1,1,Description copied from interface:IIOMetadataFormat,";javax.imageio.metadata.IIOMetadataFormatImpl.getAttributeValueType(String,String)",;1
getAudioActionMap,1,1,"Returns an ActionMap containing the audio actions for this look and feel. The returned ActionMap contains Actions that embody the ability to render an auditory cue. These auditory cues map onto user and system activities that may be useful for an end user to know about (such as a dialog box appearing). At the appropriate time, the ComponentUI is responsible for obtaining an Action out of the ActionMap and passing it to playSound. This method first looks up the ActionMap from the defaults using the key ""AuditoryCues.actionMap"". If the value is non-null, it is returned. If the value of the default ""AuditoryCues.actionMap"" is null and the value of the default ""AuditoryCues.cueList"" is non-null, an ActionMapUIResource is created and populated. Population is done by iterating over each of the elements of the ""AuditoryCues.cueList"" array, and invoking createAudioAction() to create an Action for each element. The resulting Action is placed in the ActionMapUIResource, using the array element as the key. For example, if the ""AuditoryCues.cueList"" array contains a single-element, ""audioKey"", the ActionMapUIResource is created, then populated by way of actionMap.put(cueList[0], createAudioAction(cueList[0])). If the value of the default ""AuditoryCues.actionMap"" is null and the value of the default ""AuditoryCues.cueList"" is null, an empty ActionMapUIResource is created.",;javax.swing.plaf.basic.BasicLookAndFeel.getAudioActionMap(),;1
getAuthenticationID,1,1,Returns the authentication id to check.,;javax.security.sasl.AuthorizeCallback.getAuthenticationID(),;1
getAuthorityKeyIdentifier,1,1,"Returns the authorityKeyIdentifier criterion. The X509Certificate must contain a AuthorityKeyIdentifier extension with the specified value. If null, no authorityKeyIdentifier check will be done. Note that the byte array returned is cloned to protect against subsequent modifications.",;java.security.cert.X509CertSelector.getAuthorityKeyIdentifier(),;1
getAuthorizationID,1,1,Returns the authorization id to check.,;javax.security.sasl.AuthorizeCallback.getAuthorizationID(),;1
getAuthorizedID,1,1,Returns the id of the authorized user.,;javax.security.sasl.AuthorizeCallback.getAuthorizedID(),;1
getAuthTime,1,1,Returns the time that the client was authenticated.,;javax.security.auth.kerberos.KerberosTicket.getAuthTime(),;1
getAutoCreateColumnsFromModel,1,1,"Determines whether the table will create default columns from the model. If true, setModel will clear any existing columns and create new columns from the new model. Also, if the event in the tableChanged notification specifies that the entire table changed, then the columns will be rebuilt. The default is true.",;javax.swing.JTable.getAutoCreateColumnsFromModel(),;1
getAutoCreateContainerGaps,1,1,Returns true if gaps between the container and components that border the container are automatically created.,;javax.swing.GroupLayout.getAutoCreateContainerGaps(),;1
getAutoCreateGaps,1,1,Returns true if gaps between components are automatically created.,;javax.swing.GroupLayout.getAutoCreateGaps(),;1
getAutoCreateRowSorter,1,1,"Returns true if whenever the model changes, a new RowSorter should be created and installed as the table's sorter; otherwise, returns false.",;javax.swing.JTable.getAutoCreateRowSorter(),;1
getAutoDelay,1,1,Returns the number of milliseconds this Robot sleeps after generating an event.,;java.awt.Robot.getAutoDelay(),;1
getAutoResizeMode,1,1,Returns the auto resize mode of the table. The default mode is AUTO_RESIZE_SUBSEQUENT_COLUMNS.,;javax.swing.JTable.getAutoResizeMode(),;1
getAutoscrolls,1,1,Gets the autoscrolls property.,;javax.swing.JComponent.getAutoscrolls(),;1
getAuxiliaryLookAndFeels,1,1,Returns the list of auxiliary look and feels (can be null). The auxiliary look and feels tell the multiplexing look and feel what other LookAndFeel classes for a component instance are to be used in addition to the default LookAndFeel class when creating a multiplexing UI. Note these are not the same as the installed look and feels.,;javax.swing.UIManager.getAuxiliaryLookAndFeels(),;1
getAvailableAcceleratedMemory,1,1,"This method returns the number of bytes available in accelerated memory on this device. Some images are created or cached in accelerated memory on a first-come, first-served basis. On some operating systems, this memory is a finite resource. Calling this method and scheduling the creation and flushing of images carefully may enable applications to make the most efficient use of that finite resource. Note that the number returned is a snapshot of how much memory is available; some images may still have problems being allocated into that memory. For example, depending on operating system, driver, memory configuration, and thread situations, the full extent of the size reported may not be available for a given image. There are further inquiry methods on the ImageCapabilities object associated with a VolatileImage that can be used to determine whether a particular VolatileImage has been created in accelerated memory.",;java.awt.GraphicsDevice.getAvailableAcceleratedMemory(),;1
getAvailableAttributes,1,1,Returns the keys of all the attributes supported by this Font. These attributes can be used to derive other fonts.,;java.awt.Font.getAvailableAttributes(),;1
getAvailableCalendarTypes,1,1,"Returns an unmodifiable Set containing all calendar types supported by Calendar in the runtime environment. The available calendar types can be used for the Unicode locale extensions. The Set returned contains at least ""gregory"". The calendar types don't include aliases, such as ""gregorian"" for ""gregory"".",;java.util.Calendar.getAvailableCalendarTypes(),;1
getAvailableCurrencies,1,1,"Gets the set of available currencies. The returned set of currencies contains all of the available currencies, which may include currencies that represent obsolete ISO 4217 codes. The set can be modified without affecting the available currencies in the runtime.",;java.util.Currency.getAvailableCurrencies(),;1
getAvailableDataFlavors,1,1,"Returns an array of DataFlavors in which the current contents of this clipboard can be provided. If there are no DataFlavors available, this method returns a zero-length array.",;java.awt.datatransfer.Clipboard.getAvailableDataFlavors(),;1
getAWTKeyStrokeForEvent,1,1,"Returns an AWTKeyStroke which represents the stroke which generated a given KeyEvent. This method obtains the keyChar from a KeyTyped event, and the keyCode from a KeyPressed or KeyReleased event. The KeyEvent modifiers are obtained for all three types of KeyEvent.",;java.awt.AWTKeyStroke.getAWTKeyStrokeForEvent(KeyEvent),;1
getB,1,1,Returns the second coefficient b of the elliptic curve.,;java.security.spec.EllipticCurve.getB(),;1
getBackgroundAt,1,1,Returns the tab background color at index.,;javax.swing.JTabbedPane.getBackgroundAt(int),;1
getBackgroundNonSelectionColor,1,1,Returns the background color to be used for non selected nodes.,;javax.swing.tree.DefaultTreeCellRenderer.getBackgroundNonSelectionColor(),;1
getBackgroundPainter,1,1,"Gets the appropriate background Painter, if there is one, for the state specified in the given SynthContext. This method does appropriate fallback searching, as described in #get.",;javax.swing.plaf.nimbus.NimbusStyle.getBackgroundPainter(SynthContext),;1
getBackgroundSelectionColor,1,1,Returns the color to use for the background if node is selected.,;javax.swing.tree.DefaultTreeCellRenderer.getBackgroundSelectionColor(),;1
getBandOffsets,1,1,Returns the band offset for all bands.,;java.awt.image.ComponentSampleModel.getBandOffsets(),;1
getBank,1,1,Returns the number of the bank that contains the instrument whose location this Patch specifies.,;javax.sound.midi.Patch.getBank(),;1
getBankIndices,1,1,Returns the bank indices for all bands.,;java.awt.image.ComponentSampleModel.getBankIndices(),;1
getBase64Content,1,1,"Returns an InputStream which can be used to obtain the content of AttachmentPart as Base64 encoded character data, this method would base64 encode the raw bytes of the attachment and return.",;javax.xml.soap.AttachmentPart.getBase64Content(),;1
getBaseBundleName,1,1,"Returns the base name of this bundle, if known, or null if unknown. If not null, then this is the value of the baseName parameter that was passed to the ResourceBundle.getBundle(...) method when the resource bundle was loaded.",;java.util.ResourceBundle.getBaseBundleName(),;1
getBaseLevel,1,1,"Return the base level (0 if left-to-right, 1 if right-to-left).",;java.text.Bidi.getBaseLevel(),;1
getBaselineFor,1,1,"Returns the baseline appropriate for displaying this character. Large fonts can support different writing systems, and each system can use a different baseline. The character argument determines the writing system to use. Clients should not assume all characters use the same baseline.",;java.awt.Font.getBaselineFor(char),;1
getBaselineIndex,1,1,"Returns the baseline index of the text. The index is one of ROMAN_BASELINE, CENTER_BASELINE, HANGING_BASELINE.",;java.awt.font.LineMetrics.getBaselineIndex(),;1
getBasicSplitPaneUI,1,1,Returns the SplitPaneUI the receiver is currently in.,;javax.swing.plaf.basic.BasicSplitPaneDivider.getBasicSplitPaneUI(),;1
getBean,1,1,"A convenience method that takes a CommandInfo object and instantiates the corresponding command, usually a JavaBean component. This method calls the CommandInfo's getCommandObject method with the ClassLoader used to load the javax.activation.DataHandler class itself.",;javax.activation.DataHandler.getBean(CommandInfo),;1
getBeanClass,1,1,Gets the bean's Class object.,;java.beans.BeanDescriptor.getBeanClass(),;1
getBeanContextChildPeer,1,1,Gets the BeanContextChild associated with this BeanContextChildSupport.,;java.beans.beancontext.BeanContextChildSupport.getBeanContextChildPeer(),;1
getBeanContextPeer,1,1,Gets the instance of BeanContext that this object is providing the implementation for.,;java.beans.beancontext.BeanContextSupport.getBeanContextPeer(),;1
getBeanContextServicesPeer,1,1,Gets the BeanContextServices associated with this BeanContextServicesSupport.,;java.beans.beancontext.BeanContextServicesSupport.getBeanContextServicesPeer(),;1
getBeanDescriptor,1,1,Deny knowledge about the class and customizer of the bean. You can override this if you wish to provide explicit info.,;java.beans.SimpleBeanInfo.getBeanDescriptor(),;1
getBeanInfoSearchPath,1,1,Gets the list of package names that will be used for finding BeanInfo classes.,;java.beans.Introspector.getBeanInfoSearchPath(),;1
getBestCursorSize,1,1,"Returns the supported cursor dimension which is closest to the desired sizes. Systems which only support a single cursor size will return that size regardless of the desired sizes. Systems which don't support custom cursors will return a dimension of 0, 0. Note: if an image is used whose dimensions don't match a supported size (as returned by this method), the Toolkit implementation will attempt to resize the image to a supported size. Since converting low-resolution images is difficult, no guarantees are made as to the quality of a cursor image which isn't a supported size. It is therefore recommended that this method be called and an appropriate image used so no image conversion is made.",";java.awt.Toolkit.getBestCursorSize(int,int)",;1
getBevelType,1,1,Returns the type of the bevel border.,;javax.swing.border.BevelBorder.getBevelType(),;1
getBias,1,1,Returns the bias for the drop index.,;javax.swing.text.JTextComponent.DropLocation.getBias(),;1
getBidiLevel,1,1,Gets the BidiLevel setting.,;javax.swing.text.StyleConstants.getBidiLevel(AttributeSet),;1
getBidiRootElement,1,1,Returns the root element of the bidirectional structure for this document. Its children represent character runs with a given Unicode bidi level.,;javax.swing.text.AbstractDocument.getBidiRootElement(),;1
getBinding,1,1,Returns the binding for this endpoint.,;javax.xml.ws.Endpoint.getBinding(),;1
getBitDepth,1,1,"Returns the bit depth of the display, in bits per pixel. This may be BIT_DEPTH_MULTI if multiple bit depths are supported in this display mode.",;java.awt.DisplayMode.getBitDepth(),;1
getBitMasks,1,1,Returns the bit masks for all bands.,;java.awt.image.SinglePixelPackedSampleModel.getBitMasks(),;1
getBitOffsets,1,1,Returns the bit offsets into the data array element representing a pixel for all bands.,;java.awt.image.SinglePixelPackedSampleModel.getBitOffsets(),;1
getBitRate,1,1,"Returns a float indicating an estimate of the number of bits of output data for each bit of input image data at the given quality level. The value will typically lie between 0 and 1, with smaller values indicating more compression. A special value of -1.0F is used to indicate that no estimate is available. If there are multiple compression types but none has been set, an IllegalStateException is thrown. The default implementation checks that compression is supported and the compression mode is MODE_EXPLICIT. If so, if getCompressionTypes() is null or getCompressionType() is non-null, and quality is within bounds, it returns -1.0.",;javax.imageio.ImageWriteParam.getBitRate(float),;1
getBitsPerBand,1,1,Return the number of bits used to represent samples of the given band.,;javax.imageio.ImageTypeSpecifier.getBitsPerBand(int),;1
getBlackBoxBounds,1,1,Returns the black box bounds of the characters in the specified range. The black box bounds is an area consisting of the union of the bounding boxes of all the glyphs corresponding to the characters between start and limit. This area can be disjoint.,";java.awt.font.TextLayout.getBlackBoxBounds(int,int)",;1
getBlinkRate,1,1,Gets the caret blink rate.,;javax.swing.text.DefaultCaret.getBlinkRate(),;1
getBlockedCount,1,1,Returns the total number of times that the thread associated with this ThreadInfo blocked to enter or reenter a monitor. I.e. the number of times a thread has been in the BLOCKED state.,;java.lang.management.ThreadInfo.getBlockedCount(),;1
getBlockedTime,1,1,Returns the approximate accumulated elapsed time (in milliseconds) that the thread associated with this ThreadInfo has blocked to enter or reenter a monitor since thread contention monitoring is enabled. I.e. the total accumulated time the thread has been in the BLOCKED state since thread contention monitoring was last enabled. This method returns -1 if thread contention monitoring is disabled. The Java virtual machine may measure the time with a high resolution timer. This statistic is reset when the thread contention monitoring is reenabled.,;java.lang.management.ThreadInfo.getBlockedTime(),;1
getBlocker,1,1,"Returns the blocker object supplied to the most recent invocation of a park method that has not yet unblocked, or null if not blocked. The value returned is just a momentary snapshot -- the thread may have since unblocked or blocked on a different blocker object.",;java.util.concurrent.locks.LockSupport.getBlocker(Thread),;1
getBlockSize,1,1,Returns the block size (in bytes).,;javax.crypto.Cipher.getBlockSize(),;1
getBlueMask,1,1,Returns the mask indicating which bits in an int pixel representation contain the blue color component.,;java.awt.image.DirectColorModel.getBlueMask(),;1
getBlues,1,1,Copies the array of blue color components into the specified array. Only the initial entries of the array as specified by getMapSize are written.,;java.awt.image.IndexColorModel.getBlues(byte[]),;1
getBorderPainter,1,1,"Gets the appropriate border Painter, if there is one, for the state specified in the given SynthContext. This method does appropriate fallback searching, as described in #get.",;javax.swing.plaf.nimbus.NimbusStyle.getBorderPainter(SynthContext),;1
getBottomComponent,1,1,"Returns the component below, or to the right of the divider.",;javax.swing.JSplitPane.getBottomComponent(),;1
getBoundedPosition,1,1,Determines the model location that represents the maximum advance that fits within the given span. This could be used to break the given view. The result should be a location just shy of the given advance. This differs from viewToModel which returns the closest position which might be proud of the maximum advance.,";javax.swing.text.GlyphView.GlyphPainter.getBoundedPosition(GlyphView,int,float,float)",;1
getBoundingBox,1,1,"Deprecated.As of JDK version 1.1, replaced by getBounds().",;java.awt.Polygon.getBoundingBox(),;1
getBoundsAt,1,1,"Returns the tab bounds at index. If the tab at this index is not currently visible in the UI, then returns null. If there is no UI set on this tabbedpane, then returns null.",;javax.swing.JTabbedPane.getBoundsAt(int),;1
getBoundsForIconOf,1,1,The iconifyFrame() code calls this to determine the proper bounds for the desktopIcon.,;javax.swing.DefaultDesktopManager.getBoundsForIconOf(JInternalFrame),;1
getBoxLength,1,1,"Returns the length of the ""bouncing box"" to be painted. This method is invoked by the default implementation of paintIndeterminate to get the width (if the progress bar is horizontal) or height (if vertical) of the box. For example: boxRect.width = getBoxLength(componentInnards.width, componentInnards.height);",";javax.swing.plaf.basic.BasicProgressBarUI.getBoxLength(int,int)",;1
getBoxPainter,1,1,Fetches the box formatter to use for the given set of CSS attributes.,;javax.swing.text.html.StyleSheet.getBoxPainter(AttributeSet),;1
getBreakLocation,1,1,Determine where to break the given text to fit within the given span. This tries to find a word boundary.,";javax.swing.text.Utilities.getBreakLocation(Segment,FontMetrics,int,int,TabExpander,int)",;1
getBuffer,1,1,Return the string buffer itself.,;java.io.StringWriter.getBuffer(),;1
getBufferCapabilities,1,1,Returns the buffering capabilities of this GraphicsConfiguration.,;java.awt.GraphicsConfiguration.getBufferCapabilities(),;1
getBufferedImageOp,1,1,Returns the BufferedImageOp.,;java.awt.image.BufferedImageFilter.getBufferedImageOp(),;1
getBufferedImageType,1,1,Returns an int containing one of the enumerated constant values describing image formats from BufferedImage.,;javax.imageio.ImageTypeSpecifier.getBufferedImageType(),;1
getButtonBorder,1,1,Returns a border instance for a JButton,;javax.swing.plaf.metal.MetalBorders.getButtonBorder(),;1
getButtonCount,1,1,Returns the number of buttons in the group.,;javax.swing.ButtonGroup.getButtonCount(),;1
getButtons,1,1,"Returns the buttons to display from the JOptionPane the receiver is providing the look and feel for. If the JOptionPane has options set, they will be provided, otherwise if the optionType is YES_NO_OPTION, yesNoOptions is returned, if the type is YES_NO_CANCEL_OPTION yesNoCancelOptions is returned, otherwise defaultButtons are returned.",;javax.swing.plaf.basic.BasicOptionPaneUI.getButtons(),;1
getByIndex,1,1,Get a network interface given its index.,;java.net.NetworkInterface.getByIndex(int),;1
getByInetAddress,1,1,Convenience method to search for a network interface that has the specified Internet Protocol (IP) address bound to it. If the specified IP address is bound to multiple network interfaces it is not defined which network interface is returned.,;java.net.NetworkInterface.getByInetAddress(InetAddress),;1
getByteOrder,1,1,Description copied from interface:ImageInputStream,;javax.imageio.stream.ImageInputStreamImpl.getByteOrder(),;1
getByteParameter,1,1,A convenience method to return a parameter as a byte. An exception is thrown if the parameter is null or not a Byte.,;java.awt.image.renderable.ParameterBlock.getByteParameter(int),;1
getByteStream,1,1,"Get the byte stream for this input source. The getEncoding method will return the character encoding for this byte stream, or null if unknown.",;org.xml.sax.InputSource.getByteStream(),;1
getCA,1,1,Returns the name of the most-trusted CA as an X500Principal.,;java.security.cert.TrustAnchor.getCA(),;1
getCacheDirectory,1,1,"Returns the current value set by setCacheDirectory, or null if no explicit setting has been made.",;javax.imageio.ImageIO.getCacheDirectory(),;1
getCachedMBeanInfo,1,1,Customization hook: Return the MBeanInfo cached for this object. Subclasses may redefine this method in order to implement their own caching policy. The default implementation stores one MBeanInfo object per instance.,;javax.management.StandardMBean.getCachedMBeanInfo(),;1
getCalendar,1,1,Gets the calendar associated with this date/time formatter.,;java.text.DateFormat.getCalendar(),;1
getCallbackHandler,1,1,Returns the CallbackHandler.,;java.security.KeyStore.CallbackHandlerProtection.getCallbackHandler(),;1
getCAName,1,1,Returns the name of the most-trusted CA in RFC 2253 String format.,;java.security.cert.TrustAnchor.getCAName(),;1
getCanonicalFile,1,1,Returns the canonical form of this abstract pathname. Equivalent to newFile(this.getCanonicalPath()).,;java.io.File.getCanonicalFile(),;1
getCanonicalHostName,1,1,"Gets the fully qualified domain name for this IP address. Best effort method, meaning we may not be able to return the FQDN depending on the underlying system configuration. If there is a security manager, this method first calls its checkConnect method with the hostname and -1 as its arguments to see if the calling code is allowed to know the hostname for this IP address, i.e., to connect to the host. If the operation is not allowed, it will return the textual representation of the IP address.",;java.net.InetAddress.getCanonicalHostName(),;1
getCanonicalKeyPropertyListString,1,1,"Returns a string representation of the list of key properties, in which the key properties are sorted in lexical order. This is used in lexicographic comparisons performed in order to select MBeans based on their key property list. Lexical order is the order implied by String.compareTo(String).",;javax.management.ObjectName.getCanonicalKeyPropertyListString(),;1
getCanonicalName,1,1,"Returns the canonical name of the underlying class as defined by the Java Language Specification. Returns null if the underlying class does not have a canonical name (i.e., if it is a local or anonymous class or an array whose component type does not have a canonical name).",;java.lang.Class.getCanonicalName(),;1
getCanonicalPath,1,1,"Returns the canonical pathname string of this abstract pathname. A canonical pathname is both absolute and unique. The precise definition of canonical form is system-dependent. This method first converts this pathname to absolute form if necessary, as if by invoking the getAbsolutePath() method, and then maps it to its unique form in a system-dependent way. This typically involves removing redundant names such as ""."" and "".."" from the pathname, resolving symbolic links (on UNIX platforms), and converting drive letters to a standard case (on Microsoft Windows platforms). Every pathname that denotes an existing file or directory has a unique canonical form. Every pathname that denotes a nonexistent file or directory also has a unique canonical form. The canonical form of the pathname of a nonexistent file or directory may be different from the canonical form of the same pathname after the file or directory is created. Similarly, the canonical form of the pathname of an existing file or directory may be different from the canonical form of the same pathname after the file or directory is deleted.",;java.io.File.getCanonicalPath(),;1
getCanWrapLines,1,1,Returns whether or not the lines can be wrapped. If this is false no lineSeparator's will be output.,;javax.swing.text.AbstractWriter.getCanWrapLines(),;1
getCapturedArg,1,1,Get a dynamic argument to the lambda capture site.,;java.lang.invoke.SerializedLambda.getCapturedArg(int),;1
getCapturedArgCount,1,1,Get the count of dynamic arguments to the lambda capture site.,;java.lang.invoke.SerializedLambda.getCapturedArgCount(),;1
getCapturingClass,1,1,Get the name of the class that captured this lambda.,;java.lang.invoke.SerializedLambda.getCapturingClass(),;1
getCAPublicKey,1,1,Returns the public key of the most-trusted CA.,;java.security.cert.TrustAnchor.getCAPublicKey(),;1
getCaretColor,1,1,Fetches the current color used to render the caret.,;javax.swing.text.JTextComponent.getCaretColor(),;1
getCaretListeners,1,1,Returns an array of all the caret listeners registered on this text component.,;javax.swing.text.JTextComponent.getCaretListeners(),;1
getCatalogName,1,1,Retrieves the catalog name of the table from which the value in the designated column was derived.,;javax.sql.rowset.RowSetMetaDataImpl.getCatalogName(int),;1
getCategories,1,1,Returns an Iterator of Class objects indicating the current set of categories. The iterator will be empty if no categories exist.,;javax.imageio.spi.ServiceRegistry.getCategories(),;1
getCause,1,1,"Returns the cause of this throwable or null if the cause is nonexistent or unknown. (The cause is the throwable that caused this throwable to get thrown.) This implementation returns the cause that was supplied via one of the constructors requiring a Throwable, or that was set after creation with the initCause(Throwable) method. While it is typically unnecessary to override this method, a subclass can override it to return a cause set by some other means. This is appropriate for a ""legacy chained throwable"" that predates the addition of chained exceptions to Throwable. Note that it is not necessary to override any of the PrintStackTrace methods, all of which invoke the getCause method to determine the cause of a throwable.",;java.lang.Throwable.getCause(),;1
getCellLength,1,1,"Returns the width (if HORIZONTAL) or height (if VERTICAL) of each of the individual cells/units to be rendered in the progress bar. However, for text rendering simplification and aesthetic considerations, this function will return 1 when the progress string is being rendered.",;javax.swing.plaf.basic.BasicProgressBarUI.getCellLength(),;1
getCellRect,1,1,"Returns a rectangle for the cell that lies at the intersection of row and column. If includeSpacing is true then the value returned has the full height and width of the row and column specified. If it is false, the returned rectangle is inset by the intercell spacing to return the true bounds of the rendering or editing component as it will be set during rendering. If the column index is valid but the row index is less than zero the method returns a rectangle with the y and height values set appropriately and the x and width values both set to zero. In general, when either the row or column indices indicate a cell outside the appropriate range, the method returns a rectangle depicting the closest edge of the closest cell that is within the table's range. When both row and column indices are out of range the returned rectangle covers the closest point of the closest cell. In all cases, calculations that use this method to calculate results along one axis will not fail because of anomalies in calculations along the other axis. When the cell is not valid the includeSpacing parameter is ignored.",";javax.swing.JTable.getCellRect(int,int,boolean)",;1
getCellSelectionEnabled,1,1,Returns true if both row and column selection models are enabled. Equivalent to getRowSelectionAllowed() &amp;&amp; getColumnSelectionAllowed().,;javax.swing.JTable.getCellSelectionEnabled(),;1
getCellSpacing,1,1,"Returns the spacing between each of the cells/units in the progress bar. However, for text rendering simplification and aesthetic considerations, this function will return 0 when the progress string is being rendered.",;javax.swing.plaf.basic.BasicProgressBarUI.getCellSpacing(),;1
getCenterX,1,1,Returns the X coordinate of the center of the framing rectangle of the Shape in double precision.,;java.awt.geom.RectangularShape.getCenterX(),;1
getCenterY,1,1,Returns the Y coordinate of the center of the framing rectangle of the Shape in double precision.,;java.awt.geom.RectangularShape.getCenterY(),;1
getCertificateAlias,1,1,"Returns the (alias) name of the first keystore entry whose certificate matches the given certificate. This method attempts to match the given certificate with each keystore entry. If the entry being considered was created by a call to setCertificateEntry, or created by a call to setEntry with a TrustedCertificateEntry, then the given certificate is compared to that entry's certificate. If the entry being considered was created by a call to setKeyEntry, or created by a call to setEntry with a PrivateKeyEntry, then the given certificate is compared to the first element of that entry's certificate chain.",;java.security.KeyStore.getCertificateAlias(Certificate),;1
getCertificateChecking,1,1,"Returns the certificate being checked. This is not a criterion. Rather, it is optional information that may help a CertStore find CRLs that would be relevant when checking revocation for the specified certificate. If the value returned is null, then no such optional information is provided.",;java.security.cert.X509CRLSelector.getCertificateChecking(),;1
getCertificateIssuer,1,1,"Get the issuer of the X509Certificate described by this entry. If the certificate issuer is also the CRL issuer, this method returns null. This method is used with indirect CRLs. The default implementation always returns null. Subclasses that wish to support indirect CRLs should override it.",;java.security.cert.X509CRLEntry.getCertificateIssuer(),;1
getCertificateValid,1,1,"Returns the certificateValid criterion. The specified date must fall within the certificate validity period for the X509Certificate. If null, no certificateValid check will be done. Note that the Date returned is cloned to protect against subsequent modifications.",;java.security.cert.X509CertSelector.getCertificateValid(),;1
getCertPath,1,1,"Returns the built and validated certification path. The CertPath object does not include the trust anchor. Instead, use the getTrustAnchor() method to obtain the TrustAnchor that served as the trust anchor for the certification path.",;java.security.cert.PKIXCertPathBuilderResult.getCertPath(),;1
getCertPathCheckers,1,1,"Returns the List of certification path checkers. The returned List is immutable, and each PKIXCertPathChecker in the List is cloned to protect against subsequent modifications.",;java.security.cert.PKIXParameters.getCertPathCheckers(),;1
getCertPathEncodings,1,1,"Returns an iteration of the CertPath encodings supported by this certificate factory, with the default encoding first. See the CertPath Encodings section in the Java Cryptography Architecture Standard Algorithm Name Documentation for information about standard encoding names and their formats. Attempts to modify the returned Iterator via its remove method result in an UnsupportedOperationException.",;java.security.cert.CertificateFactory.getCertPathEncodings(),;1
getCertStoreParameters,1,1,Returns the parameters used to initialize this CertStore. Note that the CertStoreParameters object is cloned before it is returned.,;java.security.cert.CertStore.getCertStoreParameters(),;1
getCertStores,1,1,Returns an immutable List of CertStores that are used to find certificates and CRLs.,;java.security.cert.PKIXParameters.getCertStores(),;1
getChanged,1,1,Returns the Component at the top of the hierarchy which was changed.,;java.awt.event.HierarchyEvent.getChanged(),;1
getChangedParent,1,1,"Returns the parent of the Component returned by getChanged(). For a HIERARCHY_CHANGED event where the change was of type PARENT_CHANGED via a call to Container.add, the parent returned is the parent after the add operation. For a HIERARCHY_CHANGED event where the change was of type PARENT_CHANGED via a call to Container.remove, the parent returned is the parent before the remove operation. For all other events and types, the parent returned is the parent during the operation.",;java.awt.event.HierarchyEvent.getChangedParent(),;1
getChangeFlags,1,1,Returns a bitmask which indicates the type(s) of HIERARCHY_CHANGED events represented in this event object. The bits have been bitwise-ored together.,;java.awt.event.HierarchyEvent.getChangeFlags(),;1
getChangeInfo,1,1,"Retrieves the change information for this event. The value of the change information is service-specific. For example, it could be an ID that identifies the change in a change log on the server.",;javax.naming.event.NamingEvent.getChangeInfo(),;1
getChannels,1,1,"Obtains the number of channels. When this AudioFormat is used for queries (e.g. AudioSystem.isConversionSupported) or capabilities (e.g. DataLine.Info.getFormats), a return value of AudioSystem.NOT_SPECIFIED means that any (positive) number of channels is acceptable.",;javax.sound.sampled.AudioFormat.getChannels(),;1
getCharacterAttributeRun,1,1,Fetches the element representing the current run of character attributes for the caret.,;javax.swing.text.StyledEditorKit.getCharacterAttributeRun(),;1
getCharacterAttributes,1,1,"Fetches the character attributes in effect at the current location of the caret, or null.",;javax.swing.JTextPane.getCharacterAttributes(),;1
getCharacterCount,1,1,Returns the number of characters represented by this TextLayout.,;java.awt.font.TextLayout.getCharacterCount(),;1
getCharacterElement,1,1,Gets a character element based on a position.,;javax.swing.text.DefaultStyledDocument.getCharacterElement(int),;1
getCharacterEncodingScheme,1,1,Description copied from interface:XMLStreamReader,;javax.xml.stream.util.StreamReaderDelegate.getCharacterEncodingScheme(),;1
getCharacterLevel,1,1,Returns the level of the character at index. Indices -1 and characterCount are assigned the base level of this TextLayout.,;java.awt.font.TextLayout.getCharacterLevel(int),;1
getCharIndex,1,1,Returns the index of the character hit.,;java.awt.font.TextHitInfo.getCharIndex(),;1
getCharParameter,1,1,A convenience method to return a parameter as a char. An exception is thrown if the parameter is null or not a Character.,;java.awt.image.renderable.ParameterBlock.getCharParameter(int),;1
getCheckboxGroup,1,1,Determines this check box's group.,;java.awt.Checkbox.getCheckboxGroup(),;1
getCheckBoxIcon,1,1,Returns a checkbox icon.,;javax.swing.plaf.metal.MetalIconFactory.getCheckBoxIcon(),;1
getChildAfter,1,1,"Returns the child in this node's child array that immediately follows aChild, which must be a child of this node. If aChild is the last child, returns null. This method performs a linear search of this node's children for aChild and is O(n) where n is the number of children; to traverse the entire array of children, use an enumeration instead.",;javax.swing.tree.DefaultMutableTreeNode.getChildAfter(TreeNode),;1
getChildBeanContextChild,1,1,Gets the BeanContextChild (if any) of the specified child,;java.beans.beancontext.BeanContextSupport.getChildBeanContextChild(Object),;1
getChildBeanContextMembershipListener,1,1,Gets the BeanContextMembershipListener (if any) of the specified child,;java.beans.beancontext.BeanContextSupport.getChildBeanContextMembershipListener(Object),;1
getChildBeanContextServicesListener,1,1,Gets the BeanContextServicesListener (if any) of the specified child.,;java.beans.beancontext.BeanContextServicesSupport.getChildBeanContextServicesListener(Object),;1
getChildBefore,1,1,"Returns the child in this node's child array that immediately precedes aChild, which must be a child of this node. If aChild is the first child, returns null. This method performs a linear search of this node's children for aChild and is O(n) where n is the number of children.",;javax.swing.tree.DefaultMutableTreeNode.getChildBefore(TreeNode),;1
getChildIndex,1,1,"Returns the index where the dropped data should be inserted with respect to the path returned by getPath(). For drop modes DropMode.USE_SELECTION and DropMode.ON, this index is unimportant (and it will always be -1) as the only interesting data is the path over which the drop operation occurred. For drop mode DropMode.INSERT, this index indicates the index at which the data should be inserted into the parent path represented by getPath(). -1 indicates that the drop occurred over the parent itself, and in most cases should be treated as inserting into either the beginning or the end of the parent's list of children. For DropMode.ON_OR_INSERT, this value will be an insert index, as described above, or -1 if the drop occurred over the path itself.",;javax.swing.JTree.DropLocation.getChildIndex(),;1
getChildIndices,1,1,"Returns the values of the child indexes. If this is a removal event the indexes point to locations in the initial list where items were removed. If it is an insert, the indices point to locations in the final list where the items were added. For node changes, the indices point to the locations of the modified nodes.",;javax.swing.event.TreeModelEvent.getChildIndices(),;1
getChildNames,1,1,Description copied from interface:IIOMetadataFormat,;javax.imageio.metadata.IIOMetadataFormatImpl.getChildNames(String),;1
getChildNodes,1,1,"Returns a NodeList that contains all children of this node. If there are no children, this is a NodeList containing no nodes.",;javax.imageio.metadata.IIOMetadataNode.getChildNodes(),;1
getChildPolicy,1,1,Description copied from interface:IIOMetadataFormat,;javax.imageio.metadata.IIOMetadataFormatImpl.getChildPolicy(String),;1
getChildPropertyChangeListener,1,1,Gets the PropertyChangeListener (if any) of the specified child,;java.beans.beancontext.BeanContextSupport.getChildPropertyChangeListener(Object),;1
getChildren,1,1,Returns the objects that are children of the node identified by getPath at the locations specified by getChildIndices. If this is a removal event the returned objects are no longer children of the parent node.,;javax.swing.event.TreeModelEvent.getChildren(),;1
getChildrenAdded,1,1,Gets a list of children that were added.,;javax.swing.text.AbstractDocument.ElementEdit.getChildrenAdded(),;1
getChildrenRemoved,1,1,Gets a list of children that were removed.,;javax.swing.text.AbstractDocument.ElementEdit.getChildrenRemoved(),;1
getChildSerializable,1,1,Gets the Serializable (if any) associated with the specified Child,;java.beans.beancontext.BeanContextSupport.getChildSerializable(Object),;1
getChildState,1,1,Fetch the object representing the layout state of of the child at the given index.,;javax.swing.text.AsyncBoxView.getChildState(int),;1
getChildVetoableChangeListener,1,1,Gets the VetoableChangeListener (if any) of the specified child,;java.beans.beancontext.BeanContextSupport.getChildVetoableChangeListener(Object),;1
getChildVisibility,1,1,Gets the Component (if any) associated with the specified child.,;java.beans.beancontext.BeanContextSupport.getChildVisibility(Object),;1
getChoices,1,1,Get the list of choices.,;javax.security.auth.callback.ChoiceCallback.getChoices(),;1
getChoosableFileFilters,1,1,Gets the list of user choosable file filters.,;javax.swing.JFileChooser.getChoosableFileFilters(),;1
getChooserPanels,1,1,Returns the specified color panels.,;javax.swing.JColorChooser.getChooserPanels(),;1
getCipherSuites,1,1,Returns a copy of the array of ciphersuites or null if none have been set.,;javax.net.ssl.SSLParameters.getCipherSuites(),;1
getClass,1,1,"Returns the runtime class of this Object. The returned Class object is the object that is locked by static synchronized methods of the represented class. The actual result type is Class&lt;? extends |X|&gt; where |X| is the erasure of the static type of the expression on which getClass is called. For example, no cast is required in this code fragment:Number n = 0; Class&lt;? extends Number&gt; c = n.getClass();",;java.lang.Object.getClass(),;1
getClassContext,1,1,"Returns the current execution stack as an array of classes. The length of the array is the number of methods on the execution stack. The element at index 0 is the class of the currently executing method, the element at index 1 is the class of that method's caller, and so on.",;java.lang.SecurityManager.getClassContext(),;1
getClasses,1,1,"Returns an array containing Class objects representing all the public classes and interfaces that are members of the class represented by this Class object. This includes public class and interface members inherited from superclasses and public class and interface members declared by the class. This method returns an array of length 0 if this Class object has no public member classes or interfaces. This method also returns an array of length 0 if this Class object represents a primitive type, an array class, or void.",;java.lang.Class.getClasses(),;1
getClassLoadingLock,1,1,"Returns the lock object for class loading operations. For backward compatibility, the default implementation of this method behaves as follows. If this ClassLoader object is registered as parallel capable, the method returns a dedicated object associated with the specified class name. Otherwise, the method returns this ClassLoader object.",;java.lang.ClassLoader.getClassLoadingLock(String),;1
getClassLoadingMXBean,1,1,Returns the managed bean for the class loading system of the Java virtual machine.,;java.lang.management.ManagementFactory.getClassLoadingMXBean(),;1
getClickCount,1,1,Returns the number of mouse clicks associated with this event.,;java.awt.event.MouseEvent.getClickCount(),;1
getClickCountToStart,1,1,Returns the number of clicks needed to start editing.,;javax.swing.DefaultCellEditor.getClickCountToStart(),;1
getClient,1,1,Returns the client principal associated with this ticket.,;javax.security.auth.kerberos.KerberosTicket.getClient(),;1
getClientAddresses,1,1,Returns a list of addresses from where the ticket can be used.,;javax.security.auth.kerberos.KerberosTicket.getClientAddresses(),;1
getClientHost,1,1,Returns a string representation of the client host for the remote method invocation being processed in the current thread.,;java.rmi.server.RemoteServer.getClientHost(),;1
getClientProperty,1,1,Returns the value of the property with the specified key. Only properties added with putClientProperty will return a non-null value.,;javax.swing.JComponent.getClientProperty(Object),;1
getClientSessionContext,1,1,"Returns the client session context, which represents the set of SSL sessions available for use during the handshake phase of client-side SSL sockets. This context may be unavailable in some environments, in which case this method returns null. For example, when the underlying SSL provider does not provide an implementation of SSLSessionContext interface, this method returns null. A non-null session context is returned otherwise.",;javax.net.ssl.SSLContext.getClientSessionContext(),;1
getClipRect,1,1,"Deprecated.As of JDK version 1.1, replaced by getClipBounds().",;java.awt.Graphics.getClipRect(),;1
getClosedIcon,1,1,Returns the icon used to represent non-leaf nodes that are not expanded.,;javax.swing.tree.DefaultTreeCellRenderer.getClosedIcon(),;1
getClosestPositionTo,1,1,Returns the closest model position to x. rowIndex gives the index of the view that corresponds that should be looked in.,";javax.swing.text.ParagraphView.getClosestPositionTo(int,Position.Bias,Shape,int,Position.Bias[],int,int)",;1
getClosestRowForLocation,1,1,"Returns the row to the node that is closest to x,y. If no nodes are viewable or there is no model, returns -1. Otherwise, it always returns a valid row. To test if the returned object is exactly at x, y, get the bounds for the node at the returned row and test x, y against that.",";javax.swing.JTree.getClosestRowForLocation(int,int)",;1
getCode,1,1,Gets the value of the CODE attribute of the MLET tag.,;javax.management.loading.MLetContent.getCode(),;1
getCodebase,1,1,"Returns the codebase, if any, for the given class.",;javax.rmi.CORBA.Util.getCodebase(Class),;1
getCodeSource,1,1,Returns the CodeSource of this domain.,;java.security.ProtectionDomain.getCodeSource(),;1
getCofactor,1,1,Returns the cofactor.,;java.security.spec.ECParameterSpec.getCofactor(),;1
getCollection,1,1,"Returns the Collection from which Certificates and CRLs are retrieved. This is not a copy of the Collection, it is a reference. This allows the caller to subsequently add or remove Certificates or CRLs from the Collection.",;java.security.cert.CollectionCertStoreParameters.getCollection(),;1
getColor1,1,1,Returns the color C1 anchored by the point P1.,;java.awt.GradientPaint.getColor1(),;1
getColor2,1,1,Returns the color C2 anchored by the point P2.,;java.awt.GradientPaint.getColor2(),;1
getColorForState,1,1,Returns the color for the specified state. This should NOT call any methods on the JComponent.,";javax.swing.plaf.synth.SynthStyle.getColorForState(SynthContext,ColorType)",;1
getColorFromModel,1,1,Returns the color that is currently selected.,;javax.swing.colorchooser.AbstractColorChooserPanel.getColorFromModel(),;1
getColors,1,1,"Returns a copy of the array of colors used by this gradient. The first color maps to the first value in the fractions array, and the last color maps to the last value in the fractions array.",;java.awt.MultipleGradientPaint.getColors(),;1
getColorSelectionModel,1,1,Returns the model that the chooser panel is editing.,;javax.swing.colorchooser.AbstractColorChooserPanel.getColorSelectionModel(),;1
getColorSpaceType,1,1,"Returns the color space type. Returns one of the color space type constants defined by the ColorSpace class. This is the ""input"" color space of the profile. The type defines the number of components of the color space and the interpretation, e.g. TYPE_RGB identifies a color space with three components - red, green, and blue. It does not define the particular color characteristics of the space, e.g. the chromaticities of the primaries.",;java.awt.color.ICC_Profile.getColorSpaceType(),;1
getColumnClassName,1,1,"Retrieves the fully-qualified name of the class in the Java programming language to which a value in the designated column will be mapped. For example, if the value is an int, the class name returned by this method will be java.lang.Integer. If the value in the designated column has a custom mapping, this method returns the name of the class that implements SQLData. When the method ResultSet.getObject is called to retrieve a value from the designated column, it will create an instance of this class or one of its subclasses.",;javax.sql.rowset.RowSetMetaDataImpl.getColumnClassName(int),;1
getColumnDisplaySize,1,1,Retrieves the normal maximum width in chars of the designated column.,;javax.sql.rowset.RowSetMetaDataImpl.getColumnDisplaySize(int),;1
getColumnIndex,1,1,"Returns the index of the first column in the tableColumns array whose identifier is equal to identifier, when compared using equals.",;javax.swing.table.DefaultTableColumnModel.getColumnIndex(Object),;1
getColumnIndexAtX,1,1,"Returns the index of the column that lies at position x, or -1 if no column covers this point. In keeping with Swing's separable model architecture, a TableColumnModel does not know how the table columns actually appear on screen. The visual presentation of the columns is the responsibility of the view/controller object using this model (typically JTable). The view/controller need not display the columns sequentially from left to right. For example, columns could be displayed from right to left to accommodate a locale preference or some columns might be hidden at the request of the user. Because the model does not know how the columns are laid out on screen, the given xPosition should not be considered to be a coordinate in 2D graphics space. Instead, it should be considered to be a width from the start of the first column in the model. If the column index for a given X coordinate in 2D space is required, JTable.columnAtPoint can be used instead.",;javax.swing.table.DefaultTableColumnModel.getColumnIndexAtX(int),;1
getColumnLabel,1,1,Retrieves the suggested column title for the designated column for use in printouts and displays.,;javax.sql.rowset.RowSetMetaDataImpl.getColumnLabel(int),;1
getColumnMargin,1,1,Returns the width margin for TableColumn. The default columnMargin is 1.,;javax.swing.table.DefaultTableColumnModel.getColumnMargin(),;1
getColumnModelListeners,1,1,Returns an array of all the column model listeners registered on this model.,;javax.swing.table.DefaultTableColumnModel.getColumnModelListeners(),;1
getColumnType,1,1,Retrieves the type code (one of the java.sql.Types constants) for the SQL type of the value stored in the designated column.,;javax.sql.rowset.RowSetMetaDataImpl.getColumnType(int),;1
getColumnTypeName,1,1,Retrieves the DBMS-specific type name for values stored in the designated column.,;javax.sql.rowset.RowSetMetaDataImpl.getColumnTypeName(int),;1
getCommandClass,1,1,"Return the command's class name. This method MAY return null in cases where a CommandMap subclassed CommandInfo for its own purposes. In other words, it might not be possible to create the correct state in the command by merely knowing its class name. DO NOT DEPEND ON THIS METHOD RETURNING A VALID VALUE!",;javax.activation.CommandInfo.getCommandClass(),;1
getCommandEnvironment,1,1,Returns the group's command-environment control object.,;java.rmi.activation.ActivationGroupDesc.getCommandEnvironment(),;1
getCommandName,1,1,Return the command verb.,;javax.activation.CommandInfo.getCommandName(),;1
getCommandObject,1,1,"Return the instantiated JavaBean component. Begin by instantiating the component with Beans.instantiate(). If the bean implements the javax.activation.CommandObject interface, call its setCommandContext method. If the DataHandler parameter is null, then the bean is instantiated with no data. NOTE: this may be useful if for some reason the DataHandler that is passed in throws IOExceptions when this method attempts to access its InputStream. It will allow the caller to retrieve a reference to the bean if it can be instantiated. If the bean does NOT implement the CommandObject interface, this method will check if it implements the java.io.Externalizable interface. If it does, the bean's readExternal method will be called if an InputStream can be acquired from the DataHandler.",";javax.activation.CommandInfo.getCommandObject(DataHandler,ClassLoader)",;1
getCommandOptions,1,1,Fetch the configured java command options.,;java.rmi.activation.ActivationGroupDesc.CommandEnvironment.getCommandOptions(),;1
getCommandPath,1,1,Fetch the configured path-qualified java command name.,;java.rmi.activation.ActivationGroupDesc.CommandEnvironment.getCommandPath(),;1
getCommentURL,1,1,"Returns the comment URL describing the purpose of this cookie, or null if the cookie has no comment URL.",;java.net.HttpCookie.getCommentURL(),;1
getCommitsOnValidEdit,1,1,Returns when edits are published back to the JFormattedTextField.,;javax.swing.text.DefaultFormatter.getCommitsOnValidEdit(),;1
getCommitted,1,1,Returns the amount of memory in bytes that is committed for the Java virtual machine to use. This amount of memory is guaranteed for the Java virtual machine to use.,;java.lang.management.MemoryUsage.getCommitted(),;1
getCommittedCharacterCount,1,1,Gets the number of committed characters in the text.,;java.awt.event.InputMethodEvent.getCommittedCharacterCount(),;1
getCommonPoolParallelism,1,1,Returns the targeted parallelism level of the common pool.,;java.util.concurrent.ForkJoinPool.getCommonPoolParallelism(),;1
getCompilationMXBean,1,1,Returns the managed bean for the compilation system of the Java virtual machine. This method returns null if the Java virtual machine has no compilation system.,;java.lang.management.ManagementFactory.getCompilationMXBean(),;1
getCompletedTaskCount,1,1,"Returns the approximate total number of tasks that have completed execution. Because the states of tasks and threads may change dynamically during computation, the returned value is only an approximation, but one that does not ever decrease across successive calls.",;java.util.concurrent.ThreadPoolExecutor.getCompletedTaskCount(),;1
getCompleter,1,1,"Returns the completer established in this task's constructor, or null if none.",;java.util.concurrent.CountedCompleter.getCompleter(),;1
getCompletions,1,1,Returns an empty iterable of completions.,";javax.annotation.processing.AbstractProcessor.getCompletions(Element,AnnotationMirror,ExecutableElement,String)",;1
getComponentColor,1,1,Get a color property from the given JComponent. First checks for a getXXX() method and if that fails checks for a client property with key property. If that still fails to return a Color then defaultColor is returned.,";javax.swing.plaf.nimbus.AbstractRegionPainter.getComponentColor(JComponent,String,Color,float,float,int)",;1
getComponentCount,1,1,Gets the number of components in this panel. Note: This method should be called under AWT tree lock.,;java.awt.Container.getComponentCount(),;1
getComponentCountInLayer,1,1,Returns the number of children currently in the specified layer.,;javax.swing.JLayeredPane.getComponentCountInLayer(int),;1
getComponentGraphics,1,1,Returns the graphics object used to paint this component. If DebugGraphics is turned on we create a new DebugGraphics object if necessary. Otherwise we just configure the specified graphics object's foreground and font.,;javax.swing.JComponent.getComponentGraphics(Graphics),;1
getComponentListeners,1,1,Returns an array of all the component listeners registered on this component.,;java.awt.Component.getComponentListeners(),;1
getComponentOrientation,1,1,Retrieves the language-sensitive orientation that is to be used to order the elements or text within this component. LayoutManager and Component subclasses that wish to respect orientation should call this method to get the component's orientation before performing layout or drawing.,;java.awt.Component.getComponentOrientation(),;1
getComponentPopupMenu,1,1,"Returns JPopupMenu that assigned for this component. If this component does not have a JPopupMenu assigned to it and getInheritsPopupMenu is true, this will return getParent().getComponentPopupMenu() (assuming the parent is valid.)",;javax.swing.JComponent.getComponentPopupMenu(),;1
getComponentsInLayer,1,1,Returns an array of the components in the specified layer.,;javax.swing.JLayeredPane.getComponentsInLayer(int),;1
getComponentState,1,1,"Returns the state of the widget, which is a bitmask of the values defined in SynthConstants. A region will at least be in one of ENABLED, MOUSE_OVER, PRESSED or DISABLED.",;javax.swing.plaf.synth.SynthContext.getComponentState(),;1
getComponentToLayer,1,1,Returns the hashtable that maps components to layers.,;javax.swing.JLayeredPane.getComponentToLayer(),;1
getComponentType,1,1,Returns the Class representing the component type of an array. If this class does not represent an array class this method returns null.,;java.lang.Class.getComponentType(),;1
getComponentZOrder,1,1,"Returns the z-order index of the component inside the container. The higher a component is in the z-order hierarchy, the lower its index. The component with the lowest z-order index is painted last, above all other child components.",;java.awt.Container.getComponentZOrder(Component),;1
getComposite,1,1,Returns the current Composite in the Graphics2D context.,;java.awt.Graphics2D.getComposite(),;1
getCompositeData,1,1,Return the CompositeData that was supplied to the constructor.,;javax.management.openmbean.CompositeDataInvocationHandler.getCompositeData(),;1
getCompositeType,1,1,Returns the composite type of this composite data instance.,;javax.management.openmbean.CompositeDataSupport.getCompositeType(),;1
getCompressedSize,1,1,"Returns the size of the compressed entry data. In the case of a stored entry, the compressed size will be the same as the uncompressed size of the entry.",;java.util.zip.ZipEntry.getCompressedSize(),;1
getCompressionMode,1,1,"Returns the current compression mode, if compression is supported.",;javax.imageio.ImageWriteParam.getCompressionMode(),;1
getCompressionQuality,1,1,"Returns the current compression quality setting. If there are multiple compression types but none has been set, an IllegalStateException is thrown. The default implementation checks that compression is supported and that the compression mode is MODE_EXPLICIT. If so, if getCompressionTypes() is null or getCompressionType() is non-null, it returns the value of the compressionQuality instance variable.",;javax.imageio.ImageWriteParam.getCompressionQuality(),;1
getCompressionThreshold,1,1,Returns the maximum number of key/value pairs to try and compress into unique/immutable sets. Any sets above this limit will use hashtables and be a MutableAttributeSet.,;javax.swing.text.StyleContext.getCompressionThreshold(),;1
getCompressionType,1,1,"Returns the currently set compression type, or null if none has been set. The type is returned as a String from among those returned by getCompressionTypes. If no compression type has been set, null is returned. The default implementation checks whether compression is supported and the compression mode is MODE_EXPLICIT. If so, it returns the value of the compressionType instance variable.",;javax.imageio.ImageWriteParam.getCompressionType(),;1
getCompressionTypes,1,1,"Returns a list of available compression types, as an array or Strings, or null if a compression type may not be chosen using these interfaces. The array returned is a copy. If the writer only offers a single, mandatory form of compression, it is not necessary to provide any named compression types. Named compression types should only be used where the user is able to make a meaningful choice between different schemes. The default implementation checks if compression is supported and throws an UnsupportedOperationException if not. Otherwise, it returns a clone of the compressionTypes instance variable if it is non-null, or else returns null.",;javax.imageio.ImageWriteParam.getCompressionTypes(),;1
getConcurrency,1,1,Returns the concurrency for this RowSet object. The default is CONCUR_UPDATABLE for both connected and disconnected RowSet objects. An application can call the method setConcurrency at any time to change a RowSet object's concurrency.,;javax.sql.rowset.BaseRowSet.getConcurrency(),;1
getConditionForKeyStroke,1,1,"Returns the condition that determines whether a registered action occurs in response to the specified keystroke. For Java 2 platform v1.3, a KeyStroke can be associated with more than one condition. For example, 'a' could be bound for the two conditions WHEN_FOCUSED and WHEN_IN_FOCUSED_WINDOW condition.",;javax.swing.JComponent.getConditionForKeyStroke(KeyStroke),;1
getConfigurations,1,1,Returns all of the GraphicsConfiguration objects associated with this GraphicsDevice.,;java.awt.GraphicsDevice.getConfigurations(),;1
getConnectControls,1,1,Description copied from interface:LdapContext,;javax.naming.ldap.InitialLdapContext.getConnectControls(),;1
getConnectionIds,1,1,Description copied from interface:JMXConnectorServerMBean,;javax.management.remote.JMXConnectorServer.getConnectionIds(),;1
getConnectTimeout,1,1,"Returns setting for connect timeout. 0 return implies that the option is disabled (i.e., timeout of infinity).",;java.net.URLConnection.getConnectTimeout(),;1
getContainerGap,1,1,Returns the amount of space to place between the component and specified edge of its parent.,";javax.swing.LayoutStyle.getContainerGap(JComponent,int,Container)",;1
getContainerListeners,1,1,Returns an array of all the container listeners registered on this container.,;java.awt.Container.getContainerListeners(),;1
getContentDescription,1,1,Retrieves a description of this SOAPMessage object's content.,;javax.xml.soap.SOAPMessage.getContentDescription(),;1
getContentEncoding,1,1,Returns the value of the content-encoding header field.,;java.net.URLConnection.getContentEncoding(),;1
getContentLength,1,1,"Returns the value of the content-length header field. Note: getContentLengthLong() should be preferred over this method, since it returns a long instead and is therefore more portable.",;java.net.URLConnection.getContentLength(),;1
getContentLengthLong,1,1,Returns the value of the content-length header field as a long.,;java.net.URLConnection.getContentLengthLong(),;1
getContextClassLoader,1,1,"Returns the context ClassLoader for this Thread. The context ClassLoader is provided by the creator of the thread for use by code running in this thread when loading classes and resources. If not set, the default is the ClassLoader context of the parent Thread. The context ClassLoader of the primordial thread is typically set to the class loader used to load the application. If a security manager is present, and the invoker's class loader is not null and is not the same as or an ancestor of the context class loader, then this method invokes the security manager's checkPermission method with a RuntimePermission(""getClassLoader"") permission to verify that retrieval of the context class loader is permitted.",;java.lang.Thread.getContextClassLoader(),;1
getContextPath,1,1,"Returns the context path of all the endpoints in an application. This path is the portion of the request URI that indicates the context of the request. The context path always comes first in a request URI. The path starts with a ""/"" character but does not end with a ""/"" character. If this method returns """", the request is for default context. The container does not decode this string. Context path is used in computing the endpoint address. See HttpContext.getPath()",;javax.xml.ws.spi.http.HttpExchange.getContextPath(),;1
getContinuationContext,1,1,"Creates a context in which to continue a context operation. In performing an operation on a name that spans multiple namespaces, a context from one naming system may need to pass the operation on to the next naming system. The context implementation does this by first constructing a CannotProceedException containing information pinpointing how far it has proceeded. It then obtains a continuation context from JNDI by calling getContinuationContext. The context implementation should then resume the context operation by invoking the same operation on the continuation context, using the remainder of the name that has not yet been resolved. Before making use of the cpe parameter, this method updates the environment associated with that object by setting the value of the property CPE to cpe. This property will be inherited by the continuation context, and may be used by that context's service provider to inspect the fields of this exception.",;javax.naming.spi.NamingManager.getContinuationContext(CannotProceedException),;1
getContinuationDirContext,1,1,"Creates a context in which to continue a DirContext operation. Operates just like NamingManager.getContinuationContext(), only the continuation context returned is a DirContext.",;javax.naming.spi.DirectoryManager.getContinuationDirContext(CannotProceedException),;1
getContinueExistingPeriodicTasksAfterShutdownPolicy,1,1,"Gets the policy on whether to continue executing existing periodic tasks even when this executor has been shutdown. In this case, these tasks will only terminate upon shutdownNow or after setting the policy to false when already shutdown. This value is by default false.",;java.util.concurrent.ScheduledThreadPoolExecutor.getContinueExistingPeriodicTasksAfterShutdownPolicy(),;1
getControlButtonsAreShown,1,1,Returns the value of the controlButtonsAreShown property.,;javax.swing.JFileChooser.getControlButtonsAreShown(),;1
getControlFlag,1,1,"Return the controlFlag (either REQUIRED, REQUISITE, SUFFICIENT, or OPTIONAL) for this LoginModule.",;javax.security.auth.login.AppConfigurationEntry.getControlFlag(),;1
getControlInstance,1,1,"Creates a control using this control factory. The factory is used by the service provider to return controls that it reads from the LDAP protocol as specialized control classes. Without this mechanism, the provider would be returning controls that only contained data in BER encoded format. Typically, ctl is a ""basic"" control containing BER encoded data. The factory is used to create a specialized control implementation, usually by decoding the BER encoded data, that provides methods to access that data in a type-safe and friendly manner. For example, a factory might use the BER encoded data in basic control and return an instance of a VirtualListReplyControl. If this factory cannot create a control using the argument supplied, it should return null. A factory should only throw an exception if it is sure that it is the only intended factory and that no other control factories should be tried. This might happen, for example, if the BER data in the control does not match what is expected of a control with the given OID. Since this method throws NamingException, any other internally generated exception that should be propagated must be wrapped inside a NamingException.",;javax.naming.ldap.ControlFactory.getControlInstance(Control),;1
getCookie,1,1,Retrieves the server-generated cookie. Null is returned when there are no more entries for the server to return.,;javax.naming.ldap.PagedResultsResponseControl.getCookie(),;1
getCookieStore,1,1,To retrieve current cookie store.,;java.net.CookieManager.getCookieStore(),;1
getCopyAction,1,1,"Returns an Action that performs copy operations to the clipboard. When performed, this action operates on the JComponent source of the ActionEvent by invoking exportToClipboard, with a COPY action, on the component's TransferHandler.",;javax.swing.TransferHandler.getCopyAction(),;1
getCorePoolSize,1,1,Returns the core number of threads.,;java.util.concurrent.ThreadPoolExecutor.getCorePoolSize(),;1
getCorner,1,1,Returns the Component at the specified corner.,;javax.swing.ScrollPaneLayout.getCorner(String),;1
getCountLimit,1,1,Retrieves the maximum number of entries that will be returned as a result of the search. 0 indicates that all entries will be returned.,;javax.naming.directory.SearchControls.getCountLimit(),;1
getCountry,1,1,"Returns the country/region code for this locale, which should either be the empty string, an uppercase ISO 3166 2-letter code, or a UN M.49 3-digit code.",;java.util.Locale.getCountry(),;1
getCrc,1,1,Returns the CRC-32 checksum of the uncompressed entry data.,;java.util.zip.ZipEntry.getCrc(),;1
getCreationDate,1,1,Returns the creation date of the entry identified by the given alias.,;java.security.KeyStore.getCreationDate(String),;1
getCreationTime,1,1,Returns the creation time of the entry. The creation time is from the extended timestamp fields of entry's optional extra data when read from a ZIP file or ZIP file formatted stream.,;java.util.zip.ZipEntry.getCreationTime(),;1
getCredentialClass,1,1,Returns the Class name of the Credential associated with this PrivateCredentialPermission.,;javax.security.auth.PrivateCredentialPermission.getCredentialClass(),;1
getCRLs,1,1,"Returns a Collection of CRLs that match the specified selector. If no CRLs match the selector, an empty Collection will be returned. For some CertStore types, the resulting Collection may not contain all of the CRLs that match the selector. For instance, an LDAP CertStore may not search all entries in the directory. Instead, it may just search entries that are likely to contain the CRLs it is looking for. Some CertStore implementations (especially LDAP CertStores) may throw a CertStoreException unless a non-null CRLSelector is provided that includes specific criteria that can be used to find the CRLs. Issuer names and/or the certificate to be checked are especially useful.",;java.security.cert.CertStore.getCRLs(CRLSelector),;1
getCrossFeedResolution,1,1,Returns this resolution attribute's cross feed direction resolution in the given units. The value is rounded to the nearest integer.,;javax.print.attribute.ResolutionSyntax.getCrossFeedResolution(int),;1
getCrossFeedResolutionDphi,1,1,Returns this resolution attribute's cross feed direction resolution in units of dphi. (For use in a subclass.),;javax.print.attribute.ResolutionSyntax.getCrossFeedResolutionDphi(),;1
getCrossPlatformLookAndFeelClassName,1,1,Returns the name of the LookAndFeel class that implements the default cross platform look and feel -- the Java Look and Feel (JLF). This value can be overriden by setting the swing.crossplatformlaf system property.,;javax.swing.UIManager.getCrossPlatformLookAndFeelClassName(),;1
getCurrencyCode,1,1,Gets the ISO 4217 currency code of this currency.,;java.util.Currency.getCurrencyCode(),;1
getCurrencySymbol,1,1,Returns the currency symbol for the currency of these DecimalFormatSymbols in their locale.,;java.text.DecimalFormatSymbols.getCurrencySymbol(),;1
getCurrent,1,1,"Deprecated.As of JDK version 1.1, replaced by getSelectedCheckbox().",;java.awt.CheckboxGroup.getCurrent(),;1
getCurrentDirectory,1,1,Returns the current directory.,;javax.swing.JFileChooser.getCurrentDirectory(),;1
getCurrentEvent,1,1,"Returns the the event currently being dispatched by the EventQueue associated with the calling thread. This is useful if a method needs access to the event, but was not designed to receive a reference to it as an argument. Note that this method should only be invoked from an application's event dispatching thread. If this method is invoked from another thread, null will be returned.",;java.awt.EventQueue.getCurrentEvent(),;1
getCurrentFocusCycleRoot,1,1,"Returns the current focus cycle root, if the current focus cycle root is in the same context as the calling thread. If the focus owner is itself a focus cycle root, then it may be ambiguous as to which Components represent the next and previous Components to focus during normal focus traversal. In that case, the current focus cycle root is used to differentiate among the possibilities. This method is intended to be used only by KeyboardFocusManagers and focus implementations. It is not for general client use.",;java.awt.KeyboardFocusManager.getCurrentFocusCycleRoot(),;1
getCurrentKeyboardFocusManager,1,1,Returns the current KeyboardFocusManager instance for the calling thread's context.,;java.awt.KeyboardFocusManager.getCurrentKeyboardFocusManager(),;1
getCurrentLineLength,1,1,Returns the current line length.,;javax.swing.text.AbstractWriter.getCurrentLineLength(),;1
getCurrentManager,1,1,Returns the current KeyboardFocusManager instance for the calling thread's context.,;javax.swing.FocusManager.getCurrentManager(),;1
getCurrentPoint,1,1,Returns the coordinates most recently added to the end of the path as a Point2D object.,;java.awt.geom.Path2D.getCurrentPoint(),;1
getCurrentServiceClasses,1,1,Description copied from interface:BeanContextServices,;java.beans.beancontext.BeanContextServicesSupport.getCurrentServiceClasses(),;1
getCurrentTheme,1,1,"Return the theme currently being used by MetalLookAndFeel. If the current theme is null, the default theme is created.",;javax.swing.plaf.metal.MetalLookAndFeel.getCurrentTheme(),;1
getCurrentWriter,1,1,Fetches the current writing thread if there is one. This can be used to distinguish whether a method is being called as part of an existing modification or if a lock needs to be acquired and a new transaction started.,;javax.swing.text.AbstractDocument.getCurrentWriter(),;1
getCursorType,1,1,"Deprecated.As of JDK version 1.1, replaced by Component.getCursor().",;java.awt.Frame.getCursorType(),;1
getCurve,1,1,Returns the elliptic curve that this parameter defines.,;java.security.spec.ECParameterSpec.getCurve(),;1
getCustomEditor,1,1,"A PropertyEditor may chose to make available a full custom Component that edits its property value. It is the responsibility of the PropertyEditor to hook itself up to its editor Component itself and to report property value changes by firing a PropertyChange event. The higher-level code that calls getCustomEditor may either embed the Component in some larger property sheet, or it may put it in its own individual dialog, or ...",;java.beans.PropertyEditorSupport.getCustomEditor(),;1
getCustomizerClass,1,1,Gets the Class object for the bean's customizer.,;java.beans.BeanDescriptor.getCustomizerClass(),;1
getCutAction,1,1,"Returns an Action that performs cut operations to the clipboard. When performed, this action operates on the JComponent source of the ActionEvent by invoking exportToClipboard, with a MOVE action, on the component's TransferHandler.",;javax.swing.TransferHandler.getCutAction(),;1
getCycleMethod,1,1,Returns the enumerated type which specifies cycling behavior.,;java.awt.MultipleGradientPaint.getCycleMethod(),;1
getDashArray,1,1,"Returns the array representing the lengths of the dash segments. Alternate entries in the array represent the user space lengths of the opaque and transparent segments of the dashes. As the pen moves along the outline of the Shape to be stroked, the user space distance that the pen travels is accumulated. The distance value is used to index into the dash array. The pen is opaque when its current cumulative distance maps to an even element of the dash array and transparent otherwise.",;java.awt.BasicStroke.getDashArray(),;1
getDashPhase,1,1,"Returns the current dash phase. The dash phase is a distance specified in user coordinates that represents an offset into the dashing pattern. In other words, the dash phase defines the point in the dashing pattern that will correspond to the beginning of the stroke.",;java.awt.BasicStroke.getDashPhase(),;1
getData1,1,1,Obtains the first data byte in the message.,;javax.sound.midi.ShortMessage.getData1(),;1
getData2,1,1,Obtains the second data byte in the message.,;javax.sound.midi.ShortMessage.getData2(),;1
getDataBitOffset,1,1,Returns the data bit offset in bits.,;java.awt.image.MultiPixelPackedSampleModel.getDataBitOffset(),;1
getDataBuffer,1,1,Returns the DataBuffer associated with this Raster.,;java.awt.image.Raster.getDataBuffer(),;1
getDataClass,1,1,"Obtains the class used by this sample to represent its data. The object returned by getData will be of this class. If this SoundbankResource object does not support direct access to its data, returns null.",;javax.sound.midi.SoundbankResource.getDataClass(),;1
getDataFlavors,1,1,Returns the data flavors for this transfer.,;javax.swing.TransferHandler.TransferSupport.getDataFlavors(),;1
getDataHandler,1,1,Gets the DataHandler object for this AttachmentPart object.,;javax.xml.soap.AttachmentPart.getDataHandler(),;1
getDataLength,1,1,Retrieves the number of data bytes associated with a particular status byte value.,;javax.sound.midi.ShortMessage.getDataLength(int),;1
getDatalink,1,1,Returns a new URL that is a copy of this SerialDatalink object.,;javax.sql.rowset.serial.SerialDatalink.getDatalink(),;1
getDataSource,1,1,"Return the DataSource associated with this instance of DataHandler. For DataHandlers that have been instantiated with a DataSource, this method returns the DataSource that was used to create the DataHandler object. In other cases the DataHandler constructs a DataSource from the data used to construct the DataHandler. DataSources created for DataHandlers not instantiated with a DataSource are cached for performance reasons.",;javax.activation.DataHandler.getDataSource(),;1
getDataSourceLock,1,1,Returns the current data source lock severity level active in this SyncProvider implementation.,;javax.sql.rowset.spi.SyncProvider.getDataSourceLock(),;1
getDataSourceName,1,1,"Returns the logical name that when supplied to a naming service that uses the Java Naming and Directory Interface (JNDI) API, will retrieve a javax.sql.DataSource object. This DataSource object can be used to establish a connection to the data source that it represents. Users should set either the url or the data source name property. The driver will use the property set most recently to establish a connection.",;javax.sql.rowset.BaseRowSet.getDataSourceName(),;1
getDataTypeSize,1,1,"Returns the size (in bits) of the data type, given a datatype tag.",;java.awt.image.DataBuffer.getDataTypeSize(int),;1
getDataVector,1,1,"Returns the Vector of Vectors that contains the table's data values. The vectors contained in the outer vector are each a single row of values. In other words, to get to the cell at row 1, column 5: ((Vector)getDataVector().elementAt(1)).elementAt(5);",;javax.swing.table.DefaultTableModel.getDataVector(),;1
getDateAndTime,1,1,"Returns the dateAndTime criterion. The specified date must be equal to or later than the value of the thisUpdate component of the X509CRL and earlier than the value of the nextUpdate component. There is no match if the X509CRL does not contain a nextUpdate component. If null, no dateAndTime check will be done. Note that the Date returned is cloned to protect against subsequent modifications.",;java.security.cert.X509CRLSelector.getDateAndTime(),;1
getDateFormatSymbols,1,1,Gets a copy of the date and time format symbols of this date format.,;java.text.SimpleDateFormat.getDateFormatSymbols(),;1
getDateTimeAfter,1,1,"Gets the local transition date-time, as would be expressed with the 'after' offset. This is the first date-time after the discontinuity, when the new offset applies. The combination of the 'before' date-time and offset represents the same instant as the 'after' date-time and offset.",;java.time.zone.ZoneOffsetTransition.getDateTimeAfter(),;1
getDateTimeBefore,1,1,"Gets the local transition date-time, as would be expressed with the 'before' offset. This is the date-time where the discontinuity begins expressed with the 'before' offset. At this instant, the 'after' offset is actually used, therefore the combination of this date-time and the 'before' offset will never occur. The combination of the 'before' date-time and offset represents the same instant as the 'after' date-time and offset.",;java.time.zone.ZoneOffsetTransition.getDateTimeBefore(),;1
getDaylightSavings,1,1,"Gets the amount of daylight savings in use for the specified instant in this zone. This provides access to historic information on how the amount of daylight savings has changed over time. This is the difference between the standard offset and the actual offset. Typically the amount is zero during winter and one hour during summer. Time-zones are second-based, so the nanosecond part of the duration will be zero. This default implementation calculates the duration from the actual and standard offsets.",;java.time.zone.ZoneRules.getDaylightSavings(Instant),;1
getDayOfMonthIndicator,1,1,"Gets the indicator of the day-of-month of the transition. If the rule defines an exact date then the day is the month of that date. If the rule defines a week where the transition might occur, then the day defines either the start of the end of the transition week. If the value is positive, then it represents a normal day-of-month, and is the earliest possible date that the transition can be. The date may refer to 29th February which should be treated as 1st March in non-leap years. If the value is negative, then it represents the number of days back from the end of the month where -1 is the last day of the month. In this case, the day identified is the latest possible date that the transition can be.",;java.time.zone.ZoneOffsetTransitionRule.getDayOfMonthIndicator(),;1
getDebugGraphicsOptions,1,1,Returns the state of graphics debugging.,;javax.swing.JComponent.getDebugGraphicsOptions(),;1
getDebugOptions,1,1,Returns the current debugging options for this DebugGraphics.,;javax.swing.DebugGraphics.getDebugOptions(),;1
getDecayTime,1,1,"Obtains the decay time, which is the amount of time over which the late reflections attenuate to effective zero. The effective zero value is implementation-dependent.",;javax.sound.sampled.ReverbType.getDecayTime(),;1
getDecimalFormatSymbols,1,1,"Returns a copy of the decimal format symbols, which is generally not changed by the programmer or user.",;java.text.DecimalFormat.getDecimalFormatSymbols(),;1
getDecimalStyle,1,1,Gets the DecimalStyle to be used during formatting.,;java.time.format.DateTimeFormatter.getDecimalStyle(),;1
getDeclaration,1,1,Translates a CSS declaration to an AttributeSet that represents the CSS declaration. Typically this would be called as a result of encountering an HTML style attribute.,;javax.swing.text.html.StyleSheet.getDeclaration(String),;1
getDeclaredClasses,1,1,"Returns an array of Class objects reflecting all the classes and interfaces declared as members of the class represented by this Class object. This includes public, protected, default (package) access, and private classes and interfaces declared by the class, but excludes inherited classes and interfaces. This method returns an array of length 0 if the class declares no classes or interfaces as members, or if this Class object represents a primitive type, an array class, or void.",;java.lang.Class.getDeclaredClasses(),;1
getDeclaredConstructor,1,1,"Returns a Constructor object that reflects the specified constructor of the class or interface represented by this Class object. The parameterTypes parameter is an array of Class objects that identify the constructor's formal parameter types, in declared order. If this Class object represents an inner class declared in a non-static context, the formal parameter types include the explicit enclosing instance as the first parameter.",;java.lang.Class.getDeclaredConstructor(Class&lt;?&gt;...),;1
getDeclaredConstructors,1,1,"Returns an array of Constructor objects reflecting all the constructors declared by the class represented by this Class object. These are public, protected, default (package) access, and private constructors. The elements in the array returned are not sorted and are not in any particular order. If the class has a default constructor, it is included in the returned array. This method returns an array of length 0 if this Class object represents an interface, a primitive type, an array class, or void. See The Java Language Specification, section 8.2.",;java.lang.Class.getDeclaredConstructors(),;1
getDeclaredField,1,1,"Returns a Field object that reflects the specified declared field of the class or interface represented by this Class object. The name parameter is a String that specifies the simple name of the desired field. If this Class object represents an array type, then this method does not find the length field of the array type.",;java.lang.Class.getDeclaredField(String),;1
getDeclaredFields,1,1,"Returns an array of Field objects reflecting all the fields declared by the class or interface represented by this Class object. This includes public, protected, default (package) access, and private fields, but excludes inherited fields. If this Class object represents a class or interface with no declared fields, then this method returns an array of length 0. If this Class object represents an array type, a primitive type, or void, then this method returns an array of length 0. The elements in the returned array are not sorted and are not in any particular order.",;java.lang.Class.getDeclaredFields(),;1
getDeclaredMethod,1,1,"Returns a Method object that reflects the specified declared method of the class or interface represented by this Class object. The name parameter is a String that specifies the simple name of the desired method, and the parameterTypes parameter is an array of Class objects that identify the method's formal parameter types, in declared order. If more than one method with the same parameter types is declared in a class, and one of these methods has a return type that is more specific than any of the others, that method is returned; otherwise one of the methods is chosen arbitrarily. If the name is ""&lt;init&gt;""or ""&lt;clinit&gt;"" a NoSuchMethodException is raised. If this Class object represents an array type, then this method does not find the clone() method.",";java.lang.Class.getDeclaredMethod(String,Class&lt;?&gt;...)",;1
getDeclaredMethods,1,1,"Returns an array containing Method objects reflecting all the declared methods of the class or interface represented by this Class object, including public, protected, default (package) access, and private methods, but excluding inherited methods. If this Class object represents a type that has multiple declared methods with the same name and parameter types, but different return types, then the returned array has a Method object for each such method. If this Class object represents a type that has a class initialization method &lt;clinit&gt;, then the returned array does not have a corresponding Method object. If this Class object represents a class or interface with no declared methods, then the returned array has length 0. If this Class object represents an array type, a primitive type, or void, then the returned array has length 0. The elements in the returned array are not sorted and are not in any particular order.",;java.lang.Class.getDeclaredMethods(),;1
getDeclaredPrefixes,1,1,Return an enumeration of all prefixes declared in this context. The empty (default) prefix will be included in this enumeration; note that this behaviour differs from that of getPrefix(java.lang.String) and getPrefixes().,;org.xml.sax.helpers.NamespaceSupport.getDeclaredPrefixes(),;1
getDeclaredType,1,1,Returns the Java binding of the xml element declaration's type attribute.,;javax.xml.bind.JAXBElement.getDeclaredType(),;1
getDeclaringExecutable,1,1,Return the Executable which declares this parameter.,;java.lang.reflect.Parameter.getDeclaringExecutable(),;1
getDecoder,1,1,Returns a Base64.Decoder that decodes using the Basic type base64 encoding scheme.,;java.util.Base64.getDecoder(),;1
getDeepestComponentAt,1,1,"Returns the deepest visible descendent Component of parent that contains the location x, y. If parent does not contain the specified location, then null is returned. If parent is not a container, or none of parent's visible descendents contain the specified location, parent is returned.",";javax.swing.SwingUtilities.getDeepestComponentAt(Component,int,int)",;1
getDefaultActions,1,1,Gets an int representing the current action(s) supported by this DropTarget.,;java.awt.dnd.DropTarget.getDefaultActions(),;1
getDefaultAllowUserInteraction,1,1,"Returns the default value of the allowUserInteraction field. Ths default is ""sticky"", being a part of the static state of all URLConnections. This flag applies to the next, and all following URLConnections that are created.",;java.net.URLConnection.getDefaultAllowUserInteraction(),;1
getDefaultChoice,1,1,Get the defaultChoice.,;javax.security.auth.callback.ChoiceCallback.getDefaultChoice(),;1
getDefaultClassLoader,1,1,Gets the default ClassLoader used by this connector server.,;javax.management.remote.rmi.RMIServerImpl.getDefaultClassLoader(),;1
getDefaultClosedIcon,1,1,"Returns the default icon, for the current laf, that is used to represent non-leaf nodes that are not expanded.",;javax.swing.tree.DefaultTreeCellRenderer.getDefaultClosedIcon(),;1
getDefaultConfiguration,1,1,Returns the default GraphicsConfiguration associated with this GraphicsDevice.,;java.awt.GraphicsDevice.getDefaultConfiguration(),;1
getDefaultDirectory,1,1,Return the user's default starting directory for the file chooser.,;javax.swing.filechooser.FileSystemView.getDefaultDirectory(),;1
getDefaultDragSource,1,1,Gets the DragSource object associated with the underlying platform.,;java.awt.dnd.DragSource.getDefaultDragSource(),;1
getDefaultEditor,1,1,"Returns the editor to be used when no editor has been set in a TableColumn. During the editing of cells the editor is fetched from a Hashtable of entries according to the class of the cells in the column. If there is no entry for this columnClass the method returns the entry for the most specific superclass. The JTable installs entries for Object, Number, and Boolean, all of which can be modified or replaced.",;javax.swing.JTable.getDefaultEditor(Class&lt;?&gt;),;1
getDefaultEventIndex,1,1,Deny knowledge of a default event. You can override this if you wish to define a default event for the bean.,;java.beans.SimpleBeanInfo.getDefaultEventIndex(),;1
getDefaultFileTypeMap,1,1,"Return the default FileTypeMap for the system. If setDefaultFileTypeMap was called, return that instance, otherwise return an instance of MimetypesFileTypeMap.",;javax.activation.FileTypeMap.getDefaultFileTypeMap(),;1
getDefaultFlavorMap,1,1,Returns the default FlavorMap for this thread's ClassLoader.,;java.awt.datatransfer.SystemFlavorMap.getDefaultFlavorMap(),;1
getDefaultFocusTraversalKeys,1,1,"Returns a Set of default focus traversal keys for a given traversal operation. This traversal key Set will be in effect on all Windows that have no such Set of their own explicitly defined. This Set will also be inherited, recursively, by any child Component of those Windows that has no such Set of its own explicitly defined. (See setDefaultFocusTraversalKeys for a full description of each operation.)",;java.awt.KeyboardFocusManager.getDefaultFocusTraversalKeys(int),;1
getDefaultFocusTraversalPolicy,1,1,Returns the default FocusTraversalPolicy. Top-level components use this value on their creation to initialize their own focus traversal policy by explicit call to Container.setFocusTraversalPolicy.,;java.awt.KeyboardFocusManager.getDefaultFocusTraversalPolicy(),;1
getDefaultFormatter,1,1,"Returns the JFormattedTextField.AbstractFormatter to use as a last resort, eg in case a display, edit or null JFormattedTextField.AbstractFormatter has not been specified.",;javax.swing.text.DefaultFormatterFactory.getDefaultFormatter(),;1
getDefaultFractionDigits,1,1,"Gets the default number of fraction digits used with this currency. For example, the default number of fraction digits for the Euro is 2, while for the Japanese Yen it's 0. In the case of pseudo-currencies, such as IMF Special Drawing Rights, -1 is returned.",;java.util.Currency.getDefaultFractionDigits(),;1
getDefaultHostnameVerifier,1,1,Gets the default HostnameVerifier that is inherited by new instances of this class.,;javax.net.ssl.HttpsURLConnection.getDefaultHostnameVerifier(),;1
getDefaultImageMetadata,1,1,"Returns an IIOMetadata object containing default values for encoding an image of the given type. The contents of the object may be manipulated using either the XML tree structure returned by the IIOMetadata.getAsTree method, an IIOMetadataController object, or via plug-in specific interfaces, and the resulting data supplied to one of the write methods that take a stream metadata parameter. An optional ImageWriteParam may be supplied for cases where it may affect the structure of the image metadata. If the supplied ImageWriteParam contains optional setting values not supported by this writer (e.g. progressive encoding or any format-specific settings), they will be ignored.",";javax.imageio.ImageWriter.getDefaultImageMetadata(ImageTypeSpecifier,ImageWriteParam)",;1
getDefaultInitCtx,1,1,Retrieves the initial context by calling NamingManager.getInitialContext() and cache it in defaultInitCtx. Set gotDefault so that we know we've tried this before.,;javax.naming.InitialContext.getDefaultInitCtx(),;1
getDefaultInstance,1,1,Returns the default IIORegistry instance used by the Image I/O API. This instance should be used for all registry functions. Each ThreadGroup will receive its own instance; this allows different Applets in the same browser (for example) to each have their own registry.,;javax.imageio.spi.IIORegistry.getDefaultInstance(),;1
getDefaultLeafIcon,1,1,"Returns the default icon, for the current laf, that is used to represent leaf nodes.",;javax.swing.tree.DefaultTreeCellRenderer.getDefaultLeafIcon(),;1
getDefaultLightWeightPopupEnabled,1,1,"Gets the defaultLightWeightPopupEnabled property, which by default is true.",;javax.swing.JPopupMenu.getDefaultLightWeightPopupEnabled(),;1
getDefaultName,1,1,Get the default name.,;javax.security.auth.callback.NameCallback.getDefaultName(),;1
getDefaultNamespacePrefix,1,1,Description copied from interface:XMLCryptoContext,;javax.xml.crypto.dom.DOMCryptoContext.getDefaultNamespacePrefix(),;1
getDefaultOpenIcon,1,1,"Returns the default icon, for the current laf, that is used to represent non-leaf nodes that are expanded.",;javax.swing.tree.DefaultTreeCellRenderer.getDefaultOpenIcon(),;1
getDefaultOption,1,1,Get the default option.,;javax.security.auth.callback.ConfirmationCallback.getDefaultOption(),;1
getDefaultPrintService,1,1,"Not called directly by applications. Implemented by a service provider, and called by the print lookup service",;javax.print.PrintServiceLookup.getDefaultPrintService(),;1
getDefaultPropertyIndex,1,1,Deny knowledge of a default property. You can override this if you wish to define a default property for the bean.,;java.beans.SimpleBeanInfo.getDefaultPropertyIndex(),;1
getDefaultQueue,1,1,Fetch the default layout queue.,;javax.swing.text.LayoutQueue.getDefaultQueue(),;1
getDefaultReadParam,1,1,"Returns a default ImageReadParam object appropriate for this format. All subclasses should define a set of default values for all parameters and return them with this call. This method may be called before the input source is set. The default implementation constructs and returns a new ImageReadParam object that does not allow source scaling (i.e., it returns new ImageReadParam().",;javax.imageio.ImageReader.getDefaultReadParam(),;1
getDefaultRequestProperty,1,1,Deprecated.The instance specific getRequestProperty method should be used after an appropriate instance of URLConnection is obtained.,;java.net.URLConnection.getDefaultRequestProperty(String),;1
getDefaultScreenDevice,1,1,Returns the default screen GraphicsDevice.,;java.awt.GraphicsEnvironment.getDefaultScreenDevice(),;1
getDefaultSelection,1,1,"Specifies whether, for jobs using these attributes, the application should print all pages, the range specified by the return value of getPageRanges, or the current selection. This attribute is updated to the value chosen by the user.",;java.awt.JobAttributes.getDefaultSelection(),;1
getDefaultSocketFactory,1,1,Returns a reference to the default socket factory used by this RMI implementation. This will be the factory used by the RMI runtime when getSocketFactory returns null.,;java.rmi.server.RMISocketFactory.getDefaultSocketFactory(),;1
getDefaultSSLParameters,1,1,Returns a copy of the SSLParameters indicating the default settings for this SSL context. The parameters will always have the ciphersuites and protocols arrays set to non-null values.,;javax.net.ssl.SSLContext.getDefaultSSLParameters(),;1
getDefaultSSLSocketFactory,1,1,Gets the default static SSLSocketFactory that is inherited by new instances of this class. The socket factories are used when creating sockets for secure https URL connections.,;javax.net.ssl.HttpsURLConnection.getDefaultSSLSocketFactory(),;1
getDefaultStream,1,1,Deprecated.no replacement,;java.rmi.server.LogStream.getDefaultStream(),;1
getDefaultStreamMetadata,1,1,"Returns an IIOMetadata object containing default values for encoding a stream of images. The contents of the object may be manipulated using either the XML tree structure returned by the IIOMetadata.getAsTree method, an IIOMetadataController object, or via plug-in specific interfaces, and the resulting data supplied to one of the write methods that take a stream metadata parameter. An optional ImageWriteParam may be supplied for cases where it may affect the structure of the stream metadata. If the supplied ImageWriteParam contains optional setting values not supported by this writer (e.g. progressive encoding or any format-specific settings), they will be ignored. Writers that do not make use of stream metadata (e.g., writers for single-image formats) should return null.",;javax.imageio.ImageWriter.getDefaultStreamMetadata(ImageWriteParam),;1
getDefaultStyleContext,1,1,Returns default AttributeContext shared by all documents that don't bother to define/supply their own context.,;javax.swing.text.StyleContext.getDefaultStyleContext(),;1
getDefaultText,1,1,Get the default text.,;javax.security.auth.callback.TextInputCallback.getDefaultText(),;1
getDefaultToolkit,1,1,"Gets the default toolkit. If a system property named ""java.awt.headless"" is set to true then the headless implementation of Toolkit is used. If there is no ""java.awt.headless"" or it is set to false and there is a system property named ""awt.toolkit"", that property is treated as the name of a class that is a subclass of Toolkit; otherwise the default platform-specific implementation of Toolkit is used. Also loads additional classes into the VM, using the property 'assistive_technologies' specified in the Sun reference implementation by a line in the 'accessibility.properties' file. The form is ""assistive_technologies=..."" where the ""..."" is a comma-separated list of assistive technology classes to load. Each class is loaded in the order given and a single instance of each is created using Class.forName(class).newInstance(). This is done just after the AWT toolkit is created. All errors are handled via an AWTError exception.",;java.awt.Toolkit.getDefaultToolkit(),;1
getDefaultTransform,1,1,"Returns the default AffineTransform for this GraphicsConfiguration. This AffineTransform is typically the Identity transform for most normal screens. The default AffineTransform maps coordinates onto the device such that 72 user space coordinate units measure approximately 1 inch in device space. The normalizing transform can be used to make this mapping more exact. Coordinates in the coordinate space defined by the default AffineTransform for screen and printer devices have the origin in the upper left-hand corner of the target region of the device, with X coordinates increasing to the right and Y coordinates increasing downwards. For image buffers not associated with a device, such as those not created by createCompatibleImage, this AffineTransform is the Identity transform.",;java.awt.GraphicsConfiguration.getDefaultTransform(),;1
getDefaultTreeModel,1,1,Creates and returns a sample TreeModel. Used primarily for beanbuilders to show something interesting.,;javax.swing.JTree.getDefaultTreeModel(),;1
getDefaultUncaughtExceptionHandler,1,1,"Returns the default handler invoked when a thread abruptly terminates due to an uncaught exception. If the returned value is null, there is no default.",;java.lang.Thread.getDefaultUncaughtExceptionHandler(),;1
getDefaultUseCaches,1,1,"Returns the default value of a URLConnection's useCaches flag. Ths default is ""sticky"", being a part of the static state of all URLConnections. This flag applies to the next, and all following URLConnections that are created.",;java.net.URLConnection.getDefaultUseCaches(),;1
getDefaultWriteParam,1,1,"Returns a new ImageWriteParam object of the appropriate type for this file format containing default values, that is, those values that would be used if no ImageWriteParam object were specified. This is useful as a starting point for tweaking just a few parameters and otherwise leaving the default settings alone. The default implementation constructs and returns a new ImageWriteParam object that does not allow tiling, progressive encoding, or compression, and that will be localized for the current Locale (i.e., what you would get by calling new ImageWriteParam(getLocale()). Individual plug-ins may return an instance of ImageWriteParam with additional optional features enabled, or they may return an instance of a plug-in specific subclass of ImageWriteParam.",;javax.imageio.ImageWriter.getDefaultWriteParam(),;1
getDefinitionClass,1,1,Returns the class.,;java.lang.instrument.ClassDefinition.getDefinitionClass(),;1
getDefinitionClassFile,1,1,Returns the array of bytes that contains the new class file.,;java.lang.instrument.ClassDefinition.getDefinitionClassFile(),;1
getDelegatedTask,1,1,"Returns a delegated Runnable task for this SSLEngine. SSLEngine operations may require the results of operations that block, or may take an extended period of time to complete. This method is used to obtain an outstanding Runnable operation (task). Each task must be assigned a thread (possibly the current) to perform the run operation. Once the run method returns, the Runnable object is no longer needed and may be discarded. Delegated tasks run in the AccessControlContext in place when this object was created. A call to this method will return each outstanding task exactly once. Multiple delegated tasks can be run in parallel.",;javax.net.ssl.SSLEngine.getDelegatedTask(),;1
getDepth,1,1,"Returns the depth of the tree rooted at this node -- the longest distance from this node to a leaf. If this node has no children, returns 0. This operation is much more expensive than getLevel() because it must effectively traverse the entire tree rooted at this node.",;javax.swing.tree.DefaultMutableTreeNode.getDepth(),;1
getDER,1,1,"Returns the full ASN.1 DER encoding for this oid object, which includes the tag and length.",;org.ietf.jgss.Oid.getDER(),;1
getDerefLinkFlag,1,1,Determines whether links will be dereferenced during the search.,;javax.naming.directory.SearchControls.getDerefLinkFlag(),;1
getDescendantToggledPaths,1,1,Returns an Enumeration of TreePaths that have been expanded that are descendants of parent.,;javax.swing.JTree.getDescendantToggledPaths(TreePath),;1
getDescriptors,1,1,Description copied from interface:ModelMBeanInfo,;javax.management.modelmbean.ModelMBeanInfoSupport.getDescriptors(String),;1
getDesktop,1,1,Returns the Desktop instance of the current browser context. On some platforms the Desktop API may not be supported; use the isDesktopSupported() method to determine if the current desktop is supported.,;java.awt.Desktop.getDesktop(),;1
getDesktopIcon,1,1,Returns the JDesktopIcon used when this JInternalFrame is iconified.,;javax.swing.JInternalFrame.getDesktopIcon(),;1
getDesktopIconBorder,1,1,Returns a border instance for a Desktop Icon,;javax.swing.plaf.metal.MetalBorders.getDesktopIconBorder(),;1
getDesktopPaneForComponent,1,1,Returns the specified component's desktop pane.,;javax.swing.JOptionPane.getDesktopPaneForComponent(Component),;1
getDesktopProperty,1,1,Obtains a value for the specified desktop property. A desktop property is a uniquely named value for a resource that is Toolkit global in nature. Usually it also is an abstract representation for an underlying platform dependent desktop setting. For more information on desktop properties supported by the AWT see AWT Desktop Properties.,;java.awt.Toolkit.getDesktopProperty(String),;1
getDesktopPropertyValue,1,1,"Returns the value of the specified system desktop property by invoking Toolkit.getDefaultToolkit().getDesktopProperty(). If the value of the specified property is null, fallbackValue is returned.",";javax.swing.LookAndFeel.getDesktopPropertyValue(String,Object)",;1
getDestinationBands,1,1,"Returns the set of band indices where data will be placed. If no value has been set, null is returned to indicate that all destination bands will be used.",;javax.imageio.ImageReadParam.getDestinationBands(),;1
getDestinationOffset,1,1,"Returns the offset in the destination image at which pixels are to be placed. If setDestinationOffsets has not been called, a Point with zero X and Y values is returned (which is the correct value).",;javax.imageio.IIOParam.getDestinationOffset(),;1
getDestinationType,1,1,"Returns the type of image to be returned by the read, if one was set by a call to setDestination(ImageTypeSpecifier), as an ImageTypeSpecifier. If none was set, null is returned.",;javax.imageio.IIOParam.getDestinationType(),;1
getDeterminant,1,1,"Returns the determinant of the matrix representation of the transform. The determinant is useful both to determine if the transform can be inverted and to get a single value representing the combined X and Y scaling of the transform. If the determinant is non-zero, then this transform is invertible and the various methods that depend on the inverse transform do not need to throw a NoninvertibleTransformException. If the determinant is zero then this transform can not be inverted since the transform maps all input coordinates onto a line or a point. If the determinant is near enough to zero then inverse transform operations might not carry enough precision to produce meaningful results. If this transform represents a uniform scale, as indicated by the getType method then the determinant also represents the square of the uniform scale factor by which all of the points are expanded from or contracted towards the origin. If this transform represents a non-uniform scale or more general transform then the determinant is not likely to represent a value useful for any purpose other than determining if inverse transforms are possible. Mathematically, the determinant is calculated using the formula: | m00 m01 m02 | | m10 m11 m12 | = m00 * m11 - m01 * m10 | 0 0 1 |",;java.awt.geom.AffineTransform.getDeterminant(),;1
getDeviceConfiguration,1,1,Returns the device configuration associated with this Graphics2D.,;java.awt.Graphics2D.getDeviceConfiguration(),;1
getDeviceInfo,1,1,Obtains the set of info objects representing the device or devices provided by this MidiDeviceProvider.,;javax.sound.midi.spi.MidiDeviceProvider.getDeviceInfo(),;1
getDiagnostics,1,1,Gets a list view of diagnostics collected by this object.,;javax.tools.DiagnosticCollector.getDiagnostics(),;1
getDialog,1,1,"Returns whether, for jobs using these attributes, the user should see a print dialog in which to modify the print settings, and which type of print dialog should be displayed. DialogType.COMMON denotes a cross- platform, pure Java print dialog. DialogType.NATIVE denotes the platform's native print dialog. If a platform does not support a native print dialog, the pure Java print dialog is displayed instead. DialogType.NONE specifies no print dialog (i.e., background printing). This attribute cannot be modified by, and is not subject to any limitations of, the implementation or the target printer.",;java.awt.JobAttributes.getDialog(),;1
getDialogType,1,1,Returns the type of this dialog. The default is JFileChooser.OPEN_DIALOG.,;javax.swing.JFileChooser.getDialogType(),;1
getDigestLength,1,1,"Returns the length of the digest in bytes, or 0 if this operation is not supported by the provider and the implementation is not cloneable.",;java.security.MessageDigest.getDigestLength(),;1
getDigit,1,1,Gets the character used for a digit in a pattern.,;java.text.DecimalFormatSymbols.getDigit(),;1
getDirtyRegion,1,1,Return the current dirty region for a component. Return an empty rectangle if the component is not dirty.,;javax.swing.RepaintManager.getDirtyRegion(JComponent),;1
getDisabledIconAt,1,1,"Returns the tab disabled icon at index. If the tab disabled icon doesn't exist at index this will forward the call to the look and feel to construct an appropriate disabled Icon from the corresponding enabled Icon. Some look and feels might not render the disabled Icon, in which case it won't be created.",;javax.swing.JTabbedPane.getDisabledIconAt(int),;1
getDisabledObjectNames,1,1,Gets all the ObjectNames disabled.,;javax.management.relation.MBeanServerNotificationFilter.getDisabledObjectNames(),;1
getDisabledTextColor,1,1,Fetches the current color used to render the disabled text.,;javax.swing.text.JTextComponent.getDisabledTextColor(),;1
getDiscard,1,1,Returns the discard attribute of the cookie,;java.net.HttpCookie.getDiscard(),;1
getDismissDelay,1,1,Returns the dismissal delay value.,;javax.swing.ToolTipManager.getDismissDelay(),;1
getDisplayedMnemonic,1,1,"Return the keycode that indicates a mnemonic key. This property is used when the label is part of a larger component. If the labelFor property of the label is not null, the label will call the requestFocus method of the component specified by the labelFor property when the mnemonic is activated.",;javax.swing.JLabel.getDisplayedMnemonic(),;1
getDisplayedMnemonicIndexAt,1,1,"Returns the character, as an index, that the look and feel should provide decoration for as representing the mnemonic character.",;javax.swing.JTabbedPane.getDisplayedMnemonicIndexAt(int),;1
getDisplayFormatter,1,1,"Returns the JFormattedTextField.AbstractFormatter to use if the JFormattedTextField is not being edited and either the value is not-null, or the value is null and a null formatter has has not been specified.",;javax.swing.text.DefaultFormatterFactory.getDisplayFormatter(),;1
getDisplayMode,1,1,"Returns the current display mode of this GraphicsDevice. The returned display mode is allowed to have a refresh rate DisplayMode.REFRESH_RATE_UNKNOWN if it is indeterminate. Likewise, the returned display mode is allowed to have a bit depth DisplayMode.BIT_DEPTH_MULTI if it is indeterminate or if multiple bit depths are supported.",;java.awt.GraphicsDevice.getDisplayMode(),;1
getDisplayModes,1,1,"Returns all display modes available for this GraphicsDevice. The returned display modes are allowed to have a refresh rate DisplayMode.REFRESH_RATE_UNKNOWN if it is indeterminate. Likewise, the returned display modes are allowed to have a bit depth DisplayMode.BIT_DEPTH_MULTI if it is indeterminate or if multiple bit depths are supported.",;java.awt.GraphicsDevice.getDisplayModes(),;1
getDisplaySize,1,1,"Returns the calculated size of the display area. The display area is the portion of the combo box in which the selected item is displayed. This method will use the prototype display value if it has been set. For combo boxes with a non trivial number of items, it is recommended to use a prototype display value to significantly speed up the display size calculation.",;javax.swing.plaf.basic.BasicComboBoxUI.getDisplaySize(),;1
getDivider,1,1,Returns the divider between the top Components.,;javax.swing.plaf.basic.BasicSplitPaneUI.getDivider(),;1
getDividerBorderSize,1,1,"Deprecated.As of Java 2 platform v1.3, instead set the border on the divider.",;javax.swing.plaf.basic.BasicSplitPaneUI.getDividerBorderSize(),;1
getDocFlavor,1,1,Determines the doc flavor in which this doc object will supply its piece of print data.,;javax.print.SimpleDoc.getDocFlavor(),;1
getDockingColor,1,1,Gets the color displayed when over a docking area,;javax.swing.plaf.basic.BasicToolBarUI.getDockingColor(),;1
getDocumentListeners,1,1,Returns an array of all the document listeners registered on this document.,;javax.swing.text.AbstractDocument.getDocumentListeners(),;1
getDocumentProperties,1,1,Supports managing a set of properties. Callers can use the documentProperties dictionary to annotate the document with document-wide properties.,;javax.swing.text.AbstractDocument.getDocumentProperties(),;1
getDoInput,1,1,Returns the value of this URLConnection's doInput flag.,;java.net.URLConnection.getDoInput(),;1
getDomainCombiner,1,1,Get the DomainCombiner associated with this AccessControlContext.,;java.security.AccessControlContext.getDomainCombiner(),;1
getDOMImplementationList,1,1,Return a list of implementations that support the desired features.,;org.w3c.dom.bootstrap.DOMImplementationRegistry.getDOMImplementationList(String),;1
getDoOutput,1,1,Returns the value of this URLConnection's doOutput flag.,;java.net.URLConnection.getDoOutput(),;1
getDotBias,1,1,Returns the bias of the caret position.,;javax.swing.text.DefaultCaret.getDotBias(),;1
getDoubleBufferMaximumSize,1,1,Returns the maximum double buffer size.,;javax.swing.RepaintManager.getDoubleBufferMaximumSize(),;1
getDoubleParameter,1,1,A convenience method to return a parameter as a double. An exception is thrown if the parameter is null or not a Double.,;java.awt.image.renderable.ParameterBlock.getDoubleParameter(int),;1
getDragAction,1,1,Returns an int representing the action selected by the user.,;java.awt.dnd.DragGestureEvent.getDragAction(),;1
getDraggedColumn,1,1,"Returns the the dragged column, if and only if, a drag is in process, otherwise returns null.",;javax.swing.table.JTableHeader.getDraggedColumn(),;1
getDraggedDistance,1,1,"Returns the column's horizontal distance from its original position, if and only if, a drag is in process. Otherwise, the the return value is meaningless.",;javax.swing.table.JTableHeader.getDraggedDistance(),;1
getDragImage,1,1,"Returns the drag image. If there is no image to drag, the returned value is null.",;javax.swing.TransferHandler.getDragImage(),;1
getDragImageOffset,1,1,Returns an anchor offset for the image to drag.,;javax.swing.TransferHandler.getDragImageOffset(),;1
getDragMode,1,1,Gets the current "dragging style" used by the desktop pane.,;javax.swing.JDesktopPane.getDragMode(),;1
getDragOrigin,1,1,Returns a Point in the coordinates of the Component over which the drag originated.,;java.awt.dnd.DragGestureEvent.getDragOrigin(),;1
getDragSourceContext,1,1,This method returns the DragSourceContext that originated the event.,;java.awt.dnd.DragSourceEvent.getDragSourceContext(),;1
getDragSourceListeners,1,1,Gets all the DragSourceListeners registered with this DragSource.,;java.awt.dnd.DragSource.getDragSourceListeners(),;1
getDragSourceMotionListeners,1,1,Gets all of the DragSourceMotionListeners registered with this DragSource.,;java.awt.dnd.DragSource.getDragSourceMotionListeners(),;1
getDragThreshold,1,1,"Returns the drag gesture motion threshold. The drag gesture motion threshold defines the recommended behavior for MouseDragGestureRecognizers. If the system property awt.dnd.drag.threshold is set to a positive integer, this method returns the value of the system property; otherwise if a pertinent desktop property is available and supported by the implementation of the Java platform, this method returns the value of that property; otherwise this method returns some default value. The pertinent desktop property can be queried using java.awt.Toolkit.getDesktopProperty(""DnD.gestureMotionThreshold"").",;java.awt.dnd.DragSource.getDragThreshold(),;1
getDrawGraphics,1,1,Creates a graphics context for the drawing buffer. This method may not be synchronized for performance reasons; use of this method by multiple threads should be handled at the application level. Disposal of the graphics object obtained must be handled by the application.,;java.awt.image.BufferStrategy.getDrawGraphics(),;1
getDriver,1,1,Attempts to locate a driver that understands the given URL. The DriverManager attempts to select an appropriate driver from the set of registered JDBC drivers.,;java.sql.DriverManager.getDriver(String),;1
getDrivers,1,1,Retrieves an Enumeration with all of the currently loaded JDBC drivers to which the current caller has access. Note: The classname of a driver can be found using d.getClass().getName(),;java.sql.DriverManager.getDrivers(),;1
getDropLineRect,1,1,Returns a unbounding box for the drop line.,;javax.swing.plaf.basic.BasicTreeUI.getDropLineRect(JTree.DropLocation),;1
getDropPoint,1,1,"Returns the drop point, representing the mouse's current location within the component.",;javax.swing.TransferHandler.DropLocation.getDropPoint(),;1
getDropSuccess,1,1,This method returns a boolean indicating if the drop was successful.,;java.awt.dnd.DragSourceDropEvent.getDropSuccess(),;1
getDTD,1,1,"Returns a DTD with the specified name. If a DTD with that name doesn't exist, one is created and returned. Any uppercase characters in the name are converted to lowercase.",;javax.swing.text.html.parser.DTD.getDTD(String),;1
getDuration,1,1,"Gets the duration of the transition. In most cases, the transition duration is one hour, however this is not always the case. The duration will be positive for a gap and negative for an overlap. Time-zones are second-based, so the nanosecond part of the duration will be zero.",;java.time.zone.ZoneOffsetTransition.getDuration(),;1
getEarliestSequenceNumber,1,1,Returns the sequence number of the earliest notification still in the buffer.,;javax.management.remote.NotificationResult.getEarliestSequenceNumber(),;1
getEarlyReflectionDelay,1,1,Returns the early reflection delay time in microseconds. This is the amount of time between when the direct signal is heard and when the first early reflections are heard.,;javax.sound.sampled.ReverbType.getEarlyReflectionDelay(),;1
getEarlyReflectionIntensity,1,1,Returns the early reflection intensity in decibels. This is the amplitude attenuation of the first early reflections relative to the direct signal.,;javax.sound.sampled.ReverbType.getEarlyReflectionIntensity(),;1
getEdgeCondition,1,1,Returns the edge condition.,;java.awt.image.ConvolveOp.getEdgeCondition(),;1
getEdit,1,1,Returns the edit value.,;javax.swing.event.UndoableEditEvent.getEdit(),;1
getEditFormatter,1,1,"Returns the JFormattedTextField.AbstractFormatter to use if the JFormattedTextField is being edited and either the value is not-null, or the value is null and a null formatter has has not been specified.",;javax.swing.text.DefaultFormatterFactory.getEditFormatter(),;1
getEditingColumn,1,1,"Returns the index of the column that contains the cell currently being edited. If nothing is being edited, returns -1.",;javax.swing.JTable.getEditingColumn(),;1
getEditingRow,1,1,"Returns the index of the row that contains the cell currently being edited. If nothing is being edited, returns -1.",;javax.swing.JTable.getEditingRow(),;1
getEditorKitClassNameForContentType,1,1,Returns the currently registered EditorKit class name for the type type.,;javax.swing.JEditorPane.getEditorKitClassNameForContentType(String),;1
getEditorKitForContentType,1,1,"Fetches the editor kit to use for the given type of content. This is called when a type is requested that doesn't match the currently installed type. If the component doesn't have an EditorKit registered for the given type, it will try to create an EditorKit from the default EditorKit registry. If that fails, a PlainEditorKit is used on the assumption that all text documents can be represented as plain text. This method can be reimplemented to use some other kind of type registry. This can be reimplemented to use the Java Activation Framework, for example.",;javax.swing.JEditorPane.getEditorKitForContentType(String),;1
getEditorSearchPath,1,1,Gets the package names that will be searched for property editors.,;java.beans.PropertyEditorManager.getEditorSearchPath(),;1
getEffectiveKeyBits,1,1,Returns the effective key size in bits.,;javax.crypto.spec.RC2ParameterSpec.getEffectiveKeyBits(),;1
getElementById,1,1,Returns the Element with the specified ID attribute value. This implementation uses an internal HashMap to get the element that the specified attribute value maps to.,;javax.xml.crypto.dom.DOMCryptoContext.getElementById(String),;1
getElementDescription,1,1,"Returns a String containing a description of the named element, or null. The description will be localized for the supplied Locale if possible. The default implementation will first locate a ResourceBundle using the current resource base name set by setResourceBaseName and the supplied Locale, using the fallback mechanism described in the comments for ResourceBundle.getBundle. If a ResourceBundle is found, the element name will be used as a key to its getString method, and the result returned. If no ResourceBundle is found, or no such key is present, null will be returned. If locale is null, the current default Locale returned by Locale.getLocale will be used.",";javax.imageio.metadata.IIOMetadataFormatImpl.getElementDescription(String,Locale)",;1
getElementIterator,1,1,Fetches the ElementIterator.,;javax.swing.text.AbstractWriter.getElementIterator(),;1
getElementMaxChildren,1,1,Description copied from interface:IIOMetadataFormat,;javax.imageio.metadata.IIOMetadataFormatImpl.getElementMaxChildren(String),;1
getElementMinChildren,1,1,Description copied from interface:IIOMetadataFormat,;javax.imageio.metadata.IIOMetadataFormatImpl.getElementMinChildren(String),;1
getElementName,1,1,Get xml element qname for jaxbElement.,;javax.xml.bind.JAXBIntrospector.getElementName(Object),;1
getElementOpenType,1,1,Returns the open type of element values contained in the arrays described by this ArrayType instance.,;javax.management.openmbean.ArrayType.getElementOpenType(),;1
getElementsAt,1,1,Returns an array of the Elements that contain offset. The first elements corresponds to the root.,";javax.swing.text.html.HTMLEditorKit.HTMLTextAction.getElementsAt(HTMLDocument,int)",;1
getElementsByTagName,1,1,Description copied from interface:Element,;javax.imageio.metadata.IIOMetadataNode.getElementsByTagName(String),;1
getElementsByTagNameNS,1,1,Equivalent to getElementsByTagName(localName).,";javax.imageio.metadata.IIOMetadataNode.getElementsByTagNameNS(String,String)",;1
getElementTypeInfo,1,1,"Returns the immutable TypeInfo object for the current element.The method may only be called by the startElement event or the endElement event of the ContentHandler that the application sets to the ValidatorHandler.When W3C XML Schema validation is being performed, in the case where an element has a union type, the TypeInfo returned by a call to getElementTypeInfo() from the startElement event will be the union type. The TypeInfo returned by a call from the endElement event will be the actual member type used to validate the element.",;javax.xml.validation.TypeInfoProvider.getElementTypeInfo(),;1
getEmptySet,1,1,Fetches an empty AttributeSet.,;javax.swing.text.StyleContext.getEmptySet(),;1
getEnabledAttributes,1,1,Gets all the enabled attribute names for this filter.,;javax.management.AttributeChangeNotificationFilter.getEnabledAttributes(),;1
getEnabledObjectNames,1,1,Gets all the ObjectNames enabled.,;javax.management.relation.MBeanServerNotificationFilter.getEnabledObjectNames(),;1
getEnabledTypes,1,1,Gets all the enabled notification types for this filter.,;javax.management.NotificationFilterSupport.getEnabledTypes(),;1
getEnclosingClass,1,1,Returns the immediately enclosing class of the underlying class. If the underlying class is a top level class this method returns null.,;java.lang.Class.getEnclosingClass(),;1
getEnclosingConstructor,1,1,"If this Class object represents a local or anonymous class within a constructor, returns a Constructor object representing the immediately enclosing constructor of the underlying class. Returns null otherwise. In particular, this method returns null if the underlying class is a local or anonymous class immediately enclosed by a type declaration, instance initializer or static initializer.",;java.lang.Class.getEnclosingConstructor(),;1
getEnclosingMethod,1,1,"If this Class object represents a local or anonymous class within a method, returns a Method object representing the immediately enclosing method of the underlying class. Returns null otherwise. In particular, this method returns null if the underlying class is a local or anonymous class immediately enclosed by a type declaration, instance initializer or static initializer.",;java.lang.Class.getEnclosingMethod(),;1
getEncoder,1,1,Returns a Base64.Encoder that encodes using the Basic type base64 encoding scheme.,;java.util.Base64.getEncoder(),;1
getEncodings,1,1,"Returns an iteration of the encodings supported by this certification path, with the default encoding first. Attempts to modify the returned Iterator via its remove method result in an UnsupportedOperationException.",;java.security.cert.CertPath.getEncodings(),;1
getEncryptedData,1,1,Returns the encrypted data.,;javax.crypto.EncryptedPrivateKeyInfo.getEncryptedData(),;1
getEnd,1,1,Returns the last Date in the sequence.,;javax.swing.SpinnerDateModel.getEnd(),;1
getEndCap,1,1,Returns the end cap style.,;java.awt.BasicStroke.getEndCap(),;1
getEndpointIdentificationAlgorithm,1,1,Gets the endpoint identification algorithm.,;javax.net.ssl.SSLParameters.getEndpointIdentificationAlgorithm(),;1
getEndpoints,1,1,"This gives list of endpoints in an application. For e.g in servlet container, a war file may contain multiple endpoints. In case of http, these endpoints are hosted on the same http server.",;javax.xml.ws.EndpointContext.getEndpoints(),;1
getEndPosition,1,1,Returns a position that represents the end of the document. The position returned can be counted on to track change and stay located at the end of the document.,;javax.swing.text.AbstractDocument.getEndPosition(),;1
getEndTime,1,1,Returns the expiration time for this ticket's validity period.,;javax.security.auth.kerberos.KerberosTicket.getEndTime(),;1
getEngine,1,1,Returns the ScriptEngine whose compile method created this CompiledScript. The CompiledScript will execute in this engine.,;javax.script.CompiledScript.getEngine(),;1
getEngineByExtension,1,1,Look up and create a ScriptEngine for a given extension. The algorithm used by getEngineByName is used except that the search starts by looking for a ScriptEngineFactory registered to handle the given extension using registerEngineExtension.,;javax.script.ScriptEngineManager.getEngineByExtension(String),;1
getEngineByMimeType,1,1,Look up and create a ScriptEngine for a given mime type. The algorithm used by getEngineByName is used except that the search starts by looking for a ScriptEngineFactory registered to handle the given mime type using registerEngineMimeType.,;javax.script.ScriptEngineManager.getEngineByMimeType(String),;1
getEngineByName,1,1,"Looks up and creates a ScriptEngine for a given name. The algorithm first searches for a ScriptEngineFactory that has been registered as a handler for the specified name using the registerEngineName method. If one is not found, it searches the set of ScriptEngineFactory instances stored by the constructor for one with the specified name. If a ScriptEngineFactory is found by either method, it is used to create instance of ScriptEngine.",;javax.script.ScriptEngineManager.getEngineByName(String),;1
getEngineFactories,1,1,Returns a list whose elements are instances of all the ScriptEngineFactory classes found by the discovery mechanism.,;javax.script.ScriptEngineManager.getEngineFactories(),;1
getEntries,1,1,"Returns a Map of the entries contained in this Manifest. Each entry is represented by a String name (key) and associated Attributes (value). The Map permits the null key, but no entry with a null key is created by read(java.io.InputStream), nor is such an entry written by using write(java.io.OutputStream).",;java.util.jar.Manifest.getEntries(),;1
getEntryName,1,1,Return the entry name for this connection. This method returns null if the JAR file URL corresponding to this connection points to a JAR file and not a JAR file entry.,;java.net.JarURLConnection.getEntryName(),;1
getEnumConstants,1,1,Returns the elements of this enum class or null if this Class object does not represent an enum type.,;java.lang.Class.getEnumConstants(),;1
getEnvelope,1,1,"Gets the SOAPEnvelope object associated with this SOAPPart object. Once the SOAP envelope is obtained, it can be used to get its contents.",;javax.xml.soap.SOAPPart.getEnvelope(),;1
getEnvironment,1,1,Description copied from interface:Context,;javax.naming.InitialContext.getEnvironment(),;1
getEon,1,1,Return high order component for XML Schema 1.0 dateTime datatype field for year. null if this optional part of the year field is not defined.Value constraints for this value are summarized in year field of date/time field mapping table.,;javax.xml.datatype.XMLGregorianCalendar.getEon(),;1
getEonAndYear,1,1,Return XML Schema 1.0 dateTime datatype field for year.Value constraints for this value are summarized in year field of date/time field mapping table.,;javax.xml.datatype.XMLGregorianCalendar.getEonAndYear(),;1
getEpochSecond,1,1,Gets the number of seconds from the Java epoch of 1970-01-01T00:00:00Z. The epoch second count is a simple incrementing count of seconds where second 0 is 1970-01-01T00:00:00Z. The nanosecond part of the day is returned by getNanosOfSecond.,;java.time.Instant.getEpochSecond(),;1
getEras,1,1,Gets era strings. For example: "AD" and "BC".,;java.text.DateFormatSymbols.getEras(),;1
getErrorIndex,1,1,"Retrieve the index at which an error occurred, or -1 if the error index has not been set.",;java.text.ParsePosition.getErrorIndex(),;1
getErrorManager,1,1,Retrieves the ErrorManager for this Handler.,;java.util.logging.Handler.getErrorManager(),;1
getErrorsAny,1,1,Returns a list of all media that have encountered an error.,;java.awt.MediaTracker.getErrorsAny(),;1
getErrorsID,1,1,Returns a list of media with the specified ID that have encountered an error.,;java.awt.MediaTracker.getErrorsID(int),;1
getErrorWriter,1,1,Returns the Writer used to display error output.,;javax.script.SimpleScriptContext.getErrorWriter(),;1
getEscapeProcessing,1,1,Ascertains whether escape processing is enabled for this RowSet object.,;javax.sql.rowset.BaseRowSet.getEscapeProcessing(),;1
getEstimatedMajorSpan,1,1,Is the major span currently estimated?,;javax.swing.text.AsyncBoxView.getEstimatedMajorSpan(),;1
getEtchedInsets,1,1,Returns the amount of space taken up by a border drawn by drawEtchedRect(),;javax.swing.plaf.basic.BasicGraphicsUtils.getEtchedInsets(),;1
getEtchType,1,1,Returns which etch-type is set on the etched border.,;javax.swing.border.EtchedBorder.getEtchType(),;1
getEventAllocator,1,1,Gets the allocator used by streams created with this factory,;javax.xml.stream.XMLInputFactory.getEventAllocator(),;1
getEventMask,1,1,Returns the event mask associated with the listener.,;java.awt.event.AWTEventListenerProxy.getEventMask(),;1
getEventPropertyName,1,1,Returns the property of the event that should be used in the action applied to the target.,;java.beans.EventHandler.getEventPropertyName(),;1
getEvents,1,1,Return an array of ValidationEvent objects containing a copy of each of the collected errors and warnings.,;javax.xml.bind.util.ValidationEventCollector.getEvents(),;1
getEventSetDescriptors,1,1,Deny knowledge of event sets. You can override this if you wish to provide explicit event set info.,;java.beans.SimpleBeanInfo.getEventSetDescriptors(),;1
getExclusiveOwnerThread,1,1,"Returns the thread last set by setExclusiveOwnerThread, or null if never set. This method does not otherwise impose any synchronization or volatile field accesses.",;java.util.concurrent.locks.AbstractOwnableSynchronizer.getExclusiveOwnerThread(),;1
getExecuteExistingDelayedTasksAfterShutdownPolicy,1,1,"Gets the policy on whether to execute existing delayed tasks even when this executor has been shutdown. In this case, these tasks will only terminate upon shutdownNow, or after setting the policy to false when already shutdown. This value is by default true.",;java.util.concurrent.ScheduledThreadPoolExecutor.getExecuteExistingDelayedTasksAfterShutdownPolicy(),;1
getExemptionMechanism,1,1,Returns the exemption mechanism object used with this cipher.,;javax.crypto.Cipher.getExemptionMechanism(),;1
getExpandedDescendants,1,1,"Returns an Enumeration of the descendants of the path parent that are currently expanded. If parent is not currently expanded, this will return null. If you expand/collapse nodes while iterating over the returned Enumeration this may not return all the expanded paths, or may return paths that are no longer expanded.",;javax.swing.JTree.getExpandedDescendants(TreePath),;1
getExpandsSelectedPaths,1,1,Returns the expandsSelectedPaths property.,;javax.swing.JTree.getExpandsSelectedPaths(),;1
getExpiration,1,1,Returns the value of the expires header field.,;java.net.URLConnection.getExpiration(),;1
getExponent,1,1,Returns the prime's exponent.,;java.security.spec.RSAOtherPrimeInfo.getExponent(),;1
getExponentSeparator,1,1,"Returns the string used to separate the mantissa from the exponent. Examples: ""x10^"" for 1.23x10^4, ""E"" for 1.23E4.",;java.text.DecimalFormatSymbols.getExponentSeparator(),;1
getExponentSize,1,1,Returns the size in bits of the random exponent (private value).,;javax.crypto.spec.DHGenParameterSpec.getExponentSize(),;1
getExpression,1,1,Returns the XPath expression to be evaluated.,;javax.xml.crypto.dsig.spec.XPathType.getExpression(),;1
getExtendedCacheKeys,1,1,"Get any extra attributes which the painter implementation would like to include in the image cache lookups. This is checked for every call of the paint(g, c, w, h) method.",;javax.swing.plaf.nimbus.AbstractRegionPainter.getExtendedCacheKeys(JComponent),;1
getExtendedKeyCode,1,1,"Returns an extended key code for the event. The extended key code is a unique id assigned to a key on the keyboard just like keyCode. However, unlike keyCode, this value depends on the current keyboard layout. For instance, pressing the left topmost letter key in a common English layout produces the same value as keyCode, VK_Q. Pressing the same key in a regular Russian layout gives another code, unique for the letter ""Cyrillic I short"".",;java.awt.event.KeyEvent.getExtendedKeyCode(),;1
getExtendedKeyCodeForChar,1,1,Returns an extended key code for a unicode character.,;java.awt.event.KeyEvent.getExtendedKeyCodeForChar(int),;1
getExtensionKeys,1,1,"Returns the set of extension keys associated with this locale, or the empty set if it has no extensions. The returned set is unmodifiable. The keys will all be lower-case.",;java.util.Locale.getExtensionKeys(),;1
getExtensions,1,1,Returns the set of file name extensions files are tested against.,;javax.swing.filechooser.FileNameExtensionFilter.getExtensions(),;1
getExtentSize,1,1,Returns the size of the visible part of the view in view coordinates.,;javax.swing.JViewport.getExtentSize(),;1
getExternalSubset,1,1,"Tells the parser that if no external subset has been declared in the document text, none should be used.",";org.xml.sax.ext.DefaultHandler2.getExternalSubset(String,String)",;1
getExtra,1,1,Returns the extra field data for the entry.,;java.util.zip.ZipEntry.getExtra(),;1
getExtraImageMetadataFormatNames,1,1,"Returns an array of Strings containing the names of additional document formats, other than the native and standard formats, recognized by the getAsTree and setFromTree methods on the image metadata objects produced or consumed by this plug-in. If the plug-in does not handle image metadata, null should be returned. The set of formats may differ according to the particular images being read or written; this method should indicate all the additional formats supported by the plug-in under any circumstances. The default implementation returns a clone of the extraImageMetadataFormatNames instance variable, which is typically set by the constructor.",;javax.imageio.spi.ImageReaderWriterSpi.getExtraImageMetadataFormatNames(),;1
getExtraMetadataFormatNames,1,1,"Returns an array of Strings containing the names of additional metadata formats, other than the native and standard formats, recognized by this plug-in's getAsTree, setFromTree, and mergeTree methods. If there are no such additional formats, null is returned. The default implementation returns a clone of the extraMetadataFormatNames instance variable.",;javax.imageio.metadata.IIOMetadata.getExtraMetadataFormatNames(),;1
getExtraStreamMetadataFormatNames,1,1,"Returns an array of Strings containing the names of additional document formats, other than the native and standard formats, recognized by the getAsTree and setFromTree methods on the stream metadata objects produced or consumed by this plug-in. If the plug-in does not handle metadata, null should be returned. The set of formats may differ according to the particular images being read or written; this method should indicate all the additional formats supported by the plug-in under any circumstances. The default implementation returns a clone of the extraStreamMetadataFormatNames instance variable, which is typically set by the constructor.",;javax.imageio.spi.ImageReaderWriterSpi.getExtraStreamMetadataFormatNames(),;1
getFactory,1,1,Returns the factory used for constructing new workers.,;java.util.concurrent.ForkJoinPool.getFactory(),;1
getFactoryClassLocation,1,1,"Retrieves the location of the factory of the object to which this reference refers. If it is a codebase, then it is an ordered list of URLs, separated by spaces, listing locations from where the factory class definition should be loaded.",;javax.naming.Reference.getFactoryClassLocation(),;1
getFactoryClassName,1,1,Retrieves the class name of the factory of the object to which this reference refers.,;javax.naming.Reference.getFactoryClassName(),;1
getFailureHandler,1,1,Returns the handler for socket creation failure set by the setFailureHandler method.,;java.rmi.server.RMISocketFactory.getFailureHandler(),;1
getFallbackLocale,1,1,"Returns a Locale to be used as a fallback locale for further resource bundle searches by the ResourceBundle.getBundle factory method. This method is called from the factory method every time when no resulting resource bundle has been found for baseName and locale, where locale is either the parameter for ResourceBundle.getBundle or the previous fallback locale returned by this method. The method returns null if no further fallback search is desired. The default implementation returns the default Locale if the given locale isn't the default one. Otherwise, null is returned.",";java.util.ResourceBundle.Control.getFallbackLocale(String,Locale)",;1
getFeedResolution,1,1,Returns this resolution attribute's feed direction resolution in the given units. The value is rounded to the nearest integer.,;javax.print.attribute.ResolutionSyntax.getFeedResolution(int),;1
getFeedResolutionDphi,1,1,Returns this resolution attribute's feed direction resolution in units of dphi. (For use in a subclass.),;javax.print.attribute.ResolutionSyntax.getFeedResolutionDphi(),;1
getFetchDirection,1,1,Retrieves this RowSet object's current setting for the fetch direction. The default type is ResultSet.FETCH_FORWARD,;javax.sql.rowset.BaseRowSet.getFetchDirection(),;1
getFetchSize,1,1,Returns the fetch size for this RowSet object. The default value is zero.,;javax.sql.rowset.BaseRowSet.getFetchSize(),;1
getFieldAttribute,1,1,Returns the field identifier as an attribute constant from one of the Field subclasses. May return null if the field is specified only by an integer field ID.,;java.text.FieldPosition.getFieldAttribute(),;1
getFileFilter,1,1,Returns the currently selected file filter.,;javax.swing.JFileChooser.getFileFilter(),;1
getFileForInput,1,1,Description copied from interface:JavaFileManager,";javax.tools.ForwardingJavaFileManager.getFileForInput(JavaFileManager.Location,String,String)",;1
getFileForOutput,1,1,Description copied from interface:JavaFileManager,";javax.tools.ForwardingJavaFileManager.getFileForOutput(JavaFileManager.Location,String,String,FileObject)",;1
getFilenameFilter,1,1,Determines this file dialog's filename filter. A filename filter allows the user to specify which files appear in the file dialog window. Filename filters do not function in Sun's reference implementation for Microsoft Windows.,;java.awt.FileDialog.getFilenameFilter(),;1
getFileNameMap,1,1,"Loads filename map (a mimetable) from a data file. It will first try to load the user-specific table, defined by ""content.types.user.table"" property. If that fails, it tries to load the default built-in table.",;java.net.URLConnection.getFileNameMap(),;1
getFilePointer,1,1,Returns the current offset in this file.,;java.io.RandomAccessFile.getFilePointer(),;1
getFileSelectionMode,1,1,Returns the current file-selection mode. The default is JFilesChooser.FILES_ONLY.,;javax.swing.JFileChooser.getFileSelectionMode(),;1
getFileStoreAttributeView,1,1,Returns a FileStoreAttributeView of the given type. This method is intended to be used where the file store attribute view defines type-safe methods to read or update the file store attributes. The type parameter is the type of the attribute view required and the method returns an instance of that type if supported.,;java.nio.file.FileStore.getFileStoreAttributeView(Class&lt;V&gt;),;1
getFileStores,1,1,"Returns an object to iterate over the underlying file stores. The elements of the returned iterator are the FileStores for this file system. The order of the elements is not defined and the file stores may change during the lifetime of the Java virtual machine. When an I/O error occurs, perhaps because a file store is not accessible, then it is not returned by the iterator. In the case of the default provider, and a security manager is installed, the security manager is invoked to check RuntimePermission(""getFileStoreAttributes""). If denied, then no file stores are returned by the iterator. In addition, the security manager's SecurityManager.checkRead(String) method is invoked to check read access to the file store's top-most directory. If denied, the file store is not returned by the iterator. It is system dependent if the permission checks are done when the iterator is obtained or during iteration. Usage Example: Suppose we want to print the space usage for all file stores: for (FileStore store: FileSystems.getDefault().getFileStores()) { long total = store.getTotalSpace() / 1024; long used = (store.getTotalSpace() - store.getUnallocatedSpace()) / 1024; long avail = store.getUsableSpace() / 1024; System.out.format(""%-20s %12d %12d %12d%n"", store, total, used, avail); }",;java.nio.file.FileSystem.getFileStores(),;1
getFileSuffixes,1,1,"Returns an array of Strings containing a list of file suffixes associated with the formats that are generally usable by the ImageReader or ImageWriter implementation associated with this service provider. For example, a single ImageReader might be able to process files with '.pbm' and '.pnm' suffixes, or both '.jpg' and '.jpeg' suffixes. If there are no known file suffixes, null will be returned. Returning a particular suffix does not guarantee that files with that suffix can be processed; it merely indicates that it may be worthwhile attempting to decode or encode such files using this service provider.",;javax.imageio.spi.ImageReaderWriterSpi.getFileSuffixes(),;1
getFileSystemView,1,1,Returns the file system view.,;javax.swing.JFileChooser.getFileSystemView(),;1
getFillsViewportHeight,1,1,Returns whether or not this table is always made large enough to fill the height of an enclosing viewport.,;javax.swing.JTable.getFillsViewportHeight(),;1
getFilterInstance,1,1,Returns a unique instance of an ImageFilter object which will actually perform the filtering for the specified ImageConsumer. The default implementation just clones this object. Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being filtered. Developers using this class to filter pixels from an image should avoid calling this method directly since that operation could interfere with the filtering operation.,;java.awt.image.ImageFilter.getFilterInstance(ImageConsumer),;1
getFirstIndex,1,1,Returns the index of the first row whose selection may have changed. getFirstIndex() &lt;= getLastIndex(),;javax.swing.event.ListSelectionEvent.getFirstIndex(),;1
getFirstLeaf,1,1,Finds and returns the first leaf that is a descendant of this node -- either this node or its first child's first leaf. Returns this node if it is a leaf.,;javax.swing.tree.DefaultMutableTreeNode.getFirstLeaf(),;1
getFirstLineIndent,1,1,Gets the first line indent setting.,;javax.swing.text.StyleConstants.getFirstLineIndent(AttributeSet),;1
getFirstRow,1,1,"Returns the first row that changed. HEADER_ROW means the meta data, ie. names, types and order of the columns.",;javax.swing.event.TableModelEvent.getFirstRow(),;1
getFirstVisibleIndex,1,1,"Returns the smallest list index that is currently visible. In a left-to-right componentOrientation, the first visible cell is found closest to the list's upper-left corner. In right-to-left orientation, it is found closest to the upper-right corner. If nothing is visible or the list is empty, -1 is returned. Note that the returned cell may only be partially visible.",;javax.swing.JList.getFirstVisibleIndex(),;1
getFixedCellHeight,1,1,Returns the value of the fixedCellHeight property.,;javax.swing.JList.getFixedCellHeight(),;1
getFixedCellWidth,1,1,Returns the value of the fixedCellWidth property.,;javax.swing.JList.getFixedCellWidth(),;1
getFixedRate,1,1,Gets a copy of the flag indicating whether a periodic notification is executed at fixed-delay or at fixed-rate.,;javax.management.timer.Timer.getFixedRate(Integer),;1
getFlags,1,1,Returns the flags associated with this ticket. Each element in the returned array indicates the value for the corresponding bit in the ASN.1 BitString that represents the ticket flags.,;javax.security.auth.kerberos.KerberosTicket.getFlags(),;1
getFlavorListeners,1,1,Returns an array of all the FlavorListeners currently registered on this Clipboard.,;java.awt.datatransfer.Clipboard.getFlavorListeners(),;1
getFlavorsForNative,1,1,"Returns a List of DataFlavors to which the specified String native can be translated by the data transfer subsystem. The List will be sorted from best DataFlavor to worst. That is, the first DataFlavor will best reflect data in the specified native to a Java application. If the specified native is previously unknown to the data transfer subsystem, and that native has been properly encoded, then invoking this method will establish a mapping in both directions between the specified native and a DataFlavor whose MIME type is a decoded version of the native. If the specified native is not a properly encoded native and the mappings for this native have not been altered with setFlavorsForNative, then the contents of the List is platform dependent, but null cannot be returned.",;java.awt.datatransfer.SystemFlavorMap.getFlavorsForNative(String),;1
getFlavorsForNatives,1,1,"Returns a Map of the specified String natives to their most preferred DataFlavor. Each DataFlavor value will be the same as the first DataFlavor in the List returned by getFlavorsForNative for the specified native. If a specified native is previously unknown to the data transfer subsystem, and that native has been properly encoded, then invoking this method will establish a mapping in both directions between the specified native and a DataFlavor whose MIME type is a decoded version of the native.",;java.awt.datatransfer.SystemFlavorMap.getFlavorsForNatives(String[]),;1
getFloatingColor,1,1,Gets the color displayed when over a floating area,;javax.swing.plaf.basic.BasicToolBarUI.getFloatingColor(),;1
getFloatParameter,1,1,A convenience method to return a parameter as a float. An exception is thrown if the parameter is null or not a Float.,;java.awt.image.renderable.ParameterBlock.getFloatParameter(int),;1
getFlowAxis,1,1,"Fetches the axis along which views should be flowed. By default, this will be the axis orthogonal to the axis along which the flow rows are tiled (the axis of the default flow rows themselves). This is typically used by the FlowStrategy.",;javax.swing.text.FlowView.getFlowAxis(),;1
getFlushedPosition,1,1,Description copied from interface:ImageInputStream,;javax.imageio.stream.ImageInputStreamImpl.getFlushedPosition(),;1
getFocusableWindowState,1,1,"Returns whether this Window can become the focused Window if it meets the other requirements outlined in isFocusableWindow. If this method returns false, then isFocusableWindow will return false as well. If this method returns true, then isFocusableWindow may return true or false depending upon the other requirements which must be met in order for a Window to be focusable. By default, all Windows have a focusable Window state of true.",;java.awt.Window.getFocusableWindowState(),;1
getFocusAccelerator,1,1,Returns the key accelerator that will cause the receiving text component to get the focus. Return '\0' if no focus accelerator has been set.,;javax.swing.text.JTextComponent.getFocusAccelerator(),;1
getFocusedComponent,1,1,"Fetches the text component that currently has focus. This allows actions to be shared across text components which is useful for key-bindings where a large set of actions are defined, but generally used the same way across many different components.",;javax.swing.text.TextAction.getFocusedComponent(),;1
getFocusedWindow,1,1,"Returns the focused Window, if the focused Window is in the same context as the calling thread. The focused Window is the Window that is or contains the focus owner.",;java.awt.KeyboardFocusManager.getFocusedWindow(),;1
getFocusIndex,1,1,Returns the index of the tab that has focus.,;javax.swing.plaf.basic.BasicTabbedPaneUI.getFocusIndex(),;1
getFocusListeners,1,1,Returns an array of all the focus listeners registered on this component.,;java.awt.Component.getFocusListeners(),;1
getFocusLostBehavior,1,1,"Returns the behavior when focus is lost. This will be one of COMMIT_OR_REVERT, COMMIT, REVERT or PERSIST Note that some AbstractFormatters may push changes as they occur, so that the value of this will have no effect.",;javax.swing.JFormattedTextField.getFocusLostBehavior(),;1
getFocusPoint,1,1,"Returns a copy of the focus point of the radial gradient. Note that if the focus point specified when the radial gradient was constructed lies outside of the radius of the circle, this method will still return the original focus point even though the rendering may center the rings of color on a different point that lies inside the radius.",;java.awt.RadialGradientPaint.getFocusPoint(),;1
getFocusTraversalKeysEnabled,1,1,"Returns whether focus traversal keys are enabled for this Component. Components for which focus traversal keys are disabled receive key events for focus traversal keys. Components for which focus traversal keys are enabled do not see these events; instead, the events are automatically converted to traversal operations.",;java.awt.Component.getFocusTraversalKeysEnabled(),;1
getFocusTraversalPolicy,1,1,"Returns the focus traversal policy that will manage keyboard traversal of this Container's children, or null if this Container is not a focus cycle root. If no traversal policy has been explicitly set for this Container, then this Container's focus-cycle-root ancestor's policy is returned.",;java.awt.Container.getFocusTraversalPolicy(),;1
getFollowRedirects,1,1,Returns a boolean indicating whether or not HTTP redirects (3xx) should be automatically followed.,;java.net.HttpURLConnection.getFollowRedirects(),;1
getFontFamily,1,1,Gets the font family setting from the attribute list.,;javax.swing.text.StyleConstants.getFontFamily(AttributeSet),;1
getFontList,1,1,Deprecated.see GraphicsEnvironment.getAvailableFontFamilyNames(),;java.awt.Toolkit.getFontList(),;1
getFontPeer,1,1,Deprecated.see java.awt.GraphicsEnvironment#getAllFonts,";java.awt.Toolkit.getFontPeer(String,int)",;1
getFontSize,1,1,Gets the font size setting from the attribute list.,;javax.swing.text.StyleConstants.getFontSize(AttributeSet),;1
getForegroundAt,1,1,Returns the tab foreground color at index.,;javax.swing.JTabbedPane.getForegroundAt(int),;1
getForegroundPainter,1,1,"Gets the appropriate foreground Painter, if there is one, for the state specified in the given SynthContext. This method does appropriate fallback searching, as described in #get.",;javax.swing.plaf.nimbus.NimbusStyle.getForegroundPainter(SynthContext),;1
getForkJoinTaskTag,1,1,Returns the tag for this task.,;java.util.concurrent.ForkJoinTask.getForkJoinTaskTag(),;1
getFormatName,1,1,"Returns a String identifying the format of the input source. The default implementation returns originatingProvider.getFormatNames()[0]. Implementations that may not have an originating service provider, or which desire a different naming policy should override this method.",;javax.imageio.ImageReader.getFormatName(),;1
getFormatNames,1,1,"Returns an array of Strings containing human-readable names for the formats that are generally usable by the ImageReader or ImageWriter implementation associated with this service provider. For example, a single ImageReader might be able to process both PBM and PNM files.",;javax.imageio.spi.ImageReaderWriterSpi.getFormatNames(),;1
getFormatsByArgumentIndex,1,1,"Gets the formats used for the values passed into format methods or returned from parse methods. The indices of elements in the returned array correspond to the argument indices used in the previously set pattern string. The order of formats in the returned array thus corresponds to the order of elements in the arguments array passed to the format methods or the result array returned by the parse methods. If an argument index is used for more than one format element in the pattern string, then the format used for the last such format element is returned in the array. If an argument index is not used for any format element in the pattern string, then null is returned in the array.",;java.text.MessageFormat.getFormatsByArgumentIndex(),;1
getFormattedTextField,1,1,Returns the current JFormattedTextField the AbstractFormatter is installed on.,;javax.swing.JFormattedTextField.AbstractFormatter.getFormattedTextField(),;1
getFormatterFactory,1,1,Returns the current AbstractFormatterFactory.,;javax.swing.JFormattedTextField.getFormatterFactory(),;1
getFractionalMetricsHint,1,1,Return the text fractional metrics rendering mode hint used in this FontRenderContext. This will be one of the text fractional metrics rendering hint values defined in java.awt.RenderingHints.,;java.awt.font.FontRenderContext.getFractionalMetricsHint(),;1
getFractionalSecond,1,1,"Return fractional seconds.null is returned when this optional field is not defined.Value constraints are detailed in second field of date/time field mapping table.This optional field can only have a defined value when the xs:dateTime second field, represented by getSecond(), does not return DatatypeConstants.FIELD_UNDEFINED.",;javax.xml.datatype.XMLGregorianCalendar.getFractionalSecond(),;1
getFractions,1,1,"Returns a copy of the array of floats used by this gradient to calculate color distribution. The returned array always has 0 as its first value and 1 as its last value, with increasing values in between.",;java.awt.MultipleGradientPaint.getFractions(),;1
getFragment,1,1,Returns the decoded fragment component of this URI. The string returned by this method is equal to that returned by the getRawFragment method except that all sequences of escaped octets are decoded.,;java.net.URI.getFragment(),;1
getFrame,1,1,Returns the framing Rectangle2D that defines the overall shape of this object.,;java.awt.geom.RectangularShape.getFrame(),;1
getFrameCount,1,1,Returns the number of frames for the complete animation loop used by an indeterminate JProgessBar. The progress chunk will go from one end to the other and back during the entire loop. This visual behavior may be changed by subclasses in other Look and Feels.,;javax.swing.plaf.basic.BasicProgressBarUI.getFrameCount(),;1
getFrameForComponent,1,1,Returns the specified component's Frame.,;javax.swing.JOptionPane.getFrameForComponent(Component),;1
getFrameIcon,1,1,Returns the image displayed in the title bar of this internal frame (usually in the top-left corner).,;javax.swing.JInternalFrame.getFrameIcon(),;1
getFramePosition,1,1,"Obtains the position in the line's audio data when the event occurred, expressed in sample frames. For example, if a source line had already played back 14 sample frames at the time it was paused, the pause event would report the line's position as 14. The next frame to be processed would be frame number 14 using zero-based numbering, or 15 using one-based numbering. Note that this field is relevant only to certain events generated by data lines, such as START and STOP. For events generated by lines that do not count sample frames, and for any other events for which this value is not known, the position value should be AudioSystem.NOT_SPECIFIED.",;javax.sound.sampled.LineEvent.getFramePosition(),;1
getFrameRate,1,1,"Obtains the frame rate in frames per second. When this AudioFormat is used for queries (e.g. AudioSystem.isConversionSupported) or capabilities (e.g. DataLine.Info.getFormats), a frame rate of AudioSystem.NOT_SPECIFIED means that any frame rate is acceptable. AudioSystem.NOT_SPECIFIED is also returned when the frame rate is not defined for this audio format.",;javax.sound.sampled.AudioFormat.getFrameRate(),;1
getFrames,1,1,"Returns an array of all Frames created by this application. If called from an applet, the array includes only the Frames accessible by that applet. Warning: this method may return system created frames, such as a shared, hidden frame which is used by Swing. Applications should not assume the existence of these frames, nor should an application assume anything about these frames such as component positions, LayoutManagers or serialization. Note: To obtain a list of all ownerless windows, including ownerless Dialogs (introduced in release 1.6), use Window.getOwnerlessWindows.",;java.awt.Frame.getFrames(),;1
getFrameSize,1,1,"Obtains the frame size in bytes. When this AudioFormat is used for queries (e.g. AudioSystem.isConversionSupported) or capabilities (e.g. DataLine.Info.getFormats), a frame size of AudioSystem.NOT_SPECIFIED means that any frame size is acceptable. AudioSystem.NOT_SPECIFIED is also returned when the frame size is not defined for this audio format.",;javax.sound.sampled.AudioFormat.getFrameSize(),;1
getFreeSpace,1,1,"Returns the number of unallocated bytes in the partition named by this abstract path name. The returned number of unallocated bytes is a hint, but not a guarantee, that it is possible to use most or any of these bytes. The number of unallocated bytes is most likely to be accurate immediately after this call. It is likely to be made inaccurate by any external I/O operations including those made on the system outside of this virtual machine. This method makes no guarantee that write operations to this file system will succeed.",;java.io.File.getFreeSpace(),;1
getFromIndex,1,1,Returns the fromIndex. Valid for removed or moved events,;javax.swing.event.TableColumnModelEvent.getFromIndex(),;1
getFromPage,1,1,"Returns, for jobs using these attributes, the first page to be printed, if a range of pages is to be printed. This attribute is updated to the value chosen by the user. An application should ignore this attribute on output, unless the return value of the getDefaultSelection method is DefaultSelectionType.RANGE. An application should honor the return value of getPageRanges over the return value of this method, if possible.",;java.awt.JobAttributes.getFromPage(),;1
getFullScreenWindow,1,1,Returns the Window object representing the full-screen window if the device is in full-screen mode.,;java.awt.GraphicsDevice.getFullScreenWindow(),;1
getFunctionalInterfaceClass,1,1,Get the name of the invoked type to which this lambda has been converted,;java.lang.invoke.SerializedLambda.getFunctionalInterfaceClass(),;1
getFunctionalInterfaceMethodName,1,1,Get the name of the primary method for the functional interface to which this lambda has been converted.,;java.lang.invoke.SerializedLambda.getFunctionalInterfaceMethodName(),;1
getFunctionalInterfaceMethodSignature,1,1,Get the signature of the primary method for the functional interface to which this lambda has been converted.,;java.lang.invoke.SerializedLambda.getFunctionalInterfaceMethodSignature(),;1
getGapEnd,1,1,Access to the end of the gap.,;javax.swing.text.GapContent.getGapEnd(),;1
getGapStart,1,1,Access to the start of the gap.,;javax.swing.text.GapContent.getGapStart(),;1
getGarbageCollectorMXBeans,1,1,Returns a list of GarbageCollectorMXBean objects in the Java virtual machine. The Java virtual machine may have one or more GarbageCollectorMXBean objects. It may add or remove GarbageCollectorMXBean during execution.,;java.lang.management.ManagementFactory.getGarbageCollectorMXBeans(),;1
getGenerator,1,1,Returns the generator which is also known as the base point.,;java.security.spec.ECParameterSpec.getGenerator(),;1
getGenericDisplayName,1,1,"Returns a generic name for the given time zone ID that's suitable for presentation to the user in the specified locale. Generic time zone names are neutral from standard time and daylight saving time. For example, ""PT"" is the short generic name of time zone ID America/Los_Angeles, while its short standard time and daylight saving time names are ""PST"" and ""PDT"", respectively. Refer to getDisplayName for valid time zone IDs. The default implementation of this method returns null.",";java.util.spi.TimeZoneNameProvider.getGenericDisplayName(String,int,Locale)",;1
getGenericInterfaces,1,1,"Returns the Types representing the interfaces directly implemented by the class or interface represented by this object. If a superinterface is a parameterized type, the Type object returned for it must accurately reflect the actual type parameters used in the source code. The parameterized type representing each superinterface is created if it had not been created before. See the declaration of ParameterizedType for the semantics of the creation process for parameterized types. If this object represents a class, the return value is an array containing objects representing all interfaces implemented by the class. The order of the interface objects in the array corresponds to the order of the interface names in the implements clause of the declaration of the class represented by this object. In the case of an array class, the interfaces Cloneable and Serializable are returned in that order. If this object represents an interface, the array contains objects representing all interfaces directly extended by the interface. The order of the interface objects in the array corresponds to the order of the interface names in the extends clause of the declaration of the interface represented by this object. If this object represents a class or interface that implements no interfaces, the method returns an array of length 0. If this object represents a primitive type or void, the method returns an array of length 0.",;java.lang.Class.getGenericInterfaces(),;1
getGenericReturnType,1,1,"Returns a Type object that represents the formal return type of the method represented by this Method object. If the return type is a parameterized type, the Type object returned must accurately reflect the actual type parameters used in the source code. If the return type is a type variable or a parameterized type, it is created. Otherwise, it is resolved.",;java.lang.reflect.Method.getGenericReturnType(),;1
getGenericSuperclass,1,1,"Returns the Type representing the direct superclass of the entity (class, interface, primitive type or void) represented by this Class. If the superclass is a parameterized type, the Type object returned must accurately reflect the actual type parameters used in the source code. The parameterized type representing the superclass is created if it had not been created before. See the declaration of ParameterizedType for the semantics of the creation process for parameterized types. If this Class represents either the Object class, an interface, a primitive type, or void, then null is returned. If this object represents an array class then the Class object representing the Object class is returned.",;java.lang.Class.getGenericSuperclass(),;1
getGenericType,1,1,"Returns a Type object that represents the declared type for the field represented by this Field object. If the Type is a parameterized type, the Type object returned must accurately reflect the actual type parameters used in the source code. If the type of the underlying field is a type variable or a parameterized type, it is created. Otherwise, it is resolved.",;java.lang.reflect.Field.getGenericType(),;1
getGestureModifiers,1,1,"This method returns an int representing the current state of the input device modifiers associated with the user's gesture. Typically these would be mouse buttons or keyboard modifiers. If the modifiers passed to the constructor are invalid, this method returns them unchanged.",;java.awt.dnd.DragSourceDragEvent.getGestureModifiers(),;1
getGestureModifiersEx,1,1,"This method returns an int representing the current state of the input device extended modifiers associated with the user's gesture. See InputEvent.getModifiersEx() If the modifiers passed to the constructor are invalid, this method returns them unchanged.",;java.awt.dnd.DragSourceDragEvent.getGestureModifiersEx(),;1
getGetListenerMethod,1,1,Gets the method used to access the registered event listeners.,;java.beans.EventSetDescriptor.getGetListenerMethod(),;1
getGlobal,1,1,Return global logger object with the name Logger.GLOBAL_LOGGER_NAME.,;java.util.logging.Logger.getGlobal(),;1
getGlobalActiveWindow,1,1,"Returns the active Window, even if the calling thread is in a different context than the active Window. Only a Frame or a Dialog can be the active Window. The native windowing system may denote the active Window or its children with special decorations, such as a highlighted title bar. The active Window is always either the focused Window, or the first Frame or Dialog that is an owner of the focused Window.",;java.awt.KeyboardFocusManager.getGlobalActiveWindow(),;1
getGlobalCurrentFocusCycleRoot,1,1,"Returns the current focus cycle root, even if the calling thread is in a different context than the current focus cycle root. If the focus owner is itself a focus cycle root, then it may be ambiguous as to which Components represent the next and previous Components to focus during normal focus traversal. In that case, the current focus cycle root is used to differentiate among the possibilities.",;java.awt.KeyboardFocusManager.getGlobalCurrentFocusCycleRoot(),;1
getGlobalFocusedWindow,1,1,"Returns the focused Window, even if the calling thread is in a different context than the focused Window. The focused Window is the Window that is or contains the focus owner.",;java.awt.KeyboardFocusManager.getGlobalFocusedWindow(),;1
getGlobalFocusOwner,1,1,"Returns the focus owner, even if the calling thread is in a different context than the focus owner. The focus owner is defined as the Component in an application that will typically receive all KeyEvents generated by the user. KeyEvents which map to the focus owner's focus traversal keys will not be delivered if focus traversal keys are enabled for the focus owner. In addition, KeyEventDispatchers may retarget or consume KeyEvents before they reach the focus owner. This method will throw a SecurityException if this KeyboardFocusManager is not the current KeyboardFocusManager for the calling thread's context.",;java.awt.KeyboardFocusManager.getGlobalFocusOwner(),;1
getGlobalPermanentFocusOwner,1,1,"Returns the permanent focus owner, even if the calling thread is in a different context than the permanent focus owner. The permanent focus owner is defined as the last Component in an application to receive a permanent FOCUS_GAINED event. The focus owner and permanent focus owner are equivalent unless a temporary focus change is currently in effect. In such a situation, the permanent focus owner will again be the focus owner when the temporary focus change ends.",;java.awt.KeyboardFocusManager.getGlobalPermanentFocusOwner(),;1
getGlyphCharIndex,1,1,"Returns the character index of the specified glyph. The character index is the index of the first logical character represented by the glyph. The default implementation assumes a one-to-one, left-to-right mapping of glyphs to characters.",;java.awt.font.GlyphVector.getGlyphCharIndex(int),;1
getGlyphCharIndices,1,1,"Returns the character indices of the specified glyphs. The character index is the index of the first logical character represented by the glyph. Indices are returned in glyph order. The default implementation invokes getGlyphCharIndex for each glyph, and subclassers will probably want to override this implementation for performance reasons. Use this method for convenience and performance in processing of glyphcodes. If no array is passed in, a new array is created.",";java.awt.font.GlyphVector.getGlyphCharIndices(int,int,int[])",;1
getGlyphCode,1,1,Returns the glyphcode of the specified glyph. This return value is meaningless to anything other than the Font object that created this GlyphVector.,;java.awt.font.GlyphVector.getGlyphCode(int),;1
getGlyphCodes,1,1,"Returns an array of glyphcodes for the specified glyphs. The contents of this return value are meaningless to anything other than the Font used to create this GlyphVector. This method is used for convenience and performance when processing glyphcodes. If no array is passed in, a new array is created.",";java.awt.font.GlyphVector.getGlyphCodes(int,int,int[])",;1
getGlyphJustificationInfo,1,1,Returns the justification information for the glyph at the specified index into this GlyphVector.,;java.awt.font.GlyphVector.getGlyphJustificationInfo(int),;1
getGlyphLogicalBounds,1,1,"Returns the logical bounds of the specified glyph within this GlyphVector. These logical bounds have a total of four edges, with two edges parallel to the baseline under the glyph's transform and the other two edges are shared with adjacent glyphs if they are present. This method is useful for hit-testing of the specified glyph, positioning of a caret at the leading or trailing edge of a glyph, and for drawing a highlight region around the specified glyph.",;java.awt.font.GlyphVector.getGlyphLogicalBounds(int),;1
getGlyphMetrics,1,1,Returns the metrics of the glyph at the specified index into this GlyphVector.,;java.awt.font.GlyphVector.getGlyphMetrics(int),;1
getGlyphPainter,1,1,"Fetch the currently installed glyph painter. If a painter has not yet been installed, and a default was not yet needed, null is returned.",;javax.swing.text.GlyphView.getGlyphPainter(),;1
getGlyphPixelBounds,1,1,"Returns the pixel bounds of the glyph at index when this GlyphVector is rendered in a Graphics with the given FontRenderContext at the given location. The renderFRC need not be the same as the FontRenderContext of this GlyphVector, and can be null. If it is null, the FontRenderContext of this GlyphVector is used. The default implementation returns the visual bounds of the glyph, offset to x, y and rounded out to the next integer value, and ignores the FRC. Subclassers should override this method.",";java.awt.font.GlyphVector.getGlyphPixelBounds(int,FontRenderContext,float,float)",;1
getGlyphPosition,1,1,"Returns the position of the specified glyph relative to the origin of this GlyphVector. If glyphIndex equals the number of of glyphs in this GlyphVector, this method returns the position after the last glyph. This position is used to define the advance of the entire GlyphVector.",;java.awt.font.GlyphVector.getGlyphPosition(int),;1
getGlyphPositions,1,1,"Returns an array of glyph positions for the specified glyphs. This method is used for convenience and performance when processing glyph positions. If no array is passed in, a new array is created. Even numbered array entries beginning with position zero are the X coordinates of the glyph numbered beginGlyphIndex + position/2. Odd numbered array entries beginning with position one are the Y coordinates of the glyph numbered beginGlyphIndex + (position-1)/2. If beginGlyphIndex equals the number of of glyphs in this GlyphVector, this method gets the position after the last glyph and this position is used to define the advance of the entire GlyphVector.",";java.awt.font.GlyphVector.getGlyphPositions(int,int,float[])",;1
getGlyphTransform,1,1,"Returns the transform of the specified glyph within this GlyphVector. The transform is relative to the glyph position. If no special transform has been applied, null can be returned. A null return indicates an identity transform.",;java.awt.font.GlyphVector.getGlyphTransform(int),;1
getGlyphVisualBounds,1,1,Returns the visual bounds of the specified glyph within the GlyphVector. The bounds returned by this method is positioned around the origin of each individual glyph.,;java.awt.font.GlyphVector.getGlyphVisualBounds(int),;1
getGranularityPeriod,1,1,Gets the granularity period (in milliseconds). The default value of the granularity period is 10 seconds.,;javax.management.monitor.Monitor.getGranularityPeriod(),;1
getGraphicsConfiguration,1,1,"Gets the GraphicsConfiguration associated with this Component. If the Component has not been assigned a specific GraphicsConfiguration, the GraphicsConfiguration of the Component object's top-level container is returned. If the Component has been created, but not yet added to a Container, this method returns null.",;java.awt.Component.getGraphicsConfiguration(),;1
getGraphicsUtils,1,1,Returns the SynthGraphicUtils for the specified context.,;javax.swing.plaf.synth.SynthStyle.getGraphicsUtils(SynthContext),;1
getGreenMask,1,1,Returns the mask indicating which bits in an int pixel representation contain the green color component.,;java.awt.image.DirectColorModel.getGreenMask(),;1
getGreens,1,1,Copies the array of green color components into the specified array. Only the initial entries of the array as specified by getMapSize are written.,;java.awt.image.IndexColorModel.getGreens(byte[]),;1
getGregorianChange,1,1,"Gets the Gregorian Calendar change date. This is the point when the switch from Julian dates to Gregorian dates occurred. Default is October 15, 1582 (Gregorian). Previous to this, dates will be in the Julian calendar.",;java.util.GregorianCalendar.getGregorianChange(),;1
getGridColor,1,1,Returns the color used to draw grid lines. The default color is look and feel dependent.,;javax.swing.JTable.getGridColor(),;1
getGrooveInsets,1,1,Returns the amount of space taken up by a border drawn by drawGroove(),;javax.swing.plaf.basic.BasicGraphicsUtils.getGrooveInsets(),;1
getGroup,1,1,"Returns the group that the button belongs to. Normally used with radio buttons, which are mutually exclusive within their group.",;javax.swing.DefaultButtonModel.getGroup(),;1
getGroupID,1,1,Returns the group identifier for the object specified by this descriptor. A group provides a way to aggregate objects into a single Java virtual machine. RMI creates/activates objects with the same groupID in the same virtual machine.,;java.rmi.activation.ActivationDesc.getGroupID(),;1
getGroupingSeparator,1,1,"Gets the character used for thousands separator. Different for French, etc.",;java.text.DecimalFormatSymbols.getGroupingSeparator(),;1
getGroupingSize,1,1,"Return the grouping size. Grouping size is the number of digits between grouping separators in the integer portion of a number. For example, in the number ""123,456.78"", the grouping size is 3.",;java.text.DecimalFormat.getGroupingSize(),;1
getHAdjustable,1,1,Returns the ScrollPaneAdjustable object which represents the state of the horizontal scrollbar. The declared return type of this method is Adjustable to maintain backward compatibility.,;java.awt.ScrollPane.getHAdjustable(),;1
getHandler,1,1,Get the ContentHandler that is the Result.,;javax.xml.transform.sax.SAXResult.getHandler(),;1
getHandlers,1,1,Get the Handlers associated with this logger.,;java.util.logging.Logger.getHandlers(),;1
getHardwareAddress,1,1,"Returns the hardware address (usually MAC) of the interface if it has one and if it can be accessed given the current privileges. If a security manager is set, then the caller must have the permission NetPermission(""getNetworkInformation"").",;java.net.NetworkInterface.getHardwareAddress(),;1
getHeader,1,1,Returns all of the values for the specified header as an array of String objects.,;javax.xml.soap.MimeHeaders.getHeader(String),;1
getHeaderFieldInt,1,1,"Returns the value of the named field parsed as a number. This form of getHeaderField exists because some connection types (e.g., http-ng) have pre-parsed headers. Classes for that connection type can override this method and short-circuit the parsing.",";java.net.URLConnection.getHeaderFieldInt(String,int)",;1
getHeaderFieldLong,1,1,"Returns the value of the named field parsed as a number. This form of getHeaderField exists because some connection types (e.g., http-ng) have pre-parsed headers. Classes for that connection type can override this method and short-circuit the parsing.",";java.net.URLConnection.getHeaderFieldLong(String,long)",;1
getHeaderFields,1,1,Returns an unmodifiable Map of the header fields. The Map keys are Strings that represent the response-header field names. Each Map value is an unmodifiable List of Strings that represents the corresponding field values.,;java.net.URLConnection.getHeaderFields(),;1
getHeaderRect,1,1,Returns the rectangle containing the header tile at column. When the column parameter is out of bounds this method uses the same conventions as the JTable method getCellRect.,;javax.swing.table.JTableHeader.getHeaderRect(int),;1
getHeaderRenderer,1,1,"Returns the TableCellRenderer used to draw the header of the TableColumn. When the headerRenderer is null, the JTableHeader uses its defaultRenderer. The default value for a headerRenderer is null.",;javax.swing.table.TableColumn.getHeaderRenderer(),;1
getHeaders,1,1,Returns the response headers as a Map.,;java.net.CacheResponse.getHeaders(),;1
getHeaderValue,1,1,Returns the Object used as the value for the header renderer.,;javax.swing.table.TableColumn.getHeaderValue(),;1
getHideActionText,1,1,"Returns the value of the hideActionText property, which determines whether the button displays text from the Action. This is useful only if an Action has been installed on the button.",;javax.swing.AbstractButton.getHideActionText(),;1
getHierarchyBoundsListeners,1,1,Returns an array of all the hierarchy bounds listeners registered on this component.,;java.awt.Component.getHierarchyBoundsListeners(),;1
getHierarchyListeners,1,1,Returns an array of all the hierarchy listeners registered on this component.,;java.awt.Component.getHierarchyListeners(),;1
getHighestValue,1,1,Returns the biggest value that has an entry in the label table.,;javax.swing.plaf.basic.BasicSliderUI.getHighestValue(),;1
getHighestValueLabel,1,1,Returns the label that corresponds to the lowest slider value in the label table.,;javax.swing.plaf.basic.BasicSliderUI.getHighestValueLabel(),;1
getHighlighter,1,1,Fetches the object responsible for making highlights.,;javax.swing.text.JTextComponent.getHighlighter(),;1
getHighlights,1,1,"Makes a copy of the highlights. Does not actually clone each highlight, but only makes references to them.",;javax.swing.text.DefaultHighlighter.getHighlights(),;1
getHighThreshold,1,1,Gets the high threshold value common to all observed MBeans.,;javax.management.monitor.GaugeMonitor.getHighThreshold(),;1
getHonorsVisibility,1,1,Returns whether component visibility is considered when sizing and positioning components.,;javax.swing.GroupLayout.getHonorsVisibility(),;1
getHorizontalVisibility,1,1,"Gets the visibility of the text field. This can be adjusted to change the location of the visible area if the size of the field is greater than the area that was allocated to the field. The fields look-and-feel implementation manages the values of the minimum, maximum, and extent properties on the BoundedRangeModel.",;javax.swing.JTextField.getHorizontalVisibility(),;1
getHostnameVerifier,1,1,Gets the HostnameVerifier in place on this instance.,;javax.net.ssl.HttpsURLConnection.getHostnameVerifier(),;1
getHostString,1,1,"Returns the hostname, or the String form of the address if it doesn't have a hostname (it was created using a literal). This has the benefit of not attempting a reverse lookup.",;java.net.InetSocketAddress.getHostString(),;1
getHSBColor,1,1,Creates a Color object based on the specified values for the HSB color model. The s and b components should be floating-point values between zero and one (numbers in the range 0.0-1.0). The h component can be any floating-point number. The floor of this number is subtracted from it to create a fraction between 0 and 1. This fractional number is then multiplied by 360 to produce the hue angle in the HSB color model.,";java.awt.Color.getHSBColor(float,float,float)",;1
getHScrollbarHeight,1,1,"Returns the height that would be occupied by a horizontal scrollbar, which is independent of whether it is currently displayed by the scroll pane or not.",;java.awt.ScrollPane.getHScrollbarHeight(),;1
getHTMLBaseline,1,1,Returns the baseline for the html renderer.,";javax.swing.plaf.basic.BasicHTML.getHTMLBaseline(View,int,int)",;1
getHttpContext,1,1,Returns a HttpContext for this exchange. Container matches the request with the associated Endpoint's HttpContext,;javax.xml.ws.spi.http.HttpExchange.getHttpContext(),;1
getHyperlinkListeners,1,1,Returns an array of all the HyperLinkListeners added to this JEditorPane with addHyperlinkListener().,;javax.swing.JEditorPane.getHyperlinkListeners(),;1
getICC_Profiles,1,1,Returns the array of ICC_Profiles used to construct this ColorConvertOp. Returns null if the ColorConvertOp was not constructed from such an array.,;java.awt.image.ColorConvertOp.getICC_Profiles(),;1
getIconAt,1,1,Returns the tab icon at index.,;javax.swing.JTabbedPane.getIconAt(int),;1
getIconForType,1,1,Returns the icon to use for the passed in type.,;javax.swing.plaf.basic.BasicOptionPaneUI.getIconForType(int),;1
getIconImage,1,1,"Returns the image to be displayed as the icon for this frame. This method is obsolete and kept for backward compatibility only. Use Window.getIconImages() instead. If a list of several images was specified as a Window's icon, this method will return the first item of the list.",;java.awt.Frame.getIconImage(),;1
getIconImages,1,1,"Returns the sequence of images to be displayed as the icon for this window. This method returns a copy of the internally stored list, so all operations on the returned object will not affect the window's behavior.",;java.awt.Window.getIconImages(),;1
getIdentityHashCode,1,1,Returns the identity hash code of the lock object returned from the System.identityHashCode(java.lang.Object) method.,;java.lang.management.LockInfo.getIdentityHashCode(),;1
getIDs,1,1,Description copied from interface:Attributes,;javax.naming.directory.BasicAttributes.getIDs(),;1
getIDstring,1,1,"Returns the identification string associated with this GraphicsDevice. A particular program might use more than one GraphicsDevice in a GraphicsEnvironment. This method returns a String identifying a particular GraphicsDevice in the local GraphicsEnvironment. Although there is no public method to set this String, a programmer can use the String for debugging purposes. Vendors of the Java閳 Runtime Environment can format the return value of the String. To determine how to interpret the value of the String, contact the vendor of your Java Runtime. To find out who the vendor is, from your program, call the getProperty method of the System class with ""java.vendor"".",;java.awt.GraphicsDevice.getIDstring(),;1
getIfModifiedSince,1,1,Returns the value of this object's ifModifiedSince field.,;java.net.URLConnection.getIfModifiedSince(),;1
getImageCapabilities,1,1,Returns the image capabilities of this GraphicsConfiguration.,;java.awt.GraphicsConfiguration.getImageCapabilities(),;1
getImageLoadStatus,1,1,Returns the status of the image loading operation.,;javax.swing.ImageIcon.getImageLoadStatus(),;1
getImageMetadataFormat,1,1,"Returns an IIOMetadataFormat object describing the given image metadata format, or null if no description is available. The supplied name must be the native image metadata format name, the standard metadata format name, or one of those returned by getExtraImageMetadataFormatNames.",;javax.imageio.spi.ImageReaderWriterSpi.getImageMetadataFormat(String),;1
getImageObserver,1,1,Returns the image observer for the image.,;javax.swing.ImageIcon.getImageObserver(),;1
getImageReader,1,1,"Returns an ImageReadercorresponding to the given ImageWriter, if there is one, or null if the plug-in for this ImageWriter does not specify a corresponding ImageReader, or if the given ImageWriter is not registered. This method is provided principally for symmetry with getImageWriter(ImageReader). Note that this method returns the ""preferred"" reader, which is the first in the list returned by javax.imageio.spi.ImageWriterSpi.getImageReaderSpiNames().",;javax.imageio.ImageIO.getImageReader(ImageWriter),;1
getImageReaders,1,1,"Returns an Iterator containing all currently registered ImageReaders that claim to be able to decode the supplied Object, typically an ImageInputStream. The stream position is left at its prior position upon exit from this method.",;javax.imageio.ImageIO.getImageReaders(Object),;1
getImageReadersByFormatName,1,1,Returns an Iterator containing all currently registered ImageReaders that claim to be able to decode the named format.,;javax.imageio.ImageIO.getImageReadersByFormatName(String),;1
getImageReadersByMIMEType,1,1,Returns an Iterator containing all currently registered ImageReaders that claim to be able to decode files with the given MIME type.,;javax.imageio.ImageIO.getImageReadersByMIMEType(String),;1
getImageReadersBySuffix,1,1,Returns an Iterator containing all currently registered ImageReaders that claim to be able to decode files with the given suffix.,;javax.imageio.ImageIO.getImageReadersBySuffix(String),;1
getImageReaderSpiNames,1,1,"Returns an array of Strings containing all the fully qualified names of all the ImageReaderSpi classes that can understand the internal metadata representation used by the ImageWriter associated with this service provider, or null if there are no such ImageReaders specified. If a non-null value is returned, it must have non-zero length. The first item in the array must be the name of the service provider for the ""preferred"" reader, as it will be used to instantiate the ImageReader returned by ImageIO.getImageReader(ImageWriter). This mechanism may be used to obtain ImageReaders that will generated non-pixel meta-data (see IIOExtraDataInfo) in a structure understood by an ImageWriter. By reading the image and obtaining this data from one of the ImageReaders obtained with this method and passing it on to the ImageWriter, a client program can read an image, modify it in some way, and write it back out preserving all meta-data, without having to understand anything about the internal structure of the meta-data, or even about the image format.",;javax.imageio.spi.ImageWriterSpi.getImageReaderSpiNames(),;1
getImageTranscoders,1,1,Returns an Iterator containing all currently registered ImageTranscoders that claim to be able to transcode between the metadata of the given ImageReader and ImageWriter.,";javax.imageio.ImageIO.getImageTranscoders(ImageReader,ImageWriter)",;1
getImageTypes,1,1,"Returns an Iterator containing possible image types to which the given image may be decoded, in the form of ImageTypeSpecifierss. At least one legal image type will be returned. The first element of the iterator should be the most ""natural"" type for decoding the image with as little loss as possible. For example, for a JPEG image the first entry should be an RGB image, even though the image data is stored internally in a YCbCr color space.",;javax.imageio.ImageReader.getImageTypes(int),;1
getImageWriter,1,1,"Returns an ImageWritercorresponding to the given ImageReader, if there is one, or null if the plug-in for this ImageReader does not specify a corresponding ImageWriter, or if the given ImageReader is not registered. This mechanism may be used to obtain an ImageWriter that will understand the internal structure of non-pixel metadata (as encoded by IIOMetadata objects) generated by the ImageReader. By obtaining this data from the ImageReader and passing it on to the ImageWriter obtained with this method, a client program can read an image, modify it in some way, and write it back out preserving all metadata, without having to understand anything about the structure of the metadata, or even about the image format. Note that this method returns the ""preferred"" writer, which is the first in the list returned by javax.imageio.spi.ImageReaderSpi.getImageWriterSpiNames().",;javax.imageio.ImageIO.getImageWriter(ImageReader),;1
getImageWriters,1,1,Returns an Iterator containing all currently registered ImageWriters that claim to be able to encode images of the given layout (specified using an ImageTypeSpecifier) in the given format.,";javax.imageio.ImageIO.getImageWriters(ImageTypeSpecifier,String)",;1
getImageWritersByFormatName,1,1,Returns an Iterator containing all currently registered ImageWriters that claim to be able to encode the named format.,;javax.imageio.ImageIO.getImageWritersByFormatName(String),;1
getImageWritersByMIMEType,1,1,Returns an Iterator containing all currently registered ImageWriters that claim to be able to encode files with the given MIME type.,;javax.imageio.ImageIO.getImageWritersByMIMEType(String),;1
getImageWritersBySuffix,1,1,Returns an Iterator containing all currently registered ImageWriters that claim to be able to encode files with the given suffix.,;javax.imageio.ImageIO.getImageWritersBySuffix(String),;1
getImageWriterSpiNames,1,1,"Returns an array of Strings containing the fully qualified names of all the ImageWriterSpi classes that can understand the internal metadata representation used by the ImageReader associated with this service provider, or null if there are no such ImageWriters specified. If a non-null value is returned, it must have non-zero length. The first item in the array must be the name of the service provider for the ""preferred"" writer, as it will be used to instantiate the ImageWriter returned by ImageIO.getImageWriter(ImageReader). This mechanism may be used to obtain ImageWriters that will understand the internal structure of non-pixel meta-data (see IIOTreeInfo) generated by an ImageReader. By obtaining this data from the ImageReader and passing it on to one of the ImageWriters obtained with this method, a client program can read an image, modify it in some way, and write it back out while preserving all meta-data, without having to understand anything about the internal structure of the meta-data, or even about the image format.",;javax.imageio.spi.ImageReaderSpi.getImageWriterSpiNames(),;1
getImplClass,1,1,Get the name of the class containing the implementation method.,;java.lang.invoke.SerializedLambda.getImplClass(),;1
getImplementation,1,1,Get the implementation of this Standard MBean (or MXBean).,;javax.management.StandardMBean.getImplementation(),;1
getImplementationClass,1,1,Get the class of the implementation of this Standard MBean (or MXBean).,;javax.management.StandardMBean.getImplementationClass(),;1
getImplementationName,1,1,Returns the JMX implementation name (the name of this product).,;javax.management.MBeanServerDelegate.getImplementationName(),;1
getImplementationTitle,1,1,Return the title of this package.,;java.lang.Package.getImplementationTitle(),;1
getImplementor,1,1,Returns the implementation object for this endpoint.,;javax.xml.ws.Endpoint.getImplementor(),;1
getImplMethodKind,1,1,Get the method handle kind (see MethodHandleInfo) of the implementation method.,;java.lang.invoke.SerializedLambda.getImplMethodKind(),;1
getImplMethodName,1,1,Get the name of the implementation method.,;java.lang.invoke.SerializedLambda.getImplMethodName(),;1
getImplMethodSignature,1,1,Get the signature of the implementation method.,;java.lang.invoke.SerializedLambda.getImplMethodSignature(),;1
getInCheck,1,1,Deprecated.This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.,;java.lang.SecurityManager.getInCheck(),;1
getIndentLevel,1,1,"Returns the current indentation level. That is, the number of times incrIndent has been invoked minus the number of times decrIndent has been invoked.",;javax.swing.text.AbstractWriter.getIndentLevel(),;1
getIndentSpace,1,1,Returns the amount of space to indent.,;javax.swing.text.AbstractWriter.getIndentSpace(),;1
getIndex0,1,1,"Returns the lower index of the range. For a single element, this value is the same as that returned by getIndex1().",;javax.swing.event.ListDataEvent.getIndex0(),;1
getIndex1,1,1,"Returns the upper index of the range. For a single element, this value is the same as that returned by getIndex0().",;javax.swing.event.ListDataEvent.getIndex1(),;1
getIndexedPropertyType,1,1,Returns the Java type info for the indexed property. Note that the Class object may describe primitive Java types such as int. This type is returned by the indexed read method or is used as the parameter type of the indexed write method.,;java.beans.IndexedPropertyDescriptor.getIndexedPropertyType(),;1
getIndexedReadMethod,1,1,Gets the method that should be used to read an indexed property value.,;java.beans.IndexedPropertyDescriptor.getIndexedReadMethod(),;1
getIndexedWriteMethod,1,1,Gets the method that should be used to write an indexed property value.,;java.beans.IndexedPropertyDescriptor.getIndexedWriteMethod(),;1
getIndexNames,1,1,"Returns, in the same order as was given to this instance's constructor, an unmodifiable List of the names of the items the values of which are used to uniquely index each row element of tabular data values described by this TabularType instance.",;javax.management.openmbean.TabularType.getIndexNames(),;1
getIndexOfChild,1,1,"Returns the index of child in parent. If either the parent or child is null, returns -1.",";javax.swing.tree.DefaultTreeModel.getIndexOfChild(Object,Object)",;1
getInetAddresses,1,1,"Convenience method to return an Enumeration with all or a subset of the InetAddresses bound to this network interface. If there is a security manager, its checkConnect method is called for each InetAddress. Only InetAddresses where the checkConnect doesn't throw a SecurityException will be returned in the Enumeration. However, if the caller has the NetPermission(""getNetworkInformation"") permission, then all InetAddresses are returned.",;java.net.NetworkInterface.getInetAddresses(),;1
getInfinity,1,1,Gets the string used to represent infinity. Almost always left unchanged.,;java.text.DecimalFormatSymbols.getInfinity(),;1
getInheritsPopupMenu,1,1,Returns true if the JPopupMenu should be inherited from the parent.,;javax.swing.JComponent.getInheritsPopupMenu(),;1
getInit,1,1,Returns the amount of memory in bytes that the Java virtual machine initially requests from the operating system for memory management. This method returns -1 if the initial memory size is undefined.,;java.lang.management.MemoryUsage.getInit(),;1
getInitialContext,1,1,"Creates an initial context using the specified environment properties. If an InitialContextFactoryBuilder has been installed, it is used to create the factory for creating the initial context. Otherwise, the class specified in the Context.INITIAL_CONTEXT_FACTORY environment property is used. Note that an initial context factory (an object that implements the InitialContextFactory interface) must be public and must have a public constructor that accepts no arguments.",";javax.naming.spi.NamingManager.getInitialContext(Hashtable&lt;?,?&gt;)",;1
getInitialPolicies,1,1,"Returns an immutable Set of initial policy identifiers (OID strings), indicating that any one of these policies would be acceptable to the certificate user for the purposes of certification path processing. The default return value is an empty Set, which is interpreted as meaning that any policy would be acceptable.",;java.security.cert.PKIXParameters.getInitialPolicies(),;1
getInitialSelectionValue,1,1,Returns the input value that is displayed as initially selected to the user.,;javax.swing.JOptionPane.getInitialSelectionValue(),;1
getInitialValue,1,1,Returns the initial value.,;javax.swing.JOptionPane.getInitialValue(),;1
getInitialValueIndex,1,1,Returns the initial index into the buttons to select. The index is calculated from the initial value from the JOptionPane and options of the JOptionPane or 0.,;javax.swing.plaf.basic.BasicOptionPaneUI.getInitialValueIndex(),;1
getInitiatorAddress,1,1,Get the initiator's address for this channel binding.,;org.ietf.jgss.ChannelBinding.getInitiatorAddress(),;1
getInitThreshold,1,1,Gets the initial threshold value common to all observed objects.,;javax.management.monitor.CounterMonitor.getInitThreshold(),;1
getInput,1,1,"Returns the ImageInputStream or other Object previously set as the input source. If the input source has not been set, null is returned.",;javax.imageio.ImageReader.getInput(),;1
getInputClass,1,1,"Returns a Class object representing the class or interface type that must be implemented by an input source in order to be ""wrapped"" in an ImageInputStream via the createInputStreamInstance method. Typical return values might include InputStream.class or URL.class, but any class may be used.",;javax.imageio.spi.ImageInputStreamSpi.getInputClass(),;1
getInputEvent,1,1,"Returns the InputEvent that triggered the hyperlink event. This will typically be a MouseEvent. If a constructor is used that does not specify an InputEvent, or @{code null} was specified as the InputEvent, this returns null.",;javax.swing.event.HyperlinkEvent.getInputEvent(),;1
getInputMethodControlObject,1,1,"Returns a control object from the current input method, or null. A control object provides methods that control the behavior of the input method or obtain information from the input method. The type of the object is an input method specific class. Clients have to compare the result against known input method control object classes and cast to the appropriate class to invoke the methods provided. If no input methods are available or the current input method does not provide an input method control object, then null is returned.",;java.awt.im.InputContext.getInputMethodControlObject(),;1
getInputMethodListeners,1,1,Returns an array of all the input method listeners registered on this component.,;java.awt.Component.getInputMethodListeners(),;1
getInputSource,1,1,Get the SAX InputSource to be used for the Source.,;javax.xml.transform.sax.SAXSource.getInputSource(),;1
getInputTypes,1,1,"Returns an array of Class objects indicating what types of objects may be used as arguments to the reader's setInput method. For most readers, which only accept input from an ImageInputStream, a single-element array containing ImageInputStream.class should be returned.",;javax.imageio.spi.ImageReaderSpi.getInputTypes(),;1
getInputValue,1,1,"Returns the value the user has input, if wantsInput is true.",;javax.swing.JOptionPane.getInputValue(),;1
getInputVerifier,1,1,Returns the input verifier for this component.,;javax.swing.JComponent.getInputVerifier(),;1
getInsertionIndex,1,1,"Returns the insertion index. This is the character index if the leading edge of the character was hit, and one greater than the character index if the trailing edge was hit.",;java.awt.font.TextHitInfo.getInsertionIndex(),;1
getInset,1,1,"Fetches the inset needed on a given side to account for the margin, border, and padding.",";javax.swing.text.html.StyleSheet.BoxPainter.getInset(int,View)",;1
getInsetSpan,1,1,Fetch the span along an axis that is taken up by the insets.,;javax.swing.text.AsyncBoxView.getInsetSpan(int),;1
getInsideAllocation,1,1,"Translates the immutable allocation given to the view to a mutable allocation that represents the interior allocation (i.e. the bounds of the given allocation with the top, left, bottom, and right insets removed. It is expected that the returned value would be further mutated to represent an allocation to a child view. This is implemented to reuse an instance variable so it avoids creating excessive Rectangles. Typically the result of calling this method would be fed to the childAllocation method.",;javax.swing.text.CompositeView.getInsideAllocation(Shape),;1
getInsideBorder,1,1,Returns the inside border object.,;javax.swing.border.CompoundBorder.getInsideBorder(),;1
getInstalledLookAndFeels,1,1,"Returns an array of LookAndFeelInfos representing the LookAndFeel implementations currently available. The LookAndFeelInfo objects can be used by an application to construct a menu of look and feel options for the user, or to determine which look and feel to set at startup time. To avoid the penalty of creating numerous LookAndFeel objects, LookAndFeelInfo maintains the class name of the LookAndFeel class, not the actual LookAndFeel instance. The following example illustrates setting the current look and feel from an instance of LookAndFeelInfo: UIManager.setLookAndFeel(info.getClassName());",;javax.swing.UIManager.getInstalledLookAndFeels(),;1
getInstanceFollowRedirects,1,1,Returns the value of this HttpURLConnection's instanceFollowRedirects field.,;java.net.HttpURLConnection.getInstanceFollowRedirects(),;1
getInstanceOf,1,1,"From a given bean, obtain an object representing a specified type view of that source object. The result may be the same object or a different object. If the requested target view isn't available then the given bean is returned. This method is provided in Beans 1.0 as a hook to allow the addition of more flexible bean behaviour in the future.",";java.beans.Beans.getInstanceOf(Object,Class&lt;?&gt;)",;1
getInstanceStrong,1,1,"Returns a SecureRandom object that was selected by using the algorithms/providers specified in the securerandom.strongAlgorithms Security property. Some situations require strong random values, such as when creating high-value/long-lived secrets like RSA public/private keys. To help guide applications in selecting a suitable strong SecureRandom implementation, Java distributions include a list of known strong SecureRandom implementations in the securerandom.strongAlgorithms Security property. Every implementation of the Java platform is required to support at least one strong SecureRandom implementation.",;java.security.SecureRandom.getInstanceStrong(),;1
getInstant,1,1,"Gets the transition instant. This is the instant of the discontinuity, which is defined as the first instant that the 'after' offset applies. The methods getInstant(), getDateTimeBefore() and getDateTimeAfter() all represent the same instant.",;java.time.zone.ZoneOffsetTransition.getInstant(),;1
getInstantiatedMethodType,1,1,Get the signature of the primary functional interface method after type variables are substituted with their instantiation from the capture site.,;java.lang.invoke.SerializedLambda.getInstantiatedMethodType(),;1
getIntegerAttributeValue,1,1,"Fetches an integer attribute value. Attribute values are stored as a string, and this is a convenience method to convert to an actual integer.",";javax.swing.text.html.HTML.getIntegerAttributeValue(AttributeSet,HTML.Attribute,int)",;1
getIntercellSpacing,1,1,Returns the horizontal and vertical space between cells. The default spacing is look and feel dependent.,;javax.swing.JTable.getIntercellSpacing(),;1
getInterface,1,1,Retrieve the address of the network interface used for multicast packets.,;java.net.MulticastSocket.getInterface(),;1
getInterfaceAddresses,1,1,"Get a List of all or a subset of the InterfaceAddresses of this network interface. If there is a security manager, its checkConnect method is called with the InetAddress for each InterfaceAddress. Only InterfaceAddresses where the checkConnect doesn't throw a SecurityException will be returned in the List.",;java.net.NetworkInterface.getInterfaceAddresses(),;1
getInterfaces,1,1,"Determines the interfaces implemented by the class or interface represented by this object. If this object represents a class, the return value is an array containing objects representing all interfaces implemented by the class. The order of the interface objects in the array corresponds to the order of the interface names in the implements clause of the declaration of the class represented by this object. For example, given the declaration: class Shimmer implements FloorWax, DessertTopping { ... } suppose the value of s is an instance of Shimmer; the value of the expression: s.getClass().getInterfaces()[0] is the Class object that represents interface FloorWax; and the value of: s.getClass().getInterfaces()[1] is the Class object that represents interface DessertTopping. If this object represents an interface, the array contains objects representing all interfaces extended by the interface. The order of the interface objects in the array corresponds to the order of the interface names in the extends clause of the declaration of the interface represented by this object. If this object represents a class or interface that implements no interfaces, the method returns an array of length 0. If this object represents a primitive type or void, the method returns an array of length 0. If this Class object represents an array type, the interfaces Cloneable and java.io.Serializable are returned in that order.",;java.lang.Class.getInterfaces(),;1
getInternalFrameListeners,1,1,Returns an array of all the InternalFrameListeners added to this JInternalFrame with addInternalFrameListener.,;javax.swing.JInternalFrame.getInternalFrameListeners(),;1
getInternationalCurrencySymbol,1,1,Returns the ISO 4217 currency code of the currency of these DecimalFormatSymbols.,;java.text.DecimalFormatSymbols.getInternationalCurrencySymbol(),;1
getInterpolationType,1,1,Returns the interpolation type used by this op.,;java.awt.image.AffineTransformOp.getInterpolationType(),;1
getIntParameter,1,1,A convenience method to return a parameter as an int. An exception is thrown if the parameter is null or not an Integer.,;java.awt.image.renderable.ParameterBlock.getIntParameter(int),;1
getInvalidCharacters,1,1,Returns the characters that are not valid for input.,;javax.swing.text.MaskFormatter.getInvalidCharacters(),;1
getInverted,1,1,"Returns true if the value-range shown for the slider is reversed,",;javax.swing.JSlider.getInverted(),;1
getInvocationHandler,1,1,Returns the invocation handler for the specified proxy instance.,;java.lang.reflect.Proxy.getInvocationHandler(Object),;1
getInvoker,1,1,Returns the component which is the 'invoker' of this popup menu.,;javax.swing.JPopupMenu.getInvoker(),;1
getInvokesStopCellEditing,1,1,Returns the indicator that tells what happens when editing is interrupted.,;javax.swing.JTree.getInvokesStopCellEditing(),;1
getISO3Country,1,1,"Returns a three-letter abbreviation for this locale's country. If the country matches an ISO 3166-1 alpha-2 code, the corresponding ISO 3166-1 alpha-3 uppercase code is returned. If the locale doesn't specify a country, this will be the empty string. The ISO 3166-1 codes can be found on-line.",;java.util.Locale.getISO3Country(),;1
getISO3Language,1,1,"Returns a three-letter abbreviation of this locale's language. If the language matches an ISO 639-1 two-letter code, the corresponding ISO 639-2/T three-letter lowercase code is returned. The ISO 639-2 language codes can be found on-line, see ""Codes for the Representation of Names of Languages Part 2: Alpha-3 Code"". If the locale specifies a three-letter language, the language is returned as is. If the locale does not specify a language the empty string is returned.",;java.util.Locale.getISO3Language(),;1
getISOCountries,1,1,"Returns a list of all 2-letter country codes defined in ISO 3166. Can be used to create Locales. Note: The Locale class also supports other codes for country (region), such as 3-letter numeric UN M.49 area codes. Therefore, the list returned by this method does not contain ALL valid codes that can be used to create Locales.",;java.util.Locale.getISOCountries(),;1
getIssuer,1,1,"Returns the issuer criterion as an X500Principal. This distinguished name must match the issuer distinguished name in the X509Certificate. If null, the issuer criterion is disabled and any issuer distinguished name will do.",;java.security.cert.X509CertSelector.getIssuer(),;1
getIssuerAlternativeNames,1,1,"Gets an immutable collection of issuer alternative names from the IssuerAltName extension, (OID = 2.5.29.18). The ASN.1 definition of the IssuerAltName extension is: IssuerAltName ::= GeneralNames The ASN.1 definition of GeneralNames is defined in getSubjectAlternativeNames. If this certificate does not contain an IssuerAltName extension, null is returned. Otherwise, a Collection is returned with an entry representing each GeneralName included in the extension. Each entry is a List whose first entry is an Integer (the name type, 0-8) and whose second entry is a String or a byte array (the name, in string or ASN.1 DER encoded form, respectively). For more details about the formats used for each name type, see the getSubjectAlternativeNames method. Note that the Collection returned may contain more than one name of the same type. Also, note that the returned Collection is immutable and any entries containing byte arrays are cloned to protect against subsequent modifications. This method was added to version 1.4 of the Java 2 Platform Standard Edition. In order to maintain backwards compatibility with existing service providers, this method is not abstract and it provides a default implementation. Subclasses should override this method with a correct implementation.",;java.security.cert.X509Certificate.getIssuerAlternativeNames(),;1
getIssuerAsBytes,1,1,"Returns the issuer criterion as a byte array. This distinguished name must match the issuer distinguished name in the X509Certificate. If null, the issuer criterion is disabled and any issuer distinguished name will do. If the value returned is not null, it is a byte array containing a single DER encoded distinguished name, as defined in X.501. The ASN.1 notation for this structure is supplied in the documentation for setIssuer(byte [] issuerDN). Note that the byte array returned is cloned to protect against subsequent modifications.",;java.security.cert.X509CertSelector.getIssuerAsBytes(),;1
getIssuerAsString,1,1,"Denigrated, use getIssuer() or getIssuerAsBytes() instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names. Returns the issuer criterion as a String. This distinguished name must match the issuer distinguished name in the X509Certificate. If null, the issuer criterion is disabled and any issuer distinguished name will do. If the value returned is not null, it is a distinguished name, in RFC 2253 format.",;java.security.cert.X509CertSelector.getIssuerAsString(),;1
getIssuerNames,1,1,"Returns a copy of the issuerNames criterion. The issuer distinguished name in the X509CRL must match at least one of the specified distinguished names. If the value returned is null, any issuer distinguished name will do. If the value returned is not null, it is a Collection of names. Each name is a String or a byte array representing a distinguished name (in RFC 2253 or ASN.1 DER encoded form, respectively). Note that the Collection returned may contain duplicate names. If a name is specified as a byte array, it should contain a single DER encoded distinguished name, as defined in X.501. The ASN.1 notation for this structure is given in the documentation for setIssuerNames(Collection names). Note that a deep copy is performed on the Collection to protect against subsequent modifications.",;java.security.cert.X509CRLSelector.getIssuerNames(),;1
getIssuers,1,1,"Returns the issuerNames criterion. The issuer distinguished name in the X509CRL must match at least one of the specified distinguished names. If the value returned is null, any issuer distinguished name will do. If the value returned is not null, it is a unmodifiable Collection of X500Principals.",;java.security.cert.X509CRLSelector.getIssuers(),;1
getIssuerUniqueID,1,1,Gets the issuerUniqueID value from the certificate. The issuer unique identifier is present in the certificate to handle the possibility of reuse of issuer names over time. RFC 3280 recommends that names not be reused and that conforming certificates not make use of unique identifiers. Applications conforming to that profile should be capable of parsing unique identifiers and making comparisons. The ASN.1 definition for this is: issuerUniqueID [1] IMPLICIT UniqueIdentifier OPTIONAL UniqueIdentifier ::= BIT STRING,;java.security.cert.X509Certificate.getIssuerUniqueID(),;1
getItalicAngle,1,1,Returns the italic angle of this Font. The italic angle is the inverse slope of the caret which best matches the posture of this Font.,;java.awt.Font.getItalicAngle(),;1
getItemAt,1,1,Returns the list item at the specified index. If index is out of range (less than zero or greater than or equal to size) it will return null.,;javax.swing.JComboBox.getItemAt(int),;1
getItems,1,1,Gets the items in the list.,;java.awt.List.getItems(),;1
getItemSelectable,1,1,Returns the originator of the event.,;java.awt.event.ItemEvent.getItemSelectable(),;1
getJarFile,1,1,Return the JAR file for this connection.,;java.net.JarURLConnection.getJarFile(),;1
getJarFiles,1,1,Gets the list of .jar files specified by the ARCHIVE attribute of the MLET tag.,;javax.management.loading.MLetContent.getJarFiles(),;1
getJarFileURL,1,1,Returns the URL for the Jar file for this connection.,;java.net.JarURLConnection.getJarFileURL(),;1
getJavaEncoding,1,1,Gets the corresponding Java encoding name from an IANA name. This method is a helper method for the derived class to convert encoding names.,;javax.xml.bind.helpers.AbstractMarshallerImpl.getJavaEncoding(String),;1
getJavaFileForInput,1,1,Description copied from interface:JavaFileManager,";javax.tools.ForwardingJavaFileManager.getJavaFileForInput(JavaFileManager.Location,String,JavaFileObject.Kind)",;1
getJavaFileForOutput,1,1,Description copied from interface:JavaFileManager,";javax.tools.ForwardingJavaFileManager.getJavaFileForOutput(JavaFileManager.Location,String,JavaFileObject.Kind,FileObject)",;1
getJavaInitializationString,1,1,"This method is intended for use when generating Java code to set the value of the property. It should return a fragment of Java code that can be used to initialize a variable with the current property value. Example results are ""2"", ""new Color(127,127,34)"", ""Color.orange"", etc.",;java.beans.PropertyEditorSupport.getJavaInitializationString(),;1
getJAXBNode,1,1,"Gets the JAXB object associated with the given XML element. Once a JAXB object tree is associated with an XML fragment, this method enables navigation between the two trees. An association between an XML element and a JAXB object is established by the unmarshal, marshal and update methods. Note that this association is partial; not all XML elements have associated JAXB objects, and not all JAXB objects have associated XML elements.",;javax.xml.bind.Binder.getJAXBNode(XmlNode),;1
getJobName,1,1,Gets the name of the document to be printed.,;java.awt.print.PrinterJob.getJobName(),;1
getJustificationInfo,1,1,Returns the justification information for this GraphicAttribute. Subclasses can override this method to provide different justification information.,;java.awt.font.GraphicAttribute.getJustificationInfo(),;1
getJustifiedLayout,1,1,"Creates a copy of this TextLayout justified to the specified width. If this TextLayout has already been justified, an exception is thrown. If this TextLayout object's justification ratio is zero, a TextLayout identical to this TextLayout is returned.",;java.awt.font.TextLayout.getJustifiedLayout(float),;1
getKeepAlive,1,1,Tests if SO_KEEPALIVE is enabled.,;java.net.Socket.getKeepAlive(),;1
getKeepAliveTime,1,1,"Returns the thread keep-alive time, which is the amount of time that threads in excess of the core pool size may remain idle before being terminated.",;java.util.concurrent.ThreadPoolExecutor.getKeepAliveTime(TimeUnit),;1
getKernel,1,1,Returns the Kernel.,;java.awt.image.ConvolveOp.getKernel(),;1
getKernelData,1,1,"Returns the kernel data in row major order. The data array is returned. If data is null, a new array is allocated.",;java.awt.image.Kernel.getKernelData(float[]),;1
getKeyEventDispatchers,1,1,"Returns this KeyboardFocusManager's KeyEventDispatcher chain as a List. The List will not include this KeyboardFocusManager unless it was explicitly re-registered via a call to addKeyEventDispatcher. If no other KeyEventDispatchers are registered, implementations are free to return null or a List of length 0. Client code should not assume one behavior over another, nor should it assume that the behavior, once established, will not change.",;java.awt.KeyboardFocusManager.getKeyEventDispatchers(),;1
getKeyEventPostProcessors,1,1,"Returns this KeyboardFocusManager's KeyEventPostProcessor chain as a List. The List will not include this KeyboardFocusManager unless it was explicitly added via a call to addKeyEventPostProcessor. If no KeyEventPostProcessors are registered, implementations are free to return null or a List of length 0. Client code should not assume one behavior over another, nor should it assume that the behavior, once established, will not change.",;java.awt.KeyboardFocusManager.getKeyEventPostProcessors(),;1
getKeyEventType,1,1,Returns the type of KeyEvent which corresponds to this AWTKeyStroke.,;java.awt.AWTKeyStroke.getKeyEventType(),;1
getKeyInfoFactory,1,1,Returns a KeyInfoFactory that creates KeyInfo objects. The returned KeyInfoFactory has the same mechanism type and provider as this XMLSignatureFactory.,;javax.xml.crypto.dsig.XMLSignatureFactory.getKeyInfoFactory(),;1
getKeyLength,1,1,Returns the to-be-derived key length or 0 if not specified. Note: this is used to indicate the preference on key length for variable-key-size ciphers. The actual key size depends on each provider's implementation.,;javax.crypto.spec.PBEKeySpec.getKeyLength(),;1
getKeyListener,1,1,Implementation of ComboPopup.getKeyListener().,;javax.swing.plaf.basic.BasicComboPopup.getKeyListener(),;1
getKeyListeners,1,1,Returns an array of all the key listeners registered on this component.,;java.awt.Component.getKeyListeners(),;1
getKeyLocation,1,1,"Returns the location of the key that originated this key event. Some keys occur more than once on a keyboard, e.g. the left and right shift keys. Additionally, some keys occur on the numeric keypad. This provides a way of distinguishing such keys.",;java.awt.event.KeyEvent.getKeyLocation(),;1
getKeyManagers,1,1,Returns one key manager for each type of key material.,;javax.net.ssl.KeyManagerFactory.getKeyManagers(),;1
getKeymapName,1,1,Fetches the name of the keymap that will be installed/used by default for this UI. This is implemented to create a name based upon the classname. The name is the the name of the class with the package prefix removed.,;javax.swing.plaf.basic.BasicTextUI.getKeymapName(),;1
getKeyModifiersText,1,1,"Returns a String describing the modifier key(s), such as ""Shift"", or ""Ctrl+Shift"". These strings can be localized by changing the awt.properties file. Note that InputEvent.ALT_MASK and InputEvent.BUTTON2_MASK have the same value, so the string ""Alt"" is returned for both modifiers. Likewise, InputEvent.META_MASK and InputEvent.BUTTON3_MASK have the same value, so the string ""Meta"" is returned for both modifiers.",;java.awt.event.KeyEvent.getKeyModifiersText(int),;1
getKeyParams,1,1,Returns the parameters to be associated with key.,;java.security.spec.RSAKeyGenParameterSpec.getKeyParams(),;1
getKeyProperty,1,1,Obtains the value associated with a key in a key property.,;javax.management.ObjectName.getKeyProperty(String),;1
getKeyPropertyList,1,1,"Returns the key properties as a Hashtable. The returned value is a Hashtable in which each key is a key in the ObjectName's key property list and each value is the associated value.The returned value may be unmodifiable. If it is modifiable, changing it has no effect on this ObjectName.",;javax.management.ObjectName.getKeyPropertyList(),;1
getKeyPropertyListString,1,1,"Returns a string representation of the list of key properties specified at creation time. If this ObjectName was constructed with the constructor ObjectName(String), the key properties in the returned String will be in the same order as in the argument to the constructor.",;javax.management.ObjectName.getKeyPropertyListString(),;1
getKeySelectionManager,1,1,Returns the list's key-selection manager.,;javax.swing.JComboBox.getKeySelectionManager(),;1
getKeySelector,1,1,Description copied from interface:XMLCryptoContext,;javax.xml.crypto.dom.DOMCryptoContext.getKeySelector(),;1
getKeysize,1,1,Returns the keysize.,;java.security.spec.RSAKeyGenParameterSpec.getKeysize(),;1
getKeyStore,1,1,Returns the KeyStore described by this object.,;java.security.KeyStore.Builder.getKeyStore(),;1
getKeyStrokeForEvent,1,1,"Returns a KeyStroke which represents the stroke which generated a given KeyEvent. This method obtains the keyChar from a KeyTyped event, and the keyCode from a KeyPressed or KeyReleased event. The KeyEvent modifiers are obtained for all three types of KeyEvent.",;javax.swing.KeyStroke.getKeyStrokeForEvent(KeyEvent),;1
getKeyText,1,1,"Returns a String describing the keyCode, such as ""HOME"", ""F1"" or ""A"". These strings can be localized by changing the awt.properties file.",;java.awt.event.KeyEvent.getKeyText(int),;1
getKeyType,1,1,Returns the key type for this long-term key.,;javax.security.auth.kerberos.KerberosKey.getKeyType(),;1
getL,1,1,"Returns the size in bits, l, of the random exponent (private value).",;javax.crypto.spec.DHParameterSpec.getL(),;1
getLabelFor,1,1,Get the component this is labelling.,;javax.swing.JLabel.getLabelFor(),;1
getLabelTable,1,1,Returns the dictionary of what labels to draw at which values.,;javax.swing.JSlider.getLabelTable(),;1
getLanguage,1,1,"Returns the language code of this Locale. Note: ISO 639 is not a stable standard閳 some languages' codes have changed. Locale's constructor recognizes both the new and the old codes for the languages whose codes have changed, but this function always returns the old code. If you want to check for a specific language whose code has changed, don't do if (locale.getLanguage().equals(""he"")) // BAD! ... Instead, do if (locale.getLanguage().equals(new Locale(""he"").getLanguage())) ...",;java.util.Locale.getLanguage(),;1
getLargeDisplayIcon,1,1,Returns the large display icon for the panel.,;javax.swing.colorchooser.AbstractColorChooserPanel.getLargeDisplayIcon(),;1
getLargestMinimum,1,1,"Gets the largest possible minimum value that the field can take. For example, the ISO day-of-month always starts at 1. The largest minimum is therefore 1.",;java.time.temporal.ValueRange.getLargestMinimum(),;1
getLargestPoolSize,1,1,Returns the largest number of threads that have ever simultaneously been in the pool.,;java.util.concurrent.ThreadPoolExecutor.getLargestPoolSize(),;1
getLastAccessTime,1,1,Returns the last access time of the entry. The last access time is from the extended timestamp fields of entry's optional extra data when read from a ZIP file or ZIP file formatted stream.,;java.util.zip.ZipEntry.getLastAccessTime(),;1
getLastChildPath,1,1,Returns a path to the last child of parent.,;javax.swing.plaf.basic.BasicTreeUI.getLastChildPath(TreePath),;1
getLastCursor,1,1,Returns the last Cursor that was set by the setCursor method that is not a resizable Cursor.,;javax.swing.JInternalFrame.getLastCursor(),;1
getLastDividerLocation,1,1,Returns the last location the divider was at.,;javax.swing.JSplitPane.getLastDividerLocation(),;1
getLastDragLocation,1,1,Returns the last drag location of the JSplitPane.,;javax.swing.plaf.basic.BasicSplitPaneUI.getLastDragLocation(),;1
getLastIndex,1,1,Returns the index of the last row whose selection may have changed. getLastIndex() &gt;= getFirstIndex(),;javax.swing.event.ListSelectionEvent.getLastIndex(),;1
getLastLeaf,1,1,Finds and returns the last leaf that is a descendant of this node -- either this node or its last child's last leaf. Returns this node if it is a leaf.,;javax.swing.tree.DefaultMutableTreeNode.getLastLeaf(),;1
getLastPathComponent,1,1,Returns the last element of this path.,;javax.swing.tree.TreePath.getLastPathComponent(),;1
getLastRow,1,1,Returns the last row that changed.,;javax.swing.event.TableModelEvent.getLastRow(),;1
getLastSelectedPathComponent,1,1,Returns the last path component of the selected path. This is a convenience method for getSelectionModel().getSelectionPath().getLastPathComponent(). This is typically only useful if the selection has one path.,;javax.swing.JTree.getLastSelectedPathComponent(),;1
getLastVisibleIndex,1,1,"Returns the largest list index that is currently visible. If nothing is visible or the list is empty, -1 is returned. Note that the returned cell may only be partially visible.",;javax.swing.JList.getLastVisibleIndex(),;1
getLateReflectionDelay,1,1,Returns the late reflection delay time in microseconds. This is the amount of time between when the first early reflections are heard and when the first late reflections are heard.,;javax.sound.sampled.ReverbType.getLateReflectionDelay(),;1
getLateReflectionIntensity,1,1,Returns the late reflection intensity in decibels. This is the amplitude attenuation of the first late reflections relative to the direct signal.,;javax.sound.sampled.ReverbType.getLateReflectionIntensity(),;1
getLayeredPaneAbove,1,1,"Convenience method that returns the first JLayeredPane which contains the specified component. Note that all JFrames have a JLayeredPane at their root, so any component in a JFrame will have a JLayeredPane parent.",;javax.swing.JLayeredPane.getLayeredPaneAbove(Component),;1
getLayerEventMask,1,1,"Returns the bitmap of event mask to receive by this JLayer and its LayerUI. It means that LayerUI.eventDispatched(AWTEvent, JLayer) method will only receive events that match the event mask. By default JLayer receives no events.",;javax.swing.JLayer.getLayerEventMask(),;1
getLayoutDimensions,1,1,Determines column widths and row heights for the layout grid. Most applications do not call this method directly.,;java.awt.GridBagLayout.getLayoutDimensions(),;1
getLayoutFlags,1,1,"Returns flags describing the global state of the GlyphVector. Flags not described below are reserved. The default implementation returns 0 (meaning false) for the position adjustments, transforms, rtl, and complex flags. Subclassers should override this method, and make sure it correctly describes the GlyphVector and corresponds to the results of related calls.",;java.awt.font.GlyphVector.getLayoutFlags(),;1
GetLayoutInfo,1,1,This method is obsolete and supplied for backwards compatibility only; new code should call getLayoutInfo instead. This method is the same as getLayoutInfo; refer to getLayoutInfo for details on parameters and return value.,";java.awt.GridBagLayout.GetLayoutInfo(Container,int)",;1
getLayoutOrientation,1,1,"Returns the layout orientation property for the list: VERTICAL if the layout is a single column of cells, VERTICAL_WRAP if the layout is ""newspaper style"" with the content flowing vertically then horizontally, or HORIZONTAL_WRAP if the layout is ""newspaper style"" with the content flowing horizontally then vertically.",;javax.swing.JList.getLayoutOrientation(),;1
getLayoutOrigin,1,1,"Determines the origin of the layout area, in the graphics coordinate space of the target container. This value represents the pixel coordinates of the top-left corner of the layout area regardless of the ComponentOrientation value of the container. This is distinct from the grid origin given by the cell coordinates (0,0). Most applications do not call this method directly.",;java.awt.GridBagLayout.getLayoutOrigin(),;1
getLayoutPath,1,1,"Return the LayoutPath, or null if the layout path is the default path (x maps to advance, y maps to offset).",;java.awt.font.TextLayout.getLayoutPath(),;1
getLayoutQueue,1,1,Fetch the queue to use for layout.,;javax.swing.text.AsyncBoxView.getLayoutQueue(),;1
getLayoutView,1,1,Returns the view at a given index. The child views of the paragraph are rows which have been used to arrange pieces of the Views that represent the child elements. This methods returns the view responsible for the child element index (prior to breaking). These are the Views that were produced from a factory (to represent the child elements) and used for layout.,;javax.swing.text.ParagraphView.getLayoutView(int),;1
getLayoutViewCount,1,1,"Returns the number of views that this view is responsible for. The child views of the paragraph are rows which have been used to arrange pieces of the Views that represent the child elements. This is the number of views that have been tiled in two dimensions, and should be equivalent to the number of child elements to the element this view is responsible for.",;javax.swing.text.ParagraphView.getLayoutViewCount(),;1
getLayoutWeights,1,1,"Determines the weights of the layout grid's columns and rows. Weights are used to calculate how much a given column or row stretches beyond its preferred size, if the layout has extra room to fill. Most applications do not call this method directly.",;java.awt.GridBagLayout.getLayoutWeights(),;1
getLeader,1,1,Returns the leader of the tab.,;javax.swing.text.TabStop.getLeader(),;1
getLeafCount,1,1,"Returns the total number of leaves that are descendants of this node. If this node is a leaf, returns 1. This method is O(n) where n is the number of descendants of this node.",;javax.swing.tree.DefaultMutableTreeNode.getLeafCount(),;1
getLeafIcon,1,1,Returns the icon used to represent leaf nodes.,;javax.swing.tree.DefaultTreeCellRenderer.getLeafIcon(),;1
getLeastSignificantBits,1,1,Returns the least significant 64 bits of this UUID's 128 bit value.,;java.util.UUID.getLeastSignificantBits(),;1
getLeftComponent,1,1,Returns the component to the left (or above) the divider.,;javax.swing.JSplitPane.getLeftComponent(),;1
getLeftIndent,1,1,Gets the left indent setting.,;javax.swing.text.StyleConstants.getLeftIndent(AttributeSet),;1
getLengths,1,1,Returns an array of shorts containing the number of values for each length in the Huffman table. The returned array is a copy.,;javax.imageio.plugins.jpeg.JPEGHuffmanTable.getLengths(),;1
getLevelAt,1,1,"Return the resolved level of the character at offset. If offset is &lt; 0 or 閳 the length of the line, return the base direction level.",;java.text.Bidi.getLevelAt(int),;1
getLexicalHandler,1,1,Get a SAX2 LexicalHandler for the output.,;javax.xml.transform.sax.SAXResult.getLexicalHandler(),;1
getLibraryDirectory,1,1,Gets the current directory used by the library loader for storing native libraries before they are loaded into memory.,;javax.management.loading.MLet.getLibraryDirectory(),;1
getLimit,1,1,Returns the maximum number of edits this UndoManager holds. A value less than 0 indicates the number of edits is not limited.,;javax.swing.undo.UndoManager.getLimit(),;1
getLimits,1,1,Get the limits passed in the constructor.,;java.text.ChoiceFormat.getLimits(),;1
getLineBreakIndex,1,1,Returns the index of the first character which will not fit on on a line beginning at start and possible measuring up to maxAdvance in graphical width.,";java.awt.font.TextMeasurer.getLineBreakIndex(int,float)",;1
getLineClass,1,1,Obtains the class of the line that this Line.Info object describes.,;javax.sound.sampled.Line.Info.getLineClass(),;1
getLineColor,1,1,Returns the color of the border.,;javax.swing.border.LineBorder.getLineColor(),;1
getLineCount,1,1,Determines the number of lines contained in the area.,;javax.swing.JTextArea.getLineCount(),;1
getLineEndOffset,1,1,Determines the offset of the end of the given line.,;javax.swing.JTextArea.getLineEndOffset(int),;1
getLineIncrement,1,1,"Deprecated.As of JDK version 1.1, replaced by getUnitIncrement().",;java.awt.Scrollbar.getLineIncrement(),;1
getLineJoin,1,1,Returns the line join style.,;java.awt.BasicStroke.getLineJoin(),;1
getLineLength,1,1,Returns the maximum line length.,;javax.swing.text.AbstractWriter.getLineLength(),;1
getLineOfOffset,1,1,Translates an offset into the components text to a line number.,;javax.swing.JTextArea.getLineOfOffset(int),;1
getLineSeparator,1,1,Returns the string used to represent newlines.,;javax.swing.text.AbstractWriter.getLineSeparator(),;1
getLineSpacing,1,1,Gets the line spacing setting.,;javax.swing.text.StyleConstants.getLineSpacing(AttributeSet),;1
getLineStartOffset,1,1,Determines the offset of the start of the given line.,;javax.swing.JTextArea.getLineStartOffset(int),;1
getLineWidth,1,1,"Returns the line width. Line width is represented in user space, which is the default-coordinate space used by Java 2D. See the Graphics2D class comments for more information on the user space coordinate system.",;java.awt.BasicStroke.getLineWidth(),;1
getLineWrap,1,1,"Gets the line-wrapping policy of the text area. If set to true the lines will be wrapped if they are too long to fit within the allocated width. If set to false, the lines will always be unwrapped.",;javax.swing.JTextArea.getLineWrap(),;1
getLinkCursor,1,1,Returns the cursor to use over hyper links.,;javax.swing.text.html.HTMLEditorKit.getLinkCursor(),;1
getLinkedException,1,1,Description copied from interface:ValidationEvent,;javax.xml.bind.helpers.ValidationEventImpl.getLinkedException(),;1
getLinkName,1,1,Retrieves the name of this link.,;javax.naming.LinkRef.getLinkName(),;1
getListDataListeners,1,1,Returns an array of all the list data listeners registered on this AbstractListModel.,;javax.swing.AbstractListModel.getListDataListeners(),;1
getListenerID,1,1,The ID of the listener to which the notification is targeted.,;javax.management.remote.TargetedNotification.getListenerID(),;1
getListenerList,1,1,"Passes back the event listener list as an array of ListenerType-listener pairs. Note that for performance reasons, this implementation passes back the actual data structure in which the listener data is stored internally! This method is guaranteed to pass back a non-null array, so that no null-checking is required in fire methods. A zero-length array of Object should be returned if there are currently no listeners. WARNING!!! Absolutely NO modification of the data contained in this array should be made -- if any such manipulation is necessary, it should be done on a copy of the array returned rather than the array itself.",;javax.swing.event.EventListenerList.getListenerList(),;1
getListenerMethodDescriptors,1,1,Gets the MethodDescriptors of the target listener interface.,;java.beans.EventSetDescriptor.getListenerMethodDescriptors(),;1
getListenerMethodName,1,1,Returns the name of the method that will trigger the action. A return value of null signifies that all methods in the listener interface trigger the action.,;java.beans.EventHandler.getListenerMethodName(),;1
getListenerMethods,1,1,Gets the methods of the target listener interface.,;java.beans.EventSetDescriptor.getListenerMethods(),;1
getListenerType,1,1,Gets the Class object for the target interface.,;java.beans.EventSetDescriptor.getListenerType(),;1
getListPainter,1,1,Fetches the list formatter to use for the given set of CSS attributes.,;javax.swing.text.html.StyleSheet.getListPainter(AttributeSet),;1
getLoadingImageIcon,1,1,Returns the icon to use while in the process of loading the image.,;javax.swing.text.html.ImageView.getLoadingImageIcon(),;1
getLoadsSynchronously,1,1,Returns true if the image should be loaded when first asked for.,;javax.swing.text.html.ImageView.getLoadsSynchronously(),;1
getLocalBounds,1,1,"Return the rectangle (0,0,bounds.width,bounds.height) for the component aComponent",;javax.swing.SwingUtilities.getLocalBounds(Component),;1
getLocalCertificateChain,1,1,Returns the certificate chain that were sent to the server during handshaking of the original connection that retrieved the network resource. Note: This method is useful only when using certificate-based cipher suites.,;java.net.SecureCacheResponse.getLocalCertificateChain(),;1
getLocalGraphicsEnvironment,1,1,Returns the local GraphicsEnvironment.,;java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment(),;1
getLocalHost,1,1,"Returns the address of the local host. This is achieved by retrieving the name of the host from the system, then resolving that name into an InetAddress. Note: The resolved address may be cached for a short period of time. If there is a security manager, its checkConnect method is called with the local host name and -1 as its arguments to see if the operation is allowed. If the operation is not allowed, an InetAddress representing the loopback address is returned.",;java.net.InetAddress.getLocalHost(),;1
getLocalizedCompressionTypeName,1,1,"Returns a localized version of the name of the current compression type, using the Locale returned by getLocale. The default implementation checks whether compression is supported and the compression mode is MODE_EXPLICIT. If so, if compressionType is non-null the value of getCompressionType is returned as a convenience.",;javax.imageio.ImageWriteParam.getLocalizedCompressionTypeName(),;1
getLocalizedDateTimePattern,1,1,Gets the formatting pattern for date and time styles for a locale and chronology. The locale and chronology are used to lookup the locale specific format for the requested dateStyle and/or timeStyle.,";java.time.format.DateTimeFormatterBuilder.getLocalizedDateTimePattern(FormatStyle,FormatStyle,Chronology,Locale)",;1
getLocalizedInputStream,1,1,"Deprecated.As of JDK1.1, the preferred way to translate a byte stream in the local encoding into a character stream in Unicode is via the InputStreamReader and BufferedReader classes.",;java.lang.Runtime.getLocalizedInputStream(InputStream),;1
getLocalizedMessage,1,1,"Creates a localized description of this throwable. Subclasses may override this method in order to produce a locale-specific message. For subclasses that do not override this method, the default implementation returns the same result as getMessage().",;java.lang.Throwable.getLocalizedMessage(),;1
getLocalizedName,1,1,"Return the localized string name of the Level, for the current default locale. If no localization information is available, the non-localized name is returned.",;java.util.logging.Level.getLocalizedName(),;1
getLocalizedOutputStream,1,1,"Deprecated.As of JDK1.1, the preferred way to translate a Unicode character stream into a byte stream in the local encoding is via the OutputStreamWriter, BufferedWriter, and PrintWriter classes.",;java.lang.Runtime.getLocalizedOutputStream(OutputStream),;1
getLocalPart,1,1,Get the local part of this QName.,;javax.xml.namespace.QName.getLocalPart(),;1
getLocalPatternChars,1,1,"Gets localized date-time pattern characters. For example: 'u', 't', etc.",;java.text.DateFormatSymbols.getLocalPatternChars(),;1
getLocalSupportedSignatureAlgorithms,1,1,"Obtains an array of supported signature algorithms that the local side is willing to use. Note: this method is used to indicate to the peer which signature algorithms may be used for digital signatures in TLS 1.2. It is not meaningful for TLS versions prior to 1.2. The signature algorithm name must be a standard Java Security name (such as ""SHA1withRSA"", ""SHA256withECDSA"", and so on). See Appendix A in the Java Cryptography Architecture API Specification &amp; Reference for information about standard algorithm names. Note: the local supported signature algorithms should conform to the algorithm constraints specified by getAlgorithmConstraints() method in SSLParameters.",;javax.net.ssl.ExtendedSSLSession.getLocalSupportedSignatureAlgorithms(),;1
getLocalTime,1,1,Gets the local time of day of the transition which must be checked with isMidnightEndOfDay(). The time is converted into an instant using the time definition.,;java.time.zone.ZoneOffsetTransitionRule.getLocalTime(),;1
getLocator,1,1,Description copied from interface:ValidationEvent,;javax.xml.bind.helpers.ValidationEventImpl.getLocator(),;1
getLockedMonitors,1,1,"Returns an array of MonitorInfo objects, each of which represents an object monitor currently locked by the thread associated with this ThreadInfo. If no locked monitor was requested for this thread info or no monitor is locked by the thread, this method will return a zero-length array.",;java.lang.management.ThreadInfo.getLockedMonitors(),;1
getLockedStackDepth,1,1,Returns the depth in the stack trace where the object monitor was locked. The depth is the index to the StackTraceElement array returned in the ThreadInfo.getStackTrace() method.,;java.lang.management.MonitorInfo.getLockedStackDepth(),;1
getLockedStackFrame,1,1,Returns the stack frame that locked the object monitor.,;java.lang.management.MonitorInfo.getLockedStackFrame(),;1
getLockedSynchronizers,1,1,"Returns an array of LockInfo objects, each of which represents an ownable synchronizer currently locked by the thread associated with this ThreadInfo. If no locked synchronizer was requested for this thread info or no synchronizer is locked by the thread, this method will return a zero-length array.",;java.lang.management.ThreadInfo.getLockedSynchronizers(),;1
getLockingKeyState,1,1,"Returns whether the given locking key on the keyboard is currently in its ""on"" state. Valid key codes are VK_CAPS_LOCK, VK_NUM_LOCK, VK_SCROLL_LOCK, and VK_KANA_LOCK.",;java.awt.Toolkit.getLockingKeyState(int),;1
getLockName,1,1,Returns the string representation of an object for which the thread associated with this ThreadInfo is blocked waiting. This method is equivalent to calling: getLockInfo().toString() This method will return null if this thread is not blocked waiting for any object or if the object is not owned by any thread.,;java.lang.management.ThreadInfo.getLockName(),;1
getLockOwnerId,1,1,Returns the ID of the thread which owns the object for which the thread associated with this ThreadInfo is blocked waiting. This method will return -1 if this thread is not blocked waiting for any object or if the object is not owned by any thread.,;java.lang.management.ThreadInfo.getLockOwnerId(),;1
getLockOwnerName,1,1,Returns the name of the thread which owns the object for which the thread associated with this ThreadInfo is blocked waiting. This method will return null if this thread is not blocked waiting for any object or if the object is not owned by any thread.,;java.lang.management.ThreadInfo.getLockOwnerName(),;1
getLog,1,1,Returns stream for the RMI call log.,;java.rmi.server.RemoteServer.getLog(),;1
getLoggerName,1,1,Get the source Logger's name.,;java.util.logging.LogRecord.getLoggerName(),;1
getLoggerNames,1,1,"Get an enumeration of known logger names. Note: Loggers may be added dynamically as new classes are loaded. This method only reports on the loggers that are currently registered. It is also important to note that this method only returns the name of a Logger, not a strong reference to the Logger itself. The returned String does nothing to prevent the Logger from being garbage collected. In particular, if the returned name is passed to LogManager.getLogger(), then the caller must check the return value from LogManager.getLogger() for null to properly handle the case where the Logger has been garbage collected in the time since its name was returned by this method.",;java.util.logging.LogManager.getLoggerNames(),;1
getLoggingMXBean,1,1,Returns LoggingMXBean for managing loggers. An alternative way to manage loggers is through the PlatformLoggingMXBean interface that can be obtained by calling: PlatformLoggingMXBean logging = ManagementFactory.getPlatformMXBean(PlatformLoggingMXBean.class);,;java.util.logging.LogManager.getLoggingMXBean(),;1
getLogicalBounds,1,1,Returns the logical bounds of this GlyphVector. This method is used when positioning this GlyphVector in relation to visually adjacent GlyphVector objects.,;java.awt.font.GlyphVector.getLogicalBounds(),;1
getLogicalRangesForVisualSelection,1,1,Returns the logical ranges of text corresponding to a visual selection.,";java.awt.font.TextLayout.getLogicalRangesForVisualSelection(TextHitInfo,TextHitInfo)",;1
getLogicalView,1,1,This method gives flow strategies access to the logical view of the FlowView.,;javax.swing.text.FlowView.FlowStrategy.getLogicalView(FlowView),;1
getLoginModuleName,1,1,Get the class name of the configured LoginModule.,;javax.security.auth.login.AppConfigurationEntry.getLoginModuleName(),;1
getLoginTimeout,1,1,Gets the maximum time in seconds that a driver can wait when attempting to log in to a database.,;java.sql.DriverManager.getLoginTimeout(),;1
getLogManager,1,1,Returns the global LogManager object.,;java.util.logging.LogManager.getLogManager(),;1
getLogStream,1,1,Deprecated.Use getLogWriter,;java.sql.DriverManager.getLogStream(),;1
getLogTimers,1,1,Returns true if logging is enabled.,;javax.swing.Timer.getLogTimers(),;1
getLogWriter,1,1,"Retrieves the log writer. The getLogWriter and setLogWriter methods should be used instead of the get/setlogStream methods, which are deprecated.",;java.sql.DriverManager.getLogWriter(),;1
getLongParameter,1,1,A convenience method to return a parameter as a long. An exception is thrown if the parameter is null or not a Long.,;java.awt.image.renderable.ParameterBlock.getLongParameter(int),;1
getLookAndFeel,1,1,Returns the current look and feel or null.,;javax.swing.UIManager.getLookAndFeel(),;1
getLookAndFeelDefaults,1,1,"Returns the UIDefaults from the current look and feel, that were obtained at the time the look and feel was installed. In general, developers should use the UIDefaults returned from getDefaults(). As the current look and feel may expect certain values to exist, altering the UIDefaults returned from this method could have unexpected results.",;javax.swing.UIManager.getLookAndFeelDefaults(),;1
getLoopbackAddress,1,1,"Returns the loopback address. The InetAddress returned will represent the IPv4 loopback address, 127.0.0.1, or the IPv6 loopback address, ::1. The IPv4 loopback address returned is only one of many in the form 127.*.*.*",;java.net.InetAddress.getLoopbackAddress(),;1
getLoopbackMode,1,1,Get the setting for local loopback of multicast datagrams.,;java.net.MulticastSocket.getLoopbackMode(),;1
getLowestSetBit,1,1,Returns the index of the rightmost (lowest-order) one bit in this BigInteger (the number of zero bits to the right of the rightmost one bit). Returns -1 if this BigInteger contains no one bits. (Computes (this == 0? -1 : log2(this &amp; -this)).),;java.math.BigInteger.getLowestSetBit(),;1
getLowestValue,1,1,Returns the smallest value that has an entry in the label table.,;javax.swing.plaf.basic.BasicSliderUI.getLowestValue(),;1
getLowestValueLabel,1,1,Returns the label that corresponds to the highest slider value in the label table.,;javax.swing.plaf.basic.BasicSliderUI.getLowestValueLabel(),;1
getLowThreshold,1,1,Gets the low threshold value common to all observed MBeans.,;javax.management.monitor.GaugeMonitor.getLowThreshold(),;1
getLSB,1,1,"Returns the left (top) side bearing of the glyph. This is the distance from 0,0 to the left (top) of the glyph bounds. If the bounds of the glyph is to the left of (above) the origin, the LSB is negative.",;java.awt.font.GlyphMetrics.getLSB(),;1
getM,1,1,Returns the value m of this characteristic 2 finite field.,;java.security.spec.ECFieldF2m.getM(),;1
getMacLength,1,1,Returns the length of the MAC in bytes.,;javax.crypto.Mac.getMacLength(),;1
getMagicCaretPosition,1,1,Gets the saved caret position.,;javax.swing.text.DefaultCaret.getMagicCaretPosition(),;1
getMajorAxis,1,1,Fetch the major axis (the axis the children are tiled along). This will have a value of either X_AXIS or Y_AXIS.,;javax.swing.text.AsyncBoxView.getMajorAxis(),;1
getMajorTickSpacing,1,1,"This method returns the major tick spacing. The number that is returned represents the distance, measured in values, between each major tick mark. If you have a slider with a range from 0 to 50 and the major tick spacing is set to 10, you will get major ticks next to the following values: 0, 10, 20, 30, 40, 50.",;javax.swing.JSlider.getMajorTickSpacing(),;1
getMajorVersion,1,1,Returns profile major version.,;java.awt.color.ICC_Profile.getMajorVersion(),;1
getMap,1,1,Returns the map backing this view.,;java.util.concurrent.ConcurrentHashMap.KeySetView.getMap(),;1
getMappedValue,1,1,"Returns the default mapped value for additions, or null if additions are not supported.",;java.util.concurrent.ConcurrentHashMap.KeySetView.getMappedValue(),;1
getMapSize,1,1,Returns the size of the color/alpha component arrays in this IndexColorModel.,;java.awt.image.IndexColorModel.getMapSize(),;1
getMarkBias,1,1,Returns the bias of the mark.,;javax.swing.text.DefaultCaret.getMarkBias(),;1
getMasks,1,1,Returns a mask array indicating which bits in a pixel contain the color and alpha samples.,;java.awt.image.PackedColorModel.getMasks(),;1
getMatchAllSubjectAltNames,1,1,"Indicates if the X509Certificate must contain all or at least one of the subjectAlternativeNames specified in the setSubjectAlternativeNames or addSubjectAlternativeName methods. If true, the X509Certificate must contain all of the specified subject alternative names. If false, the X509Certificate must contain at least one of the specified subject alternative names.",;java.security.cert.X509CertSelector.getMatchAllSubjectAltNames(),;1
getMatchingHeaders,1,1,Returns all the MimeHeader objects whose name matches a name in the given array of names.,;javax.xml.soap.MimeHeaders.getMatchingHeaders(String[]),;1
getMatchingRuleID,1,1,Retrieves the matching rule ID used to order the attribute values.,;javax.naming.ldap.SortKey.getMatchingRuleID(),;1
getMatteColor,1,1,Returns the color used for tiling the border or null if a tile icon is being used.,;javax.swing.border.MatteBorder.getMatteColor(),;1
getMaxAdvance,1,1,Gets the maximum advance width of any character in this Font. The advance is the distance from the leftmost point to the rightmost point on the string's baseline. The advance of a String is not necessarily the sum of the advances of its characters.,;java.awt.FontMetrics.getMaxAdvance(),;1
getMaxAge,1,1,"Returns the maximum age of the cookie, specified in seconds. By default, -1 indicating the cookie will persist until browser shutdown.",;java.net.HttpCookie.getMaxAge(),;1
getMaxAllowedKeyLength,1,1,"Returns the maximum key length for the specified transformation according to the installed JCE jurisdiction policy files. If JCE unlimited strength jurisdiction policy files are installed, Integer.MAX_VALUE will be returned. For more information on default key size in JCE jurisdiction policy files, please see Appendix E in the Java Cryptography Architecture Reference Guide.",;javax.crypto.Cipher.getMaxAllowedKeyLength(String),;1
getMaxAllowedParameterSpec,1,1,"Returns an AlgorithmParameterSpec object which contains the maximum cipher parameter value according to the jurisdiction policy file. If JCE unlimited strength jurisdiction policy files are installed or there is no maximum limit on the parameters for the specified transformation in the policy file, null will be returned.",;javax.crypto.Cipher.getMaxAllowedParameterSpec(String),;1
getMaxAscent,1,1,Determines the maximum ascent of the Font described by this FontMetrics object. No character extends further above the font's baseline than this height.,;java.awt.FontMetrics.getMaxAscent(),;1
getMaxBufferSize,1,1,Obtains the maximum buffer size supported by the data line.,;javax.sound.sampled.DataLine.Info.getMaxBufferSize(),;1
getMaxCRL,1,1,"Returns the maxCRLNumber criterion. The X509CRL must have a CRL number extension whose value is less than or equal to the specified value. If null, no maxCRLNumber check will be done.",;java.security.cert.X509CRLSelector.getMaxCRL(),;1
getMaxDecent,1,1,"Deprecated.As of JDK version 1.1.1, replaced by getMaxDescent().",;java.awt.FontMetrics.getMaxDecent(),;1
getMaxDegree,1,1,Returns maximum degree for corresponding role reference.,;javax.management.relation.RoleInfo.getMaxDegree(),;1
getMaxDescent,1,1,Determines the maximum descent of the Font described by this FontMetrics object. No character extends further below the font's baseline than this height.,;java.awt.FontMetrics.getMaxDescent(),;1
getMaxExpansion,1,1,Return the maximum length of any expansion sequences that end with the specified comparison order.,;java.text.CollationElementIterator.getMaxExpansion(int),;1
getMaxFieldSize,1,1,"Retrieves the maximum number of bytes that can be used for a column value in this RowSet object. This limit applies only to columns that hold values of the following types: BINARY, VARBINARY, LONGVARBINARY, CHAR, VARCHAR, and LONGVARCHAR. If the limit is exceeded, the excess data is silently discarded.",;javax.sql.rowset.BaseRowSet.getMaxFieldSize(),;1
getMaximizedBounds,1,1,Gets maximized bounds for this frame. Some fields may contain Integer.MAX_VALUE to indicate that system supplied values for this field must be used.,;java.awt.Frame.getMaximizedBounds(),;1
getMaximumCharHeight,1,1,Returns the maximum height of the the Font from the passed in SynthContext.,;javax.swing.plaf.synth.SynthGraphicsUtils.getMaximumCharHeight(SynthContext),;1
getMaximumCursorColors,1,1,"Returns the maximum number of colors the Toolkit supports in a custom cursor palette. Note: if an image is used which has more colors in its palette than the supported maximum, the Toolkit implementation will attempt to flatten the palette to the maximum. Since converting low-resolution images is difficult, no guarantees are made as to the quality of a cursor image which has more colors than the system supports. It is therefore recommended that this method be called and an appropriate image used so no image conversion is made.",;java.awt.Toolkit.getMaximumCursorColors(),;1
getMaximumPoolSize,1,1,Returns the maximum allowed number of threads.,;java.util.concurrent.ThreadPoolExecutor.getMaximumPoolSize(),;1
getMaximumRowCount,1,1,Returns the maximum number of items the combo box can display without a scrollbar,;javax.swing.JComboBox.getMaximumRowCount(),;1
getMaximumThumbSize,1,1,"Returns the largest acceptable size for the thumb. To create a fixed size thumb one make this method and getMinimumThumbSize return the same value. Warning : the value returned by this method should not be be modified, it's a shared static constant.",;javax.swing.plaf.basic.BasicScrollBarUI.getMaximumThumbSize(),;1
getMaximumValue,1,1,Returns the maximum value of this Spring.,;javax.swing.Spring.getMaximumValue(),;1
getMaximumWindowBounds,1,1,"Returns the maximum bounds for centered Windows. These bounds account for objects in the native windowing system such as task bars and menu bars. The returned bounds will reside on a single display with one exception: on multi-screen systems where Windows should be centered across all displays, this method returns the bounds of the entire display area. To get the usable bounds of a single display, use GraphicsConfiguration.getBounds() and Toolkit.getScreenInsets().",;java.awt.GraphicsEnvironment.getMaximumWindowBounds(),;1
getMaximumZoneSize,1,1,Get the current maximum zone size.,;javax.swing.text.ZoneView.getMaximumZoneSize(),;1
getMaxLabel,1,1,"Obtains the label for the maximum value, such as ""Right"" or ""Full.""",;javax.sound.sampled.FloatControl.getMaxLabel(),;1
getMaxPage,1,1,"Specifies the maximum value the user can specify as the last page to be printed for jobs using these attributes. This attribute cannot be modified by, and is not subject to any limitations of, the implementation or the target printer.",;java.awt.JobAttributes.getMaxPage(),;1
getMaxPathLength,1,1,Returns the value of the maximum number of intermediate non-self-issued certificates that may exist in a certification path. See the setMaxPathLength(int) method for more details.,;java.security.cert.PKIXBuilderParameters.getMaxPathLength(),;1
getMaxPriority,1,1,Returns the maximum priority of this thread group. Threads that are part of this group cannot have a higher priority than the maximum priority.,;java.lang.ThreadGroup.getMaxPriority(),;1
getMaxRows,1,1,"Retrieves the maximum number of rows that this RowSet object may contain. If this limit is exceeded, the excess rows are silently dropped.",;javax.sql.rowset.BaseRowSet.getMaxRows(),;1
getMaxSortKeys,1,1,Returns the maximum number of sort keys.,;javax.swing.DefaultRowSorter.getMaxSortKeys(),;1
getMaxWidth,1,1,Returns the maximum width for the TableColumn. The TableColumn's width can't be made larger than this either by the user or programmatically. The default maxWidth is Integer.MAX_VALUE.,;javax.swing.table.TableColumn.getMaxWidth(),;1
getMaxX,1,1,Returns the largest X coordinate of the framing rectangle of the Shape in double precision.,;java.awt.geom.RectangularShape.getMaxX(),;1
getMaxY,1,1,Returns the largest Y coordinate of the framing rectangle of the Shape in double precision.,;java.awt.geom.RectangularShape.getMaxY(),;1
getMaxZonesLoaded,1,1,Get the current setting of the number of zones allowed to be loaded at the same time.,;javax.swing.text.ZoneView.getMaxZonesLoaded(),;1
getMBeanDescriptor,1,1,Description copied from interface:ModelMBeanInfo,;javax.management.modelmbean.ModelMBeanInfoSupport.getMBeanDescriptor(),;1
getMBeanInterface,1,1,Get the Management Interface of this Standard MBean (or MXBean).,;javax.management.StandardMBean.getMBeanInterface(),;1
getMBeanName,1,1,Returns the object name of the MBean that caused the notification.,;javax.management.MBeanServerNotification.getMBeanName(),;1
getMBeanServerId,1,1,Returns the MBean server agent identity.,;javax.management.MBeanServerDelegate.getMBeanServerId(),;1
getMBeansToUnregister,1,1,Returns the list of ObjectNames of MBeans expected to be unregistered due to a relation removal (only for relation removal).,;javax.management.relation.RelationNotification.getMBeansToUnregister(),;1
getMechs,1,1,Returns a list of mechanisms that are available to GSS-API callers through this GSSManager. The default GSSManager obtained from the getInstance() method includes the Oid "1.2.840.113554.1.2.2" in its list. This Oid identifies the Kerberos v5 GSS-API mechanism that is defined in RFC 1964.,;org.ietf.jgss.GSSManager.getMechs(),;1
getMechsForName,1,1,"Returns a list of mechanisms that support the indicated name type. The Kerberos v5 mechanism (""1.2.840.113554.1.2.2"") will always be returned in this list when the indicated nametype is one of GSSName.NT_HOSTBASED_SERVICE, GSSName.NT_EXPORT_NAME, or ""1.2.840.113554.1.2.2.1"".",;org.ietf.jgss.GSSManager.getMechsForName(Oid),;1
getMedia,1,1,Returns the paper size for pages using these attributes. This attribute is updated to the value chosen by the user.,;java.awt.PageAttributes.getMedia(),;1
getMediaSizeForName,1,1,Get the MediaSize for the specified named media.,;javax.print.attribute.standard.MediaSize.getMediaSizeForName(MediaSizeName),;1
getMediaSizeName,1,1,"Get the media name, if any, for this size.",;javax.print.attribute.standard.MediaSize.getMediaSizeName(),;1
getMediaSubtype,1,1,Returns this doc flavor object's media subtype (from the MIME type).,;javax.print.DocFlavor.getMediaSubtype(),;1
getMediaType,1,1,Returns this doc flavor object's media type (from the MIME type).,;javax.print.DocFlavor.getMediaType(),;1
getMemberControls,1,1,Returns the set of member controls that comprise the compound control.,;javax.sound.sampled.CompoundControl.getMemberControls(),;1
getMembers,1,1,Obtain this set-of-integer attribute's members in canonical array form. The returned array is "safe;" the client may alter it without affecting this set-of-integer attribute.,;javax.print.attribute.SetOfIntegerSyntax.getMembers(),;1
getMemoryManagerMXBeans,1,1,Returns a list of MemoryManagerMXBean objects in the Java virtual machine. The Java virtual machine can have one or more memory managers. It may add or remove memory managers during execution.,;java.lang.management.ManagementFactory.getMemoryManagerMXBeans(),;1
getMemoryMXBean,1,1,Returns the managed bean for the memory system of the Java virtual machine.,;java.lang.management.ManagementFactory.getMemoryMXBean(),;1
getMemoryPoolMXBeans,1,1,Returns a list of MemoryPoolMXBean objects in the Java virtual machine. The Java virtual machine can have one or more memory pools. It may add or remove memory pools during execution.,;java.lang.management.ManagementFactory.getMemoryPoolMXBeans(),;1
getMenuComponent,1,1,Returns the component at position n.,;javax.swing.JMenu.getMenuComponent(int),;1
getMenuComponentCount,1,1,Returns the number of components on the menu.,;javax.swing.JMenu.getMenuComponentCount(),;1
getMenuComponents,1,1,"Returns an array of Components of the menu's subcomponents. Note that this returns all Components in the popup menu, including separators.",;javax.swing.JMenu.getMenuComponents(),;1
getMenuDragMouseListeners,1,1,Returns an array of all the MenuDragMouseListeners added to this JMenuItem with addMenuDragMouseListener().,;javax.swing.JMenuItem.getMenuDragMouseListeners(),;1
getMenuItemCheckIcon,1,1,Returns an icon to be used by JCheckBoxMenuItem.,;javax.swing.plaf.metal.MetalIconFactory.getMenuItemCheckIcon(),;1
getMenuListeners,1,1,Returns an array of all the MenuListeners added to this JMenu with addMenuListener().,;javax.swing.JMenu.getMenuListeners(),;1
getMenuShortcutKeyMask,1,1,"Determines which modifier key is the appropriate accelerator key for menu shortcuts. Menu shortcuts, which are embodied in the MenuShortcut class, are handled by the MenuBar class. By default, this method returns Event.CTRL_MASK. Toolkit implementations should override this method if the Control key isn't the correct key for accelerators.",;java.awt.Toolkit.getMenuShortcutKeyMask(),;1
getMetadataFormat,1,1,"Returns an IIOMetadataFormat object describing the given metadata format, or null if no description is available. The supplied name must be one of those returned by getMetadataFormatNames (i.e., either the native format name, the standard format name, or one of those returned by getExtraMetadataFormatNames). The default implementation checks the name against the global standard metadata format name, and returns that format if it is supported. Otherwise, it checks against the native format names followed by any additional format names. If a match is found, it retrieves the name of the IIOMetadataFormat class from nativeMetadataFormatClassName or extraMetadataFormatClassNames as appropriate, and constructs an instance of that class using its getInstance method.",;javax.imageio.metadata.IIOMetadata.getMetadataFormat(String),;1
getMetadataFormatNames,1,1,"Returns an array of Strings containing the names of all metadata formats, including the native and standard formats, recognized by this plug-in's getAsTree, setFromTree, and mergeTree methods. If there are no such formats, null is returned. The default implementation calls getNativeMetadataFormatName, isStandardMetadataFormatSupported, and getExtraMetadataFormatNames and returns the combined results.",;javax.imageio.metadata.IIOMetadata.getMetadataFormatNames(),;1
getMethodDescriptors,1,1,Deny knowledge of methods. You can override this if you wish to provide explicit method info.,;java.beans.SimpleBeanInfo.getMethodDescriptors(),;1
getMethods,1,1,"Returns an array containing Method objects reflecting all the public methods of the class or interface represented by this Class object, including those declared by the class or interface and those inherited from superclasses and superinterfaces. If this Class object represents a type that has multiple public methods with the same name and parameter types, but different return types, then the returned array has a Method object for each such method. If this Class object represents a type with a class initialization method &lt;clinit&gt;, then the returned array does not have a corresponding Method object. If this Class object represents an array type, then the returned array has a Method object for each of the public methods inherited by the array type from Object. It does not contain a Method object for clone(). If this Class object represents an interface then the returned array does not contain any implicitly declared methods from Object. Therefore, if no methods are explicitly declared in this interface or any of its superinterfaces then the returned array has length 0. (Note that a Class object which represents a class always has public methods, inherited from Object.) If this Class object represents a primitive type or void, then the returned array has length 0. Static methods declared in superinterfaces of the class or interface represented by this Class object are not considered members of the class or interface. The elements in the returned array are not sorted and are not in any particular order.",;java.lang.Class.getMethods(),;1
getMidiDevice,1,1,Obtains the requested MIDI device.,;javax.sound.midi.MidiSystem.getMidiDevice(MidiDevice.Info),;1
getMidiDeviceInfo,1,1,"Obtains an array of information objects representing the set of all MIDI devices available on the system. A returned information object can then be used to obtain the corresponding device object, by invoking getMidiDevice.",;javax.sound.midi.MidiSystem.getMidiDeviceInfo(),;1
getMidLabel,1,1,"Obtains the label for the mid-point value, such as ""Center"" or ""Default.""",;javax.sound.sampled.FloatControl.getMidLabel(),;1
getMidTermsOfReductionPolynomial,1,1,Returns an integer array which contains the order of the middle term(s) of the reduction polynomial for polynomial basis or null for normal basis.,;java.security.spec.ECFieldF2m.getMidTermsOfReductionPolynomial(),;1
getMillis,1,1,Get event time in milliseconds since 1970.,;java.util.logging.LogRecord.getMillis(),;1
getMillisecond,1,1,"Return millisecond precision of getFractionalSecond().This method represents a convenience accessor to infinite precision fractional second value returned by getFractionalSecond(). The returned value is the rounded down to milliseconds value of getFractionalSecond(). When getFractionalSecond() returns null, this method must return DatatypeConstants.FIELD_UNDEFINED.Value constraints for this value are summarized in second field of date/time field mapping table.",;javax.xml.datatype.XMLGregorianCalendar.getMillisecond(),;1
getMillisToDecideToPopup,1,1,Returns the amount of time this object waits before deciding whether or not to popup a progress monitor.,;javax.swing.ProgressMonitor.getMillisToDecideToPopup(),;1
getMillisToPopup,1,1,Returns the amount of time it will take for the popup to appear.,;javax.swing.ProgressMonitor.getMillisToPopup(),;1
getMimeDecoder,1,1,Returns a Base64.Decoder that decodes using the MIME type base64 decoding scheme.,;java.util.Base64.getMimeDecoder(),;1
getMimeHeaders,1,1,Returns all the transport-specific MIME headers for this SOAPMessage object in a transport-independent fashion.,;javax.xml.soap.SOAPMessage.getMimeHeaders(),;1
getMIMETypes,1,1,"Returns an array of Strings containing a list of MIME types associated with the formats that are generally usable by the ImageReader or ImageWriter implementation associated with this service provider. Ideally, only a single MIME type would be required in order to describe a particular format. However, for several reasons it is necessary to associate a list of types with each service provider. First, many common image file formats do not have standard MIME types, so a list of commonly used unofficial names will be required, such as image/x-pbm and image/x-portable-bitmap. Some file formats have official MIME types but may sometimes be referred to using their previous unofficial designations, such as image/x-png instead of the official image/png. Finally, a single service provider may be capable of parsing multiple distinct types from the MIME point of view, for example image/x-xbitmap and image/x-xpixmap. Returning a particular MIME type does not guarantee that files claiming to be of that type can be processed; it merely indicates that it may be worthwhile attempting to decode or encode such files using this service provider.",;javax.imageio.spi.ImageReaderWriterSpi.getMIMETypes(),;1
getMinBufferSize,1,1,Obtains the minimum buffer size supported by the data line.,;javax.sound.sampled.DataLine.Info.getMinBufferSize(),;1
getMinCRL,1,1,"Returns the minCRLNumber criterion. The X509CRL must have a CRL number extension whose value is greater than or equal to the specified value. If null, no minCRLNumber check will be done.",;java.security.cert.X509CRLSelector.getMinCRL(),;1
getMinDegree,1,1,Returns minimum degree for corresponding role reference.,;javax.management.relation.RoleInfo.getMinDegree(),;1
getMinimumOptionPaneSize,1,1,Returns the minimum size the option pane should be. Primarily provided for subclassers wishing to offer a different minimum size.,;javax.swing.plaf.basic.BasicOptionPaneUI.getMinimumOptionPaneSize(),;1
getMinimumValue,1,1,Returns the minimum value of this Spring.,;javax.swing.Spring.getMinimumValue(),;1
getMinIndex,1,1,"Returns the lowest valid index for reading an image, thumbnail, or image metadata. If seekForwardOnly() is false, this value will typically remain 0, indicating that random access is possible. Otherwise, it will contain the value of the most recently accessed index, and increase in a monotonic fashion.",;javax.imageio.ImageReader.getMinIndex(),;1
getMinLabel,1,1,"Obtains the label for the minimum value, such as ""Left"" or ""Off.""",;javax.sound.sampled.FloatControl.getMinLabel(),;1
getMinorAxis,1,1,Fetch the minor axis (the axis orthogonal to the tiled axis). This will have a value of either X_AXIS or Y_AXIS.,;javax.swing.text.AsyncBoxView.getMinorAxis(),;1
getMinorStatus,1,1,Retrieves the minor status code that the underlying mechanism might have set for this per-message operation.,;org.ietf.jgss.MessageProp.getMinorStatus(),;1
getMinorString,1,1,Retrieves a string explaining the minor status code.,;org.ietf.jgss.MessageProp.getMinorString(),;1
getMinorTickSpacing,1,1,"This method returns the minor tick spacing. The number that is returned represents the distance, measured in values, between each minor tick mark. If you have a slider with a range from 0 to 50 and the minor tick spacing is set to 10, you will get minor ticks next to the following values: 0, 10, 20, 30, 40, 50.",;javax.swing.JSlider.getMinorTickSpacing(),;1
getMinorVersion,1,1,Returns profile minor version.,;java.awt.color.ICC_Profile.getMinorVersion(),;1
getMinPage,1,1,"Specifies the minimum value the user can specify as the first page to be printed for jobs using these attributes. This attribute cannot be modified by, and is not subject to any limitations of, the implementation or the target printer.",;java.awt.JobAttributes.getMinPage(),;1
getMinSize,1,1,Figures out the minimum size of the master based on the information from getLayoutInfo. This method should only be used internally by GridBagLayout.,";java.awt.GridBagLayout.getMinSize(Container,GridBagLayoutInfo)",;1
GetMinSize,1,1,This method is obsolete and supplied for backwards compatibility only; new code should call getMinSize instead. This method is the same as getMinSize; refer to getMinSize for details on parameters and return value.,";java.awt.GridBagLayout.GetMinSize(Container,GridBagLayoutInfo)",;1
getMinTileX,1,1,Returns the minimum tile index in the x direction. This is always zero.,;java.awt.image.BufferedImage.getMinTileX(),;1
getMinTileY,1,1,Returns the minimum tile index in the y direction. This is always zero.,;java.awt.image.BufferedImage.getMinTileY(),;1
getMinusSign,1,1,"Gets the character used to represent minus sign. If no explicit negative format is specified, one is formed by prefixing minusSign to the positive format.",;java.text.DecimalFormatSymbols.getMinusSign(),;1
getMinWidth,1,1,Returns the minimum width for the TableColumn. The TableColumn's width can't be made less than this either by the user or programmatically.,;javax.swing.table.TableColumn.getMinWidth(),;1
getMissingGlyphCode,1,1,Returns the glyphCode which is used when this Font does not have a glyph for a specified unicode code point.,;java.awt.Font.getMissingGlyphCode(),;1
getMiterLimit,1,1,Returns the limit of miter joins.,;java.awt.BasicStroke.getMiterLimit(),;1
getMnemonicAt,1,1,Returns the keyboard mnemonic for accessing the specified tab. The mnemonic is the key which when combined with the look and feel's mouseless modifier (usually Alt) will activate the specified tab.,;javax.swing.JTabbedPane.getMnemonicAt(int),;1
getModalExclusionType,1,1,Returns the modal exclusion type of this window.,;java.awt.Window.getModalExclusionType(),;1
getModalityType,1,1,Returns the modality type of this dialog.,;java.awt.Dialog.getModalityType(),;1
getMode,1,1,Indicates whether this file dialog box is for loading from a file or for saving to a file.,;java.awt.FileDialog.getMode(),;1
getModelIndex,1,1,Returns the model index for this column.,;javax.swing.table.TableColumn.getModelIndex(),;1
getModelWrapper,1,1,Returns the model wrapper providing the data that is being sorted and filtered.,;javax.swing.DefaultRowSorter.getModelWrapper(),;1
getModificationOp,1,1,Retrieves the modification code of this modification item.,;javax.naming.directory.ModificationItem.getModificationOp(),;1
getModifiersExText,1,1,"Returns a String describing the extended modifier keys and mouse buttons, such as ""Shift"", ""Button1"", or ""Ctrl+Shift"". These strings can be localized by changing the awt.properties file. Note that passing negative parameter is incorrect, and will cause the returning an unspecified string. Zero parameter means that no modifiers were passed and will cause the returning an empty string.",;java.awt.event.InputEvent.getModifiersExText(int),;1
getMonetaryDecimalSeparator,1,1,Returns the monetary decimal separator.,;java.text.DecimalFormatSymbols.getMonetaryDecimalSeparator(),;1
getMostRecentEventTime,1,1,"Returns the timestamp of the most recent event that had a timestamp, and that was dispatched from the EventQueue associated with the calling thread. If an event with a timestamp is currently being dispatched, its timestamp will be returned. If no events have yet been dispatched, the EventQueue's initialization time will be returned instead.In the current version of the JDK, only InputEvents, ActionEvents, and InvocationEvents have timestamps; however, future versions of the JDK may add timestamps to additional event types. Note that this method should only be invoked from an application's event dispatching thread. If this method is invoked from another thread, the current system time (as reported by System.currentTimeMillis()) will be returned instead.",;java.awt.EventQueue.getMostRecentEventTime(),;1
getMostSignificantBits,1,1,Returns the most significant 64 bits of this UUID's 128 bit value.,;java.util.UUID.getMostSignificantBits(),;1
getMouseInfoPeer,1,1,Obtains this toolkit's implementation of helper class for MouseInfo operations.,;java.awt.Toolkit.getMouseInfoPeer(),;1
getMouseListener,1,1,Implementation of ComboPopup.getMouseListener().,;javax.swing.plaf.basic.BasicComboPopup.getMouseListener(),;1
getMouseModifiersText,1,1,"Returns a String instance describing the modifier keys and mouse buttons that were down during the event, such as ""Shift"", or ""Ctrl+Shift"". These strings can be localized by changing the awt.properties file. Note that the InputEvent.ALT_MASK and InputEvent.BUTTON2_MASK have equal values, so the ""Alt"" string is returned for both modifiers. Likewise, the InputEvent.META_MASK and InputEvent.BUTTON3_MASK have equal values, so the ""Meta"" string is returned for both modifiers. Note that passing negative parameter is incorrect, and will cause the returning an unspecified string. Zero parameter means that no modifiers were passed and will cause the returning an empty string.",;java.awt.event.MouseEvent.getMouseModifiersText(int),;1
getMouseMotionListener,1,1,Implementation of ComboPopup.getMouseMotionListener().,;javax.swing.plaf.basic.BasicComboPopup.getMouseMotionListener(),;1
getMouseWheelListeners,1,1,Returns an array of all the mouse wheel listeners registered on this component.,;java.awt.Component.getMouseWheelListeners(),;1
getMTU,1,1,Returns the Maximum Transmission Unit (MTU) of this interface.,;java.net.NetworkInterface.getMTU(),;1
getMultiClickThreshhold,1,1,Gets the amount of time (in milliseconds) required between mouse press events for the button to generate the corresponding action events.,;javax.swing.AbstractButton.getMultiClickThreshhold(),;1
getMultiDocPrintServices,1,1,"Not called directly by applications. Implemented by a service provider, used by the static methods of this class. Locates MultiDoc print services which can be positively confirmed to support the combination of attributes and DocFlavors specified.",";javax.print.PrintServiceLookup.getMultiDocPrintServices(DocFlavor[],AttributeSet)",;1
getMultipleDocumentHandling,1,1,"Specifies the handling of multiple copies, including collation, for jobs using these attributes. This attribute is updated to the value chosen by the user.",;java.awt.JobAttributes.getMultipleDocumentHandling(),;1
getMultiplier,1,1,"Gets the multiplier for use in percent, per mille, and similar formats.",;java.text.DecimalFormat.getMultiplier(),;1
getNames,1,1,Retrieve an enumeration of all the names in this list.,;javax.activation.MimeTypeParameterList.getNames(),;1
getNamesForMech,1,1,"Returns then name types supported by the indicated mechanism. The default GSSManager instance includes support for the Kerberos v5 mechanism. When this mechanism (""1.2.840.113554.1.2.2"") is indicated, the returned list will contain at least the following nametypes: GSSName.NT_HOSTBASED_SERVICE, GSSName.NT_EXPORT_NAME, and the Kerberos v5 specific Oid ""1.2.840.113554.1.2.2.1"". The namespace for the Oid ""1.2.840.113554.1.2.2.1"" is defined in RFC 1964.",;org.ietf.jgss.GSSManager.getNamesForMech(Oid),;1
getNamespaceContext,1,1,Description copied from interface:XMLStreamReader,;javax.xml.stream.util.StreamReaderDelegate.getNamespaceContext(),;1
getNamespaceCount,1,1,Description copied from interface:XMLStreamReader,;javax.xml.stream.util.StreamReaderDelegate.getNamespaceCount(),;1
getNameType,1,1,Returns the name type of the KerberosPrincipal. Valid name types are specified in Section 6.2 of RFC4120.,;javax.security.auth.kerberos.KerberosPrincipal.getNameType(),;1
getNaN,1,1,Gets the string used to represent "not a number". Almost always left unchanged.,;java.text.DecimalFormatSymbols.getNaN(),;1
getNanos,1,1,Gets this Timestamp object's nanos value.,;java.sql.Timestamp.getNanos(),;1
getNativeCommands,1,1,Get the native commands for the given MIME type. Returns an array of strings where each string is an entire mailcap file entry. The application will need to parse the entry to extract the actual command as well as any attributes it needs. See RFC 1524 for details of the mailcap entry syntax. Only mailcap entries that specify a view command for the specified MIME type are returned.,;javax.activation.MailcapCommandMap.getNativeCommands(String),;1
getNativeContainer,1,1,Give native peers the ability to query the native container given a native component (eg the direct parent may be lightweight).,;java.awt.Toolkit.getNativeContainer(Component),;1
getNativeImageMetadataFormatName,1,1,"Returns the name of the ""native"" image metadata format for this plug-in, which typically allows for lossless encoding and transmission of the image metadata stored in the format handled by this plug-in. If no such format is supported, nullwill be returned. The default implementation returns the nativeImageMetadataFormatName instance variable, which is typically set by the constructor.",;javax.imageio.spi.ImageReaderWriterSpi.getNativeImageMetadataFormatName(),;1
getNativeMetadataFormatName,1,1,"Returns the name of the ""native"" metadata format for this plug-in, which typically allows for lossless encoding and transmission of the metadata stored in the format handled by this plug-in. If no such format is supported, nullwill be returned. The structure and contents of the ""native"" metadata format are defined by the plug-in that created this IIOMetadata object. Plug-ins for simple formats will usually create a dummy node for the root, and then a series of child nodes representing individual tags, chunks, or keyword/value pairs. A plug-in may choose whether or not to document its native format. The default implementation returns the value of the nativeMetadataFormatName instance variable.",;javax.imageio.metadata.IIOMetadata.getNativeMetadataFormatName(),;1
getNativesForFlavor,1,1,"Returns a List of String natives to which the specified DataFlavor can be translated by the data transfer subsystem. The List will be sorted from best native to worst. That is, the first native will best reflect data in the specified flavor to the underlying native platform. If the specified DataFlavor is previously unknown to the data transfer subsystem and the data transfer subsystem is unable to translate this DataFlavor to any existing native, then invoking this method will establish a mapping in both directions between the specified DataFlavor and an encoded version of its MIME type as its native.",;java.awt.datatransfer.SystemFlavorMap.getNativesForFlavor(DataFlavor),;1
getNativesForFlavors,1,1,"Returns a Map of the specified DataFlavors to their most preferred String native. Each native value will be the same as the first native in the List returned by getNativesForFlavor for the specified flavor. If a specified DataFlavor is previously unknown to the data transfer subsystem, then invoking this method will establish a mapping in both directions between the specified DataFlavor and an encoded version of its MIME type as its native.",;java.awt.datatransfer.SystemFlavorMap.getNativesForFlavors(DataFlavor[]),;1
getNativeStreamMetadataFormatName,1,1,"Returns the name of the ""native"" stream metadata format for this plug-in, which typically allows for lossless encoding and transmission of the stream metadata stored in the format handled by this plug-in. If no such format is supported, nullwill be returned. The default implementation returns the nativeStreamMetadataFormatName instance variable, which is typically set by the constructor.",;javax.imageio.spi.ImageReaderWriterSpi.getNativeStreamMetadataFormatName(),;1
getNbNotifications,1,1,Gets the number of timer notifications registered into the list of notifications.,;javax.management.timer.Timer.getNbNotifications(),;1
getNbOccurences,1,1,Gets a copy of the remaining number of occurrences associated to a timer notification.,;javax.management.timer.Timer.getNbOccurences(Integer),;1
getNegativePrefix,1,1,"Get the negative prefix. Examples: -123, ($123) (with negative suffix), sFr-123",;java.text.DecimalFormat.getNegativePrefix(),;1
getNegativeSign,1,1,Gets the character that represents the negative sign. The character used to represent a negative number may vary by culture. This method specifies the character to use.,;java.time.format.DecimalStyle.getNegativeSign(),;1
getNegativeSuffix,1,1,"Get the negative suffix. Examples: -123%, ($123) (with positive suffixes)",;java.text.DecimalFormat.getNegativeSuffix(),;1
getNetworkInterface,1,1,Get the multicast network interface set.,;java.net.MulticastSocket.getNetworkInterface(),;1
getNetworkInterfaces,1,1,"Returns all the interfaces on this machine. The Enumeration contains at least one element, possibly representing a loopback interface that only supports communication between entities on this machine. NOTE: can use getNetworkInterfaces()+getInetAddresses() to obtain all IP addresses for this node",;java.net.NetworkInterface.getNetworkInterfaces(),;1
getNetworkPrefixLength,1,1,"Returns the network prefix length for this address. This is also known as the subnet mask in the context of IPv4 addresses. Typical IPv4 values would be 8 (255.0.0.0), 16 (255.255.0.0) or 24 (255.255.255.0). Typical IPv6 values would be 128 (::1/128) or 10 (fe80::203:baff:fe27:1243/10)",;java.net.InterfaceAddress.getNetworkPrefixLength(),;1
getNewBinding,1,1,"Retrieves the binding of the object after the change. The binding must be nonnull if the object existed after the change relative to the source context (getEventContext()). That is, it must be nonnull for OBJECT_ADDED and OBJECT_CHANGED. For OBJECT_RENAMED, it is null if the object after the rename is outside the scope for which the listener registered interest; it is nonnull if the object is inside the scope after the rename. The name in the binding is to be resolved relative to the event source getEventContext(). The object returned by Binding.getObject() may be null if such information is unavailable.",;javax.naming.event.NamingEvent.getNewBinding(),;1
getNewLeadSelectionPath,1,1,Returns the current lead path.,;javax.swing.event.TreeSelectionEvent.getNewLeadSelectionPath(),;1
getNewRoleValue,1,1,Returns new value of updated role (only for role update).,;javax.management.relation.RelationNotification.getNewRoleValue(),;1
getNextEastWestVisualPositionFrom,1,1,"Returns the next visual position for the cursor, in either the east or west direction.",";javax.swing.text.CompositeView.getNextEastWestVisualPositionFrom(int,Position.Bias,Shape,int,Position.Bias[])",;1
getNextEvent,1,1,Removes an event from the EventQueue and returns it. This method will block until an event has been posted by another thread.,;java.awt.EventQueue.getNextEvent(),;1
getNextFocusableComponent,1,1,"Deprecated.As of 1.4, replaced by FocusTraversalPolicy.",;javax.swing.JComponent.getNextFocusableComponent(),;1
getNextJarEntry,1,1,"Reads the next JAR file entry and positions the stream at the beginning of the entry data. If verification has been enabled, any invalid signature detected while positioning the stream for the next entry will result in an exception.",;java.util.jar.JarInputStream.getNextJarEntry(),;1
getNextLeaf,1,1,"Returns the leaf after this node or null if this node is the last leaf in the tree. In this implementation of the MutableNode interface, this operation is very inefficient. In order to determine the next node, this method first performs a linear search in the parent's child-list in order to find the current node. That implementation makes the operation suitable for short traversals from a known position. But to traverse all of the leaves in the tree, you should use depthFirstEnumeration to enumerate the nodes in the tree and use isLeaf on each node to determine which are leaves.",;javax.swing.tree.DefaultMutableTreeNode.getNextLeaf(),;1
getNextNode,1,1,"Returns the node that follows this node in a preorder traversal of this node's tree. Returns null if this node is the last node of the traversal. This is an inefficient way to traverse the entire tree; use an enumeration, instead.",;javax.swing.tree.DefaultMutableTreeNode.getNextNode(),;1
getNextSequenceNumber,1,1,Returns the sequence number of the next notification available for querying.,;javax.management.remote.NotificationResult.getNextSequenceNumber(),;1
getNextUpdate,1,1,Gets the nextUpdate date from the CRL.,;java.security.cert.X509CRL.getNextUpdate(),;1
getNextWord,1,1,Determines the start of the next word for the given location. Uses BreakIterator.getWordInstance() to actually get the words.,";javax.swing.text.Utilities.getNextWord(JTextComponent,int)",;1
getNodeName,1,1,Returns the node name associated with this node.,;javax.imageio.metadata.IIOMetadataNode.getNodeName(),;1
getNodeType,1,1,"Returns the node type, which is always ELEMENT_NODE.",;javax.imageio.metadata.IIOMetadataNode.getNodeType(),;1
getNodeValue,1,1,Returns the value associated with this node.,;javax.imageio.metadata.IIOMetadataNode.getNodeValue(),;1
getNoFallbackControl,1,1,"Returns a ResourceBundle.Control in which the getFormats method returns the specified formats and the getFallbackLocale method returns null. The formats must be equal to one of FORMAT_PROPERTIES, FORMAT_CLASS or FORMAT_DEFAULT. ResourceBundle.Control instances returned by this method are singletons and thread-safe.",;java.util.ResourceBundle.Control.getNoFallbackControl(List&lt;String&gt;),;1
getNoImageIcon,1,1,Returns the icon to use if the image couldn't be found.,;javax.swing.text.html.ImageView.getNoImageIcon(),;1
getNonContinuousLayoutDivider,1,1,Returns the divider to use when the splitPane is configured to not continuously layout. This divider will only be used during a dragging session.,;javax.swing.plaf.basic.BasicSplitPaneUI.getNonContinuousLayoutDivider(),;1
getNonMatchingHeaders,1,1,Returns all of the MimeHeader objects whose name does not match a name in the given array of names.,;javax.xml.soap.MimeHeaders.getNonMatchingHeaders(String[]),;1
getNonRolloverBorder,1,1,Returns a non-rollover border for the button.,;javax.swing.plaf.basic.BasicToolBarUI.getNonRolloverBorder(AbstractButton),;1
getNoNSSchemaLocation,1,1,Convenience method for getting the current noNamespaceSchemaLocation.,;javax.xml.bind.helpers.AbstractMarshallerImpl.getNoNSSchemaLocation(),;1
getNormalBounds,1,1,"If the JInternalFrame is not in maximized state, returns getBounds(); otherwise, returns the bounds that the JInternalFrame would be restored to.",;javax.swing.JInternalFrame.getNormalBounds(),;1
getNormalizingTransform,1,1,"Returns a AffineTransform that can be concatenated with the default AffineTransform of a GraphicsConfiguration so that 72 units in user space equals 1 inch in device space. For a particular Graphics2D, g, one can reset the transformation to create such a mapping by using the following pseudocode: GraphicsConfiguration gc = g.getDeviceConfiguration(); g.setTransform(gc.getDefaultTransform()); g.transform(gc.getNormalizingTransform()); Note that sometimes this AffineTransform is identity, such as for printers or metafile output, and that this AffineTransform is only as accurate as the information supplied by the underlying system. For image buffers not associated with a device, such as those not created by createCompatibleImage, this AffineTransform is the Identity transform since there is no valid distance measurement.",;java.awt.GraphicsConfiguration.getNormalizingTransform(),;1
getNote,1,1,Specifies the additional note that is displayed along with the progress message.,;javax.swing.ProgressMonitor.getNote(),;1
getNotificationID,1,1,Gets the identifier of this timer notification.,;javax.management.timer.TimerNotification.getNotificationID(),;1
getNotificationIDs,1,1,Gets all the identifiers of timer notifications corresponding to the specified type.,;javax.management.timer.Timer.getNotificationIDs(String),;1
getNotificationMessage,1,1,Gets the timer notification detailed message corresponding to the specified identifier.,;javax.management.timer.Timer.getNotificationMessage(Integer),;1
getNotifications,1,1,"Returns the list of the notifications emitted by the MBean. Each notification is described by an MBeanNotificationInfo object. The returned array is a shallow copy of the internal array, which means that it is a copy of the internal array of references to the MBeanNotificationInfo objects but that each referenced MBeanNotificationInfo object is not copied.",;javax.management.MBeanInfo.getNotifications(),;1
getNotificationType,1,1,Gets the timer notification type corresponding to the specified identifier.,;javax.management.timer.Timer.getNotificationType(Integer),;1
getNotificationUserData,1,1,Gets the timer notification user data object corresponding to the specified identifier.,;javax.management.timer.Timer.getNotificationUserData(Integer),;1
getNotifTypes,1,1,Returns the array of strings (in dot notation) containing the notification types that the MBean may emit.,;javax.management.MBeanNotificationInfo.getNotifTypes(),;1
getNotify,1,1,Gets the notification's on/off switch value common to all observed MBeans.,;javax.management.monitor.CounterMonitor.getNotify(),;1
getNotifyDiffer,1,1,Gets the differing notification's on/off switch value common to all observed MBeans.,;javax.management.monitor.StringMonitor.getNotifyDiffer(),;1
getNotifyHigh,1,1,Gets the high notification's on/off switch value common to all observed MBeans.,;javax.management.monitor.GaugeMonitor.getNotifyHigh(),;1
getNotifyLow,1,1,Gets the low notification's on/off switch value common to all observed MBeans.,;javax.management.monitor.GaugeMonitor.getNotifyLow(),;1
getNotifyMatch,1,1,Gets the matching notification's on/off switch value common to all observed MBeans.,;javax.management.monitor.StringMonitor.getNotifyMatch(),;1
getNow,1,1,"Returns the result value (or throws any encountered exception) if completed, else returns the given valueIfAbsent.",;java.util.concurrent.CompletableFuture.getNow(T),;1
getNullFormatter,1,1,Returns the formatter to use if the value is null.,;javax.swing.text.DefaultFormatterFactory.getNullFormatter(),;1
getNumBanks,1,1,Returns the number of banks in this DataBuffer.,;java.awt.image.DataBuffer.getNumBanks(),;1
getNumber,1,1,Returns the value of the current element of the sequence.,;javax.swing.SpinnerNumberModel.getNumber(),;1
getNumberFormat,1,1,Gets the number formatter which this date/time formatter uses to format and parse a time.,;java.text.DateFormat.getNumberFormat(),;1
getNumberOfButtons,1,1,"Returns the number of buttons on the mouse. On systems without a mouse, returns -1.",;java.awt.MouseInfo.getNumberOfButtons(),;1
getNumberOfDependents,1,1,"Returns the estimated number of CompletableFutures whose completions are awaiting completion of this CompletableFuture. This method is designed for use in monitoring system state, not for synchronization control.",;java.util.concurrent.CompletableFuture.getNumberOfDependents(),;1
getNumberOfPages,1,1,Returns the number of pages in this Book.,;java.awt.print.Book.getNumberOfPages(),;1
getNumberWaiting,1,1,Returns the number of parties currently waiting at the barrier. This method is primarily useful for debugging and assertions.,;java.util.concurrent.CyclicBarrier.getNumberWaiting(),;1
getNumChars,1,1,Returns the number of characters (char values) in the text whose metrics are encapsulated by this LineMetrics object.,;java.awt.font.LineMetrics.getNumChars(),;1
getNumColorComponents,1,1,Returns the number of color components in this ColorModel. This is the number of components returned by ColorSpace.getNumComponents().,;java.awt.image.ColorModel.getNumColorComponents(),;1
getNumericCode,1,1,Returns the ISO 4217 numeric code of this currency.,;java.util.Currency.getNumericCode(),;1
getNumFactors,1,1,Returns the number of scaling factors and offsets used in this RescaleOp.,;java.awt.image.RescaleOp.getNumFactors(),;1
getNumImages,1,1,"Returns the number of images, not including thumbnails, available from the current input source. Note that some image formats (such as animated GIF) do not specify how many images are present in the stream. Thus determining the number of images will require the entire stream to be scanned and may require memory for buffering. If images are to be processed in order, it may be more efficient to simply call read with increasing indices until an IndexOutOfBoundsException is thrown to indicate that no more images are available. The allowSearch parameter may be set to false to indicate that an exhaustive search is not desired; the return value will be -1 to indicate that a search is necessary. If the input has been specified with seekForwardOnly set to true, this method throws an IllegalStateException if allowSearch is set to true.",;javax.imageio.ImageReader.getNumImages(boolean),;1
getNumParameters,1,1,Returns the number of parameters (not including source images).,;java.awt.image.renderable.ParameterBlock.getNumParameters(),;1
getNumSources,1,1,Returns the number of source images.,;java.awt.image.renderable.ParameterBlock.getNumSources(),;1
getNumThumbnailsSupported,1,1,"Returns the number of thumbnails supported by the format being written, given the image type and any additional write parameters and metadata objects that will be used during encoding. A return value of -1 indicates that insufficient information is available. An ImageWriteParam may optionally be supplied for cases where it may affect thumbnail handling. If the supplied ImageWriteParam contains optional setting values not supported by this writer (e.g. progressive encoding or any format-specific settings), they will be ignored. The default implementation returns 0.",";javax.imageio.ImageWriter.getNumThumbnailsSupported(ImageTypeSpecifier,ImageWriteParam,IIOMetadata,IIOMetadata)",;1
getNumXTiles,1,1,Returns the number of tiles in the x direction. This is always one.,;java.awt.image.BufferedImage.getNumXTiles(),;1
getNumYTiles,1,1,Returns the number of tiles in the y direction. This is always one.,;java.awt.image.BufferedImage.getNumYTiles(),;1
getObjectArrayMaxLength,1,1,Description copied from interface:IIOMetadataFormat,;javax.imageio.metadata.IIOMetadataFormatImpl.getObjectArrayMaxLength(String),;1
getObjectArrayMinLength,1,1,Description copied from interface:IIOMetadataFormat,;javax.imageio.metadata.IIOMetadataFormatImpl.getObjectArrayMinLength(String),;1
getObjectClass,1,1,Description copied from interface:IIOMetadataFormat,;javax.imageio.metadata.IIOMetadataFormatImpl.getObjectClass(String),;1
getObjectDefaultValue,1,1,Description copied from interface:IIOMetadataFormat,;javax.imageio.metadata.IIOMetadataFormatImpl.getObjectDefaultValue(String),;1
getObjectEnumerations,1,1,Description copied from interface:IIOMetadataFormat,;javax.imageio.metadata.IIOMetadataFormatImpl.getObjectEnumerations(String),;1
getObjectForLayer,1,1,Returns the Integer object associated with a specified layer.,;javax.swing.JLayeredPane.getObjectForLayer(int),;1
getObjectMaxValue,1,1,Description copied from interface:IIOMetadataFormat,;javax.imageio.metadata.IIOMetadataFormatImpl.getObjectMaxValue(String),;1
getObjectMinValue,1,1,Description copied from interface:IIOMetadataFormat,;javax.imageio.metadata.IIOMetadataFormatImpl.getObjectMinValue(String),;1
getObjectParameter,1,1,Gets a parameter as an object.,;java.awt.image.renderable.ParameterBlock.getObjectParameter(int),;1
getObjectStreamClass,1,1,Get the ObjectStreamClass that describes the fields in the stream.,;java.io.ObjectInputStream.GetField.getObjectStreamClass(),;1
getObjectValueType,1,1,Description copied from interface:IIOMetadataFormat,;javax.imageio.metadata.IIOMetadataFormatImpl.getObjectValueType(String),;1
getObservedObjects,1,1,Returns an array containing the objects being observed.,;javax.management.monitor.Monitor.getObservedObjects(),;1
getOcspExtensions,1,1,Gets the optional OCSP request extensions.,;java.security.cert.PKIXRevocationChecker.getOcspExtensions(),;1
getOcspResponder,1,1,"Gets the URI that identifies the location of the OCSP responder. This overrides the ocsp.responderURL security property. If this parameter or the ocsp.responderURL property is not set, the location is determined from the certificate's Authority Information Access Extension, as defined in RFC 5280.",;java.security.cert.PKIXRevocationChecker.getOcspResponder(),;1
getOcspResponderCert,1,1,"Gets the OCSP responder's certificate. This overrides the ocsp.responderCertSubjectName, ocsp.responderCertIssuerName, and ocsp.responderCertSerialNumber security properties. If this parameter or the aforementioned properties are not set, then the responder's certificate is determined as specified in RFC 2560.",;java.security.cert.PKIXRevocationChecker.getOcspResponderCert(),;1
getOcspResponses,1,1,Gets the OCSP responses. These responses are used to determine the revocation status of the specified certificates when OCSP is used.,;java.security.cert.PKIXRevocationChecker.getOcspResponses(),;1
getOctetStream,1,1,Returns the input stream of this OctetStreamData.,;javax.xml.crypto.OctetStreamData.getOctetStream(),;1
getOffscreenBuffer,1,1,"Return the offscreen buffer that should be used as a double buffer with the component c. By default there is a double buffer per RepaintManager. The buffer might be smaller than (proposedWidth,proposedHeight) This happens when the maximum double buffer size as been set for the receiving repaint manager.",";javax.swing.RepaintManager.getOffscreenBuffer(Component,int,int)",;1
getOffsetHit,1,1,Creates a TextHitInfo whose character index is offset by delta from the charIndex of this TextHitInfo. This TextHitInfo remains unchanged.,;java.awt.font.TextHitInfo.getOffsetHit(int),;1
getOldBinding,1,1,"Retrieves the binding of the object before the change. The binding must be nonnull if the object existed before the change relative to the source context (getEventContext()). That is, it must be nonnull for OBJECT_REMOVED and OBJECT_CHANGED. For OBJECT_RENAMED, it is null if the object before the rename is outside of the scope for which the listener has registered interest; it is nonnull if the object is inside the scope before the rename. The name in the binding is to be resolved relative to the event source getEventContext(). The object returned by Binding.getObject() may be null if such information is unavailable.",;javax.naming.event.NamingEvent.getOldBinding(),;1
getOldLeadSelectionPath,1,1,Returns the path that was previously the lead path.,;javax.swing.event.TreeSelectionEvent.getOldLeadSelectionPath(),;1
getOldRoleValue,1,1,Returns old value of updated role (only for role update).,;javax.management.relation.RelationNotification.getOldRoleValue(),;1
getOOBInline,1,1,Tests if SO_OOBINLINE is enabled.,;java.net.Socket.getOOBInline(),;1
getOpacity,1,1,Returns the opacity of the window.,;java.awt.Window.getOpacity(),;1
getOpenIcon,1,1,Returns the icon used to represent non-leaf nodes that are expanded.,;javax.swing.tree.DefaultTreeCellRenderer.getOpenIcon(),;1
getOperatingSystemMXBean,1,1,Returns the managed bean for the operating system on which the Java virtual machine is running.,;java.lang.management.ManagementFactory.getOperatingSystemMXBean(),;1
getOperations,1,1,"Returns the list of operations of the MBean. Each operation is described by an MBeanOperationInfo object. The returned array is a shallow copy of the internal array, which means that it is a copy of the internal array of references to the MBeanOperationInfo objects but that each referenced MBeanOperationInfo object is not copied.",;javax.management.MBeanInfo.getOperations(),;1
getOppositeComponent,1,1,"Returns the other Component involved in this focus change. For a FOCUS_GAINED event, this is the Component that lost focus. For a FOCUS_LOST event, this is the Component that gained focus. If this focus change occurs with a native application, with a Java application in a different VM or context, or with no other Component, then null is returned.",;java.awt.event.FocusEvent.getOppositeComponent(),;1
getOppositeWindow,1,1,"Returns the other Window involved in this focus or activation change. For a WINDOW_ACTIVATED or WINDOW_GAINED_FOCUS event, this is the Window that lost activation or focus. For a WINDOW_DEACTIVATED or WINDOW_LOST_FOCUS event, this is the Window that gained activation or focus. For any other type of WindowEvent, or if the focus or activation change occurs with a native application, with a Java application in a different VM or context, or with no other Window, null is returned.",;java.awt.event.WindowEvent.getOppositeWindow(),;1
getOptimizeHuffmanTables,1,1,"Returns the value passed into the most recent call to setOptimizeHuffmanTables, or false if setOptimizeHuffmanTables has never been called.",;javax.imageio.plugins.jpeg.JPEGImageWriteParam.getOptimizeHuffmanTables(),;1
getOrder,1,1,Returns the order of the generator.,;java.security.spec.ECParameterSpec.getOrder(),;1
getOrientationRequested,1,1,Returns the print orientation for pages using these attributes. This attribute is updated to the value chosen by the user.,;java.awt.PageAttributes.getOrientationRequested(),;1
getOrigin,1,1,"Returns whether drawing at (0, 0) to pages using these attributes draws at the upper-left corner of the physical page, or at the upper-left corner of the printable area. (Note that these locations could be equivalent.) This attribute cannot be modified by, and is not subject to any limitations of, the implementation or the target printer.",;java.awt.PageAttributes.getOrigin(),;1
getOtherHit,1,1,Creates a TextHitInfo on the other side of the insertion point. This TextHitInfo remains unchanged.,;java.awt.font.TextHitInfo.getOtherHit(),;1
getOtherPrimeInfo,1,1,Returns a copy of the otherPrimeInfo or null if there are only two prime factors (p and q).,;java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getOtherPrimeInfo(),;1
getOutput,1,1,"Returns the ImageOutputStream or other Object set by the most recent call to the setOutput method. If no destination has been set, null is returned. The default implementation returns the value of the output instance variable.",;javax.imageio.ImageWriter.getOutput(),;1
getOutputClass,1,1,"Returns a Class object representing the class or interface type that must be implemented by an output destination in order to be ""wrapped"" in an ImageOutputStream via the createOutputStreamInstance method. Typical return values might include OutputStream.class or File.class, but any class may be used.",;javax.imageio.spi.ImageOutputStreamSpi.getOutputClass(),;1
getOutputLength,1,1,Returns the truncation length.,;javax.xml.crypto.dsig.spec.HMACParameterSpec.getOutputLength(),;1
getOutputProperties,1,1,"Get a copy of the output properties for the transformation.The properties returned should contain properties set by the user, and properties set by the stylesheet, and these properties are ""defaulted"" by default properties specified by section 16 of the XSL Transformations (XSLT) W3C Recommendation. The properties that were specifically set by the user or the stylesheet should be in the base Properties list, while the XSLT default properties that were not specifically set should be the default Properties list. Thus, getOutputProperties().getProperty(String key) will obtain any property in that was set by setOutputProperty(java.lang.String, java.lang.String), setOutputProperties(java.util.Properties), in the stylesheet, or the default properties, while getOutputProperties().get(String key) will only retrieve properties that were explicitly set by setOutputProperty(java.lang.String, java.lang.String), setOutputProperties(java.util.Properties), or in the stylesheet.Note that mutation of the Properties object returned will not effect the properties that the transformer contains.If any of the argument keys are not recognized and are not namespace qualified, the property will be ignored and not returned. In other words the behaviour is not orthogonal with setOutputProperties.",;javax.xml.transform.Transformer.getOutputProperties(),;1
getOutputProperty,1,1,"Get an output property that is in effect for the transformer.If a property has been set using setOutputProperty(java.lang.String, java.lang.String), that value will be returned. Otherwise, if a property is explicitly specified in the stylesheet, that value will be returned. If the value of the property has been defaulted, that is, if no value has been set explicitly either with setOutputProperty(java.lang.String, java.lang.String) or in the stylesheet, the result may vary depending on implementation and input stylesheet.",;javax.xml.transform.Transformer.getOutputProperty(String),;1
getOutputTypes,1,1,"Returns an array of Class objects indicating what types of objects may be used as arguments to the writer's setOutput method. For most writers, which only output to an ImageOutputStream, a single-element array containing ImageOutputStream.class should be returned.",;javax.imageio.spi.ImageWriterSpi.getOutputTypes(),;1
getOutsideBorder,1,1,Returns the outside border object.,;javax.swing.border.CompoundBorder.getOutsideBorder(),;1
getOverwriteMode,1,1,Returns the behavior when inserting characters.,;javax.swing.text.DefaultFormatter.getOverwriteMode(),;1
getOwnedWindows,1,1,Return an array containing all the windows this window currently owns.,;java.awt.Window.getOwnedWindows(),;1
getOwnerDocument,1,1,"Returns null, since IIOMetadataNodes do not belong to any Document.",;javax.imageio.metadata.IIOMetadataNode.getOwnerDocument(),;1
getOwnerlessWindows,1,1,"Returns an array of all Windows created by this application that have no owner. They include Frames and ownerless Dialogs and Windows. If called from an applet, the array includes only the Windows accessible by that applet. Warning: this method may return system created windows, such as a print dialog. Applications should not assume the existence of these dialogs, nor should an application assume anything about these dialogs such as component positions, LayoutManagers or serialization.",;java.awt.Window.getOwnerlessWindows(),;1
getPage,1,1,"Gets the current URL being displayed. If a URL was not specified in the creation of the document, this will return null, and relative URL's will not be resolved.",;javax.swing.JEditorPane.getPage(),;1
getPageDimension,1,1,Returns the dimensions of the page in pixels. The resolution of the page is chosen so that it is similar to the screen resolution.,;java.awt.PrintJob.getPageDimension(),;1
getPageIncrement,1,1,"Deprecated.As of JDK version 1.1, replaced by getBlockIncrement().",;java.awt.Scrollbar.getPageIncrement(),;1
getPageRanges,1,1,"Specifies, for jobs using these attributes, the ranges of pages to be printed, if a range of pages is to be printed. All range numbers are inclusive. This attribute is updated to the value chosen by the user. An application should ignore this attribute on output, unless the return value of the getDefaultSelection method is DefaultSelectionType.RANGE.",;java.awt.JobAttributes.getPageRanges(),;1
getPageResolution,1,1,Returns the resolution of the page in pixels per inch. Note that this doesn't have to correspond to the physical resolution of the printer.,;java.awt.PrintJob.getPageResolution(),;1
getPaintContext,1,1,"Gets the PaintContext for this painting operation. This method is called on every paint, and so should be fast and produce no garbage. The PaintContext contains information such as cache hints. It also contains data necessary for decoding points at runtime, such as the stretching insets, the canvas size at which the encoded points were defined, and whether the stretching insets are inverted. This method allows for subclasses to package the painting of different states with possibly different canvas sizes, etc, into one AbstractRegionPainter implementation.",;javax.swing.plaf.nimbus.AbstractRegionPainter.getPaintContext(),;1
getPaintLabels,1,1,Tells if labels are to be painted.,;javax.swing.JSlider.getPaintLabels(),;1
getPaintTicks,1,1,Tells if tick marks are to be painted.,;javax.swing.JSlider.getPaintTicks(),;1
getPaintTrack,1,1,Tells if the track (area the slider slides in) is to be painted.,;javax.swing.JSlider.getPaintTrack(),;1
getPaper,1,1,"Returns a copy of the Paper object associated with this PageFormat. Changes made to the Paper object returned from this method do not affect the Paper object of this PageFormat. To update the Paper object of this PageFormat, create a new Paper object and set it into this PageFormat by using the setPaper(Paper) method.",;java.awt.print.PageFormat.getPaper(),;1
getParagraphAttributes,1,1,"Fetches the current paragraph attributes in effect at the location of the caret, or null if none.",;javax.swing.JTextPane.getParagraphAttributes(),;1
getParallelism,1,1,Returns the targeted parallelism level of this pool.,;java.util.concurrent.ForkJoinPool.getParallelism(),;1
getParamClasses,1,1,Returns an array of Class objects describing the types of the parameters.,;java.awt.image.renderable.ParameterBlock.getParamClasses(),;1
getParameterBlock,1,1,Returns a reference to the current parameter block.,;java.awt.image.renderable.RenderableImageOp.getParameterBlock(),;1
getParameterDescriptors,1,1,Gets the ParameterDescriptor for each of this MethodDescriptor's method's parameters.,;java.beans.MethodDescriptor.getParameterDescriptors(),;1
getParameterInfo,1,1,"Returns information about the parameters that are understood by this applet. An applet should override this method to return an array of Strings describing these parameters. Each element of the array should be a set of three Strings containing the name, the type, and a description. For example: String pinfo[][] = { {""fps"", ""1-10"", ""frames per second""}, {""repeat"", ""boolean"", ""repeat image loop""}, {""imgs"", ""url"", ""images directory""} }; The implementation of this method provided by the Applet class returns null.",;java.applet.Applet.getParameterInfo(),;1
getParameterizedType,1,1,Returns a Type object that identifies the parameterized type for the parameter represented by this Parameter object.,;java.lang.reflect.Parameter.getParameterizedType(),;1
getParameterValues,1,1,Gets the list of values of the VALUE attribute in each nested &lt;PARAM&gt; tag within the MLET tag.,;javax.management.loading.MLetContent.getParameterValues(),;1
getParentDirectory,1,1,Returns the parent directory of dir.,;javax.swing.filechooser.FileSystemView.getParentDirectory(File),;1
getParentFile,1,1,"Returns the abstract pathname of this abstract pathname's parent, or null if this pathname does not name a parent directory. The parent of an abstract pathname consists of the pathname's prefix, if any, and each name in the pathname's name sequence except for the last. If the name sequence is empty then the pathname does not name a parent directory.",;java.io.File.getParentFile(),;1
getParentNode,1,1,"Returns the parent of this node. A null value indicates that the node is the root of its own tree. To add a node to an existing tree, use one of the insertBefore, replaceChild, or appendChild methods.",;javax.imageio.metadata.IIOMetadataNode.getParentNode(),;1
getParentPath,1,1,Returns the TreePath of the parent. A return value of null indicates this is the root node.,;javax.swing.tree.TreePath.getParentPath(),;1
getPartialSize,1,1,"Returns the size used by the views between startOffset and endOffset. This uses getPartialView to calculate the size if the child view implements the TabableView interface. If a size is needed and a View does not implement the TabableView interface, the preferredSpan will be used.",";javax.swing.text.ParagraphView.getPartialSize(int,int)",;1
getPartialSpan,1,1,Determines the span along the same axis as tab expansion for a portion of the view. This is intended for use by the TabExpander for cases where the tab expansion involves aligning the portion of text that doesn't have whitespace relative to the tab stop. There is therefore an assumption that the range given does not contain tabs. This method can be called while servicing the getTabbedSpan or getPreferredSize. It has to arrange for its own text buffer to make the measurements.,";javax.swing.text.GlyphView.getPartialSpan(int,int)",;1
getParties,1,1,Returns the number of parties required to trip this barrier.,;java.util.concurrent.CyclicBarrier.getParties(),;1
getPasswordAuthentication,1,1,"Called when password authorization is needed. Subclasses should override the default implementation, which returns null.",;java.net.Authenticator.getPasswordAuthentication(),;1
getPasteAction,1,1,"Returns an Action that performs paste operations from the clipboard. When performed, this action operates on the JComponent source of the ActionEvent by invoking importData, with the clipboard contents, on the component's TransferHandler.",;javax.swing.TransferHandler.getPasteAction(),;1
getPatch,1,1,Obtains the Patch object that indicates the bank and program numbers where this instrument is to be stored in the synthesizer.,;javax.sound.midi.Instrument.getPatch(),;1
getPatchList,1,1,Obtains a list of patches referenced in this sequence. This patch list may be used to load the required Instrument objects into a Synthesizer.,;javax.sound.midi.Sequence.getPatchList(),;1
getPathBetweenRows,1,1,"Returns the paths (inclusive) between the specified rows. If the specified indices are within the viewable set of rows, or bound the viewable set of rows, then the indices are constrained by the viewable set of rows. If the specified indices are not within the viewable set of rows, or do not bound the viewable set of rows, then an empty array is returned. For example, if the row count is 10, and this method is invoked with -1, 20, then the specified indices are constrained to the viewable set of rows, and this is treated as if invoked with 0, 9. On the other hand, if this were invoked with -10, -1, then the specified indices do not bound the viewable set of rows, and an empty array is returned. The parameters are not order dependent. That is, getPathBetweenRows(x, y) is equivalent to getPathBetweenRows(y, x). An empty array is returned if the row count is 0, or the specified indices do not bound the viewable set of rows.",";javax.swing.JTree.getPathBetweenRows(int,int)",;1
getPathComponent,1,1,Returns the path element at the specified index.,;javax.swing.tree.TreePath.getPathComponent(int),;1
getPathCount,1,1,Returns the number of elements in the path.,;javax.swing.tree.TreePath.getPathCount(),;1
getPathForLocation,1,1,Returns the path for the node at the specified location.,";javax.swing.JTree.getPathForLocation(int,int)",;1
getPathInfo,1,1,Returns the extra path information that follows the web service path but precedes the query string in the request URI and will start with a "/" character. This can be used for MessageContext.PATH_INFO,;javax.xml.ws.spi.http.HttpExchange.getPathInfo(),;1
getPaths,1,1,Returns the paths that have been added or removed from the selection.,;javax.swing.event.TreeSelectionEvent.getPaths(),;1
getPathToNames,1,1,"Returns a copy of the pathToNames criterion. The X509Certificate must not include name constraints that would prohibit building a path to the specified names. If the value returned is null, no pathToNames check will be performed. If the value returned is not null, it is a Collection with one entry for each name to be included in the pathToNames criterion. Each entry is a List whose first entry is an Integer (the name type, 0-8) and whose second entry is a String or a byte array (the name, in string or ASN.1 DER encoded form, respectively). There can be multiple names of the same type. Note that the Collection returned may contain duplicate names (same name and name type). Each name in the Collection may be specified either as a String or as an ASN.1 encoded byte array. For more details about the formats used, see addPathToName(int type, String name) and addPathToName(int type, byte [] name). Note that a deep copy is performed on the Collection to protect against subsequent modifications.",;java.security.cert.X509CertSelector.getPathToNames(),;1
getPatternSeparator,1,1,Gets the character used to separate positive and negative subpatterns in a pattern.,;java.text.DecimalFormatSymbols.getPatternSeparator(),;1
getPCSType,1,1,"Returns the color space type of the Profile Connection Space (PCS). Returns one of the color space type constants defined by the ColorSpace class. This is the ""output"" color space of the profile. For an input, display, or output profile useful for tagging colors or images, this will be either TYPE_XYZ or TYPE_Lab and should be interpreted as the corresponding specific color space defined in the ICC specification. For a device link profile, this could be any of the color space type constants.",;java.awt.color.ICC_Profile.getPCSType(),;1
getPeerCertificateChain,1,1,"Returns the identity of the peer which was identified as part of defining the session. Note: This method can be used only when using certificate-based cipher suites; using it with non-certificate-based cipher suites, such as Kerberos, will throw an SSLPeerUnverifiedException. Note: this method exists for compatibility with previous releases. New applications should use getPeerCertificates() instead.",;javax.net.ssl.HandshakeCompletedEvent.getPeerCertificateChain(),;1
getPeerCertificates,1,1,"Returns the identity of the peer which was established as part of defining the session. Note: This method can be used only when using certificate-based cipher suites; using it with non-certificate-based cipher suites, such as Kerberos, will throw an SSLPeerUnverifiedException.",;javax.net.ssl.HandshakeCompletedEvent.getPeerCertificates(),;1
getPeerHost,1,1,"Returns the host name of the peer. Note that the value is not authenticated, and should not be relied upon.",;javax.net.ssl.SSLEngine.getPeerHost(),;1
getPeerPort,1,1,"Returns the port number of the peer. Note that the value is not authenticated, and should not be relied upon.",;javax.net.ssl.SSLEngine.getPeerPort(),;1
getPeerSupportedSignatureAlgorithms,1,1,"Obtains an array of supported signature algorithms that the peer is able to use. Note: this method is used to indicate to the local side which signature algorithms may be used for digital signatures in TLS 1.2. It is not meaningful for TLS versions prior to 1.2. The signature algorithm name must be a standard Java Security name (such as ""SHA1withRSA"", ""SHA256withECDSA"", and so on). See Appendix A in the Java Cryptography Architecture API Specification &amp; Reference for information about standard algorithm names.",;javax.net.ssl.ExtendedSSLSession.getPeerSupportedSignatureAlgorithms(),;1
getPendingCount,1,1,Returns the current pending count.,;java.util.concurrent.CountedCompleter.getPendingCount(),;1
getPercent,1,1,"Gets the character used for percent sign. Different for Arabic, etc.",;java.text.DecimalFormatSymbols.getPercent(),;1
getPercentComplete,1,1,Returns the percent complete for the progress bar. Note that this number is between 0.0 and 1.0.,;javax.swing.JProgressBar.getPercentComplete(),;1
getPeriod,1,1,Gets a copy of the period (in milliseconds) associated to a timer notification.,;javax.management.timer.Timer.getPeriod(Integer),;1
getPermanentFocusOwner,1,1,"Returns the permanent focus owner, if the permanent focus owner is in the same context as the calling thread. The permanent focus owner is defined as the last Component in an application to receive a permanent FOCUS_GAINED event. The focus owner and permanent focus owner are equivalent unless a temporary focus change is currently in effect. In such a situation, the permanent focus owner will again be the focus owner when the temporary focus change ends.",;java.awt.KeyboardFocusManager.getPermanentFocusOwner(),;1
getPerMill,1,1,"Gets the character used for per mille sign. Different for Arabic, etc.",;java.text.DecimalFormatSymbols.getPerMill(),;1
getPhase,1,1,"Returns the current phase number. The maximum phase number is Integer.MAX_VALUE, after which it restarts at zero. Upon termination, the phase number is negative, in which case the prevailing phase prior to termination may be obtained via getPhase() + Integer.MIN_VALUE.",;java.util.concurrent.Phaser.getPhase(),;1
getPIData,1,1,Description copied from interface:XMLStreamReader,;javax.xml.stream.util.StreamReaderDelegate.getPIData(),;1
getPITarget,1,1,Description copied from interface:XMLStreamReader,;javax.xml.stream.util.StreamReaderDelegate.getPITarget(),;1
getPixelBitStride,1,1,Returns the pixel bit stride in bits. This value is the same as the number of bits per pixel.,;java.awt.image.MultiPixelPackedSampleModel.getPixelBitStride(),;1
getPixelColor,1,1,Returns the color of a pixel at the given screen coordinates.,";java.awt.Robot.getPixelColor(int,int)",;1
getPixelSize,1,1,Returns the number of bits per pixel described by this ColorModel.,;java.awt.image.ColorModel.getPixelSize(),;1
getPixelStride,1,1,Returns the pixel stride of this ComponentSampleModel.,;java.awt.image.ComponentSampleModel.getPixelStride(),;1
getPlaceholder,1,1,Returns the String to use if the value does not completely fill in the mask.,;javax.swing.text.MaskFormatter.getPlaceholder(),;1
getPlaceholderCharacter,1,1,"Returns the character to use in place of characters that are not present in the value, ie the user must fill them in.",;javax.swing.text.MaskFormatter.getPlaceholderCharacter(),;1
getPlatformManagementInterfaces,1,1,"Returns the set of Class objects, subinterface of PlatformManagedObject, representing all management interfaces for monitoring and managing the Java platform.",;java.lang.management.ManagementFactory.getPlatformManagementInterfaces(),;1
getPlatformMBeanServer,1,1,"Returns the platform MBeanServer. On the first call to this method, it first creates the platform MBeanServer by calling the MBeanServerFactory.createMBeanServer method and registers each platform MXBean in this platform MBeanServer with its ObjectName. This method, in subsequent calls, will simply return the initially created platform MBeanServer. MXBeans that get created and destroyed dynamically, for example, memory pools and managers, will automatically be registered and deregistered into the platform MBeanServer. If the system property javax.management.builder.initial is set, the platform MBeanServer creation will be done by the specified MBeanServerBuilder. It is recommended that this platform MBeanServer also be used to register other application managed beans besides the platform MXBeans. This will allow all MBeans to be published through the same MBeanServer and hence allow for easier network publishing and discovery. Name conflicts with the platform MXBeans should be avoided.",;java.lang.management.ManagementFactory.getPlatformMBeanServer(),;1
getPluginClassName,1,1,Returns the fully-qualified class name of the ImageReader or ImageWriter plug-in associated with this service provider.,;javax.imageio.spi.ImageReaderWriterSpi.getPluginClassName(),;1
getPoint,1,1,"Returns the x,y position of the event relative to the source component.",;java.awt.event.MouseEvent.getPoint(),;1
getPoint1,1,1,Returns a copy of the point P1 that anchors the first color.,;java.awt.GradientPaint.getPoint1(),;1
getPoint2,1,1,Returns a copy of the point P2 which anchors the second color.,;java.awt.GradientPaint.getPoint2(),;1
getPointerInfo,1,1,"Returns a PointerInfo instance that represents the current location of the mouse pointer. The GraphicsDevice stored in this PointerInfo contains the mouse pointer. The coordinate system used for the mouse position depends on whether or not the GraphicsDevice is part of a virtual screen device. For virtual screen devices, the coordinates are given in the virtual coordinate system, otherwise they are returned in the coordinate system of the GraphicsDevice. See GraphicsConfiguration for more information about the virtual screen devices. On systems without a mouse, returns null. If there is a security manager, its checkPermission method is called with an AWTPermission(""watchMousePointer"") permission before creating and returning a PointerInfo object. This may result in a SecurityException.",;java.awt.MouseInfo.getPointerInfo(),;1
getPolicyQualifier,1,1,Returns the ASN.1 DER encoded form of the qualifier field of this PolicyQualifierInfo.,;java.security.cert.PolicyQualifierInfo.getPolicyQualifier(),;1
getPolicyQualifierId,1,1,Returns the policyQualifierId field of this PolicyQualifierInfo. The policyQualifierId is an Object Identifier (OID) represented by a set of nonnegative integers separated by periods.,;java.security.cert.PolicyQualifierInfo.getPolicyQualifierId(),;1
getPolicyQualifiersRejected,1,1,"Gets the PolicyQualifiersRejected flag. If this flag is true, certificates that include policy qualifiers in a certificate policies extension that is marked critical are rejected. If the flag is false, certificates are not rejected on this basis. When a PKIXParameters object is created, this flag is set to true. This setting reflects the most common (and simplest) strategy for processing policy qualifiers. Applications that want to use a more sophisticated policy must set this flag to false.",;java.security.cert.PKIXParameters.getPolicyQualifiersRejected(),;1
getPolicyTree,1,1,"Returns the root node of the valid policy tree resulting from the PKIX certification path validation algorithm. The PolicyNode object that is returned and any objects that it returns through public methods are immutable. Most applications will not need to examine the valid policy tree. They can achieve their policy processing goals by setting the policy-related parameters in PKIXParameters. However, more sophisticated applications, especially those that process policy qualifiers, may need to traverse the valid policy tree using the PolicyNode.getParent and PolicyNode.getChildren methods.",;java.security.cert.PKIXCertPathValidatorResult.getPolicyTree(),;1
getPoolIndex,1,1,"Returns the unique index number of this thread in its pool. The returned value ranges from zero to the maximum number of threads (minus one) that may exist in the pool, and does not change during the lifetime of the thread. This method may be useful for applications that track status or collect results per-worker-thread rather than per-task.",;java.util.concurrent.ForkJoinWorkerThread.getPoolIndex(),;1
getPoolName,1,1,Returns the name of the memory pool that triggers this notification. The memory pool usage has crossed a threshold.,;java.lang.management.MemoryNotificationInfo.getPoolName(),;1
getPopupHeightForRowCount,1,1,Retrieves the height of the popup based on the current ListCellRenderer and the maximum row count.,;javax.swing.plaf.basic.BasicComboPopup.getPopupHeightForRowCount(int),;1
getPopupLocation,1,1,"Returns the preferred location to display the popup menu in this component's coordinate system. It is up to the look and feel to honor this property, some may choose to ignore it. If null, the look and feel will choose a suitable location.",;javax.swing.JComponent.getPopupLocation(MouseEvent),;1
getPopupMenuOrigin,1,1,"Computes the origin for the JMenu's popup menu. This method uses Look and Feel properties named Menu.menuPopupOffsetX, Menu.menuPopupOffsetY, Menu.submenuPopupOffsetX, and Menu.submenuPopupOffsetY to adjust the exact location of popup.",;javax.swing.JMenu.getPopupMenuOrigin(),;1
getPortlist,1,1,Returns the port list attribute of the cookie,;java.net.HttpCookie.getPortlist(),;1
getPositionAbove,1,1,Determines the position in the model that is closest to the given view location in the row above. The component given must have a size to compute the result. If the component doesn't have a size a value of -1 will be returned.,";javax.swing.text.Utilities.getPositionAbove(JTextComponent,int,int)",;1
getPositionBelow,1,1,Determines the position in the model that is closest to the given view location in the row below. The component given must have a size to compute the result. If the component doesn't have a size a value of -1 will be returned.,";javax.swing.text.Utilities.getPositionBelow(JTextComponent,int,int)",;1
getPositivePrefix,1,1,"Get the positive prefix. Examples: +123, $123, sFr123",;java.text.DecimalFormat.getPositivePrefix(),;1
getPositiveSign,1,1,Gets the character that represents the positive sign. The character used to represent a positive number may vary by culture. This method specifies the character to use.,;java.time.format.DecimalStyle.getPositiveSign(),;1
getPositiveSuffix,1,1,Get the positive suffix. Example: 123%,;java.text.DecimalFormat.getPositiveSuffix(),;1
getPosixFilePermissions,1,1,"Returns a file's POSIX file permissions. The path parameter is associated with a FileSystem that supports the PosixFileAttributeView. This attribute view provides access to file attributes commonly associated with files on file systems used by operating systems that implement the Portable Operating System Interface (POSIX) family of standards. The options array may be used to indicate how symbolic links are handled for the case that the file is a symbolic link. By default, symbolic links are followed and the file attribute of the final target of the link is read. If the option NOFOLLOW_LINKS is present then symbolic links are not followed.",";java.nio.file.Files.getPosixFilePermissions(Path,LinkOption...)",;1
getPreciseWheelRotation,1,1,"Returns the number of ""clicks"" the mouse wheel was rotated, as a double. A partial rotation may occur if the mouse supports a high-resolution wheel. In this case, the return value will include a fractional ""click"".",;java.awt.event.MouseWheelEvent.getPreciseWheelRotation(),;1
getPredefinedCursor,1,1,Returns a cursor object with the specified predefined type.,;java.awt.Cursor.getPredefinedCursor(int),;1
getPreferredGap,1,1,"Returns the amount of space to use between two components. The return value indicates the distance to place component2 relative to component1. For example, the following returns the amount of space to place between component2 and component1 when component2 is placed vertically above component1: int gap = getPreferredGap(component1, component2, ComponentPlacement.RELATED, SwingConstants.NORTH, parent); The type parameter indicates the relation between the two components. If the two components will be contained in the same parent and are showing similar logically related items, use RELATED. If the two components will be contained in the same parent but show logically unrelated items use UNRELATED. Some look and feels may not distinguish between the RELATED and UNRELATED types. The return value is not intended to take into account the current size and position of component2 or component1. The return value may take into consideration various properties of the components. For example, the space may vary based on font size, or the preferred size of the component.",";javax.swing.LayoutStyle.getPreferredGap(JComponent,JComponent,LayoutStyle.ComponentPlacement,int,Container)",;1
getPreferredMinSize,1,1,Returns the minimum preferred size.,;javax.swing.plaf.basic.BasicTreeUI.getPreferredMinSize(),;1
getPreferredThumbnailSizes,1,1,"Returns an array of Dimensions indicating the legal size ranges for thumbnail images as they will be encoded in the output file or stream. This information is merely advisory; the writer will resize any supplied thumbnails as necessary. The information is returned as a set of pairs; the first element of a pair contains an (inclusive) minimum width and height, and the second element contains an (inclusive) maximum width and height. Together, each pair defines a valid range of sizes. To specify a fixed size, the same width and height will appear for both elements. A return value of null indicates that the size is arbitrary or unknown. An ImageWriteParam may optionally be supplied for cases where it may affect thumbnail handling. If the supplied ImageWriteParam contains optional setting values not supported by this writer (e.g. progressive encoding or any format-specific settings), they will be ignored. The default implementation returns null.",";javax.imageio.ImageWriter.getPreferredThumbnailSizes(ImageTypeSpecifier,ImageWriteParam,IIOMetadata,IIOMetadata)",;1
getPreferredTileSizes,1,1,"Returns an array of Dimensions indicating the legal size ranges for tiles as they will be encoded in the output file or stream. The returned array is a copy. The information is returned as a set of pairs; the first element of a pair contains an (inclusive) minimum width and height, and the second element contains an (inclusive) maximum width and height. Together, each pair defines a valid range of sizes. To specify a fixed size, use the same width and height for both elements. To specify an arbitrary range, a value of null is used in place of an actual array of Dimensions. If no array is specified on the constructor, but tiling is allowed, then this method returns null.",;javax.imageio.ImageWriteParam.getPreferredTileSizes(),;1
getPreferredValue,1,1,Returns the preferred value of this Spring.,;javax.swing.Spring.getPreferredValue(),;1
getPrefixList,1,1,Returns the inclusive namespace prefix list. Each entry in the list is a String that represents a namespace prefix. This implementation returns an unmodifiable list.,;javax.xml.crypto.dsig.spec.ExcC14NParameterSpec.getPrefixList(),;1
getPreservesUnknownTags,1,1,Returns the behavior the parser observes when encountering unknown tags.,;javax.swing.text.html.HTMLDocument.getPreservesUnknownTags(),;1
getPressedIcon,1,1,Returns the pressed icon for the button.,;javax.swing.AbstractButton.getPressedIcon(),;1
getPreviewPanel,1,1,Returns the preview panel that shows a chosen color.,;javax.swing.JColorChooser.getPreviewPanel(),;1
getPreviousBounds,1,1,Gets the normal bounds of the component prior to the component being maximized.,;javax.swing.DefaultDesktopManager.getPreviousBounds(JInternalFrame),;1
getPreviousLeaf,1,1,"Returns the leaf before this node or null if this node is the first leaf in the tree. In this implementation of the MutableNode interface, this operation is very inefficient. In order to determine the previous node, this method first performs a linear search in the parent's child-list in order to find the current node. That implementation makes the operation suitable for short traversals from a known position. But to traverse all of the leaves in the tree, you should use depthFirstEnumeration to enumerate the nodes in the tree and use isLeaf on each node to determine which are leaves.",;javax.swing.tree.DefaultMutableTreeNode.getPreviousLeaf(),;1
getPreviousNode,1,1,"Returns the node that precedes this node in a preorder traversal of this node's tree. Returns null if this node is the first node of the traversal -- the root of the tree. This is an inefficient way to traverse the entire tree; use an enumeration, instead.",;javax.swing.tree.DefaultMutableTreeNode.getPreviousNode(),;1
getPreviousRowCount,1,1,Returns the number of rows before the sort. This method is only useful for events of type SORTED and if the last locations have not been provided will return 0.,;javax.swing.event.RowSorterEvent.getPreviousRowCount(),;1
getPreviousWord,1,1,Determine the start of the prev word for the given location. Uses BreakIterator.getWordInstance() to actually get the words.,";javax.swing.text.Utilities.getPreviousWord(JTextComponent,int)",;1
getPrime,1,1,Returns the prime.,;java.security.spec.RSAOtherPrimeInfo.getPrime(),;1
getPrimePLength,1,1,Returns the desired length of the prime P of the to-be-generated DSA domain parameters in bits.,;java.security.spec.DSAGenParameterSpec.getPrimePLength(),;1
getPrimeSize,1,1,Returns the size in bits of the prime modulus.,;javax.crypto.spec.DHGenParameterSpec.getPrimeSize(),;1
getPrimitiveArrayType,1,1,"Create an ArrayType instance in a type-safe manner. Calling this method twice with the same parameters may return the same object or two equal but not identical objects. As an example, the following piece of code: ArrayType&lt;int[][][]&gt; t = ArrayType.getPrimitiveArrayType(int[][][].class); System.out.println(""array class name = "" + t.getClassName()); System.out.println(""element class name = "" + t.getElementOpenType().getClassName()); System.out.println(""array type name = "" + t.getTypeName()); System.out.println(""array type description = "" + t.getDescription()); would produce the following output: array class name = [[[I element class name = java.lang.Integer array type name = [[[I array type description = 3-dimension array of int",;javax.management.openmbean.ArrayType.getPrimitiveArrayType(Class&lt;T&gt;),;1
getPrintableArea,1,1,"Get the printable area as an array of 4 values in the order x, y, w, h. The values returned are in the given units.",;javax.print.attribute.standard.MediaPrintableArea.getPrintableArea(int),;1
getPrintData,1,1,Description copied from interface:Doc,;javax.print.SimpleDoc.getPrintData(),;1
getPrinter,1,1,Returns the destination printer for jobs using these attributes. This attribute is updated to the value chosen by the user.,;java.awt.JobAttributes.getPrinter(),;1
getPrinterJob,1,1,"Creates and returns a PrinterJob which is initially associated with the default printer. If no printers are available on the system, a PrinterJob will still be returned from this method, but getPrintService() will return null, and calling print with this PrinterJob might generate an exception. Applications that need to determine if there are suitable printers before creating a PrinterJob should ensure that the array returned from lookupPrintServices is not empty.",;java.awt.print.PrinterJob.getPrinterJob(),;1
getPrinterResolution,1,1,Returns the print resolution for pages using these attributes. Index 0 of the array specifies the cross feed direction resolution (typically the horizontal resolution). Index 1 of the array specifies the feed direction resolution (typically the vertical resolution). Index 2 of the array specifies whether the resolutions are in dots per inch or dots per centimeter. 3 denotes dots per inch. 4 denotes dots per centimeter.,;java.awt.PageAttributes.getPrinterResolution(),;1
getPrintEventType,1,1,Gets the reason for this event.,;javax.print.event.PrintJobEvent.getPrintEventType(),;1
getPrintQuality,1,1,Returns the print quality for pages using these attributes. This attribute is updated to the value chosen by the user.,;java.awt.PageAttributes.getPrintQuality(),;1
getPriority,1,1,Returns this thread's priority.,;java.lang.Thread.getPriority(),;1
getPrivacy,1,1,Retrieves the privacy state.,;org.ietf.jgss.MessageProp.getPrivacy(),;1
getPrivate,1,1,Returns a reference to the private key component of this key pair.,;java.security.KeyPair.getPrivate(),;1
getPrivateExponent,1,1,Returns the private exponent.,;java.security.spec.RSAPrivateKeySpec.getPrivateExponent(),;1
getPrivateKeyValid,1,1,"Returns the privateKeyValid criterion. The specified date must fall within the private key validity period for the X509Certificate. If null, no privateKeyValid check will be done. Note that the Date returned is cloned to protect against subsequent modifications.",;java.security.cert.X509CertSelector.getPrivateKeyValid(),;1
getProblemType,1,1,Retrieves problem type.,;javax.management.relation.RoleUnresolved.getProblemType(),;1
getProfile,1,1,Returns the ICC_Profile for this ICC_ColorSpace.,;java.awt.color.ICC_ColorSpace.getProfile(),;1
getProfileClass,1,1,Returns the profile class.,;java.awt.color.ICC_Profile.getProfileClass(),;1
getProgram,1,1,"Returns the index, within a bank, of the instrument whose location this Patch specifies.",;javax.sound.midi.Patch.getProgram(),;1
getProgress,1,1,Returns the progress bound property.,;javax.swing.SwingWorker.getProgress(),;1
getProgressiveMode,1,1,Returns the current mode for writing the stream in a progressive manner.,;javax.imageio.ImageWriteParam.getProgressiveMode(),;1
getProgressMonitor,1,1,Get the ProgressMonitor object being used by this stream. Normally this isn't needed unless you want to do something like change the descriptive text partway through reading the file.,;javax.swing.ProgressMonitorInputStream.getProgressMonitor(),;1
getPropagatedFrom,1,1,Gets the BeanContext from which this event was propagated.,;java.beans.beancontext.BeanContextEvent.getPropagatedFrom(),;1
getPropagationId,1,1,"The ""propagationId"" field is reserved for future use. In Beans 1.0 the sole requirement is that if a listener catches a PropertyChangeEvent and then fires a PropertyChangeEvent of its own, then it should make sure that it propagates the propagationId field from its incoming event to its outgoing event.",;java.beans.PropertyChangeEvent.getPropagationId(),;1
getPropertyChangeSupport,1,1,Returns the PropertyChangeSupport for this SwingWorker. This method is used when flexible access to bound properties support is needed. This SwingWorker will be the source for any generated events. Note: The returned PropertyChangeSupport notifies any PropertyChangeListeners asynchronously on the Event Dispatch Thread in the event that firePropertyChange or fireIndexedPropertyChange are called off the Event Dispatch Thread.,;javax.swing.SwingWorker.getPropertyChangeSupport(),;1
getPropertyDescriptors,1,1,Deny knowledge of properties. You can override this if you wish to provide explicit property info.,;java.beans.SimpleBeanInfo.getPropertyDescriptors(),;1
getPropertyEditorClass,1,1,Gets any explicit PropertyEditor Class that has been registered for this property.,;java.beans.PropertyDescriptor.getPropertyEditorClass(),;1
getPropertyOverrides,1,1,Returns the group's property-override list.,;java.rmi.activation.ActivationGroupDesc.getPropertyOverrides(),;1
getPropertyType,1,1,Returns the Java type info for the property. Note that the Class object may describe primitive Java types such as int. This type is returned by the read method or is used as the parameter type of the write method. Returns null if the type is an indexed property that does not support non-indexed access.,;java.beans.PropertyDescriptor.getPropertyType(),;1
getProtectionAlgorithm,1,1,"Gets the name of the protection algorithm. If none was set then the keystore provider will use its default protection algorithm. The name of the default protection algorithm for a given keystore type is set using the 'keystore.&lt;type&gt;.keyProtectionAlgorithm' security property. For example, the keystore.PKCS12.keyProtectionAlgorithm property stores the name of the default key protection algorithm used for PKCS12 keystores. If the security property is not set, an implementation-specific algorithm will be used.",;java.security.KeyStore.PasswordProtection.getProtectionAlgorithm(),;1
getProtectionDomain,1,1,"Returns the ProtectionDomain of this class. If there is a security manager installed, this method first calls the security manager's checkPermission method with a RuntimePermission(""getProtectionDomain"") permission to ensure it's ok to get the ProtectionDomain.",;java.lang.Class.getProtectionDomain(),;1
getProtectionParameters,1,1,Gets the parameters supplied for the protection algorithm.,;java.security.KeyStore.PasswordProtection.getProtectionParameters(),;1
getProtectionParams,1,1,Gets the keystore protection parameters for keystores in this domain.,;java.security.DomainLoadStoreParameter.getProtectionParams(),;1
getProtocols,1,1,Returns a copy of the array of protocols or null if none have been set.,;javax.net.ssl.SSLParameters.getProtocols(),;1
getPrototypeCellValue,1,1,Returns the "prototypical" cell value -- a value used to calculate a fixed width and height for cells. This can be null if there is no such value.,;javax.swing.JList.getPrototypeCellValue(),;1
getPrototypeDisplayValue,1,1,Returns the "prototypical display" value - an Object used for the calculation of the display height and width.,;javax.swing.JComboBox.getPrototypeDisplayValue(),;1
getProviderGrade,1,1,Returns a constant indicating the grade of synchronization a RowSet object can expect from this SyncProvider object.,;javax.sql.rowset.spi.SyncProvider.getProviderGrade(),;1
getProviderID,1,1,Returns the unique identifier for this SyncProvider object.,;javax.sql.rowset.spi.SyncProvider.getProviderID(),;1
getProviders,1,1,Returns an array containing all the installed providers. The order of the providers in the array is their preference order.,;java.security.Security.getProviders(),;1
getPSName,1,1,Returns the postscript name of this Font. Use getFamily to get the family name of the font. Use getFontName to get the font face name of the font.,;java.awt.Font.getPSName(),;1
getPSource,1,1,Returns the source of encoding input P.,;javax.crypto.spec.OAEPParameterSpec.getPSource(),;1
getPublic,1,1,Returns a reference to the public key component of this key pair.,;java.security.KeyPair.getPublic(),;1
getPurgeFlag,1,1,"Returns the flag to indicate if when a notification is received for the unregistration of an MBean referenced in a relation, if an immediate ""purge"" of the relations (look for the relations no longer valid) has to be performed , or if that will be performed only when the purgeRelations method will be explicitly called. true is immediate purge.",;javax.management.relation.RelationService.getPurgeFlag(),;1
getPushLevel,1,1,Get the pushLevel.,;java.util.logging.MemoryHandler.getPushLevel(),;1
getQName,1,1,Return an attribute's qualified (prefixed) name.,;org.xml.sax.helpers.AttributesImpl.getQName(int),;1
getQOP,1,1,Retrieves the QOP value.,;org.ietf.jgss.MessageProp.getQOP(),;1
getQueryString,1,1,Returns the query string that is contained in the request URI after the path. This can be used for MessageContext.QUERY_STRING,;javax.xml.ws.spi.http.HttpExchange.getQueryString(),;1
getQueryTimeout,1,1,"Retrieves the maximum number of seconds the driver will wait for a query to execute. If the limit is exceeded, an SQLException is thrown.",;javax.sql.rowset.BaseRowSet.getQueryTimeout(),;1
getQueuedReaderThreads,1,1,"Returns a collection containing threads that may be waiting to acquire the read lock. Because the actual set of threads may change dynamically while constructing this result, the returned collection is only a best-effort estimate. The elements of the returned collection are in no particular order. This method is designed to facilitate construction of subclasses that provide more extensive lock monitoring facilities.",;java.util.concurrent.locks.ReentrantReadWriteLock.getQueuedReaderThreads(),;1
getQueuedSubmissionCount,1,1,Returns an estimate of the number of tasks submitted to this pool that have not yet begun executing. This method may take time proportional to the number of submissions.,;java.util.concurrent.ForkJoinPool.getQueuedSubmissionCount(),;1
getQueuedWriterThreads,1,1,"Returns a collection containing threads that may be waiting to acquire the write lock. Because the actual set of threads may change dynamically while constructing this result, the returned collection is only a best-effort estimate. The elements of the returned collection are in no particular order. This method is designed to facilitate construction of subclasses that provide more extensive lock monitoring facilities.",;java.util.concurrent.locks.ReentrantReadWriteLock.getQueuedWriterThreads(),;1
getRadius,1,1,Returns the radius of the circle defining the radial gradient.,;java.awt.RadialGradientPaint.getRadius(),;1
getRange,1,1,Returns the language range of this LanguageRange.,;java.util.Locale.LanguageRange.getRange(),;1
getRanges,1,1,"Returns an int that ORs together the values for all the ranges that will be shaped. For example, to check if a shaper shapes to Arabic, you would use the following: if ((shaper.getRanges() &amp; shaper.ARABIC) != 0) &amp;#123; ... Note that this method supports only the bit mask-based ranges. Call getRangeSet() for the enum-based ranges.",;java.awt.font.NumericShaper.getRanges(),;1
getRangeSet,1,1,Returns a Set representing all the Unicode ranges in this NumericShaper that will be shaped.,;java.awt.font.NumericShaper.getRangeSet(),;1
getRawAuthority,1,1,"Returns the raw authority component of this URI. The authority component of a URI, if defined, only contains the commercial-at character ('@') and characters in the unreserved, punct, escaped, and other categories. If the authority is server-based then it is further constrained to have valid user-information, host, and port components.",;java.net.URI.getRawAuthority(),;1
getRawContent,1,1,Gets the content of this AttachmentPart object as an InputStream as if a call had been made to getContent and no DataContentHandler had been registered for the content-type of this AttachmentPart. Note that reading from the returned InputStream would result in consuming the data in the stream. It is the responsibility of the caller to reset the InputStream appropriately before calling a Subsequent API. If a copy of the raw attachment content is required then the getRawContentBytes() API should be used instead.,;javax.xml.soap.AttachmentPart.getRawContent(),;1
getRawContentBytes,1,1,Gets the content of this AttachmentPart object as a byte[] array as if a call had been made to getContent and no DataContentHandler had been registered for the content-type of this AttachmentPart.,;javax.xml.soap.AttachmentPart.getRawContentBytes(),;1
getRawFragment,1,1,"Returns the raw fragment component of this URI. The fragment component of a URI, if defined, only contains legal URI characters.",;java.net.URI.getRawFragment(),;1
getRawImageType,1,1,"Returns an ImageTypeSpecifier indicating the SampleModel and ColorModel which most closely represents the ""raw"" internal format of the image. For example, for a JPEG image the raw type might have a YCbCr color space even though the image would conventionally be transformed into an RGB color space prior to display. The returned value should also be included in the list of values returned by getImageTypes. The default implementation simply returns the first entry from the list provided by getImageType.",;javax.imageio.ImageReader.getRawImageType(int),;1
getRawPath,1,1,"Returns the raw path component of this URI. The path component of a URI, if defined, only contains the slash character ('/'), the commercial-at character ('@'), and characters in the unreserved, punct, escaped, and other categories.",;java.net.URI.getRawPath(),;1
getRawQuery,1,1,"Returns the raw query component of this URI. The query component of a URI, if defined, only contains legal URI characters.",;java.net.URI.getRawQuery(),;1
getRawSchemeSpecificPart,1,1,"Returns the raw scheme-specific part of this URI. The scheme-specific part is never undefined, though it may be empty. The scheme-specific part of a URI only contains legal URI characters.",;java.net.URI.getRawSchemeSpecificPart(),;1
getRawUserInfo,1,1,"Returns the raw user-information component of this URI. The user-information component of a URI, if defined, only contains characters in the unreserved, punct, escaped, and other categories.",;java.net.URI.getRawUserInfo(),;1
getRdn,1,1,Retrieves an RDN of this LDAP name as an Rdn.,;javax.naming.ldap.LdapName.getRdn(int),;1
getRdns,1,1,"Retrieves the list of relative distinguished names. The contents of the list are unmodifiable. The indexing of RDNs in the returned list follows the numbering of RDNs as described in the class description. If the name has zero components, an empty list is returned.",;javax.naming.ldap.LdapName.getRdns(),;1
getReaderFileSuffixes,1,1,Returns an array of Strings listing all of the file suffixes associated with the formats understood by the current set of registered readers.,;javax.imageio.ImageIO.getReaderFileSuffixes(),;1
getReaderFormatNames,1,1,Returns an array of Strings listing all of the informal format names understood by the current set of registered readers.,;javax.imageio.ImageIO.getReaderFormatNames(),;1
getReaderForText,1,1,"Gets a Reader for a text flavor, decoded, if necessary, for the expected charset (encoding). The supported representation classes are java.io.Reader, java.lang.String, java.nio.CharBuffer, [C, java.io.InputStream, java.nio.ByteBuffer, and [B. Because text flavors which do not support the charset parameter are encoded in a non-standard format, this method should not be called for such flavors. However, in order to maintain backward-compatibility, if this method is called for such a flavor, this method will treat the flavor as though it supports the charset parameter and attempt to decode it accordingly. See selectBestTextFlavor for a list of text flavors which do not support the charset parameter.",;java.awt.datatransfer.DataFlavor.getReaderForText(Transferable),;1
getReaderMIMETypes,1,1,Returns an array of Strings listing all of the MIME types understood by the current set of registered readers.,;javax.imageio.ImageIO.getReaderMIMETypes(),;1
getReaderServiceProviderName,1,1,Returns the fully qualified class name of an ImageReaderSpi class that generates IIOMetadata objects that may be used as input to this transcoder.,;javax.imageio.spi.ImageTranscoderSpi.getReaderServiceProviderName(),;1
getReadHoldCount,1,1,Queries the number of reentrant read holds on this lock by the current thread. A reader thread has a hold on a lock for each lock action that is not matched by an unlock action.,;java.util.concurrent.locks.ReentrantReadWriteLock.getReadHoldCount(),;1
getReadMethod,1,1,Gets the method that should be used to read the property value.,;java.beans.PropertyDescriptor.getReadMethod(),;1
getReadTimeout,1,1,"Returns setting for read timeout. 0 return implies that the option is disabled (i.e., timeout of infinity).",;java.net.URLConnection.getReadTimeout(),;1
getRealm,1,1,Returns the realm component of this Kerberos principal.,;javax.security.auth.kerberos.KerberosPrincipal.getRealm(),;1
getReceiver,1,1,"Obtains a MIDI receiver from an external MIDI port or other default device. The returned receiver always implements the MidiDeviceReceiver interface. If the system property javax.sound.midi.Receiver is defined or it is defined in the file ""sound.properties"", it is used to identify the device that provides the default receiver. For details, refer to the class description. If a suitable MIDI port is not available, the Receiver is retrieved from an installed synthesizer. If a native receiver provided by the default device does not implement the MidiDeviceReceiver interface, it will be wrapped in a wrapper class that implements the MidiDeviceReceiver interface. The corresponding Receiver method calls will be forwarded to the native receiver. If this method returns successfully, the MidiDevice the Receiver belongs to is opened implicitly, if it is not already open. It is possible to close an implicitly opened device by calling close on the returned Receiver. All open Receiver instances have to be closed in order to release system resources hold by the MidiDevice. For a detailed description of open/close behaviour see the class description of MidiDevice.",;javax.sound.midi.MidiSystem.getReceiver(),;1
getRecursionLimit,1,1,Returns the recursion limit of this iterator.,;java.awt.geom.FlatteningPathIterator.getRecursionLimit(),;1
getRedMask,1,1,Returns the mask indicating which bits in an int pixel representation contain the red color component.,;java.awt.image.DirectColorModel.getRedMask(),;1
getReds,1,1,Copies the array of red color components into the specified array. Only the initial entries of the array as specified by getMapSize are written.,;java.awt.image.IndexColorModel.getReds(byte[]),;1
getReductionPolynomial,1,1,Returns a BigInteger whose i-th bit corresponds to the i-th coefficient of the reduction polynomial for polynomial basis or null for normal basis.,;java.security.spec.ECFieldF2m.getReductionPolynomial(),;1
getRefMBeanClassName,1,1,Returns name of type of MBean expected to be referenced in corresponding role.,;javax.management.relation.RoleInfo.getRefMBeanClassName(),;1
getRefreshRate,1,1,"Returns the refresh rate of the display, in hertz. This may be REFRESH_RATE_UNKNOWN if the information is not available.",;java.awt.DisplayMode.getRefreshRate(),;1
getRegisteredKeyStrokes,1,1,Returns the KeyStrokes that will initiate registered actions.,;javax.swing.JComponent.getRegisteredKeyStrokes(),;1
getRegisteredParties,1,1,Returns the number of parties registered at this phaser.,;java.util.concurrent.Phaser.getRegisteredParties(),;1
getRegisteredProviders,1,1,"Returns an Enumeration of currently registered synchronization providers. A RowSet implementation may use any provider in the enumeration as its SyncProvider object. At a minimum, the reference synchronization provider allowing RowSet content data to be stored using a JDBC driver should be possible.",;javax.sql.rowset.spi.SyncFactory.getRegisteredProviders(),;1
getRejectedExecutionHandler,1,1,Returns the current handler for unexecutable tasks.,;java.util.concurrent.ThreadPoolExecutor.getRejectedExecutionHandler(),;1
getRelationServiceName,1,1,Returns ObjectName of the Relation Service handling the relation.,;javax.management.relation.RelationSupport.getRelationServiceName(),;1
getRemaining,1,1,Returns the total number of bytes remaining in the input buffer. This can be used to find out what bytes still remain in the input buffer after decompression has finished.,;java.util.zip.Inflater.getRemaining(),;1
getRemainingName,1,1,Retrieves the remaining unresolved portion of the name.,;javax.naming.spi.ResolveResult.getRemainingName(),;1
getRemoveListenerMethod,1,1,Gets the method used to remove event listeners.,;java.beans.EventSetDescriptor.getRemoveListenerMethod(),;1
getRemoveOnCancelPolicy,1,1,Gets the policy on whether cancelled tasks should be immediately removed from the work queue at time of cancellation. This value is by default false.,;java.util.concurrent.ScheduledThreadPoolExecutor.getRemoveOnCancelPolicy(),;1
getRenderableSource,1,1,Returns a source as a RenderableImage. This method is a convenience method. An exception will be thrown if the sources is not a RenderableImage.,;java.awt.image.renderable.ParameterBlock.getRenderableSource(int),;1
getRenderedImage,1,1,"Returns the currently set RenderedImage, or null if only a Raster is available.",;javax.imageio.IIOImage.getRenderedImage(),;1
getRenderedSource,1,1,Returns a source as a RenderedImage. This method is a convenience method. An exception will be thrown if the source is not a RenderedImage.,;java.awt.image.renderable.ParameterBlock.getRenderedSource(int),;1
getRenderer,1,1,Returns the renderer used to display the selected item in the JComboBox field.,;javax.swing.JComboBox.getRenderer(),;1
getRenderingHint,1,1,Returns the value of a single preference for the rendering algorithms. Hint categories include controls for rendering quality and overall time/quality trade-off in the rendering process. Refer to the RenderingHints class for definitions of some common keys and values.,;java.awt.Graphics2D.getRenderingHint(RenderingHints.Key),;1
getRenewTill,1,1,"Returns the latest expiration time for this ticket, including all renewals. This will return a null value for non-renewable tickets.",;javax.security.auth.kerberos.KerberosTicket.getRenewTill(),;1
getReorderingAllowed,1,1,"Returns true if the user is allowed to rearrange columns by dragging their headers, false otherwise. The default is true. You can rearrange columns programmatically regardless of this setting.",;javax.swing.table.JTableHeader.getReorderingAllowed(),;1
getRepresentationClassName,1,1,Returns the name of this doc flavor object's representation class.,;javax.print.DocFlavor.getRepresentationClassName(),;1
getRequestBody,1,1,Returns a stream from which the request body can be read. Multiple calls to this method will return the same stream.,;javax.xml.ws.spi.http.HttpExchange.getRequestBody(),;1
getRequestControls,1,1,Description copied from interface:LdapContext,;javax.naming.ldap.InitialLdapContext.getRequestControls(),;1
getRequestedServerNames,1,1,"Obtains a List containing all SNIServerNames of the requested Server Name Indication (SNI) extension. In server mode, unless the return List is empty, the server should use the requested server names to guide its selection of an appropriate authentication certificate, and/or other aspects of security policy. In client mode, unless the return List is empty, the client should use the requested server names to guide its endpoint identification of the peer's identity, and/or other aspects of security policy.",;javax.net.ssl.ExtendedSSLSession.getRequestedServerNames(),;1
getRequestHeader,1,1,"Returns the value of the specified request header. If the request did not include a header of the specified name, this method returns null. If there are multiple headers with the same name, this method returns the first header in the request. The header name is case-insensitive. This is a convienence method to get a header (instead of using the getRequestHeaders()).",;javax.xml.ws.spi.http.HttpExchange.getRequestHeader(String),;1
getRequestHeaders,1,1,"Returns an immutable Map containing the HTTP headers that were included with this request. The keys in this Map will be the header names, while the values will be a List of Strings containing each value that was included (either for a header that was listed several times, or one that accepts a comma-delimited list of values on a single line). In either of these cases, the values for the header name will be presented in the order that they were included in the request. The keys in Map are case-insensitive.",;javax.xml.ws.spi.http.HttpExchange.getRequestHeaders(),;1
getRequestingHost,1,1,"Gets the hostname of the site or proxy requesting authentication, or null if not available.",;java.net.Authenticator.getRequestingHost(),;1
getRequestingPort,1,1,Gets the port number for the requested connection.,;java.net.Authenticator.getRequestingPort(),;1
getRequestingPrompt,1,1,Gets the prompt string given by the requestor.,;java.net.Authenticator.getRequestingPrompt(),;1
getRequestingProtocol,1,1,"Give the protocol that's requesting the connection. Often this will be based on a URL, but in a future JDK it could be, for example, ""SOCKS"" for a password-protected SOCKS5 firewall.",;java.net.Authenticator.getRequestingProtocol(),;1
getRequestingScheme,1,1,"Gets the scheme of the requestor (the HTTP scheme for an HTTP firewall, for example).",;java.net.Authenticator.getRequestingScheme(),;1
getRequestingSite,1,1,"Gets the InetAddress of the site requesting authorization, or null if not available.",;java.net.Authenticator.getRequestingSite(),;1
getRequestingURL,1,1,Returns the URL that resulted in this request for authentication.,;java.net.Authenticator.getRequestingURL(),;1
getRequestorType,1,1,Returns whether the requestor is a Proxy or a Server.,;java.net.Authenticator.getRequestorType(),;1
getRequestProperties,1,1,Returns an unmodifiable Map of general request properties for this connection. The Map keys are Strings that represent the request-header field names. Each Map value is a unmodifiable List of Strings that represents the corresponding field values.,;java.net.URLConnection.getRequestProperties(),;1
getRequestProperty,1,1,Returns the value of the named general request property for this connection.,;java.net.URLConnection.getRequestProperty(String),;1
getRequestURI,1,1,Returns the part of the request's URI from the protocol name up to the query string in the first line of the HTTP request. Container doesn't decode this string.,;javax.xml.ws.spi.http.HttpExchange.getRequestURI(),;1
getReshowDelay,1,1,Returns the reshow delay property.,;javax.swing.ToolTipManager.getReshowDelay(),;1
getResizable,1,1,"Returns true if the user is allowed to resize the TableColumn's width, false otherwise. You can change the width programmatically regardless of this setting. The default is true.",;javax.swing.table.TableColumn.getResizable(),;1
getResizingAllowed,1,1,"Returns true if the user is allowed to resize columns by dragging between their headers, false otherwise. The default is true. You can resize columns programmatically regardless of this setting.",;javax.swing.table.JTableHeader.getResizingAllowed(),;1
getResizingColumn,1,1,Returns the resizing column. If no column is being resized this method returns null.,;javax.swing.table.JTableHeader.getResizingColumn(),;1
getResolvedObj,1,1,Retrieves the Object to which resolution was successful.,;javax.naming.spi.ResolveResult.getResolvedObj(),;1
getResolveParent,1,1,Gets the resolving parent. This is the set of attributes to resolve through if an attribute isn't defined locally. This is null if there are no other sets of attributes to resolve through.,;javax.swing.text.SimpleAttributeSet.getResolveParent(),;1
getResolverFields,1,1,"Gets the resolver fields to use during parsing. This returns the resolver fields, used during the second phase of parsing when fields are resolved into dates and times. By default, a formatter has no resolver fields, and thus returns null. See withResolverFields(Set) for more details.",;java.time.format.DateTimeFormatter.getResolverFields(),;1
getResolverStyle,1,1,"Gets the resolver style to use during parsing. This returns the resolver style, used during the second phase of parsing when fields are resolved into dates and times. By default, a formatter has the SMART resolver style. See withResolverStyle(ResolverStyle) for more details.",;java.time.format.DateTimeFormatter.getResolverStyle(),;1
getResourceBaseName,1,1,Returns the currently set base name for locating ResourceBundles.,;javax.imageio.metadata.IIOMetadataFormatImpl.getResourceBaseName(),;1
getResources,1,1,"Finds all the resources with the given name. A resource is some data (images, audio, text, etc) that can be accessed by class code in a way that is independent of the location of the code. The name of a resource is a /-separated path name that identifies the resource. The search order is described in the documentation for getResource(String).",;java.lang.ClassLoader.getResources(String),;1
getResponseBody,1,1,Returns a stream to which the response body must be written. setStatus(int)) must be called prior to calling this method. Multiple calls to this method (for the same exchange) will return the same stream.,;javax.xml.ws.spi.http.HttpExchange.getResponseBody(),;1
getResponseCode,1,1,"Gets the status code from an HTTP response message. For example, in the case of the following status lines: HTTP/1.0 200 OK HTTP/1.0 401 Unauthorized It will return 200 and 401 respectively. Returns -1 if no code can be discerned from the response (i.e., the response is not valid HTTP).",;java.net.HttpURLConnection.getResponseCode(),;1
getResponseControls,1,1,Description copied from interface:LdapContext,;javax.naming.ldap.InitialLdapContext.getResponseControls(),;1
getResponseHeaders,1,1,"Returns a mutable Map into which the HTTP response headers can be stored and which will be transmitted as part of this response. The keys in the Map will be the header names, while the values must be a List of Strings containing each value that should be included multiple times (in the order that they should be included). The keys in Map are case-insensitive.",;javax.xml.ws.spi.http.HttpExchange.getResponseHeaders(),;1
getResponseMessage,1,1,"Gets the HTTP response message, if any, returned along with the response code from a server. From responses like: HTTP/1.0 200 OK HTTP/1.0 404 Not Found Extracts the Strings ""OK"" and ""Not Found"" respectively. Returns null if none could be discerned from the responses (the result was not valid HTTP).",;java.net.HttpURLConnection.getResponseMessage(),;1
getResponses,1,1,"If addressing is enabled, this property determines whether endpoint requires the use of anonymous responses, or non-anonymous responses, or all responses.",;javax.xml.ws.soap.AddressingFeature.getResponses(),;1
getRestartMode,1,1,Returns the "restart" mode of the object associated with this activation descriptor.,;java.rmi.activation.ActivationDesc.getRestartMode(),;1
getResult,1,1,Gets the unmarshalled object created by the transformation.,;javax.xml.bind.util.JAXBResult.getResult(),;1
getResultCode,1,1,Retrieves the LDAP result code of the sort operation.,;javax.naming.ldap.SortResponseControl.getResultCode(),;1
getResultSize,1,1,Retrieves (an estimate of) the number of entries in the search result.,;javax.naming.ldap.PagedResultsResponseControl.getResultSize(),;1
getReturningAttributes,1,1,Retrieves the attributes that will be returned as part of the search. A value of null indicates that all attributes will be returned. An empty array indicates that no attributes are to be returned.,;javax.naming.directory.SearchControls.getReturningAttributes(),;1
getReturningObjFlag,1,1,Determines whether objects will be returned as part of the result.,;javax.naming.directory.SearchControls.getReturningObjFlag(),;1
getReturnOpenType,1,1,Returns the open type of the values returned by the operation described by this OpenMBeanOperationInfo instance.,;javax.management.openmbean.OpenMBeanOperationInfoSupport.getReturnOpenType(),;1
getRevocationDate,1,1,"Gets the revocation date from this X509CRLEntry, the revocationDate.",;java.security.cert.X509CRLEntry.getRevocationDate(),;1
getRevocationReason,1,1,"Returns the reason the certificate has been revoked, as specified in the Reason Code extension of this CRL entry.",;java.security.cert.X509CRLEntry.getRevocationReason(),;1
getRevokedCertificates,1,1,Gets all the entries from this CRL. This returns a Set of X509CRLEntry objects.,;java.security.cert.X509CRL.getRevokedCertificates(),;1
getRGBColorComponents,1,1,"Returns a float array containing only the color components of the Color, in the default sRGB color space. If compArray is null, an array of length 3 is created for the return value. Otherwise, compArray must have length 3 or greater, and it is filled in with the components and returned.",;java.awt.Color.getRGBColorComponents(float[]),;1
getRGBComponents,1,1,"Returns a float array containing the color and alpha components of the Color, as represented in the default sRGB color space. If compArray is null, an array of length 4 is created for the return value. Otherwise, compArray must have length 4 or greater, and it is filled in with the components and returned.",;java.awt.Color.getRGBComponents(float[]),;1
getRGBdefault,1,1,"Returns a DirectColorModel that describes the default format for integer RGB values used in many of the methods in the AWT image interfaces for the convenience of the programmer. The color space is the default ColorSpace, sRGB. The format for the RGB values is an integer with 8 bits each of alpha, red, green, and blue color components ordered correspondingly from the most significant byte to the least significant byte, as in: 0xAARRGGBB. Color components are not premultiplied by the alpha component. This format does not necessarily represent the native or the most efficient ColorModel for a particular device or for all images. It is merely used as a common color model format.",;java.awt.image.ColorModel.getRGBdefault(),;1
getRGBs,1,1,Converts data for each index from the color and alpha component arrays to an int in the default RGB ColorModel format and copies the resulting 32-bit ARGB values into the specified array. Only the initial entries of the array as specified by getMapSize are written.,;java.awt.image.IndexColorModel.getRGBs(int[]),;1
getRightComponent,1,1,Returns the component to the right (or below) the divider.,;javax.swing.JSplitPane.getRightComponent(),;1
getRightIndent,1,1,Gets the right indent setting.,;javax.swing.text.StyleConstants.getRightIndent(AttributeSet),;1
getRolesUnresolved,1,1,Retrieves list of roles unsuccessfully accessed.,;javax.management.relation.RoleResult.getRolesUnresolved(),;1
getRolloverBorder,1,1,Returns a rollover border for the button.,;javax.swing.plaf.basic.BasicToolBarUI.getRolloverBorder(AbstractButton),;1
getRolloverColumn,1,1,"Returns the index of the column header over which the mouse currently is. When the mouse is not over the table header, -1 is returned.",;javax.swing.plaf.basic.BasicTableHeaderUI.getRolloverColumn(),;1
getRolloverIcon,1,1,Returns the rollover icon for the button.,;javax.swing.AbstractButton.getRolloverIcon(),;1
getRolloverSelectedIcon,1,1,Returns the rollover selection icon for the button.,;javax.swing.AbstractButton.getRolloverSelectedIcon(),;1
getRolloverTab,1,1,"Returns the tab the mouse is currently over, or -1 if the mouse is no longer over any tab.",;javax.swing.plaf.basic.BasicTabbedPaneUI.getRolloverTab(),;1
getRootDirectories,1,1,"Returns an object to iterate over the paths of the root directories. A file system provides access to a file store that may be composed of a number of distinct file hierarchies, each with its own top-level root directory. Unless denied by the security manager, each element in the returned iterator corresponds to the root directory of a distinct file hierarchy. The order of the elements is not defined. The file hierarchies may change during the lifetime of the Java virtual machine. For example, in some implementations, the insertion of removable media may result in the creation of a new file hierarchy with its own top-level directory. When a security manager is installed, it is invoked to check access to the each root directory. If denied, the root directory is not returned by the iterator. In the case of the default provider, the SecurityManager.checkRead(String) method is invoked to check read access to each root directory. It is system dependent if the permission checks are done when the iterator is obtained or during iteration.",;java.nio.file.FileSystem.getRootDirectories(),;1
getRootElements,1,1,"Gets all root elements defined. Typically, there will only be one so the default implementation is to return the default root element.",;javax.swing.text.AbstractDocument.getRootElements(),;1
getRootFrame,1,1,Returns the Frame to use for the class methods in which a frame is not provided.,;javax.swing.JOptionPane.getRootFrame(),;1
getRootName,1,1,Description copied from interface:IIOMetadataFormat,;javax.imageio.metadata.IIOMetadataFormatImpl.getRootName(),;1
getRoots,1,1,"Returns all root partitions on this system. For example, on Windows, this would be the ""Desktop"" folder, while on DOS this would be the A: through Z: drives.",;javax.swing.filechooser.FileSystemView.getRoots(),;1
getRoundedCorners,1,1,Returns whether this border will be drawn with rounded corners.,;javax.swing.border.LineBorder.getRoundedCorners(),;1
getRounds,1,1,Returns the number of rounds.,;javax.crypto.spec.RC5ParameterSpec.getRounds(),;1
getRow,1,1,"Returns the row index where a dropped item should be placed in the table. Interpretation of the value depends on the return of isInsertRow(). If that method returns true this value indicates the index where a new row should be inserted. Otherwise, it represents the value of an existing row on which the data was dropped. This index is in terms of the view. -1 indicates that the drop occurred over empty space, and no row could be calculated.",;javax.swing.JTable.DropLocation.getRow(),;1
getRowBounds,1,1,Returns the Rectangle that the node at the specified row is drawn in.,;javax.swing.JTree.getRowBounds(int),;1
getRowEnd,1,1,Determines the ending row model position of the row that contains the specified model position. The component given must have a size to compute the result. If the component doesn't have a size a value of -1 will be returned.,";javax.swing.text.Utilities.getRowEnd(JTextComponent,int)",;1
getRowFilter,1,1,"Returns the filter that determines which rows, if any, should be hidden from view.",;javax.swing.DefaultRowSorter.getRowFilter(),;1
getRowForLocation,1,1,Returns the row for the specified location.,";javax.swing.JTree.getRowForLocation(int,int)",;1
getRowMapper,1,1,Returns the RowMapper instance that is able to map a TreePath to a row.,;javax.swing.tree.DefaultTreeSelectionModel.getRowMapper(),;1
getRowMargin,1,1,"Gets the amount of empty space, in pixels, between cells. Equivalent to: getIntercellSpacing().height.",;javax.swing.JTable.getRowMargin(),;1
getRowSelectionAllowed,1,1,Returns true if rows can be selected.,;javax.swing.JTable.getRowSelectionAllowed(),;1
getRowSetReader,1,1,"Returns a javax.sql.RowSetReader object, which can be used to populate a RowSet object with data.",;javax.sql.rowset.spi.SyncProvider.getRowSetReader(),;1
getRowSetWriter,1,1,"Returns a javax.sql.RowSetWriter object, which can be used to write a RowSet object's data back to the underlying data source.",;javax.sql.rowset.spi.SyncProvider.getRowSetWriter(),;1
getRowsForPaths,1,1,"Returns the rows that the TreePath instances in path are being displayed at. This method should return an array of the same length as that passed in, and if one of the TreePaths in path is not valid its entry in the array should be set to -1.",;javax.swing.tree.AbstractLayoutCache.getRowsForPaths(TreePath[]),;1
getRowSorter,1,1,Returns the object responsible for sorting.,;javax.swing.JTable.getRowSorter(),;1
getRowStart,1,1,Determines the starting row model position of the row that contains the specified model position. The component given must have a size to compute the result. If the component doesn't have a size a value of -1 will be returned.,";javax.swing.text.Utilities.getRowStart(JTextComponent,int)",;1
getRowType,1,1,Returns the type of the row elements of tabular data values described by this TabularType instance.,;javax.management.openmbean.TabularType.getRowType(),;1
getRSB,1,1,"Returns the right (bottom) side bearing of the glyph. This is the distance from the right (bottom) of the glyph bounds to the advance. If the bounds of the glyph is to the right of (below) the advance, the RSB is negative.",;java.awt.font.GlyphMetrics.getRSB(),;1
getRunCount,1,1,Return the number of level runs.,;java.text.Bidi.getRunCount(),;1
getRunLevel,1,1,Return the level of the nth logical run in this line.,;java.text.Bidi.getRunLevel(int),;1
getRunLimit,1,1,"Return the index of the character past the end of the nth logical run in this line, as an offset from the start of the line. For example, this will return the length of the line for the last run on the line.",;java.text.Bidi.getRunLimit(int),;1
getRunningThreadCount,1,1,Returns an estimate of the number of worker threads that are not blocked waiting to join tasks or for other managed synchronization. This method may overestimate the number of running threads.,;java.util.concurrent.ForkJoinPool.getRunningThreadCount(),;1
getRunStart,1,1,"Return the index of the character at the start of the nth logical run in this line, as an offset from the start of the line.",;java.text.Bidi.getRunStart(int),;1
getRuntime,1,1,Returns the runtime object associated with the current Java application. Most of the methods of class Runtime are instance methods and must be invoked with respect to the current runtime object.,;java.lang.Runtime.getRuntime(),;1
getRuntimeMXBean,1,1,Returns the managed bean for the runtime system of the Java virtual machine.,;java.lang.management.ManagementFactory.getRuntimeMXBean(),;1
getS,1,1,Returns the private value S.,;java.security.spec.ECPrivateKeySpec.getS(),;1
getSaltLength,1,1,Returns the salt length in bytes.,;java.security.spec.PSSParameterSpec.getSaltLength(),;1
getSampleModelTranslateX,1,1,"Returns the X translation from the coordinate system of the SampleModel to that of the Raster. To convert a pixel's X coordinate from the Raster coordinate system to the SampleModel coordinate system, this value must be subtracted.",;java.awt.image.Raster.getSampleModelTranslateX(),;1
getSampleModelTranslateY,1,1,"Returns the Y translation from the coordinate system of the SampleModel to that of the Raster. To convert a pixel's Y coordinate from the Raster coordinate system to the SampleModel coordinate system, this value must be subtracted.",;java.awt.image.Raster.getSampleModelTranslateY(),;1
getSampleRate,1,1,"Obtains the sample rate. For compressed formats, the return value is the sample rate of the uncompressed audio data. When this AudioFormat is used for queries (e.g. AudioSystem.isConversionSupported) or capabilities (e.g. DataLine.Info.getFormats), a sample rate of AudioSystem.NOT_SPECIFIED means that any sample rate is acceptable. AudioSystem.NOT_SPECIFIED is also returned when the sample rate is not defined for this audio format.",;javax.sound.sampled.AudioFormat.getSampleRate(),;1
getSampleSizeInBits,1,1,"Obtains the size of a sample. For compressed formats, the return value is the sample size of the uncompressed audio data. When this AudioFormat is used for queries (e.g. AudioSystem.isConversionSupported) or capabilities (e.g. DataLine.Info.getFormats), a sample size of AudioSystem.NOT_SPECIFIED means that any sample size is acceptable. AudioSystem.NOT_SPECIFIED is also returned when the sample size is not defined for this audio format.",;javax.sound.sampled.AudioFormat.getSampleSizeInBits(),;1
getSaslClientFactories,1,1,Gets an enumeration of known factories for producing SaslClient. This method uses the same algorithm for locating factories as createSaslClient().,;javax.security.sasl.Sasl.getSaslClientFactories(),;1
getSaslServerFactories,1,1,Gets an enumeration of known factories for producing SaslServer. This method uses the same algorithm for locating factories as createSaslServer().,;javax.security.sasl.Sasl.getSaslServerFactories(),;1
getScale,1,1,Retrieves the number of digits to the right of the decimal point for values stored in the designated column.,;javax.sql.rowset.RowSetMetaDataImpl.getScale(int),;1
getScaleFactors,1,1,"Returns the scale factors in the given array. The array is also returned for convenience. If scaleFactors is null, a new array will be allocated.",;java.awt.image.RescaleOp.getScaleFactors(float[]),;1
getScaleInstance,1,1,Returns a transform representing a scaling transformation. The matrix representing the returned transform is: [ sx 0 0 ] [ 0 sy 0 ] [ 0 0 1 ],";java.awt.geom.AffineTransform.getScaleInstance(double,double)",;1
getScaleX,1,1,Returns the X coordinate scaling element (m00) of the 3x3 affine transformation matrix.,;java.awt.geom.AffineTransform.getScaleX(),;1
getScaleY,1,1,Returns the Y coordinate scaling element (m11) of the 3x3 affine transformation matrix.,;java.awt.geom.AffineTransform.getScaleY(),;1
getSchemaLocation,1,1,Convenience method for getting the current schemaLocation.,;javax.xml.bind.helpers.AbstractMarshallerImpl.getSchemaLocation(),;1
getSchemaName,1,1,Retrieves the schema name of the table from which the value in the designated column was derived.,;javax.sql.rowset.RowSetMetaDataImpl.getSchemaName(int),;1
getSchemaTypeInfo,1,1,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.,;javax.imageio.metadata.IIOMetadataNode.getSchemaTypeInfo(),;1
getSchemeSpecificPart,1,1,Returns the decoded scheme-specific part of this URI. The string returned by this method is equal to that returned by the getRawSchemeSpecificPart method except that all sequences of escaped octets are decoded.,;java.net.URI.getSchemeSpecificPart(),;1
getScopedInterface,1,1,"Returns the scoped interface, if this instance was created with with a scoped interface.",;java.net.Inet6Address.getScopedInterface(),;1
getScopeId,1,1,"Returns the numeric scopeId, if this instance is associated with an interface. If no scoped_id is set, the returned value is zero.",;java.net.Inet6Address.getScopeId(),;1
getScopes,1,1,Returns immutable List of all the valid values for scope in the ScriptContext.,;javax.script.SimpleScriptContext.getScopes(),;1
getScreenDevices,1,1,Returns an array of all of the screen GraphicsDevice objects.,;java.awt.GraphicsEnvironment.getScreenDevices(),;1
getScreenInsets,1,1,Gets the insets of the screen.,;java.awt.Toolkit.getScreenInsets(GraphicsConfiguration),;1
getScreenResolution,1,1,Returns the screen resolution in dots-per-inch.,;java.awt.Toolkit.getScreenResolution(),;1
getScreenSize,1,1,"Gets the size of the screen. On systems with multiple displays, the primary display is used. Multi-screen aware display dimensions are available from GraphicsConfiguration and GraphicsDevice.",;java.awt.Toolkit.getScreenSize(),;1
getScript,1,1,"Returns the script for this locale, which should either be the empty string or an ISO 15924 4-letter script code. The first letter is uppercase and the rest are lowercase, for example, 'Latn', 'Cyrl'.",;java.util.Locale.getScript(),;1
getScrollAmount,1,1,Returns the number of units that should be scrolled per click of mouse wheel rotation. Only valid if getScrollType returns MouseWheelEvent.WHEEL_UNIT_SCROLL,;java.awt.event.MouseWheelEvent.getScrollAmount(),;1
getScrollbarDisplayPolicy,1,1,Returns the display policy for the scrollbars.,;java.awt.ScrollPane.getScrollbarDisplayPolicy(),;1
getScrollbarVisibility,1,1,Returns an enumerated value that indicates which scroll bars the text area uses. The TextArea class defines four integer constants that are used to specify which scroll bars are available. TextArea has one constructor that gives the application discretion over scroll bars.,;java.awt.TextArea.getScrollbarVisibility(),;1
getScrollMode,1,1,Returns the current scrolling mode.,;javax.swing.JViewport.getScrollMode(),;1
getScrollOffset,1,1,"Gets the scroll offset, in pixels.",;javax.swing.JTextField.getScrollOffset(),;1
getScrollPosition,1,1,"Returns the current x,y position within the child which is displayed at the 0,0 location of the scrolled panel's view port. This is a convenience method which interfaces with the adjustable objects which represent the state of the scrollbars.",;java.awt.ScrollPane.getScrollPosition(),;1
getScrollsOnExpand,1,1,Returns the value of the scrollsOnExpand property.,;javax.swing.JTree.getScrollsOnExpand(),;1
getSearchScope,1,1,"Retrieves the search scope of these SearchControls. One of OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE.",;javax.naming.directory.SearchControls.getSearchScope(),;1
getSecretKey,1,1,Gets the SecretKey from this entry.,;java.security.KeyStore.SecretKeyEntry.getSecretKey(),;1
getSecure,1,1,"Returns true if sending this cookie should be restricted to a secure protocol, or false if the it can be sent using any protocol.",;java.net.HttpCookie.getSecure(),;1
getSecurityManager,1,1,Gets the system security interface.,;java.lang.System.getSecurityManager(),;1
getSeedLength,1,1,Returns the desired length of the domain parameter seed in bits.,;java.security.spec.DSAGenParameterSpec.getSeedLength(),;1
getSelectedCheckbox,1,1,"Gets the current choice from this check box group. The current choice is the check box in this group that is currently in the ""on"" state, or null if all check boxes in the group are off.",;java.awt.CheckboxGroup.getSelectedCheckbox(),;1
getSelectedColor,1,1,Returns the selected Color which should be non-null.,;javax.swing.colorchooser.DefaultColorSelectionModel.getSelectedColor(),;1
getSelectedColumn,1,1,"Returns the index of the first selected column, -1 if no column is selected.",;javax.swing.JTable.getSelectedColumn(),;1
getSelectedComponent,1,1,Returns the currently selected component for this tabbedpane. Returns null if there is no currently selected tab.,;javax.swing.JTabbedPane.getSelectedComponent(),;1
getSelectedFile,1,1,"Returns the selected file. This can be set either by the programmer via setSelectedFile or by a user action, such as either typing the filename into the UI or selecting the file from a list in the UI.",;javax.swing.JFileChooser.getSelectedFile(),;1
getSelectedFiles,1,1,Returns a list of selected files if the file chooser is set to allow multiple selection.,;javax.swing.JFileChooser.getSelectedFiles(),;1
getSelectedFrame,1,1,"Returns the currently active JInternalFrame in this JDesktopPane, or null if no JInternalFrame is currently active.",;javax.swing.JDesktopPane.getSelectedFrame(),;1
getSelectedIcon,1,1,Returns the selected icon for the button.,;javax.swing.AbstractButton.getSelectedIcon(),;1
getSelectedIndices,1,1,"Returns an array of all of the selected indices, in increasing order.",;javax.swing.JList.getSelectedIndices(),;1
getSelectedItems,1,1,Gets the selected items on this scrolling list.,;java.awt.List.getSelectedItems(),;1
getSelectedPath,1,1,Returns the path to the currently selected menu item,;javax.swing.MenuSelectionManager.getSelectedPath(),;1
getSelectedRow,1,1,"Returns the index of the first selected row, -1 if no row is selected.",;javax.swing.JTable.getSelectedRow(),;1
getSelectedRowCount,1,1,Returns the number of selected rows.,;javax.swing.JTable.getSelectedRowCount(),;1
getSelectedRows,1,1,Returns the indices of all selected rows.,;javax.swing.JTable.getSelectedRows(),;1
getSelectedTextColor,1,1,Fetches the current color used to render the selected text.,;javax.swing.text.JTextComponent.getSelectedTextColor(),;1
getSelectedValue,1,1,"Returns the value for the smallest selected cell index; the selected value when only a single item is selected in the list. When multiple items are selected, it is simply the value for the smallest selected index. Returns null if there is no selection. This is a convenience method that simply returns the model value for getMinSelectionIndex.",;javax.swing.JList.getSelectedValue(),;1
getSelectedValues,1,1,"Deprecated.As of JDK 1.7, replaced by getSelectedValuesList()",;javax.swing.JList.getSelectedValues(),;1
getSelectedValuesList,1,1,"Returns a list of all the selected items, in increasing order based on their indices in the list.",;javax.swing.JList.getSelectedValuesList(),;1
getSelection,1,1,Returns the model of the selected button.,;javax.swing.ButtonGroup.getSelection(),;1
getSelectionColor,1,1,Fetches the current color used to render the selection.,;javax.swing.text.JTextComponent.getSelectionColor(),;1
getSelectionPainter,1,1,Gets the painter for the Highlighter.,;javax.swing.text.DefaultCaret.getSelectionPainter(),;1
getSelectionValues,1,1,Returns the input selection values.,;javax.swing.JOptionPane.getSelectionValues(),;1
getSendPastNotifications,1,1,Gets the flag indicating whether or not the timer sends past notifications. The default value of the past notifications sending on/off flag is false.,;javax.management.timer.Timer.getSendPastNotifications(),;1
getSeparator,1,1,"Returns the name separator, represented as a string. The name separator is used to separate names in a path string. An implementation may support multiple name separators in which case this method returns an implementation specific default name separator. This separator is used when creating path strings by invoking the toString() method. In the case of the default provider, this method returns the same separator as File.separator.",;java.nio.file.FileSystem.getSeparator(),;1
getSeparatorSize,1,1,Returns the size of the separator,;javax.swing.JToolBar.Separator.getSeparatorSize(),;1
getSerializedObject,1,1,Gets the value of the OBJECT attribute of the MLET tag.,;javax.management.loading.MLetContent.getSerializedObject(),;1
getSerialVersionUID,1,1,Return the serialVersionUID for this class. The serialVersionUID defines a set of classes all with the same name that have evolved from a common root class and agree to be serialized and deserialized using a common format. NonSerializable classes have a serialVersionUID of 0L.,;java.io.ObjectStreamClass.getSerialVersionUID(),;1
getServer,1,1,Returns the service principal associated with this ticket.,;javax.security.auth.kerberos.KerberosTicket.getServer(),;1
getServerCertificateChain,1,1,"Returns the server's certificate chain, which was established as part of defining the session in the original connection that retrieved the network resource, from cache. Note: This method can be used only when using certificate-based cipher suites; using it with non-certificate-based cipher suites, such as Kerberos, will throw an SSLPeerUnverifiedException.",;java.net.SecureCacheResponse.getServerCertificateChain(),;1
getServerCertificates,1,1,"Returns the server's certificate chain which was established as part of defining the session. Note: This method can be used only when using certificate-based cipher suites; using it with non-certificate-based cipher suites, such as Kerberos, will throw an SSLPeerUnverifiedException.",;javax.net.ssl.HttpsURLConnection.getServerCertificates(),;1
getServerName,1,1,Returns the DNS name of the LDAP server.,;java.security.cert.LDAPCertStoreParameters.getServerName(),;1
getServerNames,1,1,"Returns a List containing all SNIServerNames of the Server Name Indication (SNI) parameter, or null if none has been set. This method is only useful to SSLSockets or SSLEngines operating in client mode. For SSL/TLS connections, the underlying SSL/TLS provider may specify a default value for a certain server name type. In client mode, it is recommended that, by default, providers should include the server name indication whenever the server can be located by a supported server name type. It is recommended that providers initialize default Server Name Indications when creating SSLSocket/SSLEngines. In the following examples, the server name could be represented by an instance of SNIHostName which has been initialized with the hostname ""www.example.com"" and type StandardConstants.SNI_HOST_NAME. Socket socket = sslSocketFactory.createSocket(""www.example.com"", 443); or SSLEngine engine = sslContext.createSSLEngine(""www.example.com"", 443);",;javax.net.ssl.SSLParameters.getServerNames(),;1
getServerSessionContext,1,1,"Returns the server session context, which represents the set of SSL sessions available for use during the handshake phase of server-side SSL sockets. This context may be unavailable in some environments, in which case this method returns null. For example, when the underlying SSL provider does not provide an implementation of SSLSessionContext interface, this method returns null. A non-null session context is returned otherwise.",;javax.net.ssl.SSLContext.getServerSessionContext(),;1
getServerSocketFactory,1,1,Returns a ServerSocketFactory object for this context.,;javax.net.ssl.SSLContext.getServerSocketFactory(),;1
getServiceProvider,1,1,Returns the service provider.,;java.beans.beancontext.BeanContextServicesSupport.BCSSServiceProvider.getServiceProvider(),;1
getServiceProviderByClass,1,1,"Returns the currently registered service provider object that is of the given class type. At most one object of a given class is allowed to be registered at any given time. If no registered object has the desired class type, null is returned.",;javax.imageio.spi.ServiceRegistry.getServiceProviderByClass(Class&lt;T&gt;),;1
getServices,1,1,Get an unmodifiable Set of all services supported by this Provider.,;java.security.Provider.getServices(),;1
getSessionKey,1,1,Returns the session key associated with this ticket.,;javax.security.auth.kerberos.KerberosTicket.getSessionKey(),;1
getSessionKeyType,1,1,Returns the key type of the session key associated with this ticket as defined by the Kerberos Protocol Specification.,;javax.security.auth.kerberos.KerberosTicket.getSessionKeyType(),;1
getSeverity,1,1,Description copied from interface:ValidationEvent,;javax.xml.bind.helpers.ValidationEventImpl.getSeverity(),;1
getShape,1,1,"Returns the shape of the window. The value returned by this method may not be the same as previously set with setShape(shape), but it is guaranteed to represent the same shape.",;java.awt.Window.getShape(),;1
getSharedAncestor,1,1,"Returns the nearest common ancestor to this node and aNode. Returns null, if no such ancestor exists -- if this node and aNode are in different trees or if aNode is null. A node is considered an ancestor of itself.",;javax.swing.tree.DefaultMutableTreeNode.getSharedAncestor(DefaultMutableTreeNode),;1
getSharedInstance,1,1,Returns the shared PopupFactory which can be used to obtain Popups.,;javax.swing.PopupFactory.getSharedInstance(),;1
getShearInstance,1,1,Returns a transform representing a shearing transformation. The matrix representing the returned transform is: [ 1 shx 0 ] [ shy 1 0 ] [ 0 0 1 ],";java.awt.geom.AffineTransform.getShearInstance(double,double)",;1
getShearX,1,1,Returns the X coordinate shearing element (m01) of the 3x3 affine transformation matrix.,;java.awt.geom.AffineTransform.getShearX(),;1
getShearY,1,1,Returns the Y coordinate shearing element (m10) of the 3x3 affine transformation matrix.,;java.awt.geom.AffineTransform.getShearY(),;1
getShortcut,1,1,"Get the MenuShortcut object associated with this menu item,",;java.awt.MenuItem.getShortcut(),;1
getShortcutMenuItem,1,1,"Gets the instance of MenuItem associated with the specified MenuShortcut object, or null if none of the menu items being managed by this menu bar is associated with the specified menu shortcut.",;java.awt.MenuBar.getShortcutMenuItem(MenuShortcut),;1
getShortDescription,1,1,Gets the short description of this feature.,;java.beans.FeatureDescriptor.getShortDescription(),;1
getShortMonths,1,1,"Gets short month strings. For example: ""Jan"", ""Feb"", etc. If the language requires different forms for formatting and stand-alone usages, This method returns short month names in the formatting form. For example, the preferred abbreviation for January in the Catalan language is de gen. in the formatting form, while it is gen. in the stand-alone form. This method returns ""de gen."" in this case. Refer to the Calendar Elements in the Unicode Locale Data Markup Language (LDML) specification for more details.",;java.text.DateFormatSymbols.getShortMonths(),;1
getShortParameter,1,1,A convenience method to return a parameter as a short. An exception is thrown if the parameter is null or not a Short.,;java.awt.image.renderable.ParameterBlock.getShortParameter(int),;1
getShortWeekdays,1,1,"Gets short weekday strings. For example: ""Sun"", ""Mon"", etc.",;java.text.DateFormatSymbols.getShortWeekdays(),;1
getShowDeleted,1,1,"Retrieves a boolean indicating whether rows marked for deletion appear in the set of current rows. The default value is false. Note: Allowing deleted rows to remain visible complicates the behavior of some of the methods. However, most RowSet object users can simply ignore this extra detail because only sophisticated applications will likely want to take advantage of this feature.",;javax.sql.rowset.BaseRowSet.getShowDeleted(),;1
getShowHorizontalLines,1,1,"Returns true if the table draws horizontal lines between cells, false if it doesn't. The default value is look and feel dependent.",;javax.swing.JTable.getShowHorizontalLines(),;1
getShowsRootHandles,1,1,Returns the value of the showsRootHandles property.,;javax.swing.JTree.getShowsRootHandles(),;1
getShowVerticalLines,1,1,"Returns true if the table draws vertical lines between cells, false if it doesn't. The default value is look and feel dependent.",;javax.swing.JTable.getShowVerticalLines(),;1
getSiblingCount,1,1,"Returns the number of siblings of this node. A node is its own sibling (if it has no parent or no siblings, this method returns 1).",;javax.swing.tree.DefaultMutableTreeNode.getSiblingCount(),;1
getSides,1,1,"Returns how consecutive pages should be imposed upon the sides of the print medium for jobs using these attributes. SidesType.ONE_SIDED imposes each consecutive page upon the same side of consecutive media sheets. This imposition is sometimes called simplex. SidesType.TWO_SIDED_LONG_EDGE imposes each consecutive pair of pages upon front and back sides of consecutive media sheets, such that the orientation of each pair of pages on the medium would be correct for the reader as if for binding on the long edge. This imposition is sometimes called duplex. SidesType.TWO_SIDED_SHORT_EDGE imposes each consecutive pair of pages upon front and back sides of consecutive media sheets, such that the orientation of each pair of pages on the medium would be correct for the reader as if for binding on the short edge. This imposition is sometimes called tumble. This attribute is updated to the value chosen by the user.",;java.awt.JobAttributes.getSides(),;1
getSign,1,1,"Returns the sign of this duration in -1,0, or 1.",;javax.xml.datatype.Duration.getSign(),;1
getSigners,1,1,Gets the signers of this class.,;java.lang.Class.getSigners(),;1
getSigProvider,1,1,"Returns the signature provider's name, or null if not set.",;java.security.cert.PKIXParameters.getSigProvider(),;1
getSimpleName,1,1,Returns the simple name of the underlying class as given in the source code. Returns an empty string if the underlying class is anonymous. The simple name of an array is the simple name of the component type with "[]" appended. In particular the simple name of an array whose component type is anonymous is "[]".,;java.lang.Class.getSimpleName(),;1
getSize2D,1,1,Returns the point size of this Font in float value.,;java.awt.Font.getSize2D(),;1
getSizeForComponent,1,1,Returns the size a component would have if used as a cell renderer.,;javax.swing.plaf.basic.BasicComboBoxUI.getSizeForComponent(Component),;1
getSizes,1,1,Returns the size of all entries.,;javax.swing.SizeSequence.getSizes(),;1
getSmallDisplayIcon,1,1,Returns the small display icon for the panel.,;javax.swing.colorchooser.AbstractColorChooserPanel.getSmallDisplayIcon(),;1
getSmallestMaximum,1,1,"Gets the smallest possible maximum value that the field can take. For example, the ISO day-of-month runs to between 28 and 31 days. The smallest maximum is therefore 28.",;java.time.temporal.ValueRange.getSmallestMaximum(),;1
getSnapshot,1,1,Returns a static snapshot image of this object. The BufferedImage returned is only current with the VolatileImage at the time of the request and will not be updated with any future changes to the VolatileImage.,;java.awt.image.VolatileImage.getSnapshot(),;1
getSnapToTicks,1,1,Returns true if the knob (and the data value it represents) resolve to the closest tick mark next to where the user positioned the knob.,;javax.swing.JSlider.getSnapToTicks(),;1
getSNIMatchers,1,1,"Returns a Collection containing all SNIMatchers of the Server Name Indication (SNI) parameter, or null if none has been set. This method is only useful to SSLSockets or SSLEngines operating in server mode. For better interoperability, providers generally will not define default matchers so that by default servers will ignore the SNI extension and continue the handshake.",;javax.net.ssl.SSLParameters.getSNIMatchers(),;1
getSOAPBody,1,1,Gets the SOAP Body contained in this SOAPMessage object.,;javax.xml.soap.SOAPMessage.getSOAPBody(),;1
getSOAPHeader,1,1,Gets the SOAP Header contained in this SOAPMessage object.,;javax.xml.soap.SOAPMessage.getSOAPHeader(),;1
getSOAPPart,1,1,"Gets the SOAP part of this SOAPMessage object. SOAPMessage object contains one or more attachments, the SOAP Part must be the first MIME body part in the message.",;javax.xml.soap.SOAPMessage.getSOAPPart(),;1
getSocket,1,1,"Returns the socket which is the source of this event. (This is a convenience function, to let applications write code without type casts.)",;javax.net.ssl.HandshakeCompletedEvent.getSocket(),;1
getSocketAddress,1,1,Gets the SocketAddress (usually IP address + port number) of the remote host that this packet is being sent to or is coming from.,;java.net.DatagramPacket.getSocketAddress(),;1
getSoftFailExceptions,1,1,Returns a list containing the exceptions that are ignored by the revocation checker when the SOFT_FAIL option is set. The list is cleared each time init is called. The list is ordered in ascending order according to the certificate index returned by getIndex method of each entry. An implementation of PKIXRevocationChecker is responsible for adding the ignored exceptions to the list.,;java.security.cert.PKIXRevocationChecker.getSoftFailExceptions(),;1
getSoLinger,1,1,Returns setting for SO_LINGER. -1 returns implies that the option is disabled. The setting only affects socket close.,;java.net.Socket.getSoLinger(),;1
getSortOrder,1,1,Returns the sort order of the column.,;javax.swing.RowSorter.SortKey.getSortOrder(),;1
getSortsOnUpdates,1,1,"Returns true if a sort should happen when the underlying model is updated; otherwise, returns false.",;javax.swing.DefaultRowSorter.getSortsOnUpdates(),;1
getSourceAsDragGestureRecognizer,1,1,Returns the source as a DragGestureRecognizer.,;java.awt.dnd.DragGestureEvent.getSourceAsDragGestureRecognizer(),;1
getSourceBands,1,1,"Returns the set of of source bands to be used. The returned value is that set by the most recent call to setSourceBands, or null if there have been no calls to setSourceBands. Semantically, the array returned is a copy; changes to array contents subsequent to this call have no effect on this IIOParam.",;javax.imageio.IIOParam.getSourceBands(),;1
getSourceClassName,1,1,"Get the name of the class that (allegedly) issued the logging request. Note that this sourceClassName is not verified and may be spoofed. This information may either have been provided as part of the logging call, or it may have been inferred automatically by the logging framework. In the latter case, the information may only be approximate and may in fact describe an earlier call on the stack frame. May be null if no information could be obtained.",;java.util.logging.LogRecord.getSourceClassName(),;1
getSourceDropActions,1,1,"Returns the drag source's supported drop actions, when this TransferSupport represents a drop. The source actions represent the set of actions supported by the source of this transfer, and are represented as some bitwise-OR combination of COPY, MOVE and LINK. You may wish to query this in TransferHandler's canImport method when determining the suitability of a drop or when deciding on a drop action to explicitly choose. To determine if a particular action is supported by the source, bitwise-AND the action with the source drop actions, and then compare the result against the original action. For example: boolean copySupported = (COPY &amp; getSourceDropActions()) == COPY; This method is only for use with drag and drop transfers. Calling it when isDrop() is false results in an IllegalStateException.",;javax.swing.TransferHandler.TransferSupport.getSourceDropActions(),;1
getSourceElement,1,1,"Returns the Element that corresponds to the source of the event. This will typically be an Element representing an anchor. If a constructor that is used that does not specify a source Element, or null was specified as the source Element, this will return null.",;javax.swing.event.HyperlinkEvent.getSourceElement(),;1
getSourceEncodings,1,1,Obtains the set of source format encodings from which format conversion services are provided by this provider.,;javax.sound.sampled.spi.FormatConversionProvider.getSourceEncodings(),;1
getSourceLineInfo,1,1,Obtains information about all source lines of a particular type that are supported by the installed mixers.,;javax.sound.sampled.AudioSystem.getSourceLineInfo(Line.Info),;1
getSourceMaxProgressivePass,1,1,"If getSourceNumProgressivePasses is equal to Integer.MAX_VALUE, returns Integer.MAX_VALUE. Otherwise, returns getSourceMinProgressivePass() + getSourceNumProgressivePasses() - 1.",;javax.imageio.ImageReadParam.getSourceMaxProgressivePass(),;1
getSourceMethodName,1,1,"Get the name of the method that (allegedly) issued the logging request. Note that this sourceMethodName is not verified and may be spoofed. This information may either have been provided as part of the logging call, or it may have been inferred automatically by the logging framework. In the latter case, the information may only be approximate and may in fact describe an earlier call on the stack frame. May be null if no information could be obtained.",;java.util.logging.LogRecord.getSourceMethodName(),;1
getSourceMinProgressivePass,1,1,"Returns the index of the first progressive pass that will be decoded. If no value has been set, 0 will be returned (which is the correct value).",;javax.imageio.ImageReadParam.getSourceMinProgressivePass(),;1
getSourceNumProgressivePasses,1,1,"Returns the number of the progressive passes that will be decoded. If no value has been set, Integer.MAX_VALUE will be returned (which is the correct value).",;javax.imageio.ImageReadParam.getSourceNumProgressivePasses(),;1
getSourceRenderSize,1,1,"Returns the width and height of the source image as it will be rendered during decoding, if they have been set via the setSourceRenderSize method. A nullvalue indicates that no setting has been made.",;javax.imageio.ImageReadParam.getSourceRenderSize(),;1
getSourceString,1,1,Returns the String that this CollationKey represents.,;java.text.CollationKey.getSourceString(),;1
getSourceXSubsampling,1,1,"Returns the number of source columns to advance for each pixel. If setSourceSubsampling has not been called, 1 is returned (which is the correct value).",;javax.imageio.IIOParam.getSourceXSubsampling(),;1
getSourceYSubsampling,1,1,"Returns the number of rows to advance for each pixel. If setSourceSubsampling has not been called, 1 is returned (which is the correct value).",;javax.imageio.IIOParam.getSourceYSubsampling(),;1
getSpaceAbove,1,1,Gets the space above setting.,;javax.swing.text.StyleConstants.getSpaceAbove(AttributeSet),;1
getSpaceBelow,1,1,Gets the space below setting.,;javax.swing.text.StyleConstants.getSpaceBelow(AttributeSet),;1
getSpecificationName,1,1,Returns the full name of the JMX specification implemented by this product.,;javax.management.MBeanServerDelegate.getSpecificationName(),;1
getSpecificationTitle,1,1,Return the title of the specification that this package implements.,;java.lang.Package.getSpecificationTitle(),;1
getSpi,1,1,"Return the value associated with the specified key at this preference node, or null if there is no association for this key, or the association cannot be determined at this time. It is guaranteed that key is non-null. Also, it is guaranteed that this node has not been removed. (The implementor needn't check for either of these things.) Generally speaking, this method should not throw an exception under any circumstances. If, however, if it does throw an exception, the exception will be intercepted and treated as a null return value. This method is invoked with the lock on this node held.",;java.util.prefs.AbstractPreferences.getSpi(String),;1
getSpinner,1,1,Returns the JSpinner ancestor of this editor or null if none of the ancestors are a JSpinner. Typically the editor's parent is a JSpinner however subclasses of JSpinner may override the the createEditor method and insert one or more containers between the JSpinner and it's editor.,;javax.swing.JSpinner.DefaultEditor.getSpinner(),;1
getSplashScreen,1,1,Returns the SplashScreen object used for Java startup splash screen control on systems that support display.,;java.awt.SplashScreen.getSplashScreen(),;1
getSplitPane,1,1,Returns the splitpane this instance is currently contained in.,;javax.swing.plaf.basic.BasicSplitPaneUI.getSplitPane(),;1
getSplitPaneDividerBorder,1,1,Returns a border instance for a JSplitPane divider,;javax.swing.plaf.basic.BasicBorders.getSplitPaneDividerBorder(),;1
getSQLTypeName,1,1,Retrieves the SQL type name for this SerialStruct object. This is the name used in the SQL definition of the structured type,;javax.sql.rowset.serial.SerialStruct.getSQLTypeName(),;1
getSSLSocketFactory,1,1,Gets the SSL socket factory to be used when creating sockets for secure https URL connections.,;javax.net.ssl.HttpsURLConnection.getSSLSocketFactory(),;1
getStamp,1,1,Returns the current value of the stamp.,;java.util.concurrent.atomic.AtomicStampedReference.getStamp(),;1
getStandardChromaNode,1,1,"Returns an IIOMetadataNode representing the chroma information of the standard javax_imageio_1.0 metadata format, or null if no such information is available. This method is intended to be called by the utility routine getStandardTree. The default implementation returns null. Subclasses should override this method to produce an appropriate subtree if they wish to support the standard metadata format.",;javax.imageio.metadata.IIOMetadata.getStandardChromaNode(),;1
getStandardCompressionNode,1,1,"Returns an IIOMetadataNode representing the compression information of the standard javax_imageio_1.0 metadata format, or null if no such information is available. This method is intended to be called by the utility routine getStandardTree. The default implementation returns null. Subclasses should override this method to produce an appropriate subtree if they wish to support the standard metadata format.",;javax.imageio.metadata.IIOMetadata.getStandardCompressionNode(),;1
getStandardDataNode,1,1,"Returns an IIOMetadataNode representing the data format information of the standard javax_imageio_1.0 metadata format, or null if no such information is available. This method is intended to be called by the utility routine getStandardTree. The default implementation returns null. Subclasses should override this method to produce an appropriate subtree if they wish to support the standard metadata format.",;javax.imageio.metadata.IIOMetadata.getStandardDataNode(),;1
getStandardDimensionNode,1,1,"Returns an IIOMetadataNode representing the dimension information of the standard javax_imageio_1.0 metadata format, or null if no such information is available. This method is intended to be called by the utility routine getStandardTree. The default implementation returns null. Subclasses should override this method to produce an appropriate subtree if they wish to support the standard metadata format.",;javax.imageio.metadata.IIOMetadata.getStandardDimensionNode(),;1
getStandardDocumentNode,1,1,"Returns an IIOMetadataNode representing the document information of the standard javax_imageio_1.0 metadata format, or null if no such information is available. This method is intended to be called by the utility routine getStandardTree. The default implementation returns null. Subclasses should override this method to produce an appropriate subtree if they wish to support the standard metadata format.",;javax.imageio.metadata.IIOMetadata.getStandardDocumentNode(),;1
getStandardFormatInstance,1,1,"Returns an IIOMetadataFormat object describing the standard, plug-in neutral javax.imageio_1.0 metadata document format described in the comment of the javax.imageio.metadata package.",;javax.imageio.metadata.IIOMetadataFormatImpl.getStandardFormatInstance(),;1
getStandardTextNode,1,1,"Returns an IIOMetadataNode representing the textual information of the standard javax_imageio_1.0 metadata format, or null if no such information is available. This method is intended to be called by the utility routine getStandardTree. The default implementation returns null. Subclasses should override this method to produce an appropriate subtree if they wish to support the standard metadata format.",;javax.imageio.metadata.IIOMetadata.getStandardTextNode(),;1
getStandardTileNode,1,1,"Returns an IIOMetadataNode representing the tiling information of the standard javax_imageio_1.0 metadata format, or null if no such information is available. This method is intended to be called by the utility routine getStandardTree. The default implementation returns null. Subclasses should override this method to produce an appropriate subtree if they wish to support the standard metadata format.",;javax.imageio.metadata.IIOMetadata.getStandardTileNode(),;1
getStandardTransparencyNode,1,1,"Returns an IIOMetadataNode representing the transparency information of the standard javax_imageio_1.0 metadata format, or null if no such information is available. This method is intended to be called by the utility routine getStandardTree. The default implementation returns null. Subclasses should override this method to produce an appropriate subtree if they wish to support the standard metadata format.",;javax.imageio.metadata.IIOMetadata.getStandardTransparencyNode(),;1
getStandardTree,1,1,"A utility method to return a tree of IIOMetadataNodes representing the metadata contained within this object according to the conventions of the standard javax_imageio_1.0 metadata format. This method calls the various getStandard*Node methods to supply each of the subtrees rooted at the children of the root node. If any of those methods returns null, the corresponding subtree will be omitted. If all of them return null, a tree consisting of a single root node will be returned.",;javax.imageio.metadata.IIOMetadata.getStandardTree(),;1
getStart,1,1,Returns the first Date in the sequence.,;javax.swing.SpinnerDateModel.getStart(),;1
getStartIndex,1,1,Gets the index with the hypertext document at which this link begins,;javax.accessibility.AccessibleHyperlink.getStartIndex(),;1
getStartPosition,1,1,Returns a position that represents the start of the document. The position returned can be counted on to track change and stay located at the beginning of the document.,;javax.swing.text.AbstractDocument.getStartPosition(),;1
getStartTime,1,1,Returns the start time for this ticket's validity period.,;javax.security.auth.kerberos.KerberosTicket.getStartTime(),;1
getStateChange,1,1,Returns the type of state change (selected or deselected).,;java.awt.event.ItemEvent.getStateChange(),;1
getStateLabel,1,1,Obtains the label for the specified state.,;javax.sound.sampled.BooleanControl.getStateLabel(boolean),;1
getStatement,1,1,Returns the PreparedStatement that is being closed or is invalid,;javax.sql.StatementEvent.getStatement(),;1
getStateToBind,1,1,"Retrieves the state of an object for binding. Service providers that implement the DirContext interface should use DirectoryManager.getStateToBind(), not this method. Service providers that implement only the Context interface should use this method. This method uses the specified state factories in the Context.STATE_FACTORIES property from the environment properties, and from the provider resource file associated with nameCtx, in that order. The value of this property is a colon-separated list of factory class names that are tried in order, and the first one that succeeds in returning the object's state is the one used. If no object's state can be retrieved in this way, return the object itself. If an exception is encountered while retrieving the state, the exception is passed up to the caller. Note that a state factory (an object that implements the StateFactory interface) must be public and must have a public constructor that accepts no arguments. The name and nameCtx parameters may optionally be used to specify the name of the object being created. See the description of ""Name and Context Parameters"" in ObjectFactory.getObjectInstance() for details. This method may return a Referenceable object. The service provider obtaining this object may choose to store it directly, or to extract its reference (using Referenceable.getReference()) and store that instead.",";javax.naming.spi.NamingManager.getStateToBind(Object,Name,Context,Hashtable&lt;?,?&gt;)",;1
getStaticAttribute,1,1,Returns the object previously registered with registerStaticAttributeKey.,;javax.swing.text.StyleContext.getStaticAttribute(Object),;1
getStaticAttributeKey,1,1,Returns the String that key will be registered with,;javax.swing.text.StyleContext.getStaticAttributeKey(Object),;1
getStealCount,1,1,"Returns an estimate of the total number of tasks stolen from one thread's work queue by another. The reported value underestimates the actual total number of steals when the pool is not quiescent. This value may be useful for monitoring and tuning fork/join programs: in general, steal counts should be high enough to keep threads busy, but low enough to avoid overhead and contention across threads.",;java.util.concurrent.ForkJoinPool.getStealCount(),;1
getStepSize,1,1,Returns the size of the value change computed by the getNextValue and getPreviousValue methods.,;javax.swing.SpinnerNumberModel.getStepSize(),;1
getStream,1,1,"Fetches a stream for the given URL, which is about to be loaded by the setPage method. By default, this simply opens the URL and returns the stream. This can be reimplemented to do useful things like fetch the stream from a cache, monitor the progress of the stream, etc. This method is expected to have the the side effect of establishing the content type, and therefore setting the appropriate EditorKit to use for loading the stream. If this the stream was an http connection, redirects will be followed and the resulting URL will be set as the Document.StreamDescriptionProperty so that relative URL's can be properly resolved.",;javax.swing.JEditorPane.getStream(URL),;1
getStreamMetadataFormat,1,1,"Returns an IIOMetadataFormat object describing the given stream metadata format, or null if no description is available. The supplied name must be the native stream metadata format name, the standard metadata format name, or one of those returned by getExtraStreamMetadataFormatNames.",;javax.imageio.spi.ImageReaderWriterSpi.getStreamMetadataFormat(String),;1
getStreamPosition,1,1,Description copied from interface:ImageInputStream,;javax.imageio.stream.ImageInputStreamImpl.getStreamPosition(),;1
getStrength,1,1,Returns this Collator's strength property. The strength property determines the minimum level of difference considered significant during comparison. See the Collator class description for an example of use.,;java.text.Collator.getStrength(),;1
getStrikethroughOffset,1,1,Returns the position of the strike-through line relative to the baseline.,;java.awt.font.LineMetrics.getStrikethroughOffset(),;1
getStrikethroughThickness,1,1,Returns the thickness of the strike-through line.,;java.awt.font.LineMetrics.getStrikethroughThickness(),;1
getStringArray,1,1,Gets a string array for the given key from this resource bundle or one of its parents. Calling this method is equivalent to calling (String[]) getObject(key).,;java.util.ResourceBundle.getStringArray(String),;1
getStringConverter,1,1,Returns the object responsible for converting values from the model to strings.,;javax.swing.table.TableRowSorter.getStringConverter(),;1
getStringPlacement,1,1,"Designate the place where the progress string will be painted. This implementation places it at the center of the progress bar (in both x and y). Override this if you want to right, left, top, or bottom align the progress string or if you need to nudge it around for any reason.",";javax.swing.plaf.basic.BasicProgressBarUI.getStringPlacement(Graphics,String,int,int,int,int)",;1
getStringToCompare,1,1,Gets the string to compare with the observed attribute common to all observed MBeans.,;javax.management.monitor.StringMonitor.getStringToCompare(),;1
getStringValue,1,1,Returns the string value at the specified index. If filtering is being done based on String values this method is preferred to that of getValue as getValue(index).toString() may return a different result than getStringValue(index). This implementation calls getValue(index).toString() after checking for null. Subclasses that provide different string conversion should override this method if necessary.,;javax.swing.RowFilter.Entry.getStringValue(int),;1
getStringValueAt,1,1,Returns the value as a String at the specified index. This implementation uses toString on the result from getValueAt (making sure to return an empty string for null values). Subclasses that override this method should never return null.,";javax.swing.DefaultRowSorter.ModelWrapper.getStringValueAt(int,int)",;1
getStrongCaret,1,1,Chooses one of the specified TextHitInfo instances as a strong caret in the specified TextLayout.,";java.awt.font.TextLayout.CaretPolicy.getStrongCaret(TextHitInfo,TextHitInfo,TextLayout)",;1
getStyleFactory,1,1,Returns the current SynthStyleFactory.,;javax.swing.plaf.synth.SynthLookAndFeel.getStyleFactory(),;1
getStylesheet,1,1,Returns the stylesheet.,;javax.xml.crypto.dsig.spec.XSLTTransformParameterSpec.getStylesheet(),;1
getStyleSheets,1,1,Returns an array of the linked StyleSheets. Will return null if there are no linked StyleSheets.,;javax.swing.text.html.StyleSheet.getStyleSheets(),;1
getSubimage,1,1,Returns a subimage defined by a specified rectangular region. The returned BufferedImage shares the same data array as the original image.,";java.awt.image.BufferedImage.getSubimage(int,int,int,int)",;1
getSubInterfaces,1,1,Get an Enumeration with all the subinterfaces (also known as virtual interfaces) attached to this network interface. For instance eth0:1 will be a subinterface to eth0.,;java.net.NetworkInterface.getSubInterfaces(),;1
getSubjectAsBytes,1,1,"Returns the subject criterion as a byte array. This distinguished name must match the subject distinguished name in the X509Certificate. If null, the subject criterion is disabled and any subject distinguished name will do. If the value returned is not null, it is a byte array containing a single DER encoded distinguished name, as defined in X.501. The ASN.1 notation for this structure is supplied in the documentation for setSubject(byte [] subjectDN). Note that the byte array returned is cloned to protect against subsequent modifications.",;java.security.cert.X509CertSelector.getSubjectAsBytes(),;1
getSubjectAsString,1,1,"Denigrated, use getSubject() or getSubjectAsBytes() instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names. Returns the subject criterion as a String. This distinguished name must match the subject distinguished name in the X509Certificate. If null, the subject criterion is disabled and any subject distinguished name will do. If the value returned is not null, it is a distinguished name, in RFC 2253 format.",;java.security.cert.X509CertSelector.getSubjectAsString(),;1
getSubjectKeyIdentifier,1,1,"Returns the subjectKeyIdentifier criterion. The X509Certificate must contain a SubjectKeyIdentifier extension with the specified value. If null, no subjectKeyIdentifier check will be done. Note that the byte array returned is cloned to protect against subsequent modifications.",;java.security.cert.X509CertSelector.getSubjectKeyIdentifier(),;1
getSubjectPublicKey,1,1,"Returns the subjectPublicKey criterion. The X509Certificate must contain the specified subject public key. If null, no subjectPublicKey check will be done.",;java.security.cert.X509CertSelector.getSubjectPublicKey(),;1
getSubjectPublicKeyAlgID,1,1,"Returns the subjectPublicKeyAlgID criterion. The X509Certificate must contain a subject public key with the specified algorithm. If null, no subjectPublicKeyAlgID check will be done.",;java.security.cert.X509CertSelector.getSubjectPublicKeyAlgID(),;1
getSubjectUniqueID,1,1,Gets the subjectUniqueID value from the certificate. The ASN.1 definition for this is: subjectUniqueID [2] IMPLICIT UniqueIdentifier OPTIONAL UniqueIdentifier ::= BIT STRING,;java.security.cert.X509Certificate.getSubjectUniqueID(),;1
getSubjectX500Principal,1,1,"Returns the subject (subject distinguished name) value from the certificate as an X500Principal. If the subject value is empty, then the getName() method of the returned X500Principal object returns an empty string (""""). It is recommended that subclasses override this method.",;java.security.cert.X509Certificate.getSubjectX500Principal(),;1
getSubprimeQLength,1,1,Returns the desired length of the sub-prime Q of the to-be-generated DSA domain parameters in bits.,;java.security.spec.DSAGenParameterSpec.getSubprimeQLength(),;1
getSubsamplingXOffset,1,1,"Returns the horizontal offset of the subsampling grid. If setSourceSubsampling has not been called, 0 is returned (which is the correct value).",;javax.imageio.IIOParam.getSubsamplingXOffset(),;1
getSubsamplingYOffset,1,1,"Returns the vertical offset of the subsampling grid. If setSourceSubsampling has not been called, 0 is returned (which is the correct value).",;javax.imageio.IIOParam.getSubsamplingYOffset(),;1
getSubString,1,1,"Returns a copy of the substring contained in this SerialClob object, starting at the given position and continuing for the specified number or characters.",";javax.sql.rowset.serial.SerialClob.getSubString(long,int)",;1
getSuperclass,1,1,"Returns the Class representing the superclass of the entity (class, interface, primitive type or void) represented by this Class. If this Class represents either the Object class, an interface, a primitive type, or void, then null is returned. If this object represents an array class then the Class object representing the Object class is returned.",;java.lang.Class.getSuperclass(),;1
getSupportedAnnotationTypes,1,1,"If the processor class is annotated with SupportedAnnotationTypes, return an unmodifiable set with the same set of strings as the annotation. If the class is not so annotated, an empty set is returned.",;javax.annotation.processing.AbstractProcessor.getSupportedAnnotationTypes(),;1
getSupportedDocFlavors,1,1,Queries the factory for the document flavors that can be accepted by printers obtained from this factory.,;javax.print.StreamPrintServiceFactory.getSupportedDocFlavors(),;1
getSupportedExtensions,1,1,"Returns an immutable Set of X.509 certificate extensions that this PKIXCertPathChecker supports (i.e. recognizes, is able to process), or null if no extensions are supported. Each element of the set is a String representing the Object Identifier (OID) of the X.509 extension that is supported. The OID is represented by a set of nonnegative integers separated by periods. All X.509 certificate extensions that a PKIXCertPathChecker might possibly be able to process should be included in the set.",;java.security.cert.PKIXCertPathChecker.getSupportedExtensions(),;1
getSupportedOptions,1,1,"If the processor class is annotated with SupportedOptions, return an unmodifiable set with the same set of strings as the annotation. If the class is not so annotated, an empty set is returned.",;javax.annotation.processing.AbstractProcessor.getSupportedOptions(),;1
getSupportedSourceVersion,1,1,"If the processor class is annotated with SupportedSourceVersion, return the source version in the annotation. If the class is not so annotated, SourceVersion.RELEASE_6 is returned.",;javax.annotation.processing.AbstractProcessor.getSupportedSourceVersion(),;1
getSupportedSSLParameters,1,1,Returns a copy of the SSLParameters indicating the supported settings for this SSL context. The parameters will always have the ciphersuites and protocols arrays set to non-null values.,;javax.net.ssl.SSLContext.getSupportedSSLParameters(),;1
getSuppressed,1,1,"Returns an array containing all of the exceptions that were suppressed, typically by the try-with-resources statement, in order to deliver this exception. If no exceptions were suppressed or suppression is disabled, an empty array is returned. This method is thread-safe. Writes to the returned array do not affect future calls to this method.",;java.lang.Throwable.getSuppressed(),;1
getSurplusQueuedTaskCount,1,1,"Returns an estimate of how many more locally queued tasks are held by the current worker thread than there are other worker threads that might steal them, or zero if this thread is not operating in a ForkJoinPool. This value may be useful for heuristic decisions about whether to fork other tasks. In many usages of ForkJoinTasks, at steady state, each worker should aim to maintain a small constant surplus (for example, 3) of tasks, and to process computations locally if this threshold is exceeded.",;java.util.concurrent.ForkJoinTask.getSurplusQueuedTaskCount(),;1
getSurrendersFocusOnKeystroke,1,1,Returns true if the editor should get the focus when keystrokes cause the editor to be activated,;javax.swing.JTable.getSurrendersFocusOnKeystroke(),;1
getSyncFactory,1,1,Returns the SyncFactory singleton.,;javax.sql.rowset.spi.SyncFactory.getSyncFactory(),;1
getSynthesizer,1,1,"Obtains the default synthesizer. If the system property javax.sound.midi.Synthesizer is defined or it is defined in the file ""sound.properties"", it is used to identify the default synthesizer. For details, refer to the class description.",;javax.sound.midi.MidiSystem.getSynthesizer(),;1
getSystemClassLoader,1,1,"Returns the system class loader for delegation. This is the default delegation parent for new ClassLoader instances, and is typically the class loader used to start the application. This method is first invoked early in the runtime's startup sequence, at which point it creates the system class loader and sets it as the context class loader of the invoking Thread. The default system class loader is an implementation-dependent instance of this class. If the system property ""java.system.class.loader"" is defined when this method is first invoked then the value of that property is taken to be the name of a class that will be returned as the system class loader. The class is loaded using the default system class loader and must define a public constructor that takes a single parameter of type ClassLoader which is used as the delegation parent. An instance is then created using this constructor with the default system class loader as the parameter. The resulting class loader is defined to be the system class loader. If a security manager is present, and the invoker's class loader is not null and the invoker's class loader is not the same as or an ancestor of the system class loader, then this method invokes the security manager's checkPermission method with a RuntimePermission(""getClassLoader"") permission to verify access to the system class loader. If not, a SecurityException will be thrown.",;java.lang.ClassLoader.getSystemClassLoader(),;1
getSystemCustomCursor,1,1,"Returns a system-specific custom cursor object matching the specified name. Cursor names are, for example: ""Invalid.16x16""",;java.awt.Cursor.getSystemCustomCursor(String),;1
getSystemDisplayName,1,1,"Name of a file, directory, or folder as it would be displayed in a system file browser. Example from Windows: the ""M:\"" directory displays as ""CD-ROM (M:)"" The default implementation gets information from the ShellFolder class.",;javax.swing.filechooser.FileSystemView.getSystemDisplayName(File),;1
getSystemDocumentationTool,1,1,Gets the Java閳 programming language documentation tool provided with this platform.,;javax.tools.ToolProvider.getSystemDocumentationTool(),;1
getSystemEventQueue,1,1,"Get the application's or applet's EventQueue instance. Depending on the Toolkit implementation, different EventQueues may be returned for different applets. Applets should therefore not assume that the EventQueue instance returned by this method will be shared by other applets or the system. If there is a security manager then its checkPermission method is called to check AWTPermission(""accessEventQueue"").",;java.awt.Toolkit.getSystemEventQueue(),;1
getSystemEventQueueImpl,1,1,"Gets the application's or applet's EventQueue instance, without checking access. For security reasons, this can only be called from a Toolkit subclass.",;java.awt.Toolkit.getSystemEventQueueImpl(),;1
getSystemIcon,1,1,"Icon for a file, directory, or folder as it would be displayed in a system file browser. Example from Windows: the ""M:\"" directory displays a CD-ROM icon. The default implementation gets information from the ShellFolder class.",;javax.swing.filechooser.FileSystemView.getSystemIcon(File),;1
getSystemJavaCompiler,1,1,Gets the Java閳 programming language compiler provided with this platform.,;javax.tools.ToolProvider.getSystemJavaCompiler(),;1
getSystemLookAndFeelClassName,1,1,"Returns the name of the LookAndFeel class that implements the native system look and feel if there is one, otherwise the name of the default cross platform LookAndFeel class. This value can be overriden by setting the swing.systemlaf system property.",;javax.swing.UIManager.getSystemLookAndFeelClassName(),;1
getSystemResource,1,1,Find a resource of the specified name from the search path used to load classes. This method locates the resource through the system class loader (see getSystemClassLoader()).,;java.lang.ClassLoader.getSystemResource(String),;1
getSystemResourceAsStream,1,1,"Open for reading, a resource of the specified name from the search path used to load classes. This method locates the resource through the system class loader (see getSystemClassLoader()).",;java.lang.ClassLoader.getSystemResourceAsStream(String),;1
getSystemResources,1,1,Finds all resources of the specified name from the search path used to load classes. The resources thus found are returned as an Enumeration of URL objects. The search order is described in the documentation for getSystemResource(String).,;java.lang.ClassLoader.getSystemResources(String),;1
getSystemScope,1,1,Deprecated.,;java.security.IdentityScope.getSystemScope(),;1
getSystemSelection,1,1,"Gets the singleton instance of the system selection as a Clipboard object. This allows an application to read and modify the current, system-wide selection. An application is responsible for updating the system selection whenever the user selects text, using either the mouse or the keyboard. Typically, this is implemented by installing a FocusListener on all Components which support text selection, and, between FOCUS_GAINED and FOCUS_LOST events delivered to that Component, updating the system selection Clipboard when the selection changes inside the Component. Properly updating the system selection ensures that a Java application will interact correctly with native applications and other Java applications running simultaneously on the system. Note that java.awt.TextComponent and javax.swing.text.JTextComponent already adhere to this policy. When using these classes, and their subclasses, developers need not write any additional code. Some platforms do not support a system selection Clipboard. On those platforms, this method will return null. In such a case, an application is absolved from its responsibility to update the system selection Clipboard as described above. Each actual implementation of this method should first check if there is a security manager installed. If there is, the method should call the security manager's checkPermission method to check AWTPermission(""accessClipboard"").",;java.awt.Toolkit.getSystemSelection(),;1
getSystemToolClassLoader,1,1,Returns the class loader for tools provided with this platform. This does not include user-installed tools. Use the service provider mechanism for locating user installed tools.,;javax.tools.ToolProvider.getSystemToolClassLoader(),;1
getSystemTray,1,1,"Gets the SystemTray instance that represents the desktop's tray area. This always returns the same instance per application. On some platforms the system tray may not be supported. You may use the isSupported() method to check if the system tray is supported. If a SecurityManager is installed, the AWTPermission accessSystemTray must be granted in order to get the SystemTray instance. Otherwise this method will throw a SecurityException.",;java.awt.SystemTray.getSystemTray(),;1
getSystemTypeDescription,1,1,"Type description for a file, directory, or folder as it would be displayed in a system file browser. Example from Windows: the ""Desktop"" folder is described as ""Desktop"". Override for platforms with native ShellFolder implementations.",;javax.swing.filechooser.FileSystemView.getSystemTypeDescription(File),;1
getTab,1,1,Returns the TabStop at index index. This will throw an IllegalArgumentException if index is outside the range of tabs.,;javax.swing.text.TabSet.getTab(int),;1
getTabAfter,1,1,Returns the Tab instance after location. This will return null if there are no tabs after location.,;javax.swing.text.TabSet.getTabAfter(float),;1
getTabBase,1,1,Returns where the tabs are calculated from.,;javax.swing.text.ParagraphView.getTabBase(),;1
getTabbedSpan,1,1,Determines the desired span when using the given tab expansion implementation.,";javax.swing.text.GlyphView.getTabbedSpan(float,TabExpander)",;1
getTabbedTextOffset,1,1,Determines the relative offset into the given text that best represents the given span in the view coordinate system. This is implemented in a 1.1 style coordinate system where ints are used and 72dpi is assumed.,";javax.swing.text.Utilities.getTabbedTextOffset(Segment,FontMetrics,int,int,TabExpander,int)",;1
getTabbedTextWidth,1,1,Determines the width of the given segment of text taking tabs into consideration. This is implemented in a 1.1 style coordinate system where ints are used and 72dpi is assumed.,";javax.swing.text.Utilities.getTabbedTextWidth(Segment,FontMetrics,int,TabExpander,int)",;1
getTabComponentAt,1,1,Returns the tab component at index.,;javax.swing.JTabbedPane.getTabComponentAt(int),;1
getTabExpander,1,1,Fetch the TabExpander to use if tabs are present in this view.,;javax.swing.text.GlyphView.getTabExpander(),;1
getTabIndexAfter,1,1,Returns the index of the Tab to be used after location. This will return -1 if there are no tabs after location.,;javax.swing.text.TabSet.getTabIndexAfter(float),;1
getTabLabelShiftX,1,1,Overridden to do nothing for the Java L&amp;F.,";javax.swing.plaf.metal.MetalTabbedPaneUI.getTabLabelShiftX(int,int,boolean)",;1
getTabLabelShiftY,1,1,Overridden to do nothing for the Java L&amp;F.,";javax.swing.plaf.metal.MetalTabbedPaneUI.getTabLabelShiftY(int,int,boolean)",;1
getTabLayoutPolicy,1,1,Returns the policy used by the tabbedpane to layout the tabs when all the tabs will not fit within a single run.,;javax.swing.JTabbedPane.getTabLayoutPolicy(),;1
getTableCellEditorComponent,1,1,Implements the TableCellEditor interface.,";javax.swing.DefaultCellEditor.getTableCellEditorComponent(JTable,Object,boolean,int,int)",;1
getTableCellRendererComponent,1,1,"Returns the default table cell renderer. During a printing operation, this method will be called with isSelected and hasFocus values of false to prevent selection and focus from appearing in the printed output. To do other customization based on whether or not the table is being printed, check the return value from JComponent.isPaintingForPrint().",";javax.swing.table.DefaultTableCellRenderer.getTableCellRendererComponent(JTable,Object,boolean,boolean,int,int)",;1
getTableHeader,1,1,Returns the tableHeader used by this JTable.,;javax.swing.JTable.getTableHeader(),;1
getTableModelListeners,1,1,Returns an array of all the table model listeners registered on this model.,;javax.swing.table.AbstractTableModel.getTableModelListeners(),;1
getTableName,1,1,Retrieves the name of the table from which the value in the designated column was derived.,;javax.sql.rowset.RowSetMetaDataImpl.getTableName(int),;1
getTabPlacement,1,1,Returns the placement of the tabs for this tabbedpane.,;javax.swing.JTabbedPane.getTabPlacement(),;1
getTabularType,1,1,Returns the tabular type describing this TabularData instance.,;javax.management.openmbean.TabularDataSupport.getTabularType(),;1
getTagName,1,1,Equivalent to getNodeName.,;javax.imageio.metadata.IIOMetadataNode.getTagName(),;1
getTags,1,1,"If the property value must be one of a set of known tagged values, then this method should return an array of the tag values. This can be used to represent (for example) enum values. If a PropertyEditor supports tags, then it should support the use of setAsText with a tag value as a way of setting the value.",;java.beans.PropertyEditorSupport.getTags(),;1
getTargetCertConstraints,1,1,"Returns the required constraints on the target certificate. The constraints are returned as an instance of CertSelector. If null, no constraints are defined. Note that the CertSelector returned is cloned to protect against subsequent modifications.",;java.security.cert.PKIXParameters.getTargetCertConstraints(),;1
getTargetedNotifications,1,1,"Returns the notifications resulting from the query, and the listeners they correspond to.",;javax.management.remote.NotificationResult.getTargetedNotifications(),;1
getTargetLineInfo,1,1,Obtains information about all target lines of a particular type that are supported by the installed mixers.,;javax.sound.sampled.AudioSystem.getTargetLineInfo(Line.Info),;1
getTaskCount,1,1,"Returns the approximate total number of tasks that have ever been scheduled for execution. Because the states of tasks and threads may change dynamically during computation, the returned value is only an approximation.",;java.util.concurrent.ThreadPoolExecutor.getTaskCount(),;1
getTBSCertificate,1,1,"Gets the DER-encoded certificate information, the tbsCertificate from this certificate. This can be used to verify the signature independently.",;java.security.cert.X509Certificate.getTBSCertificate(),;1
getTBSCertList,1,1,"Gets the DER-encoded CRL information, the tbsCertList from this CRL. This can be used to verify the signature independently.",;java.security.cert.X509CRL.getTBSCertList(),;1
getTcpNoDelay,1,1,Tests if TCP_NODELAY is enabled.,;java.net.Socket.getTcpNoDelay(),;1
getTextBorder,1,1,Returns a border instance for a text component,;javax.swing.plaf.metal.MetalBorders.getTextBorder(),;1
getTextComponent,1,1,"Determines the component to use for the action. This if fetched from the source of the ActionEvent if it's not null and can be narrowed. Otherwise, the last focused component is used.",;javax.swing.text.TextAction.getTextComponent(ActionEvent),;1
getTextContent,1,1,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.,;javax.imageio.metadata.IIOMetadataNode.getTextContent(),;1
getTextField,1,1,Returns the JFormattedTextField child of this editor. By default the text field is the first and only child of editor.,;javax.swing.JSpinner.DefaultEditor.getTextField(),;1
getTextFieldBorder,1,1,Returns a border instance for a JTextField,;javax.swing.plaf.metal.MetalBorders.getTextFieldBorder(),;1
getTextLength,1,1,Description copied from interface:XMLStreamReader,;javax.xml.stream.util.StreamReaderDelegate.getTextLength(),;1
getTextListeners,1,1,Returns an array of all the text listeners registered on this text component.,;java.awt.TextComponent.getTextListeners(),;1
getTextNonSelectionColor,1,1,Returns the color the text is drawn with when the node isn't selected.,;javax.swing.tree.DefaultTreeCellRenderer.getTextNonSelectionColor(),;1
getTextPlainUnicodeFlavor,1,1,"Returns a DataFlavor representing plain text with Unicode encoding, where: representationClass = java.io.InputStream mimeType = ""text/plain; charset=&lt;platform default Unicode encoding&gt;"" Sun's implementation for Microsoft Windows uses the encoding utf-16le. Sun's implementation for Solaris and Linux uses the encoding iso-10646-ucs-2.",;java.awt.datatransfer.DataFlavor.getTextPlainUnicodeFlavor(),;1
getTextSelectionColor,1,1,Returns the color the text is drawn with when the node is selected.,;javax.swing.tree.DefaultTreeCellRenderer.getTextSelectionColor(),;1
getTextShiftOffset,1,1,Overriden so that the text will not be rendered as shifted for Toggle buttons and subclasses.,;javax.swing.plaf.basic.BasicToggleButtonUI.getTextShiftOffset(),;1
getTextStart,1,1,Description copied from interface:XMLStreamReader,;javax.xml.stream.util.StreamReaderDelegate.getTextStart(),;1
getTextViewForTab,1,1,Returns the text View object required to render stylized text (HTML) for the specified tab or null if no specialized text rendering is needed for this tab. This is provided to support html rendering inside tabs.,;javax.swing.plaf.basic.BasicTabbedPaneUI.getTextViewForTab(int),;1
getThickness,1,1,Returns the thickness of the border.,;javax.swing.border.LineBorder.getThickness(),;1
getThisUpdate,1,1,"Gets the thisUpdate date from the CRL. The ASN.1 definition for this is: thisUpdate ChoiceOfTime ChoiceOfTime ::= CHOICE { utcTime UTCTime, generalTime GeneralizedTime }",;java.security.cert.X509CRL.getThisUpdate(),;1
getThreadFactory,1,1,Returns the thread factory used to create new threads.,;java.util.concurrent.ThreadPoolExecutor.getThreadFactory(),;1
getThreadId,1,1,Returns the ID of the thread associated with this ThreadInfo.,;java.lang.management.ThreadInfo.getThreadId(),;1
getThreadID,1,1,Get an identifier for the thread where the message originated. This is a thread identifier within the Java VM and may or may not map to any operating system ID.,;java.util.logging.LogRecord.getThreadID(),;1
getThreadMXBean,1,1,Returns the managed bean for the thread system of the Java virtual machine.,;java.lang.management.ManagementFactory.getThreadMXBean(),;1
getThreadName,1,1,Returns the name of the thread associated with this ThreadInfo.,;java.lang.management.ThreadInfo.getThreadName(),;1
getThreadState,1,1,Returns the state of the thread associated with this ThreadInfo.,;java.lang.management.ThreadInfo.getThreadState(),;1
getThrowable,1,1,Returns any Throwable caught while executing the Runnable's run() method.,;java.awt.event.InvocationEvent.getThrowable(),;1
getThrown,1,1,"Get any throwable associated with the log record. If the event involved an exception, this will be the exception object. Otherwise null.",;java.util.logging.LogRecord.getThrown(),;1
getThumbBounds,1,1,"Return the current size/location of the thumb. Warning : the value returned by this method should not be be modified, it's a reference to the actual rectangle, not a copy.",;javax.swing.plaf.basic.BasicScrollBarUI.getThumbBounds(),;1
getThumbnail,1,1,Returns a thumbnail associated with the main image.,;javax.imageio.IIOImage.getThumbnail(int),;1
getThumbnailHeight,1,1,"Returns the height of the thumbnail preview image indexed by thumbnailIndex, associated with the image indexed by ImageIndex. If the reader does not support thumbnails, (readerSupportsThumbnails returns false), an UnsupportedOperationException will be thrown. The default implementation simply returns readThumbnail(imageindex, thumbnailIndex).getHeight(). Subclasses should therefore override this method if possible in order to avoid forcing the thumbnail to be read.",";javax.imageio.ImageReader.getThumbnailHeight(int,int)",;1
getThumbnails,1,1,"Returns the current List of thumbnail BufferedImages, or null if none is set. A live reference is returned.",;javax.imageio.IIOImage.getThumbnails(),;1
getThumbnailWidth,1,1,"Returns the width of the thumbnail preview image indexed by thumbnailIndex, associated with the image indexed by ImageIndex. If the reader does not support thumbnails, (readerSupportsThumbnails returns false), an UnsupportedOperationException will be thrown. The default implementation simply returns readThumbnail(imageindex, thumbnailIndex).getWidth(). Subclasses should therefore override this method if possible in order to avoid forcing the thumbnail to be read.",";javax.imageio.ImageReader.getThumbnailWidth(int,int)",;1
getThumbOverhang,1,1,Returns the amount that the thumb goes past the slide bar.,;javax.swing.plaf.metal.MetalSliderUI.getThumbOverhang(),;1
getTick,1,1,"Obtains the time-stamp for the event, in MIDI ticks",;javax.sound.midi.MidiEvent.getTick(),;1
getTie,1,1,Returns the tie (if any) for a given target object.,;javax.rmi.CORBA.Util.getTie(Remote),;1
getTile,1,1,"Returns tile (tileX,tileY). Note that tileX and tileY are indices into the tile array, not pixel locations. The Raster that is returned is live, which means that it is updated if the image is changed.",";java.awt.image.BufferedImage.getTile(int,int)",;1
getTiledSizeRequirements,1,1,Determines the total space necessary to place a set of components end-to-end. The needs of each component in the set are represented by an entry in the passed-in SizeRequirements array. The returned SizeRequirements object has an alignment of 0.5 (centered). The space requirement is never more than Integer.MAX_VALUE.,;javax.swing.SizeRequirements.getTiledSizeRequirements(SizeRequirements[]),;1
getTileIcon,1,1,Returns the icon used for tiling the border or null if a solid color is being used.,;javax.swing.border.MatteBorder.getTileIcon(),;1
getTilingMode,1,1,"Returns the current tiling mode, if tiling is supported. Otherwise throws an UnsupportedOperationException.",;javax.imageio.ImageWriteParam.getTilingMode(),;1
getTimeDefinition,1,1,"Gets the time definition, specifying how to convert the time to an instant. The local time can be converted to an instant using the standard offset, the wall offset or UTC.",;java.time.zone.ZoneOffsetTransitionRule.getTimeDefinition(),;1
getTimeLimit,1,1,"Retrieves the time limit of these SearchControls in milliseconds. If the value is 0, this means to wait indefinitely.",;javax.naming.directory.SearchControls.getTimeLimit(),;1
getTimeStamp,1,1,Get the notification timestamp.,;javax.management.Notification.getTimeStamp(),;1
getTimezone,1,1,Return timezone offset in minutes or DatatypeConstants.FIELD_UNDEFINED if this optional field is not defined. Value constraints for this value are summarized in timezone field of date/time field mapping table.,;javax.xml.datatype.XMLGregorianCalendar.getTimezone(),;1
getTimezoneOffset,1,1,"Deprecated.As of JDK version 1.1, replaced by -(Calendar.get(Calendar.ZONE_OFFSET) + Calendar.get(Calendar.DST_OFFSET)) / (60 * 1000).",;java.util.Date.getTimezoneOffset(),;1
getTipText,1,1,Returns the text that is shown when the tool tip is displayed. The returned value may be null.,;javax.swing.JToolTip.getTipText(),;1
getTitleAt,1,1,Returns the tab title at index.,;javax.swing.JTabbedPane.getTitleAt(int),;1
getTitleColor,1,1,Returns the title-color of the titled border.,;javax.swing.border.TitledBorder.getTitleColor(),;1
getTitleFont,1,1,Returns the title-font of the titled border.,;javax.swing.border.TitledBorder.getTitleFont(),;1
getTitleJustification,1,1,Returns the title-justification of the titled border.,;javax.swing.border.TitledBorder.getTitleJustification(),;1
getTitlePosition,1,1,Returns the title-position of the titled border.,;javax.swing.border.TitledBorder.getTitlePosition(),;1
getTLen,1,1,Returns the authentication tag length.,;javax.crypto.spec.GCMParameterSpec.getTLen(),;1
getToggleButtonBorder,1,1,Returns a border instance for a JToggleButton,;javax.swing.plaf.metal.MetalBorders.getToggleButtonBorder(),;1
getToggleClickCount,1,1,Returns the number of mouse clicks needed to expand or close a node.,;javax.swing.JTree.getToggleClickCount(),;1
getToIndex,1,1,Returns the toIndex. Valid for add and moved events,;javax.swing.event.TableColumnModelEvent.getToIndex(),;1
getTokenThreshold,1,1,Gets the number of tokens to buffer before trying to update the documents element structure. The default value is Integer.MAX_VALUE.,;javax.swing.text.html.HTMLDocument.getTokenThreshold(),;1
getToolTip,1,1,Returns the tooltip string associated with this TrayIcon.,;java.awt.TrayIcon.getToolTip(),;1
getToolTipLocation,1,1,"Returns the tooltip location in this component's coordinate system. If null is returned, Swing will choose a location. The default implementation returns null.",;javax.swing.JComponent.getToolTipLocation(MouseEvent),;1
getToolTipTextAt,1,1,Returns the tab tooltip text at index.,;javax.swing.JTabbedPane.getToolTipTextAt(int),;1
getToPage,1,1,"Returns, for jobs using these attributes, the last page (inclusive) to be printed, if a range of pages is to be printed. This attribute is updated to the value chosen by the user. An application should ignore this attribute on output, unless the return value of the getDefaultSelection method is DefaultSelectionType.RANGE. An application should honor the return value of getPageRanges over the return value of this method, if possible.",;java.awt.JobAttributes.getToPage(),;1
getTopComponent,1,1,"Returns the component above, or to the left of the divider.",;javax.swing.JSplitPane.getTopComponent(),;1
getTopLevelAncestor,1,1,"Returns the top-level ancestor of this component (either the containing Window or Applet), or null if this component has not been added to any container.",;javax.swing.JComponent.getTopLevelAncestor(),;1
getTotalColumnWidth,1,1,Returns the total combined width of all columns.,;javax.swing.table.DefaultTableColumnModel.getTotalColumnWidth(),;1
getTotalSeconds,1,1,"Gets the total zone offset in seconds. This is the primary way to access the offset amount. It returns the total of the hours, minutes and seconds fields as a single offset that can be added to a time.",;java.time.ZoneOffset.getTotalSeconds(),;1
getTrackBounds,1,1,"Returns the current bounds of the track, i.e. the space in between the increment and decrement buttons, less the insets. The value returned by this method is updated each time the scrollbar is laid out (validated). Warning : the value returned by this method should not be be modified, it's a reference to the actual rectangle, not a copy.",;javax.swing.plaf.basic.BasicScrollBarUI.getTrackBounds(),;1
getTrackLength,1,1,Returns the longer dimension of the slide bar. (The slide bar is only the part that runs directly under the thumb),;javax.swing.plaf.metal.MetalSliderUI.getTrackLength(),;1
getTracks,1,1,"Obtains an array containing all the tracks in this sequence. If the sequence contains no tracks, an array of length 0 is returned.",;javax.sound.midi.Sequence.getTracks(),;1
getTrackWidth,1,1,Returns the shorter dimension of the track.,;javax.swing.plaf.metal.MetalSliderUI.getTrackWidth(),;1
getTrailerField,1,1,Returns the value for the trailer field.,;java.security.spec.PSSParameterSpec.getTrailerField(),;1
getTransactionIsolation,1,1,"Returns the transaction isolation property for this RowSet object's connection. This property represents the transaction isolation level requested for use in transactions. For RowSet implementations such as the CachedRowSet that operate in a disconnected environment, the SyncProvider object offers complementary locking and data integrity options. The options described below are pertinent only to connected RowSet objects (JdbcRowSet objects).",;javax.sql.rowset.BaseRowSet.getTransactionIsolation(),;1
getTransformType,1,1,Returns the integer type of the affine transform for this FontRenderContext as specified by AffineTransform.getType(),;java.awt.font.FontRenderContext.getTransformType(),;1
getTransitionRules,1,1,"Gets the list of transition rules for years beyond those defined in the transition list. The complete set of transitions for this rules instance is defined by this method and getTransitions(). This method returns instances of ZoneOffsetTransitionRule that define an algorithm for when transitions will occur. For any given ZoneRules, this list contains the transition rules for years beyond those years that have been fully defined. These rules typically refer to future daylight saving time rule changes. If the zone defines daylight savings into the future, then the list will normally be of size two and hold information about entering and exiting daylight savings. If the zone does not have daylight savings, or information about future changes is uncertain, then the list will be empty. The list will be empty for fixed offset rules and for any time-zone where there is no daylight saving time. The list will also be empty if the transition rules are unknown.",;java.time.zone.ZoneRules.getTransitionRules(),;1
getTransitions,1,1,"Gets the complete list of fully defined transitions. The complete set of transitions for this rules instance is defined by this method and getTransitionRules(). This method returns those transitions that have been fully defined. These are typically historical, but may be in the future. The list will be empty for fixed offset rules and for any time-zone where there has only ever been a single offset. The list will also be empty if the transition rules are unknown.",;java.time.zone.ZoneRules.getTransitions(),;1
getTranslateInstance,1,1,Returns a transform representing a translation transformation. The matrix representing the returned transform is: [ 1 0 tx ] [ 0 1 ty ] [ 0 0 1 ],";java.awt.geom.AffineTransform.getTranslateInstance(double,double)",;1
getTranslateX,1,1,Returns the X coordinate of the translation element (m02) of the 3x3 affine transformation matrix.,;java.awt.geom.AffineTransform.getTranslateX(),;1
getTranslateY,1,1,Returns the Y coordinate of the translation element (m12) of the 3x3 affine transformation matrix.,;java.awt.geom.AffineTransform.getTranslateY(),;1
getTransmitter,1,1,"Obtains a MIDI transmitter from an external MIDI port or other default source. The returned transmitter always implements the MidiDeviceTransmitter interface. If the system property javax.sound.midi.Transmitter is defined or it is defined in the file ""sound.properties"", it is used to identify the device that provides the default transmitter. For details, refer to the class description. If a native transmitter provided by the default device does not implement the MidiDeviceTransmitter interface, it will be wrapped in a wrapper class that implements the MidiDeviceTransmitter interface. The corresponding Transmitter method calls will be forwarded to the native transmitter. If this method returns successfully, the MidiDevice the Transmitter belongs to is opened implicitly, if it is not already open. It is possible to close an implicitly opened device by calling close on the returned Transmitter. All open Transmitter instances have to be closed in order to release system resources hold by the MidiDevice. For a detailed description of open/close behaviour see the class description of MidiDevice.",;javax.sound.midi.MidiSystem.getTransmitter(),;1
getTransparentPixel,1,1,"Returns the index of a transparent pixel in this IndexColorModel or -1 if there is no pixel with an alpha value of 0. If a transparent pixel was explicitly specified in one of the constructors by its index, then that index will be preferred, otherwise, the index of any pixel which happens to be fully transparent may be returned.",;java.awt.image.IndexColorModel.getTransparentPixel(),;1
getTrayIcons,1,1,"Returns an array of all icons added to the tray by this application. You can't access the icons added by another application. Some browsers partition applets in different code bases into separate contexts, and establish walls between these contexts. In such a scenario, only the tray icons added from this context will be returned. The returned array is a copy of the actual array and may be modified in any way without affecting the system tray. To remove a TrayIcon from the SystemTray, use the remove(TrayIcon) method.",;java.awt.SystemTray.getTrayIcons(),;1
getTrayIconSize,1,1,"Returns the size, in pixels, of the space that a tray icon will occupy in the system tray. Developers may use this methods to acquire the preferred size for the image property of a tray icon before it is created. For convenience, there is a similar method TrayIcon.getSize() in the TrayIcon class.",;java.awt.SystemTray.getTrayIconSize(),;1
getTreeCellRendererComponent,1,1,"Configures the renderer based on the passed in components. The value is set from messaging the tree with convertValueToText, which ultimately invokes toString on value. The foreground color is set based on the selection and the icon is set based on the leaf and expanded parameters.",";javax.swing.tree.DefaultTreeCellRenderer.getTreeCellRendererComponent(JTree,Object,boolean,boolean,boolean,int,boolean)",;1
getTreeExpansionListeners,1,1,Returns an array of all the TreeExpansionListeners added to this JTree with addTreeExpansionListener().,;javax.swing.JTree.getTreeExpansionListeners(),;1
getTreeModelListeners,1,1,Returns an array of all the tree model listeners registered on this model.,;javax.swing.tree.DefaultTreeModel.getTreeModelListeners(),;1
getTreePath,1,1,"For all events, except treeStructureChanged, returns the parent of the changed nodes. For treeStructureChanged events, returns the ancestor of the structure that has changed. This and getChildIndices are used to get a list of the effected nodes. The one exception to this is a treeNodesChanged event that is to identify the root, in which case this will return the root and getChildIndices will return null.",;javax.swing.event.TreeModelEvent.getTreePath(),;1
getTreeWillExpandListeners,1,1,Returns an array of all the TreeWillExpandListeners added to this JTree with addTreeWillExpandListener().,;javax.swing.JTree.getTreeWillExpandListeners(),;1
getTrustAnchor,1,1,Returns the TrustAnchor describing the CA that served as a trust anchor for the certification path.,;java.security.cert.PKIXCertPathValidatorResult.getTrustAnchor(),;1
getTrustAnchors,1,1,Returns an immutable Set of the most-trusted CAs.,;java.security.cert.PKIXParameters.getTrustAnchors(),;1
getTrustedCert,1,1,Returns the most-trusted CA certificate.,;java.security.cert.TrustAnchor.getTrustedCert(),;1
getTrustedCertificate,1,1,Gets the trusted Certficate from this entry.,;java.security.KeyStore.TrustedCertificateEntry.getTrustedCertificate(),;1
getTrustManagers,1,1,Returns one trust manager for each type of trust material.,;javax.net.ssl.TrustManagerFactory.getTrustManagers(),;1
getTypeCode,1,1,Returns character encoding of field type. The encoding is as follows: B byte C char D double F float I int J long L class or interface S short Z boolean [ array,;java.io.ObjectStreamField.getTypeCode(),;1
getTypeInfoProvider,1,1,"Obtains the TypeInfoProvider implementation of this ValidatorHandler. The obtained TypeInfoProvider can be queried during a parse to access the type information determined by the validator. Some schema languages do not define the notion of type, for those languages, this method may not be supported. However, to be compliant with this specification, implementations for W3C XML Schema 1.0 must support this operation.",;javax.xml.validation.ValidatorHandler.getTypeInfoProvider(),;1
getTypeMap,1,1,"Retrieves the type map associated with the Connection object for this RowSet object. Drivers that support the JDBC 3.0 API will create Connection objects with an associated type map. This type map, which is initially empty, can contain one or more fully-qualified SQL names and Class objects indicating the class to which the named SQL value will be mapped. The type mapping specified in the connection's type map is used for custom type mapping when no other type map supersedes it. If a type map is explicitly supplied to a method that can perform custom mapping, that type map supersedes the connection's type map.",;javax.sql.rowset.BaseRowSet.getTypeMap(),;1
getTypeString,1,1,Return the JVM type signature.,;java.io.ObjectStreamField.getTypeString(),;1
getUIActionMap,1,1,Returns the ActionMap provided by the UI in component component. This will return null if the UI has not installed an ActionMap.,;javax.swing.SwingUtilities.getUIActionMap(JComponent),;1
getUIClassNamesForRole,1,1,Given a UI role obtained from this factory obtain the UI types available from this factory which implement this role. The returned Strings should refer to the static variables defined in this class so that applications can use equality of reference ("==").,;javax.print.ServiceUIFactory.getUIClassNamesForRole(int),;1
getUIError,1,1,"If getUI() fails for any reason, it calls this method before returning null. Subclasses may choose to do more or less here.",;javax.swing.UIDefaults.getUIError(String),;1
getUIInputMap,1,1,Returns the InputMap provided by the UI for condition condition in component component. This will return null if the UI has not installed a InputMap of the specified type.,";javax.swing.SwingUtilities.getUIInputMap(JComponent,int)",;1
getUnallocatedSpace,1,1,"Returns the number of unallocated bytes in the file store. The returned number of unallocated bytes is a hint, but not a guarantee, that it is possible to use most or any of these bytes. The number of unallocated bytes is most likely to be accurate immediately after the space attributes are obtained. It is likely to be made inaccurate by any external I/O operations including those made on the system outside of this virtual machine.",;java.nio.file.FileStore.getUnallocatedSpace(),;1
getUnarrivedParties,1,1,"Returns the number of registered parties that have not yet arrived at the current phase of this phaser. If this phaser has terminated, the returned value is meaningless and arbitrary.",;java.util.concurrent.Phaser.getUnarrivedParties(),;1
getUnderlineOffset,1,1,Returns the position of the underline relative to the baseline.,;java.awt.font.LineMetrics.getUnderlineOffset(),;1
getUnderlineThickness,1,1,Returns the thickness of the underline.,;java.awt.font.LineMetrics.getUnderlineThickness(),;1
getUndoOrRedoPresentationName,1,1,"Convenience method that returns either getUndoPresentationName or getRedoPresentationName. If the index of the next edit equals the size of the edits list, getUndoPresentationName is returned, otherwise getRedoPresentationName is returned.",;javax.swing.undo.UndoManager.getUndoOrRedoPresentationName(),;1
getUnicodeLocaleAttributes,1,1,"Returns the set of unicode locale attributes associated with this locale, or the empty set if it has no attributes. The returned set is unmodifiable.",;java.util.Locale.getUnicodeLocaleAttributes(),;1
getUnicodeLocaleKeys,1,1,"Returns the set of Unicode locale keys defined by this locale, or the empty set if this locale has none. The returned set is immutable. Keys are all lower case.",;java.util.Locale.getUnicodeLocaleKeys(),;1
getUnicodeLocaleType,1,1,"Returns the Unicode locale type associated with the specified Unicode locale key for this locale. Returns the empty string for keys that are defined with no type. Returns null if the key is not defined. Keys are case-insensitive. The key must be two alphanumeric characters ([0-9a-zA-Z]), or an IllegalArgumentException is thrown.",;java.util.Locale.getUnicodeLocaleType(String),;1
getUnitsToScroll,1,1,"This is a convenience method to aid in the implementation of the common-case MouseWheelListener - to scroll a ScrollPane or JScrollPane by an amount which conforms to the platform settings. (Note, however, that ScrollPane and JScrollPane already have this functionality built in.) This method returns the number of units to scroll when scroll type is MouseWheelEvent.WHEEL_UNIT_SCROLL, and should only be called if getScrollType returns MouseWheelEvent.WHEEL_UNIT_SCROLL. Direction of scroll, amount of wheel movement, and platform settings for wheel scrolling are all accounted for. This method does not and cannot take into account value of the Adjustable/Scrollable unit increment, as this will vary among scrolling components. A simplified example of how this method might be used in a listener: mouseWheelMoved(MouseWheelEvent event) { ScrollPane sp = getScrollPaneFromSomewhere(); Adjustable adj = sp.getVAdjustable() if (MouseWheelEvent.getScrollType() == WHEEL_UNIT_SCROLL) { int totalScrollAmount = event.getUnitsToScroll() * adj.getUnitIncrement(); adj.setValue(adj.getValue() + totalScrollAmount); } }",;java.awt.event.MouseWheelEvent.getUnitsToScroll(),;1
getUnresolvedActions,1,1,Get the actions for the underlying permission that has not been resolved.,;java.security.UnresolvedPermission.getUnresolvedActions(),;1
getUnresolvedCerts,1,1,Get the signer certificates (without any supporting chain) for the underlying permission that has not been resolved.,;java.security.UnresolvedPermission.getUnresolvedCerts(),;1
getUnresolvedName,1,1,Get the target name of the underlying permission that has not been resolved.,;java.security.UnresolvedPermission.getUnresolvedName(),;1
getUnresolvedType,1,1,Get the type (class name) of the underlying permission that has not been resolved.,;java.security.UnresolvedPermission.getUnresolvedType(),;1
getUnwrappedParent,1,1,Returns the first ancestor of the component which is not an instance of JLayer.,;javax.swing.SwingUtilities.getUnwrappedParent(Component),;1
getUnwrappedView,1,1,"Returns the first JViewport's descendant which is not an instance of JLayer. If such a descendant can not be found, null is returned. If the viewport's view component is not a JLayer, this method is equivalent to JViewport.getView() otherwise JLayer.getView() will be recursively called on all descending JLayers.",;javax.swing.SwingUtilities.getUnwrappedView(JViewport),;1
getUpdateLevel,1,1,Returns the update level value.,;javax.swing.undo.UndoableEditSupport.getUpdateLevel(),;1
getUpdatePeriod,1,1,"Obtains the smallest time interval, in microseconds, over which the control's value can change during a shift. The update period is the inverse of the frequency with which the control updates its value during a shift. If the implementation does not support value shifting over time, it should set the control's value to the final value immediately and return -1 from this method.",;javax.sound.sampled.FloatControl.getUpdatePeriod(),;1
getUpdatePolicy,1,1,Gets the caret movement policy on document updates.,;javax.swing.text.DefaultCaret.getUpdatePolicy(),;1
getUpdateRect,1,1,Returns the rectangle representing the area which needs to be repainted in response to this event.,;java.awt.event.PaintEvent.getUpdateRect(),;1
getUpdateSelectionOnSort,1,1,Returns true if the selection should be updated after sorting.,;javax.swing.JTable.getUpdateSelectionOnSort(),;1
getUpdateTableInRealTime,1,1,"Obsolete as of Java 2 platform v1.3. Real time repaints, in response to column dragging or resizing, are now unconditional.",;javax.swing.table.JTableHeader.getUpdateTableInRealTime(),;1
getUrl,1,1,"Retrieves the JDBC URL that this RowSet object's javax.sql.Reader object uses to make a connection with a relational database using a JDBC technology-enabled driver. The Url property will be null if the underlying data source is a non-SQL data source, such as a spreadsheet or an XML data source.",;javax.sql.rowset.BaseRowSet.getUrl(),;1
getUrlDecoder,1,1,Returns a Base64.Decoder that decodes using the URL and Filename safe type base64 encoding scheme.,;java.util.Base64.getUrlDecoder(),;1
getUrlEncoder,1,1,Returns a Base64.Encoder that encodes using the URL and Filename safe type base64 encoding scheme.,;java.util.Base64.getUrlEncoder(),;1
getURLPath,1,1,"The URL Path part of the Service URL. This is an empty string, or a string beginning with a slash (/), or a string beginning with a semicolon (;).",;javax.management.remote.JMXServiceURL.getURLPath(),;1
getUsage,1,1,Returns the memory usage of the memory pool when this notification was constructed.,;java.lang.management.MemoryNotificationInfo.getUsage(),;1
getUseCache,1,1,"Returns the current value set by setUseCache, or true if no explicit setting has been made.",;javax.imageio.ImageIO.getUseCache(),;1
getUseCaches,1,1,Returns the value of this URLConnection's useCaches field.,;java.net.URLConnection.getUseCaches(),;1
getUseCipherSuitesOrder,1,1,Returns whether the local cipher suites preference should be honored.,;javax.net.ssl.SSLParameters.getUseCipherSuitesOrder(),;1
getUsed,1,1,Returns the amount of used memory in bytes.,;java.lang.management.MemoryUsage.getUsed(),;1
getUseParentHandlers,1,1,Discover whether or not this logger is sending its output to its parent logger.,;java.util.logging.Logger.getUseParentHandlers(),;1
getUserAction,1,1,This method returns the user drop action.,;java.awt.dnd.DragSourceDragEvent.getUserAction(),;1
getUserDropAction,1,1,"Returns the user drop action for the drop, when this TransferSupport represents a drop. The user drop action is chosen for a drop as described in the documentation for DropTargetDragEvent and DropTargetDropEvent. A different action may be chosen as the drop action by way of the setDropAction method. You may wish to query this in TransferHandler's canImport method when determining the suitability of a drop or when deciding on a drop action to explicitly choose. This method is only for use with drag and drop transfers. Calling it when isDrop() is false results in an IllegalStateException.",;javax.swing.TransferHandler.TransferSupport.getUserDropAction(),;1
getUsername,1,1,"Returns the user name used to create a database connection. Because it is not serialized, the username property is set at runtime before calling the method execute.",;javax.sql.rowset.BaseRowSet.getUsername(),;1
getUserObjectPath,1,1,"Returns the user object path, from the root, to get to this node. If some of the TreeNodes in the path have null user objects, the returned path will contain nulls.",;javax.swing.tree.DefaultMutableTreeNode.getUserObjectPath(),;1
getUserPrincipal,1,1,Returns the Principal that represents the authenticated user for this HttpExchange.,;javax.xml.ws.spi.http.HttpExchange.getUserPrincipal(),;1
getUserPrincipalLookupService,1,1,"Returns the UserPrincipalLookupService for this file system (optional operation). The resulting lookup service may be used to lookup user or group names. Usage Example: Suppose we want to make ""joe"" the owner of a file: UserPrincipalLookupService lookupService = FileSystems.getDefault().getUserPrincipalLookupService(); Files.setOwner(path, lookupService.lookupPrincipalByName(""joe""));",;java.nio.file.FileSystem.getUserPrincipalLookupService(),;1
getVAdjustable,1,1,Returns the ScrollPaneAdjustable object which represents the state of the vertical scrollbar. The declared return type of this method is Adjustable to maintain backward compatibility.,;java.awt.ScrollPane.getVAdjustable(),;1
getValidCharacters,1,1,Returns the valid characters that can be input.,;javax.swing.text.MaskFormatter.getValidCharacters(),;1
getValidPixels,1,1,"Returns a BigInteger that indicates the valid/invalid pixels in the colormap. A bit is valid if the BigInteger value at that index is set, and is invalid if the BigInteger value at that index is not set. The only valid ranges to query in the BigInteger are between 0 and the map size.",;java.awt.image.IndexColorModel.getValidPixels(),;1
getValueClass,1,1,Returns that class that is used to create new Objects.,;javax.swing.text.DefaultFormatter.getValueClass(),;1
getValueContainsLiteralCharacters,1,1,Returns true if stringToValue should return literal characters in the mask.,;javax.swing.text.MaskFormatter.getValueContainsLiteralCharacters(),;1
getValueCount,1,1,"Returns the number of values in the entry. For example, when used with a table this corresponds to the number of columns.",;javax.swing.RowFilter.Entry.getValueCount(),;1
getVariant,1,1,Returns the variant code for this locale.,;java.util.Locale.getVariant(),;1
getVariation,1,1,Returns the variation of the text range.,;java.awt.im.InputMethodHighlight.getVariation(),;1
getVendorName,1,1,"Returns the name of the vendor responsible for creating this service provider and its associated implementation. Because the vendor name may be used to select a service provider, it is not localized. The default implementation returns the value of the vendorName instance variable.",;javax.imageio.spi.IIOServiceProvider.getVendorName(),;1
getVerifyInputWhenFocusTarget,1,1,Returns the value that indicates whether the input verifier for the current focus owner will be called before this component requests focus.,;javax.swing.JComponent.getVerifyInputWhenFocusTarget(),;1
getVersionNumber,1,1,Returns the key version number.,;javax.security.auth.kerberos.KerberosKey.getVersionNumber(),;1
getVersions,1,1,"Gets the history of rules for the zone ID. Time-zones are defined by governments and change frequently. This method allows applications to find the history of changes to the rules for a single zone ID. The map is keyed by a string, which is the version string associated with the rules. The exact meaning and format of the version is provider specific. The version must follow lexicographical order, thus the returned map will be order from the oldest known rules to the newest available rules. The default 'TZDB' group uses version numbering consisting of the year followed by a letter, such as '2009e' or '2012f'. Implementations must provide a result for each valid zone ID, however they do not have to provide a history of rules. Thus the map will always contain one element, and will only contain more than one element if historical rule information is available.",;java.time.zone.ZoneRulesProvider.getVersions(String),;1
getVerticalLegBuffer,1,1,The vertical element of legs between nodes starts at the bottom of the parent node by default. This method makes the leg start below that.,;javax.swing.plaf.basic.BasicTreeUI.getVerticalLegBuffer(),;1
getViewAttributes,1,1,Fetches a set of attributes to use in the view for displaying. This is basically a set of attributes that can be used for View.getAttributes.,;javax.swing.text.html.StyleSheet.getViewAttributes(View),;1
getViewportBorder,1,1,Returns the Border object that surrounds the viewport.,;javax.swing.JScrollPane.getViewportBorder(),;1
getViewportSize,1,1,Returns the current size of the scroll pane's view port.,;java.awt.ScrollPane.getViewportSize(),;1
getViewPosition,1,1,"Returns the view coordinates that appear in the upper left hand corner of the viewport, or 0,0 if there's no view.",;javax.swing.JViewport.getViewPosition(),;1
getViewRect,1,1,"Returns a rectangle whose origin is getViewPosition and size is getExtentSize. This is the visible part of the view, in view coordinates.",;javax.swing.JViewport.getViewRect(),;1
getViewSize,1,1,"If the view's size hasn't been explicitly set, return the preferred size, otherwise return the view's current size. If there is no view, return 0,0.",;javax.swing.JViewport.getViewSize(),;1
getVisible,1,1,"Deprecated.As of JDK version 1.1, replaced by getVisibleAmount().",;java.awt.Scrollbar.getVisible(),;1
getVisibleAdvance,1,1,"Returns the advance of this TextLayout, minus trailing whitespace. This is in baseline-relative coordinates.",;java.awt.font.TextLayout.getVisibleAdvance(),;1
getVisibleEditorRect,1,1,Gets the allocation to give the root View. Due to an unfortunate set of historical events this method is inappropriately named. The Rectangle returned has nothing to do with visibility. The component must have a non-zero positive size for this translation to be computed.,;javax.swing.plaf.basic.BasicTextUI.getVisibleEditorRect(),;1
getVisibleIndex,1,1,Gets the index of the item that was last made visible by the method makeVisible.,;java.awt.List.getVisibleIndex(),;1
getVisiblePosition,1,1,"Gets the position that's most important to be visible. The offset of the visible position is relative to the current composed text; that is, the composed text within getText() if this is an INPUT_METHOD_TEXT_CHANGED event, the composed text within getText() of the preceding INPUT_METHOD_TEXT_CHANGED event otherwise.",;java.awt.event.InputMethodEvent.getVisiblePosition(),;1
getVisibleRect,1,1,"Returns the Component's ""visible rectangle"" - the intersection of this component's visible rectangle, new Rectangle(0, 0, getWidth(), getHeight()), and all of its ancestors' visible rectangles.",;javax.swing.JComponent.getVisibleRect(),;1
getVisualBounds,1,1,"Returns the visual bounds of this GlyphVector The visual bounds is the bounding box of the outline of this GlyphVector. Because of rasterization and alignment of pixels, it is possible that this box does not enclose all pixels affected by rendering this GlyphVector.",;java.awt.font.GlyphVector.getVisualBounds(),;1
getVisualOtherHit,1,1,Returns the hit on the opposite side of the specified hit's caret.,;java.awt.font.TextLayout.getVisualOtherHit(TextHitInfo),;1
getVisualRepresentation,1,1,"Returns an object that establishes the look of a transfer. This is useful for both providing feedback while performing a drag operation and for representing the transfer in a clipboard implementation that has a visual appearance. The implementation of the Icon interface should not alter the graphics clip or alpha level. The icon implementation need not be rectangular or paint all of the bounding rectangle and logic that calls the icons paint method should not assume the all bits are painted. null is a valid return value for this method and indicates there is no visual representation provided. In that case, the calling logic is free to represent the transferable however it wants. The default Swing logic will not do an alpha blended drag animation if the return is null.",;javax.swing.TransferHandler.getVisualRepresentation(Transferable),;1
getVMID,1,1,Returns the client VMID associated with the lease.,;java.rmi.dgc.Lease.getVMID(),;1
getVolatileOffscreenBuffer,1,1,"Return a volatile offscreen buffer that should be used as a double buffer with the specified component c. The image returned will be an instance of VolatileImage, or null if a VolatileImage object could not be instantiated. This buffer might be smaller than (proposedWidth,proposedHeight). This happens when the maximum double buffer size has been set for this repaint manager.",";javax.swing.RepaintManager.getVolatileOffscreenBuffer(Component,int,int)",;1
getVScrollbarWidth,1,1,"Returns the width that would be occupied by a vertical scrollbar, which is independent of whether it is currently displayed by the scroll pane or not.",;java.awt.ScrollPane.getVScrollbarWidth(),;1
getW,1,1,Returns the public point W.,;java.security.spec.ECPublicKeySpec.getW(),;1
getWaitedCount,1,1,Returns the total number of times that the thread associated with this ThreadInfo waited for notification. I.e. the number of times that a thread has been in the WAITING or TIMED_WAITING state.,;java.lang.management.ThreadInfo.getWaitedCount(),;1
getWaitedTime,1,1,Returns the approximate accumulated elapsed time (in milliseconds) that the thread associated with this ThreadInfo has waited for notification since thread contention monitoring is enabled. I.e. the total accumulated time the thread has been in the WAITING or TIMED_WAITING state since thread contention monitoring is enabled. This method returns -1 if thread contention monitoring is disabled. The Java virtual machine may measure the time with a high resolution timer. This statistic is reset when the thread contention monitoring is reenabled.,;java.lang.management.ThreadInfo.getWaitedTime(),;1
getWaitingConsumerCount,1,1,Description copied from interface:TransferQueue,;java.util.concurrent.LinkedTransferQueue.getWaitingConsumerCount(),;1
getWantsInput,1,1,Returns the value of the wantsInput property.,;javax.swing.JOptionPane.getWantsInput(),;1
getWeekdays,1,1,"Gets weekday strings. For example: ""Sunday"", ""Monday"", etc.",;java.text.DateFormatSymbols.getWeekdays(),;1
getWeight,1,1,Returns the weight of this LanguageRange.,;java.util.Locale.LanguageRange.getWeight(),;1
getWheelRotation,1,1,"Returns the number of ""clicks"" the mouse wheel was rotated, as an integer. A partial rotation may occur if the mouse supports a high-resolution wheel. In this case, the method returns zero until a full ""click"" has been accumulated.",;java.awt.event.MouseWheelEvent.getWheelRotation(),;1
getWidths,1,1,Gets the advance widths of the first 256 characters in the Font. The advance is the distance from the leftmost point to the rightmost point on the character's baseline. Note that the advance of a String is not necessarily the sum of the advances of its characters.,;java.awt.FontMetrics.getWidths(),;1
getWindow,1,1,Returns the originator of the event.,;java.awt.event.WindowEvent.getWindow(),;1
getWindowAncestor,1,1,"Returns the first Window ancestor of c, or null if c is not contained inside a Window.",;javax.swing.SwingUtilities.getWindowAncestor(Component),;1
getWindowDecorationStyle,1,1,Returns a constant identifying the type of Window decorations the JRootPane is providing.,;javax.swing.JRootPane.getWindowDecorationStyle(),;1
getWindowFocusListeners,1,1,Returns an array of all the window focus listeners registered on this window.,;java.awt.Window.getWindowFocusListeners(),;1
getWindowListeners,1,1,Returns an array of all the window listeners registered on this window.,;java.awt.Window.getWindowListeners(),;1
getWindows,1,1,"Returns an array of all Windows, both owned and ownerless, created by this application. If called from an applet, the array includes only the Windows accessible by that applet. Warning: this method may return system created windows, such as a print dialog. Applications should not assume the existence of these dialogs, nor should an application assume anything about these dialogs such as component positions, LayoutManagers or serialization.",;java.awt.Window.getWindows(),;1
getWindowStateListeners,1,1,Returns an array of all the window state listeners registered on this window.,;java.awt.Window.getWindowStateListeners(),;1
getWordEnd,1,1,Determines the end of a word for the given location. Uses BreakIterator.getWordInstance() to actually get the words.,";javax.swing.text.Utilities.getWordEnd(JTextComponent,int)",;1
getWordSize,1,1,Returns the word size in bits.,;javax.crypto.spec.RC5ParameterSpec.getWordSize(),;1
getWordStart,1,1,Determines the start of a word for the given model location. Uses BreakIterator.getWordInstance() to actually get the words.,";javax.swing.text.Utilities.getWordStart(JTextComponent,int)",;1
getWrapStyleWord,1,1,"Gets the style of wrapping used if the text area is wrapping lines. If set to true the lines will be wrapped at word boundaries (ie whitespace) if they are too long to fit within the allocated width. If set to false, the lines will be wrapped at character boundaries.",;javax.swing.JTextArea.getWrapStyleWord(),;1
getWritableParent,1,1,"Returns the parent WritableRaster (if any) of this WritableRaster, or else null.",;java.awt.image.WritableRaster.getWritableParent(),;1
getWritableTile,1,1,Checks out a tile for writing. All registered TileObservers are notified when a tile goes from having no writers to having one writer.,";java.awt.image.BufferedImage.getWritableTile(int,int)",;1
getWritableTileIndices,1,1,Returns an array of Point objects indicating which tiles are checked out for writing. Returns null if none are checked out.,;java.awt.image.BufferedImage.getWritableTileIndices(),;1
getWriteHoldCount,1,1,Queries the number of reentrant write holds on this lock by the current thread. A writer thread has a hold on a lock for each lock action that is not matched by an unlock action.,;java.util.concurrent.locks.ReentrantReadWriteLock.getWriteHoldCount(),;1
getWriteMethod,1,1,Gets the method that should be used to write the property value.,;java.beans.PropertyDescriptor.getWriteMethod(),;1
getWriterFileSuffixes,1,1,Returns an array of Strings listing all of the file suffixes associated with the formats understood by the current set of registered writers.,;javax.imageio.ImageIO.getWriterFileSuffixes(),;1
getWriterFormatNames,1,1,Returns an array of Strings listing all of the informal format names understood by the current set of registered writers.,;javax.imageio.ImageIO.getWriterFormatNames(),;1
getWriterMIMETypes,1,1,Returns an array of Strings listing all of the MIME types understood by the current set of registered writers.,;javax.imageio.ImageIO.getWriterMIMETypes(),;1
getWriterServiceProviderName,1,1,Returns the fully qualified class name of an ImageWriterSpi class that generates IIOMetadata objects that may be used as input to this transcoder.,;javax.imageio.spi.ImageTranscoderSpi.getWriterServiceProviderName(),;1
getXMicrometers,1,1,Returns this two-dimensional size attribute's X dimension in units of micrometers (纰宮). (For use in a subclass.),;javax.print.attribute.Size2DSyntax.getXMicrometers(),;1
getXMLEventReader,1,1,Get the XMLEventReader used by this StAXSource.XMLEventReader will be null. if this StAXSource was created with a XMLStreamReader.,;javax.xml.transform.stax.StAXSource.getXMLEventReader(),;1
getXMLEventWriter,1,1,Get the XMLEventWriter used by this StAXResult.XMLEventWriter will be null if this StAXResult was created with a XMLStreamWriter.,;javax.xml.transform.stax.StAXResult.getXMLEventWriter(),;1
getXMLNode,1,1,"Gets the XML element associated with the given JAXB object. Once a JAXB object tree is associated with an XML fragment, this method enables navigation between the two trees. An association between an XML element and a JAXB object is established by the bind methods and the update methods. Note that this association is partial; not all XML elements have associated JAXB objects, and not all JAXB objects have associated XML elements.",;javax.xml.bind.Binder.getXMLNode(Object),;1
getXMLReporter,1,1,The reporter that will be set on any XMLStreamReader or XMLEventReader created by this factory instance.,;javax.xml.stream.XMLInputFactory.getXMLReporter(),;1
getXMLResolver,1,1,The resolver that will be set on any XMLStreamReader or XMLEventReader created by this factory instance.,;javax.xml.stream.XMLInputFactory.getXMLResolver(),;1
getXMLStreamReader,1,1,Get the XMLStreamReader used by this StAXSource.XMLStreamReader will be null if this StAXSource was created with a XMLEventReader.,;javax.xml.transform.stax.StAXSource.getXMLStreamReader(),;1
getXMLStreamWriter,1,1,Get the XMLStreamWriter used by this StAXResult.XMLStreamWriter will be null if this StAXResult was created with a XMLEventWriter.,;javax.xml.transform.stax.StAXResult.getXMLStreamWriter(),;1
getXMLVersion,1,1,Returns the current value of the version property.,;org.xml.sax.ext.Locator2Impl.getXMLVersion(),;1
getXOnScreen,1,1,"Returns the absolute horizontal x position of the event. In a virtual device multi-screen environment in which the desktop area could span multiple physical screen devices, this coordinate is relative to the virtual coordinate system. Otherwise, this coordinate is relative to the coordinate system associated with the Component's GraphicsConfiguration.",;java.awt.event.MouseEvent.getXOnScreen(),;1
getXOrigin,1,1,Returns the X origin of this Kernel.,;java.awt.image.Kernel.getXOrigin(),;1
getXPath,1,1,Returns the XPath expression to be evaluated.,;javax.xml.crypto.dsig.spec.XPathFilterParameterSpec.getXPath(),;1
getXPathList,1,1,Returns a list of one or more XPathType objects. This implementation returns an unmodifiable list.,;javax.xml.crypto.dsig.spec.XPathFilter2ParameterSpec.getXPathList(),;1
getYMicrometers,1,1,Returns this two-dimensional size attribute's Y dimension in units of micrometers (纰宮). (For use in a subclass.),;javax.print.attribute.Size2DSyntax.getYMicrometers(),;1
getYOnScreen,1,1,"Returns the absolute vertical y position of the event. In a virtual device multi-screen environment in which the desktop area could span multiple physical screen devices, this coordinate is relative to the virtual coordinate system. Otherwise, this coordinate is relative to the coordinate system associated with the Component's GraphicsConfiguration.",;java.awt.event.MouseEvent.getYOnScreen(),;1
getYOrigin,1,1,Returns the Y origin of this Kernel.,;java.awt.image.Kernel.getYOrigin(),;1
gotFocus,1,1,"Deprecated.As of JDK version 1.1, replaced by processFocusEvent(FocusEvent).",";java.awt.Component.gotFocus(Event,Object)",;1
grabFocus,1,1,"Requests that this Component get the input focus, and that this Component's top-level ancestor become the focused Window. This component must be displayable, visible, and focusable for the request to be granted. This method is intended for use by focus implementations. Client code should not use this method; instead, it should use requestFocusInWindow().",;javax.swing.JComponent.grabFocus(),;1
grabPixels,1,1,Request the Image or ImageProducer to start delivering pixels and wait for all of the pixels in the rectangle of interest to be delivered.,;java.awt.image.PixelGrabber.grabPixels(),;1
groupCount,1,1,Returns the number of capturing groups in this matcher's pattern. Group zero denotes the entire pattern by convention. It is not included in this count. Any non-negative integer smaller than or equal to the value returned by this method is guaranteed to be a valid group index for this matcher.,;java.util.regex.Matcher.groupCount(),;1
grow,1,1,"Resizes the Rectangle both horizontally and vertically. This method modifies the Rectangle so that it is h units larger on both the left and right side, and v units larger at both the top and bottom. The new Rectangle has (x - h, y - v) as its upper-left corner, width of (width + 2h), and a height of (height + 2v). If negative values are supplied for h and v, the size of the Rectangle decreases accordingly. The grow method will check for integer overflow and underflow, but does not check whether the resulting values of width and height grow from negative to non-negative or shrink from non-negative to negative.",";java.awt.Rectangle.grow(int,int)",;1
gt,1,1,Returns a query expression that represents a "greater than" constraint on two values.,";javax.management.Query.gt(ValueExp,ValueExp)",;1
guessContentTypeFromName,1,1,"Tries to determine the content type of an object, based on the specified ""file"" component of a URL. This is a convenience method that can be used by subclasses that override the getContentType method.",;java.net.URLConnection.guessContentTypeFromName(String),;1
guessContentTypeFromStream,1,1,"Tries to determine the type of an input stream based on the characters at the beginning of the input stream. This method can be used by subclasses that override the getContentType method. Ideally, this routine would not be needed. But many http servers return the incorrect content type; in addition, there are many nonstandard extensions. Direct inspection of the bytes to determine the content type is often more accurate than believing the content type claimed by the http server.",;java.net.URLConnection.guessContentTypeFromStream(InputStream),;1
halt,1,1,"Forcibly terminates the currently running Java virtual machine. This method never returns normally. This method should be used with extreme caution. Unlike the exit method, this method does not cause shutdown hooks to be started and does not run uninvoked finalizers if finalization-on-exit has been enabled. If the shutdown sequence has already been initiated then this method does not wait for any running shutdown hooks or finalizers to finish their work.",;java.lang.Runtime.halt(int),;1
handleEndOfLineString,1,1,"This is invoked after the stream has been parsed, but before flush. eol will be one of , \r or \r, which ever is encountered the most in parsing the stream.",;javax.swing.text.html.HTMLEditorKit.ParserCallback.handleEndOfLineString(String),;1
handleExpandControlClick,1,1,"Messaged when the user clicks the particular row, this invokes toggleExpandState.",";javax.swing.plaf.basic.BasicTreeUI.handleExpandControlClick(TreePath,int,int)",;1
handleJustify,1,1,"Justify this layout. Overridden by subclassers to control justification (if there were subclassers, that is...) The layout will only justify if the paragraph attributes (from the source text, possibly defaulted by the layout attributes) indicate a non-zero justification ratio. The text will be justified to the indicated width. The current implementation also adjusts hanging punctuation and trailing whitespace to overhang the justification width. Once justified, the layout may not be rejustified. Some code may rely on immutablity of layouts. Subclassers should not call this directly, but instead should call getJustifiedLayout, which will call this method on a clone of this layout, preserving the original.",;java.awt.font.TextLayout.handleJustify(float),;1
handleMBeanUnregistration,1,1,Callback used by the Relation Service when a MBean referenced in a role is unregistered. The Relation Service will call this method to let the relation take action to reflect the impact of such unregistration. BEWARE. the user is not expected to call this method. Current implementation is to set the role with its current value (list of ObjectNames of referenced MBeans) without the unregistered one.,";javax.management.relation.RelationSupport.handleMBeanUnregistration(ObjectName,String)",;1
handleOption,1,1,Description copied from interface:JavaFileManager,";javax.tools.ForwardingJavaFileManager.handleOption(String,Iterator&lt;String&gt;)",;1
handleTitle,1,1,Called when an HTML title tag is encountered.,;javax.swing.text.html.parser.Parser.handleTitle(char[]),;1
has_no_active_member,1,1,"Returns true if the union has no active member, that is, the unions value consists solely of its discriminator because the discriminator has a value that is not listed as an explicit case label. Calling this operation on a union that has a default case returns false. Calling this operation on a union that uses the entire range of discriminator values for explicit case labels returns false.",;org.omg.DynamicAny._DynUnionStub.has_no_active_member(),;1
hasAlpha,1,1,Returns whether or not alpha is supported in this ColorModel.,;java.awt.image.ColorModel.hasAlpha(),;1
hasAnchoringBounds,1,1,"Queries the anchoring of region bounds for this matcher. This method returns true if this matcher uses anchoring bounds, false otherwise. See useAnchoringBounds for a description of anchoring bounds. By default, a matcher uses anchoring region boundaries.",;java.util.regex.Matcher.hasAnchoringBounds(),;1
hasAttribute,1,1,Description copied from interface:Element,;javax.imageio.metadata.IIOMetadataNode.hasAttribute(String),;1
hasAttributeNS,1,1,Equivalent to hasAttribute(localName).,";javax.imageio.metadata.IIOMetadataNode.hasAttributeNS(String,String)",;1
hasAttributes,1,1,Description copied from interface:Node,;javax.imageio.metadata.IIOMetadataNode.hasAttributes(),;1
hasBeenExpanded,1,1,Returns true if the node identified by the path has ever been expanded.,;javax.swing.JTree.hasBeenExpanded(TreePath),;1
hasBeenInvalidated,1,1,"Determines if this switch point has been invalidated yet. Discussion: Because of the one-way nature of invalidation, once a switch point begins to return true for hasBeenInvalidated, it will always do so in the future. On the other hand, a valid switch point visible to other threads may be invalidated at any moment, due to a request by another thread. Since invalidation is a global and immediate operation, the execution of this query, on a valid switchpoint, must be internally sequenced with any other threads that could cause invalidation. This query may therefore be expensive. The recommended way to build a boolean-valued method handle which queries the invalidation state of a switch point s is to call s.guardWithTest on constant true and false method handles.",;java.lang.invoke.SwitchPoint.hasBeenInvalidated(),;1
hasChanged,1,1,Tests if this object has changed.,;java.util.Observable.hasChanged(),;1
hasChildNodes,1,1,Returns true if this node has child nodes.,;javax.imageio.metadata.IIOMetadataNode.hasChildNodes(),;1
hasEvents,1,1,Returns true if this event collector contains at least one ValidationEvent.,;javax.xml.bind.util.ValidationEventCollector.hasEvents(),;1
hasExpired,1,1,Reports whether this HTTP cookie has expired or not.,;java.net.HttpCookie.hasExpired(),;1
hasFocus,1,1,"Returns true if this Component is the focus owner. This method is obsolete, and has been replaced by isFocusOwner().",;java.awt.Component.hasFocus(),;1
hasInitialContextFactoryBuilder,1,1,Determines whether an initial context factory builder has been set.,;javax.naming.spi.NamingManager.hasInitialContextFactoryBuilder(),;1
hasLayoutAttributes,1,1,Return true if this Font contains attributes that require extra layout processing.,;java.awt.Font.hasLayoutAttributes(),;1
hasLocation,1,1,Description copied from interface:JavaFileManager,;javax.tools.ForwardingJavaFileManager.hasLocation(JavaFileManager.Location),;1
hasMoreElements,1,1,Returns the same value as the hasMoreTokens method. It exists so that this class can implement the Enumeration interface.,;java.util.StringTokenizer.hasMoreElements(),;1
hasMoreTokens,1,1,"Tests if there are more tokens available from this tokenizer's string. If this method returns true, then a subsequent call to nextToken with no argument will successfully return a token.",;java.util.StringTokenizer.hasMoreTokens(),;1
hasName,1,1,Description copied from interface:XMLStreamReader,;javax.xml.stream.util.StreamReaderDelegate.hasName(),;1
hasNextBigDecimal,1,1,Returns true if the next token in this scanner's input can be interpreted as a BigDecimal using the nextBigDecimal() method. The scanner does not advance past any input.,;java.util.Scanner.hasNextBigDecimal(),;1
hasNextBoolean,1,1,Returns true if the next token in this scanner's input can be interpreted as a boolean value using a case insensitive pattern created from the string "true|false". The scanner does not advance past the input that matched.,;java.util.Scanner.hasNextBoolean(),;1
hasNextDouble,1,1,Returns true if the next token in this scanner's input can be interpreted as a double value using the nextDouble() method. The scanner does not advance past any input.,;java.util.Scanner.hasNextDouble(),;1
hasNextFloat,1,1,Returns true if the next token in this scanner's input can be interpreted as a float value using the nextFloat() method. The scanner does not advance past any input.,;java.util.Scanner.hasNextFloat(),;1
hasNextLine,1,1,Returns true if there is another line in the input of this scanner. This method may block while waiting for input. The scanner does not advance past any input.,;java.util.Scanner.hasNextLine(),;1
hasPrimitives,1,1,Reports if this type contains a primitive argument or return value. The return type void counts as a primitive.,;java.lang.invoke.MethodType.hasPrimitives(),;1
hasQueuedSubmissions,1,1,Returns true if there are any tasks submitted to this pool that have not yet begun executing.,;java.util.concurrent.ForkJoinPool.hasQueuedSubmissions(),;1
hasRaster,1,1,Returns true if this IIOImage stores a Raster rather than a RenderedImage.,;javax.imageio.IIOImage.hasRaster(),;1
hasRelation,1,1,Checks if there is a relation identified in Relation Service with given relation id.,;javax.management.relation.RelationService.hasRelation(String),;1
hasRemaining,1,1,Tells whether there are any elements between the current position and the limit.,;java.nio.Buffer.hasRemaining(),;1
hasService,1,1,"has a service, which may be delegated",;java.beans.beancontext.BeanContextServicesSupport.hasService(Class),;1
hasText,1,1,Description copied from interface:XMLStreamReader,;javax.xml.stream.util.StreamReaderDelegate.hasText(),;1
hasThumbnails,1,1,"Returns true if the given image has thumbnail preview images associated with it. If the format does not support thumbnails (readerSupportsThumbnails returns false), false will be returned regardless of whether an input source has been set or whether imageIndex is in bounds. The default implementation returns true if getNumThumbnails returns a value greater than 0.",;javax.imageio.ImageReader.hasThumbnails(int),;1
hasTileWriters,1,1,Returns whether or not any tile is checked out for writing. Semantically equivalent to (getWritableTileIndices() != null).,;java.awt.image.BufferedImage.hasTileWriters(),;1
hasTransparentBounds,1,1,"Queries the transparency of region bounds for this matcher. This method returns true if this matcher uses transparent bounds, false if it uses opaque bounds. See useTransparentBounds for a description of transparent and opaque bounds. By default, a matcher uses opaque region boundaries.",;java.util.regex.Matcher.hasTransparentBounds(),;1
hasWaitingConsumer,1,1,Description copied from interface:TransferQueue,;java.util.concurrent.LinkedTransferQueue.hasWaitingConsumer(),;1
hasWrappers,1,1,"Reports if this type contains a wrapper argument or return value. Wrappers are types which box primitive values, such as Integer. The reference type java.lang.Void counts as a wrapper, if it occurs as a return type.",;java.lang.invoke.MethodType.hasWrappers(),;1
height,1,1,"Returns a spring whose minimum, preferred, maximum and value properties are defined by the heights of the minimumSize, preferredSize, maximumSize and size properties of the supplied component. The returned spring is a 'wrapper' implementation whose methods call the appropriate size methods of the supplied component. The minimum, preferred, maximum and value properties of the returned spring therefore report the current state of the appropriate properties in the component and track them as they change.",;javax.swing.Spring.height(Component),;1
helpComplete,1,1,"If this task has not completed, attempts to process at most the given number of other unprocessed tasks for which this task is on the completion path, if any are known to exist.",;java.util.concurrent.CountedCompleter.helpComplete(int),;1
helpQuiesce,1,1,"Possibly executes tasks until the pool hosting the current task is quiescent. This method may be of use in designs in which many tasks are forked, but none are explicitly joined, instead executing them until all are processed.",;java.util.concurrent.ForkJoinTask.helpQuiesce(),;1
hidePopup,1,1,Causes the combo box to close its popup window.,;javax.swing.JComboBox.hidePopup(),;1
hierarchyChanged,1,1,Handles the hierarchyChanged event by invoking the hierarchyChanged methods on listener-a and listener-b.,;java.awt.AWTEventMulticaster.hierarchyChanged(HierarchyEvent),;1
highestLayer,1,1,Returns the highest layer value from all current children. Returns 0 if there are no children.,;javax.swing.JLayeredPane.highestLayer(),;1
highSurrogate,1,1,"Returns the leading surrogate (a high surrogate code unit) of the surrogate pair representing the specified supplementary character (Unicode code point) in the UTF-16 encoding. If the specified character is not a supplementary character, an unspecified char is returned. If isSupplementaryCodePoint(x) is true, then isHighSurrogate(highSurrogate(x)) and toCodePoint(highSurrogate(x), lowSurrogate(x)) == x are also always true.",;java.lang.Character.highSurrogate(int),;1
hit,1,1,"Checks whether or not the specified Shape intersects the specified Rectangle, which is in device space. If onStroke is false, this method checks whether or not the interior of the specified Shape intersects the specified Rectangle. If onStroke is true, this method checks whether or not the Stroke of the specified Shape outline intersects the specified Rectangle. The rendering attributes taken into account include the Clip, Transform, and Stroke attributes.",";java.awt.Graphics2D.hit(Rectangle,Shape,boolean)",;1
hitClip,1,1,"Returns true if the specified rectangular area might intersect the current clipping area. The coordinates of the specified rectangular area are in the user coordinate space and are relative to the coordinate system origin of this graphics context. This method may use an algorithm that calculates a result quickly but which sometimes might return true even if the specified rectangular area does not intersect the clipping area. The specific algorithm employed may thus trade off accuracy for speed, but it will never return false unless it can guarantee that the specified rectangular area does not intersect the current clipping area. The clipping area used by this method can represent the intersection of the user clip as specified through the clip methods of this graphics context as well as the clipping associated with the device or image bounds and window visibility.",";java.awt.Graphics.hitClip(int,int,int,int)",;1
hitEnd,1,1,"Returns true if the end of input was hit by the search engine in the last match operation performed by this matcher. When this method returns true, then it is possible that more input would have changed the result of the last search.",;java.util.regex.Matcher.hitEnd(),;1
hitToPoint,1,1,"Convert a hit to a point in standard coordinates. The point is on the baseline of the character at the leading or trailing edge of the character, as appropriate. If the path is broken at the side of the character represented by the hit, the point will be adjacent to the character.",";java.awt.font.TextLayout.hitToPoint(TextHitInfo,Point2D)",;1
holdsLock,1,1,Returns true if and only if the current thread holds the monitor lock on the specified object. This method is designed to allow a program to assert that the current thread already holds a specified lock: assert Thread.holdsLock(obj);,;java.lang.Thread.holdsLock(Object),;1
hostsEqual,1,1,Compares the host components of two URLs.,";java.net.URLStreamHandler.hostsEqual(URL,URL)",;1
HSBtoRGB,1,1,"Converts the components of a color, as specified by the HSB model, to an equivalent set of values for the default RGB model. The saturation and brightness components should be floating-point values between zero and one (numbers in the range 0.0-1.0). The hue component can be any floating-point number. The floor of this number is subtracted from it to create a fraction between 0 and 1. This fractional number is then multiplied by 360 to produce the hue angle in the HSB color model. The integer that is returned by HSBtoRGB encodes the value of a color in bits 0-23 of an integer value that is the same format used by the method getRGB. This integer can be supplied as an argument to the Color constructor that takes a single integer argument.",";java.awt.Color.HSBtoRGB(float,float,float)",;1
id,1,1,"Retrieves the RepositoryId globally identifying the type of this TypeCode object. The method id can be invoked on object reference, structure, union, enumeration, alias, exception, valuetype, boxed valuetype, native, and abstract interface type codes. Object reference, exception, valuetype, boxed valuetype, native, and abstract interface TypeCode objects always have a RepositoryId. Structure, union, enumeration, and alias TypeCode objects obtained from the Interface Repository or the method ORB.create_operation_list also always have a RepositoryId. If there is no RepositoryId, the method can return an empty string.",;org.omg.CORBA.TypeCode.id(),;1
identities,1,1,Deprecated.,;java.security.IdentityScope.identities(),;1
identity,1,1,Produces a method handle which returns its sole argument when invoked.,;java.lang.invoke.MethodHandles.identity(Class&lt;?&gt;),;1
identityEquals,1,1,Deprecated.,;java.security.Identity.identityEquals(Identity),;1
identityHashCode,1,1,"Returns the same hash code for the given object as would be returned by the default method hashCode(), whether or not the given object's class overrides hashCode(). The hash code for the null reference is zero.",;java.lang.System.identityHashCode(Object),;1
imageSubmit,1,1,This method is called to submit a form in response to a click on an image -- an &lt;INPUT&gt; form element of type "image".,;javax.swing.text.html.FormView.imageSubmit(String),;1
implAccept,1,1,Subclasses of ServerSocket use this method to override accept() to return their own subclass of socket. So a FooServerSocket will typically hand this method an empty FooSocket. On return from implAccept the FooSocket will be connected to a client.,;java.net.ServerSocket.implAccept(Socket),;1
implCloseSelectableChannel,1,1,"Closes this selectable channel. This method is invoked by the close method in order to perform the actual work of closing the channel. This method is only invoked if the channel has not yet been closed, and it is never invoked more than once. An implementation of this method must arrange for any other thread that is blocked in an I/O operation upon this channel to return immediately, either by throwing an exception or by returning normally.",;java.nio.channels.spi.AbstractSelectableChannel.implCloseSelectableChannel(),;1
implCloseSelector,1,1,"Closes this selector. This method is invoked by the close method in order to perform the actual work of closing the selector. This method is only invoked if the selector has not yet been closed, and it is never invoked more than once. An implementation of this method must arrange for any other thread that is blocked in a selection operation upon this selector to return immediately as if by invoking the wakeup method.",;java.nio.channels.spi.AbstractSelector.implCloseSelector(),;1
implConfigureBlocking,1,1,Adjusts this channel's blocking mode. This method is invoked by the configureBlocking method in order to perform the actual work of changing the blocking mode. This method is only invoked if the new mode is different from the current mode.,;java.nio.channels.spi.AbstractSelectableChannel.implConfigureBlocking(boolean),;1
importPreferences,1,1,"Imports all of the preferences represented by the XML document on the specified input stream. The document may represent user preferences or system preferences. If it represents user preferences, the preferences will be imported into the calling user's preference tree (even if they originally came from a different user's preference tree). If any of the preferences described by the document inhabit preference nodes that do not exist, the nodes will be created. The XML document must have the following DOCTYPE declaration: &lt;!DOCTYPE preferences SYSTEM ""http://java.sun.com/dtd/preferences.dtd""&gt; (This method is designed for use in conjunction with exportNode(OutputStream) and exportSubtree(OutputStream). This method is an exception to the general rule that the results of concurrently executing multiple methods in this class yields results equivalent to some serial execution. The method behaves as if implemented on top of the other public methods in this class, notably node(String) and put(String, String).",;java.util.prefs.Preferences.importPreferences(InputStream),;1
importStyleSheet,1,1,"Imports a style sheet from url. The resulting rules are directly added to the receiver. If you do not want the rules to become part of the receiver, create a new StyleSheet and use addStyleSheet to link it in.",;javax.swing.text.html.StyleSheet.importStyleSheet(URL),;1
in,1,1,Returns an expression constraining a value to be one of an explicit list.,";javax.management.Query.in(ValueExp,ValueExp[])",;1
inactive,1,1,"Informs the system that the object with the corresponding activation id is currently inactive. If the object is currently active, the object is ""unexported"" from the RMI runtime (only if there are no pending or in-progress calls) so the that it can no longer receive incoming calls. This call informs this VM's ActivationGroup that the object is inactive, that, in turn, informs its ActivationMonitor. If this call completes successfully, a subsequent activate request to the activator will cause the object to reactivate. The operation may still succeed if the object is considered active but has already unexported itself.",;java.rmi.activation.Activatable.inactive(ActivationID),;1
inactiveGroup,1,1,"This protected method is necessary for subclasses to make the inactiveGroup callback to the group's monitor. The call is simply forwarded to the group's ActivationMonitor. Also, the current group for the VM is set to null.",;java.rmi.activation.ActivationGroup.inactiveGroup(),;1
inactiveObject,1,1,"The group's inactiveObject method is called indirectly via a call to the Activatable.inactive method. A remote object implementation must call Activatable's inactive method when that object deactivates (the object deems that it is no longer active). If the object does not call Activatable.inactive when it deactivates, the object will never be garbage collected since the group keeps strong references to the objects it creates. The group's inactiveObject method unexports the remote object from the RMI runtime so that the object can no longer receive incoming RMI calls. An object will only be unexported if the object has no pending or executing calls. The subclass of ActivationGroup must override this method and unexport the object. After removing the object from the RMI runtime, the group must inform its ActivationMonitor (via the monitor's inactiveObject method) that the remote object is not currently active so that the remote object will be re-activated by the activator upon a subsequent activation request. This method simply informs the group's monitor that the object is inactive. It is up to the concrete subclass of ActivationGroup to fulfill the additional requirement of unexporting the object.",;java.rmi.activation.ActivationGroup.inactiveObject(ActivationID),;1
incarnate,1,1,"This operation is invoked by the POA whenever the POA receives a request for an object that is not currently active, assuming the POA has the USE_SERVANT_MANAGER and RETAIN policies.",";org.omg.PortableServer._ServantActivatorStub.incarnate(byte[],POA)",;1
inClass,1,1,Deprecated.This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.,;java.lang.SecurityManager.inClass(String),;1
inClassLoader,1,1,Deprecated.This type of security checking is not recommended. It is recommended that the checkPermission call be used instead.,;java.lang.SecurityManager.inClassLoader(),;1
include,1,1,Returns true if the specified entry should be shown; returns false if the entry should be hidden. The entry argument is valid only for the duration of the invocation. Using entry after the call returns results in undefined behavior.,";javax.swing.RowFilter.include(RowFilter.Entry&lt;?,?)",;1
increment,1,1,Equivalent to add(1).,;java.util.concurrent.atomic.LongAdder.increment(),;1
incrementAnimationIndex,1,1,"Sets the index of the current animation frame, to the next valid value, which results in the progress bar being repainted. The next valid value is, by default, the current animation index plus one. If the new value would be too large, this method sets the index to 0. Subclasses might need to override this method to ensure that the index does not go over the number of frames needed for the particular progress bar instance. This method is invoked by the default animation thread every X milliseconds, where X is specified by the ""ProgressBar.repaintInterval"" UI default.",;javax.swing.plaf.basic.BasicProgressBarUI.incrementAnimationIndex(),;1
incrIndent,1,1,Increments the indent level. If indenting would cause getIndentSpace() *getIndentLevel() to be &gt; than getLineLength() this will not cause an indent.,;javax.swing.text.AbstractWriter.incrIndent(),;1
indent,1,1,"Does indentation. The number of spaces written out is indent level times the space to map mapping. If the current line is empty, this will not make it so that the current line is still considered empty.",;javax.swing.text.AbstractWriter.indent(),;1
indexAtLocation,1,1,Returns the tab index corresponding to the tab whose bounds intersect the specified location. Returns -1 if no tab intersects the location.,";javax.swing.JTabbedPane.indexAtLocation(int,int)",;1
indexOfComponent,1,1,Returns the index of the tab for the specified component. Returns -1 if there is no tab for this component.,;javax.swing.JTabbedPane.indexOfComponent(Component),;1
indexOfSubList,1,1,"Returns the starting position of the first occurrence of the specified target list within the specified source list, or -1 if there is no such occurrence. More formally, returns the lowest index i such that source.subList(i, i+target.size()).equals(target), or -1 if there is no such index. (Returns -1 if target.size() &gt; source.size()) This implementation uses the ""brute force"" technique of scanning over the source list, looking for a match with the target at each location in turn.",";java.util.Collections.indexOfSubList(List&lt;?&gt;,List&lt;?&gt;)",;1
indexOfTabComponent,1,1,Returns the index of the tab for the specified tab component. Returns -1 if there is no tab for this tab component.,;javax.swing.JTabbedPane.indexOfTabComponent(Component),;1
inferBinaryName,1,1,Description copied from interface:JavaFileManager,";javax.tools.ForwardingJavaFileManager.inferBinaryName(JavaFileManager.Location,JavaFileObject)",;1
inFontTag,1,1,Returns true if we are currently in a &lt;font&gt; tag.,;javax.swing.text.html.MinimalHTMLWriter.inFontTag(),;1
inForkJoinPool,1,1,Returns true if the current thread is a ForkJoinWorkerThread executing as a ForkJoinPool computation.,;java.util.concurrent.ForkJoinTask.inForkJoinPool(),;1
inheritedChannel,1,1,"Returns the channel inherited from the entity that created this Java virtual machine. This method returns the channel obtained by invoking the inheritedChannel method of the system-wide default SelectorProvider object. In addition to the network-oriented channels described in inheritedChannel, this method may return other kinds of channels in the future.",;java.lang.System.inheritedChannel(),;1
inheritIO,1,1,"Sets the source and destination for subprocess standard I/O to be the same as those of the current Java process. This is a convenience method. An invocation of the form pb.inheritIO() behaves in exactly the same way as the invocation pb.redirectInput(Redirect.INHERIT) .redirectOutput(Redirect.INHERIT) .redirectError(Redirect.INHERIT) This gives behavior equivalent to most operating system command interpreters, or the standard C library function system().",;java.lang.ProcessBuilder.inheritIO(),;1
inHitRegion,1,1,"Returns true if the passed in location is a valid mouse location to start editing from. This is implemented to return false if x is &lt;= the width of the icon and icon gap displayed by the renderer. In other words this returns true if the user clicks over the text part displayed by the renderer, and false otherwise.",";javax.swing.tree.DefaultTreeCellEditor.inHitRegion(int,int)",;1
initCause,1,1,"Initializes the cause of this throwable to the specified value. (The cause is the throwable that caused this throwable to get thrown.) This method can be called at most once. It is generally called from within the constructor, or immediately after creating the throwable. If this throwable was created with Throwable(Throwable) or Throwable(String,Throwable), this method cannot be called even once. An example of using this method on a legacy throwable type without other support for setting the cause is: try { lowLevelOp(); } catch (LowLevelException le) { throw (HighLevelException) new HighLevelException().initCause(le); // Legacy constructor }",;java.lang.Throwable.initCause(Throwable),;1
initializeAutoscrolling,1,1,initialize autoscrolling,;java.awt.dnd.DropTarget.initializeAutoscrolling(Point),;1
initializeDesktopProperties,1,1,initializeDesktopProperties,;java.awt.Toolkit.initializeDesktopProperties(),;1
initialSubString,1,1,Returns a query expression that represents a matching constraint on a string argument. The value must start with the given literal string value.,";javax.management.Query.initialSubString(AttributeValueExp,StringValueExp)",;1
initialValue,1,1,"Returns the current thread's ""initial value"" for this thread-local variable. This method will be invoked the first time a thread accesses the variable with the get() method, unless the thread previously invoked the set(T) method, in which case the initialValue method will not be invoked for the thread. Normally, this method is invoked at most once per thread, but it may be invoked again in case of subsequent invocations of remove() followed by get(). This implementation simply returns null; if the programmer desires thread-local variables to have an initial value other than null, ThreadLocal must be subclassed, and this method overridden. Typically, an anonymous inner class will be used.",;java.lang.ThreadLocal.initialValue(),;1
initParams,1,1,"Performs the necessary internal configurations and initializations to allow any JDBC RowSet implementation to start using the standard facilities provided by a BaseRowSet instance. This method should be called after the RowSet object has been instantiated to correctly initialize all parameters. This method should never be called by an application, but is called from with a RowSet implementation extending this class.",;javax.sql.rowset.BaseRowSet.initParams(),;1
inject,1,1,JAX-WS runtimes calls this method to ask container to inject WebServiceContext on the endpoint instance. The WebServiceContext object uses thread-local information to return the correct information during the actual endpoint invocation regardless of how many threads are concurrently being used to serve requests.,;javax.xml.ws.spi.Invoker.inject(WebServiceContext),;1
inputMethodTextChanged,1,1,Handles the inputMethodTextChanged event by invoking the inputMethodTextChanged methods on listener-a and listener-b.,;java.awt.AWTEventMulticaster.inputMethodTextChanged(InputMethodEvent),;1
inRange,1,1,"This method determines whether the current element is in the range specified. When no range is specified, the range is initialized to be the entire document. inRange() returns true if the range specified intersects with the element's range.",;javax.swing.text.AbstractWriter.inRange(Element),;1
insert_Principal,1,1,Deprecated.Deprecated by CORBA 2.2.,;org.omg.CORBA.Any.insert_Principal(Principal),;1
insert_Streamable,1,1,Inserts the given Streamable object into this Any object's value field. This method allows the insertion of non-primitive IDL types.,;org.omg.CORBA.Any.insert_Streamable(Streamable),;1
insert_TypeCode,1,1,Inserts the given TypeCode object into this Any object's value field.,;org.omg.CORBA.Any.insert_TypeCode(TypeCode),;1
insertAfterEnd,1,1,"Inserts the HTML specified as a string after the the end of the given element. Consider the following structure (the elem parameter is in bold). &lt;body&gt; | &lt;div&gt; / \ &lt;p&gt; &lt;p&gt; Invoking insertAfterEnd(elem, ""&lt;ul&gt;&lt;li&gt;"") results in the following structure (new elements are in red). &lt;body&gt; / \ &lt;div&gt; &lt;ul&gt; / \ \ &lt;p&gt; &lt;p&gt; &lt;li&gt; Unlike the insertBeforeEnd method, new elements become siblings of the specified element, not children.If either elem or htmlText parameter is null, no changes are made to the document.For this to work correctly, the document must have an HTMLEditorKit.Parser set. This will be the case if the document was created from an HTMLEditorKit via the createDefaultDocument method.",";javax.swing.text.html.HTMLDocument.insertAfterEnd(Element,String)",;1
insertAfterStart,1,1,"Inserts the HTML specified as a string at the start of the element. Consider the following structure (the elem parameter is in bold). &lt;body&gt; | &lt;div&gt; / \ &lt;p&gt; &lt;p&gt; Invoking insertAfterStart(elem, ""&lt;ul&gt;&lt;li&gt;"") results in the following structure (new elements are in red). &lt;body&gt; | &lt;div&gt; / | \ &lt;ul&gt; &lt;p&gt; &lt;p&gt; / &lt;li&gt; Unlike the insertBeforeStart method, new elements become children of the specified element, not siblings.Parameter elem must not be a leaf element, otherwise an IllegalArgumentException is thrown. If either elem or htmlText parameter is null, no changes are made to the document.For this to work correctly, the document must have an HTMLEditorKit.Parser set. This will be the case if the document was created from an HTMLEditorKit via the createDefaultDocument method.",";javax.swing.text.html.HTMLDocument.insertAfterStart(Element,String)",;1
insertArguments,1,1,"Provides a target method handle with one or more bound arguments in advance of the method handle's invocation. The formal parameters to the target corresponding to the bound arguments are called bound parameters. Returns a new method handle which saves away the bound arguments. When it is invoked, it receives arguments for any non-bound parameters, binds the saved arguments to their corresponding parameters, and calls the original target. The type of the new method handle will drop the types for the bound parameters from the original target type, since the new method handle will no longer require those arguments to be supplied by its callers. Each given argument object must match the corresponding bound parameter type. If a bound parameter type is a primitive, the argument object must be a wrapper, and will be unboxed to produce the primitive value. The pos argument selects which parameters are to be bound. It may range between zero and N-L (inclusively), where N is the arity of the target method handle and L is the length of the values array.",";java.lang.invoke.MethodHandles.insertArguments(MethodHandle,int,Object...)",;1
insertAtBoundary,1,1,"This is invoked when inserting at a boundary. It determines the number of pops, and then the number of pushes that need to be performed, and then invokes insertHTML.",";javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction.insertAtBoundary(JEditorPane,HTMLDocument,int,Element,String,HTML.Tag,HTML.Tag)",;1
insertAtBoundry,1,1,"Deprecated.As of Java 2 platform v1.3, use insertAtBoundary",";javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction.insertAtBoundry(JEditorPane,HTMLDocument,int,Element,String,HTML.Tag,HTML.Tag)",;1
insertBefore,1,1,"Inserts the node newChild before the existing child node refChild. If refChild is null, insert newChild at the end of the list of children.",";javax.imageio.metadata.IIOMetadataNode.insertBefore(Node,Node)",;1
insertBeforeEnd,1,1,"Inserts the HTML specified as a string at the end of the element. If elem's children are leaves, and the character at a elem.getEndOffset() - 1 is a newline, this will insert before the newline so that there isn't text after the newline.Consider the following structure (the elem parameter is in bold). &lt;body&gt; | &lt;div&gt; / \ &lt;p&gt; &lt;p&gt; Invoking insertBeforeEnd(elem, ""&lt;ul&gt;&lt;li&gt;"") results in the following structure (new elements are in red). &lt;body&gt; | &lt;div&gt; / | \ &lt;p&gt; &lt;p&gt; &lt;ul&gt; \ &lt;li&gt; Unlike the insertAfterEnd method, new elements become children of the specified element, not siblings.Parameter elem must not be a leaf element, otherwise an IllegalArgumentException is thrown. If either elem or htmlText parameter is null, no changes are made to the document.For this to work correctly, the document must have an HTMLEditorKit.Parser set. This will be the case if the document was created from an HTMLEditorKit via the createDefaultDocument method.",";javax.swing.text.html.HTMLDocument.insertBeforeEnd(Element,String)",;1
insertBeforeStart,1,1,"Inserts the HTML specified as a string before the start of the given element. Consider the following structure (the elem parameter is in bold). &lt;body&gt; | &lt;div&gt; / \ &lt;p&gt; &lt;p&gt; Invoking insertBeforeStart(elem, ""&lt;ul&gt;&lt;li&gt;"") results in the following structure (new elements are in red). &lt;body&gt; / \ &lt;ul&gt; &lt;div&gt; / / \ &lt;li&gt; &lt;p&gt; &lt;p&gt; Unlike the insertAfterStart method, new elements become siblings of the specified element, not children.If either elem or htmlText parameter is null, no changes are made to the document.For this to work correctly, the document must have an HTMLEditorKit.Parser set. This will be the case if the document was created from an HTMLEditorKit via the createDefaultDocument method.",";javax.swing.text.html.HTMLDocument.insertBeforeStart(Element,String)",;1
insertComponent,1,1,"Inserts a component into the document as a replacement for the currently selected content. If there is no selection the component is effectively inserted at the current position of the caret. This is represented in the associated document as an attribute of one character of content. The component given is the actual component used by the JTextPane. Since components cannot be a child of more than one container, this method should not be used in situations where the model is shared by text components. The component is placed relative to the text baseline according to the value returned by Component.getAlignmentY. For Swing components this value can be conveniently set using the method JComponent.setAlignmentY. For example, setting a value of 0.75 will cause 75 percent of the component to be above the baseline, and 25 percent of the component to be below the baseline.",;javax.swing.JTextPane.insertComponent(Component),;1
insertEntries,1,1,"Adds a contiguous group of entries to this SizeSequence. Note that the values of start and length must satisfy the following conditions: (0 &lt;= start &lt; getSizes().length) AND (length &gt;= 0). If these conditions are not met, the behavior is unspecified and an exception may be thrown.",";javax.swing.SizeSequence.insertEntries(int,int,int)",;1
insertIcon,1,1,Inserts an icon into the document as a replacement for the currently selected content. If there is no selection the icon is effectively inserted at the current position of the caret. This is represented in the associated document as an attribute of one character of content.,;javax.swing.JTextPane.insertIcon(Icon),;1
insertIndexForLayer,1,1,Primitive method that determines the proper location to insert a new child based on layer and position requests.,";javax.swing.JLayeredPane.insertIndexForLayer(int,int)",;1
insertIndexInterval,1,1,"Insert length indices beginning before/after index. If the value at index is itself selected and the selection mode is not SINGLE_SELECTION, set all of the newly inserted items as selected. Otherwise leave them unselected. This method is typically called to sync the selection model with a corresponding change in the data model.",";javax.swing.DefaultListSelectionModel.insertIndexInterval(int,int,boolean)",;1
insertItemAt,1,1,Inserts an item into the item list at a given index. This method works only if the JComboBox uses a mutable data model.,";javax.swing.JComboBox.insertItemAt(E,int)",;1
insertNodeInto,1,1,Invoked this to insert newChild at location index in parents children. This will then message nodesWereInserted to create the appropriate event. This is the preferred way to add children as it will create the appropriate event.,";javax.swing.tree.DefaultTreeModel.insertNodeInto(MutableTreeNode,MutableTreeNode,int)",;1
insertProviderAt,1,1,"Adds a new provider, at a specified position. The position is the preference order in which providers are searched for requested algorithms. The position is 1-based, that is, 1 is most preferred, followed by 2, and so on. If the given provider is installed at the requested position, the provider that used to be at that position, and all providers with a position greater than position, are shifted up one position (towards the end of the list of installed providers). A provider cannot be added if it is already installed. If there is a security manager, the SecurityManager.checkSecurityAccess(java.lang.String) method is called with the ""insertProvider"" permission target name to see if it's ok to add a new provider. If this permission check is denied, checkSecurityAccess is called again with the ""insertProvider.""+provider.getName() permission target name. If both checks are denied, a SecurityException is thrown.",";java.security.Security.insertProviderAt(Provider,int)",;1
insertTab,1,1,"Inserts a new tab for the given component, at the given index, represented by the given title and/or icon, either of which may be null.",";javax.swing.JTabbedPane.insertTab(String,Icon,Component,String,int)",;1
insertText,1,1,"Deprecated.As of JDK version 1.1, replaced by insert(String, int).",";java.awt.TextArea.insertText(String,int)",;1
insets,1,1,"Deprecated.As of JDK version 1.1, replaced by getInsets().",;java.awt.Container.insets(),;1
installBorder,1,1,Convenience method for setting a component's border property with a value from the defaults. The border is only set if the border is null or an instance of UIResource.,";javax.swing.LookAndFeel.installBorder(JComponent,String)",;1
installChooserPanel,1,1,"Invoked when the panel is added to the chooser. If you override this, be sure to call super.",;javax.swing.colorchooser.AbstractColorChooserPanel.installChooserPanel(JColorChooser),;1
installColors,1,1,Convenience method for setting a component's foreground and background color properties with values from the defaults. The properties are only set if the current value is either null or a UIResource.,";javax.swing.LookAndFeel.installColors(JComponent,String,String)",;1
installColorsAndFont,1,1,"Convenience method for setting a component's foreground, background and font properties with values from the defaults. The properties are only set if the current value is either null or a UIResource.",";javax.swing.LookAndFeel.installColorsAndFont(JComponent,String,String,String)",;1
installComboBoxListeners,1,1,This method adds the necessary listeners to the JComboBox.,;javax.swing.plaf.basic.BasicComboPopup.installComboBoxListeners(),;1
installComboBoxModelListeners,1,1,Installs the listeners on the combo box model. Any listeners installed on the combo box model should be removed in uninstallComboBoxModelListeners.,;javax.swing.plaf.basic.BasicComboPopup.installComboBoxModelListeners(ComboBoxModel),;1
installedProviders,1,1,Returns a list of the installed file system providers. The first invocation of this method causes the default provider to be initialized (if not already initialized) and loads any other installed providers as described by the FileSystems class.,;java.nio.file.spi.FileSystemProvider.installedProviders(),;1
installListListeners,1,1,Adds the listeners to the list control.,;javax.swing.plaf.basic.BasicComboPopup.installListListeners(),;1
installNextButtonListeners,1,1,"Installs the necessary listeners on the next button, c, to update the JSpinner in response to a user gesture.",;javax.swing.plaf.basic.BasicSpinnerUI.installNextButtonListeners(Component),;1
installNonRolloverBorders,1,1,Installs non-rollover borders on all the child components of the JComponent. A non-rollover border is the border that is installed on the child component while it is in the toolbar. This is a convenience method to call setBorderToNonRollover for each child component.,;javax.swing.plaf.basic.BasicToolBarUI.installNonRolloverBorders(JComponent),;1
installNormalBorders,1,1,Installs normal borders on all the child components of the JComponent. A normal border is the original border that was installed on the child component before it was added to the toolbar. This is a convenience method to call setBorderNormal for each child component.,;javax.swing.plaf.basic.BasicToolBarUI.installNormalBorders(JComponent),;1
installPreviousButtonListeners,1,1,"Installs the necessary listeners on the previous button, c, to update the JSpinner in response to a user gesture.",;javax.swing.plaf.basic.BasicSpinnerUI.installPreviousButtonListeners(Component),;1
installProperty,1,1,"Convenience method for installing a property with the specified name and value on a component if that property has not already been set by the developer. This method is intended to be used by ui delegate instances that need to specify a default value for a property of primitive type (boolean, int, ..), but do not wish to override a value set by the client. Since primitive property values cannot be wrapped with the UIResource marker, this method uses private state to determine whether the property has been set by the client.",";javax.swing.LookAndFeel.installProperty(JComponent,String,Object)",;1
installRolloverBorders,1,1,Installs rollover borders on all the child components of the JComponent. This is a convenience method to call setBorderToRollover for each child component.,;javax.swing.plaf.basic.BasicToolBarUI.installRolloverBorders(JComponent),;1
instant,1,1,Gets the current instant of the clock. This returns an instant representing the current instant as defined by the clock.,;java.time.Clock.instant(),;1
instantiateChild,1,1,"The instantiateChild method is a convenience hook in BeanContext to simplify the task of instantiating a Bean, nested, into a BeanContext. The semantics of the beanName parameter are defined by java.beans.Beans.instantiate.",;java.beans.beancontext.BeanContextSupport.instantiateChild(String),;1
insureRowContinuity,1,1,"Makes sure the currently selected TreePaths are valid for the current selection mode. If the selection mode is CONTIGUOUS_TREE_SELECTION and a RowMapper exists, this will make sure all the rows are contiguous, that is, when sorted all the rows are in order with no gaps. If the selection isn't contiguous, the selection is reset to contain the first set, when sorted, of contiguous rows. If the selection mode is SINGLE_TREE_SELECTION and more than one TreePath is selected, the selection is reset to contain the first path currently selected.",;javax.swing.tree.DefaultTreeSelectionModel.insureRowContinuity(),;1
insureUniqueness,1,1,"This method is obsolete and its implementation is now a noop. It's still called by setSelectionPaths and addSelectionPaths, but only for backwards compatibility.",;javax.swing.tree.DefaultTreeSelectionModel.insureUniqueness(),;1
intBitsToFloat,1,1,"Returns the float value corresponding to a given bit representation. The argument is considered to be a representation of a floating-point value according to the IEEE 754 floating-point ""single format"" bit layout. If the argument is 0x7f800000, the result is positive infinity. If the argument is 0xff800000, the result is negative infinity. If the argument is any value in the range 0x7f800001 through 0x7fffffff or in the range 0xff800001 through 0xffffffff, the result is a NaN. No IEEE 754 floating-point operation provided by Java can distinguish between two NaN values of the same type with different bit patterns. Distinct values of NaN are only distinguishable by use of the Float.floatToRawIntBits method. In all other cases, let s, e, and m be three values that can be computed from the argument: int s = ((bits &gt;&gt; 31) == 0) ? 1 : -1; int e = ((bits &gt;&gt; 23) &amp; 0xff); int m = (e == 0) ? (bits &amp; 0x7fffff) &lt;&lt; 1 : (bits &amp; 0x7fffff) | 0x800000; Then the floating-point result equals the value of the mathematical expression s璺痬璺2e-150. Note that this method may not be able to return a float NaN with exactly same bit pattern as the int argument. IEEE 754 distinguishes between two kinds of NaNs, quiet NaNs and signaling NaNs. The differences between the two kinds of NaN are generally not visible in Java. Arithmetic operations on signaling NaNs turn them into quiet NaNs with a different, but often similar, bit pattern. However, on some processors merely copying a signaling NaN also performs that conversion. In particular, copying a signaling NaN to return it to the calling method may perform this conversion. So intBitsToFloat may not be able to return a float with a signaling NaN bit pattern. Consequently, for some int values, floatToRawIntBits(intBitsToFloat(start)) may not equal start. Moreover, which particular bit patterns represent signaling NaNs is platform dependent; although all NaN bit patterns, quiet or signaling, must be in the NaN range identified above.",;java.lang.Float.intBitsToFloat(int),;1
interfaceModifiers,1,1,Return an int value OR-ing together the source language modifiers that can be applied to an interface.,;java.lang.reflect.Modifier.interfaceModifiers(),;1
interfaceName,1,1,Sets the interfaceName as the wsam:InterfaceName element in the wsa:Metadata element. See 2.1 Referencing WSDL Metadata from an EPR for more details.,;javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder.interfaceName(QName),;1
intern,1,1,"Returns a canonical representation for the string object. A pool of strings, initially empty, is maintained privately by the class String. When the intern method is invoked, if the pool already contains a string equal to this String object as determined by the equals(Object) method, then the string from the pool is returned. Otherwise, this String object is added to the pool and a reference to this String object is returned. It follows that for any two strings s and t, s.intern() == t.intern() is true if and only if s.equals(t) is true. All literal strings and string-valued constant expressions are interned. String literals are defined in section 3.10.5 of the The Java閳 Language Specification.",;java.lang.String.intern(),;1
internalEntityDecl,1,1,Description copied from interface:DeclHandler,";org.xml.sax.ext.DefaultHandler2.internalEntityDecl(String,String)",;1
internalFrameActivated,1,1,Invoked when an internal frame is activated.,;javax.swing.event.InternalFrameAdapter.internalFrameActivated(InternalFrameEvent),;1
internalFrameClosed,1,1,Invoked when an internal frame has been closed.,;javax.swing.event.InternalFrameAdapter.internalFrameClosed(InternalFrameEvent),;1
internalFrameClosing,1,1,Invoked when an internal frame is in the process of being closed. The close operation can be overridden at this point.,;javax.swing.event.InternalFrameAdapter.internalFrameClosing(InternalFrameEvent),;1
internalFrameDeactivated,1,1,Invoked when an internal frame is de-activated.,;javax.swing.event.InternalFrameAdapter.internalFrameDeactivated(InternalFrameEvent),;1
internalFrameDeiconified,1,1,Invoked when an internal frame is de-iconified.,;javax.swing.event.InternalFrameAdapter.internalFrameDeiconified(InternalFrameEvent),;1
internalFrameIconified,1,1,Invoked when an internal frame is iconified.,;javax.swing.event.InternalFrameAdapter.internalFrameIconified(InternalFrameEvent),;1
internalFrameOpened,1,1,Invoked when an internal frame has been opened.,;javax.swing.event.InternalFrameAdapter.internalFrameOpened(InternalFrameEvent),;1
internalGet,1,1,Returns the value of the given calendar field. This method does not involve normalization or validation of the field value.,;java.util.Calendar.internalGet(int),;1
interrupted,1,1,"Tests whether the current thread has been interrupted. The interrupted status of the thread is cleared by this method. In other words, if this method were to be called twice in succession, the second call would return false (unless the current thread were interrupted again, after the first call had cleared its interrupted status and before the second call had examined it). A thread interruption ignored because a thread was not alive at the time of the interrupt will be reflected by this method returning false.",;java.lang.Thread.interrupted(),;1
intersection,1,1,"Computes the intersection of this Rectangle with the specified Rectangle. Returns a new Rectangle that represents the intersection of the two rectangles. If the two rectangles do not intersect, the result will be an empty rectangle.",;java.awt.Rectangle.intersection(Rectangle),;1
intKey,1,1,Returns the private integer key that the subclass instantiated this Key with.,;java.awt.RenderingHints.Key.intKey(),;1
invalidateAll,1,1,"Sets all of the given switch points into the invalid state. After this call executes, no thread will observe any of the switch points to be in a valid state. This operation is likely to be expensive and should be used sparingly. If possible, it should be buffered for batch processing on sets of switch points. If switchPoints contains a null element, a NullPointerException will be raised. In this case, some non-null elements in the array may be processed before the method returns abnormally. Which elements these are (if any) is implementation-dependent. Discussion: For performance reasons, invalidateAll is not a virtual method on a single switch point, but rather applies to a set of switch points. Some implementations may incur a large fixed overhead cost for processing one or more invalidation operations, but a small incremental cost for each additional invalidation. In any case, this operation is likely to be costly, since other threads may have to be somehow interrupted in order to make them notice the updated switch point state. However, it may be observed that a single call to invalidate several switch points has the same formal effect as many calls, each on just one of the switch points. Implementation Note: Simple implementations of SwitchPoint may use a private MutableCallSite to publish the state of a switch point. In such an implementation, the invalidateAll method can simply change the call site's target, and issue one call to synchronize all the private call sites.",;java.lang.invoke.SwitchPoint.invalidateAll(SwitchPoint[]),;1
invalidateFileCache,1,1,This method is used to interrupt file loading thread.,;javax.swing.plaf.basic.BasicDirectoryModel.invalidateFileCache(),;1
invert,1,1,"Sets this transform to the inverse of itself. The inverse transform Tx' of this transform Tx maps coordinates transformed by Tx back to their original coordinates. In other words, Tx'(Tx(p)) = p = Tx(Tx'(p)). If this transform maps all coordinates onto a point or a line then it will not have an inverse, since coordinates that do not lie on the destination point or line will not have an inverse mapping. The getDeterminant method can be used to determine if this transform has no inverse, in which case an exception will be thrown if the invert method is called.",;java.awt.geom.AffineTransform.invert(),;1
invokeExact,1,1,"Invokes the method handle, allowing any caller type descriptor, but requiring an exact type match. The symbolic type descriptor at the call site of invokeExact must exactly match this method handle's type. No conversions are allowed on arguments or return values. When this method is observed via the Core Reflection API, it will appear as a single native method, taking an object array and returning an object. If this native method is invoked directly via java.lang.reflect.Method.invoke, via JNI, or indirectly via Lookup.unreflect, it will throw an UnsupportedOperationException.",;java.lang.invoke.MethodHandle.invokeExact(Object...),;1
invoker,1,1,"Produces a special invoker method handle which can be used to invoke any method handle compatible with the given type, as if by invoke. The resulting invoker will have a type which is exactly equal to the desired type, except that it will accept an additional leading argument of type MethodHandle. Before invoking its target, if the target differs from the expected type, the invoker will apply reference casts as necessary and box, unbox, or widen primitive values, as if by asType. Similarly, the return value will be converted as necessary. If the target is a variable arity method handle, the required arity conversion will be made, again as if by asType. This method is equivalent to the following code (though it may be more efficient): publicLookup().findVirtual(MethodHandle.class, ""invoke"", type)Discussion: A general method type is one which mentions only Object arguments and return values. An invoker for such a type is capable of calling any method handle of the same arity as the general type. (Note: The invoker method is not available via the Core Reflection API. An attempt to call java.lang.reflect.Method.invoke on the declared invokeExact or invoke method will raise an UnsupportedOperationException.) This method throws no reflective or security exceptions.",;java.lang.invoke.MethodHandles.invoker(MethodType),;1
invokeWithArguments,1,1,"Performs a variable arity invocation, passing the arguments in the given array to the method handle, as if via an inexact invoke from a call site which mentions only the type Object, and whose arity is the length of the argument array. This method is also equivalent to the following code: invokeWithArguments(arguments.toArray()",;java.lang.invoke.MethodHandle.invokeWithArguments(List&lt;?&gt;),;1
is_a,1,1,Checks if the object reference is an instance of the given interface.,";org.omg.CORBA.portable.Delegate.is_a(Object,String)",;1
is_equivalent,1,1,Determines if the two object references are equivalent.,";org.omg.CORBA.portable.Delegate.is_equivalent(Object,Object)",;1
is_local,1,1,Returns true if this object is implemented by a local servant.,;org.omg.CORBA.portable.Delegate.is_local(Object),;1
is_null,1,1,Returns true if the DynValueCommon represents a null value type.,;org.omg.DynamicAny._DynValueStub.is_null(),;1
isAbstract,1,1,"Return true if the integer argument includes the abstract modifier, false otherwise.",;java.lang.reflect.Modifier.isAbstract(int),;1
isAccelerated,1,1,Returns true if the object whose capabilities are encapsulated in this ImageCapabilities can be or is accelerated.,;java.awt.ImageCapabilities.isAccelerated(),;1
isAcceptable,1,1,Tests whether this key's channel is ready to accept a new socket connection. An invocation of this method of the form k.isAcceptable() behaves in exactly the same way as the expression k.readyOps() &amp; OP_ACCEPT != 0 If this key's channel does not support socket-accept operations then this method always returns false.,;java.nio.channels.SelectionKey.isAcceptable(),;1
isAcceptAllFileFilterUsed,1,1,Returns whether the AcceptAll FileFilter is used.,;javax.swing.JFileChooser.isAcceptAllFileFilterUsed(),;1
isAccessible,1,1,Get the value of the accessible flag for this object.,;java.lang.reflect.AccessibleObject.isAccessible(),;1
isActionKey,1,1,Returns whether the key in this event is an "action" key. Typically an action key does not fire a unicode character and is not a modifier key.,;java.awt.event.KeyEvent.isActionKey(),;1
isAllocationValid,1,1,Are the allocations for the children still valid?,;javax.swing.text.BoxView.isAllocationValid(),;1
isAltDown,1,1,Returns whether or not the Alt modifier is down on this event.,;java.awt.event.InputEvent.isAltDown(),;1
isAltGraphDown,1,1,Returns whether or not the AltGraph modifier is down on this event.,;java.awt.event.InputEvent.isAltGraphDown(),;1
isAlwaysOnTop,1,1,Returns whether this window is an always-on-top window.,;java.awt.Window.isAlwaysOnTop(),;1
isAncestorOf,1,1,Checks if the component is contained in the component hierarchy of this container.,;java.awt.Container.isAncestorOf(Component),;1
isAnnotation,1,1,"Returns true if this Class object represents an annotation type. Note that if this method returns true, isInterface() would also return true, as all annotation types are also interfaces.",;java.lang.Class.isAnnotation(),;1
isAnonymousClass,1,1,Returns true if and only if the underlying class is an anonymous class.,;java.lang.Class.isAnonymousClass(),;1
isAntiAliased,1,1,Returns a boolean which indicates whether or not some form of antialiasing is specified by this FontRenderContext. Call getAntiAliasingHint() for the specific rendering hint value.,;java.awt.font.FontRenderContext.isAntiAliased(),;1
isAnyPolicyInhibited,1,1,Checks whether the any policy OID should be processed if it is included in a certificate.,;java.security.cert.PKIXParameters.isAnyPolicyInhibited(),;1
isAscending,1,1,Determines the sort order.,;javax.naming.ldap.SortKey.isAscending(),;1
isAssignableFrom,1,1,"Determines if the class or interface represented by this Class object is either the same as, or is a superclass or superinterface of, the class or interface represented by the specified Class parameter. It returns true if so; otherwise it returns false. If this Class object represents a primitive type, this method returns true if the specified Class parameter is exactly this Class object; otherwise it returns false. Specifically, this method tests whether the type represented by the specified Class parameter can be converted to the type represented by this Class object via an identity conversion or via a widening reference conversion. See The Java Language Specification, sections 5.1.1 and 5.1.4 , for details.",;java.lang.Class.isAssignableFrom(Class&lt;?&gt;),;1
isAttributeRequired,1,1,Description copied from interface:IIOMetadataFormat,";javax.imageio.metadata.IIOMetadataFormatImpl.isAttributeRequired(String,String)",;1
isAttributeSpecified,1,1,Description copied from interface:XMLStreamReader,;javax.xml.stream.util.StreamReaderDelegate.isAttributeSpecified(int),;1
isAuthorized,1,1,Determines whether the authentication id is allowed to act on behalf of the authorization id.,;javax.security.sasl.AuthorizeCallback.isAuthorized(),;1
isAutoDetecting,1,1,Tells whether or not this decoder implements an auto-detecting charset. The default implementation of this method always returns false; it should be overridden by auto-detecting decoders to return true.,;java.nio.charset.CharsetDecoder.isAutoDetecting(),;1
isAutoFormSubmission,1,1,Indicates whether an html form submission is processed automatically or only FormSubmitEvent is fired.,;javax.swing.text.html.HTMLEditorKit.isAutoFormSubmission(),;1
isAutoIncrement,1,1,"Retrieves whether a value stored in the designated column is automatically numbered, and thus readonly.",;javax.sql.rowset.RowSetMetaDataImpl.isAutoIncrement(int),;1
isAutoRequestFocus,1,1,"Returns whether this window should receive focus on subsequently being shown (with a call to setVisible(true)), or being moved to the front (with a call to toFront()). By default, the window has autoRequestFocus value of true.",;java.awt.Window.isAutoRequestFocus(),;1
isAutoWaitForIdle,1,1,Returns whether this Robot automatically invokes waitForIdle after generating an event.,;java.awt.Robot.isAutoWaitForIdle(),;1
isBackgroundSet,1,1,"Returns whether the background color has been explicitly set for this Component. If this method returns false, this Component is inheriting its background color from an ancestor.",;java.awt.Component.isBackgroundSet(),;1
isBackingStoreEnabled,1,1,"Deprecated.As of Java 2 platform v1.3, replaced by getScrollMode().",;javax.swing.JViewport.isBackingStoreEnabled(),;1
isBigEndian,1,1,"Indicates whether the audio data is stored in big-endian or little-endian byte order. If the sample size is not more than one byte, the return value is irrelevant.",;javax.sound.sampled.AudioFormat.isBigEndian(),;1
isBlock,1,1,"Returns true if this tag is a block tag, which is a tag used to add structure to a document.",;javax.swing.text.html.HTML.Tag.isBlock(),;1
isBlockTag,1,1,Determines if the HTML.Tag associated with the element is a block tag.,;javax.swing.text.html.HTMLWriter.isBlockTag(AttributeSet),;1
isBmpCodePoint,1,1,Determines whether the specified character (Unicode code point) is in the Basic Multilingual Plane (BMP). Such code points can be represented using a single char.,;java.lang.Character.isBmpCodePoint(int),;1
isBorderPaintedFlat,1,1,Gets the value of the borderPaintedFlat property.,;javax.swing.JCheckBox.isBorderPaintedFlat(),;1
isBoundary,1,1,Returns true if the specified character offset is a text boundary.,;java.text.BreakIterator.isBoundary(int),;1
isBridge,1,1,Returns true if this method is a bridge method; returns false otherwise.,;java.lang.reflect.Method.isBridge(),;1
isBroken,1,1,Queries if this barrier is in a broken state.,;java.util.concurrent.CyclicBarrier.isBroken(),;1
isCanceled,1,1,Returns true if the user hits the Cancel button in the progress dialog.,;javax.swing.ProgressMonitor.isCanceled(),;1
isCaseIgnored,1,1,Description copied from interface:Attributes,;javax.naming.directory.BasicAttributes.isCaseIgnored(),;1
isCaseSensitive,1,1,Indicates whether the case of the designated column's name matters.,;javax.sql.rowset.RowSetMetaDataImpl.isCaseSensitive(int),;1
isCellSelected,1,1,Returns true if the specified indices are in the valid range of rows and columns and the cell at the specified position is selected.,";javax.swing.JTable.isCellSelected(int,int)",;1
isCertificateEntry,1,1,"Returns true if the entry identified by the given alias was created by a call to setCertificateEntry, or created by a call to setEntry with a TrustedCertificateEntry.",;java.security.KeyStore.isCertificateEntry(String),;1
isCharacters,1,1,Description copied from interface:XMLStreamReader,;javax.xml.stream.util.StreamReaderDelegate.isCharacters(),;1
isCharsetDetected,1,1,"Tells whether or not this decoder has yet detected a charset(optional operation). If this decoder implements an auto-detecting charset then at a single point during a decoding operation this method may start returning true to indicate that a specific charset has been detected in the input byte sequence. Once this occurs, the detectedCharset method may be invoked to retrieve the detected charset. That this method returns false does not imply that no bytes have yet been decoded. Some auto-detecting decoders are capable of decoding some, or even all, of an input byte sequence without fixing on a particular charset. The default implementation of this method always throws an UnsupportedOperationException; it should be overridden by auto-detecting decoders to return true once the input charset has been determined.",;java.nio.charset.CharsetDecoder.isCharsetDetected(),;1
isClosable,1,1,Returns whether this JInternalFrame can be closed by some user action.,;javax.swing.JInternalFrame.isClosable(),;1
isCoalesce,1,1,Returns true if the Timer coalesces multiple pending action events.,;javax.swing.Timer.isCoalesce(),;1
isCoalescing,1,1,Indicates whether or not the factory is configured to produce parsers which converts CDATA nodes to Text nodes and appends it to the adjacent (if any) Text node.,;javax.xml.parsers.DocumentBuilderFactory.isCoalescing(),;1
isColumnSelected,1,1,"Returns true if the specified index is in the valid range of columns, and the column at that index is selected.",;javax.swing.JTable.isColumnSelected(int),;1
isCombining,1,1,Returns true if this is a combining glyph.,;java.awt.font.GlyphMetrics.isCombining(),;1
isCompatibleValue,1,1,Returns true if the specified object is a valid value for this Key.,;java.awt.RenderingHints.Key.isCompatibleValue(Object),;1
isCompatibleWith,1,1,Compare this package's specification version with a desired version. It returns true if this packages specification version number is greater than or equal to the desired version number. Version numbers are compared by sequentially comparing corresponding components of the desired and specification strings. Each component is converted as a decimal integer and the values compared. If the specification value is greater than the desired value true is returned. If the value is less false is returned. If the values are equal the period is skipped and the next pair of components is compared.,;java.lang.Package.isCompatibleWith(String),;1
isCompletedAbnormally,1,1,Returns true if this task threw an exception or was cancelled.,;java.util.concurrent.ForkJoinTask.isCompletedAbnormally(),;1
isCompletedExceptionally,1,1,"Returns true if this CompletableFuture completed exceptionally, in any way. Possible causes include cancellation, explicit invocation of completeExceptionally, and abrupt termination of a CompletionStage action.",;java.util.concurrent.CompletableFuture.isCompletedExceptionally(),;1
isCompletedNormally,1,1,Returns true if this task completed without throwing an exception and was not cancelled.,;java.util.concurrent.ForkJoinTask.isCompletedNormally(),;1
isCompletelyDirty,1,1,"Convenience method that returns true if aComponent will be completely painted during the next paintDirtyRegions(). If computing dirty regions is expensive for your component, use this method and avoid computing dirty region if it return true.",;javax.swing.RepaintManager.isCompletelyDirty(JComponent),;1
isComponent,1,1,Returns true if this is a component glyph.,;java.awt.font.GlyphMetrics.isComponent(),;1
isComponentPartOfCurrentMenu,1,1,Return true if c is part of the currently used menu,;javax.swing.MenuSelectionManager.isComponentPartOfCurrentMenu(Component),;1
isCompositionEnabled,1,1,"Determines whether the current input method is enabled for composition. An input method that is enabled for composition interprets incoming events for both composition and control purposes, while a disabled input method does not interpret events for composition.",;java.awt.im.InputContext.isCompositionEnabled(),;1
isComputerNode,1,1,"Used by UI classes to decide whether to display a special icon for a computer node, e.g. ""My Computer"" or a network server. The default implementation has no way of knowing, so always returns false.",;javax.swing.filechooser.FileSystemView.isComputerNode(File),;1
isConnectable,1,1,"Tests whether this key's channel has either finished, or failed to finish, its socket-connection operation. An invocation of this method of the form k.isConnectable() behaves in exactly the same way as the expression k.readyOps() &amp; OP_CONNECT != 0 If this key's channel does not support socket-connect operations then this method always returns false.",;java.nio.channels.SelectionKey.isConnectable(),;1
isConnectionPending,1,1,Tells whether or not a connection operation is in progress on this channel.,;java.nio.channels.SocketChannel.isConnectionPending(),;1
isConstrained,1,1,Attempted updates to "Constrained" properties will cause a "VetoableChange" event to get fired when the property is changed.,;java.beans.PropertyDescriptor.isConstrained(),;1
isContentAreaFilled,1,1,Gets the contentAreaFilled property.,;javax.swing.AbstractButton.isContentAreaFilled(),;1
isContextual,1,1,Returns a boolean indicating whether or not this shaper shapes contextually.,;java.awt.font.NumericShaper.isContextual(),;1
isControlDown,1,1,Returns whether or not the Control modifier is down on this event.,;java.awt.event.InputEvent.isControlDown(),;1
isCritical,1,1,Determines the control's criticality.,;javax.naming.ldap.BasicControl.isCritical(),;1
isCryptoAllowed,1,1,Returns whether the result blob has been generated successfully by this exemption mechanism. The method also makes sure that the key passed in is the same as the one this exemption mechanism used in initializing and generating phases.,;javax.crypto.ExemptionMechanism.isCryptoAllowed(Key),;1
isCS_sRGB,1,1,Returns true if the ColorSpace is CS_sRGB.,;java.awt.color.ColorSpace.isCS_sRGB(),;1
isCurrency,1,1,Indicates whether a value stored in the designated column is a cash value.,;javax.sql.rowset.RowSetMetaDataImpl.isCurrency(int),;1
isCurrent,1,1,Determines if this ticket is still current.,;javax.security.auth.kerberos.KerberosTicket.isCurrent(),;1
isCurrentServiceInvalidNow,1,1,"Reports if the current service is being forcibly revoked, in which case the references are now invalidated and unusable.",;java.beans.beancontext.BeanContextServiceRevokedEvent.isCurrentServiceInvalidNow(),;1
isCursorSet,1,1,"Returns whether the cursor has been explicitly set for this Component. If this method returns false, this Component is inheriting its cursor from an ancestor.",;java.awt.Component.isCursorSet(),;1
isCyclic,1,1,Returns true if the gradient cycles repeatedly between the two colors C1 and C2.,;java.awt.GradientPaint.isCyclic(),;1
isDataFlavorAvailable,1,1,Returns whether or not the current contents of this clipboard can be provided in the specified DataFlavor.,;java.awt.datatransfer.Clipboard.isDataFlavorAvailable(DataFlavor),;1
isDaylightSavings,1,1,"Checks if the specified instant is in daylight savings. This checks if the standard offset and the actual offset are the same for the specified instant. If they are not, it is assumed that daylight savings is in operation. This default implementation compares the actual and standard offsets.",;java.time.zone.ZoneRules.isDaylightSavings(Instant),;1
isDecimalSeparatorAlwaysShown,1,1,Allows you to get the behavior of the decimal separator with integers. (The decimal separator will always appear with decimals.) Example: Decimal ON: 12345 閳 12345.; OFF: 12345 閳 12345,;java.text.DecimalFormat.isDecimalSeparatorAlwaysShown(),;1
isDefault,1,1,"Returns true if this method is a default method; returns false otherwise. A default method is a public non-abstract instance method, that is, a non-static method with a body, declared in an interface type.",;java.lang.reflect.Method.isDefault(),;1
isDefaultButton,1,1,"Gets the value of the defaultButton property, which if true means that this button is the current default button for its JRootPane. Most look and feels render the default button differently, and may potentially provide bindings to access the default button.",;javax.swing.JButton.isDefaultButton(),;1
isDefaultCapable,1,1,Gets the value of the defaultCapable property.,;javax.swing.JButton.isDefaultCapable(),;1
isDefaultNamespace,1,1,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.,;javax.imageio.metadata.IIOMetadataNode.isDefaultNamespace(String),;1
isDefined,1,1,Tells whether a given attribute is defined.,;javax.swing.text.SimpleAttributeSet.isDefined(Object),;1
isDefinitelyWritable,1,1,Indicates whether a write operation on the designated column will definitely succeed.,;javax.sql.rowset.RowSetMetaDataImpl.isDefinitelyWritable(int),;1
isDelegated,1,1,Reports whether or not this class is a delegate of another.,;java.beans.beancontext.BeanContextChildSupport.isDelegated(),;1
isDescendant,1,1,"Returns true if aTreePath is a descendant of this TreePath. A TreePath P1 is a descendant of a TreePath P2 if P1 contains all of the elements that make up P2's path. For example, if this object has the path [a, b], and aTreePath has the path [a, b, c], then aTreePath is a descendant of this object. However, if aTreePath has the path [a], then it is not a descendant of this object. By this definition a TreePath is always considered a descendant of itself. That is, aTreePath.isDescendant(aTreePath) returns true.",;javax.swing.tree.TreePath.isDescendant(TreePath),;1
isDescendingFrom,1,1,Return true if a component a descends from a component b,";javax.swing.SwingUtilities.isDescendingFrom(Component,Component)",;1
isDesktopSupported,1,1,"Tests whether this class is supported on the current platform. If it's supported, use getDesktop() to retrieve an instance.",;java.awt.Desktop.isDesktopSupported(),;1
isDeviceSupported,1,1,Indicates whether the device provider supports the device represented by the specified device info object.,;javax.sound.midi.spi.MidiDeviceProvider.isDeviceSupported(MidiDevice.Info),;1
isDirectorySelected,1,1,Property to remember whether a directory is currently selected in the UI.,;javax.swing.plaf.basic.BasicFileChooserUI.isDirectorySelected(),;1
isDirectorySelectionEnabled,1,1,Convenience call that determines if directories are selectable based on the current file selection mode.,;javax.swing.JFileChooser.isDirectorySelectionEnabled(),;1
isDispatched,1,1,"Returns true if the event is dispatched or any exception is thrown while dispatching, false otherwise. The method should be called by a waiting thread that calls the notifier.wait() method. Since spurious wakeups are possible (as explained in Object.wait()), this method should be used in a waiting loop to ensure that the event got dispatched: while (!event.isDispatched()) { notifier.wait(); } If the waiting thread wakes up without dispatching the event, the isDispatched() method returns false, and the while loop executes once more, thus, causing the awakened thread to revert to the waiting mode. If the notifier.notifyAll() happens before the waiting thread enters the notifier.wait() method, the while loop ensures that the waiting thread will not enter the notifier.wait() method. Otherwise, there is no guarantee that the waiting thread will ever be woken from the wait.",;java.awt.event.InvocationEvent.isDispatched(),;1
isDispatchThread,1,1,Returns true if the calling thread is the current AWT EventQueue's dispatch thread. Use this method to ensure that a particular task is being executed (or not being) there. Note: use the invokeLater(java.lang.Runnable) or invokeAndWait(java.lang.Runnable) methods to execute a task in the current AWT EventQueue's dispatch thread.,;java.awt.EventQueue.isDispatchThread(),;1
isDisplayable,1,1,Determines whether this component is displayable. A component is displayable when it is connected to a native screen resource. A component is made displayable either when it is added to a displayable containment hierarchy or when its containment hierarchy is made displayable. A containment hierarchy is made displayable when its ancestor window is either packed or made visible. A component is made undisplayable either when it is removed from a displayable containment hierarchy or when its containment hierarchy is made undisplayable. A containment hierarchy is made undisplayable when its ancestor window is disposed.,;java.awt.Component.isDisplayable(),;1
isDisplayChangeSupported,1,1,"Returns true if this GraphicsDevice supports low-level display changes. On some platforms low-level display changes may only be allowed in full-screen exclusive mode (i.e., if isFullScreenSupported() returns true and the application has already entered full-screen mode using setFullScreenWindow(java.awt.Window)).",;java.awt.GraphicsDevice.isDisplayChangeSupported(),;1
isDisposed,1,1,"Returns a boolean indicating whether or not this StreamPrintService has been disposed. If this object has been disposed, will return true. Used by services and client applications to recognize streams to which no further data should be written.",;javax.print.StreamPrintService.isDisposed(),;1
isDomainPattern,1,1,Checks whether the object name is a pattern on the domain part.,;javax.management.ObjectName.isDomainPattern(),;1
isDoubleBufferingEnabled,1,1,"Returns true if this RepaintManager is double buffered. The default value for this property may vary from platform to platform. On platforms where native double buffering is supported in the AWT, the default value will be false to avoid unnecessary buffering in Swing. On platforms where native double buffering is not supported, the default value will be true.",;javax.swing.RepaintManager.isDoubleBufferingEnabled(),;1
isDragging,1,1,Returns true if the user is dragging the slider.,;javax.swing.plaf.basic.BasicSliderUI.isDragging(),;1
isDragImageSupported,1,1,Reports whether or not drag Image support is available on the underlying platform.,;java.awt.dnd.DragSource.isDragImageSupported(),;1
isDrawingBuffer,1,1,Returns the drawingBuffer value.,;javax.swing.DebugGraphics.isDrawingBuffer(),;1
isDrive,1,1,"Used by UI classes to decide whether to display a special icon for drives or partitions, e.g. a ""hard disk"" icon. The default implementation has no way of knowing, so always returns false.",;javax.swing.filechooser.FileSystemView.isDrive(File),;1
isDrop,1,1,Returns whether or not this TransferSupport represents a drop operation.,;javax.swing.TransferHandler.TransferSupport.isDrop(),;1
isDropLine,1,1,Tells if a DropLocation should be indicated by a line between nodes. This is meant for javax.swing.DropMode.INSERT and javax.swing.DropMode.ON_OR_INSERT drop modes.,;javax.swing.plaf.basic.BasicTreeUI.isDropLine(JTree.DropLocation),;1
isDuplicateToken,1,1,Tests if this is a duplicate of an earlier token.,;org.ietf.jgss.MessageProp.isDuplicateToken(),;1
isDynamic,1,1,"Returns true if successive renderings (that is, calls to createRendering() or createScaledRendering()) with the same arguments may produce different results. This method may be used to determine whether an existing rendering may be cached and reused. The CRIF's isDynamic method will be called.",;java.awt.image.renderable.RenderableImageOp.isDynamic(),;1
isDynamicLayoutActive,1,1,"Returns whether dynamic layout of Containers on resize is currently active (both set in program( isDynamicLayoutSet() ), and supported by the underlying operating system and/or window manager). If dynamic layout is currently inactive then Containers re-layout their components when resizing is completed. As a result the Component.validate() method will be invoked only once per resize. If dynamic layout is currently active then Containers re-layout their components on every native resize event and the validate() method will be invoked each time. The OS/WM support can be queried using the getDesktopProperty(""awt.dynamicLayoutSupported"") method.",;java.awt.Toolkit.isDynamicLayoutActive(),;1
isDynamicLayoutSet,1,1,"Returns whether the layout of Containers is validated dynamically during resizing, or statically, after resizing is complete. Note: this method returns the value that was set programmatically; it does not reflect support at the level of the operating system or window manager for dynamic layout on resizing, or the current operating system or window manager settings. The OS/WM support can be queried using getDesktopProperty(""awt.dynamicLayoutSupported"").",;java.awt.Toolkit.isDynamicLayoutSet(),;1
isEchoOn,1,1,Return whether the password should be displayed as it is being typed.,;javax.security.auth.callback.PasswordCallback.isEchoOn(),;1
isEditValid,1,1,"Returns true if the current value being edited is valid. The value of this is managed by the current AbstractFormatter, as such there is no public setter for it.",;javax.swing.JFormattedTextField.isEditValid(),;1
isEnabledAt,1,1,Returns whether or not the tab at index is currently enabled.,;javax.swing.JTabbedPane.isEnabledAt(int),;1
isEndElement,1,1,Description copied from interface:XMLStreamReader,;javax.xml.stream.util.StreamReaderDelegate.isEndElement(),;1
isEnqueued,1,1,"Tells whether or not this reference object has been enqueued, either by the program or by the garbage collector. If this reference object was not registered with a queue when it was created, then this method will always return false.",;java.lang.ref.Reference.isEnqueued(),;1
isEnum,1,1,Returns true if and only if this class was declared as an enum in the source code.,;java.lang.Class.isEnum(),;1
isEnumConstant,1,1,Returns true if this field represents an element of an enumerated type; returns false otherwise.,;java.lang.reflect.Field.isEnumConstant(),;1
isEqualNode,1,1,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.,;javax.imageio.metadata.IIOMetadataNode.isEqualNode(Node),;1
isError,1,1,Tells whether or not this object describes an error condition.,;java.nio.charset.CoderResult.isError(),;1
isErrorAny,1,1,Checks the error status of all of the images.,;java.awt.MediaTracker.isErrorAny(),;1
isErrorID,1,1,Checks the error status of all of the images tracked by this media tracker with the specified identifier.,;java.awt.MediaTracker.isErrorID(int),;1
isEventDispatchThread,1,1,Returns true if the current thread is an AWT event dispatching thread. As of 1.3 this method is just a cover for java.awt.EventQueue.isDispatchThread().,;javax.swing.SwingUtilities.isEventDispatchThread(),;1
isExecutable,1,1,"Tests whether a file is executable. This method checks that a file exists and that this Java virtual machine has appropriate privileges to execute the file. The semantics may differ when checking access to a directory. For example, on UNIX systems, checking for execute access checks that the Java virtual machine has permission to search the directory in order to access file or subdirectories. Depending on the implementation, this method may require to read file permissions, access control lists, or other file attributes in order to check the effective access to the file. Consequently, this method may not be atomic with respect to other file system operations. Note that the result of this method is immediately outdated, there is no guarantee that a subsequent attempt to execute the file will succeed (or even that it will access the same file). Care should be taken when using this method in security sensitive applications.",;java.nio.file.Files.isExecutable(Path),;1
isExpandEntityReferences,1,1,Indicates whether or not the factory is configured to produce parsers which expand entity reference nodes.,;javax.xml.parsers.DocumentBuilderFactory.isExpandEntityReferences(),;1
isExpert,1,1,The "expert" flag is used to distinguish between those features that are intended for expert users from those that are intended for normal users.,;java.beans.FeatureDescriptor.isExpert(),;1
isExplicitPolicyRequired,1,1,"Checks if explicit policy is required. If this flag is true, an acceptable policy needs to be explicitly identified in every certificate. By default, the ExplicitPolicyRequired flag is false.",;java.security.cert.PKIXParameters.isExplicitPolicyRequired(),;1
isFile,1,1,"Tests whether the file denoted by this abstract pathname is a normal file. A file is normal if it is not a directory and, in addition, satisfies other system-dependent criteria. Any non-directory file created by a Java application is guaranteed to be a normal file. Where it is required to distinguish an I/O exception from the case that the file is not a normal file, or where several attributes of the same file are required at the same time, then the Files.readAttributes method may be used.",;java.io.File.isFile(),;1
isFileHidingEnabled,1,1,"Returns true if hidden files are not shown in the file chooser; otherwise, returns false.",;javax.swing.JFileChooser.isFileHidingEnabled(),;1
isFileSelectionEnabled,1,1,Convenience call that determines if files are selectable based on the current file selection mode.,;javax.swing.JFileChooser.isFileSelectionEnabled(),;1
isFileSystem,1,1,Checks if f represents a real directory or file as opposed to a special folder such as "Desktop". Used by UI classes to decide if a folder is selectable when doing directory choosing.,;javax.swing.filechooser.FileSystemView.isFileSystem(File),;1
isFileSystemRoot,1,1,"Is dir the root of a tree in the file system, such as a drive or partition. Example: Returns true for ""C:\"" on Windows 98.",;javax.swing.filechooser.FileSystemView.isFileSystemRoot(File),;1
isFinal,1,1,"Return true if the integer argument includes the final modifier, false otherwise.",;java.lang.reflect.Modifier.isFinal(int),;1
isFixed,1,1,"Is the value range fixed and fully known. For example, the ISO day-of-month runs from 1 to between 28 and 31. Since there is uncertainty about the maximum value, the range is not fixed. However, for the month of January, the range is always 1 to 31, thus it is fixed.",;java.time.temporal.ValueRange.isFixed(),;1
isFixedOffset,1,1,"Checks of the zone rules are fixed, such that the offset never varies.",;java.time.zone.ZoneRules.isFixedOffset(),;1
isFlavorJavaFileListType,1,1,Returns true if the DataFlavor specified represents a list of file objects.,;java.awt.datatransfer.DataFlavor.isFlavorJavaFileListType(),;1
isFlavorRemoteObjectType,1,1,Returns true if the DataFlavor specified represents a remote object.,;java.awt.datatransfer.DataFlavor.isFlavorRemoteObjectType(),;1
isFlavorSerializedObjectType,1,1,Returns true if the DataFlavor specified represents a serialized object.,;java.awt.datatransfer.DataFlavor.isFlavorSerializedObjectType(),;1
isFlavorTextType,1,1,"Returns whether this DataFlavor is a valid text flavor for this implementation of the Java platform. Only flavors equivalent to DataFlavor.stringFlavor and DataFlavors with a primary MIME type of ""text"" can be valid text flavors. If this flavor supports the charset parameter, it must be equivalent to DataFlavor.stringFlavor, or its representation must be java.io.Reader, java.lang.String, java.nio.CharBuffer, [C, java.io.InputStream, java.nio.ByteBuffer, or [B. If the representation is java.io.InputStream, java.nio.ByteBuffer, or [B, then this flavor's charset parameter must be supported by this implementation of the Java platform. If a charset is not specified, then the platform default charset, which is always supported, is assumed. If this flavor does not support the charset parameter, its representation must be java.io.InputStream, java.nio.ByteBuffer, or [B. See selectBestTextFlavor for a list of text flavors which support the charset parameter.",;java.awt.datatransfer.DataFlavor.isFlavorTextType(),;1
isFloatable,1,1,Gets the floatable property.,;javax.swing.JToolBar.isFloatable(),;1
isFloppyDrive,1,1,"Used by UI classes to decide whether to display a special icon for a floppy disk. Implies isDrive(dir). The default implementation has no way of knowing, so always returns false.",;javax.swing.filechooser.FileSystemView.isFloppyDrive(File),;1
isFocusable,1,1,Returns whether this Component can be focused.,;java.awt.Component.isFocusable(),;1
isFocusableWindow,1,1,"Returns whether this Window can become the focused Window, that is, whether this Window or any of its subcomponents can become the focus owner. For a Frame or Dialog to be focusable, its focusable Window state must be set to true. For a Window which is not a Frame or Dialog to be focusable, its focusable Window state must be set to true, its nearest owning Frame or Dialog must be showing on the screen, and it must contain at least one Component in its focus traversal cycle. If any of these conditions is not met, then neither this Window nor any of its subcomponents can become the focus owner.",;java.awt.Window.isFocusableWindow(),;1
isFocused,1,1,"Returns whether this Window is focused. If there exists a focus owner, the focused Window is the Window that is, or contains, that focus owner. If there is no focus owner, then no Window is focused. If the focused Window is a Frame or a Dialog it is also the active Window. Otherwise, the active Window is the first Frame or Dialog that is an owner of the focused Window.",;java.awt.Window.isFocused(),;1
isFocusManagerEnabled,1,1,"Deprecated.As of 1.4, replaced by KeyboardFocusManager.getDefaultFocusTraversalPolicy()",;javax.swing.FocusManager.isFocusManagerEnabled(),;1
isFocusOwner,1,1,Returns true if this Component is the focus owner.,;java.awt.Component.isFocusOwner(),;1
isFocusPainted,1,1,Gets the paintFocus property.,;javax.swing.AbstractButton.isFocusPainted(),;1
isFocusTraversalPolicyProvider,1,1,Returns whether this container provides focus traversal policy. If this property is set to true then when keyboard focus manager searches container hierarchy for focus traversal policy and encounters this container before any other container with this property as true or focus cycle roots then its focus traversal policy will be used instead of focus cycle root's policy.,;java.awt.Container.isFocusTraversalPolicyProvider(),;1
isFocusTraversalPolicySet,1,1,"Returns whether the focus traversal policy has been explicitly set for this Container. If this method returns false, this Container will inherit its focus traversal policy from an ancestor.",;java.awt.Container.isFocusTraversalPolicySet(),;1
isFontSet,1,1,"Returns whether the font has been explicitly set for this Component. If this method returns false, this Component is inheriting its font from an ancestor.",;java.awt.Component.isFontSet(),;1
isForegroundSet,1,1,"Returns whether the foreground color has been explicitly set for this Component. If this method returns false, this Component is inheriting its foreground color from an ancestor.",;java.awt.Component.isForegroundSet(),;1
isFormatLossless,1,1,Returns true if the format that this writer outputs preserves pixel data bit-accurately. The default implementation returns true.,;javax.imageio.spi.ImageWriterSpi.isFormatLossless(),;1
isFormatSupported,1,1,Indicates whether this data line supports a particular audio format. The default implementation of this method simply returns true if the specified format matches any of the supported formats.,;javax.sound.sampled.DataLine.Info.isFormatSupported(AudioFormat),;1
isFormattedOutput,1,1,Convenience method for getting the formatted output flag.,;javax.xml.bind.helpers.AbstractMarshallerImpl.isFormattedOutput(),;1
isForwardable,1,1,Determines if this ticket is forwardable.,;javax.security.auth.kerberos.KerberosTicket.isForwardable(),;1
isForwardCheckingSupported,1,1,Indicates if forward checking is supported. Forward checking refers to the ability of the PKIXCertPathChecker to perform its checks when certificates are presented to the check method in the forward direction (from target to most-trusted CA).,;java.security.cert.PKIXCertPathChecker.isForwardCheckingSupported(),;1
isForwarded,1,1,Determines if this ticket had been forwarded or was issued based on authentication involving a forwarded ticket-granting ticket.,;javax.security.auth.kerberos.KerberosTicket.isForwarded(),;1
isFragment,1,1,Convenience method for getting the fragment flag.,;javax.xml.bind.helpers.AbstractMarshallerImpl.isFragment(),;1
isFullScreenSupported,1,1,"Returns true if this GraphicsDevice supports full-screen exclusive mode. If a SecurityManager is installed, its checkPermission method will be called with AWTPermission(""fullScreenExclusive""). isFullScreenSupported returns true only if that permission is granted.",;java.awt.GraphicsDevice.isFullScreenSupported(),;1
isGap,1,1,Does this transition represent a gap in the local time-line. Gaps occur where there are local date-times that simply do not exist. An example would be when the offset changes from +01:00 to +02:00. This might be described as 'the clocks will move forward one hour tonight at 1am'.,;java.time.zone.ZoneOffsetTransition.isGap(),;1
isGapToken,1,1,"Tests if an expected token was not received, i.e., one or more predecessor tokens have not yet been successfully processed.",;org.ietf.jgss.MessageProp.isGapToken(),;1
isGeneral,1,1,Returns true if it is a general entity.,;javax.swing.text.html.parser.Entity.isGeneral(),;1
isGlobalScope,1,1,Returns true iff this xml element declaration is global.,;javax.xml.bind.JAXBElement.isGlobalScope(),;1
isGraphicsConfigSupported,1,1,Returns a boolean indicating whether or not the specified GraphicsConfiguration can be used to create a drawing surface that supports the indicated features.,;java.awt.GraphicsConfigTemplate.isGraphicsConfigSupported(GraphicsConfiguration),;1
isGroupingUsed,1,1,"Returns true if grouping is used in this format. For example, in the English locale, with grouping on, the number 1234567 might be formatted as ""1,234,567"". The grouping separator as well as the size of each group is locale dependant and is determined by sub-classes of NumberFormat.",;java.text.NumberFormat.isGroupingUsed(),;1
isGuiAvailable,1,1,Determines whether beans can assume a GUI is available.,;java.beans.Beans.isGuiAvailable(),;1
isHeadless,1,1,"Tests whether or not a display, keyboard, and mouse can be supported in this environment. If this method returns true, a HeadlessException is thrown from areas of the Toolkit and GraphicsEnvironment that are dependent on a display, keyboard, or mouse.",;java.awt.GraphicsEnvironment.isHeadless(),;1
isHeadlessInstance,1,1,"Returns whether or not a display, keyboard, and mouse can be supported in this graphics environment. If this returns true, HeadlessException will be thrown from areas of the graphics environment that are dependent on a display, keyboard, or mouse.",;java.awt.GraphicsEnvironment.isHeadlessInstance(),;1
isHiddenFile,1,1,Returns whether a file is hidden or not.,;javax.swing.filechooser.FileSystemView.isHiddenFile(File),;1
isHighSurrogate,1,1,"Determines if the given char value is a Unicode high-surrogate code unit (also known as leading-surrogate code unit). Such values do not represent characters by themselves, but are used in the representation of supplementary characters in the UTF-16 encoding.",;java.lang.Character.isHighSurrogate(char),;1
isHorizontal,1,1,"Are lines horizontal? This will return true for horizontal, left-to-right writing systems such as Roman.",;java.awt.ComponentOrientation.isHorizontal(),;1
isHTMLString,1,1,Check the given string to see if it should trigger the html rendering logic in a non-text component that supports html rendering.,;javax.swing.plaf.basic.BasicHTML.isHTMLString(String),;1
isHttpOnly,1,1,"Returns true if this cookie contains the HttpOnly attribute. This means that the cookie should not be accessible to scripting engines, like javascript.",;java.net.HttpCookie.isHttpOnly(),;1
isIcon,1,1,Returns whether the JInternalFrame is currently iconified.,;javax.swing.JInternalFrame.isIcon(),;1
isIconifiable,1,1,"Gets the iconable property, which by default is false.",;javax.swing.JInternalFrame.isIconifiable(),;1
isIdAttribute,1,1,"Returns true if the specified attribute is determined to be ID. Exacly how an attribute is ""determined to be ID"" is up to the schema language. In case of W3C XML Schema, this means that the actual type of the attribute is the built-in ID type or its derived type. A DocumentBuilder uses this information to properly implement Attr.isId(). The method may only be called by the startElement event of the ContentHandler that the application sets to the ValidatorHandler.",;javax.xml.validation.TypeInfoProvider.isIdAttribute(int),;1
isIdeographic,1,1,"Determines if the specified character (Unicode code point) is a CJKV (Chinese, Japanese, Korean and Vietnamese) ideograph, as defined by the Unicode Standard.",;java.lang.Character.isIdeographic(int),;1
isIgnoringComments,1,1,Indicates whether or not the factory is configured to produce parsers which ignores comments.,;javax.xml.parsers.DocumentBuilderFactory.isIgnoringComments(),;1
isIgnoringElementContentWhitespace,1,1,Indicates whether or not the factory is configured to produce parsers which ignore ignorable whitespace in element content.,;javax.xml.parsers.DocumentBuilderFactory.isIgnoringElementContentWhitespace(),;1
isIgnoringMetadata,1,1,Returns true if the current input source has been marked as allowing metadata to be ignored by passing true as the ignoreMetadata argument to the setInput method.,;javax.imageio.ImageReader.isIgnoringMetadata(),;1
isImageAutoSize,1,1,Returns the value of the auto-size property.,;java.awt.TrayIcon.isImageAutoSize(),;1
isImageTiled,1,1,"Returns true if the image is organized into tiles, that is, equal-sized non-overlapping rectangles. A reader plug-in may choose whether or not to expose tiling that is present in the image as it is stored. It may even choose to advertise tiling when none is explicitly present. In general, tiling should only be advertised if there is some advantage (in speed or space) to accessing individual tiles. Regardless of whether the reader advertises tiling, it must be capable of reading an arbitrary rectangular region specified in an ImageReadParam. A reader for which all images are guaranteed to be tiled, or are guaranteed not to be tiled, may return true or false respectively without accessing any image data. In such cases, it is not necessary to throw an exception even if no input source has been set or the image index is out of bounds. The default implementation just returns false.",;javax.imageio.ImageReader.isImageTiled(int),;1
isImplicit,1,1,Returns true if this parameter is implicitly declared in source code; returns false otherwise.,;java.lang.reflect.Parameter.isImplicit(),;1
isInboundDone,1,1,"Returns whether unwrap(ByteBuffer, ByteBuffer) will accept any more inbound data messages.",;javax.net.ssl.SSLEngine.isInboundDone(),;1
isInDefaultEventSet,1,1,Reports if an event set is in the "default" set.,;java.beans.EventSetDescriptor.isInDefaultEventSet(),;1
isIndeterminate,1,1,Returns the value of the indeterminate property.,;javax.swing.JProgressBar.isIndeterminate(),;1
isIndexSelected,1,1,Determines if the specified item in this scrolling list is selected.,;java.awt.List.isIndexSelected(int),;1
isInherited,1,1,Indicates if the attribute should be inherited from the parent or not.,;javax.swing.text.html.CSS.Attribute.isInherited(),;1
isInitial,1,1,"Determines if this ticket was issued using the Kerberos AS-Exchange protocol, and not issued based on some ticket-granting ticket.",;javax.security.auth.kerberos.KerberosTicket.isInitial(),;1
isInitialized,1,1,"Returns true if this object has been initialized, false otherwise.",;javax.annotation.processing.AbstractProcessor.isInitialized(),;1
isInNative,1,1,Tests if the thread associated with this ThreadInfo is executing native code via the Java Native Interface (JNI). The JNI native code does not include the virtual machine support code or the compiled native code generated by the virtual machine.,;java.lang.management.ThreadInfo.isInNative(),;1
isInProgress,1,1,"Returns true if this edit is in progress--that is, it has not received end. This generally means that edits are still being added to it.",;javax.swing.undo.CompoundEdit.isInProgress(),;1
isInputShutdown,1,1,Returns whether the read-half of the socket connection is closed.,;java.net.Socket.isInputShutdown(),;1
isInRelationService,1,1,Returns an internal flag specifying if the object is still handled by the Relation Service.,;javax.management.relation.RelationSupport.isInRelationService(),;1
isInsert,1,1,Returns whether or not this location represents an insert location.,;javax.swing.JList.DropLocation.isInsert(),;1
isInsertColumn,1,1,Returns whether or not this location represents an insert of a column.,;javax.swing.JTable.DropLocation.isInsertColumn(),;1
isInsertRow,1,1,Returns whether or not this location represents an insert of a row.,;javax.swing.JTable.DropLocation.isInsertRow(),;1
isInstance,1,1,"Determines if the specified Object is assignment-compatible with the object represented by this Class. This method is the dynamic equivalent of the Java language instanceof operator. The method returns true if the specified Object argument is non-null and can be cast to the reference type represented by this Class object without raising a ClassCastException. It returns false otherwise. Specifically, if this Class object represents a declared class, this method returns true if the specified Object argument is an instance of the represented class (or of any of its subclasses); it returns false otherwise. If this Class object represents an array class, this method returns true if the specified Object argument can be converted to an object of the array class by an identity conversion or by a widening reference conversion; it returns false otherwise. If this Class object represents an interface, this method returns true if the class or any superclass of the specified Object argument implements this interface; it returns false otherwise. If this Class object represents a primitive type, this method returns false.",;java.lang.Class.isInstance(Object),;1
isInState,1,1,"Gets whether the specified JComponent is in the custom state represented by this class. This is an extremely performance sensitive loop. Please take proper precautions to ensure that it executes quickly.Nimbus uses this method to help determine what state a JComponent is in. For example, a custom State could exist for JProgressBar such that it would return true when the progress bar is indeterminate. Such an implementation of this method would simply be: return c.isIndeterminate();",;javax.swing.plaf.nimbus.State.isInState(T),;1
isInterrupted,1,1,Tests whether this thread has been interrupted. The interrupted status of the thread is unaffected by this method. A thread interruption ignored because a thread was not alive at the time of the interrupt will be reflected by this method returning false.,;java.lang.Thread.isInterrupted(),;1
isIntValue,1,1,"Checks if all values in the range fit in an int. This checks that all valid values are within the bounds of an int. For example, the ISO month-of-year has values from 1 to 12, which fits in an int. By comparison, ISO nano-of-day runs from 1 to 86,400,000,000,000 which does not fit in an int. This implementation uses getMinimum() and getMaximum().",;java.time.temporal.ValueRange.isIntValue(),;1
isIPv4CompatibleAddress,1,1,Utility routine to check if the InetAddress is an IPv4 compatible IPv6 address.,;java.net.Inet6Address.isIPv4CompatibleAddress(),;1
isIs,1,1,Indicates if this attribute has an "is" getter.,;javax.management.MBeanAttributeInfo.isIs(),;1
isJavaLetter,1,1,Deprecated.Replaced by isJavaIdentifierStart(char).,;java.lang.Character.isJavaLetter(char),;1
isJavaLetterOrDigit,1,1,Deprecated.Replaced by isJavaIdentifierPart(char).,;java.lang.Character.isJavaLetterOrDigit(char),;1
isJavaMIMEType,1,1,Returns whether the specified String is an encoded Java MIME type.,;java.awt.datatransfer.SystemFlavorMap.isJavaMIMEType(String),;1
isKeyEntry,1,1,"Returns true if the entry identified by the given alias was created by a call to setKeyEntry, or created by a call to setEntry with a PrivateKeyEntry or a SecretKeyEntry.",;java.security.KeyStore.isKeyEntry(String),;1
isLargeModel,1,1,Returns true if the tree is configured for a large model.,;javax.swing.JTree.isLargeModel(),;1
isLayoutValid,1,1,Determines if the layout is valid along the given axis.,;javax.swing.text.BoxView.isLayoutValid(int),;1
isLeadAnchorNotificationEnabled,1,1,"Returns the value of the leadAnchorNotificationEnabled flag. When leadAnchorNotificationEnabled is true the model generates notification events with bounds that cover all the changes to the selection plus the changes to the lead and anchor indices. Setting the flag to false causes a narrowing of the event's bounds to include only the elements that have been selected or deselected since the last change. Either way, the model continues to maintain the lead and anchor variables internally. The default is true. Note: It is possible for the lead or anchor to be changed without a change to the selection. Notification of these changes is often important, such as when the new lead or anchor needs to be updated in the view. Therefore, caution is urged when changing the default value.",;javax.swing.DefaultListSelectionModel.isLeadAnchorNotificationEnabled(),;1
isLeadingEdge,1,1,Returns true if the leading edge of the character was hit.,;java.awt.font.TextHitInfo.isLeadingEdge(),;1
isLeftMouseButton,1,1,Returns true if the mouse event specifies the left mouse button.,;javax.swing.SwingUtilities.isLeftMouseButton(MouseEvent),;1
isLegalReplacement,1,1,"Tells whether or not the given byte array is a legal replacement value for this encoder. A replacement is legal if, and only if, it is a legal sequence of bytes in this encoder's charset; that is, it must be possible to decode the replacement into one or more sixteen-bit Unicode characters. The default implementation of this method is not very efficient; it should generally be overridden to improve performance.",;java.nio.charset.CharsetEncoder.isLegalReplacement(byte[]),;1
isLigature,1,1,Returns true if this is a ligature glyph.,;java.awt.font.GlyphMetrics.isLigature(),;1
isLightweight,1,1,"A lightweight component doesn't have a native toolkit peer. Subclasses of Component and Container, other than the ones defined in this package like Button or Scrollbar, are lightweight. All of the Swing components are lightweights. This method will always return false if this component is not displayable because it is impossible to determine the weight of an undisplayable component.",;java.awt.Component.isLightweight(),;1
isLightweightComponent,1,1,"Returns true if this component is lightweight, that is, if it doesn't have a native window system peer.",;javax.swing.JComponent.isLightweightComponent(Component),;1
isLineEmpty,1,1,Returns true if the current line should be considered empty. This is true when getCurrentLineLength == 0 || indent has been invoked on an empty line.,;javax.swing.text.AbstractWriter.isLineEmpty(),;1
isLineSupported,1,1,Indicates whether the system supports any lines that match the specified Line.Info object. A line is supported if any installed mixer supports it.,;javax.sound.sampled.AudioSystem.isLineSupported(Line.Info),;1
isLoaded,1,1,"Tells whether or not this buffer's content is resident in physical memory. A return value of true implies that it is highly likely that all of the data in this buffer is resident in physical memory and may therefore be accessed without incurring any virtual-memory page faults or I/O operations. A return value of false does not necessarily imply that the buffer's content is not resident in physical memory. The returned value is a hint, rather than a guarantee, because the underlying operating system may have paged out some of the buffer's data by the time that an invocation of this method returns.",;java.nio.MappedByteBuffer.isLoaded(),;1
isLocal,1,1,"The isLocal method has the same semantics as the ObjectImpl._is_local method, except that it can throw a RemoteException. The _is_local() method is provided so that stubs may determine if a particular object is implemented by a local servant and hence local invocation APIs may be used.",;javax.rmi.CORBA.Util.isLocal(Stub),;1
isLocalClass,1,1,Returns true if and only if the underlying class is a local class.,;java.lang.Class.isLocalClass(),;1
isLocalTransfer,1,1,This method returns an int indicating if the source is in the same JVM as the target.,;java.awt.dnd.DropTargetDropEvent.isLocalTransfer(),;1
isLocationByPlatform,1,1,Returns true if this Window will appear at the default location for the native windowing system the next time this Window is made visible. This method always returns false if the Window is showing on the screen.,;java.awt.Window.isLocationByPlatform(),;1
isLocationInExpandControl,1,1,Returns true if mouseX and mouseY fall in the area of row that is used to expand/collapse the node and the node at row does not represent a leaf.,";javax.swing.plaf.basic.BasicTreeUI.isLocationInExpandControl(TreePath,int,int)",;1
isLocked,1,1,"Queries if this lock is held by any thread. This method is designed for use in monitoring of the system state, not for synchronization control.",;java.util.concurrent.locks.ReentrantLock.isLocked(),;1
isLongerThan,1,1,"Checks if this duration object is strictly longer than another Duration object.Duration X is ""longer"" than Y if and only if X&gt;Y as defined in the section 3.2.6.2 of the XML Schema 1.0 specification.For example, ""P1D"" (one day) &gt; ""PT12H"" (12 hours) and ""P2Y"" (two years) &gt; ""P23M"" (23 months).",;javax.xml.datatype.Duration.isLongerThan(Duration),;1
isLoopback,1,1,Returns whether a network interface is a loopback interface.,;java.net.NetworkInterface.isLoopback(),;1
isLowSurrogate,1,1,"Determines if the given char value is a Unicode low-surrogate code unit (also known as trailing-surrogate code unit). Such values do not represent characters by themselves, but are used in the representation of supplementary characters in the UTF-16 encoding.",;java.lang.Character.isLowSurrogate(char),;1
isMalformed,1,1,Tells whether or not this object describes a malformed-input error.,;java.nio.charset.CoderResult.isMalformed(),;1
isManagingFocus,1,1,"Deprecated.As of 1.4, replaced by Component.setFocusTraversalKeys(int, Set) and Container.setFocusCycleRoot(boolean).",;javax.swing.JComponent.isManagingFocus(),;1
isMarked,1,1,Returns the current value of the mark.,;java.util.concurrent.atomic.AtomicMarkableReference.isMarked(),;1
isMaximizable,1,1,Gets the value of the maximizable property.,;javax.swing.JInternalFrame.isMaximizable(),;1
isMaximum,1,1,Returns whether the JInternalFrame is currently maximized.,;javax.swing.JInternalFrame.isMaximum(),;1
isMaximumSizeSet,1,1,Returns true if the maximum size has been set to a non-null value otherwise returns false.,;java.awt.Component.isMaximumSizeSet(),;1
isMemberClass,1,1,Returns true if and only if the underlying class is a member class.,;java.lang.Class.isMemberClass(),;1
isMenuComponent,1,1,Returns true if the specified component exists in the submenu hierarchy.,;javax.swing.JMenu.isMenuComponent(Component),;1
isMetaDown,1,1,Returns whether or not the Meta modifier is down on this event.,;java.awt.event.InputEvent.isMetaDown(),;1
isMiddleMouseButton,1,1,Returns true if the mouse event specifies the middle mouse button.,;javax.swing.SwingUtilities.isMiddleMouseButton(MouseEvent),;1
isMidnightEndOfDay,1,1,Is the transition local time midnight at the end of day. The transition may be represented as occurring at 24:00.,;java.time.zone.ZoneOffsetTransitionRule.isMidnightEndOfDay(),;1
isMimeTypeSerializedObject,1,1,Does the DataFlavor represent a serialized object?,;java.awt.datatransfer.DataFlavor.isMimeTypeSerializedObject(),;1
isMinimumSizeSet,1,1,Returns whether or not setMinimumSize has been invoked with a non-null value.,;java.awt.Component.isMinimumSizeSet(),;1
isMixed,1,1,"Return true if the line is not left-to-right or right-to-left. This means it either has mixed runs of left-to-right and right-to-left text, or the base direction differs from the direction of the only run of text.",;java.text.Bidi.isMixed(),;1
isMixerSupported,1,1,Indicates whether the mixer provider supports the mixer represented by the specified mixer info object. The full set of mixer info objects that represent the mixers supported by this MixerProvider may be obtained through the getMixerInfo method.,;javax.sound.sampled.spi.MixerProvider.isMixerSupported(Mixer.Info),;1
isModal,1,1,Indicates whether the dialog is modal. This method is obsolete and is kept for backwards compatibility only. Use getModalityType() instead.,;java.awt.Dialog.isModal(),;1
isModalExclusionTypeSupported,1,1,"Returns whether the given modal exclusion type is supported by this toolkit. If an unsupported modal exclusion type property is set on a window, then Dialog.ModalExclusionType.NO_EXCLUDE is used instead.",;java.awt.Toolkit.isModalExclusionTypeSupported(Dialog.ModalExclusionType),;1
isModalityTypeSupported,1,1,"Returns whether the given modality type is supported by this toolkit. If a dialog with unsupported modality type is created, then Dialog.ModalityType.MODELESS is used instead.",;java.awt.Toolkit.isModalityTypeSupported(Dialog.ModalityType),;1
isMouseOver,1,1,Returns whether or not the mouse is currently over the divider,;javax.swing.plaf.basic.BasicSplitPaneDivider.isMouseOver(),;1
isMultiSelectEvent,1,1,Returning true signifies a mouse event on the node should select from the anchor point.,;javax.swing.plaf.basic.BasicTreeUI.isMultiSelectEvent(MouseEvent),;1
isMultiSelectionEnabled,1,1,Returns true if multiple files can be selected.,;javax.swing.JFileChooser.isMultiSelectionEnabled(),;1
isMXBean,1,1,"If true, the proxy is for an MXBean, and appropriate mappings are applied to method parameters and return values.",;javax.management.MBeanServerInvocationHandler.isMXBean(),;1
isMXBeanInterface,1,1,"Test whether an interface is an MXBean interface. An interface is an MXBean interface if it is public, annotated @MXBean or @MXBean(true) or if it does not have an @MXBean annotation and its name ends with ""MXBean"".",;javax.management.JMX.isMXBeanInterface(Class&lt;?&gt;),;1
isNamePresent,1,1,Returns true if the parameter has a name according to the class file; returns false otherwise. Whether a parameter has a name is determined by the MethodParameters attribute of the method which declares the parameter.,;java.lang.reflect.Parameter.isNamePresent(),;1
isNamespaceDeclUris,1,1,Returns true if namespace declaration attributes are placed into a namespace. This behavior is not the default.,;org.xml.sax.helpers.NamespaceSupport.isNamespaceDeclUris(),;1
isNative,1,1,"Return true if the integer argument includes the native modifier, false otherwise.",;java.lang.reflect.Modifier.isNative(int),;1
isNativeMethod,1,1,Returns true if the method containing the execution point represented by this stack trace element is a native method.,;java.lang.StackTraceElement.isNativeMethod(),;1
isNavigationKey,1,1,Returns whether or not the supplied keyCode maps to a key that is used for navigation. This is used for optimizing key input by only passing non- navigation keys to the type-ahead mechanism. Subclasses should override this if they change the navigation keys.,;javax.swing.plaf.basic.BasicComboBoxUI.isNavigationKey(int),;1
isNil,1,1,"Returns true iff this element instance content model is nil.This property always returns true when getValue() is null. Note that the converse is not true, when this property is true, getValue() can contain a non-null value for attribute(s). It is valid for a nil xml element to have attribute(s).",;javax.xml.bind.JAXBElement.isNil(),;1
isNodeAncestor,1,1,"Returns true if anotherNode is an ancestor of this node -- if it is this node, this node's parent, or an ancestor of this node's parent. (Note that a node is considered an ancestor of itself.) If anotherNode is null, this method returns false. This operation is at worst O(h) where h is the distance from the root to this node.",;javax.swing.tree.DefaultMutableTreeNode.isNodeAncestor(TreeNode),;1
isNodeChild,1,1,"Returns true if aNode is a child of this node. If aNode is null, this method returns false.",;javax.swing.tree.DefaultMutableTreeNode.isNodeChild(TreeNode),;1
isNodeDescendant,1,1,"Returns true if anotherNode is a descendant of this node -- if it is this node, one of this node's children, or a descendant of one of this node's children. Note that a node is considered a descendant of itself. If anotherNode is null, returns false. This operation is at worst O(h) where h is the distance from the root to anotherNode.",;javax.swing.tree.DefaultMutableTreeNode.isNodeDescendant(DefaultMutableTreeNode),;1
isNodeRelated,1,1,Returns true if and only if aNode is in the same tree as this node. Returns false if aNode is null.,;javax.swing.tree.DefaultMutableTreeNode.isNodeRelated(DefaultMutableTreeNode),;1
isNodeSibling,1,1,"Returns true if anotherNode is a sibling of (has the same parent as) this node. A node is its own sibling. If anotherNode is null, returns false.",;javax.swing.tree.DefaultMutableTreeNode.isNodeSibling(TreeNode),;1
isNormalized,1,1,Determines if the given sequence of char values is normalized.,";java.text.Normalizer.isNormalized(CharSequence,Normalizer.Form)",;1
isNotifyOnEDT,1,1,Returns notifyOnEDT property.,;javax.swing.event.SwingPropertyChangeSupport.isNotifyOnEDT(),;1
isNull,1,1,Returns true if the provided reference is null otherwise returns false.,;java.util.Objects.isNull(Object),;1
isNullable,1,1,Retrieves a constant indicating whether it is possible to store a NULL value in the designated column.,;javax.sql.rowset.RowSetMetaDataImpl.isNullable(int),;1
isObjectModelSupported,1,1,Is specified object model supported by this XPathFactory?,;javax.xml.xpath.XPathFactory.isObjectModelSupported(String),;1
isOldToken,1,1,"Tests if this token's validity period has expired, i.e., the token is too old to be checked for duplication.",;org.ietf.jgss.MessageProp.isOldToken(),;1
isOneTouchExpandable,1,1,Gets the oneTouchExpandable property.,;javax.swing.JSplitPane.isOneTouchExpandable(),;1
isOnKeyRelease,1,1,Returns whether this AWTKeyStroke represents a key release.,;java.awt.AWTKeyStroke.isOnKeyRelease(),;1
isOrdered,1,1,Description copied from interface:Attribute,;javax.naming.directory.BasicAttribute.isOrdered(),;1
isOutboundDone,1,1,"Returns whether wrap(ByteBuffer, ByteBuffer) will produce any more outbound data messages. Note that during the closure phase, a SSLEngine may generate handshake closure data that must be sent to the peer. wrap() must be called to generate this data. When this method returns true, no more outbound data will be created.",;javax.net.ssl.SSLEngine.isOutboundDone(),;1
isOutputShutdown,1,1,Returns whether the write-half of the socket connection is closed.,;java.net.Socket.isOutputShutdown(),;1
isOverflow,1,1,Tells whether or not this object describes an overflow condition.,;java.nio.charset.CoderResult.isOverflow(),;1
isOverlap,1,1,Does this transition represent an overlap in the local time-line. Overlaps occur where there are local date-times that exist twice. An example would be when the offset changes from +02:00 to +01:00. This might be described as 'the clocks will move back one hour tonight at 2am'.,;java.time.zone.ZoneOffsetTransition.isOverlap(),;1
isOwnReader,1,1,Returns true if the ImageReader object passed in is an instance of the ImageReader associated with this service provider. The default implementation compares the fully-qualified class name of the reader argument with the class name passed into the constructor. This method may be overridden if more sophisticated checking is required.,;javax.imageio.spi.ImageReaderSpi.isOwnReader(ImageReader),;1
isOwnWriter,1,1,Returns true if the ImageWriter object passed in is an instance of the ImageWriter associated with this service provider.,;javax.imageio.spi.ImageWriterSpi.isOwnWriter(ImageWriter),;1
isPaintable,1,1,Determines whether the class will honor the paintValue method.,;java.beans.PropertyEditorSupport.isPaintable(),;1
isPaintingForPrint,1,1,"Returns true if the current painting operation on this component is part of a print operation. This method is useful when you want to customize what you print versus what you show on the screen. You can detect changes in the value of this property by listening for property change events on this component with name ""paintingForPrint"". Note: This method provides complimentary functionality to that provided by other high level Swing printing APIs. However, it deals strictly with painting and should not be confused as providing information on higher level print processes. For example, a JTable.print() operation doesn't necessarily result in a continuous rendering of the full component, and the return value of this method can change multiple times during that operation. It is even possible for the component to be painted to the screen while the printing process is ongoing. In such a case, the return value of this method is true when, and only when, the table is being painted as part of the printing process.",;javax.swing.JComponent.isPaintingForPrint(),;1
isPaintingTile,1,1,"Returns true if the component is currently painting a tile. If this method returns true, paint will be called again for another tile. This method returns false if you are not painting a tile or if the last tile is painted. Use this method to keep some state you might need between tiles.",;javax.swing.JComponent.isPaintingTile(),;1
isParameter,1,1,Returns true if it is a parameter entity.,;javax.swing.text.html.parser.Entity.isParameter(),;1
isParent,1,1,"On Windows, a file can appear in multiple folders, other than its parent directory in the filesystem. Folder could for example be the ""Desktop"" folder which is not the same as file.getParentFile().",";javax.swing.filechooser.FileSystemView.isParent(File,File)",;1
isParseBigDecimal,1,1,"Returns whether the parse(java.lang.String, java.text.ParsePosition) method returns BigDecimal. The default value is false.",;java.text.DecimalFormat.isParseBigDecimal(),;1
isParseIntegerOnly,1,1,"Returns true if this format will parse numbers as integers only. For example in the English locale, with ParseIntegerOnly true, the string ""1234."" would be parsed as the integer value 1234 and parsing would stop at the ""."" character. Of course, the exact format accepted by the parse operation is locale dependant and determined by sub-classes of NumberFormat.",;java.text.NumberFormat.isParseIntegerOnly(),;1
isPartialReturn,1,1,Flag to indicate that partial returns are valid.,;javax.swing.text.Segment.isPartialReturn(),;1
isPathEditable,1,1,Returns isEditable. This is invoked from the UI before editing begins to insure that the given path can be edited. This is provided as an entry point for subclassers to add filtered editing without having to resort to creating a new editor.,;javax.swing.JTree.isPathEditable(TreePath),;1
isPattern,1,1,Checks whether the object name is a pattern. An object name is a pattern if its domain contains a wildcard or if the object name is a property pattern.,;javax.management.ObjectName.isPattern(),;1
isPlain,1,1,Indicates whether or not this Font object's style is PLAIN.,;java.awt.Font.isPlain(),;1
isPointToPoint,1,1,Returns whether a network interface is a point to point interface. A typical point to point interface would be a PPP connection through a modem.,;java.net.NetworkInterface.isPointToPoint(),;1
isPolicyMappingInhibited,1,1,"Checks if policy mapping is inhibited. If this flag is true, policy mapping is inhibited. By default, policy mapping is not inhibited (the flag is false).",;java.security.cert.PKIXParameters.isPolicyMappingInhibited(),;1
isPolygonal,1,1,Tests whether this Area consists entirely of straight edged polygonal geometry.,;java.awt.geom.Area.isPolygonal(),;1
isPopupMenuVisible,1,1,Returns true if the menu's popup window is visible.,;javax.swing.JMenu.isPopupMenuVisible(),;1
isPostdated,1,1,Determines is this ticket is post-dated.,;javax.security.auth.kerberos.KerberosTicket.isPostdated(),;1
isPreferred,1,1,The "preferred" flag is used to identify features that are particularly important for presenting to humans.,;java.beans.FeatureDescriptor.isPreferred(),;1
isPreferredSizeSet,1,1,Returns true if the preferred size has been set to a non-null value otherwise returns false.,;java.awt.Component.isPreferredSizeSet(),;1
isPreformatted,1,1,"Returns true if this tag is pre-formatted, which is true if the tag is either PRE or TEXTAREA.",;javax.swing.text.html.HTML.Tag.isPreformatted(),;1
isPressed,1,1,Indicates if the button is pressed.,;javax.swing.DefaultButtonModel.isPressed(),;1
isPrimitiveArray,1,1,"Returns true if the open data values this open type describes are primitive arrays, false otherwise.",;javax.management.openmbean.ArrayType.isPrimitiveArray(),;1
isPrivate,1,1,"Return true if the integer argument includes the private modifier, false otherwise.",;java.lang.reflect.Modifier.isPrivate(int),;1
isProbablePrime,1,1,"Returns true if this BigInteger is probably prime, false if it's definitely composite. If certainty is 閳 0, true is returned.",;java.math.BigInteger.isProbablePrime(int),;1
isPropagated,1,1,Reports whether or not this event is propagated from some other BeanContext.,;java.beans.beancontext.BeanContextEvent.isPropagated(),;1
isPropertyListPattern,1,1,"Checks whether the object name is a pattern on the key property list. For example, ""d:k=v,*"" and ""d:k=*,*"" are key property list patterns whereas ""d:k=*"" is not.",;javax.management.ObjectName.isPropertyListPattern(),;1
isPropertyPattern,1,1,"Checks whether the object name is a pattern on the key properties. An object name is a pattern on the key properties if it is a pattern on the key property list (e.g. ""d:k=v,*"") or on the property values (e.g. ""d:k=*"") or on both (e.g. ""d:k=*,*"").",;javax.management.ObjectName.isPropertyPattern(),;1
isProtected,1,1,"Return true if the integer argument includes the protected modifier, false otherwise.",;java.lang.reflect.Modifier.isProtected(int),;1
isProxiable,1,1,Determines if this ticket is proxiable.,;javax.security.auth.kerberos.KerberosTicket.isProxiable(),;1
isProxy,1,1,Determines is this ticket is a proxy-ticket.,;javax.security.auth.kerberos.KerberosTicket.isProxy(),;1
isProxyClass,1,1,"Returns true if and only if the specified class was dynamically generated to be a proxy class using the getProxyClass method or the newProxyInstance method. The reliability of this method is important for the ability to use it to make security decisions, so its implementation should not just test if the class in question extends Proxy.",;java.lang.reflect.Proxy.isProxyClass(Class&lt;?&gt;),;1
isPublic,1,1,"Return true if the integer argument includes the public modifier, false otherwise.",;java.lang.reflect.Modifier.isPublic(int),;1
isPublished,1,1,Returns true if the endpoint is in the published state.,;javax.xml.ws.Endpoint.isPublished(),;1
isQuiescent,1,1,"Returns true if all worker threads are currently idle. An idle worker is one that cannot obtain a task to execute because none are available to steal from other threads, and there are no pending submissions to the pool. This method is conservative; it might not return true immediately upon idleness of all threads, but will eventually become true if threads remain inactive.",;java.util.concurrent.ForkJoinPool.isQuiescent(),;1
isRandomAccessEasy,1,1,"Returns true if the storage format of the given image places no inherent impediment on random access to pixels. For most compressed formats, such as JPEG, this method should return false, as a large section of the image in addition to the region of interest may need to be decoded. This is merely a hint for programs that wish to be efficient; all readers must be able to read arbitrary regions as specified in an ImageReadParam. Note that formats that return false from this method may nonetheless allow tiling (e.g. Restart Markers in JPEG), and random access will likely be reasonably efficient on tiles. See isImageTiled. A reader for which all images are guaranteed to support easy random access, or are guaranteed not to support easy random access, may return true or false respectively without accessing any image data. In such cases, it is not necessary to throw an exception even if no input source has been set or the image index is out of bounds. The default implementation returns false.",;javax.imageio.ImageReader.isRandomAccessEasy(int),;1
isReadLocked,1,1,Returns true if the lock is currently held non-exclusively.,;java.util.concurrent.locks.StampedLock.isReadLocked(),;1
isRectangleContainingRectangle,1,1,Return true if a contains b,";javax.swing.SwingUtilities.isRectangleContainingRectangle(Rectangle,Rectangle)",;1
isRectangular,1,1,Tests whether this Area is rectangular in shape.,;java.awt.geom.Area.isRectangular(),;1
isRegularFile,1,1,"Tests whether a file is a regular file with opaque content. The options array may be used to indicate how symbolic links are handled for the case that the file is a symbolic link. By default, symbolic links are followed and the file attribute of the final target of the link is read. If the option NOFOLLOW_LINKS is present then symbolic links are not followed. Where it is required to distinguish an I/O exception from the case that the file is not a regular file then the file attributes can be read with the readAttributes method and the file type tested with the BasicFileAttributes.isRegularFile() method.",";java.nio.file.Files.isRegularFile(Path,LinkOption...)",;1
isRelation,1,1,Returns the relation id associated to the given ObjectName if the MBean has been added as a relation in the Relation Service.,;javax.management.relation.RelationService.isRelation(ObjectName),;1
isRelationMBean,1,1,"If the relation is represented by an MBean (created by the user and added as a relation in the Relation Service), returns the ObjectName of the MBean.",;javax.management.relation.RelationService.isRelationMBean(String),;1
isRelative,1,1,Determines whether the name of this binding is relative to the target context (which is named by the first parameter of the list() method).,;javax.naming.NameClassPair.isRelative(),;1
isRemoved,1,1,Returns true iff this node (or an ancestor) has been removed with the removeNode() method. This method locks this node prior to returning the contents of the private field used to track this state.,;java.util.prefs.AbstractPreferences.isRemoved(),;1
isRenewable,1,1,"Determines is this ticket is renewable. If so, the refresh method can be called, assuming the validity period for renewing is not already over.",;javax.security.auth.kerberos.KerberosTicket.isRenewable(),;1
isRepeats,1,1,Returns true (the default) if the Timer will send an action event to its listeners multiple times.,;javax.swing.Timer.isRepeats(),;1
isRepresentationClassByteBuffer,1,1,Returns whether the representation class for this DataFlavor is java.nio.ByteBuffer or a subclass thereof.,;java.awt.datatransfer.DataFlavor.isRepresentationClassByteBuffer(),;1
isRepresentationClassCharBuffer,1,1,Returns whether the representation class for this DataFlavor is java.nio.CharBuffer or a subclass thereof.,;java.awt.datatransfer.DataFlavor.isRepresentationClassCharBuffer(),;1
isRepresentationClassInputStream,1,1,Does the DataFlavor represent a java.io.InputStream?,;java.awt.datatransfer.DataFlavor.isRepresentationClassInputStream(),;1
isRepresentationClassReader,1,1,Returns whether the representation class for this DataFlavor is java.io.Reader or a subclass thereof.,;java.awt.datatransfer.DataFlavor.isRepresentationClassReader(),;1
isRepresentationClassRemote,1,1,Returns true if the representation class is Remote.,;java.awt.datatransfer.DataFlavor.isRepresentationClassRemote(),;1
isRepresentationClassSerializable,1,1,Returns true if the representation class can be serialized.,;java.awt.datatransfer.DataFlavor.isRepresentationClassSerializable(),;1
isRequestFocusEnabled,1,1,"Returns true if this JComponent should get focus; otherwise returns false. Please see How to Use the Focus Subsystem, a section in The Java Tutorial, for more information.",;javax.swing.JComponent.isRequestFocusEnabled(),;1
isRequired,1,1,"If addressing is enabled, this property determines whether the endpoint requires WS-Addressing. If required is true, WS-Addressing headers MUST be present on incoming and outgoing messages.",;javax.xml.ws.soap.AddressingFeature.isRequired(),;1
isRevocationEnabled,1,1,"Checks the RevocationEnabled flag. If this flag is true, the default revocation checking mechanism of the underlying PKIX service provider will be used. If this flag is false, the default revocation checking mechanism will be disabled (not used). See the setRevocationEnabled method for more details on setting the value of this flag.",;java.security.cert.PKIXParameters.isRevocationEnabled(),;1
isRevoked,1,1,Checks whether the given certificate is on this CRL.,;java.security.cert.CRL.isRevoked(Certificate),;1
isRightMouseButton,1,1,Returns true if the mouse event specifies the right mouse button.,;javax.swing.SwingUtilities.isRightMouseButton(MouseEvent),;1
isRightToLeft,1,1,"Return true if the line is all right-to-left text, and the base direction is right-to-left.",;java.text.Bidi.isRightToLeft(),;1
isRoleStatus,1,1,"Returns true if given value corresponds to a known role status, false otherwise.",;javax.management.relation.RoleStatus.isRoleStatus(int),;1
isRolloverBorders,1,1,Returns a flag to determine whether rollover button borders are enabled.,;javax.swing.plaf.basic.BasicToolBarUI.isRolloverBorders(),;1
isRolloverEnabled,1,1,Gets the rolloverEnabled property.,;javax.swing.AbstractButton.isRolloverEnabled(),;1
isRunning,1,1,Returns true if the Timer is running.,;javax.swing.Timer.isRunning(),;1
isSameNode,1,1,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.,;javax.imageio.metadata.IIOMetadataNode.isSameNode(Node),;1
isSchemaLanguageSupported,1,1,Is specified schema supported by this SchemaFactory?,;javax.xml.validation.SchemaFactory.isSchemaLanguageSupported(String),;1
isSearchable,1,1,Indicates whether a value stored in the designated column can be used in a WHERE clause.,;javax.sql.rowset.RowSetMetaDataImpl.isSearchable(int),;1
isSeekForwardOnly,1,1,Returns true if the current input source has been marked as seek forward only by passing true as the seekForwardOnly argument to the setInput method.,;javax.imageio.ImageReader.isSeekForwardOnly(),;1
isSelectionVisible,1,1,Checks whether the current selection is visible.,;javax.swing.text.DefaultCaret.isSelectionVisible(),;1
isSerializing,1,1,Is this BeanContext in the process of being serialized?,;java.beans.beancontext.BeanContextSupport.isSerializing(),;1
isServiceClass,1,1,Checks this event to determine whether or not the service being revoked is of a particular class.,;java.beans.beancontext.BeanContextServiceRevokedEvent.isServiceClass(Class),;1
isShared,1,1,Tells whether this lock is shared.,;java.nio.channels.FileLock.isShared(),;1
isShiftDown,1,1,Returns whether or not the Shift modifier is down on this event.,;java.awt.event.InputEvent.isShiftDown(),;1
isShorterThan,1,1,Checks if this duration object is strictly shorter than another Duration object.,;javax.xml.datatype.Duration.isShorterThan(Duration),;1
isShowing,1,1,Checks if this Window is showing on screen.,;java.awt.Window.isShowing(),;1
isSigned,1,1,Indicates whether a value stored in the designated column is a signed number.,;javax.sql.rowset.RowSetMetaDataImpl.isSigned(int),;1
isSingular,1,1,"Tests whether this Area is comprised of a single closed subpath. This method returns true if the path contains 0 or 1 subpaths, or false if the path contains more than 1 subpath. The subpaths are counted by the number of SEG_MOVETO segments that appear in the path.",;java.awt.geom.Area.isSingular(),;1
isSortable,1,1,"Returns true if the specified column is sortable; otherwise, false.",;javax.swing.DefaultRowSorter.isSortable(int),;1
isSorted,1,1,Determines if the search results have been successfully sorted. If an error occurred during sorting a NamingException is thrown.,;javax.naming.ldap.SortResponseControl.isSorted(),;1
isSource,1,1,Indicates whether the port is a source or a target for its mixer.,;javax.sound.sampled.Port.Info.isSource(),;1
isSourceEncodingSupported,1,1,Indicates whether the format converter supports conversion from the specified source format encoding.,;javax.sound.sampled.spi.FormatConversionProvider.isSourceEncodingSupported(AudioFormat.Encoding),;1
isSpace,1,1,Deprecated.Replaced by isWhitespace(char).,;java.lang.Character.isSpace(char),;1
isStandalone,1,1,Description copied from interface:XMLStreamReader,;javax.xml.stream.util.StreamReaderDelegate.isStandalone(),;1
isStandard,1,1,Returns true if this is a standard glyph.,;java.awt.font.GlyphMetrics.isStandard(),;1
isStandardImageMetadataFormatSupported,1,1,Returns true if the standard metadata format is among the document formats recognized by the getAsTree and setFromTree methods on the image metadata objects produced or consumed by this plug-in.,;javax.imageio.spi.ImageReaderWriterSpi.isStandardImageMetadataFormatSupported(),;1
isStandardMetadataFormatSupported,1,1,"Returns true if the standard metadata format is supported by getMetadataFormat, getAsTree, setFromTree, and mergeTree. The default implementation returns the value of the standardFormatSupported instance variable.",;javax.imageio.metadata.IIOMetadata.isStandardMetadataFormatSupported(),;1
isStandardStreamMetadataFormatSupported,1,1,Returns true if the standard metadata format is among the document formats recognized by the getAsTree and setFromTree methods on the stream metadata objects produced or consumed by this plug-in.,;javax.imageio.spi.ImageReaderWriterSpi.isStandardStreamMetadataFormatSupported(),;1
isStartElement,1,1,Description copied from interface:XMLStreamReader,;javax.xml.stream.util.StreamReaderDelegate.isStartElement(),;1
isStatic,1,1,"Return true if the integer argument includes the static modifier, false otherwise.",;java.lang.reflect.Modifier.isStatic(int),;1
isStrict,1,1,"Return true if the integer argument includes the strictfp modifier, false otherwise.",;java.lang.reflect.Modifier.isStrict(int),;1
isStringPainted,1,1,Returns the value of the stringPainted property.,;javax.swing.JProgressBar.isStringPainted(),;1
isSubregion,1,1,"Returns true if the Region is a subregion of a Component, otherwise false. For example, Region.BUTTON corresponds do a Component so that Region.BUTTON.isSubregion() returns false.",;javax.swing.plaf.synth.Region.isSubregion(),;1
isSupplementaryCodePoint,1,1,Determines whether the specified character (Unicode code point) is in the supplementary character range.,;java.lang.Character.isSupplementaryCodePoint(int),;1
isSupportedLocale,1,1,"Returns true if the given locale is supported by this locale service provider. The given locale may contain extensions that should be taken into account for the support determination. The default implementation returns true if the given locale is equal to any of the available Locales returned by getAvailableLocales() with ignoring any extensions in both the given locale and the available locales. Concrete locale service provider implementations should override this method if those implementations are Locale extensions-aware. For example, DecimalFormatSymbolsProvider implementations will need to check extensions in the given locale to see if any numbering system is specified and can be supported. However, CollatorProvider implementations may not be affected by any particular numbering systems, and in that case, extensions for numbering systems should be ignored.",;java.util.spi.LocaleServiceProvider.isSupportedLocale(Locale),;1
isSupportedOption,1,1,Description copied from interface:OptionChecker,;javax.tools.ForwardingJavaFileManager.isSupportedOption(String),;1
isSurrogate,1,1,"Determines if the given char value is a Unicode surrogate code unit. Such values do not represent characters by themselves, but are used in the representation of supplementary characters in the UTF-16 encoding. A char value is a surrogate code unit if and only if it is either a low-surrogate code unit or a high-surrogate code unit.",;java.lang.Character.isSurrogate(char),;1
isSurrogatePair,1,1,Determines whether the specified pair of char values is a valid Unicode surrogate pair. This method is equivalent to the expression: isHighSurrogate(high) &amp;&amp; isLowSurrogate(low),";java.lang.Character.isSurrogatePair(char,char)",;1
isSuspended,1,1,Tests if the thread associated with this ThreadInfo is suspended. This method returns true if Thread.suspend() has been called.,;java.lang.management.ThreadInfo.isSuspended(),;1
isSymbolicLink,1,1,Tests whether a file is a symbolic link. Where it is required to distinguish an I/O exception from the case that the file is not a symbolic link then the file attributes can be read with the readAttributes method and the file type tested with the BasicFileAttributes.isSymbolicLink() method.,;java.nio.file.Files.isSymbolicLink(Path),;1
isSynchronized,1,1,"Return true if the integer argument includes the synchronized modifier, false otherwise.",;java.lang.reflect.Modifier.isSynchronized(int),;1
isTargetEncodingSupported,1,1,Indicates whether the format converter supports conversion to the specified target format encoding.,;javax.sound.sampled.spi.FormatConversionProvider.isTargetEncodingSupported(AudioFormat.Encoding),;1
isTemporary,1,1,Identifies the focus change event as temporary or permanent.,;java.awt.event.FocusEvent.isTemporary(),;1
isText,1,1,Returns true if the element is a text element.,;javax.swing.text.html.MinimalHTMLWriter.isText(Element),;1
isThumbRollover,1,1,Returns true if the mouse is currently over the thumb.,;javax.swing.plaf.basic.BasicScrollBarUI.isThumbRollover(),;1
isTileWritable,1,1,Returns whether or not a tile is currently checked out for writing.,";java.awt.image.BufferedImage.isTileWritable(int,int)",;1
isToggleEvent,1,1,"Returning true indicates the row under the mouse should be toggled based on the event. This is invoked after checkForClickInExpandControl, implying the location is not in the expand (toggle) control",;javax.swing.plaf.basic.BasicTreeUI.isToggleEvent(MouseEvent),;1
isToggleSelectionEvent,1,1,Returning true signifies a mouse event on the node should toggle the selection of only the row under mouse.,;javax.swing.plaf.basic.BasicTreeUI.isToggleSelectionEvent(MouseEvent),;1
isTopDown,1,1,Returns the value of the topDown parameter. The default is false.,;javax.imageio.plugins.bmp.BMPImageWriteParam.isTopDown(),;1
isTopLevelMenu,1,1,"Returns true if the menu is a 'top-level menu', that is, if it is the direct child of a menubar.",;javax.swing.JMenu.isTopLevelMenu(),;1
isTransient,1,1,"Return true if the integer argument includes the transient modifier, false otherwise.",;java.lang.reflect.Modifier.isTransient(int),;1
isTranslucencyCapable,1,1,Returns whether this GraphicsConfiguration supports the PERPIXEL_TRANSLUCENT kind of translucency.,;java.awt.GraphicsConfiguration.isTranslucencyCapable(),;1
isTrueVolatile,1,1,Returns true if the VolatileImage described by this ImageCapabilities can lose its surfaces.,;java.awt.ImageCapabilities.isTrueVolatile(),;1
isTypeSubstituted,1,1,Returns true iff this xml element instance's value has a different type than xml element declaration's declared type.,;javax.xml.bind.JAXBElement.isTypeSubstituted(),;1
isUnderflow,1,1,Tells whether or not this object describes an underflow condition.,;java.nio.charset.CoderResult.isUnderflow(),;1
isUnicast,1,1,Normally event sources are multicast. However there are some exceptions that are strictly unicast.,;java.beans.EventSetDescriptor.isUnicast(),;1
isUnique,1,1,Deprecated.,;java.rmi.dgc.VMID.isUnique(),;1
isUnmappable,1,1,Tells whether or not this object describes an unmappable-character error.,;java.nio.charset.CoderResult.isUnmappable(),;1
isUnresolved,1,1,Checks whether the address has been resolved or not.,;java.net.InetSocketAddress.isUnresolved(),;1
isUnseqToken,1,1,Tests if a later token had already been processed.,;org.ietf.jgss.MessageProp.isUnseqToken(),;1
isUnshared,1,1,Returns boolean value indicating whether or not the serializable field represented by this ObjectStreamField instance is unshared.,;java.io.ObjectStreamField.isUnshared(),;1
isUp,1,1,Returns whether a network interface is up and running.,;java.net.NetworkInterface.isUp(),;1
isUserInRole,1,1,Indicates whether an authenticated user is included in the specified logical "role".,;javax.xml.ws.spi.http.HttpExchange.isUserInRole(String),;1
isValidCodePoint,1,1,Determines whether the specified code point is a valid Unicode code point value.,;java.lang.Character.isValidCodePoint(int),;1
isValidDay,1,1,Checks if the day-of-month is valid for this year-month. This method checks whether this year and month and the input day form a valid date.,;java.time.YearMonth.isValidDay(int),;1
isValidIntValue,1,1,Checks if the value is within the valid range and that all values in the range fit in an int. This method combines isIntValue() and isValidValue(long).,;java.time.temporal.ValueRange.isValidIntValue(long),;1
isValidMonthDay,1,1,Checks if the month-day is valid for this year. This method checks whether this year and the input month and day form a valid date.,;java.time.Year.isValidMonthDay(MonthDay),;1
isValidValue,1,1,Checks if the value is within the valid range. This checks that the value is within the stored range of values.,;java.time.temporal.ValueRange.isValidValue(long),;1
isValidYear,1,1,Checks if the year is valid for this month-day. This method checks whether this month and day and the input year form a valid date. This can only return false for February 29th.,;java.time.MonthDay.isValidYear(int),;1
isVertical,1,1,Returns true if this TextLayout is vertical.,;java.awt.font.TextLayout.isVertical(),;1
isVirtual,1,1,"Returns whether this interface is a virtual interface (also called subinterface). Virtual interfaces are, on some systems, interfaces created as a child of a physical interface and given different settings (like address or MTU). Usually the name of the interface will the name of the parent followed by a colon (:) and a number identifying the child since there can be several virtual interfaces attached to a single physical interface.",;java.net.NetworkInterface.isVirtual(),;1
isVolatile,1,1,"Return true if the integer argument includes the volatile modifier, false otherwise.",;java.lang.reflect.Modifier.isVolatile(int),;1
isWeak,1,1,Checks if the given DES key material is weak or semi-weak.,";javax.crypto.spec.DESKeySpec.isWeak(byte[],int)",;1
isWhitespace,1,1,Returns true if this is a whitespace glyph.,;java.awt.font.GlyphMetrics.isWhitespace(),;1
isWhiteSpaceExceptSpace,1,1,Returns true if the specified char is a white space character but not 0x20.,;javax.xml.bind.annotation.adapters.NormalizedStringAdapter.isWhiteSpaceExceptSpace(char),;1
isWindowTranslucencySupported,1,1,Returns whether the given level of translucency is supported by this graphics device.,;java.awt.GraphicsDevice.isWindowTranslucencySupported(GraphicsDevice.WindowTranslucency),;1
isWrapperFor,1,1,"Returns true if this either implements the interface argument or is directly or indirectly a wrapper for an object that does. Returns false otherwise. If this implements the interface then return true, else if this is a wrapper then return the result of recursively calling isWrapperFor on the wrapped object. If this does not implement the interface and is not a wrapper, return false. This method should be implemented as a low-cost operation compared to unwrap so that callers can use this method to avoid expensive unwrap calls that may fail. If this method returns true then calling unwrap with the same argument should succeed.",;javax.sql.rowset.RowSetMetaDataImpl.isWrapperFor(Class&lt;?&gt;),;1
isWrapperInstance,1,1,Determines if the given object was produced by a call to asInterfaceInstance.,;java.lang.invoke.MethodHandleProxies.isWrapperInstance(Object),;1
isWriteLockedByCurrentThread,1,1,Queries if the write lock is held by the current thread.,;java.util.concurrent.locks.ReentrantReadWriteLock.isWriteLockedByCurrentThread(),;1
isZoneLoaded,1,1,"Determine if a zone is in the loaded state. The zones are expected to represent a subset of the child elements of the element this view is responsible for. Therefore, the default implementation is to return true if the view has children.",;javax.swing.text.ZoneView.isZoneLoaded(View),;1
itemStateChanged,1,1,Handles the itemStateChanged event by invoking the itemStateChanged methods on listener-a and listener-b.,;java.awt.AWTEventMulticaster.itemStateChanged(ItemEvent),;1
keyDown,1,1,"Deprecated.As of JDK version 1.1, replaced by processKeyEvent(KeyEvent).",";java.awt.Component.keyDown(Event,int)",;1
keyPress,1,1,Presses a given key. The key should be released using the keyRelease method. Key codes that have more than one physical key associated with them (e.g. KeyEvent.VK_SHIFT could mean either the left or right shift key) will map to the left key.,;java.awt.Robot.keyPress(int),;1
keyRelease,1,1,Releases a given key. Key codes that have more than one physical key associated with them (e.g. KeyEvent.VK_SHIFT could mean either the left or right shift key) will map to the left key.,;java.awt.Robot.keyRelease(int),;1
keysSpi,1,1,"Returns all of the keys that have an associated value in this preference node. (The returned array will be of size zero if this node has no preferences.) It is guaranteed that this node has not been removed. This method is invoked with the lock on this node held. If this node throws a BackingStoreException, the exception will propagate out beyond the enclosing keys() invocation.",;java.util.prefs.AbstractPreferences.keysSpi(),;1
keyUp,1,1,"Deprecated.As of JDK version 1.1, replaced by processKeyEvent(KeyEvent).",";java.awt.Component.keyUp(Event,int)",;1
kind,1,1,Retrieves the kind of this TypeCode object. The kind of a type code determines which TypeCode methods may legally be invoked on it. The method kind may be invoked on any TypeCode object.,;org.omg.CORBA.TypeCode.kind(),;1
labelsHaveSameBaselines,1,1,Returns true if all the labels from the label table have the same baseline.,;javax.swing.plaf.basic.BasicSliderUI.labelsHaveSameBaselines(),;1
lastDayOfMonth,1,1,"Returns the ""last day of month"" adjuster, which returns a new date set to the last day of the current month. The ISO calendar system behaves as follows: The input 2011-01-15 will return 2011-01-31. The input 2011-02-15 will return 2011-02-28. The input 2012-02-15 will return 2012-02-29 (leap year). The input 2011-04-15 will return 2011-04-30. The behavior is suitable for use with most calendar systems. It is equivalent to: long lastDay = temporal.range(DAY_OF_MONTH).getMaximum(); temporal.with(DAY_OF_MONTH, lastDay);",;java.time.temporal.TemporalAdjusters.lastDayOfMonth(),;1
lastDayOfYear,1,1,"Returns the ""last day of year"" adjuster, which returns a new date set to the last day of the current year. The ISO calendar system behaves as follows: The input 2011-01-15 will return 2011-12-31. The input 2011-02-15 will return 2011-12-31. The behavior is suitable for use with most calendar systems. It is equivalent to: long lastDay = temporal.range(DAY_OF_YEAR).getMaximum(); temporal.with(DAY_OF_YEAR, lastDay);",;java.time.temporal.TemporalAdjusters.lastDayOfYear(),;1
lastEdit,1,1,"Returns the last UndoableEdit in edits, or null if edits is empty.",;javax.swing.undo.CompoundEdit.lastEdit(),;1
lastIndexOfSubList,1,1,"Returns the starting position of the last occurrence of the specified target list within the specified source list, or -1 if there is no such occurrence. More formally, returns the highest index i such that source.subList(i, i+target.size()).equals(target), or -1 if there is no such index. (Returns -1 if target.size() &gt; source.size()) This implementation uses the ""brute force"" technique of iterating over the source list, looking for a match with the target at each location in turn.",";java.util.Collections.lastIndexOfSubList(List&lt;?&gt;,List&lt;?&gt;)",;1
lastInMonth,1,1,"Returns the last in month adjuster, which returns a new date in the same month with the last matching day-of-week. This is used for expressions like 'last Tuesday in March'. The ISO calendar system behaves as follows: The input 2011-12-15 for (MONDAY) will return 2011-12-26. The input 2011-12-15 for (FRIDAY) will return 2011-12-30. The behavior is suitable for use with most calendar systems. It uses the DAY_OF_WEEK and DAY_OF_MONTH fields and the DAYS unit, and assumes a seven day week.",;java.time.temporal.TemporalAdjusters.lastInMonth(DayOfWeek),;1
lastModified,1,1,"Returns the time that the file denoted by this abstract pathname was last modified. Where it is required to distinguish an I/O exception from the case where 0L is returned, or where several attributes of the same file are required at the same time, or where the time of last access or the creation time are required, then the Files.readAttributes method may be used.",;java.io.File.lastModified(),;1
lastPageFirst,1,1,Returns true if the last page will be printed first.,;java.awt.PrintJob.lastPageFirst(),;1
layoutChanged,1,1,Invalidates the layout along an axis. This happens automatically if the preferences have changed for any of the child views. In some cases the layout may need to be recalculated when the preferences have not changed. The layout can be marked as invalid by calling this method. The layout will be updated the next time the setSize method is called on this view (typically in paint).,;javax.swing.text.BoxView.layoutChanged(int),;1
layoutCL,1,1,Forwards the call to SwingUtilities.layoutCompoundLabel(). This method is here so that a subclass could do Label specific layout and to shorten the method name a little.,";javax.swing.plaf.basic.BasicLabelUI.layoutCL(JLabel,FontMetrics,String,Icon,Rectangle,Rectangle,Rectangle)",;1
layoutColumns,1,1,Lays out the columns to fit within the given target span. Returns the results through offsets and spans.,";javax.swing.text.TableView.layoutColumns(int,int[],int[],SizeRequirements[])",;1
layoutGlyphVector,1,1,"Returns a new GlyphVector object, performing full layout of the text if possible. Full layout is required for complex text, such as Arabic or Hindi. Support for different scripts depends on the font and implementation. Layout requires bidi analysis, as performed by Bidi, and should only be performed on text that has a uniform direction. The direction is indicated in the flags parameter,by using LAYOUT_RIGHT_TO_LEFT to indicate a right-to-left (Arabic and Hebrew) run direction, or LAYOUT_LEFT_TO_RIGHT to indicate a left-to-right (English) run direction. In addition, some operations, such as Arabic shaping, require context, so that the characters at the start and limit can have the proper shapes. Sometimes the data in the buffer outside the provided range does not have valid data. The values LAYOUT_NO_START_CONTEXT and LAYOUT_NO_LIMIT_CONTEXT can be added to the flags parameter to indicate that the text before start, or after limit, respectively, should not be examined for context. All other values for the flags parameter are reserved.",";java.awt.Font.layoutGlyphVector(FontRenderContext,char[],int,int,int)",;1
layoutMajorAxis,1,1,Performs layout for the major axis of the box (i.e. the axis that it represents). The results of the layout (the offset and span for each children) are placed in the given arrays which represent the allocations to the children along the major axis.,";javax.swing.text.BoxView.layoutMajorAxis(int,int,int[],int[])",;1
layoutRow,1,1,"Creates a row of views that will fit within the layout span of the row. This is called by the layout method. This is implemented to fill the row by repeatedly calling the createView method until the available span has been exhausted, a forced break was encountered, or the createView method returned null. If the remaining span was exhausted, the adjustRow method will be called to perform adjustments to the row to try and make it fit into the given span.",";javax.swing.text.FlowView.FlowStrategy.layoutRow(FlowView,int,int)",;1
layoutText,1,1,"Lays out text and an icon returning, by reference, the location to place the icon and text.",";javax.swing.plaf.synth.SynthGraphicsUtils.layoutText(SynthContext,FontMetrics,String,Icon,int,int,int,int,Rectangle,Rectangle,Rectangle,int)",;1
lazilyLoadDesktopProperty,1,1,an opportunity to lazily evaluate desktop property values.,;java.awt.Toolkit.lazilyLoadDesktopProperty(String),;1
leading,1,1,Creates a TextHitInfo on the leading edge of the character at the specified charIndex.,;java.awt.font.TextHitInfo.leading(int),;1
leave,1,1,Leave the multicast group.,;java.net.DatagramSocketImpl.leave(InetAddress),;1
leq,1,1,Returns a query expression that represents a "less than or equal to" constraint on two values.,";javax.management.Query.leq(ValueExp,ValueExp)",;1
lineno,1,1,Return the current line number.,;java.io.StreamTokenizer.lineno(),;1
lineSeparator,1,1,"Returns the system-dependent line separator string. It always returns the same value - the initial value of the system property line.separator. On UNIX systems, it returns """"; on Microsoft Windows systems it returns ""\r"".",;java.lang.System.lineSeparator(),;1
linesIntersect,1,1,"Tests if the line segment from (x1,y1) to (x2,y2) intersects the line segment from (x3,y3) to (x4,y4).",";java.awt.geom.Line2D.linesIntersect(double,double,double,double,double,double,double,double)",;1
lineToRect,1,1,Determine the rectangle that represents the given line.,";javax.swing.text.PlainView.lineToRect(Shape,int)",;1
list_initial_services,1,1,"Returns a list of the initially available CORBA object references, such as ""NameService"" and ""InterfaceRepository"".",;org.omg.CORBA.ORB.list_initial_services(),;1
listen,1,1,"Sets the maximum queue length for incoming connection indications (a request to connect) to the count argument. If a connection indication arrives when the queue is full, the connection is refused.",;java.net.SocketImpl.listen(int),;1
listRoots,1,1,"List the available filesystem roots. A particular Java platform may support zero or more hierarchically-organized file systems. Each file system has a root directory from which all other files in that file system can be reached. Windows platforms, for example, have a root directory for each active drive; UNIX platforms have a single root directory, namely ""/"". The set of available filesystem roots is affected by various system-level operations such as the insertion or ejection of removable media and the disconnecting or unmounting of physical or virtual disk drives. This method returns an array of File objects that denote the root directories of the available filesystem roots. It is guaranteed that the canonical pathname of any file physically present on the local machine will begin with one of the roots returned by this method. The canonical pathname of a file that resides on some other machine and is accessed via a remote-filesystem protocol such as SMB or NFS may or may not begin with one of the roots returned by this method. If the pathname of a remote file is syntactically indistinguishable from the pathname of a local file then it will begin with one of the roots returned by this method. Thus, for example, File objects denoting the root directories of the mapped network drives of a Windows platform will be returned by this method, while File objects containing UNC pathnames will not be returned by this method. Unlike most methods in this class, this method does not throw security exceptions. If a security manager exists and its SecurityManager.checkRead(String) method denies read access to a particular root directory, then that directory will not appear in the result.",;java.io.File.listRoots(),;1
loadFromXML,1,1,"Loads all of the properties represented by the XML document on the specified input stream into this properties table. The XML document must have the following DOCTYPE declaration: &lt;!DOCTYPE properties SYSTEM ""http://java.sun.com/dtd/properties.dtd""&gt; Furthermore, the document must satisfy the properties DTD described above. An implementation is required to read XML documents that use the ""UTF-8"" or ""UTF-16"" encoding. An implementation may support additional encodings. The specified stream is closed after this method returns.",;java.util.Properties.loadFromXML(InputStream),;1
loadInstalled,1,1,"Creates a new service loader for the given service type, using the extension class loader. This convenience method simply locates the extension class loader, call it extClassLoader, and then returns ServiceLoader.load(service, extClassLoader) If the extension class loader cannot be found then the system class loader is used; if there is no system class loader then the bootstrap class loader is used. This method is intended for use when only installed providers are desired. The resulting service will only find and load providers that have been installed into the current Java virtual machine; providers on the application's class path will be ignored.",;java.util.ServiceLoader.loadInstalled(Class&lt;S&gt;),;1
loadKeyBindings,1,1,"Populates an InputMap with the specified bindings. The bindings are supplied as a list of alternating keystroke-action key pairs. The keystroke is either an instance of KeyStroke, or a String that identifies the KeyStroke for the binding. Refer to KeyStroke.getKeyStroke(String) for the specific format. The action key part of the pair is the key registered in the InputMap for the KeyStroke. The following illustrates loading an InputMap with two key-action pairs: LookAndFeel.loadKeyBindings(inputMap, new Object[] { ""control X"", ""cut"", ""control V"", ""paste"" }); Supplying a null list of bindings (keys) does not change retMap in any way. Specifying a null action key results in removing the keystroke's entry from the InputMap. A null keystroke is ignored.",";javax.swing.LookAndFeel.loadKeyBindings(InputMap,Object[])",;1
loadKeymap,1,1,"Loads a keymap with a bunch of bindings. This can be used to take a static table of definitions and load them into some keymap. The following example illustrates an example of binding some keys to the cut, copy, and paste actions associated with a JTextComponent. A code fragment to accomplish this might look as follows: static final JTextComponent.KeyBinding[] defaultBindings = { new JTextComponent.KeyBinding( KeyStroke.getKeyStroke(KeyEvent.VK_C, InputEvent.CTRL_MASK), DefaultEditorKit.copyAction), new JTextComponent.KeyBinding( KeyStroke.getKeyStroke(KeyEvent.VK_V, InputEvent.CTRL_MASK), DefaultEditorKit.pasteAction), new JTextComponent.KeyBinding( KeyStroke.getKeyStroke(KeyEvent.VK_X, InputEvent.CTRL_MASK), DefaultEditorKit.cutAction), }; JTextComponent c = new JTextPane(); Keymap k = c.getKeymap(); JTextComponent.loadKeymap(k, defaultBindings, c.getActions()); The sets of bindings and actions may be empty but must be non-null.",";javax.swing.text.JTextComponent.loadKeymap(Keymap,JTextComponent.KeyBinding[],Action[])",;1
loadRules,1,1,"Loads a set of rules that have been specified in terms of CSS1 grammar. If there are collisions with existing rules, the newly specified rule will win.",";javax.swing.text.html.StyleSheet.loadRules(Reader,URL)",;1
localDate,1,1,"A query for LocalDate returning null if not found. This returns a TemporalQuery that can be used to query a temporal object for the local date. The query will return null if the temporal object cannot supply a local date. The query implementation examines the EPOCH_DAY field and uses it to create a LocalDate. The method ZoneOffset.from(TemporalAccessor) can be used as a TemporalQuery via a method reference, LocalDate::from. This query and LocalDate::from will return the same result if the temporal object contains a date. If the temporal object does not contain a date, then the method reference will throw an exception, whereas this query will return null.",;java.time.temporal.TemporalQueries.localDate(),;1
localTime,1,1,"A query for LocalTime returning null if not found. This returns a TemporalQuery that can be used to query a temporal object for the local time. The query will return null if the temporal object cannot supply a local time. The query implementation examines the NANO_OF_DAY field and uses it to create a LocalTime. The method ZoneOffset.from(TemporalAccessor) can be used as a TemporalQuery via a method reference, LocalTime::from. This query and LocalTime::from will return the same result if the temporal object contains a time. If the temporal object does not contain a time, then the method reference will throw an exception, whereas this query will return null.",;java.time.temporal.TemporalQueries.localTime(),;1
logicalAnd,1,1,Returns the result of applying the logical AND operator to the specified boolean operands.,";java.lang.Boolean.logicalAnd(boolean,boolean)",;1
logicalOr,1,1,Returns the result of applying the logical OR operator to the specified boolean operands.,";java.lang.Boolean.logicalOr(boolean,boolean)",;1
logicalXor,1,1,Returns the result of applying the logical XOR operator to the specified boolean operands.,";java.lang.Boolean.logicalXor(boolean,boolean)",;1
logStream,1,1,Returns the stream to which the DebugGraphics logs drawing operations.,;javax.swing.DebugGraphics.logStream(),;1
longBitsToDouble,1,1,"Returns the double value corresponding to a given bit representation. The argument is considered to be a representation of a floating-point value according to the IEEE 754 floating-point ""double format"" bit layout. If the argument is 0x7ff0000000000000L, the result is positive infinity. If the argument is 0xfff0000000000000L, the result is negative infinity. If the argument is any value in the range 0x7ff0000000000001L through 0x7fffffffffffffffL or in the range 0xfff0000000000001L through 0xffffffffffffffffL, the result is a NaN. No IEEE 754 floating-point operation provided by Java can distinguish between two NaN values of the same type with different bit patterns. Distinct values of NaN are only distinguishable by use of the Double.doubleToRawLongBits method. In all other cases, let s, e, and m be three values that can be computed from the argument: int s = ((bits &gt;&gt; 63) == 0) ? 1 : -1; int e = (int)((bits &gt;&gt; 52) &amp; 0x7ffL); long m = (e == 0) ? (bits &amp; 0xfffffffffffffL) &lt;&lt; 1 : (bits &amp; 0xfffffffffffffL) | 0x10000000000000L; Then the floating-point result equals the value of the mathematical expression s璺痬璺2e-1075. Note that this method may not be able to return a double NaN with exactly same bit pattern as the long argument. IEEE 754 distinguishes between two kinds of NaNs, quiet NaNs and signaling NaNs. The differences between the two kinds of NaN are generally not visible in Java. Arithmetic operations on signaling NaNs turn them into quiet NaNs with a different, but often similar, bit pattern. However, on some processors merely copying a signaling NaN also performs that conversion. In particular, copying a signaling NaN to return it to the calling method may perform this conversion. So longBitsToDouble may not be able to return a double with a signaling NaN bit pattern. Consequently, for some long values, doubleToRawLongBits(longBitsToDouble(start)) may not equal start. Moreover, which particular bit patterns represent signaling NaNs is platform dependent; although all NaN bit patterns, quiet or signaling, must be in the NaN range identified above.",;java.lang.Double.longBitsToDouble(long),;1
lookingAt,1,1,"Attempts to match the input sequence, starting at the beginning of the region, against the pattern. Like the matches method, this method always starts at the beginning of the region; unlike that method, it does not require that the entire region be matched. If the match succeeds then more information can be obtained via the start, end, and group methods.",;java.util.regex.Matcher.lookingAt(),;1
lookupAny,1,1,"Returns the descriptor for any class, regardless of whether it implements Serializable.",;java.io.ObjectStreamClass.lookupAny(Class&lt;?&gt;),;1
lookupClass,1,1,"Tells which class is performing the lookup. It is this class against which checks are performed for visibility and access permissions. The class implies a maximum level of access permission, but the permissions may be additionally limited by the bitmask lookupModes, which controls whether non-public members can be accessed.",;java.lang.invoke.MethodHandles.Lookup.lookupClass(),;1
lookupConstraints,1,1,"Retrieves the constraints for the specified component. The return value is not a copy, but is the actual GridBagConstraints object used by the layout mechanism. If comp is not in the GridBagLayout, a set of default GridBagConstraints are returned. A comp value of null is invalid and returns null.",;java.awt.GridBagLayout.lookupConstraints(Component),;1
lookupDefaultPrintService,1,1,"Locates the default print service for this environment. This may return null. If multiple lookup services each specify a default, the chosen service is not precisely defined, but a platform native service, rather than an installed service, is usually returned as the default. If there is no clearly identifiable platform native default print service, the default is the first to be located in an implementation-dependent manner. This may include making use of any preferences API that is available as part of the Java or native platform. This algorithm may be overridden by a user setting the property javax.print.defaultPrinter. A service specified must be discovered to be valid and currently available to be returned as the default.",;javax.print.PrintServiceLookup.lookupDefaultPrintService(),;1
lookupModes,1,1,"Tells which access-protection classes of members this lookup object can produce. The result is a bit-mask of the bits PUBLIC (0x01), PRIVATE (0x02), PROTECTED (0x04), and PACKAGE (0x08). A freshly-created lookup object on the caller's class has all possible bits set, since the caller class can access all its own members. A lookup object on a new lookup class created from a previous lookup object may have some mode bits set to zero. The purpose of this is to restrict access via the new lookup object, so that it can access only names which can be reached by the original lookup object, and also by the new lookup class.",;java.lang.invoke.MethodHandles.Lookup.lookupModes(),;1
lookupMultiDocPrintServices,1,1,"Locates MultiDoc print Services capable of printing MultiDocs containing all the specified doc flavors. This method is useful to help locate a service that can print a MultiDoc in which the elements may be different flavors. An application could perform this itself by multiple lookups on each DocFlavor in turn and collating the results, but the lookup service may be able to do this more efficiently.",";javax.print.PrintServiceLookup.lookupMultiDocPrintServices(DocFlavor[],AttributeSet)",;1
lookupNamespaceURI,1,1,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.,;javax.imageio.metadata.IIOMetadataNode.lookupNamespaceURI(String),;1
lookupPrefix,1,1,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.,;javax.imageio.metadata.IIOMetadataNode.lookupPrefix(String),;1
lookupPrincipalByGroupName,1,1,"Lookup a group principal by group name. Where an implementation does not support any notion of group then this method always throws UserPrincipalNotFoundException. Where the namespace for user accounts and groups is the same, then this method is identical to invoking lookupPrincipalByName.",;java.nio.file.attribute.UserPrincipalLookupService.lookupPrincipalByGroupName(String),;1
lookupPrincipalByName,1,1,Lookup a user principal by name.,;java.nio.file.attribute.UserPrincipalLookupService.lookupPrincipalByName(String),;1
lookupStreamPrintServiceFactories,1,1,"Locates factories for print services that can be used with a print job to output a stream of data in the format specified by outputMimeType. The outputMimeType parameter describes the document type that you want to create, whereas the flavor parameter describes the format in which the input data will be provided by the application to the StreamPrintService. Although null is an acceptable value to use in the lookup of stream printing services, it's typical to search for a particular desired format, such as Postscript(TM).",";javax.print.StreamPrintServiceFactory.lookupStreamPrintServiceFactories(DocFlavor,String)",;1
lookupStreamPrintServices,1,1,A convenience method which locates factories for stream print services which can image 2D graphics. Sample usage : FileOutputStream outstream; StreamPrintService psPrinter; String psMimeType = "application/postscript"; PrinterJob pj = PrinterJob.getPrinterJob(); StreamPrintServiceFactory[] factories = PrinterJob.lookupStreamPrintServices(psMimeType); if (factories.length &gt; 0) { try { outstream = new File("out.ps"); psPrinter = factories[0].getPrintService(outstream); // psPrinter can now be set as the service on a PrinterJob pj.setPrintService(psPrinter) } catch (Exception e) { e.printStackTrace(); } } Services returned from this method may be installed on PrinterJob instances which support print services. Calling this method is equivalent to calling StreamPrintServiceFactory.lookupStreamPrintServiceFactories() and specifying a Pageable DocFlavor.,;java.awt.print.PrinterJob.lookupStreamPrintServices(String),;1
lookupTag,1,1,Returns the best-matching language tag using the lookup mechanism defined in RFC 4647.,";java.util.Locale.lookupTag(List&lt;Locale.LanguageRange&gt;,Collection&lt;String&gt;)",;1
lostFocus,1,1,"Deprecated.As of JDK version 1.1, replaced by processFocusEvent(FocusEvent).",";java.awt.Component.lostFocus(Event,Object)",;1
lostOwnership,1,1,Description copied from interface:ClipboardOwner,";java.awt.datatransfer.StringSelection.lostOwnership(Clipboard,Transferable)",;1
lowerCaseMode,1,1,"Determines whether or not word token are automatically lowercased. If the flag argument is true, then the value in the sval field is lowercased whenever a word token is returned (the ttype field has the value TT_WORD by the nextToken method of this tokenizer. If the flag argument is false, then the sval field is not modified.",;java.io.StreamTokenizer.lowerCaseMode(boolean),;1
lowestLayer,1,1,Returns the lowest layer value from all current children. Returns 0 if there are no children.,;javax.swing.JLayeredPane.lowestLayer(),;1
lowSurrogate,1,1,"Returns the trailing surrogate (a low surrogate code unit) of the surrogate pair representing the specified supplementary character (Unicode code point) in the UTF-16 encoding. If the specified character is not a supplementary character, an unspecified char is returned. If isSupplementaryCodePoint(x) is true, then isLowSurrogate(lowSurrogate(x)) and toCodePoint(highSurrogate(x), lowSurrogate(x)) == x are also always true.",;java.lang.Character.lowSurrogate(int),;1
lt,1,1,Returns a query expression that represents a "less than" constraint on two values.,";javax.management.Query.lt(ValueExp,ValueExp)",;1
majorRequirementChange,1,1,"Requirements changed along the major axis. This is called by the thread doing layout for the given ChildState object when it has completed fetching the child views new preferences. Typically this would be the layout thread, but might be the event thread if it is trying to update something immediately (such as to perform a model/view translation). This is implemented to mark the major axis as having changed so that a future check to see if the requirements need to be published to the parent view will consider the major axis. If the span along the major axis is not estimated, it is updated by the given delta to reflect the incremental change. The delta is ignored if the major span is estimated.",";javax.swing.text.AsyncBoxView.majorRequirementChange(AsyncBoxView.ChildState,float)",;1
makeComponentInputMap,1,1,"Creates a ComponentInputMapUIResource from keys. This is a convenience method for creating a new ComponentInputMapUIResource, invoking loadKeyBindings(map, keys), and returning the ComponentInputMapUIResource.",";javax.swing.LookAndFeel.makeComponentInputMap(JComponent,Object[])",;1
makeIcon,1,1,"Creates and returns a UIDefault.LazyValue that loads an image. The returned value is an implementation of UIDefaults.LazyValue. When createValue is invoked on the returned object, the image is loaded. If the image is non-null, it is then wrapped in an Icon that implements UIResource. The image is loaded using Class.getResourceAsStream(gifFile). This method does not check the arguments in any way. It is strongly recommended that non-null values are supplied else exceptions may occur when createValue is invoked on the returned object.",";javax.swing.LookAndFeel.makeIcon(Class&lt;?&gt;,String)",;1
makeInputMap,1,1,"Creates a InputMapUIResource from keys. This is a convenience method for creating a new InputMapUIResource, invoking loadKeyBindings(map, keys), and returning the InputMapUIResource.",;javax.swing.LookAndFeel.makeInputMap(Object[]),;1
makeKeyBindings,1,1,"Convenience method for building an array of KeyBindings. While this method is not deprecated, developers should instead use ActionMap and InputMap for supplying key bindings. This method returns an array of KeyBindings, one for each alternating key-action pair in keyBindingList. A key can either be a String in the format specified by the KeyStroke.getKeyStroke method, or a KeyStroke. The action part of the pair is a String that corresponds to the name of the Action. The following example illustrates creating a KeyBinding array from six alternating key-action pairs: JTextComponent.KeyBinding[] multilineBindings = makeKeyBindings( new Object[] { ""UP"", DefaultEditorKit.upAction, ""DOWN"", DefaultEditorKit.downAction, ""PAGE_UP"", DefaultEditorKit.pageUpAction, ""PAGE_DOWN"", DefaultEditorKit.pageDownAction, ""ENTER"", DefaultEditorKit.insertBreakAction, ""TAB"", DefaultEditorKit.insertTabAction }); If keyBindingList's length is odd, the last element is ignored. Supplying a null value for either the key or action part of the key-action pair results in creating a KeyBinding with the corresponding value null. As other parts of Swing's expect non-null values in a KeyBinding, you should avoid supplying null as either the key or action part of the key-action pair.",;javax.swing.LookAndFeel.makeKeyBindings(Object[]),;1
makeTag,1,1,Makes a TagElement.,";javax.swing.text.html.parser.Parser.makeTag(Element,boolean)",;1
malformedForLength,1,1,Static factory method that returns the unique object describing a malformed-input error of the given length.,;java.nio.charset.CoderResult.malformedForLength(int),;1
managedBlock,1,1,"Runs the given possibly blocking task. When running in a ForkJoinPool, this method possibly arranges for a spare thread to be activated if necessary to ensure sufficient parallelism while the current thread is blocked in blocker.block(). This method repeatedly calls blocker.isReleasable() and blocker.block() until either method returns true. Every call to blocker.block() is preceded by a call to blocker.isReleasable() that returned false. If not running in a ForkJoinPool, this method is behaviorally equivalent to while (!blocker.isReleasable()) if (blocker.block()) break; If running in a ForkJoinPool, the pool may first be expanded to ensure sufficient parallelism available during the call to blocker.block().",;java.util.concurrent.ForkJoinPool.managedBlock(ForkJoinPool.ManagedBlocker),;1
map,1,1,"If a value is present, apply the provided mapping function to it, and if the result is non-null, return an Optional describing the result. Otherwise return an empty Optional.",";java.util.Optional.map(Function&lt;?,?)",;1
mapEquivalents,1,1,"Generates a new customized Language Priority List using the given priorityList and map. If the given map is empty, this method returns a copy of the given priorityList. In the map, a key represents a language range whereas a value is a list of equivalents of it. '*' cannot be used in the map. Each equivalent language range has the same weight value as its original language range. An example of map: Key Value ""zh"" (Chinese) ""zh"", ""zh-Hans""(Simplified Chinese) ""zh-HK"" (Chinese, Hong Kong) ""zh-HK"" ""zh-TW"" (Chinese, Taiwan) ""zh-TW"" The customization is performed after modification using the IANA Language Subtag Registry. For example, if a user's Language Priority List consists of five language ranges (""zh"", ""zh-CN"", ""en"", ""zh-TW"", and ""zh-HK""), the newly generated Language Priority List which is customized using the above map example will consists of ""zh"", ""zh-Hans"", ""zh-CN"", ""zh-Hans-CN"", ""en"", ""zh-TW"", and ""zh-HK"". ""zh-HK"" and ""zh-TW"" aren't converted to ""zh-Hans-HK"" nor ""zh-Hans-TW"" even if they are included in the Language Priority List. In this example, mapping is used to clearly distinguish Simplified Chinese and Traditional Chinese. If the ""zh""-to-""zh"" mapping isn't included in the map, a simple replacement will be performed and the customized list won't include ""zh"" and ""zh-CN"".",";java.util.Locale.LanguageRange.mapEquivalents(List&lt;Locale.LanguageRange&gt;,Map&lt;String,List&lt;String&gt;&gt;)",;1
mapInputMethodHighlight,1,1,"Returns a map of visual attributes for the abstract level description of the given input method highlight, or null if no mapping is found. The style field of the input method highlight is ignored. The map returned is unmodifiable.",;java.awt.Toolkit.mapInputMethodHighlight(InputMethodHighlight),;1
mapLibraryName,1,1,Maps a library name into a platform-specific string representing a native library.,;java.lang.System.mapLibraryName(String),;1
mapping,1,1,Adapts a Collector accepting elements of type U to one accepting elements of type T by applying a mapping function to each input element before accumulation.,";java.util.stream.Collectors.mapping(Function&lt;?,?,Collector&lt;?,A,R&gt;)",;1
mappingCount,1,1,Returns the number of mappings. This method should be used instead of size() because a ConcurrentHashMap may contain more mappings than can be represented as an int. The value returned is an estimate; the actual count may differ if there are concurrent insertions or removals.,;java.util.concurrent.ConcurrentHashMap.mappingCount(),;1
mapSystemException,1,1,Maps a SystemException to a RemoteException.,;javax.rmi.CORBA.Util.mapSystemException(SystemException),;1
markCompletelyClean,1,1,Mark a component completely clean. aComponent will not get painted during the next paintDirtyRegions() call.,;javax.swing.RepaintManager.markCompletelyClean(JComponent),;1
markCompletelyDirty,1,1,Mark a component completely dirty. aComponent will be completely painted during the next paintDirtyRegions() call.,;javax.swing.RepaintManager.markCompletelyDirty(JComponent),;1
markFirstTime,1,1,Marks the first time a tag has been seen in a document,;javax.swing.text.html.parser.Parser.markFirstTime(Element),;1
marshalParams,1,1,"Marshals the algorithm-specific parameters. If there are no parameters to be marshalled, this method returns without throwing an exception.",";javax.xml.crypto.dsig.TransformService.marshalParams(XMLStructure,XMLCryptoContext)",;1
matcher,1,1,Creates a matcher that will match the given input against this pattern.,;java.util.regex.Pattern.matcher(CharSequence),;1
matchNameAttribute,1,1,Returns true if the StyleConstants.NameAttribute is equal to the tag that is passed in as a parameter.,";javax.swing.text.html.HTMLWriter.matchNameAttribute(AttributeSet,HTML.Tag)",;1
maxBy,1,1,"Returns a Collector that produces the maximal element according to a given Comparator, described as an Optional&lt;T&gt;.",;java.util.stream.Collectors.maxBy(Comparator&lt;?),;1
maxBytesPerChar,1,1,Returns the maximum number of bytes that will be produced for each character of input. This value may be used to compute the worst-case size of the output buffer required for a given input sequence.,;java.nio.charset.CharsetEncoder.maxBytesPerChar(),;1
maxCharsPerByte,1,1,Returns the maximum number of characters that will be produced for each byte of input. This value may be used to compute the worst-case size of the output buffer required for a given input sequence.,;java.nio.charset.CharsetDecoder.maxCharsPerByte(),;1
maxMemory,1,1,Returns the maximum amount of memory that the Java virtual machine will attempt to use. If there is no inherent limit then the value Long.MAX_VALUE will be returned.,;java.lang.Runtime.maxMemory(),;1
maybeUpdateLayoutState,1,1,"If updateLayoutStateNeeded is non zero, call updateLayoutState() and reset updateLayoutStateNeeded. This method should be called by methods before doing any computation based on the geometry of the list. For example it's the first call in paint() and getPreferredSize().",;javax.swing.plaf.basic.BasicListUI.maybeUpdateLayoutState(),;1
member,1,1,Returns the currently active member. Note that the returned reference remains valid only for as long as the currently active member does not change. Using the returned reference beyond the life time of the currently active member raises OBJECT_NOT_EXIST.,;org.omg.DynamicAny._DynUnionStub.member(),;1
member_count,1,1,"Retrieves the number of members in the type described by this TypeCode object. The method member_count can be invoked on structure, union, and enumeration TypeCode objects. Java IDL extends the CORBA specification to allow this method to operate on exceptions as well.",;org.omg.CORBA.TypeCode.member_count(),;1
member_kind,1,1,Returns the TCKind value of the currently active members TypeCode.,;org.omg.DynamicAny._DynUnionStub.member_kind(),;1
member_label,1,1,"Retrieves the label of the union member identified by the given index. For the default member, the label is the zero octet. The method member_label can only be invoked on union TypeCode objects.",;org.omg.CORBA.TypeCode.member_label(int),;1
member_type,1,1,Retrieves the TypeCode object describing the type of the member identified by the given index. The method member_type can be invoked on structure and union TypeCode objects. Java IDL extends the CORBA specification to allow this method to operate on exceptions as well.,;org.omg.CORBA.TypeCode.member_type(int),;1
member_visibility,1,1,Returns the constant that indicates the visibility of the member at the given index. This operation can only be invoked on non-boxed value TypeCode objects.,;org.omg.CORBA.TypeCode.member_visibility(int),;1
mergeTree,1,1,"Alters the internal state of this IIOMetadata object from a tree of XML DOM Nodes whose syntax is defined by the given metadata format. The previous state is altered only as necessary to accommodate the nodes that are present in the given tree. If the tree structure or contents are invalid, an IIOInvalidTreeException will be thrown. As the semantics of how a tree or subtree may be merged with another tree are completely format-specific, plug-in authors may implement this method in whatever manner is most appropriate for the format, including simply replacing all existing state with the contents of the given tree.",";javax.imageio.metadata.IIOMetadata.mergeTree(String,Node)",;1
metadata,1,1,Adds the metadataElement to the W3CEndpointReference instance's wsa:Metadata element.,;javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder.metadata(Element),;1
metaDown,1,1,NOTE: The Event class is obsolete and is available only for backwards compatibility. It has been replaced by the AWTEvent class and its subclasses. Checks if the Meta key is down.,;java.awt.Event.metaDown(),;1
metafactory,1,1,"Facilitates the creation of simple ""function objects"" that implement one or more interfaces by delegation to a provided MethodHandle, after appropriate type adaptation and partial evaluation of arguments. Typically used as a bootstrap method for invokedynamic call sites, to support the lambda expression and method reference expression features of the Java Programming Language. This is the standard, streamlined metafactory; additional flexibility is provided by altMetafactory(MethodHandles.Lookup, String, MethodType, Object...). A general description of the behavior of this method is provided above. When the target of the CallSite returned from this method is invoked, the resulting function objects are instances of a class which implements the interface named by the return type of invokedType, declares a method with the name given by invokedName and the signature given by samMethodType. It may also override additional methods from Object.",";java.lang.invoke.LambdaMetafactory.metafactory(MethodHandles.Lookup,String,MethodType,MethodType,MethodHandle,MethodType)",;1
methodModifiers,1,1,Return an int value OR-ing together the source language modifiers that can be applied to a method.,;java.lang.reflect.Modifier.methodModifiers(),;1
millis,1,1,"Gets the current millisecond instant of the clock. This returns the millisecond-based instant, measured from 1970-01-01T00:00Z (UTC). This is equivalent to the definition of System.currentTimeMillis(). Most applications should avoid this method and use Instant to represent an instant on the time-line rather than a raw millisecond value. This method is provided to allow the use of the clock in high performance use cases where the creation of an object would be unacceptable. The default implementation currently calls instant().",;java.time.Clock.millis(),;1
minBy,1,1,"Returns a Collector that produces the minimal element according to a given Comparator, described as an Optional&lt;T&gt;.",;java.util.stream.Collectors.minBy(Comparator&lt;?),;1
minorRequirementChange,1,1,"Requirements changed along the minor axis. This is called by the thread doing layout for the given ChildState object when it has completed fetching the child views new preferences. Typically this would be the layout thread, but might be the GUI thread if it is trying to update something immediately (such as to perform a model/view translation).",;javax.swing.text.AsyncBoxView.minorRequirementChange(AsyncBoxView.ChildState),;1
mkdir,1,1,Creates the directory named by this abstract pathname.,;java.io.File.mkdir(),;1
mkdirs,1,1,"Creates the directory named by this abstract pathname, including any necessary but nonexistent parent directories. Note that if this operation fails it may have succeeded in creating some of the necessary parent directories.",;java.io.File.mkdirs(),;1
mod,1,1,Returns a BigInteger whose value is (this mod m). This method differs from remainder in that it always returns a non-negative BigInteger.,;java.math.BigInteger.mod(BigInteger),;1
modelChanged,1,1,Flags model changes. This is called whenever the model has changed. It is implemented to rebuild the view hierarchy to represent the default root element of the associated model.,;javax.swing.plaf.basic.BasicTextUI.modelChanged(),;1
modInverse,1,1,Returns a BigInteger whose value is (this-1 mod m).,;java.math.BigInteger.modInverse(BigInteger),;1
modPow,1,1,"Returns a BigInteger whose value is (thisexponent mod m). (Unlike pow, this method permits negative exponents.)",";java.math.BigInteger.modPow(BigInteger,BigInteger)",;1
mouseDown,1,1,"Deprecated.As of JDK version 1.1, replaced by processMouseEvent(MouseEvent).",";java.awt.Component.mouseDown(Event,int,int)",;1
mouseDrag,1,1,"Deprecated.As of JDK version 1.1, replaced by processMouseMotionEvent(MouseEvent).",";java.awt.Component.mouseDrag(Event,int,int)",;1
mouseEnter,1,1,"Deprecated.As of JDK version 1.1, replaced by processMouseEvent(MouseEvent).",";java.awt.Component.mouseEnter(Event,int,int)",;1
mouseExit,1,1,"Deprecated.As of JDK version 1.1, replaced by processMouseEvent(MouseEvent).",";java.awt.Component.mouseExit(Event,int,int)",;1
mousePress,1,1,Presses one or more mouse buttons. The mouse buttons should be released using the mouseRelease(int) method.,;java.awt.Robot.mousePress(int),;1
mouseRelease,1,1,Releases one or more mouse buttons.,;java.awt.Robot.mouseRelease(int),;1
mouseUp,1,1,"Deprecated.As of JDK version 1.1, replaced by processMouseEvent(MouseEvent).",";java.awt.Component.mouseUp(Event,int,int)",;1
mouseWheel,1,1,Rotates the scroll wheel on wheel-equipped mice.,;java.awt.Robot.mouseWheel(int),;1
moveCaret,1,1,"Tries to move the position of the caret from the coordinates of a mouse event, using viewToModel(). This will cause a selection if the dot and mark are different.",;javax.swing.text.DefaultCaret.moveCaret(MouseEvent),;1
moveCaretPosition,1,1,"Moves the caret to a new position, leaving behind a mark defined by the last time setCaretPosition was called. This forms a selection. If the document is null, does nothing. The position must be between 0 and the length of the component's text or else an exception is thrown.",;javax.swing.text.JTextComponent.moveCaretPosition(int),;1
moveLeadSelectionIndex,1,1,"Set the lead selection index, leaving all selection values unchanged. If leadAnchorNotificationEnabled is true, send a notification covering the old and new lead cells.",;javax.swing.DefaultListSelectionModel.moveLeadSelectionIndex(int),;1
movePointLeft,1,1,"Returns a BigDecimal which is equivalent to this one with the decimal point moved n places to the left. If n is non-negative, the call merely adds n to the scale. If n is negative, the call is equivalent to movePointRight(-n). The BigDecimal returned by this call has value (this 鑴 10-n) and scale max(this.scale()+n, 0).",;java.math.BigDecimal.movePointLeft(int),;1
movePointRight,1,1,"Returns a BigDecimal which is equivalent to this one with the decimal point moved n places to the right. If n is non-negative, the call merely subtracts n from the scale. If n is negative, the call is equivalent to movePointLeft(-n). The BigDecimal returned by this call has value (this 鑴 10n) and scale max(this.scale()-n, 0).",;java.math.BigDecimal.movePointRight(int),;1
moveRow,1,1,"Moves one or more rows from the inclusive range start to end to the to position in the model. After the move, the row that was at index start will be at index to. This method will send a tableChanged notification message to all the listeners. Examples of moves: 1. moveRow(1,3,5); a|B|C|D|e|f|g|h|i|j|k - before a|e|f|g|h|B|C|D|i|j|k - after 2. moveRow(6,7,1); a|b|c|d|e|f|G|H|i|j|k - before a|G|H|b|c|d|e|f|i|j|k - after",";javax.swing.table.DefaultTableModel.moveRow(int,int,int)",;1
name2type,1,1,"Converts nm string to the corresponding entity type. If the string does not have a corresponding entity type, returns the type corresponding to ""CDATA"". Valid entity types are: ""PUBLIC"", ""CDATA"", ""SDATA"", ""PI"", ""STARTTAG"", ""ENDTAG"", ""MS"", ""MD"", ""SYSTEM"".",;javax.swing.text.html.parser.Entity.name2type(String),;1
nameUUIDFromBytes,1,1,Static factory to retrieve a type 3 (name based) UUID based on the specified byte array.,;java.util.UUID.nameUUIDFromBytes(byte[]),;1
nanoTime,1,1,"Returns the current value of the running Java Virtual Machine's high-resolution time source, in nanoseconds. This method can only be used to measure elapsed time and is not related to any other notion of system or wall-clock time. The value returned represents nanoseconds since some fixed but arbitrary origin time (perhaps in the future, so values may be negative). The same origin is used by all invocations of this method in an instance of a Java virtual machine; other virtual machine instances are likely to use a different origin. This method provides nanosecond precision, but not necessarily nanosecond resolution (that is, how frequently the value changes) - no guarantees are made except that the resolution is at least as good as that of currentTimeMillis(). Differences in successive calls that span greater than approximately 292 years (263 nanoseconds) will not correctly compute elapsed time due to numerical overflow. The values returned by this method become meaningful only when the difference between two such values, obtained within the same instance of a Java virtual machine, is computed. For example, to measure how long some code takes to execute: long startTime = System.nanoTime(); // ... the code being measured ... long estimatedTime = System.nanoTime() - startTime;To compare two nanoTime values long t0 = System.nanoTime(); ... long t1 = System.nanoTime(); one should use t1 - t0 &lt; 0, not t1 &lt; t0, because of the possibility of numerical overflow.",;java.lang.System.nanoTime(),;1
narrow,1,1,Checks to ensure that an object of a remote or abstract interface type can be cast to a desired type.,";javax.rmi.PortableRemoteObject.narrow(Object,Class)",;1
nativeOrder,1,1,Retrieves the native byte order of the underlying platform. This method is defined so that performance-sensitive Java code can allocate direct buffers with the same byte order as the hardware. Native code libraries are often more efficient when such buffers are used.,;java.nio.ByteOrder.nativeOrder(),;1
nCopies,1,1,Returns an immutable list consisting of n copies of the specified object. The newly allocated data object is tiny (it contains a single reference to the data object). This method is useful in combination with the List.addAll method to grow lists. The returned list is serializable.,";java.util.Collections.nCopies(int,T)",;1
needsDictionary,1,1,Returns true if a preset dictionary is needed for decompression.,;java.util.zip.Inflater.needsDictionary(),;1
needsGui,1,1,"This method is typically called from the environment in order to determine if the implementor ""needs"" a GUI. The algorithm used herein tests the BeanContextPeer, and its current children to determine if they are either Containers, Components, or if they implement Visibility and return needsGui() == true.",;java.beans.beancontext.BeanContextSupport.needsGui(),;1
needsReload,1,1,"Determines if the expired bundle in the cache needs to be reloaded based on the loading time given by loadTime or some other criteria. The method returns true if reloading is required; false otherwise. loadTime is a millisecond offset since the Calendar Epoch. The calling ResourceBundle.getBundle factory method calls this method on the ResourceBundle.Control instance used for its current invocation, not on the instance used in the invocation that originally loaded the resource bundle. The default implementation compares loadTime and the last modified time of the source data of the resource bundle. If it's determined that the source data has been modified since loadTime, true is returned. Otherwise, false is returned. This implementation assumes that the given format is the same string as its file suffix if it's not one of the default formats, ""java.class"" or ""java.properties"".",";java.util.ResourceBundle.Control.needsReload(String,Locale,String,ClassLoader,ResourceBundle,long)",;1
networkInterface,1,1,Returns the network interface for which this membership key was created. This method will continue to return the network interface even after the membership becomes invalid.,;java.nio.channels.MembershipKey.networkInterface(),;1
newAsynchronousFileChannel,1,1,"Opens or creates a file for reading and/or writing, returning an asynchronous file channel to access the file. This method works in exactly the manner specified by the AsynchronousFileChannel.open method. A provider that does not support all the features required to construct an asynchronous file channel throws UnsupportedOperationException. The default provider is required to support the creation of asynchronous file channels. When not overridden, the default implementation of this method throws UnsupportedOperationException.",";java.nio.file.spi.FileSystemProvider.newAsynchronousFileChannel(Path,Set&lt;?,ExecutorService,FileAttribute&lt;?&gt;...)",;1
newAudioClip,1,1,Get an audio clip from the given URL.,;java.applet.Applet.newAudioClip(URL),;1
newCondition,1,1,Throws UnsupportedOperationException because ReadLocks do not support conditions.,;java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.newCondition(),;1
newDataAvailable,1,1,Equivalent to fireTableChanged.,;javax.swing.table.DefaultTableModel.newDataAvailable(TableModelEvent),;1
newDecoder,1,1,Constructs a new decoder for this charset.,;java.nio.charset.Charset.newDecoder(),;1
newDigestMethod,1,1,Creates a DigestMethod for the specified algorithm URI and parameters.,";javax.xml.crypto.dsig.XMLSignatureFactory.newDigestMethod(String,DigestMethodParameterSpec)",;1
newDocument,1,1,Obtain a new instance of a DOM Document object to build a DOM tree with.,;javax.xml.parsers.DocumentBuilder.newDocument(),;1
newDocumentBuilder,1,1,Creates a new instance of a DocumentBuilder using the currently configured parameters.,;javax.xml.parsers.DocumentBuilderFactory.newDocumentBuilder(),;1
newEncoder,1,1,Constructs a new encoder for this charset.,;java.nio.charset.Charset.newEncoder(),;1
newFileChannel,1,1,"Opens or creates a file for reading and/or writing, returning a file channel to access the file. This method works in exactly the manner specified by the FileChannel.open method. A provider that does not support all the features required to construct a file channel throws UnsupportedOperationException. The default provider is required to support the creation of file channels. When not overridden, the default implementation throws UnsupportedOperationException.",";java.nio.file.spi.FileSystemProvider.newFileChannel(Path,Set&lt;?,FileAttribute&lt;?&gt;...)",;1
newJMXConnector,1,1,Creates a connector client for the connector server at the given address. The resultant client is not connected until its connect method is called.,";javax.management.remote.JMXConnectorFactory.newJMXConnector(JMXServiceURL,Map&lt;String,?&gt;)",;1
newJMXConnectorServer,1,1,Creates a connector server at the given address. The resultant server is not started until its start method is called.,";javax.management.remote.JMXConnectorServerFactory.newJMXConnectorServer(JMXServiceURL,Map&lt;String,?&gt;,MBeanServer)",;1
newKeyName,1,1,Creates a KeyName from the specified name.,;javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.newKeyName(String),;1
newKeyValue,1,1,Creates a KeyValue from the specified public key.,;javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.newKeyValue(PublicKey),;1
newLine,1,1,"Writes a line separator. The line separator string is defined by the system property line.separator, and is not necessarily a single newline ('') character.",;java.io.BufferedWriter.newLine(),;1
newMBeanProxy,1,1,"Make a proxy for a Standard MBean in a local or remote MBean Server that may also support the methods of NotificationEmitter.This method behaves the same as newMBeanProxy(MBeanServerConnection, ObjectName, Class), but additionally, if notificationEmitter is true, then the MBean is assumed to be a NotificationBroadcaster or NotificationEmitter and the returned proxy will implement NotificationEmitter as well as interfaceClass. A call to NotificationBroadcaster.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object) on the proxy will result in a call to MBeanServerConnection.addNotificationListener(ObjectName, NotificationListener, NotificationFilter, Object), and likewise for the other methods of NotificationBroadcaster and NotificationEmitter.",";javax.management.JMX.newMBeanProxy(MBeanServerConnection,ObjectName,Class&lt;T&gt;,boolean)",;1
newMBeanServerDelegate,1,1,"This method creates a new MBeanServerDelegate for a new MBeanServer. When creating a new MBeanServer the MBeanServerFactory first calls this method in order to create a new MBeanServerDelegate. Then it calls newMBeanServer(defaultDomain,outer,delegate) passing the delegate that should be used by the MBeanServer implementation. Note that the passed delegate might not be directly the MBeanServerDelegate that was returned by this method. It could be, for instance, a new object wrapping the previously returned object.",;javax.management.MBeanServerBuilder.newMBeanServerDelegate(),;1
newMessageFactory,1,1,Creates a MessageFactory object for the given String protocol.,;javax.xml.soap.SAAJMetaFactory.newMessageFactory(String),;1
newMXBeanProxy,1,1,"Make a proxy for an MXBean in a local or remote MBean Server that may also support the methods of NotificationEmitter.This method behaves the same as newMXBeanProxy(MBeanServerConnection, ObjectName, Class), but additionally, if notificationEmitter is true, then the MXBean is assumed to be a NotificationBroadcaster or NotificationEmitter and the returned proxy will implement NotificationEmitter as well as interfaceClass. A call to NotificationBroadcaster.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object) on the proxy will result in a call to MBeanServerConnection.addNotificationListener(ObjectName, NotificationListener, NotificationFilter, Object), and likewise for the other methods of NotificationBroadcaster and NotificationEmitter.",";javax.management.JMX.newMXBeanProxy(MBeanServerConnection,ObjectName,Class&lt;T&gt;,boolean)",;1
newRowsAdded,1,1,"Ensures that the new rows have the correct number of columns. This is accomplished by using the setSize method in Vector which truncates vectors which are too long, and appends nulls if they are too short. This method also sends out a tableChanged notification message to all the listeners.",;javax.swing.table.DefaultTableModel.newRowsAdded(TableModelEvent),;1
newSAXParser,1,1,Creates a new instance of a SAXParser using the currently configured factory parameters.,;javax.xml.parsers.SAXParserFactory.newSAXParser(),;1
newSetFromMap,1,1,"Returns a set backed by the specified map. The resulting set displays the same ordering, concurrency, and performance characteristics as the backing map. In essence, this factory method provides a Set implementation corresponding to any Map implementation. There is no need to use this method on a Map implementation that already has a corresponding Set implementation (such as HashMap or TreeMap). Each method invocation on the set returned by this method results in exactly one method invocation on the backing map or its keySet view, with one exception. The addAll method is implemented as a sequence of put invocations on the backing map. The specified map must be empty at the time this method is invoked, and should not be accessed directly after this method returns. These conditions are ensured if the map is created empty, passed directly to this method, and no reference to the map is retained, as illustrated in the following code fragment: Set&lt;Object&gt; weakHashSet = Collections.newSetFromMap( new WeakHashMap&lt;Object, Boolean&gt;());",";java.util.Collections.newSetFromMap(Map&lt;E,Boolean&gt;)",;1
newSignatureMethod,1,1,Creates a SignatureMethod for the specified algorithm URI and parameters.,";javax.xml.crypto.dsig.XMLSignatureFactory.newSignatureMethod(String,SignatureMethodParameterSpec)",;1
newSignatureProperties,1,1,Creates a SignatureProperties containing the specified list of SignaturePropertys and optional id.,";javax.xml.crypto.dsig.XMLSignatureFactory.newSignatureProperties(List,String)",;1
newSignatureProperty,1,1,"Creates a SignatureProperty containing the specified list of XMLStructures, target URI and optional id.",";javax.xml.crypto.dsig.XMLSignatureFactory.newSignatureProperty(List,String,String)",;1
newSOAPFactory,1,1,Creates a SOAPFactory object for the given String protocol.,;javax.xml.soap.SAAJMetaFactory.newSOAPFactory(String),;1
newTemplates,1,1,"Process the Source into a Templates object, which is a a compiled representation of the source. This Templates object may then be used concurrently across multiple threads. Creating a Templates object allows the TransformerFactory to do detailed performance optimization of transformation instructions, without penalizing runtime transformation.",;javax.xml.transform.TransformerFactory.newTemplates(Source),;1
newTemplatesHandler,1,1,Get a TemplatesHandler object that can process SAX ContentHandler events into a Templates object.,;javax.xml.transform.sax.SAXTransformerFactory.newTemplatesHandler(),;1
newValidator,1,1,Creates a new Validator for this Schema. A validator enforces/checks the set of constraints this object represents.Implementors should assure that the properties set on the SchemaFactory that created this Schema are also set on the Validator constructed.,;javax.xml.validation.Schema.newValidator(),;1
newValidatorHandler,1,1,Creates a new ValidatorHandler for this Schema. Implementors should assure that the properties set on the SchemaFactory that created this Schema are also set on the ValidatorHandler constructed.,;javax.xml.validation.Schema.newValidatorHandler(),;1
newWatchService,1,1,Constructs a new WatchService (optional operation). This method constructs a new watch service that may be used to watch registered objects for changes and events.,;java.nio.file.FileSystem.newWatchService(),;1
newX509Data,1,1,Creates a X509Data containing the specified list of X.509 content.,;javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.newX509Data(List),;1
newX509IssuerSerial,1,1,Creates an X509IssuerSerial from the specified X.500 issuer distinguished name and serial number.,";javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.newX509IssuerSerial(String,BigInteger)",;1
newXMLGregorianCalendarDate,1,1,"Create a Java representation of XML Schema builtin datatype date or g*.For example, an instance of gYear can be created invoking this factory with month and day parameters set to DatatypeConstants.FIELD_UNDEFINED.A DatatypeConstants.FIELD_UNDEFINED value indicates that field is not set.",";javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendarDate(int,int,int,int)",;1
newXMLObject,1,1,Creates an XMLObject from the specified parameters.,";javax.xml.crypto.dsig.XMLSignatureFactory.newXMLObject(List,String,String,String)",;1
newXPath,1,1,Return a new XPath using the underlying object model determined when the XPathFactory was instantiated.,;javax.xml.xpath.XPathFactory.newXPath(),;1
next_n,1,1,This operation returns at most the requested number of bindings.,";org.omg.CosNaming._BindingIteratorStub.next_n(int,BindingListHolder)",;1
next_one,1,1,"This operation returns the next binding. If there are no more bindings, false is returned.",;org.omg.CosNaming._BindingIteratorStub.next_one(BindingHolder),;1
nextBigDecimal,1,1,"Scans the next token of the input as a BigDecimal. If the next token matches the Decimal regular expression defined above then the token is converted into a BigDecimal value as if by removing all group separators, mapping non-ASCII digits into ASCII digits via the Character.digit, and passing the resulting string to the BigDecimal(String) constructor.",;java.util.Scanner.nextBigDecimal(),;1
nextClearBit,1,1,Returns the index of the first bit that is set to false that occurs on or after the specified starting index.,;java.util.BitSet.nextClearBit(int),;1
nextComplete,1,1,"If this task does not have a completer, invokes ForkJoinTask.quietlyComplete() and returns null. Or, if the completer's pending count is non-zero, decrements that pending count and returns null. Otherwise, returns the completer. This method can be used as part of a completion traversal loop for homogeneous task hierarchies: for (CountedCompleter&lt;?&gt; c = firstComplete(); c != null; c = c.nextComplete()) { // ... process c ... }",;java.util.concurrent.CountedCompleter.nextComplete(),;1
nextElement,1,1,"Returns the same value as the nextToken method, except that its declared return value is Object rather than String. It exists so that this class can implement the Enumeration interface.",;java.util.StringTokenizer.nextElement(),;1
nextEvent,1,1,Description copied from interface:XMLEventReader,;javax.xml.stream.util.EventReaderDelegate.nextEvent(),;1
nextFocus,1,1,"Deprecated.As of JDK version 1.1, replaced by transferFocus().",;java.awt.Component.nextFocus(),;1
nextLine,1,1,"Advances this scanner past the current line and returns the input that was skipped. This method returns the rest of the current line, excluding any line separator at the end. The position is set to the beginning of the next line. Since this method continues to search through the input looking for a line separator, it may buffer all of the input searching for the line to skip if no line separators are present.",;java.util.Scanner.nextLine(),;1
nextOrSame,1,1,"Returns the next-or-same day-of-week adjuster, which adjusts the date to the first occurrence of the specified day-of-week after the date being adjusted unless it is already on that day in which case the same object is returned. The ISO calendar system behaves as follows: The input 2011-01-15 (a Saturday) for parameter (MONDAY) will return 2011-01-17 (two days later). The input 2011-01-15 (a Saturday) for parameter (WEDNESDAY) will return 2011-01-19 (four days later). The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-15 (same as input). The behavior is suitable for use with most calendar systems. It uses the DAY_OF_WEEK field and the DAYS unit, and assumes a seven day week.",;java.time.temporal.TemporalAdjusters.nextOrSame(DayOfWeek),;1
nextProbablePrime,1,1,"Returns the first integer greater than this BigInteger that is probably prime. The probability that the number returned by this method is composite does not exceed 2-100. This method will never skip over a prime when searching: if it returns p, there is no prime q such that this &lt; q &lt; p.",;java.math.BigInteger.nextProbablePrime(),;1
nextSetBit,1,1,"Returns the index of the first bit that is set to true that occurs on or after the specified starting index. If no such bit exists then -1 is returned. To iterate over the true bits in a BitSet, use the following loop: for (int i = bs.nextSetBit(0); i &gt;= 0; i = bs.nextSetBit(i+1)) { // operate on index i here if (i == Integer.MAX_VALUE) { break; // or (i+1) would overflow } }",;java.util.BitSet.nextSetBit(int),;1
nextTransition,1,1,"Gets the next transition after the specified instant. This returns details of the next transition after the specified instant. For example, if the instant represents a point where ""Summer"" daylight savings time applies, then the method will return the transition to the next ""Winter"" time.",;java.time.zone.ZoneRules.nextTransition(Instant),;1
nodeChanged,1,1,Invoke this method after you've changed how node is to be represented in the tree.,;javax.swing.tree.DefaultTreeModel.nodeChanged(TreeNode),;1
nodesChanged,1,1,Invoke this method after you've changed how the children identified by childIndicies are to be represented in the tree.,";javax.swing.tree.DefaultTreeModel.nodesChanged(TreeNode,int[])",;1
nodeStructureChanged,1,1,Invoke this method if you've totally changed the children of node and its children's children... This will post a treeStructureChanged event.,;javax.swing.tree.DefaultTreeModel.nodeStructureChanged(TreeNode),;1
nodesWereInserted,1,1,Invoke this method after you've inserted some TreeNodes into node. childIndices should be the index of the new elements and must be sorted in ascending order.,";javax.swing.tree.DefaultTreeModel.nodesWereInserted(TreeNode,int[])",;1
nodesWereRemoved,1,1,Invoke this method after you've removed some TreeNodes from node. childIndices should be the index of the removed elements and must be sorted in ascending order. And removedChildren should be the array of the children objects that were removed.,";javax.swing.tree.DefaultTreeModel.nodesWereRemoved(TreeNode,int[],Object[])",;1
non_existent,1,1,Determines whether the server object for the object reference has been destroyed.,;org.omg.CORBA.portable.Delegate.non_existent(Object),;1
noneOf,1,1,Creates an empty enum set with the specified element type.,;java.util.EnumSet.noneOf(Class&lt;E&gt;),;1
nonNull,1,1,Returns true if the provided reference is non-null otherwise returns false.,;java.util.Objects.nonNull(Object),;1
notExists,1,1,"Tests whether the file located by this path does not exist. This method is intended for cases where it is required to take action when it can be confirmed that a file does not exist. The options parameter may be used to indicate how symbolic links are handled for the case that the file is a symbolic link. By default, symbolic links are followed. If the option NOFOLLOW_LINKS is present then symbolic links are not followed. Note that this method is not the complement of the exists method. Where it is not possible to determine if a file exists or not then both methods return false. As with the exists method, the result of this method is immediately outdated. If this method indicates the file does exist then there is no guarantee that a subsequence attempt to create the file will succeed. Care should be taken when using this method in security sensitive applications.",";java.nio.file.Files.notExists(Path,LinkOption...)",;1
notFilter,1,1,Returns a RowFilter that includes entries if the supplied filter does not include the entry.,";javax.swing.RowFilter.notFilter(RowFilter&lt;M,I&gt;)",;1
notifyAll,1,1,"Wakes up all threads that are waiting on this object's monitor. A thread waits on an object's monitor by calling one of the wait methods. The awakened threads will not be able to proceed until the current thread relinquishes the lock on this object. The awakened threads will compete in the usual manner with any other threads that might be actively competing to synchronize on this object; for example, the awakened threads enjoy no reliable privilege or disadvantage in being the next thread to lock this object. This method should only be called by a thread that is the owner of this object's monitor. See the notify method for a description of the ways in which a thread can become the owner of a monitor.",;java.lang.Object.notifyAll(),;1
notifyCursorMoved,1,1,"Notifies all of the listeners registered with this RowSet object that its cursor has moved. When an application calls a method to move the cursor, that method moves the cursor and then calls this method internally. An application should never invoke this method directly.",;javax.sql.rowset.BaseRowSet.notifyCursorMoved(),;1
notifyPathChange,1,1,Deprecated.As of JDK version 1.7,";javax.swing.tree.DefaultTreeSelectionModel.notifyPathChange(Vector&lt;?&gt;,TreePath)",;1
notifyRowChanged,1,1,"Notifies all of the listeners registered with this RowSet object that one of its rows has changed. When an application calls a method that changes a row, such as the CachedRowSet methods insertRow, updateRow, or deleteRow, that method calls notifyRowChanged internally. An application should never invoke this method directly.",;javax.sql.rowset.BaseRowSet.notifyRowChanged(),;1
notifyRowSetChanged,1,1,"Notifies all of the listeners registered with this RowSet object that its entire contents have changed. When an application calls methods that change the entire contents of the RowSet object, such as the CachedRowSet methods execute, populate, restoreOriginal, or release, that method calls notifyRowSetChanged internally (either directly or indirectly). An application should never invoke this method directly.",;javax.sql.rowset.BaseRowSet.notifyRowSetChanged(),;1
numberFilter,1,1,"Returns a RowFilter that includes entries that have at least one Number value meeting the specified criteria. For example, the following filter will only include entries with at least one number value equal to 10: RowFilter.numberFilter(ComparisonType.EQUAL, 10);",";javax.swing.RowFilter.numberFilter(RowFilter.ComparisonType,Number,int...)",;1
object_to_string,1,1,"Converts the given CORBA object reference to a string. Note that the format of this string is predefined by IIOP, allowing strings generated by a different ORB to be converted back into an object reference. The resulting String object may be stored or communicated in any way that a String object can be manipulated.",;org.omg.CORBA.ORB.object_to_string(Object),;1
obtrudeException,1,1,"Forcibly causes subsequent invocations of method get() and related methods to throw the given exception, whether or not already completed. This method is designed for use only in error recovery actions, and even in such situations may result in ongoing dependent completions using established versus overwritten outcomes.",;java.util.concurrent.CompletableFuture.obtrudeException(Throwable),;1
obtrudeValue,1,1,"Forcibly sets or resets the value subsequently returned by method get() and related methods, whether or not already completed. This method is designed for use only in error recovery actions, and even in such situations may result in ongoing dependent completions using established versus overwritten outcomes.",;java.util.concurrent.CompletableFuture.obtrudeValue(T),;1
ofCalendarField,1,1,"Returns the Field constant that corresponds to the Calendar constant calendarField. If there is no direct mapping between the Calendar constant and a Field, null is returned.",;java.text.DateFormat.Field.ofCalendarField(int),;1
ofDateAdjuster,1,1,"Obtains a TemporalAdjuster that wraps a date adjuster. The TemporalAdjuster is based on the low level Temporal interface. This method allows an adjustment from LocalDate to LocalDate to be wrapped to match the temporal-based interface. This is provided for convenience to make user-written adjusters simpler. In general, user-written adjusters should be static constants: static TemporalAdjuster TWO_DAYS_LATER = TemporalAdjusters.ofDateAdjuster(date -&gt; date.plusDays(2));",;java.time.temporal.TemporalAdjusters.ofDateAdjuster(UnaryOperator&lt;LocalDate&gt;),;1
ofDefaultLocale,1,1,Obtains the DecimalStyle for the default FORMAT locale. This method provides access to locale sensitive decimal style symbols. This is equivalent to calling of(Locale.getDefault(Locale.Category.FORMAT)).,;java.time.format.DecimalStyle.ofDefaultLocale(),;1
ofEpochDay,1,1,Obtains an instance of LocalDate from the epoch day count. This returns a LocalDate with the specified epoch-day. The EPOCH_DAY is a simple incrementing count of days where day 0 is 1970-01-01. Negative numbers represent earlier days.,;java.time.LocalDate.ofEpochDay(long),;1
ofEpochMilli,1,1,Obtains an instance of Instant using milliseconds from the epoch of 1970-01-01T00:00:00Z. The seconds and nanoseconds are extracted from the specified milliseconds.,;java.time.Instant.ofEpochMilli(long),;1
ofHoursMinutes,1,1,"Obtains an instance of ZoneOffset using an offset in hours and minutes. The sign of the hours and minutes components must match. Thus, if the hours is negative, the minutes must be negative or zero. If the hours is zero, the minutes may be positive, negative or zero.",";java.time.ZoneOffset.ofHoursMinutes(int,int)",;1
ofHoursMinutesSeconds,1,1,"Obtains an instance of ZoneOffset using an offset in hours, minutes and seconds. The sign of the hours, minutes and seconds components must match. Thus, if the hours is negative, the minutes and seconds must be negative or zero.",";java.time.ZoneOffset.ofHoursMinutesSeconds(int,int,int)",;1
ofLocal,1,1,"Obtains an instance of ZonedDateTime from a local date-time using the preferred offset if possible. The local date-time is resolved to a single instant on the time-line. This is achieved by finding a valid offset from UTC/Greenwich for the local date-time as defined by the rules of the zone ID. In most cases, there is only one valid offset for a local date-time. In the case of an overlap, where clocks are set back, there are two valid offsets. If the preferred offset is one of the valid offsets then it is used. Otherwise the earlier valid offset is used, typically corresponding to ""summer"". In the case of a gap, where clocks jump forward, there is no valid offset. Instead, the local date-time is adjusted to be later by the length of the gap. For a typical one hour daylight savings change, the local date-time will be moved one hour later into the offset typically corresponding to ""summer"".",";java.time.ZonedDateTime.ofLocal(LocalDateTime,ZoneId,ZoneOffset)",;1
ofLocalizedDate,1,1,"Returns a locale specific date format for the ISO chronology. This returns a formatter that will format or parse a date. The exact format pattern used varies by locale. The locale is determined from the formatter. The formatter returned directly by this method will use the default FORMAT locale. The locale can be controlled using withLocale(Locale) on the result of this method. Note that the localized pattern is looked up lazily. This DateTimeFormatter holds the style required and the locale, looking up the pattern required on demand. The returned formatter has a chronology of ISO set to ensure dates in other calendar systems are correctly converted. It has no override zone and uses the SMART resolver style.",;java.time.format.DateTimeFormatter.ofLocalizedDate(FormatStyle),;1
ofLocalizedTime,1,1,"Returns a locale specific time format for the ISO chronology. This returns a formatter that will format or parse a time. The exact format pattern used varies by locale. The locale is determined from the formatter. The formatter returned directly by this method will use the default FORMAT locale. The locale can be controlled using withLocale(Locale) on the result of this method. Note that the localized pattern is looked up lazily. This DateTimeFormatter holds the style required and the locale, looking up the pattern required on demand. The returned formatter has a chronology of ISO set to ensure dates in other calendar systems are correctly converted. It has no override zone and uses the SMART resolver style.",;java.time.format.DateTimeFormatter.ofLocalizedTime(FormatStyle),;1
ofMillis,1,1,Obtains a Duration representing a number of milliseconds. The seconds and nanoseconds are extracted from the specified milliseconds.,;java.time.Duration.ofMillis(long),;1
ofMinutes,1,1,"Obtains a Duration representing a number of standard minutes. The seconds are calculated based on the standard definition of a minute, where each minute is 60 seconds. The nanosecond in second field is set to zero.",;java.time.Duration.ofMinutes(long),;1
ofMonths,1,1,Obtains a Period representing a number of months. The resulting period will have the specified months. The years and days units will be zero.,;java.time.Period.ofMonths(int),;1
ofNanoOfDay,1,1,Obtains an instance of LocalTime from a nanos-of-day value. This returns a LocalTime with the specified nanosecond-of-day.,;java.time.LocalTime.ofNanoOfDay(long),;1
ofNanos,1,1,Obtains a Duration representing a number of nanoseconds. The seconds and nanoseconds are extracted from the specified nanoseconds.,;java.time.Duration.ofNanos(long),;1
ofNullable,1,1,"Returns an Optional describing the specified value, if non-null, otherwise returns an empty Optional.",;java.util.Optional.ofNullable(T),;1
ofOffset,1,1,"Obtains an instance of ZoneId wrapping an offset. If the prefix is ""GMT"", ""UTC"", or ""UT"" a ZoneId with the prefix and the non-zero offset is returned. If the prefix is empty """" the ZoneOffset is returned.",";java.time.ZoneId.ofOffset(String,ZoneOffset)",;1
ofSecondOfDay,1,1,Obtains an instance of LocalTime from a second-of-day value. This returns a LocalTime with the specified second-of-day. The nanosecond field will be set to zero.,;java.time.LocalTime.ofSecondOfDay(long),;1
ofStrict,1,1,"Obtains an instance of ZonedDateTime strictly validating the combination of local date-time, offset and zone ID. This creates a zoned date-time ensuring that the offset is valid for the local date-time according to the rules of the specified zone. If the offset is invalid, an exception is thrown.",";java.time.ZonedDateTime.ofStrict(LocalDateTime,ZoneOffset,ZoneId)",;1
ofTotalSeconds,1,1,"Obtains an instance of ZoneOffset specifying the total offset in seconds The offset must be in the range -18:00 to +18:00, which corresponds to -64800 to +64800.",;java.time.ZoneOffset.ofTotalSeconds(int),;1
ofWeeks,1,1,"Obtains a Period representing a number of weeks. The resulting period will be day-based, with the amount of days equal to the number of weeks multiplied by 7. The years and months units will be zero.",;java.time.Period.ofWeeks(int),;1
ofYearDay,1,1,"Obtains an instance of LocalDate from a year and day-of-year. This returns a LocalDate with the specified year and day-of-year. The day-of-year must be valid for the year, otherwise an exception will be thrown.",";java.time.LocalDate.ofYearDay(int,int)",;1
ofYears,1,1,Obtains a Period representing a number of years. The resulting period will have the specified years. The months and days units will be zero.,;java.time.Period.ofYears(int),;1
okToUseGui,1,1,Notify this instance that it may now render a GUI,;java.beans.beancontext.BeanContextSupport.okToUseGui(),;1
omitEnd,1,1,Return true if the end tag can be omitted.,;javax.swing.text.html.parser.Element.omitEnd(),;1
omitStart,1,1,Return true if the start tag can be omitted.,;javax.swing.text.html.parser.Element.omitStart(),;1
onAdvance,1,1,"Overridable method to perform an action upon impending phase advance, and to control termination. This method is invoked upon arrival of the party advancing this phaser (when all other waiting parties are dormant). If this method returns true, this phaser will be set to a final termination state upon advance, and subsequent calls to isTerminated() will return true. Any (unchecked) Exception or Error thrown by an invocation of this method is propagated to the party attempting to advance this phaser, in which case no advance occurs. The arguments to this method provide the state of the phaser prevailing for the current transition. The effects of invoking arrival, registration, and waiting methods on this phaser from within onAdvance are unspecified and should not be relied on. If this phaser is a member of a tiered set of phasers, then onAdvance is invoked only for its root phaser on each advance. To support the most common use cases, the default implementation of this method returns true when the number of registered parties has become zero as the result of a party invoking arriveAndDeregister. You can disable this behavior, thus enabling continuation upon future registrations, by overriding this method to always return false: Phaser phaser = new Phaser() { protected boolean onAdvance(int phase, int parties) { return false; } }",";java.util.concurrent.Phaser.onAdvance(int,int)",;1
onCompletion,1,1,"Performs an action when method tryComplete() is invoked and the pending count is zero, or when the unconditional method complete(T) is invoked. By default, this method does nothing. You can distinguish cases by checking the identity of the given caller argument. If not equal to this, then it is typically a subtask that may contain results (and/or links to other results) to combine.",;java.util.concurrent.CountedCompleter.onCompletion(CountedCompleter&lt;?&gt;),;1
onDeregistration,1,1,A callback that will be whenever the Spi class has been deregistered from a ServiceRegistry. Only the registry should call this method. The default implementation does nothing.,";javax.imageio.spi.IIOServiceProvider.onDeregistration(ServiceRegistry,Class&lt;?&gt;)",;1
oneTouchExpandableChanged,1,1,Messaged when the oneTouchExpandable value of the JSplitPane the receiver is contained in changes. Will create the leftButton and rightButton if they are null. invalidates the receiver as well.,;javax.swing.plaf.basic.BasicSplitPaneDivider.oneTouchExpandableChanged(),;1
onExceptionalCompletion,1,1,"Performs an action when method ForkJoinTask.completeExceptionally(Throwable) is invoked or method compute() throws an exception, and this task has not already otherwise completed normally. On entry to this method, this task ForkJoinTask.isCompletedAbnormally(). The return value of this method controls further propagation: If true and this task has a completer that has not completed, then that completer is also completed exceptionally, with the same exception as this completer. The default implementation of this method does nothing except return true.",";java.util.concurrent.CountedCompleter.onExceptionalCompletion(Throwable,CountedCompleter&lt;?&gt;)",;1
onRegistration,1,1,"A callback that will be called exactly once after the Spi class has been instantiated and registered in a ServiceRegistry. This may be used to verify that the environment is suitable for this service, for example that native libraries can be loaded. If the service cannot function in the environment where it finds itself, it should deregister itself from the registry. Only the registry should call this method. The default implementation does nothing.",";javax.imageio.spi.IIOServiceProvider.onRegistration(ServiceRegistry,Class&lt;?&gt;)",;1
onStart,1,1,"Initializes internal state after construction but before processing any tasks. If you override this method, you must invoke super.onStart() at the beginning of the method. Initialization requires care: Most fields must have legal default values, to ensure that attempted accesses from other threads work correctly even before this thread starts processing tasks.",;java.util.concurrent.ForkJoinWorkerThread.onStart(),;1
onTermination,1,1,"Performs cleanup associated with termination of this worker thread. If you override this method, you must invoke super.onTermination at the end of the overridden method.",;java.util.concurrent.ForkJoinWorkerThread.onTermination(Throwable),;1
op_name,1,1,Deprecated.use operation(),;org.omg.CORBA.ServerRequest.op_name(),;1
openAsynchronousServerSocketChannel,1,1,Opens an asynchronous server-socket channel.,;java.nio.channels.spi.AsynchronousChannelProvider.openAsynchronousServerSocketChannel(AsynchronousChannelGroup),;1
openAsynchronousSocketChannel,1,1,Opens an asynchronous socket channel.,;java.nio.channels.spi.AsynchronousChannelProvider.openAsynchronousSocketChannel(AsynchronousChannelGroup),;1
openFrame,1,1,"Normally this method will not be called. If it is, it try to determine the appropriate parent from the desktopIcon of the frame. Will remove the desktopIcon from its parent if it successfully adds the frame.",;javax.swing.DefaultDesktopManager.openFrame(JInternalFrame),;1
openPipe,1,1,Opens a pipe.,;java.nio.channels.spi.SelectorProvider.openPipe(),;1
openSelector,1,1,Opens a selector.,;java.nio.channels.spi.SelectorProvider.openSelector(),;1
openServerSocketChannel,1,1,Opens a server-socket channel.,;java.nio.channels.spi.SelectorProvider.openServerSocketChannel(),;1
openSocketChannel,1,1,Opens a socket channel.,;java.nio.channels.spi.SelectorProvider.openSocketChannel(),;1
openStream,1,1,Opens a connection to this URL and returns an InputStream for reading from that connection. This method is a shorthand for: openConnection().getInputStream(),;java.net.URL.openStream(),;1
optionalEnd,1,1,"Ends an optional section. The output of formatting can include optional sections, which may be nested. An optional section is started by calling optionalStart() and ended using this method (or at the end of the builder). Calling this method without having previously called optionalStart will throw an exception. Calling this method immediately after calling optionalStart has no effect on the formatter other than ending the (empty) optional section. All elements in the optional section are treated as optional. During formatting, the section is only output if data is available in the TemporalAccessor for all the elements in the section. During parsing, the whole section may be missing from the parsed string. For example, consider a builder setup as builder.appendValue(HOUR_OF_DAY,2).optionalStart().appendValue(MINUTE_OF_HOUR,2).optionalEnd(). During formatting, the minute will only be output if its value can be obtained from the date-time. During parsing, the input will be successfully parsed whether the minute is present or not.",;java.time.format.DateTimeFormatterBuilder.optionalEnd(),;1
optionalStart,1,1,"Mark the start of an optional section. The output of formatting can include optional sections, which may be nested. An optional section is started by calling this method and ended by calling optionalEnd() or by ending the build process. All elements in the optional section are treated as optional. During formatting, the section is only output if data is available in the TemporalAccessor for all the elements in the section. During parsing, the whole section may be missing from the parsed string. For example, consider a builder setup as builder.appendValue(HOUR_OF_DAY,2).optionalStart().appendValue(MINUTE_OF_HOUR,2). The optional section ends automatically at the end of the builder. During formatting, the minute will only be output if its value can be obtained from the date-time. During parsing, the input will be successfully parsed whether the minute is present or not.",;java.time.format.DateTimeFormatterBuilder.optionalStart(),;1
ordinal,1,1,"Returns the ordinal of this enumeration constant (its position in its enum declaration, where the initial constant is assigned an ordinal of zero). Most programmers will have no use for this method. It is designed for use by sophisticated enum-based data structures, such as EnumSet and EnumMap.",;java.lang.Enum.ordinal(),;1
ordinaryChar,1,1,"Specifies that the character argument is ""ordinary"" in this tokenizer. It removes any special significance the character has as a comment character, word component, string delimiter, white space, or number character. When such a character is encountered by the parser, the parser treats it as a single-character token and sets ttype field to the character value. Making a line terminator character ""ordinary"" may interfere with the ability of a StreamTokenizer to count lines. The lineno method may no longer reflect the presence of such terminator characters in its line count.",;java.io.StreamTokenizer.ordinaryChar(int),;1
ordinaryChars,1,1,Specifies that all characters c in the range low&lt;=c&lt;=high are "ordinary" in this tokenizer. See the ordinaryChar method for more information on a character being ordinary.,";java.io.StreamTokenizer.ordinaryChars(int,int)",;1
orFilter,1,1,"Returns a RowFilter that includes entries if any of the supplied filters includes the entry. The following example creates a RowFilter that will include any entries containing the string ""foo"" or the string ""bar"": List&lt;RowFilter&lt;Object,Object&gt;&gt; filters = new ArrayList&lt;RowFilter&lt;Object,Object&gt;&gt;(2); filters.add(RowFilter.regexFilter(""foo"")); filters.add(RowFilter.regexFilter(""bar"")); RowFilter&lt;Object,Object&gt; fooBarFilter = RowFilter.orFilter(filters);",";javax.swing.RowFilter.orFilter(Iterable&lt;?,?)",;1
out,1,1,Returns the destination for the output.,;java.util.Formatter.out(),;1
overlaps,1,1,Tells whether or not this lock overlaps the given lock range.,";java.nio.channels.FileLock.overlaps(long,long)",;1
paintAll,1,1,"Paints this component and all of its subcomponents. The origin of the graphics context, its (0,0) coordinate point, is the top-left corner of this component. The clipping region of the graphics context is the bounding rectangle of this component.",;java.awt.Component.paintAll(Graphics),;1
paintArrowButtonBackground,1,1,"Paints the background of an arrow button. Arrow buttons are created by some components, such as JScrollBar.",";javax.swing.plaf.synth.SynthPainter.paintArrowButtonBackground(SynthContext,Graphics,int,int,int,int)",;1
paintArrowButtonBorder,1,1,"Paints the border of an arrow button. Arrow buttons are created by some components, such as JScrollBar.",";javax.swing.plaf.synth.SynthPainter.paintArrowButtonBorder(SynthContext,Graphics,int,int,int,int)",;1
paintArrowButtonForeground,1,1,"Paints the foreground of an arrow button. This method is responsible for drawing a graphical representation of a direction, typically an arrow. Arrow buttons are created by some components, such as JScrollBar",";javax.swing.plaf.synth.SynthPainter.paintArrowButtonForeground(SynthContext,Graphics,int,int,int,int,int)",;1
paintButtonBackground,1,1,Paints the background of a button.,";javax.swing.plaf.synth.SynthPainter.paintButtonBackground(SynthContext,Graphics,int,int,int,int)",;1
paintButtonBorder,1,1,Paints the border of a button.,";javax.swing.plaf.synth.SynthPainter.paintButtonBorder(SynthContext,Graphics,int,int,int,int)",;1
paintCell,1,1,"Paint one List cell: compute the relevant state, get the ""rubber stamp"" cell renderer component, and then use the CellRendererPane to paint it. Subclasses may want to override this method rather than paint().",";javax.swing.plaf.basic.BasicListUI.paintCell(Graphics,int,Rectangle,ListCellRenderer,ListModel,ListSelectionModel,int)",;1
paintCheckBoxBackground,1,1,Paints the background of a check box.,";javax.swing.plaf.synth.SynthPainter.paintCheckBoxBackground(SynthContext,Graphics,int,int,int,int)",;1
paintCheckBoxBorder,1,1,Paints the border of a check box.,";javax.swing.plaf.synth.SynthPainter.paintCheckBoxBorder(SynthContext,Graphics,int,int,int,int)",;1
paintCheckBoxMenuItemBackground,1,1,Paints the background of a check box menu item.,";javax.swing.plaf.synth.SynthPainter.paintCheckBoxMenuItemBackground(SynthContext,Graphics,int,int,int,int)",;1
paintCheckBoxMenuItemBorder,1,1,Paints the border of a check box menu item.,";javax.swing.plaf.synth.SynthPainter.paintCheckBoxMenuItemBorder(SynthContext,Graphics,int,int,int,int)",;1
paintColorChooserBackground,1,1,Paints the background of a color chooser.,";javax.swing.plaf.synth.SynthPainter.paintColorChooserBackground(SynthContext,Graphics,int,int,int,int)",;1
paintColorChooserBorder,1,1,Paints the border of a color chooser.,";javax.swing.plaf.synth.SynthPainter.paintColorChooserBorder(SynthContext,Graphics,int,int,int,int)",;1
paintComboBoxBackground,1,1,Paints the background of a combo box.,";javax.swing.plaf.synth.SynthPainter.paintComboBoxBackground(SynthContext,Graphics,int,int,int,int)",;1
paintComboBoxBorder,1,1,Paints the border of a combo box.,";javax.swing.plaf.synth.SynthPainter.paintComboBoxBorder(SynthContext,Graphics,int,int,int,int)",;1
paintComponents,1,1,Paints each of the components in this container.,;java.awt.Container.paintComponents(Graphics),;1
paintContent,1,1,Paints the toolbar content.,";javax.swing.plaf.synth.SynthToolBarUI.paintContent(SynthContext,Graphics,Rectangle)",;1
paintDesktopIconBackground,1,1,Paints the background of a desktop icon.,";javax.swing.plaf.synth.SynthPainter.paintDesktopIconBackground(SynthContext,Graphics,int,int,int,int)",;1
paintDesktopIconBorder,1,1,Paints the border of a desktop icon.,";javax.swing.plaf.synth.SynthPainter.paintDesktopIconBorder(SynthContext,Graphics,int,int,int,int)",;1
paintDesktopPaneBackground,1,1,Paints the background of a desktop pane.,";javax.swing.plaf.synth.SynthPainter.paintDesktopPaneBackground(SynthContext,Graphics,int,int,int,int)",;1
paintDesktopPaneBorder,1,1,Paints the background of a desktop pane.,";javax.swing.plaf.synth.SynthPainter.paintDesktopPaneBorder(SynthContext,Graphics,int,int,int,int)",;1
paintDirtyRegions,1,1,Paint all of the components that have been marked dirty.,;javax.swing.RepaintManager.paintDirtyRegions(),;1
paintEditorPaneBackground,1,1,Paints the background of an editor pane.,";javax.swing.plaf.synth.SynthPainter.paintEditorPaneBackground(SynthContext,Graphics,int,int,int,int)",;1
paintEditorPaneBorder,1,1,Paints the border of an editor pane.,";javax.swing.plaf.synth.SynthPainter.paintEditorPaneBorder(SynthContext,Graphics,int,int,int,int)",;1
paintEnabledText,1,1,"Paint clippedText at textX, textY with the labels foreground color.",";javax.swing.plaf.basic.BasicLabelUI.paintEnabledText(JLabel,Graphics,String,int,int)",;1
paintFileChooserBackground,1,1,Paints the background of a file chooser.,";javax.swing.plaf.synth.SynthPainter.paintFileChooserBackground(SynthContext,Graphics,int,int,int,int)",;1
paintFileChooserBorder,1,1,Paints the border of a file chooser.,";javax.swing.plaf.synth.SynthPainter.paintFileChooserBorder(SynthContext,Graphics,int,int,int,int)",;1
paintFormattedTextFieldBackground,1,1,Paints the background of a formatted text field.,";javax.swing.plaf.synth.SynthPainter.paintFormattedTextFieldBackground(SynthContext,Graphics,int,int,int,int)",;1
paintFormattedTextFieldBorder,1,1,Paints the border of a formatted text field.,";javax.swing.plaf.synth.SynthPainter.paintFormattedTextFieldBorder(SynthContext,Graphics,int,int,int,int)",;1
paintHorizontalLabel,1,1,Called for every label in the label table. Used to draw the labels for horizontal sliders. The graphics have been translated to labelRect.y already.,";javax.swing.plaf.basic.BasicSliderUI.paintHorizontalLabel(Graphics,int,Component)",;1
paintInternalFrameBackground,1,1,Paints the background of an internal frame.,";javax.swing.plaf.synth.SynthPainter.paintInternalFrameBackground(SynthContext,Graphics,int,int,int,int)",;1
paintInternalFrameBorder,1,1,Paints the border of an internal frame.,";javax.swing.plaf.synth.SynthPainter.paintInternalFrameBorder(SynthContext,Graphics,int,int,int,int)",;1
paintInternalFrameTitlePaneBackground,1,1,Paints the background of an internal frame title pane.,";javax.swing.plaf.synth.SynthPainter.paintInternalFrameTitlePaneBackground(SynthContext,Graphics,int,int,int,int)",;1
paintInternalFrameTitlePaneBorder,1,1,Paints the border of an internal frame title pane.,";javax.swing.plaf.synth.SynthPainter.paintInternalFrameTitlePaneBorder(SynthContext,Graphics,int,int,int,int)",;1
paintLabelBackground,1,1,Paints the background of a label.,";javax.swing.plaf.synth.SynthPainter.paintLabelBackground(SynthContext,Graphics,int,int,int,int)",;1
paintLabelBorder,1,1,Paints the border of a label.,";javax.swing.plaf.synth.SynthPainter.paintLabelBorder(SynthContext,Graphics,int,int,int,int)",;1
paintLayer,1,1,Paints a portion of a highlight.,";javax.swing.text.DefaultHighlighter.DefaultHighlightPainter.paintLayer(Graphics,int,int,Shape,JTextComponent,View)",;1
paintListBackground,1,1,Paints the background of a list.,";javax.swing.plaf.synth.SynthPainter.paintListBackground(SynthContext,Graphics,int,int,int,int)",;1
paintListBorder,1,1,Paints the border of a list.,";javax.swing.plaf.synth.SynthPainter.paintListBorder(SynthContext,Graphics,int,int,int,int)",;1
paintMenuBackground,1,1,Paints the background of a menu.,";javax.swing.plaf.synth.SynthPainter.paintMenuBackground(SynthContext,Graphics,int,int,int,int)",;1
paintMenuBarBackground,1,1,Paints the background of a menu bar.,";javax.swing.plaf.synth.SynthPainter.paintMenuBarBackground(SynthContext,Graphics,int,int,int,int)",;1
paintMenuBarBorder,1,1,Paints the border of a menu bar.,";javax.swing.plaf.synth.SynthPainter.paintMenuBarBorder(SynthContext,Graphics,int,int,int,int)",;1
paintMenuBorder,1,1,Paints the border of a menu.,";javax.swing.plaf.synth.SynthPainter.paintMenuBorder(SynthContext,Graphics,int,int,int,int)",;1
paintMenuItemBackground,1,1,Paints the background of a menu item.,";javax.swing.plaf.synth.SynthPainter.paintMenuItemBackground(SynthContext,Graphics,int,int,int,int)",;1
paintMenuItemBorder,1,1,Paints the border of a menu item.,";javax.swing.plaf.synth.SynthPainter.paintMenuItemBorder(SynthContext,Graphics,int,int,int,int)",;1
paintOptionPaneBackground,1,1,Paints the background of an option pane.,";javax.swing.plaf.synth.SynthPainter.paintOptionPaneBackground(SynthContext,Graphics,int,int,int,int)",;1
paintOptionPaneBorder,1,1,Paints the border of an option pane.,";javax.swing.plaf.synth.SynthPainter.paintOptionPaneBorder(SynthContext,Graphics,int,int,int,int)",;1
paintPanelBackground,1,1,Paints the background of a panel.,";javax.swing.plaf.synth.SynthPainter.paintPanelBackground(SynthContext,Graphics,int,int,int,int)",;1
paintPanelBorder,1,1,Paints the border of a panel.,";javax.swing.plaf.synth.SynthPainter.paintPanelBorder(SynthContext,Graphics,int,int,int,int)",;1
paintPasswordFieldBackground,1,1,Paints the background of a password field.,";javax.swing.plaf.synth.SynthPainter.paintPasswordFieldBackground(SynthContext,Graphics,int,int,int,int)",;1
paintPasswordFieldBorder,1,1,Paints the border of a password field.,";javax.swing.plaf.synth.SynthPainter.paintPasswordFieldBorder(SynthContext,Graphics,int,int,int,int)",;1
paintPopupMenuBackground,1,1,Paints the background of a popup menu.,";javax.swing.plaf.synth.SynthPainter.paintPopupMenuBackground(SynthContext,Graphics,int,int,int,int)",;1
paintPopupMenuBorder,1,1,Paints the border of a popup menu.,";javax.swing.plaf.synth.SynthPainter.paintPopupMenuBorder(SynthContext,Graphics,int,int,int,int)",;1
paintProgressBarForeground,1,1,Paints the foreground of a progress bar. is responsible for providing an indication of the progress of the progress bar.,";javax.swing.plaf.synth.SynthPainter.paintProgressBarForeground(SynthContext,Graphics,int,int,int,int,int)",;1
paintRadioButtonBackground,1,1,Paints the background of a radio button.,";javax.swing.plaf.synth.SynthPainter.paintRadioButtonBackground(SynthContext,Graphics,int,int,int,int)",;1
paintRadioButtonBorder,1,1,Paints the border of a radio button.,";javax.swing.plaf.synth.SynthPainter.paintRadioButtonBorder(SynthContext,Graphics,int,int,int,int)",;1
paintRadioButtonMenuItemBackground,1,1,Paints the background of a radio button menu item.,";javax.swing.plaf.synth.SynthPainter.paintRadioButtonMenuItemBackground(SynthContext,Graphics,int,int,int,int)",;1
paintRadioButtonMenuItemBorder,1,1,Paints the border of a radio button menu item.,";javax.swing.plaf.synth.SynthPainter.paintRadioButtonMenuItemBorder(SynthContext,Graphics,int,int,int,int)",;1
paintRootPaneBackground,1,1,Paints the background of a root pane.,";javax.swing.plaf.synth.SynthPainter.paintRootPaneBackground(SynthContext,Graphics,int,int,int,int)",;1
paintRootPaneBorder,1,1,Paints the border of a root pane.,";javax.swing.plaf.synth.SynthPainter.paintRootPaneBorder(SynthContext,Graphics,int,int,int,int)",;1
paintRow,1,1,"Paints the renderer part of a row. The receiver should NOT modify clipBounds, or insets.",";javax.swing.plaf.basic.BasicTreeUI.paintRow(Graphics,Rectangle,Insets,Rectangle,TreePath,int,boolean,boolean,boolean)",;1
paintScrollBarThumbBackground,1,1,Paints the background of the thumb of a scrollbar. The thumb provides a graphical indication as to how much of the Component is visible in a JScrollPane.,";javax.swing.plaf.synth.SynthPainter.paintScrollBarThumbBackground(SynthContext,Graphics,int,int,int,int,int)",;1
paintScrollBarThumbBorder,1,1,Paints the border of the thumb of a scrollbar. The thumb provides a graphical indication as to how much of the Component is visible in a JScrollPane.,";javax.swing.plaf.synth.SynthPainter.paintScrollBarThumbBorder(SynthContext,Graphics,int,int,int,int,int)",;1
paintScrollPaneBackground,1,1,Paints the background of a scroll pane.,";javax.swing.plaf.synth.SynthPainter.paintScrollPaneBackground(SynthContext,Graphics,int,int,int,int)",;1
paintScrollPaneBorder,1,1,Paints the border of a scroll pane.,";javax.swing.plaf.synth.SynthPainter.paintScrollPaneBorder(SynthContext,Graphics,int,int,int,int)",;1
paintSeparatorForeground,1,1,Paints the foreground of a separator.,";javax.swing.plaf.synth.SynthPainter.paintSeparatorForeground(SynthContext,Graphics,int,int,int,int,int)",;1
paintSliderThumbBackground,1,1,Paints the background of the thumb of a slider.,";javax.swing.plaf.synth.SynthPainter.paintSliderThumbBackground(SynthContext,Graphics,int,int,int,int,int)",;1
paintSliderThumbBorder,1,1,Paints the border of the thumb of a slider.,";javax.swing.plaf.synth.SynthPainter.paintSliderThumbBorder(SynthContext,Graphics,int,int,int,int,int)",;1
paintSpinnerBackground,1,1,Paints the background of a spinner.,";javax.swing.plaf.synth.SynthPainter.paintSpinnerBackground(SynthContext,Graphics,int,int,int,int)",;1
paintSpinnerBorder,1,1,Paints the border of a spinner.,";javax.swing.plaf.synth.SynthPainter.paintSpinnerBorder(SynthContext,Graphics,int,int,int,int)",;1
paintSplitPaneBackground,1,1,Paints the background of a split pane.,";javax.swing.plaf.synth.SynthPainter.paintSplitPaneBackground(SynthContext,Graphics,int,int,int,int)",;1
paintSplitPaneBorder,1,1,Paints the border of a split pane.,";javax.swing.plaf.synth.SynthPainter.paintSplitPaneBorder(SynthContext,Graphics,int,int,int,int)",;1
paintSplitPaneDividerForeground,1,1,Paints the foreground of the divider of a split pane.,";javax.swing.plaf.synth.SynthPainter.paintSplitPaneDividerForeground(SynthContext,Graphics,int,int,int,int,int)",;1
paintSplitPaneDragDivider,1,1,"Paints the divider, when the user is dragging the divider, of a split pane.",";javax.swing.plaf.synth.SynthPainter.paintSplitPaneDragDivider(SynthContext,Graphics,int,int,int,int,int)",;1
paintTabbedPaneBackground,1,1,Paints the background of a tabbed pane.,";javax.swing.plaf.synth.SynthPainter.paintTabbedPaneBackground(SynthContext,Graphics,int,int,int,int)",;1
paintTabbedPaneBorder,1,1,Paints the border of a tabbed pane.,";javax.swing.plaf.synth.SynthPainter.paintTabbedPaneBorder(SynthContext,Graphics,int,int,int,int)",;1
paintTabbedPaneContentBackground,1,1,Paints the background of the area that contains the content of the selected tab of a tabbed pane.,";javax.swing.plaf.synth.SynthPainter.paintTabbedPaneContentBackground(SynthContext,Graphics,int,int,int,int)",;1
paintTabbedPaneContentBorder,1,1,Paints the border of the area that contains the content of the selected tab of a tabbed pane.,";javax.swing.plaf.synth.SynthPainter.paintTabbedPaneContentBorder(SynthContext,Graphics,int,int,int,int)",;1
paintTableBackground,1,1,Paints the background of a table.,";javax.swing.plaf.synth.SynthPainter.paintTableBackground(SynthContext,Graphics,int,int,int,int)",;1
paintTableBorder,1,1,Paints the border of a table.,";javax.swing.plaf.synth.SynthPainter.paintTableBorder(SynthContext,Graphics,int,int,int,int)",;1
paintTableHeaderBackground,1,1,Paints the background of the header of a table.,";javax.swing.plaf.synth.SynthPainter.paintTableHeaderBackground(SynthContext,Graphics,int,int,int,int)",;1
paintTableHeaderBorder,1,1,Paints the border of the header of a table.,";javax.swing.plaf.synth.SynthPainter.paintTableHeaderBorder(SynthContext,Graphics,int,int,int,int)",;1
paintTextAreaBackground,1,1,Paints the background of a text area.,";javax.swing.plaf.synth.SynthPainter.paintTextAreaBackground(SynthContext,Graphics,int,int,int,int)",;1
paintTextAreaBorder,1,1,Paints the border of a text area.,";javax.swing.plaf.synth.SynthPainter.paintTextAreaBorder(SynthContext,Graphics,int,int,int,int)",;1
paintTextFieldBackground,1,1,Paints the background of a text field.,";javax.swing.plaf.synth.SynthPainter.paintTextFieldBackground(SynthContext,Graphics,int,int,int,int)",;1
paintTextFieldBorder,1,1,Paints the border of a text field.,";javax.swing.plaf.synth.SynthPainter.paintTextFieldBorder(SynthContext,Graphics,int,int,int,int)",;1
paintTextPaneBackground,1,1,Paints the background of a text pane.,";javax.swing.plaf.synth.SynthPainter.paintTextPaneBackground(SynthContext,Graphics,int,int,int,int)",;1
paintTextPaneBorder,1,1,Paints the border of a text pane.,";javax.swing.plaf.synth.SynthPainter.paintTextPaneBorder(SynthContext,Graphics,int,int,int,int)",;1
paintTitleBackground,1,1,Invoked from paintComponent. Paints the background of the titlepane. All text and icons will then be rendered on top of this background.,;javax.swing.plaf.basic.BasicInternalFrameTitlePane.paintTitleBackground(Graphics),;1
paintToggleButtonBackground,1,1,Paints the background of a toggle button.,";javax.swing.plaf.synth.SynthPainter.paintToggleButtonBackground(SynthContext,Graphics,int,int,int,int)",;1
paintToggleButtonBorder,1,1,Paints the border of a toggle button.,";javax.swing.plaf.synth.SynthPainter.paintToggleButtonBorder(SynthContext,Graphics,int,int,int,int)",;1
paintToolTipBackground,1,1,Paints the background of a tool tip.,";javax.swing.plaf.synth.SynthPainter.paintToolTipBackground(SynthContext,Graphics,int,int,int,int)",;1
paintToolTipBorder,1,1,Paints the border of a tool tip.,";javax.swing.plaf.synth.SynthPainter.paintToolTipBorder(SynthContext,Graphics,int,int,int,int)",;1
paintTreeBackground,1,1,Paints the background of a tree.,";javax.swing.plaf.synth.SynthPainter.paintTreeBackground(SynthContext,Graphics,int,int,int,int)",;1
paintTreeBorder,1,1,Paints the border of a tree.,";javax.swing.plaf.synth.SynthPainter.paintTreeBorder(SynthContext,Graphics,int,int,int,int)",;1
paintTreeCellBackground,1,1,Paints the background of the row containing a cell in a tree.,";javax.swing.plaf.synth.SynthPainter.paintTreeCellBackground(SynthContext,Graphics,int,int,int,int)",;1
paintTreeCellBorder,1,1,Paints the border of the row containing a cell in a tree.,";javax.swing.plaf.synth.SynthPainter.paintTreeCellBorder(SynthContext,Graphics,int,int,int,int)",;1
paintTreeCellFocus,1,1,Paints the focus indicator for a cell in a tree when it has focus.,";javax.swing.plaf.synth.SynthPainter.paintTreeCellFocus(SynthContext,Graphics,int,int,int,int)",;1
paintTriangle,1,1,Paints a triangle.,";javax.swing.plaf.basic.BasicArrowButton.paintTriangle(Graphics,int,int,int,int,boolean)",;1
paintValue,1,1,Paint a representation of the value into a given area of screen real estate. Note that the propertyEditor is responsible for doing its own clipping so that it fits into the given rectangle. If the PropertyEditor doesn't honor paint requests (see isPaintable) this method should be a silent noop.,";java.beans.PropertyEditorSupport.paintValue(Graphics,Rectangle)",;1
paintVerticalLabel,1,1,Called for every label in the label table. Used to draw the labels for vertical sliders. The graphics have been translated to labelRect.x already.,";javax.swing.plaf.basic.BasicSliderUI.paintVerticalLabel(Graphics,int,Component)",;1
paintViewportBackground,1,1,Paints the background of the viewport.,";javax.swing.plaf.synth.SynthPainter.paintViewportBackground(SynthContext,Graphics,int,int,int,int)",;1
paintViewportBorder,1,1,Paints the border of a viewport.,";javax.swing.plaf.synth.SynthPainter.paintViewportBorder(SynthContext,Graphics,int,int,int,int)",;1
parameterArray,1,1,Presents the parameter types as an array (a convenience method). Changes to the array will not result in changes to the type.,;java.lang.invoke.MethodType.parameterArray(),;1
parameterCount,1,1,Returns the number of parameter types in this method type.,;java.lang.invoke.MethodType.parameterCount(),;1
parameterList,1,1,Presents the parameter types as a list (a convenience method). The list will be immutable.,;java.lang.invoke.MethodType.parameterList(),;1
parameterModifiers,1,1,Return an int value OR-ing together the source language modifiers that can be applied to a parameter.,;java.lang.reflect.Modifier.parameterModifiers(),;1
parameterType,1,1,"Returns the parameter type at the specified index, within this method type.",;java.lang.invoke.MethodType.parameterType(int),;1
params,1,1,Deprecated.use the method arguments,;org.omg.CORBA.ServerRequest.params(NVList),;1
parentOf,1,1,Tests if this thread group is either the thread group argument or one of its ancestor thread groups.,;java.lang.ThreadGroup.parentOf(ThreadGroup),;1
parseAnySimpleType,1,1,Return a string containing the lexical representation of the simple type.,;javax.xml.bind.DatatypeConverter.parseAnySimpleType(String),;1
parseBase64Binary,1,1,Converts the string argument into an array of bytes.,;javax.xml.bind.DatatypeConverter.parseBase64Binary(String),;1
parseBest,1,1,"Fully parses the text producing an object of one of the specified types. This parse method is convenient for use when the parser can handle optional elements. For example, a pattern of 'uuuu-MM-dd HH.mm[ VV]' can be fully parsed to a ZonedDateTime, or partially parsed to a LocalDateTime. The queries must be specified in order, starting from the best matching full-parse option and ending with the worst matching minimal parse option. The query is typically a method reference to a from(TemporalAccessor) method. The result is associated with the first type that successfully parses. Normally, applications will use instanceof to check the result. For example: TemporalAccessor dt = parser.parseBest(str, ZonedDateTime::from, LocalDateTime::from); if (dt instanceof ZonedDateTime) { ... } else { ... } If the parse completes without reading the entire length of the text, or a problem occurs during parsing or merging, then an exception is thrown.",";java.time.format.DateTimeFormatter.parseBest(CharSequence,TemporalQuery&lt;?&gt;...)",;1
parseCaseInsensitive,1,1,"Changes the parse style to be case insensitive for the remainder of the formatter. Parsing can be case sensitive or insensitive - by default it is case sensitive. This method allows the case sensitivity setting of parsing to be changed. Calling this method changes the state of the builder such that all subsequent builder method calls will parse text in case insensitive mode. See parseCaseSensitive() for the opposite setting. The parse case sensitive/insensitive methods may be called at any point in the builder, thus the parser can swap between case parsing modes multiple times during the parse.",;java.time.format.DateTimeFormatterBuilder.parseCaseInsensitive(),;1
parseCaseSensitive,1,1,"Changes the parse style to be case sensitive for the remainder of the formatter. Parsing can be case sensitive or insensitive - by default it is case sensitive. This method allows the case sensitivity setting of parsing to be changed. Calling this method changes the state of the builder such that all subsequent builder method calls will parse text in case sensitive mode. See parseCaseInsensitive() for the opposite setting. The parse case sensitive/insensitive methods may be called at any point in the builder, thus the parser can swap between case parsing modes multiple times during the parse. Since the default is case sensitive, this method should only be used after a previous call to #parseCaseInsensitive.",;java.time.format.DateTimeFormatterBuilder.parseCaseSensitive(),;1
parseDate,1,1,Converts the string argument into a Calendar value.,;javax.xml.bind.DatatypeConverter.parseDate(String),;1
parseDateTime,1,1,Converts the string argument into a Calendar value.,;javax.xml.bind.DatatypeConverter.parseDateTime(String),;1
parseDecimal,1,1,Converts the string argument into a BigDecimal value.,;javax.xml.bind.DatatypeConverter.parseDecimal(String),;1
parseDefaulting,1,1,"Appends a default value for a field to the formatter for use in parsing. This appends an instruction to the builder to inject a default value into the parsed result. This is especially useful in conjunction with optional parts of the formatter. For example, consider a formatter that parses the year, followed by an optional month, with a further optional day-of-month. Using such a formatter would require the calling code to check whether a full date, year-month or just a year had been parsed. This method can be used to default the month and day-of-month to a sensible value, such as the first of the month, allowing the calling code to always get a date. During formatting, this method has no effect. During parsing, the current state of the parse is inspected. If the specified field has no associated value, because it has not been parsed successfully at that point, then the specified value is injected into the parse result. Injection is immediate, thus the field-value pair will be visible to any subsequent elements in the formatter. As such, this method is normally called at the end of the builder.",";java.time.format.DateTimeFormatterBuilder.parseDefaulting(TemporalField,long)",;1
parsedLeapSecond,1,1,"A query that provides access to whether a leap-second was parsed. This returns a singleton query that provides access to additional information from the parse. The query always returns a non-null boolean, true if parsing saw a leap-second, false if not. Instant parsing handles the special ""leap second"" time of '23:59:60'. Leap seconds occur at '23:59:60' in the UTC time-zone, but at other local times in different time-zones. To avoid this potential ambiguity, the handling of leap-seconds is limited to DateTimeFormatterBuilder.appendInstant(), as that method always parses the instant with the UTC zone offset. If the time '23:59:60' is received, then a simple conversion is applied, replacing the second-of-minute of 60 with 59. This query can be used on the parse result to determine if the leap-second adjustment was made. The query will return true if it did adjust to remove the leap-second, and false if not. Note that applying a leap-second smoothing mechanism, such as UTC-SLS, is the responsibility of the application, as follows: TemporalAccessor parsed = formatter.parse(str); Instant instant = parsed.query(Instant::from); if (parsed.query(DateTimeFormatter.parsedLeapSecond())) { // validate leap-second is correct and apply correct smoothing }",;java.time.format.DateTimeFormatter.parsedLeapSecond(),;1
parseDTDMarkup,1,1,Parses th Document Declaration Type markup declaration. Currently ignores it.,;javax.swing.text.html.parser.Parser.parseDTDMarkup(),;1
parseHexBinary,1,1,Converts the string argument into an array of bytes.,;javax.xml.bind.DatatypeConverter.parseHexBinary(String),;1
parseInteger,1,1,Convert the string argument into a BigInteger value.,;javax.xml.bind.DatatypeConverter.parseInteger(String),;1
parseLenient,1,1,"Changes the parse style to be lenient for the remainder of the formatter. Note that case sensitivity is set separately to this method. Parsing can be strict or lenient - by default its strict. This controls the degree of flexibility in matching the text and sign styles. Applications calling this method should typically also call parseCaseInsensitive(). When used, this method changes the parsing to be lenient from this point onwards. The change will remain in force until the end of the formatter that is eventually constructed or until parseStrict is called.",;java.time.format.DateTimeFormatterBuilder.parseLenient(),;1
parseLevel,1,1,Deprecated.no replacement,;java.rmi.server.LogStream.parseLevel(String),;1
parseMarkupDeclarations,1,1,Parse markup declarations. Currently only handles the Document Type Declaration markup. Returns true if it is a markup declaration false otherwise.,;javax.swing.text.html.parser.Parser.parseMarkupDeclarations(StringBuffer),;1
parseNumbers,1,1,"Specifies that numbers should be parsed by this tokenizer. The syntax table of this tokenizer is modified so that each of the twelve characters: 0 1 2 3 4 5 6 7 8 9 . - has the ""numeric"" attribute. When the parser encounters a word token that has the format of a double precision floating-point number, it treats the token as a number rather than a word, by setting the ttype field to the value TT_NUMBER and putting the numeric value of the token into the nval field.",;java.io.StreamTokenizer.parseNumbers(),;1
parseQName,1,1,Converts the string argument into a byte value. String parameter lexicalXSDQname must conform to lexical value space specifed at XML Schema Part 2:Datatypes specification:QNames,";javax.xml.bind.DatatypeConverter.parseQName(String,NamespaceContext)",;1
parseServerAuthority,1,1,"Attempts to parse this URI's authority component, if defined, into user-information, host, and port components. If this URI's authority component has already been recognized as being server-based then it will already have been parsed into user-information, host, and port components. In this case, or if this URI has no authority component, this method simply returns this URI. Otherwise this method attempts once more to parse the authority component into user-information, host, and port components, and throws an exception describing why the authority component could not be parsed in that way. This method is provided because the generic URI syntax specified in RFC2396 cannot always distinguish a malformed server-based authority from a legitimate registry-based authority. It must therefore treat some instances of the former as instances of the latter. The authority component in the URI string ""//foo:bar"", for example, is not a legal server-based authority but it is legal as a registry-based authority. In many common situations, for example when working URIs that are known to be either URNs or URLs, the hierarchical URIs being used will always be server-based. They therefore must either be parsed as such or treated as an error. In these cases a statement such as URI u= new URI(str).parseServerAuthority(); can be used to ensure that u always refers to a URI that, if it has an authority component, has a server-based authority with proper user-information, host, and port components. Invoking this method also ensures that if the authority could not be parsed in that way then an appropriate diagnostic message can be issued based upon the exception that is thrown.",;java.net.URI.parseServerAuthority(),;1
parseStrict,1,1,"Changes the parse style to be strict for the remainder of the formatter. Parsing can be strict or lenient - by default its strict. This controls the degree of flexibility in matching the text and sign styles. When used, this method changes the parsing to be strict from this point onwards. As strict is the default, this is normally only needed after calling parseLenient(). The change will remain in force until the end of the formatter that is eventually constructed or until parseLenient is called.",;java.time.format.DateTimeFormatterBuilder.parseStrict(),;1
parseString,1,1,Convert the lexical XSD string argument into a String value.,;javax.xml.bind.DatatypeConverter.parseString(String),;1
parseTime,1,1,Converts the string argument into a Calendar value.,;javax.xml.bind.DatatypeConverter.parseTime(String),;1
parseUnresolved,1,1,"Parses the text using this formatter, without resolving the result, intended for advanced use cases. Parsing is implemented as a two-phase operation. First, the text is parsed using the layout defined by the formatter, producing a Map of field to value, a ZoneId and a Chronology. Second, the parsed data is resolved, by validating, combining and simplifying the various fields into more useful ones. This method performs the parsing stage but not the resolving stage. The result of this method is TemporalAccessor which represents the data as seen in the input. Values are not validated, thus parsing a date string of '2012-00-65' would result in a temporal with three fields - year of '2012', month of '0' and day-of-month of '65'. The text will be parsed from the specified start ParsePosition. The entire length of the text does not have to be parsed, the ParsePosition will be updated with the index at the end of parsing. Errors are returned using the error index field of the ParsePosition instead of DateTimeParseException. The returned error index will be set to an index indicative of the error. Callers must check for errors before using the result. If the formatter parses the same field more than once with different values, the result will be an error. This method is intended for advanced use cases that need access to the internal state during parsing. Typical application code should use parse(CharSequence, TemporalQuery) or the parse method on the target type.",";java.time.format.DateTimeFormatter.parseUnresolved(CharSequence,ParsePosition)",;1
parseUnsignedLong,1,1,"Parses the string argument as an unsigned decimal long. The characters in the string must all be decimal digits, except that the first character may be an an ASCII plus sign '+' ('\u002B'). The resulting integer value is returned, exactly as if the argument and the radix 10 were given as arguments to the parseUnsignedLong(java.lang.String, int) method.",;java.lang.Long.parseUnsignedLong(String),;1
parseUnsignedShort,1,1,Converts the string argument into an int value.,;javax.xml.bind.DatatypeConverter.parseUnsignedShort(String),;1
parseURL,1,1,"Parses the string representation of a URL into a URL object. If there is any inherited context, then it has already been copied into the URL argument. The parseURL method of URLStreamHandler parses the string representation as if it were an http specification. Most URL protocol families have a similar parsing. A stream protocol handler for a protocol that has a different syntax must override this routine.",";java.net.URLStreamHandler.parseURL(URL,String,int,int)",;1
paste,1,1,"Transfers the contents of the system clipboard into the associated text model. If there is a selection in the associated view, it is replaced with the contents of the clipboard. If there is no selection, the clipboard contents are inserted in front of the current insert position in the associated view. If the clipboard is empty, does nothing.",;javax.swing.text.JTextComponent.paste(),;1
pathByAddingChild,1,1,Returns a new path containing all the elements of this path plus child. child is the last element of the newly created TreePath.,;javax.swing.tree.TreePath.pathByAddingChild(Object),;1
pathFromAncestorEnumeration,1,1,"Creates and returns an enumeration that follows the path from ancestor to this node. The enumeration's nextElement() method first returns ancestor, then the child of ancestor that is an ancestor of this node, and so on, and finally returns this node. Creation of the enumeration is O(m) where m is the number of nodes between this node and ancestor, inclusive. Each nextElement() message is O(1). Modifying the tree by inserting, removing, or moving a node invalidates any enumerations created before the modification.",;javax.swing.tree.DefaultMutableTreeNode.pathFromAncestorEnumeration(TreeNode),;1
pathToPoint,1,1,"Convert a location relative to the path to a point in user coordinates. The path might bend abruptly or be disjoint at the location's advance. If this is the case, the value of 'preceding' is used to disambiguate the portion of the path whose location and slope is to be used to interpret the offset.",";java.awt.font.LayoutPath.pathToPoint(Point2D,boolean,Point2D)",;1
pathWasCollapsed,1,1,Messaged from the VisibleTreeNode after it has collapsed.,;javax.swing.plaf.basic.BasicTreeUI.pathWasCollapsed(TreePath),;1
pathWasExpanded,1,1,Messaged from the VisibleTreeNode after it has been expanded.,;javax.swing.plaf.basic.BasicTreeUI.pathWasExpanded(TreePath),;1
peekData,1,1,"Peek at the packet to see who it is from. The data is copied into the specified DatagramPacket. The data is returned, but not consumed, so that a subsequent peekData/receive operation will see the same data.",;java.net.DatagramSocketImpl.peekData(DatagramPacket),;1
peekNextLocalTask,1,1,"Returns, but does not unschedule or execute, a task queued by the current thread but not yet executed, if one is immediately available. There is no guarantee that this task will actually be polled or executed next. Conversely, this method may return null even if a task exists but cannot be accessed without contention with other threads. This method is designed primarily to support extensions, and is unlikely to be useful otherwise.",;java.util.concurrent.ForkJoinTask.peekNextLocalTask(),;1
perform_work,1,1,Performs an implementation-dependent unit of work if called by the main thread. Otherwise it does nothing. The methods work_pending and perform_work can be used in conjunction to implement a simple polling loop that multiplexes the main thread among the ORB and other activities.,;org.omg.CORBA.ORB.perform_work(),;1
performDefaultLayout,1,1,Assigns default positions to each glyph in this GlyphVector. This can destroy information generated during initial layout of this GlyphVector.,;java.awt.font.GlyphVector.performDefaultLayout(),;1
period,1,1,"Obtains a period for this chronology based on years, months and days. This returns a period tied to the ISO chronology using the specified years, months and days. See Period for further details.",";java.time.chrono.IsoChronology.period(int,int,int)",;1
permissions,1,1,Returns a copy of the permissions component. The returned set is a modifiable copy of the permissions.,;java.nio.file.attribute.AclEntry.permissions(),;1
permuteArguments,1,1,"Produces a method handle which adapts the calling sequence of the given method handle to a new type, by reordering the arguments. The resulting method handle is guaranteed to report a type which is equal to the desired new type. The given array controls the reordering. Call #I the number of incoming parameters (the value newType.parameterCount(), and call #O the number of outgoing parameters (the value target.type().parameterCount()). Then the length of the reordering array must be #O, and each element must be a non-negative number less than #I. For every N less than #O, the N-th outgoing argument will be taken from the I-th incoming argument, where I is reorder[N]. No argument or return value conversions are applied. The type of each incoming argument, as determined by newType, must be identical to the type of the corresponding outgoing parameter or parameters in the target method handle. The return type of newType must be identical to the return type of the original target. The reordering array need not specify an actual permutation. An incoming argument will be duplicated if its index appears more than once in the array, and an incoming argument will be dropped if its index does not appear in the array. As in the case of dropArguments, incoming arguments which are not mentioned in the reordering array are may be any type, as determined only by newType. import static java.lang.invoke.MethodHandles.*;import static java.lang.invoke.MethodType.*;...MethodType intfn1 = methodType(int.class, int.class);MethodType intfn2 = methodType(int.class, int.class, int.class);MethodHandle sub = ... (int x, int y) -&gt; (x-y) ...;assert(sub.type().equals(intfn2));MethodHandle sub1 = permuteArguments(sub, intfn2, 0, 1);MethodHandle rsub = permuteArguments(sub, intfn2, 1, 0);assert((int)rsub.invokeExact(1, 100) == 99);MethodHandle add = ... (int x, int y) -&gt; (x+y) ...;assert(add.type().equals(intfn2));MethodHandle twice = permuteArguments(add, intfn1, 0, 0);assert(twice.type().equals(intfn1));assert((int)twice.invokeExact(21) == 42);",";java.lang.invoke.MethodHandles.permuteArguments(MethodHandle,MethodType,int...)",;1
playSound,1,1,"If necessary, invokes actionPerformed on audioAction to play a sound. The actionPerformed method is invoked if the value of the ""AuditoryCues.playList"" default is a non-null Object[] containing a String entry equal to the name of the audioAction.",;javax.swing.plaf.basic.BasicLookAndFeel.playSound(Action),;1
pointToPath,1,1,"Convert a point in user space to a location relative to the path. The location is chosen so as to minimize the distance from the point to the path (e.g., the magnitude of the offset will be smallest). If there is more than one such location, the location with the smallest advance is chosen.",";java.awt.font.LayoutPath.pointToPath(Point2D,Point2D)",;1
policy_type,1,1,Returns the constant value that corresponds to the type of the policy object. The values of the polivy objectys are allocated by the OMG. New values for PolicyType should be obtained from the OMG by sending mail to request@omg.org. In general the constant values that are allocated are defined in conjunction with the definition of the corresponding policy object.,;org.omg.CORBA._PolicyStub.policy_type(),;1
poll_next_response,1,1,Finds out if any of the deferred (asynchronous) invocations have a response yet.,;org.omg.CORBA.ORB.poll_next_response(),;1
poll_response,1,1,Allows the user to determine whether a response has been received for the invocation triggered earlier with the send_deferred method.,;org.omg.CORBA.Request.poll_response(),;1
pollNextLocalTask,1,1,"Unschedules and returns, without executing, the next task queued by the current thread but not yet executed, if the current thread is operating in a ForkJoinPool. This method is designed primarily to support extensions, and is unlikely to be useful otherwise.",;java.util.concurrent.ForkJoinTask.pollNextLocalTask(),;1
pollSubmission,1,1,Removes and returns the next unexecuted submission if one is available. This method may be useful in extensions to this class that re-assign work in systems with multiple pools.,;java.util.concurrent.ForkJoinPool.pollSubmission(),;1
pollTask,1,1,"If the current thread is operating in a ForkJoinPool, unschedules and returns, without executing, the next task queued by the current thread but not yet executed, if one is available, or if not available, a task that was forked by some other thread, if available. Availability may be transient, so a null result does not necessarily imply quiescence of the pool this task is operating in. This method is designed primarily to support extensions, and is unlikely to be useful otherwise.",;java.util.concurrent.ForkJoinTask.pollTask(),;1
popContext,1,1,"Revert to the previous Namespace context. Normally, you should pop the context at the end of each XML element. After popping the context, all Namespace prefix mappings that were previously in force are restored.You must not attempt to declare additional Namespace prefixes after popping a context, unless you push another context first.",;org.xml.sax.helpers.NamespaceSupport.popContext(),;1
positionCaret,1,1,"Tries to set the position of the caret from the coordinates of a mouse event, using viewToModel().",;javax.swing.text.DefaultCaret.positionCaret(MouseEvent),;1
postActionEvent,1,1,Processes action events occurring on this textfield by dispatching them to any registered ActionListener objects. This is normally called by the controller registered with textfield.,;javax.swing.JTextField.postActionEvent(),;1
postClosingEvent,1,1,"Post a WINDOW_CLOSING-like event to the frame, so that it can be treated like a regular Frame.",;javax.swing.plaf.basic.BasicInternalFrameTitlePane.postClosingEvent(JInternalFrame),;1
postEdit,1,1,DEADLOCK WARNING: Calling this method may call undoableEditHappened in all listeners. It is unwise to call this method from one of its listeners.,;javax.swing.undo.UndoableEditSupport.postEdit(UndoableEdit),;1
postinvoke,1,1,This operation is invoked whenener a servant completes a request.,";org.omg.PortableServer._ServantLocatorStub.postinvoke(byte[],POA,String,Object,Servant)",;1
postorderEnumeration,1,1,"Creates and returns an enumeration that traverses the subtree rooted at this node in postorder. The first node returned by the enumeration's nextElement() method is the leftmost leaf. This is the same as a depth-first traversal. Modifying the tree by inserting, removing, or moving a node invalidates any enumerations created before the modification.",;javax.swing.tree.DefaultMutableTreeNode.postorderEnumeration(),;1
postRemoveUpdate,1,1,"Updates any document structure as a result of text removal. This method is called after the text has been removed from the Content. This will happen within a write lock. If a subclass of this class reimplements this method, it should delegate to the superclass as well.",;javax.swing.text.AbstractDocument.postRemoveUpdate(AbstractDocument.DefaultDocumentEvent),;1
postVisitDirectory,1,1,"Invoked for a directory after entries in the directory, and all of their descendants, have been visited. Unless overridden, this method returns CONTINUE if the directory iteration completes without an I/O exception; otherwise this method re-throws the I/O exception that caused the iteration of the directory to terminate prematurely.",";java.nio.file.SimpleFileVisitor.postVisitDirectory(T,IOException)",;1
preceding,1,1,"Returns the last boundary preceding the specified character offset. If the specified offset equals to the first text boundary, it returns BreakIterator.DONE and the iterator's current position is unchanged. Otherwise, the iterator's current position is set to the returned boundary. The value returned is always less than the offset or the value BreakIterator.DONE.",;java.text.BreakIterator.preceding(int),;1
preConcatenate,1,1,"Concatenates an AffineTransform Tx to this AffineTransform Cx in a less commonly used way such that Tx modifies the coordinate transformation relative to the absolute pixel space rather than relative to the existing user space. Cx is updated to perform the combined transformation. Transforming a point p by the updated transform Cx' is equivalent to first transforming p by the original transform Cx and then transforming the result by Tx like this: Cx'(p) = Tx(Cx(p)) In matrix notation, if this transform Cx is represented by the matrix [this] and Tx is represented by the matrix [Tx] then this method does the following: [this] = [Tx] x [this]",;java.awt.geom.AffineTransform.preConcatenate(AffineTransform),;1
preConcatenateTransform,1,1,Modifies the current user-to-device transform by prepending another transform. In matrix notation the operation is: [this] = [modTransform] x [this],;java.awt.image.renderable.RenderContext.preConcatenateTransform(AffineTransform),;1
preConcetenateTransform,1,1,Deprecated.replaced by preConcatenateTransform(AffineTransform).,;java.awt.image.renderable.RenderContext.preConcetenateTransform(AffineTransform),;1
preferLocaleFonts,1,1,"Indicates a preference for locale-specific fonts in the mapping of logical fonts to physical fonts. Calling this method indicates that font rendering should primarily use fonts specific to the primary writing system (the one indicated by the default encoding and the initial default locale). For example, if the primary writing system is Japanese, then characters should be rendered using a Japanese font if possible, and other fonts should only be used for characters for which the Japanese font doesn't have glyphs. The actual change in font rendering behavior resulting from a call to this method is implementation dependent; it may have no effect at all, or the requested behavior may already match the default behavior. The behavior may differ between font rendering in lightweight and peered components. Since calling this method requests a different font, clients should expect different metrics, and may need to recalculate window sizes and layout. Therefore this method should be called before user interface initialisation.",;java.awt.GraphicsEnvironment.preferLocaleFonts(),;1
preferProportionalFonts,1,1,"Indicates a preference for proportional over non-proportional (e.g. dual-spaced CJK fonts) fonts in the mapping of logical fonts to physical fonts. If the default mapping contains fonts for which proportional and non-proportional variants exist, then calling this method indicates the mapping should use a proportional variant. The actual change in font rendering behavior resulting from a call to this method is implementation dependent; it may have no effect at all. The behavior may differ between font rendering in lightweight and peered components. Since calling this method requests a different font, clients should expect different metrics, and may need to recalculate window sizes and layout. Therefore this method should be called before user interface initialisation.",;java.awt.GraphicsEnvironment.preferProportionalFonts(),;1
preinvoke,1,1,This operations is used to get a servant that will be used to process the request that caused preinvoke to be called.,";org.omg.PortableServer._ServantLocatorStub.preinvoke(byte[],POA,String,CookieHolder)",;1
preorderEnumeration,1,1,"Creates and returns an enumeration that traverses the subtree rooted at this node in preorder. The first node returned by the enumeration's nextElement() method is this node. Modifying the tree by inserting, removing, or moving a node invalidates any enumerations created before the modification.",;javax.swing.tree.DefaultMutableTreeNode.preorderEnumeration(),;1
prepareEditor,1,1,"Prepares the editor by querying the data model for the value and selection state of the cell at row, column. Note: Throughout the table package, the internal implementations always use this method to prepare editors so that this default behavior can be safely overridden by a subclass.",";javax.swing.JTable.prepareEditor(TableCellEditor,int,int)",;1
prepareForDragging,1,1,Message to prepare for dragging. This messages the BasicSplitPaneUI with startDragging.,;javax.swing.plaf.basic.BasicSplitPaneDivider.prepareForDragging(),;1
prepareForEditing,1,1,Invoked just before editing is to start. Will add the editingComponent to the editingContainer.,;javax.swing.tree.DefaultTreeCellEditor.prepareForEditing(),;1
prepareForUIInstall,1,1,"Invoked after the tree instance variable has been set, but before any defaults/listeners have been installed.",;javax.swing.plaf.basic.BasicTreeUI.prepareForUIInstall(),;1
prepareInsertEmpty,1,1,"Begins the insertion of a new image with undefined pixel values into an existing image stream. Existing images with an index greater than imageIndex are preserved, and their indices are each increased by 1. A value for imageIndex of -1 may be used to signify an index one larger than the previous largest index; that is, it will cause the image to be logically appended to the end of the sequence. If the output is an ImageOutputStream, the entirety of the stream must be both readable and writeable. The image contents may be supplied later using the replacePixels method. The insertion is not complete until a call to endInsertEmpty occurs. Calls to prepareReplacePixels, replacePixels, and endReplacePixels may occur between calls to prepareInsertEmpty and endInsertEmpty. However, calls to prepareInsertEmpty cannot be nested, and calls to prepareWriteEmpty and prepareInsertEmpty may not be interspersed. If canInsertEmpty(imageIndex) returns false, an UnsupportedOperationException will be thrown. An ImageWriteParam may optionally be supplied to control the writing process. If param is null, a default write param will be used. If the supplied ImageWriteParam contains optional setting values not supported by this writer (e.g. progressive encoding or any format-specific settings), they will be ignored. The default implementation throws an IllegalStateException if the output is null, and otherwise throws an UnsupportedOperationException.",";javax.imageio.ImageWriter.prepareInsertEmpty(int,ImageTypeSpecifier,int,int,IIOMetadata,List&lt;?,ImageWriteParam)",;1
prepareRenderer,1,1,"Prepares the renderer by querying the data model for the value and selection state of the cell at row, column. Returns the component (may be a Component or a JComponent) under the event location. During a printing operation, this method will configure the renderer without indicating selection or focus, to prevent them from appearing in the printed output. To do other customizations based on whether or not the table is being printed, you can check the value of JComponent.isPaintingForPrint(), either here or within custom renderers. Note: Throughout the table package, the internal implementations always use this method to prepare renderers so that this default behavior can be safely overridden by a subclass.",";javax.swing.JTable.prepareRenderer(TableCellRenderer,int,int)",;1
prepareReplacePixels,1,1,"Prepares the writer to handle a series of calls to the replacePixels methods. The affected pixel area will be clipped against the supplied If canReplacePixels returns false, and UnsupportedOperationException will be thrown. The default implementation throws an IllegalStateException if the output is null, and otherwise throws an UnsupportedOperationException.",";javax.imageio.ImageWriter.prepareReplacePixels(int,Rectangle)",;1
prepareWriteEmpty,1,1,"Begins the writing of a complete image stream, consisting of a single image with undefined pixel values and associated metadata and thumbnails, to the output. The pixel values will be defined by future calls to the replacePixels methods. If the output is an ImageOutputStream, its existing contents prior to the current seek position are not affected, and need not be readable or writable. The writing is not complete until a call to endWriteEmpty occurs. Calls to prepareReplacePixels, replacePixels, and endReplacePixels may occur between calls to prepareWriteEmpty and endWriteEmpty. However, calls to prepareWriteEmpty cannot be nested, and calls to prepareWriteEmpty and prepareInsertEmpty may not be interspersed. If canWriteEmpty returns false, an UnsupportedOperationException will be thrown. An ImageWriteParam may optionally be supplied to control the writing process. If param is null, a default write param will be used. If the supplied ImageWriteParam contains optional setting values not supported by this writer (e.g. progressive encoding or any format-specific settings), they will be ignored. The default implementation throws an IllegalStateException if the output is null, and otherwise throws an UnsupportedOperationException.",";javax.imageio.ImageWriter.prepareWriteEmpty(IIOMetadata,ImageTypeSpecifier,int,int,IIOMetadata,List&lt;?,ImageWriteParam)",;1
prepareWriteSequence,1,1,"Prepares a stream to accept a series of subsequent writeToSequence calls, using the provided stream metadata object. The metadata will be written to the stream if it should precede the image data. If the argument is null, default stream metadata is used. If the output is an ImageOutputStream, the existing contents of the output prior to the current seek position are flushed, and need not be readable or writable. If the format requires that endWriteSequence be able to rewind to patch up the header information, such as for a sequence of images in a single TIFF file, then the metadata written by this method must remain in a writable portion of the stream. Other formats may flush the stream after this method and after each image. If canWriteSequence returns false, this method will throw an UnsupportedOperationException. The output must have been set beforehand using either the setOutput method. The default implementation throws an IllegalStateException if the output is null, and otherwise throws an UnsupportedOperationException.",;javax.imageio.ImageWriter.prepareWriteSequence(IIOMetadata),;1
prestartAllCoreThreads,1,1,"Starts all core threads, causing them to idly wait for work. This overrides the default policy of starting core threads only when new tasks are executed.",;java.util.concurrent.ThreadPoolExecutor.prestartAllCoreThreads(),;1
prestartCoreThread,1,1,"Starts a core thread, causing it to idly wait for work. This overrides the default policy of starting core threads only when new tasks are executed. This method will return false if all core threads have already been started.",;java.util.concurrent.ThreadPoolExecutor.prestartCoreThread(),;1
previousClearBit,1,1,"Returns the index of the nearest bit that is set to false that occurs on or before the specified starting index. If no such bit exists, or if -1 is given as the starting index, then -1 is returned.",;java.util.BitSet.previousClearBit(int),;1
previousDouble,1,1,"Finds the greatest double less than d. If NaN, returns same value.",;java.text.ChoiceFormat.previousDouble(double),;1
previousOrSame,1,1,"Returns the previous-or-same day-of-week adjuster, which adjusts the date to the first occurrence of the specified day-of-week before the date being adjusted unless it is already on that day in which case the same object is returned. The ISO calendar system behaves as follows: The input 2011-01-15 (a Saturday) for parameter (MONDAY) will return 2011-01-10 (five days earlier). The input 2011-01-15 (a Saturday) for parameter (WEDNESDAY) will return 2011-01-12 (three days earlier). The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-15 (same as input). The behavior is suitable for use with most calendar systems. It uses the DAY_OF_WEEK field and the DAYS unit, and assumes a seven day week.",;java.time.temporal.TemporalAdjusters.previousOrSame(DayOfWeek),;1
previousSetBit,1,1,"Returns the index of the nearest bit that is set to true that occurs on or before the specified starting index. If no such bit exists, or if -1 is given as the starting index, then -1 is returned. To iterate over the true bits in a BitSet, use the following loop: for (int i = bs.length(); (i = bs.previousSetBit(i-1)) &gt;= 0; ) { // operate on index i here }",;java.util.BitSet.previousSetBit(int),;1
previousTransition,1,1,"Gets the previous transition before the specified instant. This returns details of the previous transition after the specified instant. For example, if the instant represents a point where ""summer"" daylight saving time applies, then the method will return the transition from the previous ""winter"" time.",;java.time.zone.ZoneRules.previousTransition(Instant),;1
preVisitDirectory,1,1,"Invoked for a directory before entries in the directory are visited. Unless overridden, this method returns CONTINUE.",";java.nio.file.SimpleFileVisitor.preVisitDirectory(T,BasicFileAttributes)",;1
primaryOrder,1,1,Return the primary component of a collation element.,;java.text.CollationElementIterator.primaryOrder(int),;1
principal,1,1,Returns the principal component.,;java.nio.file.attribute.AclEntry.principal(),;1
printAnySimpleType,1,1,Converts a string value into a string.,;javax.xml.bind.DatatypeConverter.printAnySimpleType(String),;1
printBase64Binary,1,1,Converts an array of bytes into a string.,;javax.xml.bind.DatatypeConverter.printBase64Binary(byte[]),;1
printBoolean,1,1,Converts a boolean value into a string.,;javax.xml.bind.DatatypeConverter.printBoolean(boolean),;1
printBorder,1,1,Prints the component's border. This is implemented to invoke paintBorder on the component. Override this if you wish to print the border differently that it is painted.,;javax.swing.JComponent.printBorder(Graphics),;1
printByte,1,1,Converts a byte value into a string.,;javax.xml.bind.DatatypeConverter.printByte(byte),;1
printChildren,1,1,Prints this component's children. This is implemented to invoke paintChildren on the component. Override this if you wish to print the children differently than painting.,;javax.swing.JComponent.printChildren(Graphics),;1
printComponent,1,1,This is invoked during a printing operation. This is implemented to invoke paintComponent on the component. Override this if you wish to add special painting behavior when printing.,;javax.swing.JComponent.printComponent(Graphics),;1
printDataTransferCompleted,1,1,"Called to notify the client that data has been successfully transferred to the print service, and the client may free local resources allocated for that data. The client should not assume that the data has been completely printed after receiving this event.",;javax.print.event.PrintJobAdapter.printDataTransferCompleted(PrintJobEvent),;1
printDate,1,1,Converts a Calendar value into a string.,;javax.xml.bind.DatatypeConverter.printDate(Calendar),;1
printDateTime,1,1,Converts a Calendar value into a string.,;javax.xml.bind.DatatypeConverter.printDateTime(Calendar),;1
printDecimal,1,1,Converts a BigDecimal value into a string.,;javax.xml.bind.DatatypeConverter.printDecimal(BigDecimal),;1
printDouble,1,1,Converts a double value into a string.,;javax.xml.bind.DatatypeConverter.printDouble(double),;1
printerStateReasonSet,1,1,"Obtain an unmodifiable set view of the individual printer state reason attributes at the given severity level in this PrinterStateReasons attribute. Each element in the set view is a PrinterStateReason object. The only elements in the set view are the PrinterStateReason objects that map to the given severity value. The set view is backed by this PrinterStateReasons attribute, so changes to this PrinterStateReasons attribute are reflected in the set view. The set view does not support element insertion or removal. The set view's iterator does not support element removal.",;javax.print.attribute.standard.PrinterStateReasons.printerStateReasonSet(Severity),;1
printFloat,1,1,Converts a float value into a string.,;javax.xml.bind.DatatypeConverter.printFloat(float),;1
printHexBinary,1,1,Converts an array of bytes into a string.,;javax.xml.bind.DatatypeConverter.printHexBinary(byte[]),;1
printInt,1,1,Converts an int value into a string.,;javax.xml.bind.DatatypeConverter.printInt(int),;1
printInteger,1,1,Converts a BigInteger value into a string.,;javax.xml.bind.DatatypeConverter.printInteger(BigInteger),;1
printJobCanceled,1,1,Called to notify the client that the job was canceled by user or program.,;javax.print.event.PrintJobAdapter.printJobCanceled(PrintJobEvent),;1
printJobCompleted,1,1,Called to notify the client that the job completed successfully.,;javax.print.event.PrintJobAdapter.printJobCompleted(PrintJobEvent),;1
printJobFailed,1,1,Called to notify the client that the job failed to complete successfully and will have to be resubmitted.,;javax.print.event.PrintJobAdapter.printJobFailed(PrintJobEvent),;1
printJobNoMoreEvents,1,1,"Called to notify the client that no more events will be delivered. One cause of this event being generated is if the job has successfully completed, but the printing system is limited in capability and cannot verify this. This event is required to be delivered if none of the other terminal events (completed/failed/canceled) are delivered.",;javax.print.event.PrintJobAdapter.printJobNoMoreEvents(PrintJobEvent),;1
printJobRequiresAttention,1,1,Called to notify the client that some possibly user rectifiable problem occurs (eg printer out of paper).,;javax.print.event.PrintJobAdapter.printJobRequiresAttention(PrintJobEvent),;1
printLong,1,1,Converts A long value into a string.,;javax.xml.bind.DatatypeConverter.printLong(long),;1
printQName,1,1,Converts a QName instance into a string.,";javax.xml.bind.DatatypeConverter.printQName(QName,NamespaceContext)",;1
printShort,1,1,Converts a short value into a string.,;javax.xml.bind.DatatypeConverter.printShort(short),;1
printString,1,1,Converts the string argument into a string.,;javax.xml.bind.DatatypeConverter.printString(String),;1
printTime,1,1,Converts a Calendar value into a string.,;javax.xml.bind.DatatypeConverter.printTime(Calendar),;1
printUnsignedInt,1,1,Converts a long value into a string.,;javax.xml.bind.DatatypeConverter.printUnsignedInt(long),;1
printUnsignedShort,1,1,Converts an int value into a string.,;javax.xml.bind.DatatypeConverter.printUnsignedShort(int),;1
privilegedCallable,1,1,"Returns a Callable object that will, when called, execute the given callable under the current access control context. This method should normally be invoked within an AccessController.doPrivileged action to create callables that will, if possible, execute under the selected permission settings holding within that action; or if not possible, throw an associated AccessControlException.",;java.util.concurrent.Executors.privilegedCallable(Callable&lt;T&gt;),;1
privilegedCallableUsingCurrentClassLoader,1,1,"Returns a Callable object that will, when called, execute the given callable under the current access control context, with the current context class loader as the context class loader. This method should normally be invoked within an AccessController.doPrivileged action to create callables that will, if possible, execute under the selected permission settings holding within that action; or if not possible, throw an associated AccessControlException.",;java.util.concurrent.Executors.privilegedCallableUsingCurrentClassLoader(Callable&lt;T&gt;),;1
privilegedThreadFactory,1,1,"Returns a thread factory used to create new threads that have the same permissions as the current thread. This factory creates threads with the same settings as defaultThreadFactory(), additionally setting the AccessControlContext and contextClassLoader of new threads to be the same as the thread invoking this privilegedThreadFactory method. A new privilegedThreadFactory can be created within an AccessController.doPrivileged action setting the current thread's access control context to create threads with the selected permission settings holding within that action. Note that while tasks running within such threads will have the same access control and class loader settings as the current thread, they need not have the same ThreadLocal or InheritableThreadLocal values. If necessary, particular values of thread locals can be set or reset before any task runs in ThreadPoolExecutor subclasses using ThreadPoolExecutor.beforeExecute(Thread, Runnable). Also, if it is necessary to initialize worker threads to have the same InheritableThreadLocal settings as some other designated thread, you can create a custom ThreadFactory in which that thread waits for and services requests to create others that will inherit its values.",;java.util.concurrent.Executors.privilegedThreadFactory(),;1
probablePrime,1,1,"Returns a positive BigInteger that is probably prime, with the specified bitLength. The probability that a BigInteger returned by this method is composite does not exceed 2-100.",";java.math.BigInteger.probablePrime(int,Random)",;1
processComponentEvent,1,1,"Processes component events occurring on the JLayer or any of its subcomponents. This method is not called unless component events are enabled for the JLayer objects, this LayerUI is set to. Component events are enabled in the overridden installUI(javax.swing.JComponent) method and should be disabled in the uninstallUI(javax.swing.JComponent) method after that. public void installUI(JComponent c) { super.installUI(c); JLayer l = (JLayer) c; l.setLayerEventMask(AWTEvent.COMPONENT_EVENT_MASK); } public void uninstallUI(JComponent c) { super.uninstallUI(c); JLayer l = (JLayer) c; l.setLayerEventMask(0); }",";javax.swing.plaf.LayerUI.processComponentEvent(ComponentEvent,JLayer&lt;?)",;1
processComponentKeyEvent,1,1,"Processes any key events that the component itself recognizes. This is called after the focus manager and any interested listeners have been given a chance to steal away the event. This method is called only if the event has not yet been consumed. This method is called prior to the keyboard UI logic. This method is implemented to do nothing. Subclasses would normally override this method if they process some key events themselves. If the event is processed, it should be consumed.",;javax.swing.JComponent.processComponentKeyEvent(KeyEvent),;1
processHierarchyBoundsEvent,1,1,"Processes hierarchy bounds event occurring on the JLayer or any of its subcomponents. This method is not called unless hierarchy bounds events are enabled for the JLayer objects, this LayerUI is set to. Hierarchy bounds events are enabled in the overridden installUI(javax.swing.JComponent) method and should be disabled in the uninstallUI(javax.swing.JComponent) method after that. public void installUI(JComponent c) { super.installUI(c); JLayer l = (JLayer) c; l.setLayerEventMask(AWTEvent.HIERARCHY_BOUNDS_EVENT_MASK); } public void uninstallUI(JComponent c) { super.uninstallUI(c); JLayer l = (JLayer) c; l.setLayerEventMask(0); }",";javax.swing.plaf.LayerUI.processHierarchyBoundsEvent(HierarchyEvent,JLayer&lt;?)",;1
processHierarchyEvent,1,1,"Processes hierarchy event occurring on the JLayer or any of its subcomponents. This method is not called unless hierarchy events are enabled for the JLayer objects, this LayerUI is set to. Hierarchy events are enabled in the overridden installUI(javax.swing.JComponent) method and should be disabled in the uninstallUI(javax.swing.JComponent) method after that. public void installUI(JComponent c) { super.installUI(c); JLayer l = (JLayer) c; l.setLayerEventMask(AWTEvent.HIERARCHY_EVENT_MASK); } public void uninstallUI(JComponent c) { super.uninstallUI(c); JLayer l = (JLayer) c; l.setLayerEventMask(0); }",";javax.swing.plaf.LayerUI.processHierarchyEvent(HierarchyEvent,JLayer&lt;?)",;1
processImageUpdate,1,1,Broadcasts the update of a set of samples to all registered IIOReadUpdateListeners by calling their imageUpdate method. Subclasses may use this method as a convenience.,";javax.imageio.ImageReader.processImageUpdate(BufferedImage,int,int,int,int,int,int,int[])",;1
processKeyBindings,1,1,"Process the key bindings for the Component associated with event. This method is only useful if event.getComponent() does not descend from JComponent, or your are not invoking super.processKeyEvent from within your JComponent subclass. JComponent automatically processes bindings from within its processKeyEvent method, hence you rarely need to directly invoke this method.",;javax.swing.SwingUtilities.processKeyBindings(KeyEvent),;1
processMenuDragMouseEvent,1,1,Handles mouse drag in a menu.,;javax.swing.JMenuItem.processMenuDragMouseEvent(MenuDragMouseEvent),;1
processMenuKeyEvent,1,1,Handles a keystroke in a menu.,;javax.swing.JMenuItem.processMenuKeyEvent(MenuKeyEvent),;1
processName,1,1,"Process a raw XML qualified name, after all declarations in the current context have been handled by declarePrefix(). This method processes a raw XML qualified name in the current context by removing the prefix and looking it up among the prefixes currently declared. The return value will be the array supplied by the caller, filled in as follows:parts[0]The Namespace URI, or an empty string if none is in use.parts[1]The local name (without prefix).parts[2]The original raw name.All of the strings in the array will be internalized. If the raw name has a prefix that has not been declared, then the return value will be null.Note that attribute names are processed differently than element names: an unprefixed element name will receive the default Namespace (if any), while an unprefixed attribute name will not.",";org.xml.sax.helpers.NamespaceSupport.processName(String,String[],boolean)",;1
processPassComplete,1,1,Broadcasts the end of a progressive pass to all registered IIOReadUpdateListeners by calling their passComplete method. Subclasses may use this method as a convenience.,;javax.imageio.ImageReader.processPassComplete(BufferedImage),;1
processPassStarted,1,1,Broadcasts the beginning of a progressive pass to all registered IIOReadUpdateListeners by calling their passStarted method. Subclasses may use this method as a convenience.,";javax.imageio.ImageReader.processPassStarted(BufferedImage,int,int,int,int,int,int,int,int[])",;1
processReadAborted,1,1,Broadcasts that the read has been aborted to all registered IIOReadProgressListeners by calling their readAborted method. Subclasses may use this method as a convenience.,;javax.imageio.ImageReader.processReadAborted(),;1
processSequenceComplete,1,1,Broadcasts the completion of an sequence of image reads to all registered IIOReadProgressListeners by calling their sequenceComplete method. Subclasses may use this method as a convenience.,;javax.imageio.ImageReader.processSequenceComplete(),;1
processSequenceStarted,1,1,Broadcasts the start of an sequence of image reads to all registered IIOReadProgressListeners by calling their sequenceStarted method. Subclasses may use this method as a convenience.,;javax.imageio.ImageReader.processSequenceStarted(int),;1
processThumbnailPassComplete,1,1,Broadcasts the end of a thumbnail progressive pass to all registered IIOReadUpdateListeners by calling their thumbnailPassComplete method. Subclasses may use this method as a convenience.,;javax.imageio.ImageReader.processThumbnailPassComplete(BufferedImage),;1
processThumbnailPassStarted,1,1,Broadcasts the beginning of a thumbnail progressive pass to all registered IIOReadUpdateListeners by calling their thumbnailPassStarted method. Subclasses may use this method as a convenience.,";javax.imageio.ImageReader.processThumbnailPassStarted(BufferedImage,int,int,int,int,int,int,int,int[])",;1
processThumbnailUpdate,1,1,Broadcasts the update of a set of samples in a thumbnail image to all registered IIOReadUpdateListeners by calling their thumbnailUpdate method. Subclasses may use this method as a convenience.,";javax.imageio.ImageReader.processThumbnailUpdate(BufferedImage,int,int,int,int,int,int,int[])",;1
processWriteAborted,1,1,Broadcasts that the write has been aborted to all registered IIOWriteProgressListeners by calling their writeAborted method. Subclasses may use this method as a convenience.,;javax.imageio.ImageWriter.processWriteAborted(),;1
propagateCompletion,1,1,"Equivalent to tryComplete() but does not invoke onCompletion(CountedCompleter) along the completion path: If the pending count is nonzero, decrements the count; otherwise, similarly tries to complete this task's completer, if one exists, else marks this task as complete. This method may be useful in cases where onCompletion should not, or need not, be invoked for each completer in a computation.",;java.util.concurrent.CountedCompleter.propagateCompletion(),;1
propertyNames,1,1,"Returns an enumeration of all the keys in this property list, including distinct keys in the default property list if a key of the same name has not already been found from the main properties list.",;java.util.Properties.propertyNames(),;1
provideRefresh,1,1,SPI method to refresh the rules from the underlying data provider. This method provides the opportunity for a provider to dynamically recheck the underlying data provider to find the latest rules. This could be used to load new rules without stopping the JVM. Dynamic behavior is entirely optional and most providers do not support it. This implementation returns false.,;java.time.zone.ZoneRulesProvider.provideRefresh(),;1
provideRules,1,1,"SPI method to get the rules for the zone ID. This loads the rules for the specified zone ID. The provider implementation must validate that the zone ID is valid and available, throwing a ZoneRulesException if it is not. The result of the method in the valid case depends on the caching flag. If the provider implementation is not dynamic, then the result of the method must be the non-null set of rules selected by the ID. If the provider implementation is dynamic, then the flag gives the option of preventing the returned rules from being cached in ZoneId. When the flag is true, the provider is permitted to return null, where null will prevent the rules from being cached in ZoneId. When the flag is false, the provider must return non-null rules.",";java.time.zone.ZoneRulesProvider.provideRules(String,boolean)",;1
provideVersions,1,1,"SPI method to get the history of rules for the zone ID. This returns a map of historical rules keyed by a version string. The exact meaning and format of the version is provider specific. The version must follow lexicographical order, thus the returned map will be order from the oldest known rules to the newest available rules. The default 'TZDB' group uses version numbering consisting of the year followed by a letter, such as '2009e' or '2012f'. Implementations must provide a result for each valid zone ID, however they do not have to provide a history of rules. Thus the map will contain at least one element, and will only contain more than one element if historical rule information is available. The returned versions remain available and valid for the lifetime of the application. A dynamic provider may increase the set of versions as more data becomes available.",;java.time.zone.ZoneRulesProvider.provideVersions(String),;1
provideZoneIds,1,1,SPI method to get the available zone IDs. This obtains the IDs that this ZoneRulesProvider provides. A provider should provide data for at least one zone ID. The returned zone IDs remain available and valid for the lifetime of the application. A dynamic provider may increase the set of IDs as more data becomes available.,;java.time.zone.ZoneRulesProvider.provideZoneIds(),;1
publicLookup,1,1,"Returns a lookup object which is trusted minimally. It can only be used to create method handles to publicly accessible fields and methods. As a matter of pure convention, the lookup class of this lookup object will be Object. Discussion: The lookup class can be changed to any other class C using an expression of the form publicLookup().in(C.class). Since all classes have equal access to public names, such a change would confer no new access rights. A public lookup object is always subject to security manager checks. Also, it cannot access caller sensitive methods.",;java.lang.invoke.MethodHandles.publicLookup(),;1
purgeRelations,1,1,"Purges the relations. Depending on the purgeFlag value, this method is either called automatically when a notification is received for the unregistration of an MBean referenced in a relation (if the flag is set to true), or not (if the flag is set to false). In that case it is up to the user to call it to maintain the consistency of the relations. To be kept in mind that if an MBean is unregistered and the purge not done immediately, if the ObjectName is reused and assigned to another MBean referenced in a relation, calling manually this purgeRelations() method will cause trouble, as will consider the ObjectName as corresponding to the unregistered MBean, not seeing the new one. The behavior depends on the cardinality of the role where the unregistered MBean is referenced: - if removing one MBean reference in the role makes its number of references less than the minimum degree, the relation has to be removed. - if the remaining number of references after removing the MBean reference is still in the cardinality range, keep the relation and update it calling its handleMBeanUnregistration() callback.",;javax.management.relation.RelationService.purgeRelations(),;1
pushBack,1,1,"Causes the next call to the nextToken method of this tokenizer to return the current value in the ttype field, and not to modify the value in the nval or sval field.",;java.io.StreamTokenizer.pushBack(),;1
pushContext,1,1,"Start a new Namespace context. The new context will automatically inherit the declarations of its parent context, but it will also keep track of which declarations were made within this context. Event callback code should start a new context once per element. This means being ready to call this in either of two places. For elements that don't include namespace declarations, the ContentHandler.startElement() callback is the right place. For elements with such a declaration, it'd done in the first ContentHandler.startPrefixMapping() callback. A boolean flag can be used to track whether a context has been started yet. When either of those methods is called, it checks the flag to see if a new context needs to be started. If so, it starts the context and sets the flag. After ContentHandler.startElement() does that, it always clears the flag. Normally, SAX drivers would push a new context at the beginning of each XML element. Then they perform a first pass over the attributes to process all namespace declarations, making ContentHandler.startPrefixMapping() callbacks. Then a second pass is made, to determine the namespace-qualified names for all attributes and for the element name. Finally all the information for the ContentHandler.startElement() callback is available, so it can then be made. The Namespace support object always starts with a base context already in force: in this context, only the ""xml"" prefix is declared.",;org.xml.sax.helpers.NamespaceSupport.pushContext(),;1
putClientProperty,1,1,"Adds an arbitrary key/value ""client property"" to this component. The get/putClientProperty methods provide access to a small per-instance hashtable. Callers can use get/putClientProperty to annotate components that were created by another module. For example, a layout manager might store per child constraints this way. For example: componentA.putClientProperty(""to the left of"", componentB); If value is null this method will remove the property. Changes to client properties are reported with PropertyChange events. The name of the property (for the sake of PropertyChange events) is key.toString(). The clientProperty dictionary is not intended to support large scale extensions to JComponent nor should be it considered an alternative to subclassing when designing a new component.",";javax.swing.JComponent.putClientProperty(Object,Object)",;1
putDefaults,1,1,Puts all of the key/value pairs in the database and unconditionally generates one PropertyChangeEvent. The events oldValue and newValue will be null and its propertyName will be "UIDefaults". The key/value pairs are added for all locales.,;javax.swing.UIDefaults.putDefaults(Object[]),;1
putFields,1,1,Retrieve the object used to buffer persistent fields to be written to the stream. The fields will be written to the stream when writeFields method is called.,;java.io.ObjectOutputStream.putFields(),;1
putFirst,1,1,Description copied from interface:BlockingDeque,;java.util.concurrent.LinkedBlockingDeque.putFirst(E),;1
putLast,1,1,Description copied from interface:BlockingDeque,;java.util.concurrent.LinkedBlockingDeque.putLast(E),;1
putLayer,1,1,"Sets the layer property on a JComponent. This method does not cause any side effects like setLayer() (painting, add/remove, etc). Normally you should use the instance method setLayer(), in order to get the desired side-effects (like repainting).",";javax.swing.JLayeredPane.putLayer(JComponent,int)",;1
putNamespacePrefix,1,1,This implementation uses an internal HashMap to map the URI to the specified prefix.,";javax.xml.crypto.dom.DOMCryptoContext.putNamespacePrefix(String,String)",;1
putProperty,1,1,"A convenience method for storing up a property value. It is equivalent to: getDocumentProperties().put(key, value); If value is null this method will remove the property.",";javax.swing.text.AbstractDocument.putProperty(Object,Object)",;1
putService,1,1,"Add a service. If a service of the same type with the same algorithm name exists and it was added using putService(), it is replaced by the new service. This method also places information about this service in the provider's Hashtable values in the format described in the Java Cryptography Architecture API Specification &amp; Reference . Also, if there is a security manager, its checkSecurityAccess method is called with the string ""putProviderProperty.""+name, where name is the provider name, to see if it's ok to set this provider's property values. If the default implementation of checkSecurityAccess is used (that is, that method is not overriden), then this results in a call to the security manager's checkPermission method with a SecurityPermission(""putProviderProperty.""+name) permission.",;java.security.Provider.putService(Provider.Service),;1
putSpi,1,1,"Put the given key-value association into this preference node. It is guaranteed that key and value are non-null and of legal length. Also, it is guaranteed that this node has not been removed. (The implementor needn't check for any of these things.) This method is invoked with the lock on this node held.",";java.util.prefs.AbstractPreferences.putSpi(String,String)",;1
quietlyComplete,1,1,Completes this task normally without setting a value. The most recent value established by setRawResult(V) (or null by default) will be returned as the result of subsequent invocations of join and related operations.,;java.util.concurrent.ForkJoinTask.quietlyComplete(),;1
quietlyCompleteRoot,1,1,Equivalent to getRoot().quietlyComplete().,;java.util.concurrent.CountedCompleter.quietlyCompleteRoot(),;1
quietlyInvoke,1,1,"Commences performing this task and awaits its completion if necessary, without returning its result or throwing its exception.",;java.util.concurrent.ForkJoinTask.quietlyInvoke(),;1
quietlyJoin,1,1,"Joins this task, without returning its result or throwing its exception. This method may be useful when processing collections of tasks when some have been cancelled or otherwise known to have aborted.",;java.util.concurrent.ForkJoinTask.quietlyJoin(),;1
quote,1,1,Returns a literal pattern String for the specified String. This method produces a String that can be used to create a Pattern that would match the string s as if it were a literal pattern. Metacharacters or escape sequences in the input sequence will be given no special meaning.,;java.util.regex.Pattern.quote(String),;1
quoteChar,1,1,"Specifies that matching pairs of this character delimit string constants in this tokenizer. When the nextToken method encounters a string constant, the ttype field is set to the string delimiter and the sval field is set to the body of the string. If a string quote character is encountered, then a string is recognized, consisting of all characters after (but not including) the string quote character, up to (but not including) the next occurrence of that same string quote character, or a line terminator, or end of file. The usual escape sequences such as """" and ""\t"" are recognized and converted to single characters as the string is parsed. Any other attribute settings for the specified character are cleared.",;java.io.StreamTokenizer.quoteChar(int),;1
quoteReplacement,1,1,Returns a literal replacement String for the specified String. This method produces a String that will work as a literal replacement s in the appendReplacement method of the Matcher class. The String produced will match the sequence of characters in s treated as a literal sequence. Slashes ('\') and dollar signs ('$') will be given no special meaning.,;java.util.regex.Matcher.quoteReplacement(String),;1
radix,1,1,Returns this scanner's default radix. A scanner's radix affects elements of its default number matching regular expressions; see localized numbers above.,;java.util.Scanner.radix(),;1
randomUUID,1,1,Static factory to retrieve a type 4 (pseudo randomly generated) UUID. The UUID is generated using a cryptographically strong pseudo random number generator.,;java.util.UUID.randomUUID(),;1
read_any,1,1,Reads an Any from this input stream.,;org.omg.CORBA.portable.InputStream.read_any(),;1
read_boolean,1,1,Reads a boolean value from this input stream.,;org.omg.CORBA.portable.InputStream.read_boolean(),;1
read_boolean_array,1,1,Reads an array of booleans from this input stream.,";org.omg.CORBA.portable.InputStream.read_boolean_array(boolean[],int,int)",;1
read_char,1,1,Reads a char value from this input stream.,;org.omg.CORBA.portable.InputStream.read_char(),;1
read_char_array,1,1,Reads an array of chars from this input stream.,";org.omg.CORBA.portable.InputStream.read_char_array(char[],int,int)",;1
read_Context,1,1,Reads a CORBA context from the stream.,;org.omg.CORBA.portable.InputStream.read_Context(),;1
read_double,1,1,Reads a double value from this input stream.,;org.omg.CORBA.portable.InputStream.read_double(),;1
read_double_array,1,1,Reads an array of doubles from this input stream.,";org.omg.CORBA.portable.InputStream.read_double_array(double[],int,int)",;1
read_fixed,1,1,Reads a BigDecimal number.,;org.omg.CORBA.portable.InputStream.read_fixed(),;1
read_float,1,1,Reads a float value from this input stream.,;org.omg.CORBA.portable.InputStream.read_float(),;1
read_float_array,1,1,Reads an array of floats from this input stream.,";org.omg.CORBA.portable.InputStream.read_float_array(float[],int,int)",;1
read_long,1,1,"Reads a CORBA long (that is, Java int) value from this input stream.",;org.omg.CORBA.portable.InputStream.read_long(),;1
read_long_array,1,1,"Reads an array of CORBA longs (that is, Java ints) from this input stream.",";org.omg.CORBA.portable.InputStream.read_long_array(int[],int,int)",;1
read_longlong,1,1,"Reads a CORBA longlong (that is, Java long) value from this input stream.",;org.omg.CORBA.portable.InputStream.read_longlong(),;1
read_longlong_array,1,1,"Reads an array of CORBA longlongs (that is, Java longs) from this inputstream.",";org.omg.CORBA.portable.InputStream.read_longlong_array(long[],int,int)",;1
read_octet,1,1,"Reads an octet (that is, a byte) value from this input stream.",;org.omg.CORBA.portable.InputStream.read_octet(),;1
read_octet_array,1,1,"Reads an array of octets (that is, bytes) from this input stream.",";org.omg.CORBA.portable.InputStream.read_octet_array(byte[],int,int)",;1
read_Principal,1,1,Deprecated.Deprecated by CORBA 2.2.,;org.omg.CORBA.portable.InputStream.read_Principal(),;1
read_short,1,1,Reads a short value from this input stream.,;org.omg.CORBA.portable.InputStream.read_short(),;1
read_short_array,1,1,Reads an array of shorts from this input stream.,";org.omg.CORBA.portable.InputStream.read_short_array(short[],int,int)",;1
read_string,1,1,Reads a string value from this input stream.,;org.omg.CORBA.portable.InputStream.read_string(),;1
read_TypeCode,1,1,Reads a TypeCode from this input stream.,;org.omg.CORBA.portable.InputStream.read_TypeCode(),;1
read_ulong,1,1,"Reads an unsigned CORBA long (that is, Java int) value from this inputstream.",;org.omg.CORBA.portable.InputStream.read_ulong(),;1
read_ulong_array,1,1,"Reads an array of unsigned CORBA longs (that is, Java ints) from this inputstream.",";org.omg.CORBA.portable.InputStream.read_ulong_array(int[],int,int)",;1
read_ulonglong,1,1,"Reads a CORBA unsigned longlong (that is, Java long) value from this inputstream.",;org.omg.CORBA.portable.InputStream.read_ulonglong(),;1
read_ulonglong_array,1,1,"Reads an array of unsigned CORBA longlongs (that is, Java longs) from thisinput stream.",";org.omg.CORBA.portable.InputStream.read_ulonglong_array(long[],int,int)",;1
read_ushort,1,1,Reads a unsigned short value from this input stream.,;org.omg.CORBA.portable.InputStream.read_ushort(),;1
read_ushort_array,1,1,Reads an array of unsigned shorts from this input stream.,";org.omg.CORBA.portable.InputStream.read_ushort_array(short[],int,int)",;1
read_wchar,1,1,Reads a wide char value from this input stream.,;org.omg.CORBA.portable.InputStream.read_wchar(),;1
read_wchar_array,1,1,Reads an array of wide chars from this input stream.,";org.omg.CORBA.portable.InputStream.read_wchar_array(char[],int,int)",;1
read_wstring,1,1,Reads a wide string value from this input stream.,;org.omg.CORBA.portable.InputStream.read_wstring(),;1
readAllBytes,1,1,"Reads all the bytes from a file. The method ensures that the file is closed when all bytes have been read or an I/O error, or other runtime exception, is thrown. Note that this method is intended for simple cases where it is convenient to read all bytes into a byte array. It is not intended for reading in large files.",;java.nio.file.Files.readAllBytes(Path),;1
readAllLines,1,1,"Read all lines from a file. Bytes from the file are decoded into characters using the UTF-8 charset. This method works as if invoking it were equivalent to evaluating the expression: Files.readAllLines(path, StandardCharsets.UTF_8)",;java.nio.file.Files.readAllLines(Path),;1
readAny,1,1,Reads a java.lang.Object as a CORBA any.,;javax.rmi.CORBA.Util.readAny(InputStream),;1
readArray,1,1,Reads an SQL ARRAY value from the stream and returns it as an Array object in the Java programming language. This method does not perform type-safe checking to determine if the returned type is the expected type as this responsibility is delegated to the UDT mapping as implemented by a SQLData implementation.,;javax.sql.rowset.serial.SQLInputImpl.readArray(),;1
readAsciiStream,1,1,Returns the next attribute in this SQLInputImpl object as a stream of ASCII characters. This method does not perform type-safe checking to determine if the returned type is the expected type as this responsibility is delegated to the UDT mapping as implemented by a SQLData implementation.,;javax.sql.rowset.serial.SQLInputImpl.readAsciiStream(),;1
readAsRenderedImage,1,1,"Returns a RenderedImage object that contains the contents of the image indexed by imageIndex. By default, the returned image is simply the BufferedImage returned by read(imageIndex, param). The semantics of this method may differ from those of the other read methods in several ways. First, any destination image and/or image type set in the ImageReadParam may be ignored. Second, the usual listener calls are not guaranteed to be made, or to be meaningful if they are. This is because the returned image may not be fully populated with pixel data at the time it is returned, or indeed at any time. If the supplied ImageReadParam contains optional setting values not supported by this reader (e.g. source render size or any format-specific settings), they will be ignored. The default implementation just calls read(imageIndex, param).",";javax.imageio.ImageReader.readAsRenderedImage(int,ImageReadParam)",;1
readAttributeSet,1,1,Reads a set of attributes from the given object input stream that have been previously written out with writeAttributeSet. This will try to restore keys that were static objects to the static objects in the current virtual machine considering only those keys that have been registered with the registerStaticAttributeKey method. The attributes retrieved from the stream will be placed into the given mutable set.,";javax.swing.text.StyleContext.readAttributeSet(ObjectInputStream,MutableAttributeSet)",;1
readBigDecimal,1,1,Retrieves the next attribute in this SQLInputImpl object as a java.math.BigDecimal. This method does not perform type-safe checking to determine if the returned type is the expected type; this responsibility is delegated to the UDT mapping as defined by a SQLData implementation.,;javax.sql.rowset.serial.SQLInputImpl.readBigDecimal(),;1
readBinaryStream,1,1,Returns the next attribute in this SQLInputImpl object as a stream of uninterpreted bytes. This method does not perform type-safe checking to determine if the returned type is the expected type as this responsibility is delegated to the UDT mapping as implemented by a SQLData implementation.,;javax.sql.rowset.serial.SQLInputImpl.readBinaryStream(),;1
readBit,1,1,Description copied from interface:ImageInputStream,;javax.imageio.stream.ImageInputStreamImpl.readBit(),;1
readBits,1,1,Description copied from interface:ImageInputStream,;javax.imageio.stream.ImageInputStreamImpl.readBits(int),;1
readBlob,1,1,Retrieves the BLOB value at the head of this SQLInputImpl object as a Blob object in the Java programming language. This method does not perform type-safe checking to determine if the returned type is the expected type as this responsibility is delegated to the UDT mapping as implemented by a SQLData implementation.,;javax.sql.rowset.serial.SQLInputImpl.readBlob(),;1
readCharacterStream,1,1,Retrieves the next attribute in this SQLInputImpl object as a stream of Unicode characters. This method does not perform type-safe checking to determine if the returned type is the expected type as this responsibility is delegated to the UDT mapping as implemented by a SQLData implementation.,;javax.sql.rowset.serial.SQLInputImpl.readCharacterStream(),;1
readChildren,1,1,When an instance of this class is used as a delegate for the implementation of the BeanContext protocols (and its subprotocols) there exists a 'chicken and egg' problem during deserialization,;java.beans.beancontext.BeanContextSupport.readChildren(ObjectInputStream),;1
readClassDescriptor,1,1,"Read a class descriptor from the serialization stream. This method is called when the ObjectInputStream expects a class descriptor as the next item in the serialization stream. Subclasses of ObjectInputStream may override this method to read in class descriptors that have been written in non-standard formats (by subclasses of ObjectOutputStream which have overridden the writeClassDescriptor method). By default, this method reads class descriptors according to the format defined in the Object Serialization specification.",;java.io.ObjectInputStream.readClassDescriptor(),;1
readClob,1,1,Retrieves the CLOB value at the head of this SQLInputImpl object as a Clob object in the Java programming language. This method does not perform type-safe checking to determine if the returned type is the expected type as this responsibility is delegated to the UDT mapping as implemented by a SQLData implementation.,;javax.sql.rowset.serial.SQLInputImpl.readClob(),;1
readDate,1,1,Retrieves the next attribute in this SQLInputImpl as a java.sql.Date object. This method does not perform type-safe checking to determine if the returned type is the expected type; this responsibility is delegated to the UDT mapping as defined by a SQLData implementation.,;javax.sql.rowset.serial.SQLInputImpl.readDate(),;1
readEndpointReference,1,1,read an EndpointReference from the infoset contained in eprInfoset.,;javax.xml.ws.spi.Provider.readEndpointReference(Source),;1
reader,1,1,"Retrieves the unique Reader object associated with this console. This method is intended to be used by sophisticated applications, for example, a Scanner object which utilizes the rich parsing/scanning functionality provided by the Scanner: Console con = System.console(); if (con != null) { Scanner sc = new Scanner(con.reader()); ... } For simple applications requiring only line-oriented reading, use readLine(java.lang.String, java.lang.Object...). The bulk read operations read(char[]) , read(char[], int, int) and read(java.nio.CharBuffer) on the returned object will not read in characters beyond the line bound for each invocation, even if the destination buffer has space for more characters. The Reader's read methods may block if a line bound has not been entered or reached on the console's input device. A line bound is considered to be any one of a line feed (''), a carriage return ('\r'), a carriage return followed immediately by a linefeed, or an end of stream.",;java.io.Console.reader(),;1
readerSupportsThumbnails,1,1,"Returns true if the image format understood by this reader supports thumbnail preview images associated with it. The default implementation returns false. If this method returns false, hasThumbnails and getNumThumbnails will return false and 0, respectively, and readThumbnail will throw an UnsupportedOperationException, regardless of their arguments. A reader that does not support thumbnails need not implement any of the thumbnail-related methods.",;javax.imageio.ImageReader.readerSupportsThumbnails(),;1
readFields,1,1,Reads the persistent fields from the stream and makes them available by name.,;java.io.ObjectInputStream.readFields(),;1
readFrom,1,1,Factory method to read an EndpointReference from the infoset contained in eprInfoset. This method delegates to the vendor specific implementation of the Provider.readEndpointReference(javax.xml.transform.Source) method.,;javax.xml.ws.EndpointReference.readFrom(Source),;1
readLockInterruptibly,1,1,"Non-exclusively acquires the lock, blocking if necessary until available or the current thread is interrupted. Behavior under interruption matches that specified for method Lock.lockInterruptibly().",;java.util.concurrent.locks.StampedLock.readLockInterruptibly(),;1
readNClob,1,1,Reads an SQL NCLOB value from the stream and returns it as a Clob object in the Java programming language.,;javax.sql.rowset.serial.SQLInputImpl.readNClob(),;1
readNString,1,1,"Reads the next attribute in the stream and returns it as a String in the Java programming language. It is intended for use when accessing NCHAR,NVARCHAR and LONGNVARCHAR columns.",;javax.sql.rowset.serial.SQLInputImpl.readNString(),;1
readObjectOverride,1,1,This method is called by trusted subclasses of ObjectOutputStream that constructed ObjectOutputStream using the protected no-arg constructor. The subclass is expected to provide an override method with the modifier "final".,;java.io.ObjectInputStream.readObjectOverride(),;1
readRaster,1,1,"Returns a new Raster object containing the raw pixel data from the image stream, without any color conversion applied. The application must determine how to interpret the pixel data by other means. Any destination or image-type parameters in the supplied ImageReadParam object are ignored, but all other parameters are used exactly as in the read method, except that any destination offset is used as a logical rather than a physical offset. The size of the returned Raster will always be that of the source region clipped to the actual image. Logical offsets in the stream itself are ignored. This method allows formats that normally apply a color conversion, such as JPEG, and formats that do not normally have an associated colorspace, such as remote sensing or medical imaging data, to provide access to raw pixel data. Any registered readUpdateListeners are ignored, as there is no BufferedImage, but all other listeners are called exactly as they are for the read method. If canReadRaster() returns false, this method throws an UnsupportedOperationException. If the supplied ImageReadParam contains optional setting values not supported by this reader (e.g. source render size or any format-specific settings), they will be ignored. The default implementation throws an UnsupportedOperationException.",";javax.imageio.ImageReader.readRaster(int,ImageReadParam)",;1
readRef,1,1,Retrieves the value at the head of this SQLInputImpl object as a Ref object in the Java programming language.,;javax.sql.rowset.serial.SQLInputImpl.readRef(),;1
readRowId,1,1,Reads an SQL ROWID value from the stream and returns it as a RowId object in the Java programming language.,;javax.sql.rowset.serial.SQLInputImpl.readRowId(),;1
readSQLXML,1,1,Reads an SQL XML value from the stream and returns it as a SQLXML object in the Java programming language.,;javax.sql.rowset.serial.SQLInputImpl.readSQLXML(),;1
readStreamHeader,1,1,The readStreamHeader method is provided to allow subclasses to read and verify their own stream headers. It reads and verifies the magic number and version number.,;java.io.ObjectInputStream.readStreamHeader(),;1
readString,1,1,Retrieves the next attribute in this SQLInputImpl object as a String in the Java programming language. This method does not perform type-safe checking to determine if the returned type is the expected type; this responsibility is delegated to the UDT mapping as defined by a SQLData implementation.,;javax.sql.rowset.serial.SQLInputImpl.readString(),;1
readThumbnail,1,1,"Returns the thumbnail preview image indexed by thumbnailIndex, associated with the image indexed by ImageIndex as a BufferedImage. Any registered IIOReadProgressListener objects will be notified by calling their thumbnailStarted, thumbnailProgress, and thumbnailComplete methods. If the reader does not support thumbnails, (readerSupportsThumbnails returns false), an UnsupportedOperationException will be thrown regardless of whether an input source has been set or whether the indices are in bounds. The default implementation throws an UnsupportedOperationException.",";javax.imageio.ImageReader.readThumbnail(int,int)",;1
readTile,1,1,"Reads the tile indicated by the tileX and tileY arguments, returning it as a BufferedImage. If the arguments are out of range, an IllegalArgumentException is thrown. If the image is not tiled, the values 0, 0 will return the entire image; any other values will cause an IllegalArgumentException to be thrown. This method is merely a convenience equivalent to calling read(int, ImageReadParam) with a read param specifying a source region having offsets of tileX*getTileWidth(imageIndex), tileY*getTileHeight(imageIndex) and width and height of getTileWidth(imageIndex), getTileHeight(imageIndex); and subsampling factors of 1 and offsets of 0. To subsample a tile, call read with a read param specifying this region and different subsampling parameters. The default implementation returns the entire image if tileX and tileY are 0, or throws an IllegalArgumentException otherwise.",";javax.imageio.ImageReader.readTile(int,int,int)",;1
readTileRaster,1,1,"Returns a new Raster object containing the raw pixel data from the tile, without any color conversion applied. The application must determine how to interpret the pixel data by other means. If canReadRaster() returns false, this method throws an UnsupportedOperationException. The default implementation checks if reading Rasters is supported, and if so calls readRaster(imageIndex, null) if tileX and tileY are 0, or throws an IllegalArgumentException otherwise.",";javax.imageio.ImageReader.readTileRaster(int,int,int)",;1
readTime,1,1,Retrieves the next attribute in this SQLInputImpl object as a java.sql.Time object. This method does not perform type-safe checking to determine if the returned type is the expected type as this responsibility is delegated to the UDT mapping as implemented by a SQLData implementation.,;javax.sql.rowset.serial.SQLInputImpl.readTime(),;1
readTimestamp,1,1,Retrieves the next attribute in this SQLInputImpl object as a java.sql.Timestamp object.,;javax.sql.rowset.serial.SQLInputImpl.readTimestamp(),;1
readUnlock,1,1,"Does a read unlock. This signals that one of the readers is done. If there are no more readers then writing can begin again. This should be balanced with a readLock, and should occur in a finally statement so that the balance is guaranteed. The following is an example. readLock(); try { // do something } finally { readUnlock(); }",;javax.swing.text.AbstractDocument.readUnlock(),;1
readUnsignedInt,1,1,Description copied from interface:ImageInputStream,;javax.imageio.stream.ImageInputStreamImpl.readUnsignedInt(),;1
readURL,1,1,Reads an SQL DATALINK value from the stream and returns it as an URL object in the Java programming language. This method does not perform type-safe checking to determine if the returned type is the expected type as this responsibility is delegated to the UDT mapping as implemented by a SQLData implementation.,;javax.sql.rowset.serial.SQLInputImpl.readURL(),;1
readyOps,1,1,Retrieves this key's ready-operation set. It is guaranteed that the returned set will only contain operation bits that are valid for this key's channel.,;java.nio.channels.SelectionKey.readyOps(),;1
recalcWidthCache,1,1,Recalculates the total combined width of all columns. Updates the totalColumnWidth property.,;javax.swing.table.DefaultTableColumnModel.recalcWidthCache(),;1
reclaim,1,1,"Returns a set no longer needed by the MutableAttributeSet implementation. This is useful for operation under 1.1 where there are no weak references. This would typically be called by the finalize method of the MutableAttributeSet implementation. This method is thread safe, although most Swing methods are not. Please see Concurrency in Swing for more information.",;javax.swing.text.StyleContext.reclaim(AttributeSet),;1
reconnect,1,1,Description copied from interface:LdapContext,;javax.naming.ldap.InitialLdapContext.reconnect(Control[]),;1
reconvert,1,1,"Asks the current input method to reconvert text from the current client component. The input method obtains the text to be reconverted from the client component using the InputMethodRequests.getSelectedText method. The other InputMethodRequests methods must be prepared to deal with further information requests by the input method. The composed and/or committed text will be sent to the client component as a sequence of InputMethodEvents. If the input method cannot reconvert the given text, the text is returned as committed text in an InputMethodEvent.",;java.awt.im.InputContext.reconvert(),;1
rectangleForCurrentValue,1,1,Returns the area that is reserved for drawing the currently selected item.,;javax.swing.plaf.basic.BasicComboBoxUI.rectangleForCurrentValue(),;1
redispatchEvent,1,1,"Redispatches an AWTEvent in such a way that the AWT event dispatcher will not recursively request that the KeyboardFocusManager, or any installed KeyEventDispatchers, dispatch the event again. Client implementations of dispatchEvent and client-defined KeyEventDispatchers must call redispatchEvent(target, e) instead of target.dispatchEvent(e) to dispatch an event. This method is intended to be used only by KeyboardFocusManagers and KeyEventDispatchers. It is not for general client use.",";java.awt.KeyboardFocusManager.redispatchEvent(Component,AWTEvent)",;1
redoTo,1,1,"Redoes all changes from the index of the next edit to edit, updating the index of the next edit appropriately.",;javax.swing.undo.UndoManager.redoTo(UndoableEdit),;1
reduce,1,1,"Returns the result of accumulating the given transformation of all (key, value) pairs using the given reducer to combine values, or null if none.",";java.util.concurrent.ConcurrentHashMap.reduce(long,BiFunction&lt;?,?,?,BiFunction&lt;?,?,?)",;1
reduceEntriesToDouble,1,1,"Returns the result of accumulating the given transformation of all entries using the given reducer to combine values, and the given basis as an identity value.",";java.util.concurrent.ConcurrentHashMap.reduceEntriesToDouble(long,ToDoubleFunction&lt;Map.Entry&lt;K,V&gt;&gt;,double,DoubleBinaryOperator)",;1
reduceEntriesToInt,1,1,"Returns the result of accumulating the given transformation of all entries using the given reducer to combine values, and the given basis as an identity value.",";java.util.concurrent.ConcurrentHashMap.reduceEntriesToInt(long,ToIntFunction&lt;Map.Entry&lt;K,V&gt;&gt;,int,IntBinaryOperator)",;1
reduceEntriesToLong,1,1,"Returns the result of accumulating the given transformation of all entries using the given reducer to combine values, and the given basis as an identity value.",";java.util.concurrent.ConcurrentHashMap.reduceEntriesToLong(long,ToLongFunction&lt;Map.Entry&lt;K,V&gt;&gt;,long,LongBinaryOperator)",;1
reduceKeysToDouble,1,1,"Returns the result of accumulating the given transformation of all keys using the given reducer to combine values, and the given basis as an identity value.",";java.util.concurrent.ConcurrentHashMap.reduceKeysToDouble(long,ToDoubleFunction&lt;?,double,DoubleBinaryOperator)",;1
reduceKeysToInt,1,1,"Returns the result of accumulating the given transformation of all keys using the given reducer to combine values, and the given basis as an identity value.",";java.util.concurrent.ConcurrentHashMap.reduceKeysToInt(long,ToIntFunction&lt;?,int,IntBinaryOperator)",;1
reduceKeysToLong,1,1,"Returns the result of accumulating the given transformation of all keys using the given reducer to combine values, and the given basis as an identity value.",";java.util.concurrent.ConcurrentHashMap.reduceKeysToLong(long,ToLongFunction&lt;?,long,LongBinaryOperator)",;1
reducePermits,1,1,Shrinks the number of available permits by the indicated reduction. This method can be useful in subclasses that use semaphores to track resources that become unavailable. This method differs from acquire in that it does not block waiting for permits to become available.,;java.util.concurrent.Semaphore.reducePermits(int),;1
reduceToDouble,1,1,"Returns the result of accumulating the given transformation of all (key, value) pairs using the given reducer to combine values, and the given basis as an identity value.",";java.util.concurrent.ConcurrentHashMap.reduceToDouble(long,ToDoubleBiFunction&lt;?,?,double,DoubleBinaryOperator)",;1
reduceToInt,1,1,"Returns the result of accumulating the given transformation of all (key, value) pairs using the given reducer to combine values, and the given basis as an identity value.",";java.util.concurrent.ConcurrentHashMap.reduceToInt(long,ToIntBiFunction&lt;?,?,int,IntBinaryOperator)",;1
reduceToLong,1,1,"Returns the result of accumulating the given transformation of all (key, value) pairs using the given reducer to combine values, and the given basis as an identity value.",";java.util.concurrent.ConcurrentHashMap.reduceToLong(long,ToLongBiFunction&lt;?,?,long,LongBinaryOperator)",;1
reduceValuesToDouble,1,1,"Returns the result of accumulating the given transformation of all values using the given reducer to combine values, and the given basis as an identity value.",";java.util.concurrent.ConcurrentHashMap.reduceValuesToDouble(long,ToDoubleFunction&lt;?,double,DoubleBinaryOperator)",;1
reduceValuesToInt,1,1,"Returns the result of accumulating the given transformation of all values using the given reducer to combine values, and the given basis as an identity value.",";java.util.concurrent.ConcurrentHashMap.reduceValuesToInt(long,ToIntFunction&lt;?,int,IntBinaryOperator)",;1
reduceValuesToLong,1,1,"Returns the result of accumulating the given transformation of all values using the given reducer to combine values, and the given basis as an identity value.",";java.util.concurrent.ConcurrentHashMap.reduceValuesToLong(long,ToLongFunction&lt;?,long,LongBinaryOperator)",;1
referenceParameter,1,1,Adds the referenceParameter to the W3CEndpointReference instance wsa:ReferenceParameters element.,;javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder.referenceParameter(Element),;1
reflectAs,1,1,"Performs an unchecked ""crack"" of a direct method handle. The result is as if the user had obtained a lookup object capable enough to crack the target method handle, called Lookup.revealDirect on the target to obtain its symbolic reference, and then called MethodHandleInfo.reflectAs to resolve the symbolic reference to a member. If there is a security manager, its checkPermission method is called with a ReflectPermission(""suppressAccessChecks"") permission.",";java.lang.invoke.MethodHandles.reflectAs(Class&lt;T&gt;,MethodHandle)",;1
regexFilter,1,1,"Returns a RowFilter that uses a regular expression to determine which entries to include. Only entries with at least one matching value are included. For example, the following creates a RowFilter that includes entries with at least one value starting with ""a"": RowFilter.regexFilter(""^a""); The returned filter uses Matcher.find() to test for inclusion. To test for exact matches use the characters '^' and '$' to match the beginning and end of the string respectively. For example, ""^foo$"" includes only rows whose string is exactly ""foo"" and not, for example, ""food"". See Pattern for a complete description of the supported regular-expression constructs.",";javax.swing.RowFilter.regexFilter(String,int...)",;1
region,1,1,"Sets the limits of this matcher's region. The region is the part of the input sequence that will be searched to find a match. Invoking this method resets the matcher, and then sets the region to start at the index specified by the start parameter and end at the index specified by the end parameter. Depending on the transparency and anchoring being used (see useTransparentBounds and useAnchoringBounds), certain constructs such as anchors may behave differently at or around the boundaries of the region.",";java.util.regex.Matcher.region(int,int)",;1
regionEnd,1,1,Reports the end index (exclusive) of this matcher's region. The searches this matcher conducts are limited to finding matches within regionStart (inclusive) and regionEnd (exclusive).,;java.util.regex.Matcher.regionEnd(),;1
regionStart,1,1,Reports the start index of this matcher's region. The searches this matcher conducts are limited to finding matches within regionStart (inclusive) and regionEnd (exclusive).,;java.util.regex.Matcher.regionStart(),;1
registerApplicationClasspathSpis,1,1,"Registers all available service providers found on the application class path, using the default ClassLoader. This method is typically invoked by the ImageIO.scanForPlugins method.",;javax.imageio.spi.IIORegistry.registerApplicationClasspathSpis(),;1
registerComponent,1,1,"Registers a component for tooltip management. This will register key bindings to show and hide the tooltip text only if component has focus bindings. This is done so that components that are not normally focus traversable, such as JLabel, are not made focus traversable as a result of invoking this method.",;javax.swing.ToolTipManager.registerComponent(JComponent),;1
registerEditor,1,1,"Registers an editor class to edit values of the given target class. If the editor class is null, then any existing definition will be removed. Thus this method can be used to cancel the registration. The registration is canceled automatically if either the target or editor class is unloaded. If there is a security manager, its checkPropertiesAccess method is called. This could result in a SecurityException.",";java.beans.PropertyEditorManager.registerEditor(Class&lt;?&gt;,Class&lt;?&gt;)",;1
registerEngineExtension,1,1,Registers a ScriptEngineFactory to handle an extension. Overrides any such association found using the Discovery mechanism.,";javax.script.ScriptEngineManager.registerEngineExtension(String,ScriptEngineFactory)",;1
registerEngineMimeType,1,1,Registers a ScriptEngineFactory to handle a mime type. Overrides any such association found using the Discovery mechanism.,";javax.script.ScriptEngineManager.registerEngineMimeType(String,ScriptEngineFactory)",;1
registerEngineName,1,1,Registers a ScriptEngineFactory to handle a language name. Overrides any such association found using the Discovery mechanism.,";javax.script.ScriptEngineManager.registerEngineName(String,ScriptEngineFactory)",;1
registerService,1,1,Allows an application to directly register an instance of a class which implements a print service. The lookup operations for this service will be performed by the PrintServiceLookup class using the attribute values and classes reported by the service. This may be less efficient than a lookup service tuned for that service. Therefore registering a PrintServiceLookup instance instead is recommended. The method returns true if this service is not previously registered and is now successfully registered. This method should not be called with StreamPrintService instances. They will always fail to register and the method will return false.,;javax.print.PrintServiceLookup.registerService(PrintService),;1
registerServiceProviders,1,1,"Adds a set of service provider objects, taken from an Iterator to the registry. Each provider is associated within each category present in the registry whose Class it implements. For each entry of providers that implements the RegisterableService interface, its onRegistration method will be called once for each category it is registered under. Its onDeregistration method will be called each time it is deregistered from a category or when the registry is finalized.",;javax.imageio.spi.ServiceRegistry.registerServiceProviders(Iterator&lt;?&gt;),;1
registerStaticAttributeKey,1,1,"Registers an object as a static object that is being used as a key in attribute sets. This allows the key to be treated specially for serialization. For operation under a 1.1 virtual machine, this uses the value returned by toString concatenated to the classname. The value returned by toString should not have the class reference in it (ie it should be reimplemented from the definition in Object) in order to be the same when recomputed later.",;javax.swing.text.StyleContext.registerStaticAttributeKey(Object),;1
registerSubclass,1,1,"Registers a new class which the factory methods in AWTKeyStroke will use when generating new instances of AWTKeyStrokes. After invoking this method, the factory methods will return instances of the specified Class. The specified Class must be either AWTKeyStroke or derived from AWTKeyStroke, and it must have a no-arg constructor. The constructor can be of any accessibility, including private. This operation flushes the current AWTKeyStroke cache.",;java.awt.AWTKeyStroke.registerSubclass(Class&lt;?&gt;),;1
registerTarget,1,1,Registers a target for a tie. Adds the tie to an internal table and calls Tie.setTarget(java.rmi.Remote) on the tie object.,";javax.rmi.CORBA.Util.registerTarget(Tie,Remote)",;1
registerValidation,1,1,"Register an object to be validated before the graph is returned. While similar to resolveObject these validations are called after the entire graph has been reconstituted. Typically, a readObject method will register the object with the stream so that when all of the objects are restored a final set of validations can be performed.",";java.io.ObjectInputStream.registerValidation(ObjectInputValidation,int)",;1
rehash,1,1,"Increases the capacity of and internally reorganizes this hashtable, in order to accommodate and access its entries more efficiently. This method is called automatically when the number of keys in the hashtable exceeds this hashtable's capacity and load factor.",;java.util.Hashtable.rehash(),;1
reinitialize,1,1,"Resets the internal bookkeeping state of this task, allowing a subsequent fork. This method allows repeated reuse of this task, but only if reuse occurs when this task has either never been forked, or has been forked, then completed and all outstanding joins of this task have also completed. Effects under any other usage conditions are not guaranteed. This method may be useful when executing pre-constructed trees of subtasks in loops. Upon completion of this method, isDone() reports false, and getException() reports null. However, the value returned by getRawResult is unaffected. To clear this value, you can invoke setRawResult(null).",;java.util.concurrent.ForkJoinTask.reinitialize(),;1
releaseMBeanServer,1,1,Remove internal MBeanServerFactory references to a created MBeanServer. This allows the garbage collector to remove the MBeanServer object.,;javax.management.MBeanServerFactory.releaseMBeanServer(MBeanServer),;1
releaseReply,1,1,"releaseReply may optionally be called by a stub to release a reply stream back to the ORB when the unmarshaling has completed. The stub passes the InputStream returned by invoke() or ApplicationException.getInputStream(). A null value may also be passed to releaseReply, in which case the method is a noop.",";org.omg.CORBA.portable.Delegate.releaseReply(Object,InputStream)",;1
releaseService,1,1,release a service,";java.beans.beancontext.BeanContextServicesSupport.releaseService(BeanContextChild,Object,Object)",;1
releaseWritableTile,1,1,"Relinquishes permission to write to a tile. If the caller continues to write to the tile, the results are undefined. Calls to this method should only appear in matching pairs with calls to getWritableTile(int, int). Any other leads to undefined results. All registered TileObservers are notified when a tile goes from having one writer to having no writers.",";java.awt.image.BufferedImage.releaseWritableTile(int,int)",;1
remaining,1,1,Returns the number of elements between the current position and the limit.,;java.nio.Buffer.remaining(),;1
removeAllAttachments,1,1,Removes all AttachmentPart objects that have been added to this SOAPMessage object. This method does not touch the SOAP part.,;javax.xml.soap.SOAPMessage.removeAllAttachments(),;1
removeAllChildren,1,1,"Removes all of this node's children, setting their parents to null. If this node has no children, this method does nothing.",;javax.swing.tree.DefaultMutableTreeNode.removeAllChildren(),;1
removeAllHeaders,1,1,Removes all the header entries from this MimeHeaders object.,;javax.xml.soap.MimeHeaders.removeAllHeaders(),;1
removeAllHighlights,1,1,Removes all highlights.,;javax.swing.text.DefaultHighlighter.removeAllHighlights(),;1
removeAllIIOReadProgressListeners,1,1,Removes all currently registered IIOReadProgressListener objects. The default implementation sets the progressListeners instance variable to null.,;javax.imageio.ImageReader.removeAllIIOReadProgressListeners(),;1
removeAllIIOReadUpdateListeners,1,1,Removes all currently registered IIOReadUpdateListener objects. The default implementation sets the updateListeners instance variable to null.,;javax.imageio.ImageReader.removeAllIIOReadUpdateListeners(),;1
removeAllIIOReadWarningListeners,1,1,Removes all currently registered IIOReadWarningListener objects. The default implementation sets the warningListeners and warningLocales instance variables to null.,;javax.imageio.ImageReader.removeAllIIOReadWarningListeners(),;1
removeAllIIOWriteProgressListeners,1,1,Removes all currently registered IIOWriteProgressListener objects. The default implementation sets the progressListeners instance variable to null.,;javax.imageio.ImageWriter.removeAllIIOWriteProgressListeners(),;1
removeAllIIOWriteWarningListeners,1,1,Removes all currently registered IIOWriteWarningListener objects. The default implementation sets the warningListeners and warningLocales instance variables to null.,;javax.imageio.ImageWriter.removeAllIIOWriteWarningListeners(),;1
removeAllItems,1,1,Removes all items from the item list.,;javax.swing.JComboBox.removeAllItems(),;1
removeAllNotifications,1,1,Removes all the timer notifications from the list of notifications and resets the counter used to update the timer notification identifiers.,;javax.management.timer.Timer.removeAllNotifications(),;1
removeAncestorListener,1,1,Unregisters listener so that it will no longer receive AncestorEvents.,;javax.swing.JComponent.removeAncestorListener(AncestorListener),;1
removeAttachments,1,1,Removes all the AttachmentPart objects that have header entries that match the specified headers. Note that the removed attachment could have headers in addition to those specified.,;javax.xml.soap.SOAPMessage.removeAttachments(MimeHeaders),;1
removeAttributeChangeNotificationListener,1,1,Description copied from interface:ModelMBeanNotificationBroadcaster,";javax.management.modelmbean.RequiredModelMBean.removeAttributeChangeNotificationListener(NotificationListener,String)",;1
removeAttributeNode,1,1,Description copied from interface:Element,;javax.imageio.metadata.IIOMetadataNode.removeAttributeNode(Attr),;1
removeAttributeNS,1,1,Equivalent to removeAttribute(localName).,";javax.imageio.metadata.IIOMetadataNode.removeAttributeNS(String,String)",;1
removeAuxiliaryLookAndFeel,1,1,Removes a LookAndFeel from the list of auxiliary look and feels. The auxiliary look and feels tell the multiplexing look and feel what other LookAndFeel classes for a component instance are to be used in addition to the default LookAndFeel class when creating a multiplexing UI. The change will only take effect when a new UI class is created or when the default look and feel is changed on a component instance. Note these are not the same as the installed look and feels.,;javax.swing.UIManager.removeAuxiliaryLookAndFeel(LookAndFeel),;1
removeAWTEventListener,1,1,"Removes an AWTEventListener from receiving dispatched AWTEvents. First, if there is a security manager, its checkPermission method is called with an AWTPermission(""listenToAllAWTEvents"") permission. This may result in a SecurityException. Note: event listener use is not recommended for normal application use, but are intended solely to support special purpose facilities including support for accessibility, event record/playback, and diagnostic tracing. If listener is null, no exception is thrown and no action is performed.",;java.awt.Toolkit.removeAWTEventListener(AWTEventListener),;1
removeBeanContextMembershipListener,1,1,Removes a BeanContextMembershipListener,;java.beans.beancontext.BeanContextSupport.removeBeanContextMembershipListener(BeanContextMembershipListener),;1
removeBeanContextServicesListener,1,1,remove a BeanContextServicesListener,;java.beans.beancontext.BeanContextServicesSupport.removeBeanContextServicesListener(BeanContextServicesListener),;1
removeCaretListener,1,1,Removes a caret listener.,;javax.swing.text.JTextComponent.removeCaretListener(CaretListener),;1
removeCertificate,1,1,Deprecated.,;java.security.Identity.removeCertificate(Certificate),;1
removeChild,1,1,"Removes the child node indicated by oldChild from the list of children, and returns it.",;javax.imageio.metadata.IIOMetadataNode.removeChild(Node),;1
removeChoosableFileFilter,1,1,Removes a filter from the list of user choosable file filters. Returns true if the file filter was removed.,;javax.swing.JFileChooser.removeChoosableFileFilter(FileFilter),;1
removeChooserPanel,1,1,Removes the Color Panel specified.,;javax.swing.JColorChooser.removeChooserPanel(AbstractColorChooserPanel),;1
removeColumnModelListener,1,1,Removes a listener for table column model events.,;javax.swing.table.DefaultTableColumnModel.removeColumnModelListener(TableColumnModelListener),;1
removeColumnSelectionInterval,1,1,"Deselects the columns from index0 to index1, inclusive.",";javax.swing.JTable.removeColumnSelectionInterval(int,int)",;1
removeComponentListener,1,1,"Removes the specified component listener so that it no longer receives component events from this component. This method performs no function, nor does it throw an exception, if the listener specified by the argument was not previously added to this component. If listener l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Component.removeComponentListener(ComponentListener),;1
removeContainerListener,1,1,"Removes the specified container listener so it no longer receives container events from this container. If l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Container.removeContainerListener(ContainerListener),;1
removeDescendantSelectedPaths,1,1,"Removes any paths in the selection that are descendants of path. If includePath is true and path is selected, it will be removed from the selection.",";javax.swing.JTree.removeDescendantSelectedPaths(TreePath,boolean)",;1
removeDescendantToggledPaths,1,1,Removes any descendants of the TreePaths in toRemove that have been expanded.,;javax.swing.JTree.removeDescendantToggledPaths(Enumeration&lt;TreePath&gt;),;1
removeDragGestureListener,1,1,unregister the current DragGestureListener,;java.awt.dnd.DragGestureRecognizer.removeDragGestureListener(DragGestureListener),;1
removeDragSourceMotionListener,1,1,"Removes the specified DragSourceMotionListener from this DragSource. If a null listener is specified, no action is taken and no exception is thrown. If the listener specified by the argument was not previously added to this DragSource, no action is taken and no exception is thrown.",;java.awt.dnd.DragSource.removeDragSourceMotionListener(DragSourceMotionListener),;1
removeDropTargetListener,1,1,Removes the current DropTargetListener (UNICAST SOURCE).,;java.awt.dnd.DropTarget.removeDropTargetListener(DropTargetListener),;1
removeEldestEntry,1,1,"Returns true if this map should remove its eldest entry. This method is invoked by put and putAll after inserting a new entry into the map. It provides the implementor with the opportunity to remove the eldest entry each time a new one is added. This is useful if the map represents a cache: it allows the map to reduce memory consumption by deleting stale entries. Sample use: this override will allow the map to grow up to 100 entries and then delete the eldest entry each time a new entry is added, maintaining a steady state of 100 entries. private static final int MAX_ENTRIES = 100; protected boolean removeEldestEntry(Map.Entry eldest) { return size() &gt; MAX_ENTRIES; } This method typically does not modify the map in any way, instead allowing the map to modify itself as directed by its return value. It is permitted for this method to modify the map directly, but if it does so, it must return false (indicating that the map should not attempt any further modification). The effects of returning true after modifying the map from within this method are unspecified. This implementation merely returns false (so that this map acts like a normal map - the eldest element is never removed).",";java.util.LinkedHashMap.removeEldestEntry(Map.Entry&lt;K,V&gt;)",;1
removeEntries,1,1,"Removes a contiguous group of entries from this SizeSequence. Note that the values of start and length must satisfy the following conditions: (0 &lt;= start &lt; getSizes().length) AND (length &gt;= 0). If these conditions are not met, the behavior is unspecified and an exception may be thrown.",";javax.swing.SizeSequence.removeEntries(int,int)",;1
removeFlavorListener,1,1,"Removes the specified FlavorListener so that it no longer receives FlavorEvents from this Clipboard. This method performs no function, nor does it throw an exception, if the listener specified by the argument was not previously added to this Clipboard. If listener is null, no exception is thrown and no action is performed.",;java.awt.datatransfer.Clipboard.removeFlavorListener(FlavorListener),;1
removeFocusListener,1,1,"Removes the specified focus listener so that it no longer receives focus events from this component. This method performs no function, nor does it throw an exception, if the listener specified by the argument was not previously added to this component. If listener l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Component.removeFocusListener(FocusListener),;1
removeFromEnvironment,1,1,Description copied from interface:Context,;javax.naming.InitialContext.removeFromEnvironment(String),;1
removeFromParent,1,1,"Removes the subtree rooted at this node from the tree, giving this node a null parent. Does nothing if this node is the root of its tree.",;javax.swing.tree.DefaultMutableTreeNode.removeFromParent(),;1
removeHandler,1,1,Remove a log Handler. Returns silently if the given Handler is not found or is null,;java.util.logging.Logger.removeHandler(Handler),;1
removeHandshakeCompletedListener,1,1,Removes a previously registered handshake completion listener.,;javax.net.ssl.SSLSocket.removeHandshakeCompletedListener(HandshakeCompletedListener),;1
removeHeader,1,1,Remove all MimeHeader objects whose name matches the given name.,;javax.xml.soap.MimeHeaders.removeHeader(String),;1
removeHierarchyBoundsListener,1,1,"Removes the specified hierarchy bounds listener so that it no longer receives hierarchy bounds events from this component. This method performs no function, nor does it throw an exception, if the listener specified by the argument was not previously added to this component. If listener l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Component.removeHierarchyBoundsListener(HierarchyBoundsListener),;1
removeHierarchyListener,1,1,"Removes the specified hierarchy listener so that it no longer receives hierarchy changed events from this component. This method performs no function, nor does it throw an exception, if the listener specified by the argument was not previously added to this component. If listener l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Component.removeHierarchyListener(HierarchyListener),;1
removeHighlight,1,1,Removes a highlight from the view.,;javax.swing.text.DefaultHighlighter.removeHighlight(Object),;1
removeHyperlinkListener,1,1,Removes a hyperlink listener.,;javax.swing.JEditorPane.removeHyperlinkListener(HyperlinkListener),;1
removeIconFor,1,1,Convenience method to remove the desktopIcon of f is necessary.,;javax.swing.DefaultDesktopManager.removeIconFor(JInternalFrame),;1
removeIdentity,1,1,Deprecated.,;java.security.IdentityScope.removeIdentity(Identity),;1
removeIIOReadProgressListener,1,1,"Removes an IIOReadProgressListener from the list of registered progress listeners. If the listener was not previously registered, or if listener is null, no exception will be thrown and no action will be taken.",;javax.imageio.ImageReader.removeIIOReadProgressListener(IIOReadProgressListener),;1
removeIIOReadUpdateListener,1,1,"Removes an IIOReadUpdateListener from the list of registered update listeners. If the listener was not previously registered, or if listener is null, no exception will be thrown and no action will be taken.",;javax.imageio.ImageReader.removeIIOReadUpdateListener(IIOReadUpdateListener),;1
removeIIOReadWarningListener,1,1,"Removes an IIOReadWarningListener from the list of registered error listeners. If the listener was not previously registered, or if listener is null, no exception will be thrown and no action will be taken.",;javax.imageio.ImageReader.removeIIOReadWarningListener(IIOReadWarningListener),;1
removeIIOWriteProgressListener,1,1,"Removes an IIOWriteProgressListener from the list of registered progress listeners. If the listener was not previously registered, or if listener is null, no exception will be thrown and no action will be taken.",;javax.imageio.ImageWriter.removeIIOWriteProgressListener(IIOWriteProgressListener),;1
removeIIOWriteWarningListener,1,1,"Removes an IIOWriteWarningListener from the list of registered warning listeners. If the listener was not previously registered, or if listener is null, no exception will be thrown and no action will be taken.",;javax.imageio.ImageWriter.removeIIOWriteWarningListener(IIOWriteWarningListener),;1
removeIndexInterval,1,1,"Remove the indices in the interval index0,index1 (inclusive) from the selection model. This is typically called to sync the selection model width a corresponding change in the data model. Note that (as always) index0 need not be &lt;= index1.",";javax.swing.DefaultListSelectionModel.removeIndexInterval(int,int)",;1
removeInputMethodListener,1,1,"Removes the specified input method listener so that it no longer receives input method events from this component. This method performs no function, nor does it throw an exception, if the listener specified by the argument was not previously added to this component. If listener l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Component.removeInputMethodListener(InputMethodListener),;1
removeInternal,1,1,"Returns the resulting multicast listener after removing the old listener from listener-l. If listener-l equals the old listener OR listener-l is null, returns null. Else if listener-l is an instance of AWTEventMulticaster, then it removes the old listener from it. Else, returns listener l.",";java.awt.AWTEventMulticaster.removeInternal(EventListener,EventListener)",;1
removeInternalFrameListener,1,1,Removes the specified internal frame listener so that it no longer receives internal frame events from this internal frame.,;javax.swing.JInternalFrame.removeInternalFrameListener(InternalFrameListener),;1
removeInvalidComponent,1,1,Remove a component from the list of invalid components.,;javax.swing.RepaintManager.removeInvalidComponent(JComponent),;1
removeItem,1,1,Removes an item from the item list. This method works only if the JComboBox uses a mutable data model.,;javax.swing.JComboBox.removeItem(Object),;1
removeItemAt,1,1,Removes the item at anIndex This method works only if the JComboBox uses a mutable data model.,;javax.swing.JComboBox.removeItemAt(int),;1
removeKeyEventDispatcher,1,1,"Removes a KeyEventDispatcher which was previously added to this KeyboardFocusManager's dispatcher chain. This KeyboardFocusManager cannot itself be removed, unless it was explicitly re-registered via a call to addKeyEventDispatcher. If a null dispatcher is specified, if the specified dispatcher is not in the dispatcher chain, or if this KeyboardFocusManager is specified without having been explicitly re-registered, no action is taken and no exception is thrown. In a multithreaded application, KeyEventDispatcher behaves the same as other AWT listeners. See AWT Threading Issues for more details.",;java.awt.KeyboardFocusManager.removeKeyEventDispatcher(KeyEventDispatcher),;1
removeKeyEventPostProcessor,1,1,"Removes a previously added KeyEventPostProcessor from this KeyboardFocusManager's post-processor chain. This KeyboardFocusManager cannot itself be entirely removed from the chain. Only additional references added via addKeyEventPostProcessor can be removed. If a null post-processor is specified, if the specified post-processor is not in the post-processor chain, or if this KeyboardFocusManager is specified without having been explicitly added, no action is taken and no exception is thrown. In a multithreaded application, KeyEventPostProcessor behaves the same as other AWT listeners. See AWT Threading Issues for more details.",;java.awt.KeyboardFocusManager.removeKeyEventPostProcessor(KeyEventPostProcessor),;1
removeKeyListener,1,1,"Removes the specified key listener so that it no longer receives key events from this component. This method performs no function, nor does it throw an exception, if the listener specified by the argument was not previously added to this component. If listener l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Component.removeKeyListener(KeyListener),;1
removeKeymap,1,1,Removes a named keymap previously added to the document. Keymaps with null names may not be removed in this way.,;javax.swing.text.JTextComponent.removeKeymap(String),;1
removeListDataListener,1,1,Removes a listener from the list that's notified each time a change to the data model occurs.,;javax.swing.AbstractListModel.removeListDataListener(ListDataListener),;1
removeListeners,1,1,Deprecated.As of Java 2 platform v1.4.,;javax.swing.plaf.metal.MetalComboBoxUI.removeListeners(),;1
removeMenuDragMouseListener,1,1,Removes a MenuDragMouseListener from the menu item.,;javax.swing.JMenuItem.removeMenuDragMouseListener(MenuDragMouseListener),;1
removeMenuListener,1,1,Removes a listener for menu events.,;javax.swing.JMenu.removeMenuListener(MenuListener),;1
removeMouseWheelListener,1,1,"Removes the specified mouse wheel listener so that it no longer receives mouse wheel events from this component. This method performs no function, nor does it throw an exception, if the listener specified by the argument was not previously added to this component. If l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Component.removeMouseWheelListener(MouseWheelListener),;1
removeNodeFromParent,1,1,Message this to remove node from its parent. This will message nodesWereRemoved to create the appropriate event. This is the preferred way to remove a node as it handles the event creation for you.,;javax.swing.tree.DefaultTreeModel.removeNodeFromParent(MutableTreeNode),;1
removeNodeSpi,1,1,"Removes this preference node, invalidating it and any preferences that it contains. The named child will have no descendants at the time this invocation is made (i.e., the Preferences.removeNode() method invokes this method repeatedly in a bottom-up fashion, removing each of a node's descendants before removing the node itself). This method is invoked with the lock held on this node and its parent (and all ancestors that are being removed as a result of a single invocation to Preferences.removeNode()). The removal of a node needn't become persistent until the flush method is invoked on this node (or an ancestor). If this node throws a BackingStoreException, the exception will propagate out beyond the enclosing removeNode() invocation.",;java.util.prefs.AbstractPreferences.removeNodeSpi(),;1
removeNotification,1,1,Removes the timer notification corresponding to the specified identifier from the list of notifications.,;javax.management.timer.Timer.removeNotification(Integer),;1
removeNotifications,1,1,Removes all the timer notifications corresponding to the specified type from the list of notifications.,;javax.management.timer.Timer.removeNotifications(String),;1
removeObjectValue,1,1,Disallows an Object reference from being stored in nodes implementing the named element.,;javax.imageio.metadata.IIOMetadataFormatImpl.removeObjectValue(String),;1
removeObservedObject,1,1,Removes the specified object from the set of observed MBeans.,;javax.management.monitor.Monitor.removeObservedObject(ObjectName),;1
removeParameter,1,1,Remove any value associated with the given name.,;javax.activation.MimeType.removeParameter(String),;1
removeParameters,1,1,Clears the list of parameters.,;java.awt.image.renderable.ParameterBlock.removeParameters(),;1
removeProvider,1,1,"Removes the provider with the specified name. When the specified provider is removed, all providers located at a position greater than where the specified provider was are shifted down one position (towards the head of the list of installed providers). This method returns silently if the provider is not installed or if name is null. First, if there is a security manager, its checkSecurityAccess method is called with the string ""removeProvider.""+name to see if it's ok to remove the provider. If the default implementation of checkSecurityAccess is used (i.e., that method is not overriden), then this will result in a call to the security manager's checkPermission method with a SecurityPermission(""removeProvider.""+name) permission.",;java.security.Security.removeProvider(String),;1
removeRedundantState,1,1,Remove redundant key/values in state hashtables.,;javax.swing.undo.StateEdit.removeRedundantState(),;1
removeRelation,1,1,"Removes given relation from the Relation Service. A RelationNotification notification is sent, its type being: - RelationNotification.RELATION_BASIC_REMOVAL if the relation was only internal to the Relation Service - RelationNotification.RELATION_MBEAN_REMOVAL if the relation is registered as an MBean. For MBeans referenced in such relation, nothing will be done,",;javax.management.relation.RelationService.removeRelation(String),;1
removeRelationType,1,1,Removes given relation type from Relation Service. The relation objects of that type will be removed from the Relation Service.,;javax.management.relation.RelationService.removeRelationType(String),;1
removeResourceBundle,1,1,Removes a resource bundle from the list of resource bundles that are searched for localized defaults.,;javax.swing.UIDefaults.removeResourceBundle(String),;1
removeRow,1,1,Removes the row at row from the model. Notification of the row being removed will be sent to all the listeners.,;javax.swing.table.DefaultTableModel.removeRow(int),;1
removeRowSelectionInterval,1,1,"Deselects the rows from index0 to index1, inclusive.",";javax.swing.JTable.removeRowSelectionInterval(int,int)",;1
removeRowSetListener,1,1,"Removes the designated object from this RowSet object's list of listeners. If the given argument is not a registered listener, this method does nothing. Note: if the RowSetListener object is null, this method silently discards the null value.",;javax.sql.rowset.BaseRowSet.removeRowSetListener(RowSetListener),;1
removeRowSorterListener,1,1,Removes a RowSorterListener. If l is null nothing is done.,;javax.swing.RowSorter.removeRowSorterListener(RowSorterListener),;1
removeSelectionRow,1,1,Removes the row at the index row from the current selection.,;javax.swing.JTree.removeSelectionRow(int),;1
removeSelectionRows,1,1,Removes the rows that are selected at each of the specified rows.,;javax.swing.JTree.removeSelectionRows(int[]),;1
removeService,1,1,"Remove a service previously added using putService(). The specified service is removed from this provider. It will no longer be returned by getService() and its information will be removed from this provider's Hashtable. Also, if there is a security manager, its checkSecurityAccess method is called with the string ""removeProviderProperty.""+name, where name is the provider name, to see if it's ok to remove this provider's properties. If the default implementation of checkSecurityAccess is used (that is, that method is not overriden), then this results in a call to the security manager's checkPermission method with a SecurityPermission(""removeProviderProperty.""+name) permission.",;java.security.Provider.removeService(Provider.Service),;1
removeShutdownHook,1,1,De-registers a previously-registered virtual-machine shutdown hook.,;java.lang.Runtime.removeShutdownHook(Thread),;1
removeSources,1,1,Clears the list of source images.,;java.awt.image.renderable.ParameterBlock.removeSources(),;1
removeSpi,1,1,"Remove the association (if any) for the specified key at this preference node. It is guaranteed that key is non-null. Also, it is guaranteed that this node has not been removed. (The implementor needn't check for either of these things.) This method is invoked with the lock on this node held.",;java.util.prefs.AbstractPreferences.removeSpi(String),;1
removeStyleSheet,1,1,Removes the StyleSheet ss from those of the receiver.,;javax.swing.text.html.StyleSheet.removeStyleSheet(StyleSheet),;1
removeTabAt,1,1,"Removes the tab at index. After the component associated with index is removed, its visibility is reset to true to ensure it will be visible if added to other containers.",;javax.swing.JTabbedPane.removeTabAt(int),;1
removeTableModelListener,1,1,Removes a listener from the list that's notified each time a change to the data model occurs.,;javax.swing.table.AbstractTableModel.removeTableModelListener(TableModelListener),;1
removeTextListener,1,1,"Removes the specified text event listener so that it no longer receives text events from this text component If l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.TextComponent.removeTextListener(TextListener),;1
removeTileObserver,1,1,"Removes a tile observer. If the observer was not registered, nothing happens. If the observer was registered for multiple notifications, it is now registered for one fewer notification.",;java.awt.image.BufferedImage.removeTileObserver(TileObserver),;1
removeTreeExpansionListener,1,1,Removes a listener for TreeExpansion events.,;javax.swing.JTree.removeTreeExpansionListener(TreeExpansionListener),;1
removeTreeModelListener,1,1,Removes a listener previously added with addTreeModelListener().,;javax.swing.tree.DefaultTreeModel.removeTreeModelListener(TreeModelListener),;1
removeTreeWillExpandListener,1,1,Removes a listener for TreeWillExpand events.,;javax.swing.JTree.removeTreeWillExpandListener(TreeWillExpandListener),;1
removeUnicodeLocaleAttribute,1,1,"Removes a unicode locale attribute, if present, otherwise has no effect. The attribute must not be null and must be well-formed or an exception is thrown. Attribute comparision for removal is case-insensitive.",;java.util.Locale.Builder.removeUnicodeLocaleAttribute(String),;1
removeWindowFocusListener,1,1,"Removes the specified window focus listener so that it no longer receives window events from this window. If l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Window.removeWindowFocusListener(WindowFocusListener),;1
removeWindowListener,1,1,"Removes the specified window listener so that it no longer receives window events from this window. If l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Window.removeWindowListener(WindowListener),;1
removeWindowStateListener,1,1,"Removes the specified window state listener so that it no longer receives window events from this window. If l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Window.removeWindowStateListener(WindowStateListener),;1
renameFile,1,1,Renames a file in the underlying file system.,";javax.swing.plaf.basic.BasicDirectoryModel.renameFile(File,File)",;1
renameTo,1,1,"Renames the file denoted by this abstract pathname. Many aspects of the behavior of this method are inherently platform-dependent: The rename operation might not be able to move a file from one filesystem to another, it might not be atomic, and it might not succeed if a file with the destination abstract pathname already exists. The return value should always be checked to make sure that the rename operation was successful. Note that the Files class defines the move method to move or rename a file in a platform independent manner.",;java.io.File.renameTo(File),;1
render,1,1,"This allows the model to be safely rendered in the presence of currency, if the model supports being updated asynchronously. The given runnable will be executed in a way that allows it to safely read the model with no changes while the runnable is being executed. The runnable itself may not make any mutations. This is implemented to acquire a read lock for the duration of the runnables execution. There may be multiple runnables executing at the same time, and all writers will be blocked while there are active rendering runnables. If the runnable throws an exception, its lock will be safely released. There is no protection against a runnable that never exits, which will effectively leave the document locked for it's lifetime. If the given runnable attempts to make any mutations in this implementation, a deadlock will occur. There is no tracking of individual rendering threads to enable detecting this situation, but a subclass could incur the overhead of tracking them and throwing an error. This method is thread safe, although most Swing methods are not. Please see Concurrency in Swing for more information.",;javax.swing.text.AbstractDocument.render(Runnable),;1
reorderVisually,1,1,"Reorder the objects in the array into visual order based on their levels. This is a utility function to use when you have a collection of objects representing runs of text in logical order, each run containing text at a single level. The elements at index from objectStart up to objectStart + count in the objects array will be reordered into visual order assuming each run of text has the level indicated by the corresponding element in the levels array (at index - objectStart + levelStart).",";java.text.Bidi.reorderVisually(byte[],int,Object[],int,int)",;1
replaceChild,1,1,"Replaces the child node oldChild with newChild in the list of children, and returns the oldChild node.",";javax.imageio.metadata.IIOMetadataNode.replaceChild(Node,Node)",;1
replaceEdit,1,1,This default implementation returns false.,;javax.swing.undo.AbstractUndoableEdit.replaceEdit(UndoableEdit),;1
replaceImageMetadata,1,1,"Replaces the image metadata associated with an existing image. If canReplaceImageMetadata(imageIndex) returns false, an UnsupportedOperationException will be thrown. The default implementation throws an IllegalStateException if the output is null, and otherwise throws an UnsupportedOperationException.",";javax.imageio.ImageWriter.replaceImageMetadata(int,IIOMetadata)",;1
replaceItem,1,1,Replaces the item at the specified index in the scrolling list with the new string.,";java.awt.List.replaceItem(String,int)",;1
replaceObject,1,1,"This method will allow trusted subclasses of ObjectOutputStream to substitute one object for another during serialization. Replacing objects is disabled until enableReplaceObject is called. The enableReplaceObject method checks that the stream requesting to do replacement can be trusted. The first occurrence of each object written into the serialization stream is passed to replaceObject. Subsequent references to the object are replaced by the object returned by the original call to replaceObject. To ensure that the private state of objects is not unintentionally exposed, only trusted streams may use replaceObject. The ObjectOutputStream.writeObject method takes a parameter of type Object (as opposed to type Serializable) to allow for cases where non-serializable objects are replaced by serializable ones. When a subclass is replacing objects it must insure that either a complementary substitution must be made during deserialization or that the substituted object is compatible with every field where the reference will be stored. Objects whose type is not a subclass of the type of the field or array element abort the serialization by raising an exception and the object is not be stored. This method is called only once when each object is first encountered. All subsequent references to the object will be redirected to the new object. This method should return the object to be substituted or the original object. Null can be returned as the object to be substituted, but may cause NullReferenceException in classes that contain references to the original object since they may be expecting an object instead of null.",;java.io.ObjectOutputStream.replaceObject(Object),;1
replacePane,1,1,Installs necessary mouse handlers on newPane and adds it to the frame. Reverse process for the currentPane.,";javax.swing.plaf.basic.BasicInternalFrameUI.replacePane(JComponent,JComponent)",;1
replaceStreamMetadata,1,1,"Replaces the stream metadata in the output with new information. If the output is an ImageOutputStream, the prior contents of the stream are examined and possibly edited to make room for the new data. All of the prior contents of the output must be available for reading and writing. If canReplaceStreamMetadata returns false, an UnsupportedOperationException will be thrown. The default implementation throws an IllegalStateException if the output is null, and otherwise throws an UnsupportedOperationException.",;javax.imageio.ImageWriter.replaceStreamMetadata(IIOMetadata),;1
replaceText,1,1,"Deprecated.As of JDK version 1.1, replaced by replaceRange(String, int, int).",";java.awt.TextArea.replaceText(String,int,int)",;1
replaceUIActionMap,1,1,"Convenience method to change the UI ActionMap for component to uiActionMap. If uiActionMap is null, this removes any previously installed UI ActionMap.",";javax.swing.SwingUtilities.replaceUIActionMap(JComponent,ActionMap)",;1
replaceUIInputMap,1,1,"Convenience method to change the UI InputMap for component to uiInputMap. If uiInputMap is null, this removes any previously installed UI InputMap.",";javax.swing.SwingUtilities.replaceUIInputMap(JComponent,int,InputMap)",;1
report,1,1,Description copied from interface:DiagnosticListener,;javax.tools.DiagnosticCollector.report(Diagnostic&lt;?),;1
reportError,1,1,Protected convenience method to report an error to this Handler's ErrorManager. Note that this method retrieves and uses the ErrorManager without doing a security check. It can therefore be used in environments where the caller may be non-privileged.,";java.util.logging.Handler.reportError(String,Exception,int)",;1
requestDefaultFocus,1,1,"Deprecated.As of 1.4, replaced by FocusTraversalPolicy.getDefaultComponent(Container).requestFocus()",;javax.swing.JComponent.requestDefaultFocus(),;1
require,1,1,Description copied from interface:XMLStreamReader,";javax.xml.stream.util.StreamReaderDelegate.require(int,String,String)",;1
requireEnd,1,1,"Returns true if more input could change a positive match into a negative one. If this method returns true, and a match was found, then more input could cause the match to be lost. If this method returns false and a match was found, then more input might change the match but the match won't be lost. If a match was not found, then requireEnd has no meaning.",;java.util.regex.Matcher.requireEnd(),;1
requiresBidi,1,1,"Return true if the specified text requires bidi analysis. If this returns false, the text will display left-to-right. Clients can then avoid constructing a Bidi object. Text in the Arabic Presentation Forms area of Unicode is presumed to already be shaped and ordered for display, and so will not cause this function to return true.",";java.text.Bidi.requiresBidi(char[],int,int)",;1
resetChoosableFileFilters,1,1,"Resets the choosable file filter list to its starting state. Normally, this removes all added file filters while leaving the AcceptAll file filter.",;javax.swing.JFileChooser.resetChoosableFileFilters(),;1
resetInputValue,1,1,Sets the input value in the option pane the receiver is providing the look and feel for based on the value in the inputComponent.,;javax.swing.plaf.basic.BasicOptionPaneUI.resetInputValue(),;1
resetKeyboardActions,1,1,"Unregisters all the bindings in the first tier InputMaps and ActionMap. This has the effect of removing any local bindings, and allowing the bindings defined in parent InputMap/ActionMaps (the UI is usually defined in the second tier) to persist.",;javax.swing.JComponent.resetKeyboardActions(),;1
resetLayoutManager,1,1,Resets the layout manager based on orientation and messages it with invalidateLayout to pull in appropriate Components.,;javax.swing.plaf.basic.BasicSplitPaneUI.resetLayoutManager(),;1
resetMarksAtZero,1,1,Resets all the marks that have an offset of 0 to have an index of zero as well.,;javax.swing.text.GapContent.resetMarksAtZero(),;1
resetRecognizer,1,1,"Reset the Recognizer, if its currently recognizing a gesture, ignore it.",;java.awt.dnd.DragGestureRecognizer.resetRecognizer(),;1
resetRowSelection,1,1,"Updates this object's mapping from TreePath to rows. This should be invoked when the mapping from TreePaths to integers has changed (for example, a node has been expanded). You do not normally have to call this, JTree and its associated Listeners will invoke this for you. If you are implementing your own View class, then you will have to invoke this. This will invoke insureRowContinuity to make sure the currently selected TreePaths are still valid based on the selection mode.",;javax.swing.tree.DefaultTreeSelectionModel.resetRowSelection(),;1
resetSyntax,1,1,Resets this tokenizer's syntax table so that all characters are "ordinary." See the ordinaryChar method for more information on a character being ordinary.,;java.io.StreamTokenizer.resetSyntax(),;1
resizeFrame,1,1,Calls setBoundsForFrame with the new values.,";javax.swing.DefaultDesktopManager.resizeFrame(JComponent,int,int,int,int)",;1
resolve_initial_references,1,1,Resolves a specific object reference from the set of available initial service names.,;org.omg.CORBA.ORB.resolve_initial_references(String),;1
resolve_str,1,1,This operation resolves the Stringified name into the object reference.,;org.omg.CosNaming._NamingContextExtStub.resolve_str(String),;1
resolveObject,1,1,This method will allow trusted subclasses of ObjectInputStream to substitute one object for another during deserialization. Replacing objects is disabled until enableResolveObject is called. The enableResolveObject method checks that the stream requesting to resolve object can be trusted. Every reference to serializable objects is passed to resolveObject. To insure that the private state of objects is not unintentionally exposed only trusted streams may use resolveObject. This method is called after an object has been read but before it is returned from readObject. The default resolveObject method just returns the same object. When a subclass is replacing objects it must insure that the substituted object is compatible with every field where the reference will be stored. Objects whose type is not a subclass of the type of the field or array element abort the serialization by raising an exception and the object is not be stored. This method is called only once when each object is first encountered. All subsequent references to the object will be redirected to the new object.,;java.io.ObjectInputStream.resolveObject(Object),;1
resolveProxyClass,1,1,"Returns a proxy class that implements the interfaces named in a proxy class descriptor; subclasses may implement this method to read custom data from the stream along with the descriptors for dynamic proxy classes, allowing them to use an alternate loading mechanism for the interfaces and the proxy class. This method is called exactly once for each unique proxy class descriptor in the stream. The corresponding method in ObjectOutputStream is annotateProxyClass. For a given subclass of ObjectInputStream that overrides this method, the annotateProxyClass method in the corresponding subclass of ObjectOutputStream must write any data or objects read by this method. The default implementation of this method in ObjectInputStream returns the result of calling Proxy.getProxyClass with the list of Class objects for the interfaces that are named in the interfaces parameter. The Class object for each interface name i is the value returned by calling Class.forName(i, false, loader) where loader is that of the first non-null class loader up the execution stack, or null if no non-null class loaders are on the stack (the same class loader choice used by the resolveClass method). Unless any of the resolved interfaces are non-public, this same value of loader is also the class loader passed to Proxy.getProxyClass; if non-public interfaces are present, their class loader is passed instead (if more than one non-public interface class loader is encountered, an IllegalAccessError is thrown). If Proxy.getProxyClass throws an IllegalArgumentException, resolveProxyClass will throw a ClassNotFoundException containing the IllegalArgumentException.",;java.io.ObjectInputStream.resolveProxyClass(String[]),;1
restart,1,1,"Restarts the Timer, canceling any pending firings and causing it to fire with its initial delay.",;javax.swing.Timer.restart(),;1
restoreComposedText,1,1,Restores composed text previously saved by saveComposedText. The saved composed text is inserted back into the document. This method should be invoked only if saveComposedText returns true.,;javax.swing.text.JTextComponent.restoreComposedText(),;1
restoreSubcomponentFocus,1,1,"Requests the internal frame to restore focus to the last subcomponent that had focus. This is used by the UI when the user selected this internal frame -- for example, by clicking on the title bar.",;javax.swing.JInternalFrame.restoreSubcomponentFocus(),;1
retrieveAllRoles,1,1,Returns all roles in the relation without checking read mode.,;javax.management.relation.RelationSupport.retrieveAllRoles(),;1
return_value,1,1,Returns the Any object that contains the value for the result of the method.,;org.omg.CORBA.Request.return_value(),;1
returnType,1,1,Returns the return type of this method type.,;java.lang.invoke.MethodType.returnType(),;1
revealDirect,1,1,Cracks a direct method handle created by this lookup object or a similar one. Security and access checks are performed to ensure that this lookup object is capable of reproducing the target method handle. This means that the cracking may fail if target is a direct method handle but was created by an unrelated lookup object. This can happen if the method handle is caller sensitive and was created by a lookup object for a different class.,;java.lang.invoke.MethodHandles.Lookup.revealDirect(MethodHandle),;1
revokeService,1,1,remove a service,";java.beans.beancontext.BeanContextServicesSupport.revokeService(Class,BeanContextServiceProvider,boolean)",;1
RGBtoHSB,1,1,"Converts the components of a color, as specified by the default RGB model, to an equivalent set of values for hue, saturation, and brightness that are the three components of the HSB model. If the hsbvals argument is null, then a new array is allocated to return the result. Otherwise, the method returns the array hsbvals, with the values put into that array.",";java.awt.Color.RGBtoHSB(int,int,int,float[])",;1
roleValueToString,1,1,Returns a string for the given role value.,;javax.management.relation.Role.roleValueToString(List&lt;ObjectName&gt;),;1
round,1,1,Returns a BigDecimal rounded according to the MathContext settings. If the precision setting is 0 then no rounding takes place. The effect of this method is identical to that of the plus(MathContext) method.,;java.math.BigDecimal.round(MathContext),;1
rowAtPoint,1,1,"Returns the index of the row that point lies in, or -1 if the result is not in the range [0, getRowCount()-1].",;javax.swing.JTable.rowAtPoint(Point),;1
rowsRemoved,1,1,Equivalent to fireTableChanged.,;javax.swing.table.DefaultTableModel.rowsRemoved(TableModelEvent),;1
runAfterBoth,1,1,Description copied from interface:CompletionStage,";java.util.concurrent.CompletableFuture.runAfterBoth(CompletionStage&lt;?&gt;,Runnable)",;1
runAfterEither,1,1,Description copied from interface:CompletionStage,";java.util.concurrent.CompletableFuture.runAfterEither(CompletionStage&lt;?&gt;,Runnable)",;1
runAndReset,1,1,"Executes the computation without setting its result, and then resets this future to initial state, failing to do so if the computation encounters an exception or is cancelled. This is designed for use with tasks that intrinsically execute more than once.",;java.util.concurrent.FutureTask.runAndReset(),;1
save,1,1,"Deprecated.This method does not throw an IOException if an I/O error occurs while saving the property list. The preferred way to save a properties list is via the store(OutputStream out, String comments) method or the storeToXML(OutputStream os, String comment) method.",";java.util.Properties.save(OutputStream,String)",;1
saveChanges,1,1,"Updates this SOAPMessage object with all the changes that have been made to it. This method is called automatically when writeTo(OutputStream) is called. However, if changes are made to a message that was received or to one that has already been sent, the method saveChanges needs to be called explicitly in order to save the changes. The method saveChanges also generates any changes that can be read back (for example, a MessageId in profiles that support a message id). All MIME headers in a message that is created for sending purposes are guaranteed to have valid values only after saveChanges has been called. In addition, this method marks the point at which the data from all constituent AttachmentPart objects are pulled into the message.",;javax.xml.soap.SOAPMessage.saveChanges(),;1
saveComposedText,1,1,Saves composed text around the specified position. The composed text (if any) around the specified position is saved in a backing store and removed from the document.,;javax.swing.text.JTextComponent.saveComposedText(int),;1
saveRequired,1,1,Indicates whether this SOAPMessage object needs to have the method saveChanges called on it.,;javax.xml.soap.SOAPMessage.saveRequired(),;1
scaleByPowerOfTen,1,1,Returns a BigDecimal whose numerical value is equal to (this * 10n). The scale of the result is (this.scale() - n).,;java.math.BigDecimal.scaleByPowerOfTen(int),;1
scanForPlugins,1,1,"Scans for plug-ins on the application class path, loads their service provider classes, and registers a service provider instance for each one found with the IIORegistry. This method is needed because the application class path can theoretically change, or additional plug-ins may become available. Rather than re-scanning the classpath on every invocation of the API, the class path is scanned automatically only on the first invocation. Clients can call this method to prompt a re-scan. Thus this method need only be invoked by sophisticated applications which dynamically make new plug-ins available at runtime. The getResources method of the context ClassLoader is used locate JAR files containing files named META-INF/services/javax.imageio.spi.classname, where classname is one of ImageReaderSpi, ImageWriterSpi, ImageTranscoderSpi, ImageInputStreamSpi, or ImageOutputStreamSpi, along the application class path. The contents of the located files indicate the names of actual implementation classes which implement the aforementioned service provider interfaces; the default class loader is then used to load each of these classes and to instantiate an instance of each class, which is then placed into the registry for later retrieval. The exact set of locations searched depends on the implementation of the Java runtime environment.",;javax.imageio.ImageIO.scanForPlugins(),;1
scheduledExecutionTime,1,1,"Returns the scheduled execution time of the most recent actual execution of this task. (If this method is invoked while task execution is in progress, the return value is the scheduled execution time of the ongoing task execution.) This method is typically invoked from within a task's run method, to determine whether the current execution of the task is sufficiently timely to warrant performing the scheduled activity: public void run() { if (System.currentTimeMillis() - scheduledExecutionTime() &gt;= MAX_TARDINESS) return; // Too late; skip this execution. // Perform the task } This method is typically not used in conjunction with fixed-delay execution repeating tasks, as their scheduled execution times are allowed to drift over time, and so are not terribly significant.",;java.util.TimerTask.scheduledExecutionTime(),;1
scheduleWithFixedDelay,1,1,Description copied from interface:ScheduledExecutorService,";java.util.concurrent.ScheduledThreadPoolExecutor.scheduleWithFixedDelay(Runnable,long,long,TimeUnit)",;1
scrollPathToVisible,1,1,Makes sure all the path components in path are expanded (except for the last path component) and scrolls so that the node identified by the path is displayed. Only works when this JTree is contained in a JScrollPane.,;javax.swing.JTree.scrollPathToVisible(TreePath),;1
scrollRowToVisible,1,1,Scrolls the item identified by row until it is displayed. The minimum of amount of scrolling necessary to bring the row into view is performed. Only works when this JTree is contained in a JScrollPane.,;javax.swing.JTree.scrollRowToVisible(int),;1
scrollToReference,1,1,"Scrolls the view to the given reference location (that is, the value returned by the UL.getRef method for the URL being displayed). By default, this method only knows how to locate a reference in an HTMLDocument. The implementation calls the scrollRectToVisible method to accomplish the actual scrolling. If scrolling to a reference location is needed for document types other than HTML, this method should be reimplemented. This method will have no effect if the component is not visible.",;javax.swing.JEditorPane.scrollToReference(String),;1
searchEntries,1,1,"Returns a non-null result from applying the given search function on each entry, or null if none. Upon success, further element processing is suppressed and the results of any other parallel invocations of the search function are ignored.",";java.util.concurrent.ConcurrentHashMap.searchEntries(long,Function&lt;Map.Entry&lt;K,V&gt;,?)",;1
searchKeys,1,1,"Returns a non-null result from applying the given search function on each key, or null if none. Upon success, further element processing is suppressed and the results of any other parallel invocations of the search function are ignored.",";java.util.concurrent.ConcurrentHashMap.searchKeys(long,Function&lt;?,?)",;1
searchValues,1,1,"Returns a non-null result from applying the given search function on each value, or null if none. Upon success, further element processing is suppressed and the results of any other parallel invocations of the search function are ignored.",";java.util.concurrent.ConcurrentHashMap.searchValues(long,Function&lt;?,?)",;1
secondaryOrder,1,1,Return the secondary component of a collation element.,;java.text.CollationElementIterator.secondaryOrder(int),;1
selectContent,1,1,Writes out the content of the SELECT form element.,;javax.swing.text.html.HTMLWriter.selectContent(AttributeSet),;1
selectedItemChanged,1,1,This protected method is implementation specific. Do not access directly or override.,;javax.swing.JComboBox.selectedItemChanged(),;1
selectedKeys,1,1,"Returns this selector's selected-key set. Keys may be removed from, but not directly added to, the selected-key set. Any attempt to add an object to the key set will cause an UnsupportedOperationException to be thrown. The selected-key set is not thread-safe.",;java.nio.channels.Selector.selectedKeys(),;1
selectFrame,1,1,Selects the next JInternalFrame in this desktop pane.,;javax.swing.JDesktopPane.selectFrame(boolean),;1
selectNextIndex,1,1,Selected the previous row and force it to be visible.,;javax.swing.plaf.basic.BasicListUI.selectNextIndex(),;1
selectNextPossibleValue,1,1,Selects the next item in the list. It won't change the selection if the currently selected item is already the last item.,;javax.swing.plaf.basic.BasicComboBoxUI.selectNextPossibleValue(),;1
selectNow,1,1,Selects a set of keys whose corresponding channels are ready for I/O operations. This method performs a non-blocking selection operation. If no channels have become selectable since the previous selection operation then this method immediately returns zero. Invoking this method clears the effect of any previous invocations of the wakeup method.,;java.nio.channels.Selector.selectNow(),;1
selector,1,1,Returns the selector for which this key was created. This method will continue to return the selector even after the key is cancelled.,;java.nio.channels.SelectionKey.selector(),;1
selectPathForEvent,1,1,"Messaged to update the selection based on a MouseEvent over a particular row. If the event is a toggle selection event, the row is either selected, or deselected. If the event identifies a multi selection event, the selection is updated from the anchor point. Otherwise the row is selected, and if the event specified a toggle event the row is expanded/collapsed.",";javax.swing.plaf.basic.BasicTreeUI.selectPathForEvent(TreePath,MouseEvent)",;1
selectPreviousIndex,1,1,Selected the previous row and force it to be visible.,;javax.swing.plaf.basic.BasicListUI.selectPreviousIndex(),;1
selectPreviousPossibleValue,1,1,Selects the previous item in the list. It won't change the selection if the currently selected item is already the first item.,;javax.swing.plaf.basic.BasicComboBoxUI.selectPreviousPossibleValue(),;1
selectWithKeyChar,1,1,"Selects the list item that corresponds to the specified keyboard character and returns true, if there is an item corresponding to that character. Otherwise, returns false.",;javax.swing.JComboBox.selectWithKeyChar(char),;1
send_deferred,1,1,"Makes an asynchronous invocation on the request. In other words, it does not wait for a response before it returns to the user. The user can then later use the methods poll_response and get_response to get the result or exception information for the invocation.",;org.omg.CORBA.Request.send_deferred(),;1
send_multiple_requests_deferred,1,1,Sends multiple dynamic (DII) requests asynchronously.,;org.omg.CORBA.ORB.send_multiple_requests_deferred(Request[]),;1
send_multiple_requests_oneway,1,1,Sends multiple dynamic (DII) requests asynchronously without expecting any responses. Note that oneway invocations are not guaranteed to reach the server.,;org.omg.CORBA.ORB.send_multiple_requests_oneway(Request[]),;1
send_oneway,1,1,"Makes a oneway invocation on the request. In other words, it does not expect or wait for a response. Note that this can be used even if the operation was not declared as oneway in the IDL declaration. No response or exception information is returned.",;org.omg.CORBA.Request.send_oneway(),;1
sendRelationCreationNotification,1,1,Sends a notification (RelationNotification) for a relation creation. The notification type is: - RelationNotification.RELATION_BASIC_CREATION if the relation is an object internal to the Relation Service - RelationNotification.RELATION_MBEAN_CREATION if the relation is a MBean added as a relation. The source object is the Relation Service itself. It is called in Relation Service createRelation() and addRelation() methods.,;javax.management.relation.RelationService.sendRelationCreationNotification(String),;1
sendRelationRemovalNotification,1,1,Sends a notification (RelationNotification) for a relation removal. The notification type is: - RelationNotification.RELATION_BASIC_REMOVAL if the relation is an object internal to the Relation Service - RelationNotification.RELATION_MBEAN_REMOVAL if the relation is a MBean added as a relation. The source object is the Relation Service itself. It is called in Relation Service removeRelation() method.,";javax.management.relation.RelationService.sendRelationRemovalNotification(String,List&lt;ObjectName&gt;)",;1
sendRoleUpdateNotification,1,1,Sends a notification (RelationNotification) for a role update in the given relation. The notification type is: - RelationNotification.RELATION_BASIC_UPDATE if the relation is an object internal to the Relation Service - RelationNotification.RELATION_MBEAN_UPDATE if the relation is a MBean added as a relation. The source object is the Relation Service itself. It is called in relation MBean setRole() (for given role) and setRoles() (for each role) methods (implementation provided in RelationSupport class). It is also called in Relation Service setRole() (for given role) and setRoles() (for each role) methods.,";javax.management.relation.RelationService.sendRoleUpdateNotification(String,Role,List&lt;ObjectName&gt;)",;1
serialize,1,1,Used by writeObject to serialize a Collection.,";java.beans.beancontext.BeanContextSupport.serialize(ObjectOutputStream,Collection)",;1
servant_postinvoke,1,1,"servant_postinvoke() is invoked by the local stub after the operation has been invoked on the local servant. This method must be called if servant_preinvoke() returned a non-null value, even if an exception was thrown by the servant's method. For this reason, the call to servant_postinvoke() should be placed in a Java finally clause.",";org.omg.CORBA.portable.Delegate.servant_postinvoke(Object,ServantObject)",;1
servant_preinvoke,1,1,"Returns a Java reference to the servant which should be used for this request. servant_preinvoke() is invoked by a local stub. If a ServantObject object is returned, then its servant field has been set to an object of the expected type (Note: the object may or may not be the actual servant instance). The local stub may cast the servant field to the expected type, and then invoke the operation directly. The ServantRequest object is valid for only one invocation, and cannot be used for more than one invocation.",";org.omg.CORBA.portable.Delegate.servant_preinvoke(Object,String,Class)",;1
serviceName,1,1,Sets the serviceName as the wsam:ServiceName element in the wsa:Metadata element. See 2.1 Referencing WSDL Metadata from an EPR for more details.,;javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder.serviceName(QName),;1
set_as_string,1,1,Sets the value of the DynEnum to the enumerated value whose IDL identifier is passed in the value parameter.,;org.omg.DynamicAny._DynEnumStub.set_as_string(String),;1
set_as_ulong,1,1,Sets the value of the DynEnum as the enumerated value's ordinal value.,;org.omg.DynamicAny._DynEnumStub.set_as_ulong(int),;1
set_discriminator,1,1,"Sets the discriminator of the DynUnion to the specified value. Setting the discriminator to a value that is consistent with the currently active union member does not affect the currently active member. Setting the discriminator to a value that is inconsistent with the currently active member deactivates the member and activates the member that is consistent with the new discriminator value (if there is a member for that value) by initializing the member to its default value. Setting the discriminator of a union sets the current position to 0 if the discriminator value indicates a non-existent union member (has_no_active_member returns true in this case). Otherwise, if the discriminator value indicates a named union member, the current position is set to 1 (has_no_active_member returns false and component_count returns 2 in this case).",;org.omg.DynamicAny._DynUnionStub.set_discriminator(DynAny),;1
set_exception,1,1,"Throws an org.omg.CORBA.NO_IMPLEMENT exception. Returns the given exception to the client. This method is invoked by the DIR, which may call it at any time. The Any object passed to this method must contain either a system exception or one of the user exceptions specified in the invoked operation's IDL definition. Passing in an Any object that does not contain an exception will cause a BAD_PARAM system exception to be thrown. Passing in an unlisted user exception will result in either the DIR receiving a BAD_PARAM system exception or in the client receiving an UNKNOWN_EXCEPTION system exception.",;org.omg.CORBA.ServerRequest.set_exception(Any),;1
set_one_value,1,1,"Creates a NamedValue object and adds it to this Context object. The name field of the new NamedValue object is set to the given string, the value field is set to the given Any object, and the flags field is set to zero.",";org.omg.CORBA.Context.set_one_value(String,Any)",;1
set_policy_override,1,1,Associates the policies passed in with a newly created object reference that it returns. Only certain policies that pertain to the invocation of an operation at the client end can be overridden using this operation. Attempts to override any other policy will result in the raising of the CORBA::NO_PERMISSION exception.,";org.omg.CORBA.portable.Delegate.set_policy_override(Object,Policy[],SetOverrideType)",;1
set_result,1,1,"Throws an org.omg.CORBA.NO_IMPLEMENT exception. Specifies any return value for the call. Unless the method set_exception is called, if the invoked method has a non-void result type, the method set_result must be called exactly once before the DIR returns. If the operation has a void result type, the method set_result may optionally be called once with an Any object whose type is tk_void. Calling the method set_result before the method arguments has been called or after the method set_result or set_exception has been called will result in a BAD_INV_ORDER exception. Calling the method set_result without having previously called the method ctx when the IDL operation contains a context expression, or when the NVList passed to arguments did not describe all parameters passed by the client, may result in a MARSHAL system exception.",;org.omg.CORBA.ServerRequest.set_result(Any),;1
set_return_type,1,1,Sets the typecode for the return value of the method.,;org.omg.CORBA.Request.set_return_type(TypeCode),;1
set_to_default_member,1,1,Sets the discriminator to a value that is consistent with the value of the default case of a union. It sets the current position to zero and causes component_count to return 2.,;org.omg.DynamicAny._DynUnionStub.set_to_default_member(),;1
set_to_no_active_member,1,1,Sets the discriminator to a value that does not correspond to any of the unions case labels. It sets the current position to zero and causes component_count to return 1.,;org.omg.DynamicAny._DynUnionStub.set_to_no_active_member(),;1
set_to_null,1,1,Changes the representation of a DynValueCommon to a null value type.,;org.omg.DynamicAny._DynValueStub.set_to_null(),;1
set_to_value,1,1,"Replaces a null value type with a newly constructed value. Its components are initialized to default values as in DynAnyFactory.create_dyn_any_from_type_code. If the DynValueCommon represents a non-null value type, then this operation has no effect.",;org.omg.DynamicAny._DynValueStub.set_to_value(),;1
set_value,1,1,"Sets the value of the DynFixed. The val string must contain a fixed string constant in the same format as used for IDL fixed-point literals. However, the trailing d or D is optional. The return value is true if val can be represented as the DynFixed without loss of precision. If val has more fractional digits than can be represented in the DynFixed, fractional digits are truncated and the return value is false.",;org.omg.DynamicAny._DynFixedStub.set_value(String),;1
set_values,1,1,"I Sets one or more property values in this Context object. The NVList supplied to this method contains one or more NamedValue objects. In each NamedValue object, the name field holds the name of the property, and the flags field must be set to zero. The NamedValue object's value field contains an Any object, which, in turn, contains the value for the property. Since the value is always a string, the Any object must have the kind field of its TypeCode set to TCKind.tk_string.",;org.omg.CORBA.Context.set_values(NVList),;1
set2DigitYearStart,1,1,Sets the 100-year period 2-digit years will be interpreted as being in to begin on the date the user specifies.,;java.text.SimpleDateFormat.set2DigitYearStart(Date),;1
setAccelerationPriority,1,1,"Sets a hint for this image about how important acceleration is. This priority hint is used to compare to the priorities of other Image objects when determining how to use scarce acceleration resources such as video memory. When and if it is possible to accelerate this Image, if there are not enough resources available to provide that acceleration but enough can be freed up by de-accelerating some other image of lower priority, then that other Image may be de-accelerated in deference to this one. Images that have the same priority take up resources on a first-come, first-served basis.",;java.awt.Image.setAccelerationPriority(float),;1
setAcceptAllFileFilterUsed,1,1,"Determines whether the AcceptAll FileFilter is used as an available choice in the choosable filter list. If false, the AcceptAll file filter is removed from the list of available file filters. If true, the AcceptAll file filter will become the the actively used file filter.",;javax.swing.JFileChooser.setAcceptAllFileFilterUsed(boolean),;1
setAccessibleDescription,1,1,Sets the accessible description of this object. Changing the name will cause a PropertyChangeEvent to be fired for the ACCESSIBLE_DESCRIPTION_PROPERTY property.,;javax.accessibility.AccessibleContext.setAccessibleDescription(String),;1
setAccessibleName,1,1,Sets the localized accessible name of this object. Changing the name will cause a PropertyChangeEvent to be fired for the ACCESSIBLE_NAME_PROPERTY property.,;javax.accessibility.AccessibleContext.setAccessibleName(String),;1
setAccessibleParent,1,1,Sets the Accessible parent of this object. This is meant to be used only in the situations where the actual component's parent should not be treated as the component's accessible parent and is a method that should only be called by the parent of the accessible child.,;javax.accessibility.AccessibleContext.setAccessibleParent(Accessible),;1
setAccessory,1,1,"Sets the accessory component. An accessory is often used to show a preview image of the selected file; however, it can be used for anything that the programmer wishes, such as extra custom file chooser controls. Note: if there was a previous accessory, you should unregister any listeners that the accessory might have registered with the file chooser.",;javax.swing.JFileChooser.setAccessory(JComponent),;1
setActionMap,1,1,"Sets the ActionMap to am. This does not set the parent of the am to be the ActionMap from the UI (if there was one), it is up to the caller to have done this.",;javax.swing.JComponent.setActionMap(ActionMap),;1
setActive,1,1,"Sets the DropTarget active if true, inactive if false.",;java.awt.dnd.DropTarget.setActive(boolean),;1
setAddress,1,1,Sets the IP address of the machine to which this datagram is being sent.,;java.net.DatagramPacket.setAddress(InetAddress),;1
setAlgorithmConstraints,1,1,"Sets the cryptographic algorithm constraints, which will be used in addition to any configured by the runtime environment. If the constraints parameter is non-null, every cryptographic algorithm, key and algorithm parameters used in the SSL/TLS handshake must be permitted by the constraints.",;javax.net.ssl.SSLParameters.setAlgorithmConstraints(AlgorithmConstraints),;1
setAlignmentX,1,1,Sets the the vertical alignment.,;javax.swing.JComponent.setAlignmentX(float),;1
setAlignmentY,1,1,Sets the the horizontal alignment.,;javax.swing.JComponent.setAlignmentY(float),;1
setAlignOnBaseline,1,1,Sets whether or not components should be vertically aligned along their baseline. Components that do not have a baseline will be centered. The default is false.,;java.awt.FlowLayout.setAlignOnBaseline(boolean),;1
setAllowsChildren,1,1,"Determines whether or not this node is allowed to have children. If allows is false, all of this node's children are removed. Note: By default, a node allows children.",;javax.swing.tree.DefaultMutableTreeNode.setAllowsChildren(boolean),;1
setAllowsInvalid,1,1,"Sets whether or not the value being edited is allowed to be invalid for a length of time (that is, stringToValue throws a ParseException). It is often convenient to allow the user to temporarily input an invalid value.",;javax.swing.text.DefaultFormatter.setAllowsInvalid(boolean),;1
setAllowUserInteraction,1,1,Set the value of the allowUserInteraction field of this URLConnection.,;java.net.URLConnection.setAllowUserInteraction(boolean),;1
setAlwaysOnTop,1,1,"Sets whether this window should always be above other windows. If there are multiple always-on-top windows, their relative order is unspecified and platform dependent. If some other window is already always-on-top then the relative order between these windows is unspecified (depends on platform). No window can be brought to be over the always-on-top window except maybe another always-on-top window. All windows owned by an always-on-top window inherit this state and automatically become always-on-top. If a window ceases to be always-on-top, the windows that it owns will no longer be always-on-top. When an always-on-top window is sent toBack, its always-on-top state is set to false. When this method is called on a window with a value of true, and the window is visible and the platform supports always-on-top for this window, the window is immediately brought forward, ""sticking"" it in the top-most position. If the window isn`t currently visible, this method sets the always-on-top state to true but does not bring the window forward. When the window is later shown, it will be always-on-top. When this method is called on a window with a value of false the always-on-top state is set to normal. It may also cause an unspecified, platform-dependent change in the z-order of top-level windows, but other always-on-top windows will remain in top-most position. Calling this method with a value of false on a window that has a normal state has no effect. Note: some platforms might not support always-on-top windows. To detect if always-on-top windows are supported by the current platform, use Toolkit.isAlwaysOnTopSupported() and isAlwaysOnTopSupported(). If always-on-top mode isn't supported for this window or this window's toolkit does not support always-on-top windows, calling this method has no effect. If a SecurityManager is installed, the calling thread must be granted the AWTPermission ""setWindowAlwaysOnTop"" in order to set the value of this property. If this permission is not granted, this method will throw a SecurityException, and the current value of the property will be left unchanged.",;java.awt.Window.setAlwaysOnTop(boolean),;1
setAmPmStrings,1,1,Sets ampm strings. For example: "AM" and "PM".,;java.text.DateFormatSymbols.setAmPmStrings(String[]),;1
setAnchorSelectionIndex,1,1,"Set the anchor selection index, leaving all selection values unchanged. If leadAnchorNotificationEnabled is true, send a notification covering the old and new anchor cells.",;javax.swing.DefaultListSelectionModel.setAnchorSelectionIndex(int),;1
setAnchorSelectionPath,1,1,"Sets the path identified as the anchor. The anchor is not maintained by JTree, rather the UI will update it. This is a bound property.",;javax.swing.JTree.setAnchorSelectionPath(TreePath),;1
setAnimated,1,1,Changes this memory image into a multi-frame animation or a single-frame static image depending on the animated parameter. This method should be called immediately after the MemoryImageSource is constructed and before an image is created with it to ensure that all ImageConsumers will receive the correct multi-frame data. If an ImageConsumer is added to this ImageProducer before this flag is set then that ImageConsumer will see only a snapshot of the pixel data that was available when it connected.,;java.awt.image.MemoryImageSource.setAnimated(boolean),;1
setAnyPolicyInhibited,1,1,"Sets state to determine if the any policy OID should be processed if it is included in a certificate. By default, the any policy OID is not inhibited (isAnyPolicyInhibited() returns false).",;java.security.cert.PKIXParameters.setAnyPolicyInhibited(boolean),;1
setApplicationProtocols,1,1,"Sets the prioritized array of application-layer protocol names that can be negotiated over the SSL/TLS/DTLS protocols. If application-layer protocols are supported by the underlying SSL/TLS implementation, this method configures which values can be negotiated by protocols such as RFC 7301 , the Application Layer Protocol Negotiation (ALPN). If this end of the connection is expected to offer application protocol values, all protocols configured by this method will be sent to the peer. If this end of the connection is expected to select the application protocol value, the protocols configured by this method are compared with those sent by the peer. The first matched value becomes the negotiated value. If none of the protocols were actually requested by the peer, the underlying protocol will determine what action to take. (For example, ALPN will send a ""no_application_protocol"" alert and terminate the connection.)",;javax.net.ssl.SSLParameters.setApplicationProtocols(String[]),;1
setApproveButtonText,1,1,Sets the text used in the ApproveButton in the FileChooserUI.,;javax.swing.JFileChooser.setApproveButtonText(String),;1
setApproveButtonToolTipText,1,1,"Sets the tooltip text used in the ApproveButton. If null, the UI object will determine the button's text.",;javax.swing.JFileChooser.setApproveButtonToolTipText(String),;1
setArcByCenter,1,1,"Sets the position, bounds, angular extents, and closure type of this arc to the specified values. The arc is defined by a center point and a radius rather than a framing rectangle for the full ellipse.",";java.awt.geom.Arc2D.setArcByCenter(double,double,double,double,double,int)",;1
setArcByTangent,1,1,"Sets the position, bounds, and angular extents of this arc to the specified value. The starting angle of the arc is tangent to the line specified by points (p1, p2), the ending angle is tangent to the line specified by points (p2, p3), and the arc has the specified radius.",";java.awt.geom.Arc2D.setArcByTangent(Point2D,Point2D,Point2D,double)",;1
setArcType,1,1,"Sets the closure type of this arc to the specified value: OPEN, CHORD, or PIE.",;java.awt.geom.Arc2D.setArcType(int),;1
setAreaOfInterest,1,1,Sets the current area of interest. The old area is discarded.,;java.awt.image.renderable.RenderContext.setAreaOfInterest(Shape),;1
setArray,1,1,"Sets the designated parameter to an Array object in the Java programming language. The driver converts this to an SQL ARRAY value when it sends it to the database. Internally, the Array is represented as a SerialArray to ensure serializability. The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this RowSet object's command when the method execute is called. Methods such as execute and populate must be provided in any class that extends this class and implements one or more of the standard JSR-114 RowSet interfaces. Note: JdbcRowSet does not require the populate method as it is undefined in this class. After this method has been called, a call to the method getParams will return an object array of the current command parameters, which will include the Array object set for placeholder parameter number parameterIndex. Note that because the numbering of elements in an array starts at zero, the array element that corresponds to placeholder parameter number parameterIndex is element number parameterIndex -1.",";javax.sql.rowset.BaseRowSet.setArray(int,Array)",;1
setAsksAllowsChildren,1,1,"Sets whether or not to test leafness by asking getAllowsChildren() or isLeaf() to the TreeNodes. If newvalue is true, getAllowsChildren() is messaged, otherwise isLeaf() is messaged.",;javax.swing.tree.DefaultTreeModel.setAsksAllowsChildren(boolean),;1
setAsText,1,1,Sets the property value by parsing a given String. May raise java.lang.IllegalArgumentException if either the String is badly formatted or if this kind of property can't be expressed as text.,;java.beans.PropertyEditorSupport.setAsText(String),;1
setAsynchronousLoadPriority,1,1,Sets the asynchronous loading priority.,;javax.swing.text.AbstractDocument.setAsynchronousLoadPriority(int),;1
setAttachmentMarshaller,1,1,Description copied from interface:Marshaller,;javax.xml.bind.helpers.AbstractMarshallerImpl.setAttachmentMarshaller(AttachmentMarshaller),;1
setAttachmentUnmarshaller,1,1,Description copied from interface:Unmarshaller,;javax.xml.bind.helpers.AbstractUnmarshallerImpl.setAttachmentUnmarshaller(AttachmentUnmarshaller),;1
setAttributeList,1,1,Deprecated.,;org.xml.sax.helpers.AttributeListImpl.setAttributeList(AttributeList),;1
setAttributeNode,1,1,Description copied from interface:Element,;javax.imageio.metadata.IIOMetadataNode.setAttributeNode(Attr),;1
setAttributeNodeNS,1,1,Equivalent to setAttributeNode(newAttr).,;javax.imageio.metadata.IIOMetadataNode.setAttributeNodeNS(Attr),;1
setAttributeNS,1,1,"Equivalent to setAttribute(qualifiedName, value).",";javax.imageio.metadata.IIOMetadataNode.setAttributeNS(String,String,String)",;1
setAuthorityKeyIdentifier,1,1,"Sets the authorityKeyIdentifier criterion. The X509Certificate must contain an AuthorityKeyIdentifier extension for which the contents of the extension value matches the specified criterion value. If the criterion value is null, no authorityKeyIdentifier check will be done. If authorityKeyID is not null, it should contain a single DER encoded value corresponding to the contents of the extension value (not including the object identifier, criticality setting, and encapsulating OCTET STRING) for an AuthorityKeyIdentifier extension. The ASN.1 notation for this structure follows. AuthorityKeyIdentifier ::= SEQUENCE { keyIdentifier [0] KeyIdentifier OPTIONAL, authorityCertIssuer [1] GeneralNames OPTIONAL, authorityCertSerialNumber [2] CertificateSerialNumber OPTIONAL } KeyIdentifier ::= OCTET STRING Authority key identifiers are not parsed by the X509CertSelector. Instead, the values are compared using a byte-by-byte comparison. When the keyIdentifier field of AuthorityKeyIdentifier is populated, the value is usually taken from the SubjectKeyIdentifier extension in the issuer's certificate. Note, however, that the result of X509Certificate.getExtensionValue(&lt;SubjectKeyIdentifier Object Identifier&gt;) on the issuer's certificate may NOT be used directly as the input to setAuthorityKeyIdentifier. This is because the SubjectKeyIdentifier contains only a KeyIdentifier OCTET STRING, and not a SEQUENCE of KeyIdentifier, GeneralNames, and CertificateSerialNumber. In order to use the extension value of the issuer certificate's SubjectKeyIdentifier extension, it will be necessary to extract the value of the embedded KeyIdentifier OCTET STRING, then DER encode this OCTET STRING inside a SEQUENCE. For more details on SubjectKeyIdentifier, see setSubjectKeyIdentifier(byte[] subjectKeyID). Note also that the byte array supplied here is cloned to protect against subsequent modifications.",;java.security.cert.X509CertSelector.setAuthorityKeyIdentifier(byte[]),;1
setAuthorized,1,1,Sets whether the authorization is allowed.,;javax.security.sasl.AuthorizeCallback.setAuthorized(boolean),;1
setAuthorizedID,1,1,"Sets the id of the authorized entity. Called by handler only when the id is different from getAuthorizationID(). For example, the id might need to be canonicalized for the environment in which it will be used.",;javax.security.sasl.AuthorizeCallback.setAuthorizedID(String),;1
setAutoCreateColumnsFromModel,1,1,Sets this table's autoCreateColumnsFromModel flag. This method calls createDefaultColumnsFromModel if autoCreateColumnsFromModel changes from false to true.,;javax.swing.JTable.setAutoCreateColumnsFromModel(boolean),;1
setAutoCreateContainerGaps,1,1,Sets whether a gap between the container and components that touch the border of the container should automatically be created. The default is false.,;javax.swing.GroupLayout.setAutoCreateContainerGaps(boolean),;1
setAutoCreateGaps,1,1,"Sets whether a gap between components should automatically be created. For example, if this is true and you add two components to a SequentialGroup a gap between the two components is automatically be created. The default is false.",;javax.swing.GroupLayout.setAutoCreateGaps(boolean),;1
setAutoCreateRowSorter,1,1,"Specifies whether a RowSorter should be created for the table whenever its model changes. When setAutoCreateRowSorter(true) is invoked, a TableRowSorter is immediately created and installed on the table. While the autoCreateRowSorter property remains true, every time the model is changed, a new TableRowSorter is created and set as the table's row sorter. The default value for the autoCreateRowSorter property is false.",;javax.swing.JTable.setAutoCreateRowSorter(boolean),;1
setAutoDelay,1,1,Sets the number of milliseconds this Robot sleeps after generating an event.,;java.awt.Robot.setAutoDelay(int),;1
setAutoFormSubmission,1,1,Specifies if an html form submission is processed automatically or only FormSubmitEvent is fired. By default it is set to true.,;javax.swing.text.html.HTMLEditorKit.setAutoFormSubmission(boolean),;1
setAutoIncrement,1,1,"Sets whether the designated column is automatically numbered, thus read-only, to the given boolean value.",";javax.sql.rowset.RowSetMetaDataImpl.setAutoIncrement(int,boolean)",;1
setAutoRequestFocus,1,1,"Sets whether this window should receive focus on subsequently being shown (with a call to setVisible(true)), or being moved to the front (with a call to toFront()). Note that setVisible(true) may be called indirectly (e.g. when showing an owner of the window makes the window to be shown). toFront() may also be called indirectly (e.g. when setVisible(true) is called on already visible window). In all such cases this property takes effect as well. The value of the property is not inherited by owned windows.",;java.awt.Window.setAutoRequestFocus(boolean),;1
setAutoResizeMode,1,1,"Sets the table's auto resize mode when the table is resized. For further information on how the different resize modes work, see doLayout().",;javax.swing.JTable.setAutoResizeMode(int),;1
setAutoscrolls,1,1,"Sets the autoscrolls property. If true mouse dragged events will be synthetically generated when the mouse is dragged outside of the component's bounds and mouse motion has paused (while the button continues to be held down). The synthetic events make it appear that the drag gesture has resumed in the direction established when the component's boundary was crossed. Components that support autoscrolling must handle mouseDragged events by calling scrollRectToVisible with a rectangle that contains the mouse event's location. All of the Swing components that support item selection and are typically displayed in a JScrollPane (JTable, JList, JTree, JTextArea, and JEditorPane) already handle mouse dragged events in this way. To enable autoscrolling in any other component, add a mouse motion listener that calls scrollRectToVisible. For example, given a JPanel, myPanel: MouseMotionListener doScrollRectToVisible = new MouseMotionAdapter() { public void mouseDragged(MouseEvent e) { Rectangle r = new Rectangle(e.getX(), e.getY(), 1, 1); ((JPanel)e.getSource()).scrollRectToVisible(r); } }; myPanel.addMouseMotionListener(doScrollRectToVisible); The default value of the autoScrolls property is false.",;javax.swing.JComponent.setAutoscrolls(boolean),;1
setAutoWaitForIdle,1,1,Sets whether this Robot automatically invokes waitForIdle after generating an event.,;java.awt.Robot.setAutoWaitForIdle(boolean),;1
setAxis,1,1,Sets the tile axis property. This is the axis along which the child views are tiled.,;javax.swing.text.BoxView.setAxis(int),;1
setBackgroundAt,1,1,"Sets the background color at index to background which can be null, in which case the tab's background color will default to the background color of the tabbedpane. An internal exception is raised if there is no tab at that index. It is up to the look and feel to honor this property, some may choose to ignore it.",";javax.swing.JTabbedPane.setBackgroundAt(int,Color)",;1
setBackgroundNonSelectionColor,1,1,Sets the background color to be used for non selected nodes.,;javax.swing.tree.DefaultTreeCellRenderer.setBackgroundNonSelectionColor(Color),;1
setBackgroundSelectionColor,1,1,Sets the color to use for the background if node is selected.,;javax.swing.tree.DefaultTreeCellRenderer.setBackgroundSelectionColor(Color),;1
setBackingStoreEnabled,1,1,"Deprecated.As of Java 2 platform v1.3, replaced by setScrollMode().",;javax.swing.JViewport.setBackingStoreEnabled(boolean),;1
setBase64Content,1,1,"Sets the content of this attachment part from the Base64 source InputStream and sets the value of the Content-Type header to the value contained in contentType, This method would first decode the base64 input and write the resulting raw bytes to the attachment. A subsequent call to getSize() may not be an exact measure of the content size.",";javax.xml.soap.AttachmentPart.setBase64Content(InputStream,String)",;1
setBaseURI,1,1,Description copied from interface:XMLCryptoContext,;javax.xml.crypto.dom.DOMCryptoContext.setBaseURI(String),;1
setBasicConstraints,1,1,"Sets the basic constraints constraint. If the value is greater than or equal to zero, X509Certificates must include a basicConstraints extension with a pathLen of at least this value. If the value is -2, only end-entity certificates are accepted. If the value is -1, no check is done. This constraint is useful when building a certification path forward (from the target toward the trust anchor. If a partial path has been built, any candidate certificate must have a maxPathLen value greater than or equal to the number of certificates in the partial path.",;java.security.cert.X509CertSelector.setBasicConstraints(int),;1
setBasicSplitPaneUI,1,1,Sets the SplitPaneUI that is using the receiver.,;javax.swing.plaf.basic.BasicSplitPaneDivider.setBasicSplitPaneUI(BasicSplitPaneUI),;1
setBeanContext,1,1,Sets the BeanContext for this BeanContextChildSupport.,;java.beans.beancontext.BeanContextChildSupport.setBeanContext(BeanContext),;1
setBeanInfoSearchPath,1,1,"Change the list of package names that will be used for finding BeanInfo classes. The behaviour of this method is undefined if parameter path is null. First, if there is a security manager, its checkPropertiesAccess method is called. This could result in a SecurityException.",;java.beans.Introspector.setBeanInfoSearchPath(String[]),;1
setBeginIndex,1,1,Sets the begin index. For use by subclasses of Format.,;java.text.FieldPosition.setBeginIndex(int),;1
setBidiLevel,1,1,Sets the BidiLevel.,";javax.swing.text.StyleConstants.setBidiLevel(MutableAttributeSet,int)",;1
setBit,1,1,Returns a BigInteger whose value is equivalent to this BigInteger with the designated bit set. (Computes (this | (1&lt;&lt;n)).),;java.math.BigInteger.setBit(int),;1
setBitOffset,1,1,Description copied from interface:ImageInputStream,;javax.imageio.stream.ImageInputStreamImpl.setBitOffset(int),;1
setBlinkRate,1,1,Sets the caret blink rate.,;javax.swing.text.DefaultCaret.setBlinkRate(int),;1
setBold,1,1,Sets the bold attribute.,";javax.swing.text.StyleConstants.setBold(MutableAttributeSet,boolean)",;1
setBorderPaintedFlat,1,1,"Sets the borderPaintedFlat property, which gives a hint to the look and feel as to the appearance of the check box border. This is usually set to true when a JCheckBox instance is used as a renderer in a component such as a JTable or JTree. The default value for the borderPaintedFlat property is false. This method fires a property changed event. Some look and feels might not implement flat borders; they will ignore this property.",;javax.swing.JCheckBox.setBorderPaintedFlat(boolean),;1
setBottomComponent,1,1,"Sets the component below, or to the right of the divider.",;javax.swing.JSplitPane.setBottomComponent(Component),;1
setBottomInset,1,1,Set the bottom part of the margin around the view.,;javax.swing.text.AsyncBoxView.setBottomInset(float),;1
setBound,1,1,Updates to "bound" properties will cause a "PropertyChange" event to get fired when the property is changed.,;java.beans.PropertyDescriptor.setBound(boolean),;1
setBoundsForFrame,1,1,This moves the JComponent and repaints the damaged areas.,";javax.swing.DefaultDesktopManager.setBoundsForFrame(JComponent,int,int,int,int)",;1
setBroadcast,1,1,Enable/disable SO_BROADCAST. Some operating systems may require that the Java virtual machine be started with implementation specific privileges to enable this option or send broadcast datagrams.,;java.net.DatagramSocket.setBroadcast(boolean),;1
setByteOrder,1,1,Description copied from interface:ImageInputStream,;javax.imageio.stream.ImageInputStreamImpl.setByteOrder(ByteOrder),;1
setByteStream,1,1,"Set the byte stream for this input source. The SAX parser will ignore this if there is also a character stream specified, but it will use a byte stream in preference to opening a URI connection itself.If the application knows the character encoding of the byte stream, it should set it with the setEncoding method.",;org.xml.sax.InputSource.setByteStream(InputStream),;1
setCacheDirectory,1,1,"Sets the directory where cache files are to be created. A value of null indicates that the system-dependent default temporary-file directory is to be used. If getUseCache returns false, this value is ignored.",;javax.imageio.ImageIO.setCacheDirectory(File),;1
setCalendar,1,1,"Set the calendar to be used by this date format. Initially, the default calendar for the specified or default locale is used. Any TimeZone and leniency values that have previously been set are overwritten by newCalendar's values.",;java.text.DateFormat.setCalendar(Calendar),;1
setCalendarField,1,1,Changes the size of the date value change computed by the nextValue and previousValue methods. The calendarField parameter must be one of the Calendar field constants like Calendar.MONTH or Calendar.MINUTE. The nextValue and previousValue methods simply move the specified Calendar field forward or backward by one unit with the Calendar.add method. You should use this method with care as some UIs may set the calendarField before committing the edit to spin the field under the cursor. If you only want one field to spin you can subclass and ignore the setCalendarField calls.,;javax.swing.SpinnerDateModel.setCalendarField(int),;1
setCalendarType,1,1,"Sets the calendar type parameter to the given type. The calendar type given by this method has precedence over any explicit or implicit calendar type given by the locale. In addition to the available calendar types returned by the Calendar.getAvailableCalendarTypes method, ""gregorian"" and ""iso8601"" as aliases of ""gregory"" can be used with this method.",;java.util.Calendar.Builder.setCalendarType(String),;1
setCallbackHandler,1,1,"Set a CallbackHandler. The provider uses this handler if one is not passed to the login method. The provider also uses this handler if it invokes login on behalf of callers. In either case if a handler is not set via this method, the provider queries the auth.login.defaultCallbackHandler security property for the fully qualified class name of a default handler implementation. If the security property is not set, the provider is assumed to have alternative means for obtaining authentication information.",;java.security.AuthProvider.setCallbackHandler(CallbackHandler),;1
setCanWrapLines,1,1,"Sets whether or not lines can be wrapped. This can be toggled during the writing of lines. For example, outputting HTML might set this to false when outputting a quoted string.",;javax.swing.text.AbstractWriter.setCanWrapLines(boolean),;1
setCaret,1,1,Sets the caret to be used. By default this will be set by the UI that gets installed. This can be changed to a custom caret if desired. Setting the caret results in a PropertyChange event ("caret") being fired.,;javax.swing.text.JTextComponent.setCaret(Caret),;1
setCaretColor,1,1,Sets the current color used to render the caret. Setting to null effectively restores the default color. Setting the color results in a PropertyChange event ("caretColor") being fired.,;javax.swing.text.JTextComponent.setCaretColor(Color),;1
setCaseSensitive,1,1,Sets whether the name of the designated column is case sensitive to the given boolean.,";javax.sql.rowset.RowSetMetaDataImpl.setCaseSensitive(int,boolean)",;1
setCatalogName,1,1,"Sets the catalog name of the table from which the designated column was derived to catalogName. If catalogName is null, the catalog name is set to an empty string.",";javax.sql.rowset.RowSetMetaDataImpl.setCatalogName(int,String)",;1
setCellSelectionEnabled,1,1,"Sets whether this table allows both a column selection and a row selection to exist simultaneously. When set, the table treats the intersection of the row and column selection models as the selected cells. Override isCellSelected to change this default behavior. This method is equivalent to setting both the rowSelectionAllowed property and columnSelectionAllowed property of the columnModel to the supplied value.",;javax.swing.JTable.setCellSelectionEnabled(boolean),;1
setCertificate,1,1,"Sets the certificateEquals criterion. The specified X509Certificate must be equal to the X509Certificate passed to the match method. If null, then this check is not applied. This method is particularly useful when it is necessary to match a single certificate. Although other criteria can be specified in conjunction with the certificateEquals criterion, it is usually not practical or necessary.",;java.security.cert.X509CertSelector.setCertificate(X509Certificate),;1
setCertificateChecking,1,1,"Sets the certificate being checked. This is not a criterion. Rather, it is optional information that may help a CertStore find CRLs that would be relevant when checking revocation for the specified certificate. If null is specified, then no such optional information is provided.",;java.security.cert.X509CRLSelector.setCertificateChecking(X509Certificate),;1
setCertificateEntry,1,1,"Assigns the given trusted certificate to the given alias. If the given alias identifies an existing entry created by a call to setCertificateEntry, or created by a call to setEntry with a TrustedCertificateEntry, the trusted certificate in the existing entry is overridden by the given certificate.",";java.security.KeyStore.setCertificateEntry(String,Certificate)",;1
setCertificateValid,1,1,"Sets the certificateValid criterion. The specified date must fall within the certificate validity period for the X509Certificate. If null, no certificateValid check will be done. Note that the Date supplied here is cloned to protect against subsequent modifications.",;java.security.cert.X509CertSelector.setCertificateValid(Date),;1
setCertPathCheckers,1,1,"Sets a List of additional certification path checkers. If the specified List contains an object that is not a PKIXCertPathChecker, it is ignored. Each PKIXCertPathChecker specified implements additional checks on a certificate. Typically, these are checks to process and verify private extensions contained in certificates. Each PKIXCertPathChecker should be instantiated with any initialization parameters needed to execute the check. This method allows sophisticated applications to extend a PKIX CertPathValidator or CertPathBuilder. Each of the specified PKIXCertPathCheckers will be called, in turn, by a PKIX CertPathValidator or CertPathBuilder for each certificate processed or validated. Regardless of whether these additional PKIXCertPathCheckers are set, a PKIX CertPathValidator or CertPathBuilder must perform all of the required PKIX checks on each certificate. The one exception to this rule is if the RevocationEnabled flag is set to false (see the setRevocationEnabled method). Note that the List supplied here is copied and each PKIXCertPathChecker in the list is cloned to protect against subsequent modifications.",;java.security.cert.PKIXParameters.setCertPathCheckers(List&lt;PKIXCertPathChecker&gt;),;1
setCertStores,1,1,"Sets the list of CertStores to be used in finding certificates and CRLs. May be null, in which case no CertStores will be used. The first CertStores in the list may be preferred to those that appear later. Note that the List is copied to protect against subsequent modifications.",;java.security.cert.PKIXParameters.setCertStores(List&lt;CertStore&gt;),;1
setChanged,1,1,Marks this Observable object as having been changed; the hasChanged method will now return true.,;java.util.Observable.setChanged(),;1
setCharacterSubsets,1,1,"Sets the subsets of the Unicode character set that input methods of this input context should be allowed to input. Null may be passed in to indicate that all characters are allowed. The initial value is null. The setting applies to the current input method as well as input methods selected after this call is made. However, applications cannot rely on this call having the desired effect, since this setting cannot be passed on to all host input methods - applications still need to apply their own character validation. If no input methods are available, then this method has no effect.",;java.awt.im.InputContext.setCharacterSubsets(Character.Subset[]),;1
setCheckboxGroup,1,1,"Sets this check box's group to the specified check box group. If this check box is already in a different check box group, it is first taken out of that group. If the state of this check box is true and the new group already has a check box selected, this check box's state is changed to false. If the state of this check box is true and the new group has no check box selected, this check box becomes the selected checkbox for the new group and its state is true.",;java.awt.Checkbox.setCheckboxGroup(CheckboxGroup),;1
setChoices,1,1,Set the choices to be used in formatting.,";java.text.ChoiceFormat.setChoices(double[],String[])",;1
setChooserPanels,1,1,Specifies the Color Panels used to choose a color value.,;javax.swing.JColorChooser.setChooserPanels(AbstractColorChooserPanel[]),;1
setChunkedStreamingMode,1,1,"This method is used to enable streaming of a HTTP request body without internal buffering, when the content length is not known in advance. In this mode, chunked transfer encoding is used to send the request body. Note, not all HTTP servers support this mode. When output streaming is enabled, authentication and redirection cannot be handled automatically. A HttpRetryException will be thrown when reading the response if authentication or redirection are required. This exception can be queried for the details of the error. This method must be called before the URLConnection is connected.",;java.net.HttpURLConnection.setChunkedStreamingMode(int),;1
setCipherSuites,1,1,Sets the array of ciphersuites.,;javax.net.ssl.SSLParameters.setCipherSuites(String[]),;1
setClassAssertionStatus,1,1,"Sets the desired assertion status for the named top-level class in this class loader and any nested classes contained therein. This setting takes precedence over the class loader's default assertion status, and over any applicable per-package default. This method has no effect if the named class has already been initialized. (Once a class is initialized, its assertion status cannot change.) If the named class is not a top-level class, this invocation will have no effect on the actual assertion status of any class.",";java.lang.ClassLoader.setClassAssertionStatus(String,boolean)",;1
setClassName,1,1,Sets the class name of this binding.,;javax.naming.NameClassPair.setClassName(String),;1
setClickCountToStart,1,1,Specifies the number of clicks needed to start editing.,;javax.swing.DefaultCellEditor.setClickCountToStart(int),;1
setClosable,1,1,Sets whether this JInternalFrame can be closed by some user action.,;javax.swing.JInternalFrame.setClosable(boolean),;1
setClosed,1,1,"Closes this internal frame if the argument is true. Do not invoke this method with a false argument; the result of invoking setClosed(false) is unspecified. If the internal frame is already closed, this method does nothing and returns immediately. Otherwise, this method begins by firing an INTERNAL_FRAME_CLOSING event. Then this method sets the closed property to true unless a listener vetoes the property change. This method finishes by making the internal frame invisible and unselected, and then firing an INTERNAL_FRAME_CLOSED event. Note: To reuse an internal frame that has been closed, you must add it to a container (even if you never removed it from its previous container). Typically, this container will be the JDesktopPane that previously contained the internal frame.",;javax.swing.JInternalFrame.setClosed(boolean),;1
setClosedIcon,1,1,Sets the icon used to represent non-leaf nodes that are not expanded.,;javax.swing.tree.DefaultTreeCellRenderer.setClosedIcon(Icon),;1
setCoalesce,1,1,"Sets whether the Timer coalesces multiple pending ActionEvent firings. A busy application may not be able to keep up with a Timer's event generation, causing multiple action events to be queued. When processed, the application sends these events one after the other, causing the Timer's listeners to receive a sequence of events with no delay between them. Coalescing avoids this situation by reducing multiple pending events to a single event. Timers coalesce events by default.",;javax.swing.Timer.setCoalesce(boolean),;1
setCoalescing,1,1,Specifies that the parser produced by this code will convert CDATA nodes to Text nodes and append it to the adjacent (if any) text node. By default the value of this is set to false,;javax.xml.parsers.DocumentBuilderFactory.setCoalescing(boolean),;1
setColumnDisplaySize,1,1,Sets the normal maximum number of chars in the designated column to the given number.,";javax.sql.rowset.RowSetMetaDataImpl.setColumnDisplaySize(int,int)",;1
setColumnHeader,1,1,"Removes the old columnHeader, if it exists; if the new columnHeader isn't null, syncs the x coordinate of its viewPosition with the viewport (if there is one) and then adds it to the scroll pane. Most applications will find it more convenient to use setColumnHeaderView to add a column header component and its viewport to the scroll pane.",;javax.swing.JScrollPane.setColumnHeader(JViewport),;1
setColumnHeaderView,1,1,"Creates a column-header viewport if necessary, sets its view, and then adds the column-header viewport to the scrollpane. For example: JScrollPane scrollpane = new JScrollPane(); scrollpane.setViewportView(myBigComponentToScroll); scrollpane.setColumnHeaderView(myBigComponentsColumnHeader);",;javax.swing.JScrollPane.setColumnHeaderView(Component),;1
setColumnLabel,1,1,"Sets the suggested column label for use in printouts and displays, if any, to label. If label is null, the column label is set to an empty string ("""").",";javax.sql.rowset.RowSetMetaDataImpl.setColumnLabel(int,String)",;1
setColumnMargin,1,1,Sets the column margin to newMargin. This method also posts a columnMarginChanged event to its listeners.,;javax.swing.table.DefaultTableColumnModel.setColumnMargin(int),;1
setColumnName,1,1,Sets the column name of the designated column to the given name.,";javax.sql.rowset.RowSetMetaDataImpl.setColumnName(int,String)",;1
setColumnSelectionInterval,1,1,"Selects the columns from index0 to index1, inclusive.",";javax.swing.JTable.setColumnSelectionInterval(int,int)",;1
setColumnType,1,1,Sets the SQL type code for values stored in the designated column to the given type code from the class java.sql.Types.,";javax.sql.rowset.RowSetMetaDataImpl.setColumnType(int,int)",;1
setColumnTypeName,1,1,Sets the type name used by the data source for values stored in the designated column to the given type name.,";javax.sql.rowset.RowSetMetaDataImpl.setColumnTypeName(int,String)",;1
setCommand,1,1,"Sets this RowSet object's command property to the given String object and clears the parameters, if any, that were set for the previous command. The command property may not be needed if the RowSet object gets its data from a source that does not support commands, such as a spreadsheet or other tabular file. Thus, this property is optional and may be null.",;javax.sql.rowset.BaseRowSet.setCommand(String),;1
setCommandMap,1,1,"Set the CommandMap for use by this DataHandler. Setting it to null causes the CommandMap to revert to the CommandMap returned by the CommandMap.getDefaultCommandMap method. Changing the CommandMap, or setting it to null, clears out any data cached from the previous CommandMap.",;javax.activation.DataHandler.setCommandMap(CommandMap),;1
setCommentURL,1,1,Specifies a comment URL that describes a cookie's purpose. The comment URL is useful if the browser presents the cookie to the user. Comment URL is RFC 2965 only.,;java.net.HttpCookie.setCommentURL(String),;1
setCommitsOnValidEdit,1,1,"Sets when edits are published back to the JFormattedTextField. If true, commitEdit is invoked after every valid edit (any time the text is edited). On the other hand, if this is false than the DefaultFormatter does not publish edits back to the JFormattedTextField. As such, the only time the value of the JFormattedTextField will change is when commitEdit is invoked on JFormattedTextField, typically when enter is pressed or focus leaves the JFormattedTextField.",;javax.swing.text.DefaultFormatter.setCommitsOnValidEdit(boolean),;1
setComponentAt,1,1,Sets the component at index to component. An internal exception is raised if there is no tab at that index.,";javax.swing.JTabbedPane.setComponentAt(int,Component)",;1
setComponentPopupMenu,1,1,"Sets the JPopupMenu for this JComponent. The UI is responsible for registering bindings and adding the necessary listeners such that the JPopupMenu will be shown at the appropriate time. When the JPopupMenu is shown depends upon the look and feel: some may show it on a mouse event, some may enable a key binding. If popup is null, and getInheritsPopupMenu returns true, then getComponentPopupMenu will be delegated to the parent. This provides for a way to make all child components inherit the popupmenu of the parent. This is a bound property.",;javax.swing.JComponent.setComponentPopupMenu(JPopupMenu),;1
setComposite,1,1,"Sets the Composite for the Graphics2D context. The Composite is used in all drawing methods such as drawImage, drawString, draw, and fill. It specifies how new pixels are to be combined with the existing pixels on the graphics device during the rendering process. If this Graphics2D context is drawing to a Component on the display screen and the Composite is a custom object rather than an instance of the AlphaComposite class, and if there is a security manager, its checkPermission method is called with an AWTPermission(""readDisplayPixels"") permission.",;java.awt.Graphics2D.setComposite(Composite),;1
setCompositionEnabled,1,1,"Enables or disables the current input method for composition, depending on the value of the parameter enable. An input method that is enabled for composition interprets incoming events for both composition and control purposes, while a disabled input method does not interpret events for composition. Note however that events are passed on to the input method regardless whether it is enabled or not, and that an input method that is disabled for composition may still interpret events for control purposes, including to enable or disable itself for composition. For input methods provided by host operating systems, it is not always possible to determine whether this operation is supported. For example, an input method may enable composition only for some locales, and do nothing for other locales. For such input methods, it is possible that this method does not throw UnsupportedOperationException, but also does not affect whether composition is enabled.",;java.awt.im.InputContext.setCompositionEnabled(boolean),;1
setCompressedSize,1,1,Sets the size of the compressed entry data.,;java.util.zip.ZipEntry.setCompressedSize(long),;1
setCompressionQuality,1,1,"Sets the compression quality to a value between 0 and 1. Only a single compression quality setting is supported by default; writers can provide extended versions of ImageWriteParam that offer more control. For lossy compression schemes, the compression quality should control the tradeoff between file size and image quality (for example, by choosing quantization tables when writing JPEG images). For lossless schemes, the compression quality may be used to control the tradeoff between file size and time taken to perform the compression (for example, by optimizing row filters and setting the ZLIB compression level when writing PNG images). A compression quality setting of 0.0 is most generically interpreted as ""high compression is important,"" while a setting of 1.0 is most generically interpreted as ""high image quality is important."" If there are multiple compression types but none has been set, an IllegalStateException is thrown. The default implementation checks that compression is supported, and that the compression mode is MODE_EXPLICIT. If so, if getCompressionTypes() returns null or compressionType is non-null it sets the compressionQuality instance variable.",;javax.imageio.ImageWriteParam.setCompressionQuality(float),;1
setCompressionType,1,1,"Sets the compression type to one of the values indicated by getCompressionTypes. If a value of null is passed in, any previous setting is removed. The default implementation checks whether compression is supported and the compression mode is MODE_EXPLICIT. If so, it calls getCompressionTypes and checks if compressionType is one of the legal values. If it is, the compressionType instance variable is set. If compressionType is null, the instance variable is set without performing any checking.",;javax.imageio.ImageWriteParam.setCompressionType(String),;1
setConcurrency,1,1,"Sets the concurrency for this RowSet object to the specified concurrency. The default concurrency for any RowSet object (connected or disconnected) is ResultSet.CONCUR_UPDATABLE, but this method may be called at any time to change the concurrency.",;javax.sql.rowset.BaseRowSet.setConcurrency(int),;1
setConfiguration,1,1,Set the login Configuration.,;javax.security.auth.login.Configuration.setConfiguration(Configuration),;1
setConnectTimeout,1,1,"Sets a specified timeout value, in milliseconds, to be used when opening a communications link to the resource referenced by this URLConnection. If the timeout expires before the connection can be established, a java.net.SocketTimeoutException is raised. A timeout of zero is interpreted as an infinite timeout. Some non-standard implementation of this method may ignore the specified timeout. To see the connect timeout set, please call getConnectTimeout().",;java.net.URLConnection.setConnectTimeout(int),;1
setConstrained,1,1,Attempted updates to "Constrained" properties will cause a "VetoableChange" event to get fired when the property is changed.,;java.beans.PropertyDescriptor.setConstrained(boolean),;1
setConstraint,1,1,"Sets the spring controlling the specified edge. The edge must have one of the following values: SpringLayout.NORTH, SpringLayout.SOUTH, SpringLayout.EAST, SpringLayout.WEST, SpringLayout.HORIZONTAL_CENTER, SpringLayout.VERTICAL_CENTER, SpringLayout.BASELINE, SpringLayout.WIDTH or SpringLayout.HEIGHT. For any other String value passed as the edge, no action is taken. For a null edge, a NullPointerException is thrown. Note: This method can affect x and y values previously set for this Constraints.",";javax.swing.SpringLayout.Constraints.setConstraint(String,Spring)",;1
setConstraints,1,1,Sets the constraints for the specified component in this layout.,";java.awt.GridBagLayout.setConstraints(Component,GridBagConstraints)",;1
setContentAreaFilled,1,1,"Sets the contentAreaFilled property. If true the button will paint the content area. If you wish to have a transparent button, such as an icon only button, for example, then you should set this to false. Do not call setOpaque(false). The default value for the the contentAreaFilled property is true. This function may cause the component's opaque property to change. The exact behavior of calling this function varies on a component-by-component and L&amp;F-by-L&amp;F basis.",;javax.swing.AbstractButton.setContentAreaFilled(boolean),;1
setContentDescription,1,1,Sets the description of this SOAPMessage object's content with the given description.,;javax.xml.soap.SOAPMessage.setContentDescription(String),;1
setContentHandlerFactory,1,1,"Sets the ContentHandlerFactory of an application. It can be called at most once by an application. The ContentHandlerFactory instance is used to construct a content handler from a content type If there is a security manager, this method first calls the security manager's checkSetFactory method to ensure the operation is allowed. This could result in a SecurityException.",;java.net.URLConnection.setContentHandlerFactory(ContentHandlerFactory),;1
setContents,1,1,"Sets the current contents of the clipboard to the specified transferable object and registers the specified clipboard owner as the owner of the new contents. If there is an existing owner different from the argument owner, that owner is notified that it no longer holds ownership of the clipboard contents via an invocation of ClipboardOwner.lostOwnership() on that owner. An implementation of setContents() is free not to invoke lostOwnership() directly from this method. For example, lostOwnership() may be invoked later on a different thread. The same applies to FlavorListeners registered on this clipboard. The method throws IllegalStateException if the clipboard is currently unavailable. For example, on some platforms, the system clipboard is unavailable while it is accessed by another application.",";java.awt.datatransfer.Clipboard.setContents(Transferable,ClipboardOwner)",;1
setContext,1,1,Sets the value of the protected context field to the specified ScriptContext.,;javax.script.AbstractScriptEngine.setContext(ScriptContext),;1
setContextClassLoader,1,1,"Sets the context ClassLoader for this Thread. The context ClassLoader can be set when a thread is created, and allows the creator of the thread to provide the appropriate class loader, through getContextClassLoader, to code running in the thread when loading classes and resources. If a security manager is present, its checkPermission method is invoked with a RuntimePermission(""setContextClassLoader"") permission to see if setting the context ClassLoader is permitted.",;java.lang.Thread.setContextClassLoader(ClassLoader),;1
setContinueExistingPeriodicTasksAfterShutdownPolicy,1,1,"Sets the policy on whether to continue executing existing periodic tasks even when this executor has been shutdown. In this case, these tasks will only terminate upon shutdownNow or after setting the policy to false when already shutdown. This value is by default false.",;java.util.concurrent.ScheduledThreadPoolExecutor.setContinueExistingPeriodicTasksAfterShutdownPolicy(boolean),;1
setControlButtonsAreShown,1,1,"Sets the property that indicates whether the approve and cancel buttons are shown in the file chooser. This property is true by default. Look and feels that always show these buttons will ignore the value of this property. This method fires a property-changed event, using the string value of CONTROL_BUTTONS_ARE_SHOWN_CHANGED_PROPERTY as the name of the property.",;javax.swing.JFileChooser.setControlButtonsAreShown(boolean),;1
setCookiePolicy,1,1,To set the cookie policy of this cookie manager. A instance of CookieManager will have cookie policy ACCEPT_ORIGINAL_SERVER by default. Users always can call this method to set another cookie policy.,;java.net.CookieManager.setCookiePolicy(CookiePolicy),;1
setCopiesToDefault,1,1,Sets the number of copies the application should render for jobs using these attributes to the default. The default number of copies is 1.,;java.awt.JobAttributes.setCopiesToDefault(),;1
setCorePoolSize,1,1,"Sets the core number of threads. This overrides any value set in the constructor. If the new value is smaller than the current value, excess existing threads will be terminated when they next become idle. If larger, new threads will, if needed, be started to execute any queued tasks.",;java.util.concurrent.ThreadPoolExecutor.setCorePoolSize(int),;1
setCountLimit,1,1,Sets the maximum number of entries to be returned as a result of the search. 0 indicates no limit: all entries will be returned.,;javax.naming.directory.SearchControls.setCountLimit(long),;1
setCrc,1,1,Sets the CRC-32 checksum of the uncompressed entry data.,;java.util.zip.ZipEntry.setCrc(long),;1
setCreationTime,1,1,"Sets the creation time of the entry. If set, the creation time will be stored into the extended timestamp fields of entry's optional extra data, when output to a ZIP file or ZIP file formatted stream.",;java.util.zip.ZipEntry.setCreationTime(FileTime),;1
setCurrencySymbol,1,1,Sets the currency symbol for the currency of these DecimalFormatSymbols in their locale.,;java.text.DecimalFormatSymbols.setCurrencySymbol(String),;1
setCurrent,1,1,"Deprecated.As of JDK version 1.1, replaced by setSelectedCheckbox(Checkbox).",;java.awt.CheckboxGroup.setCurrent(Checkbox),;1
setCurrentDirectory,1,1,"Sets the current directory. Passing in null sets the file chooser to point to the user's default directory. This default depends on the operating system. It is typically the ""My Documents"" folder on Windows, and the user's home directory on Unix. If the file passed in as currentDirectory is not a directory, the parent of the file will be used as the currentDirectory. If the parent is not traversable, then it will walk up the parent tree until it finds a traversable directory, or hits the root of the file system.",;javax.swing.JFileChooser.setCurrentDirectory(File),;1
setCurrentKeyboardFocusManager,1,1,"Sets the current KeyboardFocusManager instance for the calling thread's context. If null is specified, then the current KeyboardFocusManager is replaced with a new instance of DefaultKeyboardFocusManager. If a SecurityManager is installed, the calling thread must be granted the AWTPermission ""replaceKeyboardFocusManager"" in order to replace the the current KeyboardFocusManager. If this permission is not granted, this method will throw a SecurityException, and the current KeyboardFocusManager will be unchanged.",;java.awt.KeyboardFocusManager.setCurrentKeyboardFocusManager(KeyboardFocusManager),;1
setCurrentLineLength,1,1,Sets the current line length.,;javax.swing.text.AbstractWriter.setCurrentLineLength(int),;1
setCurrentTheme,1,1,"Set the theme used by MetalLookAndFeel. After the theme is set, MetalLookAndFeel needs to be re-installed and the uis need to be recreated. The following shows how to do this: MetalLookAndFeel.setCurrentTheme(theme); // re-install the Metal Look and Feel UIManager.setLookAndFeel(new MetalLookAndFeel()); // Update the ComponentUIs for all Components. This // needs to be invoked for all windows. SwingUtilities.updateComponentTreeUI(rootComponent); If this is not done the results are undefined.",;javax.swing.plaf.metal.MetalLookAndFeel.setCurrentTheme(MetalTheme),;1
setDataContentHandlerFactory,1,1,"Sets the DataContentHandlerFactory. The DataContentHandlerFactory is called first to find DataContentHandlers. The DataContentHandlerFactory can only be set once. If the DataContentHandlerFactory has already been set, this method throws an Error.",;javax.activation.DataHandler.setDataContentHandlerFactory(DataContentHandlerFactory),;1
setDatagramSocketImplFactory,1,1,"Sets the datagram socket implementation factory for the application. The factory can be specified only once. When an application creates a new datagram socket, the socket implementation factory's createDatagramSocketImpl method is called to create the actual datagram socket implementation. Passing null to the method is a no-op unless the factory was already set. If there is a security manager, this method first calls the security manager's checkSetFactory method to ensure the operation is allowed. This could result in a SecurityException.",;java.net.DatagramSocket.setDatagramSocketImplFactory(DatagramSocketImplFactory),;1
setDataHandler,1,1,"Sets the given DataHandler object as the data handler for this AttachmentPart object. Typically, on an incoming message, the data handler is automatically set. When a message is being created and populated with content, the setDataHandler method can be used to get data from various data sources into the message.",;javax.xml.soap.AttachmentPart.setDataHandler(DataHandler),;1
setDataSourceLock,1,1,Sets a lock on the underlying data source at the level indicated by datasource_lock. This should cause the SyncProvider to adjust its behavior by increasing or decreasing the level of optimism it provides for a successful synchronization.,;javax.sql.rowset.spi.SyncProvider.setDataSourceLock(int),;1
setDataSourceName,1,1,"Sets the DataSource name property for this RowSet object to the given logical name and sets this RowSet object's Url property to null. The name must have been bound to a DataSource object in a JNDI naming service so that an application can do a lookup using that name to retrieve the DataSource object bound to it. The DataSource object can then be used to establish a connection to the data source it represents. Users should set either the Url property or the dataSourceName property. If both properties are set, the driver will use the property set most recently.",;javax.sql.rowset.BaseRowSet.setDataSourceName(String),;1
setDatatypeConverter,1,1,This method is for JAXB provider use only. JAXB Providers are required to call this method at some point before allowing any of the JAXB client marshal or unmarshal operations to occur. This is necessary to configure the datatype converter that should be used to perform the print and parse conversions. Calling this api repeatedly will have no effect - the DatatypeConverterInterface instance passed into the first invocation is the one that will be used from then on.,;javax.xml.bind.DatatypeConverter.setDatatypeConverter(DatatypeConverterInterface),;1
setDateAndTime,1,1,"Sets the dateAndTime criterion. The specified date must be equal to or later than the value of the thisUpdate component of the X509CRL and earlier than the value of the nextUpdate component. There is no match if the X509CRL does not contain a nextUpdate component. If null, no dateAndTime check will be done. Note that the Date supplied here is cloned to protect against subsequent modifications.",;java.security.cert.X509CRLSelector.setDateAndTime(Date),;1
setDateFormatSymbols,1,1,Sets the date and time format symbols of this date format.,;java.text.SimpleDateFormat.setDateFormatSymbols(DateFormatSymbols),;1
setDay,1,1,Set days in month.Unset this field by invoking the setter with a parameter value of DatatypeConstants.FIELD_UNDEFINED.,;javax.xml.datatype.XMLGregorianCalendar.setDay(int),;1
setDebugGraphicsOptions,1,1,Enables or disables diagnostic information about every graphics operation performed within the component or one of its children.,;javax.swing.JComponent.setDebugGraphicsOptions(int),;1
setDebugOptions,1,1,Enables/disables diagnostic information about every graphics operation. The value of options indicates how this information should be displayed. LOG_OPTION causes a text message to be printed. FLASH_OPTION causes the drawing to flash several times. BUFFERED_OPTION creates a new Frame that shows each operation on an offscreen buffer. The value of options is bitwise OR'd into the current value. To disable debugging use NONE_OPTION.,;javax.swing.DebugGraphics.setDebugOptions(int),;1
setDecimalFormatSymbols,1,1,"Sets the decimal format symbols, which is generally not changed by the programmer or user.",;java.text.DecimalFormat.setDecimalFormatSymbols(DecimalFormatSymbols),;1
setDecimalSeparator,1,1,"Sets the character used for decimal sign. Different for French, etc.",;java.text.DecimalFormatSymbols.setDecimalSeparator(char),;1
setDecimalSeparatorAlwaysShown,1,1,Allows you to set the behavior of the decimal separator with integers. (The decimal separator will always appear with decimals.) Example: Decimal ON: 12345 閳 12345.; OFF: 12345 閳 12345,;java.text.DecimalFormat.setDecimalSeparatorAlwaysShown(boolean),;1
setDeclared,1,1,"Assign a value to the ""declared"" flag of a specific attribute. This is normally needed only for attributes of type CDATA, including attributes whose type is changed to or from CDATA.",";org.xml.sax.ext.Attributes2Impl.setDeclared(int,boolean)",;1
setDecodeTables,1,1,Sets the quantization and Huffman tables to use in decoding abbreviated streams. There may be a maximum of 4 tables of each type. These tables are ignored once tables are encountered in the stream. All arguments must be non-null. The two arrays of Huffman tables must have the same number of elements. The table specifiers in the frame and scan headers in the stream are assumed to be equivalent to indices into these arrays. The argument arrays are copied by this method.,";javax.imageio.plugins.jpeg.JPEGImageReadParam.setDecodeTables(JPEGQTable[],JPEGHuffmanTable[],JPEGHuffmanTable[])",;1
setDecomposition,1,1,Set the decomposition mode of this Collator. See getDecomposition for a description of decomposition mode.,;java.text.Collator.setDecomposition(int),;1
setDefaultActions,1,1,Sets the default acceptable actions for this DropTarget,;java.awt.dnd.DropTarget.setDefaultActions(int),;1
setDefaultAllowUserInteraction,1,1,Sets the default value of the allowUserInteraction field for all future URLConnection objects to the specified value.,;java.net.URLConnection.setDefaultAllowUserInteraction(boolean),;1
setDefaultAssertionStatus,1,1,"Sets the default assertion status for this class loader. This setting determines whether classes loaded by this class loader and initialized in the future will have assertions enabled or disabled by default. This setting may be overridden on a per-package or per-class basis by invoking setPackageAssertionStatus(String, boolean) or setClassAssertionStatus(String, boolean).",;java.lang.ClassLoader.setDefaultAssertionStatus(boolean),;1
setDefaultButton,1,1,"Sets the defaultButton property, which determines the current default button for this JRootPane. The default button is the button which will be activated when a UI-defined activation event (typically the Enter key) occurs in the root pane regardless of whether or not the button has keyboard focus (unless there is another component within the root pane which consumes the activation event, such as a JTextPane). For default activation to work, the button must be an enabled descendent of the root pane when activation occurs. To remove a default button from this root pane, set this property to null.",;javax.swing.JRootPane.setDefaultButton(JButton),;1
setDefaultCapable,1,1,"Sets the defaultCapable property, which determines whether this button can be made the default button for its root pane. The default value of the defaultCapable property is true unless otherwise specified by the look and feel.",;javax.swing.JButton.setDefaultCapable(boolean),;1
setDefaultClassLoader,1,1,Sets the default ClassLoader for this connector server. New client connections will use this classloader. Existing client connections are unaffected.,;javax.management.remote.rmi.RMIServerImpl.setDefaultClassLoader(ClassLoader),;1
setDefaultCloseOperation,1,1,"Sets the operation that will happen by default when the user initiates a ""close"" on this internal frame. The possible choices are: DO_NOTHING_ON_CLOSE Do nothing. This requires the program to handle the operation in the internalFrameClosing method of a registered InternalFrameListener object. HIDE_ON_CLOSE Automatically make the internal frame invisible. DISPOSE_ON_CLOSE Automatically dispose of the internal frame. The default value is DISPOSE_ON_CLOSE. Before performing the specified close operation, the internal frame fires an INTERNAL_FRAME_CLOSING event.",;javax.swing.JInternalFrame.setDefaultCloseOperation(int),;1
setDefaultCommandMap,1,1,Set the default CommandMap. Reset the CommandMap to the default by calling this method with null.,;javax.activation.CommandMap.setDefaultCommandMap(CommandMap),;1
setDefaultCursor,1,1,Sets the default cursor.,;javax.swing.text.html.HTMLEditorKit.setDefaultCursor(Cursor),;1
setDefaultEditor,1,1,"Sets a default cell editor to be used if no editor has been set in a TableColumn. If no editing is required in a table, or a particular column in a table, uses the isCellEditable method in the TableModel interface to ensure that this JTable will not start an editor in these columns. If editor is null, removes the default editor for this column class.",";javax.swing.JTable.setDefaultEditor(Class&lt;?&gt;,TableCellEditor)",;1
setDefaultFileTypeMap,1,1,Sets the default FileTypeMap for the system. This instance will be returned to callers of getDefaultFileTypeMap.,;javax.activation.FileTypeMap.setDefaultFileTypeMap(FileTypeMap),;1
setDefaultFocusTraversalKeys,1,1,"Sets the default focus traversal keys for a given traversal operation. This traversal key Set will be in effect on all Windows that have no such Set of their own explicitly defined. This Set will also be inherited, recursively, by any child Component of those Windows that has no such Set of its own explicitly defined. The default values for the default focus traversal keys are implementation-dependent. Sun recommends that all implementations for a particular native platform use the same default values. The recommendations for Windows and Unix are listed below. These recommendations are used in the Sun AWT implementations. IdentifierMeaningDefaultKeyboardFocusManager.FORWARD_TRAVERSAL_KEYSNormal forward keyboard traversalTAB on KEY_PRESSED, CTRL-TAB on KEY_PRESSEDKeyboardFocusManager.BACKWARD_TRAVERSAL_KEYSNormal reverse keyboard traversalSHIFT-TAB on KEY_PRESSED, CTRL-SHIFT-TAB on KEY_PRESSEDKeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYSGo up one focus traversal cyclenoneKeyboardFocusManager.DOWN_CYCLE_TRAVERSAL_KEYSGo down one focus traversal cyclenone To disable a traversal key, use an empty Set; Collections.EMPTY_SET is recommended. Using the AWTKeyStroke API, client code can specify on which of two specific KeyEvents, KEY_PRESSED or KEY_RELEASED, the focus traversal operation will occur. Regardless of which KeyEvent is specified, however, all KeyEvents related to the focus traversal key, including the associated KEY_TYPED event, will be consumed, and will not be dispatched to any Component. It is a runtime error to specify a KEY_TYPED event as mapping to a focus traversal operation, or to map the same event to multiple default focus traversal operations. This method may throw a ClassCastException if any Object in keystrokes is not an AWTKeyStroke.",";java.awt.KeyboardFocusManager.setDefaultFocusTraversalKeys(int,Set&lt;?)",;1
setDefaultFocusTraversalPolicy,1,1,Sets the default FocusTraversalPolicy. Top-level components use this value on their creation to initialize their own focus traversal policy by explicit call to Container.setFocusTraversalPolicy. Note: this call doesn't affect already created components as they have their policy initialized. Only new components will use this policy as their default policy.,;java.awt.KeyboardFocusManager.setDefaultFocusTraversalPolicy(FocusTraversalPolicy),;1
setDefaultFormatter,1,1,"Sets the JFormattedTextField.AbstractFormatter to use as a last resort, eg in case a display, edit or null JFormattedTextField.AbstractFormatter has not been specified.",;javax.swing.text.DefaultFormatterFactory.setDefaultFormatter(JFormattedTextField.AbstractFormatter),;1
setDefaultHostnameVerifier,1,1,"Sets the default HostnameVerifier inherited by a new instance of this class. If this method is not called, the default HostnameVerifier assumes the connection should not be permitted.",;javax.net.ssl.HttpsURLConnection.setDefaultHostnameVerifier(HostnameVerifier),;1
setDefaultLightWeightPopupEnabled,1,1,Sets the default value of the lightWeightPopupEnabled property.,;javax.swing.JPopupMenu.setDefaultLightWeightPopupEnabled(boolean),;1
setDefaultNamespacePrefix,1,1,Description copied from interface:XMLCryptoContext,;javax.xml.crypto.dom.DOMCryptoContext.setDefaultNamespacePrefix(String),;1
setDefaultQueue,1,1,Set the default layout queue.,;javax.swing.text.LayoutQueue.setDefaultQueue(LayoutQueue),;1
setDefaultRequestProperty,1,1,Deprecated.The instance specific setRequestProperty method should be used after an appropriate instance of URLConnection is obtained. Invoking this method will have no effect.,";java.net.URLConnection.setDefaultRequestProperty(String,String)",;1
setDefaultSelection,1,1,"Specifies whether, for jobs using these attributes, the application should print all pages, the range specified by the return value of getPageRanges, or the current selection. Not specifying this attribute is equivalent to specifying DefaultSelectionType.ALL.",;java.awt.JobAttributes.setDefaultSelection(JobAttributes.DefaultSelectionType),;1
setDefaultSSLSocketFactory,1,1,Sets the default SSLSocketFactory inherited by new instances of this class. The socket factories are used when creating sockets for secure https URL connections.,;javax.net.ssl.HttpsURLConnection.setDefaultSSLSocketFactory(SSLSocketFactory),;1
setDefaultStream,1,1,Deprecated.no replacement,;java.rmi.server.LogStream.setDefaultStream(PrintStream),;1
setDefaultUncaughtExceptionHandler,1,1,"Set the default handler invoked when a thread abruptly terminates due to an uncaught exception, and no other handler has been defined for that thread. Uncaught exception handling is controlled first by the thread, then by the thread's ThreadGroup object and finally by the default uncaught exception handler. If the thread does not have an explicit uncaught exception handler set, and the thread's thread group (including parent thread groups) does not specialize its uncaughtException method, then the default handler's uncaughtException method will be invoked. By setting the default uncaught exception handler, an application can change the way in which uncaught exceptions are handled (such as logging to a specific device, or file) for those threads that would already accept whatever ""default"" behavior the system provided. Note that the default uncaught exception handler should not usually defer to the thread's ThreadGroup object, as that could cause infinite recursion.",;java.lang.Thread.setDefaultUncaughtExceptionHandler(Thread.UncaughtExceptionHandler),;1
setDefaultUseCaches,1,1,Sets the default value of the useCaches field to the specified value.,;java.net.URLConnection.setDefaultUseCaches(boolean),;1
setDerefLinkFlag,1,1,Enables/disables link dereferencing during the search.,;javax.naming.directory.SearchControls.setDerefLinkFlag(boolean),;1
setDescription,1,1,"Sets the description of the image. This is meant to be a brief textual description of the object. For example, it might be presented to a blind user to give an indication of the purpose of the image.",;javax.swing.ImageIcon.setDescription(String),;1
setDescriptors,1,1,Description copied from interface:ModelMBeanInfo,;javax.management.modelmbean.ModelMBeanInfoSupport.setDescriptors(Descriptor[]),;1
setDesktopIcon,1,1,Sets the JDesktopIcon associated with this JInternalFrame.,;javax.swing.JInternalFrame.setDesktopIcon(JInternalFrame.JDesktopIcon),;1
setDesktopManager,1,1,Sets the DesktopManger that will handle desktop-specific UI actions. This may be overridden by LookAndFeel.,;javax.swing.JDesktopPane.setDesktopManager(DesktopManager),;1
setDesktopProperty,1,1,Sets the named desktop property to the specified value and fires a property change event to notify any listeners that the value has changed.,";java.awt.Toolkit.setDesktopProperty(String,Object)",;1
setDestinationBands,1,1,"Sets the indices of the destination bands where data will be placed. Duplicate indices are not allowed. A null value indicates that all destination bands will be used. Choosing a destination band subset will not affect the number of bands in the output image of a read if no destination image is specified; the created destination image will still have the same number of bands as if this method had never been called. If a different number of bands in the destination image is desired, an image must be supplied using the ImageReadParam.setDestination method. At the time of reading or writing, an IllegalArgumentException will be thrown by the reader or writer if a value larger than the largest destination band index has been specified, or if the number of source bands and destination bands to be used differ. The ImageReader.checkReadParamBandSettings method may be used to automate this test.",;javax.imageio.ImageReadParam.setDestinationBands(int[]),;1
setDestinationOffset,1,1,"Specifies the offset in the destination image at which future decoded pixels are to be placed, when reading, or where a region will be written, when writing. When reading, the region to be written within the destination BufferedImage will start at this offset and have a width and height determined by the source region of interest, the subsampling parameters, and the destination bounds. Normal writes are not affected by this method, only writes performed using ImageWriter.replacePixels. For such writes, the offset specified is within the output stream image whose pixels are being modified. There is no unsetDestinationOffset method; simply call setDestinationOffset(new Point(0, 0)) to restore default values.",;javax.imageio.IIOParam.setDestinationOffset(Point),;1
setDialog,1,1,"Specifies whether, for jobs using these attributes, the user should see a print dialog in which to modify the print settings, and which type of print dialog should be displayed. DialogType.COMMON denotes a cross- platform, pure Java print dialog. DialogType.NATIVE denotes the platform's native print dialog. If a platform does not support a native print dialog, the pure Java print dialog is displayed instead. DialogType.NONE specifies no print dialog (i.e., background printing). Not specifying this attribute is equivalent to specifying DialogType.NATIVE.",;java.awt.JobAttributes.setDialog(JobAttributes.DialogType),;1
setDialogTitle,1,1,Sets the string that goes in the JFileChooser window's title bar.,;javax.swing.JFileChooser.setDialogTitle(String),;1
setDialogType,1,1,"Sets the type of this dialog. Use OPEN_DIALOG when you want to bring up a file chooser that the user can use to open a file. Likewise, use SAVE_DIALOG for letting the user choose a file for saving. Use CUSTOM_DIALOG when you want to use the file chooser in a context other than ""Open"" or ""Save"". For instance, you might want to bring up a file chooser that allows the user to choose a file to execute. Note that you normally would not need to set the JFileChooser to use CUSTOM_DIALOG since a call to setApproveButtonText does this for you. The default dialog type is JFileChooser.OPEN_DIALOG.",;javax.swing.JFileChooser.setDialogType(int),;1
setDigit,1,1,Sets the character used for a digit in a pattern.,;java.text.DecimalFormatSymbols.setDigit(char),;1
setDisabledIconAt,1,1,Sets the disabled icon at index to icon which can be null. An internal exception is raised if there is no tab at that index.,";javax.swing.JTabbedPane.setDisabledIconAt(int,Icon)",;1
setDisabledSelectedIcon,1,1,Sets the disabled selection icon for the button.,;javax.swing.AbstractButton.setDisabledSelectedIcon(Icon),;1
setDisabledTextColor,1,1,Sets the current color used to render the disabled text. Setting the color fires off a PropertyChange event ("disabledTextColor").,;javax.swing.text.JTextComponent.setDisabledTextColor(Color),;1
setDiscard,1,1,Specify whether user agent should discard the cookie unconditionally. This is RFC 2965 only attribute.,;java.net.HttpCookie.setDiscard(boolean),;1
setDismissDelay,1,1,Specifies the dismissal delay value.,;javax.swing.ToolTipManager.setDismissDelay(int),;1
setDisplayedMnemonicIndexAt,1,1,"Provides a hint to the look and feel as to which character in the text should be decorated to represent the mnemonic. Not all look and feels may support this. A value of -1 indicates either there is no mnemonic for this tab, or you do not wish the mnemonic to be displayed for this tab. The value of this is updated as the properties relating to the mnemonic change (such as the mnemonic itself, the text...). You should only ever have to call this if you do not wish the default character to be underlined. For example, if the text at tab index 3 was 'Apple Price', with a mnemonic of 'p', and you wanted the 'P' to be decorated, as 'Apple Price', you would have to invoke setDisplayedMnemonicIndex(3, 6) after invoking setMnemonicAt(3, KeyEvent.VK_P). Note that it is the programmer's responsibility to ensure that each tab has a unique mnemonic or unpredictable results may occur.",";javax.swing.JTabbedPane.setDisplayedMnemonicIndexAt(int,int)",;1
setDisplayFormatter,1,1,"Sets the JFormattedTextField.AbstractFormatter to use if the JFormattedTextField is not being edited and either the value is not-null, or the value is null and a null formatter has has not been specified.",;javax.swing.text.DefaultFormatterFactory.setDisplayFormatter(JFormattedTextField.AbstractFormatter),;1
setDisplayMode,1,1,"Sets the display mode of this graphics device. This is only allowed if isDisplayChangeSupported() returns true and may require first entering full-screen exclusive mode using setFullScreenWindow(java.awt.Window) providing that full-screen exclusive mode is supported (i.e., isFullScreenSupported() returns true). The display mode must be one of the display modes returned by getDisplayModes(), with one exception: passing a display mode with DisplayMode.REFRESH_RATE_UNKNOWN refresh rate will result in selecting a display mode from the list of available display modes with matching width, height and bit depth. However, passing a display mode with DisplayMode.BIT_DEPTH_MULTI for bit depth is only allowed if such mode exists in the list returned by getDisplayModes(). Example code: Frame frame; DisplayMode newDisplayMode; GraphicsDevice gd; // create a Frame, select desired DisplayMode from the list of modes // returned by gd.getDisplayModes() ... if (gd.isFullScreenSupported()) { gd.setFullScreenWindow(frame); } else { // proceed in non-full-screen mode frame.setSize(...); frame.setLocation(...); frame.setVisible(true); } if (gd.isDisplayChangeSupported()) { gd.setDisplayMode(newDisplayMode); }",;java.awt.GraphicsDevice.setDisplayMode(DisplayMode),;1
setDisplayName,1,1,Sets the localized display name of this feature.,;java.beans.FeatureDescriptor.setDisplayName(String),;1
setDockingColor,1,1,Sets the color displayed when over a docking area,;javax.swing.plaf.basic.BasicToolBarUI.setDockingColor(Color),;1
setDocumentFilter,1,1,Sets the DocumentFilter. The DocumentFilter is passed insert and remove to conditionally allow inserting/deleting of the text. A null value indicates that no filtering will occur.,;javax.swing.text.AbstractDocument.setDocumentFilter(DocumentFilter),;1
setDocumentHandler,1,1,Register the SAX1 document event handler. Note that the SAX1 document handler has no Namespace support.,;org.xml.sax.helpers.XMLReaderAdapter.setDocumentHandler(DocumentHandler),;1
setDocumentProperties,1,1,Replaces the document properties dictionary for this document.,";javax.swing.text.AbstractDocument.setDocumentProperties(Dictionary&lt;Object,Object&gt;)",;1
setDoInput,1,1,"Sets the value of the doInput field for this URLConnection to the specified value. A URL connection can be used for input and/or output. Set the DoInput flag to true if you intend to use the URL connection for input, false if not. The default is true.",;java.net.URLConnection.setDoInput(boolean),;1
setDomain,1,1,"Specifies the domain within which this cookie should be presented. The form of the domain name is specified by RFC 2965. A domain name begins with a dot (.foo.com) and means that the cookie is visible to servers in a specified Domain Name System (DNS) zone (for example, www.foo.com, but not a.b.foo.com). By default, cookies are only returned to the server that sent them.",;java.net.HttpCookie.setDomain(String),;1
setDoOutput,1,1,"Sets the value of the doOutput field for this URLConnection to the specified value. A URL connection can be used for input and/or output. Set the DoOutput flag to true if you intend to use the URL connection for output, false if not. The default is false.",;java.net.URLConnection.setDoOutput(boolean),;1
setDoubleBufferingEnabled,1,1,Enables or disables double buffering in this RepaintManager. CAUTION: The default value for this property is set for optimal paint performance on the given platform and it is not recommended that programs modify this property directly.,;javax.swing.RepaintManager.setDoubleBufferingEnabled(boolean),;1
setDoubleBufferMaximumSize,1,1,Set the maximum double buffer size.,;javax.swing.RepaintManager.setDoubleBufferMaximumSize(Dimension),;1
setDraggedColumn,1,1,"Sets the header's draggedColumn to aColumn. Application code will not use this method explicitly, it is used internally by the column dragging mechanism.",;javax.swing.table.JTableHeader.setDraggedColumn(TableColumn),;1
setDraggedDistance,1,1,Sets the header's draggedDistance to distance.,;javax.swing.table.JTableHeader.setDraggedDistance(int),;1
setDragImage,1,1,Sets the drag image parameter. The image has to be prepared for rendering by the moment of the call. The image is stored by reference because of some performance reasons.,;javax.swing.TransferHandler.setDragImage(Image),;1
setDragImageOffset,1,1,Sets an anchor offset for the image to drag. It can not be null.,;javax.swing.TransferHandler.setDragImageOffset(Point),;1
setDragMode,1,1,Sets the "dragging style" used by the desktop pane. You may want to change to one mode or another for performance or aesthetic reasons.,;javax.swing.JDesktopPane.setDragMode(int),;1
setDrawsLayeredHighlights,1,1,"If true, highlights are drawn as the Views draw the text. That is the Views will call into paintLayeredHighlight which will result in a rectangle being drawn before the text is drawn (if the offsets are in a highlighted region that is). For this to work the painter supplied must be an instance of LayeredHighlightPainter.",;javax.swing.text.DefaultHighlighter.setDrawsLayeredHighlights(boolean),;1
setDropAction,1,1,"Sets the drop action for the transfer - which must represent a drop - to the given action, instead of the default user drop action. The action must be supported by the source's drop actions, and must be one of COPY, MOVE or LINK. This method is only for use with drag and drop transfers. Calling it when isDrop() is false results in an IllegalStateException.",;javax.swing.TransferHandler.TransferSupport.setDropAction(int),;1
setDropTarget,1,1,Associate a DropTarget with this component. The Component will receive drops only if it is enabled.,;java.awt.Component.setDropTarget(DropTarget),;1
setDSTSavings,1,1,Sets the amount of time in milliseconds that the clock is advanced during daylight saving time.,;java.util.SimpleTimeZone.setDSTSavings(int),;1
setDynamicLayout,1,1,"Controls whether the layout of Containers is validated dynamically during resizing, or statically, after resizing is complete. Use isDynamicLayoutActive() to detect if this feature enabled in this program and is supported by this operating system and/or window manager. Note that this feature is supported not on all platforms, and conversely, that this feature cannot be turned off on some platforms. On these platforms where dynamic layout during resizing is not supported (or is always supported), setting this property has no effect. Note that this feature can be set or unset as a property of the operating system or window manager on some platforms. On such platforms, the dynamic resize property must be set at the operating system or window manager level before this method can take effect. This method does not change support or settings of the underlying operating system or window manager. The OS/WM support can be queried using getDesktopProperty(""awt.dynamicLayoutSupported"") method.",;java.awt.Toolkit.setDynamicLayout(boolean),;1
setEchoCharacter,1,1,"Deprecated.As of JDK version 1.1, replaced by setEchoChar(char).",;java.awt.TextField.setEchoCharacter(char),;1
setEditFormatter,1,1,"Sets the JFormattedTextField.AbstractFormatter to use if the JFormattedTextField is being edited and either the value is not-null, or the value is null and a null formatter has has not been specified.",;javax.swing.text.DefaultFormatterFactory.setEditFormatter(JFormattedTextField.AbstractFormatter),;1
setEditingColumn,1,1,Sets the editingColumn variable.,;javax.swing.JTable.setEditingColumn(int),;1
setEditingRow,1,1,Sets the editingRow variable.,;javax.swing.JTable.setEditingRow(int),;1
setEditorKitForContentType,1,1,Directly sets the editor kit to use for the given type. A look-and-feel implementation might use this in conjunction with createEditorKitForContentType to install handlers for content types with a look-and-feel bias.,";javax.swing.JEditorPane.setEditorKitForContentType(String,EditorKit)",;1
setEditorSearchPath,1,1,"Change the list of package names that will be used for finding property editors. First, if there is a security manager, its checkPropertiesAccess method is called. This could result in a SecurityException.",;java.beans.PropertyEditorManager.setEditorSearchPath(String[]),;1
setEditValid,1,1,"Invoke this to update the editValid property of the JFormattedTextField. If you an enforce a policy such that the JFormattedTextField is always in a valid state, you will never need to invoke this.",;javax.swing.JFormattedTextField.AbstractFormatter.setEditValid(boolean),;1
setEmptyValue,1,1,"Sets the sequence of characters to be used when determining the string representation of this StringJoiner and no elements have been added yet, that is, when it is empty. A copy of the emptyValue parameter is made for this purpose. Note that once an add method has been called, the StringJoiner is no longer considered empty, even if the element(s) added correspond to the empty String.",;java.util.StringJoiner.setEmptyValue(CharSequence),;1
setEnabledAt,1,1,Sets whether or not the tab at index is enabled. An internal exception is raised if there is no tab at that index.,";javax.swing.JTabbedPane.setEnabledAt(int,boolean)",;1
setEncodeTables,1,1,Sets the quantization and Huffman tables to use in encoding abbreviated streams. There may be a maximum of 4 tables of each type. These tables are ignored if tables are specified in the metadata. All arguments must be non-null. The two arrays of Huffman tables must have the same number of elements. The table specifiers in the frame and scan headers in the metadata are assumed to be equivalent to indices into these arrays. The argument arrays are copied by this method.,";javax.imageio.plugins.jpeg.JPEGImageWriteParam.setEncodeTables(JPEGQTable[],JPEGHuffmanTable[],JPEGHuffmanTable[])",;1
setEnd,1,1,"Changes the upper limit for Dates in this sequence. If start is null, then there is no upper limit. No bounds checking is done here: the new start value may invalidate the (start &lt;= value &lt;= end) invariant enforced by the constructors. This is to simplify updating the model. Naturally, one should ensure that the invariant is true before calling the nextValue, previousValue, or setValue methods. Typically this property is a Date however it's possible to use Comparable with a compareTo method for Dates. See setStart for an example. This method fires a ChangeEvent if the end has changed.",;javax.swing.SpinnerDateModel.setEnd(Comparable),;1
setEndIndex,1,1,Sets the end index. For use by subclasses of Format.,;java.text.FieldPosition.setEndIndex(int),;1
setEndpointContext,1,1,"By settng a EndpointContext, JAX-WS runtime knows about addresses of other endpoints in an application. If multiple endpoints share different ports of a WSDL, then the multiple port addresses are patched when the WSDL is accessed. This needs to be set before publishing the endpoints.",;javax.xml.ws.Endpoint.setEndpointContext(EndpointContext),;1
setEndpointIdentificationAlgorithm,1,1,"Sets the endpoint identification algorithm. If the algorithm parameter is non-null or non-empty, the endpoint identification/verification procedures must be handled during SSL/TLS handshaking. This is to prevent man-in-the-middle attacks.",;javax.net.ssl.SSLParameters.setEndpointIdentificationAlgorithm(String),;1
setEntry,1,1,"Saves a keystore Entry under the specified alias. The protection parameter is used to protect the Entry. If an entry already exists for the specified alias, it is overridden.",";java.security.KeyStore.setEntry(String,KeyStore.Entry,KeyStore.ProtectionParameter)",;1
setEras,1,1,Sets era strings. For example: "AD" and "BC".,;java.text.DateFormatSymbols.setEras(String[]),;1
setErr,1,1,"Reassigns the ""standard"" error output stream. First, if there is a security manager, its checkPermission method is called with a RuntimePermission(""setIO"") permission to see if it's ok to reassign the ""standard"" error output stream.",;java.lang.System.setErr(PrintStream),;1
setErrorIndex,1,1,Set the index at which a parse error occurred. Formatters should set this before returning an error code from their parseObject method. The default value is -1 if this is not set.,;java.text.ParsePosition.setErrorIndex(int),;1
setErrorManager,1,1,Define an ErrorManager for this Handler. The ErrorManager's "error" method will be invoked if any errors occur while using this Handler.,;java.util.logging.Handler.setErrorManager(ErrorManager),;1
setErrorWriter,1,1,Sets the Writer used to display error output.,;javax.script.SimpleScriptContext.setErrorWriter(Writer),;1
setEscapeProcessing,1,1,"Sets to the given boolean whether or not the driver will scan for escape syntax and do escape substitution before sending SQL statements to the database. The default is for the driver to do escape processing. Note: Since PreparedStatement objects have usually been parsed prior to making this call, disabling escape processing for prepared statements will likely have no effect.",;javax.sql.rowset.BaseRowSet.setEscapeProcessing(boolean),;1
setEstimatedMajorSpan,1,1,"Set the estimatedMajorSpan property that determines if the major span should be treated as being estimated. If this property is true, the value of setSize along the major axis will change the requirements along the major axis and incremental changes will be ignored until all of the children have been updated (which will cause the property to automatically be set to false). If the property is false the value of the majorSpan will be considered to be accurate and incremental changes will be added into the total as they are calculated.",;javax.swing.text.AsyncBoxView.setEstimatedMajorSpan(boolean),;1
setEventAllocator,1,1,Set a user defined event allocator for events,;javax.xml.stream.XMLInputFactory.setEventAllocator(XMLEventAllocator),;1
setException,1,1,"Causes this future to report an ExecutionException with the given throwable as its cause, unless this future has already been set or has been cancelled. This method is invoked internally by the run() method upon failure of the computation.",;java.util.concurrent.FutureTask.setException(Throwable),;1
setExclusiveOwnerThread,1,1,Sets the thread that currently owns exclusive access. A null argument indicates that no thread owns access. This method does not otherwise impose any synchronization or volatile field accesses.,;java.util.concurrent.locks.AbstractOwnableSynchronizer.setExclusiveOwnerThread(Thread),;1
setExecuteExistingDelayedTasksAfterShutdownPolicy,1,1,"Sets the policy on whether to execute existing delayed tasks even when this executor has been shutdown. In this case, these tasks will only terminate upon shutdownNow, or after setting the policy to false when already shutdown. This value is by default true.",;java.util.concurrent.ScheduledThreadPoolExecutor.setExecuteExistingDelayedTasksAfterShutdownPolicy(boolean),;1
setExpandEntityReferences,1,1,Specifies that the parser produced by this code will expand entity reference nodes. By default the value of this is set to true,;javax.xml.parsers.DocumentBuilderFactory.setExpandEntityReferences(boolean),;1
setExpandsSelectedPaths,1,1,"Configures the expandsSelectedPaths property. If true, any time the selection is changed, either via the TreeSelectionModel, or the cover methods provided by JTree, the TreePaths parents will be expanded to make them visible (visible meaning the parent path is expanded, not necessarily in the visible rectangle of the JTree). If false, when the selection changes the nodes parent is not made visible (all its parents expanded). This is useful if you wish to have your selection model maintain paths that are not always visible (all parents expanded). This is a bound property.",;javax.swing.JTree.setExpandsSelectedPaths(boolean),;1
setExpert,1,1,The "expert" flag is used to distinguish between features that are intended for expert users from those that are intended for normal users.,;java.beans.FeatureDescriptor.setExpert(boolean),;1
setExplicitPolicyRequired,1,1,"Sets the ExplicitPolicyRequired flag. If this flag is true, an acceptable policy needs to be explicitly identified in every certificate. By default, the ExplicitPolicyRequired flag is false.",;java.security.cert.PKIXParameters.setExplicitPolicyRequired(boolean),;1
setExponentSeparator,1,1,"Sets the string used to separate the mantissa from the exponent. Examples: ""x10^"" for 1.23x10^4, ""E"" for 1.23E4.",;java.text.DecimalFormatSymbols.setExponentSeparator(String),;1
setExtendedKeyUsage,1,1,"Sets the extendedKeyUsage criterion. The X509Certificate must allow the specified key purposes in its extended key usage extension. If keyPurposeSet is empty or null, no extendedKeyUsage check will be done. Note that an X509Certificate that has no extendedKeyUsage extension implicitly allows all key purposes. Note that the Set is cloned to protect against subsequent modifications.",;java.security.cert.X509CertSelector.setExtendedKeyUsage(Set&lt;String&gt;),;1
setExtension,1,1,"Sets the extension for the given key. If the value is null or the empty string, the extension is removed. Otherwise, the extension must be well-formed or an exception is thrown. Note: The key UNICODE_LOCALE_EXTENSION ('u') is used for the Unicode locale extension. Setting a value for this key replaces any existing Unicode locale key/type pairs with those defined in the extension. Note: The key PRIVATE_USE_EXTENSION ('x') is used for the private use code. To be well-formed, the value for this key needs only to have subtags of one to eight alphanumeric characters, not two to eight as in the general case.",";java.util.Locale.Builder.setExtension(char,String)",;1
setExtentSize,1,1,Sets the size of the visible part of the view using view coordinates.,;javax.swing.JViewport.setExtentSize(Dimension),;1
setExtra,1,1,"Sets the optional extra field data for the entry. Invoking this method may change this entry's last modification time, last access time and creation time, if the extra field data includes the extensible timestamp fields, such as NTFS tag 0x0001 or Info-ZIP Extended Timestamp, as specified in Info-ZIP Application Note 970311.",;java.util.zip.ZipEntry.setExtra(byte[]),;1
setFailureHandler,1,1,"Sets the failure handler to be called by the RMI runtime if server socket creation fails. By default, if no failure handler is installed and server socket creation fails, the RMI runtime does attempt to recreate the server socket. If there is a security manager, this method first calls the security manager's checkSetFactory method to ensure the operation is allowed. This could result in a SecurityException.",;java.rmi.server.RMISocketFactory.setFailureHandler(RMIFailureHandler),;1
setFetchDirection,1,1,Gives the driver a performance hint as to the direction in which the rows in this RowSet object will be processed. The driver may ignore this hint. A RowSet object inherits the default properties of the ResultSet object from which it got its data. That ResultSet object's default fetch direction is set by the Statement object that created it. This method applies to a RowSet object only while it is connected to a database using a JDBC driver. A RowSet object may use this method at any time to change its setting for the fetch direction.,;javax.sql.rowset.BaseRowSet.setFetchDirection(int),;1
setFetchSize,1,1,"Sets the fetch size for this RowSet object to the given number of rows. The fetch size gives a JDBC technology-enabled driver (""JDBC driver"") a hint as to the number of rows that should be fetched from the database when more rows are needed for this RowSet object. If the fetch size specified is zero, the driver ignores the value and is free to make its own best guess as to what the fetch size should be. A RowSet object inherits the default properties of the ResultSet object from which it got its data. That ResultSet object's default fetch size is set by the Statement object that created it. This method applies to a RowSet object only while it is connected to a database using a JDBC driver. For connected RowSet implementations such as JdbcRowSet, this method has a direct and immediate effect on the underlying JDBC driver. A RowSet object may use this method at any time to change its setting for the fetch size. For RowSet implementations such as CachedRowSet, which operate in a disconnected environment, the SyncProvider object being used may leverage the fetch size to poll the data source and retrieve a number of rows that do not exceed the fetch size and that may form a subset of the actual rows returned by the original query. This is an implementation variance determined by the specific SyncProvider object employed by the disconnected RowSet object.",;javax.sql.rowset.BaseRowSet.setFetchSize(int),;1
setFile,1,1,"Sets the selected file for this file dialog window to be the specified file. This file becomes the default file if it is set before the file dialog window is first shown. When the dialog is shown, the specified file is selected. The kind of selection depends on the file existence, the dialog type, and the native platform. E.g., the file could be highlighted in the file list, or a file name editbox could be populated with the file name. This method accepts either a full file path, or a file name with an extension if used together with the setDirectory method. Specifying """" as the file is exactly equivalent to specifying null as the file.",;java.awt.FileDialog.setFile(String),;1
setFileFilter,1,1,Sets the current file filter. The file filter is used by the file chooser to filter out files from the user's view.,;javax.swing.JFileChooser.setFileFilter(FileFilter),;1
setFileHidingEnabled,1,1,"Sets file hiding on or off. If true, hidden files are not shown in the file chooser. The job of determining which files are shown is done by the FileView.",;javax.swing.JFileChooser.setFileHidingEnabled(boolean),;1
setFileName,1,1,Specifies the file name for the output file for jobs using these attributes. Default is platform-dependent and implementation-defined.,;java.awt.JobAttributes.setFileName(String),;1
setFilenameFilter,1,1,Sets the filename filter for this file dialog window to the specified filter. Filename filters do not function in Sun's reference implementation for Microsoft Windows.,;java.awt.FileDialog.setFilenameFilter(FilenameFilter),;1
setFileNameMap,1,1,"Sets the FileNameMap. If there is a security manager, this method first calls the security manager's checkSetFactory method to ensure the operation is allowed. This could result in a SecurityException.",;java.net.URLConnection.setFileNameMap(FileNameMap),;1
setFileSelectionMode,1,1,"Sets the JFileChooser to allow the user to just select files, just select directories, or select both files and directories. The default is JFilesChooser.FILES_ONLY.",;javax.swing.JFileChooser.setFileSelectionMode(int),;1
setFileSystemView,1,1,"Sets the file system view that the JFileChooser uses for accessing and creating file system resources, such as finding the floppy drive and getting a list of root drives.",;javax.swing.JFileChooser.setFileSystemView(FileSystemView),;1
setFileTypeMap,1,1,Set the FileTypeMap to use with this FileDataSource,;javax.activation.FileDataSource.setFileTypeMap(FileTypeMap),;1
setFileView,1,1,"Sets the file view to used to retrieve UI information, such as the icon that represents a file or the type description of a file.",;javax.swing.JFileChooser.setFileView(FileView),;1
setFillsViewportHeight,1,1,"Sets whether or not this table is always made large enough to fill the height of an enclosing viewport. If the preferred height of the table is smaller than the viewport, then the table will be stretched to fill the viewport. In other words, this ensures the table is never smaller than the viewport. The default for this property is false.",;javax.swing.JTable.setFillsViewportHeight(boolean),;1
setFirstDayOfWeek,1,1,"Sets what the first day of the week is; e.g., SUNDAY in the U.S., MONDAY in France.",;java.util.Calendar.setFirstDayOfWeek(int),;1
setFixedCellHeight,1,1,"Sets a fixed value to be used for the height of every cell in the list. If height is -1, cell heights are computed in the ListUI by applying getPreferredSize to the cell renderer component for each list element. The default value of this property is -1. This is a JavaBeans bound property.",;javax.swing.JList.setFixedCellHeight(int),;1
setFixedCellWidth,1,1,"Sets a fixed value to be used for the width of every cell in the list. If width is -1, cell widths are computed in the ListUI by applying getPreferredSize to the cell renderer component for each list element. The default value of this property is -1. This is a JavaBeans bound property.",;javax.swing.JList.setFixedCellWidth(int),;1
setFlashColor,1,1,Sets the Color used to flash drawing operations.,;javax.swing.DebugGraphics.setFlashColor(Color),;1
setFlashCount,1,1,Sets the number of times that drawing operations will flash.,;javax.swing.DebugGraphics.setFlashCount(int),;1
setFlashTime,1,1,Sets the time delay of drawing operation flashing.,;javax.swing.DebugGraphics.setFlashTime(int),;1
setFlavorMap,1,1,Sets the FlavorMap associated with this DropTarget.,;java.awt.dnd.DropTarget.setFlavorMap(FlavorMap),;1
setFlavorsForNative,1,1,"Discards the current mappings for the specified String native, and creates new mappings to the specified DataFlavors. Unlike getFlavorsForNative, the mappings will only be established in one direction, and the natives need not be encoded. To establish two-way mappings, call setNativesForFlavor as well. The first DataFlavor in the array will represent the highest priority mapping. Subsequent DataFlavors will represent mappings of decreasing priority. If the array contains several elements that reference equal DataFlavors, this method will establish new mappings for the first of those elements and ignore the rest of them. It is recommended that client code not reset mappings established by the data transfer subsystem. This method should only be used for application-level mappings.",";java.awt.datatransfer.SystemFlavorMap.setFlavorsForNative(String,DataFlavor[])",;1
setFloatable,1,1,"Sets the floatable property, which must be true for the user to move the tool bar. Typically, a floatable tool bar can be dragged into a different position within the same container or out into its own window. The default value of this property is true. Some look and feels might not implement floatable tool bars; they will ignore this property.",;javax.swing.JToolBar.setFloatable(boolean),;1
setFloatingColor,1,1,Sets the color displayed when over a floating area,;javax.swing.plaf.basic.BasicToolBarUI.setFloatingColor(Color),;1
setFocusable,1,1,Sets the focusable state of this Component to the specified value. This value overrides the Component's default focusability.,;java.awt.Component.setFocusable(boolean),;1
setFocusableWindowState,1,1,"Sets whether this Window can become the focused Window if it meets the other requirements outlined in isFocusableWindow. If this Window's focusable Window state is set to false, then isFocusableWindow will return false. If this Window's focusable Window state is set to true, then isFocusableWindow may return true or false depending upon the other requirements which must be met in order for a Window to be focusable. Setting a Window's focusability state to false is the standard mechanism for an application to identify to the AWT a Window which will be used as a floating palette or toolbar, and thus should be a non-focusable Window. Setting the focusability state on a visible Window can have a delayed effect on some platforms 閳 the actual change may happen only when the Window becomes hidden and then visible again. To ensure consistent behavior across platforms, set the Window's focusable state when the Window is invisible and then show it.",;java.awt.Window.setFocusableWindowState(boolean),;1
setFocusAccelerator,1,1,"Sets the key accelerator that will cause the receiving text component to get the focus. The accelerator will be the key combination of the platform-specific modifier key and the character given (converted to upper case). For example, the ALT key is used as a modifier on Windows and the CTRL+ALT combination is used on Mac. By default, there is no focus accelerator key. Any previous key accelerator setting will be superseded. A '\0' key setting will be registered, and has the effect of turning off the focus accelerator. When the new key is set, a PropertyChange event (FOCUS_ACCELERATOR_KEY) will be fired.",;javax.swing.text.JTextComponent.setFocusAccelerator(char),;1
setFocusLostBehavior,1,1,"Sets the behavior when focus is lost. This will be one of JFormattedTextField.COMMIT_OR_REVERT, JFormattedTextField.REVERT, JFormattedTextField.COMMIT or JFormattedTextField.PERSIST Note that some AbstractFormatters may push changes as they occur, so that the value of this will have no effect. This will throw an IllegalArgumentException if the object passed in is not one of the afore mentioned values. The default value of this property is JFormattedTextField.COMMIT_OR_REVERT.",;javax.swing.JFormattedTextField.setFocusLostBehavior(int),;1
setFocusPainted,1,1,"Sets the paintFocus property, which must be true for the focus state to be painted. The default value for the paintFocus property is true. Some look and feels might not paint focus state; they will ignore this property.",;javax.swing.AbstractButton.setFocusPainted(boolean),;1
setFocusTraversalKeysEnabled,1,1,"Sets whether focus traversal keys are enabled for this Component. Components for which focus traversal keys are disabled receive key events for focus traversal keys. Components for which focus traversal keys are enabled do not see these events; instead, the events are automatically converted to traversal operations.",;java.awt.Component.setFocusTraversalKeysEnabled(boolean),;1
setFocusTraversalPolicy,1,1,"Sets the focus traversal policy that will manage keyboard traversal of this Container's children, if this Container is a focus cycle root. If the argument is null, this Container inherits its policy from its focus- cycle-root ancestor. If the argument is non-null, this policy will be inherited by all focus-cycle-root children that have no keyboard- traversal policy of their own (as will, recursively, their focus-cycle- root children). If this Container is not a focus cycle root, the policy will be remembered, but will not be used or inherited by this or any other Containers until this Container is made a focus cycle root.",;java.awt.Container.setFocusTraversalPolicy(FocusTraversalPolicy),;1
setFocusTraversalPolicyProvider,1,1,Sets whether this container will be used to provide focus traversal policy. Container with this property as true will be used to acquire focus traversal policy instead of closest focus cycle root ancestor.,;java.awt.Container.setFocusTraversalPolicyProvider(boolean),;1
setFollowRedirects,1,1,"Sets whether HTTP redirects (requests with response code 3xx) should be automatically followed by this class. True by default. Applets cannot change this variable. If there is a security manager, this method first calls the security manager's checkSetFactory method to ensure the operation is allowed. This could result in a SecurityException.",;java.net.HttpURLConnection.setFollowRedirects(boolean),;1
setFontFamily,1,1,Sets the font attribute.,";javax.swing.text.StyleConstants.setFontFamily(MutableAttributeSet,String)",;1
setFontSize,1,1,Sets the font size attribute.,";javax.swing.text.StyleConstants.setFontSize(MutableAttributeSet,int)",;1
setForegroundAt,1,1,"Sets the foreground color at index to foreground which can be null, in which case the tab's foreground color will default to the foreground color of this tabbedpane. An internal exception is raised if there is no tab at that index. It is up to the look and feel to honor this property, some may choose to ignore it.",";javax.swing.JTabbedPane.setForegroundAt(int,Color)",;1
setForkJoinTaskTag,1,1,Atomically sets the tag value for this task.,;java.util.concurrent.ForkJoinTask.setForkJoinTaskTag(short),;1
setFormatByArgumentIndex,1,1,"Sets the format to use for the format elements within the previously set pattern string that use the given argument index. The argument index is part of the format element definition and represents an index into the arguments array passed to the format methods or the result array returned by the parse methods. If the argument index is used for more than one format element in the pattern string, then the new format is used for all such format elements. If the argument index is not used for any format element in the pattern string, then the new format is ignored.",";java.text.MessageFormat.setFormatByArgumentIndex(int,Format)",;1
setFormats,1,1,"Sets the formats to use for the format elements in the previously set pattern string. The order of formats in newFormats corresponds to the order of format elements in the pattern string. If more formats are provided than needed by the pattern string, the remaining ones are ignored. If fewer formats are provided than needed, then only the first newFormats.length formats are replaced. Since the order of format elements in a pattern string often changes during localization, it is generally better to use the setFormatsByArgumentIndex method, which assumes an order of formats corresponding to the order of elements in the arguments array passed to the format methods or the result array returned by the parse methods.",;java.text.MessageFormat.setFormats(Format[]),;1
setFormatsByArgumentIndex,1,1,"Sets the formats to use for the values passed into format methods or returned from parse methods. The indices of elements in newFormats correspond to the argument indices used in the previously set pattern string. The order of formats in newFormats thus corresponds to the order of elements in the arguments array passed to the format methods or the result array returned by the parse methods. If an argument index is used for more than one format element in the pattern string, then the corresponding new format is used for all such format elements. If an argument index is not used for any format element in the pattern string, then the corresponding new format is ignored. If fewer formats are provided than needed, then only the formats for argument indices less than newFormats.length are replaced.",;java.text.MessageFormat.setFormatsByArgumentIndex(Format[]),;1
setFormattedOutput,1,1,Convenience method for setting the formatted output flag.,;javax.xml.bind.helpers.AbstractMarshallerImpl.setFormattedOutput(boolean),;1
setFormatterFactory,1,1,"Sets the AbstractFormatterFactory. AbstractFormatterFactory is able to return an instance of AbstractFormatter that is used to format a value for display, as well an enforcing an editing policy. If you have not explicitly set an AbstractFormatterFactory by way of this method (or a constructor) an AbstractFormatterFactory and consequently an AbstractFormatter will be used based on the Class of the value. NumberFormatter will be used for Numbers, DateFormatter will be used for Dates, otherwise DefaultFormatter will be used. This is a JavaBeans bound property.",;javax.swing.JFormattedTextField.setFormatterFactory(JFormattedTextField.AbstractFormatterFactory),;1
setFractionalSecond,1,1,Set fractional seconds.Unset this field by invoking the setter with a parameter value of null.,;javax.xml.datatype.XMLGregorianCalendar.setFractionalSecond(BigDecimal),;1
setFragment,1,1,Convenience method for setting the fragment flag.,;javax.xml.bind.helpers.AbstractMarshallerImpl.setFragment(boolean),;1
setFrameIcon,1,1,"Sets an image to be displayed in the titlebar of this internal frame (usually in the top-left corner). This image is not the desktopIcon object, which is the image displayed in the JDesktop when this internal frame is iconified. Passing null to this function is valid, but the look and feel can choose the appropriate behavior for that situation, such as displaying no icon or a default icon for the look and feel.",;javax.swing.JInternalFrame.setFrameIcon(Icon),;1
setFromPage,1,1,"Specifies, for jobs using these attributes, the first page to be printed, if a range of pages is to be printed. If this attribute is not specified, then the values from the pageRanges attribute are used. If pageRanges and either or both of fromPage and toPage are specified, pageRanges takes precedence. Specifying none of pageRanges, fromPage, or toPage is equivalent to calling setPageRanges(new int[][] { new int[] { minPage } });",;java.awt.JobAttributes.setFromPage(int),;1
setFromTree,1,1,"Sets the internal state of this IIOMetadata object from a tree of XML DOM Nodes whose syntax is defined by the given metadata format. The previous state is discarded. If the tree's structure or contents are invalid, an IIOInvalidTreeException will be thrown. The default implementation calls reset followed by mergeTree(formatName, root).",";javax.imageio.metadata.IIOMetadata.setFromTree(String,Node)",;1
setFullBufferUpdates,1,1,Specifies whether this animated memory image should always be updated by sending the complete buffer of pixels whenever there is a change. This flag is ignored if the animation flag is not turned on through the setAnimated() method. This method should be called immediately after the MemoryImageSource is constructed and before an image is created with it to ensure that all ImageConsumers will receive the correct pixel delivery hints.,;java.awt.image.MemoryImageSource.setFullBufferUpdates(boolean),;1
setGlobalActiveWindow,1,1,"Sets the active Window. Only a Frame or a Dialog can be the active Window. The native windowing system may denote the active Window or its children with special decorations, such as a highlighted title bar. The active Window is always either the focused Window, or the first Frame or Dialog that is an owner of the focused Window. This method does not actually change the active Window as far as the native windowing system is concerned. It merely stores the value to be subsequently returned by getActiveWindow(). Use Component.requestFocus() or Component.requestFocusInWindow()to change the active Window, subject to platform limitations.",;java.awt.KeyboardFocusManager.setGlobalActiveWindow(Window),;1
setGlobalCurrentFocusCycleRoot,1,1,"Sets the current focus cycle root. If the focus owner is itself a focus cycle root, then it may be ambiguous as to which Components represent the next and previous Components to focus during normal focus traversal. In that case, the current focus cycle root is used to differentiate among the possibilities. If a SecurityManager is installed, the calling thread must be granted the ""replaceKeyboardFocusManager"" AWTPermission. If this permission is not granted, this method will throw a SecurityException, and the current focus cycle root will not be changed. This method is intended to be used only by KeyboardFocusManagers and focus implementations. It is not for general client use.",;java.awt.KeyboardFocusManager.setGlobalCurrentFocusCycleRoot(Container),;1
setGlobalFocusedWindow,1,1,"Sets the focused Window. The focused Window is the Window that is or contains the focus owner. The operation will be cancelled if the specified Window to focus is not a focusable Window. This method does not actually change the focused Window as far as the native windowing system is concerned. It merely stores the value to be subsequently returned by getFocusedWindow(). Use Component.requestFocus() or Component.requestFocusInWindow() to change the focused Window, subject to platform limitations.",;java.awt.KeyboardFocusManager.setGlobalFocusedWindow(Window),;1
setGlobalFocusOwner,1,1,"Sets the focus owner. The operation will be cancelled if the Component is not focusable. The focus owner is defined as the Component in an application that will typically receive all KeyEvents generated by the user. KeyEvents which map to the focus owner's focus traversal keys will not be delivered if focus traversal keys are enabled for the focus owner. In addition, KeyEventDispatchers may retarget or consume KeyEvents before they reach the focus owner. This method does not actually set the focus to the specified Component. It merely stores the value to be subsequently returned by getFocusOwner(). Use Component.requestFocus() or Component.requestFocusInWindow() to change the focus owner, subject to platform limitations.",;java.awt.KeyboardFocusManager.setGlobalFocusOwner(Component),;1
setGlobalPermanentFocusOwner,1,1,"Sets the permanent focus owner. The operation will be cancelled if the Component is not focusable. The permanent focus owner is defined as the last Component in an application to receive a permanent FOCUS_GAINED event. The focus owner and permanent focus owner are equivalent unless a temporary focus change is currently in effect. In such a situation, the permanent focus owner will again be the focus owner when the temporary focus change ends. This method does not actually set the focus to the specified Component. It merely stores the value to be subsequently returned by getPermanentFocusOwner(). Use Component.requestFocus() or Component.requestFocusInWindow() to change the focus owner, subject to platform limitations.",;java.awt.KeyboardFocusManager.setGlobalPermanentFocusOwner(Component),;1
setGlyphPainter,1,1,Sets the painter to use for rendering glyphs.,;javax.swing.text.GlyphView.setGlyphPainter(GlyphView.GlyphPainter),;1
setGlyphPosition,1,1,"Sets the position of the specified glyph within this GlyphVector. If glyphIndex equals the number of of glyphs in this GlyphVector, this method sets the position after the last glyph. This position is used to define the advance of the entire GlyphVector.",";java.awt.font.GlyphVector.setGlyphPosition(int,Point2D)",;1
setGlyphTransform,1,1,"Sets the transform of the specified glyph within this GlyphVector. The transform is relative to the glyph position. A null argument for newTX indicates that no special transform is applied for the specified glyph. This method can be used to rotate, mirror, translate and scale the glyph. Adding a transform can result in significant performance changes.",";java.awt.font.GlyphVector.setGlyphTransform(int,AffineTransform)",;1
setGranularityPeriod,1,1,Sets the granularity period (in milliseconds). The default value of the granularity period is 10 seconds.,;javax.management.monitor.Monitor.setGranularityPeriod(long),;1
setGregorianChange,1,1,"Sets the GregorianCalendar change date. This is the point when the switch from Julian dates to Gregorian dates occurred. Default is October 15, 1582 (Gregorian). Previous to this, dates will be in the Julian calendar. To obtain a pure Julian calendar, set the change date to Date(Long.MAX_VALUE). To obtain a pure Gregorian calendar, set the change date to Date(Long.MIN_VALUE).",;java.util.GregorianCalendar.setGregorianChange(Date),;1
setGridColor,1,1,Sets the color used to draw grid lines to gridColor and redisplays. The default color is look and feel dependent.,;javax.swing.JTable.setGridColor(Color),;1
setGroup,1,1,"Identifies the group the button belongs to -- needed for radio buttons, which are mutually exclusive within their group.",;javax.swing.DefaultButtonModel.setGroup(ButtonGroup),;1
setGroupingSeparator,1,1,"Sets the character used for thousands separator. Different for French, etc.",;java.text.DecimalFormatSymbols.setGroupingSeparator(char),;1
setGroupingSize,1,1,"Set the grouping size. Grouping size is the number of digits between grouping separators in the integer portion of a number. For example, in the number ""123,456.78"", the grouping size is 3. The value passed in is converted to a byte, which may lose information.",;java.text.DecimalFormat.setGroupingSize(int),;1
setGuiAvailable,1,1,"Used to indicate whether of not we are running in an environment where GUI interaction is available. Note that this method is security checked and is not available to (for example) untrusted applets. More specifically, if there is a security manager, its checkPropertiesAccess method is called. This could result in a SecurityException.",;java.beans.Beans.setGuiAvailable(boolean),;1
setHeader,1,1,"Replaces the current value of the first header entry whose name matches the given name with the given value, adding a new header if no existing header name matches. This method also removes all matching headers after the first one. Note that RFC822 headers can contain only US-ASCII characters.",";javax.xml.soap.MimeHeaders.setHeader(String,String)",;1
setHeaderRenderer,1,1,Sets the TableCellRenderer used to draw the TableColumn's header to headerRenderer. It is the header renderers responsibility to render the sorting indicator. If you are using sorting and specify a renderer your renderer must render the sorting indication.,;javax.swing.table.TableColumn.setHeaderRenderer(TableCellRenderer),;1
setHeaderValue,1,1,"Sets the Object whose string representation will be used as the value for the headerRenderer. When the TableColumn is created, the default headerValue is null.",;javax.swing.table.TableColumn.setHeaderValue(Object),;1
setHeight,1,1,"Sets the height property, which controls the height of a component.",;javax.swing.SpringLayout.Constraints.setHeight(Spring),;1
setHidden,1,1,"The ""hidden"" flag is used to identify features that are intended only for tool use, and which should not be exposed to humans.",;java.beans.FeatureDescriptor.setHidden(boolean),;1
setHideActionText,1,1,"Sets the hideActionText property, which determines whether the button displays text from the Action. This is useful only if an Action has been installed on the button.",;javax.swing.AbstractButton.setHideActionText(boolean),;1
setHighlighter,1,1,Sets the highlighter to be used. By default this will be set by the UI that gets installed. This can be changed to a custom highlighter if desired. The highlighter can be set to null to disable it. A PropertyChange event ("highlighter") is fired when a new highlighter is installed.,;javax.swing.text.JTextComponent.setHighlighter(Highlighter),;1
setHorizontalGroup,1,1,Sets the Group that positions and sizes components along the horizontal axis.,;javax.swing.GroupLayout.setHorizontalGroup(GroupLayout.Group),;1
setHorizontalScrollBar,1,1,"Adds the scrollbar that controls the viewport's horizontal view position to the scrollpane. This is usually unnecessary, as JScrollPane creates horizontal and vertical scrollbars by default.",;javax.swing.JScrollPane.setHorizontalScrollBar(JScrollBar),;1
setHour,1,1,Set hours.Unset this field by invoking the setter with a parameter value of DatatypeConstants.FIELD_UNDEFINED.,;javax.xml.datatype.XMLGregorianCalendar.setHour(int),;1
setHttpOnly,1,1,Indicates whether the cookie should be considered HTTP Only. If set to true it means the cookie should not be accessible to scripting engines like javascript.,;java.net.HttpCookie.setHttpOnly(boolean),;1
setIconAt,1,1,"Sets the icon at index to icon which can be null. This does not set disabled icon at icon. If the new Icon is different than the current Icon and disabled icon is not explicitly set, the LookAndFeel will be asked to generate a disabled Icon. To explicitly set disabled icon, use setDisableIconAt(). The icon is not shown if a tab component for this tab was specified. An internal exception is raised if there is no tab at that index.",";javax.swing.JTabbedPane.setIconAt(int,Icon)",;1
setIconifiable,1,1,"Sets the iconable property, which must be true for the user to be able to make the JInternalFrame an icon. Some look and feels might not implement iconification; they will ignore this property.",;javax.swing.JInternalFrame.setIconifiable(boolean),;1
setIconImages,1,1,"Sets the sequence of images to be displayed as the icon for this window. Subsequent calls to getIconImages will always return a copy of the icons list. Depending on the platform capabilities one or several images of different dimensions will be used as the window's icon. The icons list is scanned for the images of most appropriate dimensions from the beginning. If the list contains several images of the same size, the first will be used. Ownerless windows with no icon specified use platfrom-default icon. The icon of an owned window may be inherited from the owner unless explicitly overridden. Setting the icon to null or empty list restores the default behavior. Note : Native windowing systems may use different images of differing dimensions to represent a window, depending on the context (e.g. window decoration, window list, taskbar, etc.). They could also use just a single image for all contexts or no image at all.",;java.awt.Window.setIconImages(List&lt;?),;1
setID,1,1,Sets the time zone ID. This does not change any other data in the time zone object.,;java.util.TimeZone.setID(String),;1
setIdAttribute,1,1,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.,";javax.imageio.metadata.IIOMetadataNode.setIdAttribute(String,boolean)",;1
setIdAttributeNode,1,1,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.,";javax.imageio.metadata.IIOMetadataNode.setIdAttributeNode(Attr,boolean)",;1
setIdentifier,1,1,"Sets the TableColumn's identifier to anIdentifier. Note: identifiers are not used by the JTable, they are purely a convenience for the external tagging and location of columns.",;javax.swing.table.TableColumn.setIdentifier(Object),;1
setIfModifiedSince,1,1,Sets the value of the ifModifiedSince field of this URLConnection to the specified value.,;java.net.URLConnection.setIfModifiedSince(long),;1
setIgnoreRepaint,1,1,"Sets whether or not paint messages received from the operating system should be ignored. This does not affect paint events generated in software by the AWT, unless they are an immediate response to an OS-level paint message. This is useful, for example, if running under full-screen mode and better performance is desired, or if page-flipping is used as the buffer strategy.",;java.awt.Component.setIgnoreRepaint(boolean),;1
setIgnoringComments,1,1,Specifies that the parser produced by this code will ignore comments. By default the value of this is set to false .,;javax.xml.parsers.DocumentBuilderFactory.setIgnoringComments(boolean),;1
setIgnoringElementContentWhitespace,1,1,Specifies that the parsers created by this factory must eliminate whitespace in element content (sometimes known loosely as 'ignorable whitespace') when parsing XML documents (see XML Rec 2.10). Note that only whitespace which is directly contained within element content that has an element only content model (see XML Rec 3.2.1) will be eliminated. Due to reliance on the content model this setting requires the parser to be in validating mode. By default the value of this is set to false.,;javax.xml.parsers.DocumentBuilderFactory.setIgnoringElementContentWhitespace(boolean),;1
setImageableArea,1,1,Sets the imageable area of this Paper. The imageable area is the area on the page in which printing occurs.,";java.awt.print.Paper.setImageableArea(double,double,double,double)",;1
setImageAutoSize,1,1,"Sets the auto-size property. Auto-size determines whether the tray image is automatically sized to fit the space allocated for the image on the tray. By default, the auto-size property is set to false. If auto-size is false, and the image size doesn't match the tray icon space, the image is painted as-is inside that space 閳 if larger than the allocated space, it will be cropped. If auto-size is true, the image is stretched or shrunk to fit the tray icon space.",;java.awt.TrayIcon.setImageAutoSize(boolean),;1
setImageObserver,1,1,"Sets the image observer for the image. Set this property if the ImageIcon contains an animated GIF, so the observer is notified to update its display. For example: icon = new ImageIcon(...) button.setIcon(icon); icon.setImageObserver(button);",;javax.swing.ImageIcon.setImageObserver(ImageObserver),;1
setImageURL,1,1,"Changes the splash screen image. The new image is loaded from the specified URL; GIF, JPEG and PNG image formats are supported. The method returns after the image has finished loading and the window has been updated. The splash screen window is resized according to the size of the image and is centered on the screen.",;java.awt.SplashScreen.setImageURL(URL),;1
setImplementation,1,1,Replace the implementation object wrapped in this object.,;javax.management.StandardMBean.setImplementation(Object),;1
setIn,1,1,"Reassigns the ""standard"" input stream. First, if there is a security manager, its checkPermission method is called with a RuntimePermission(""setIO"") permission to see if it's ok to reassign the ""standard"" input stream.",;java.lang.System.setIn(InputStream),;1
setInDefaultEventSet,1,1,Marks an event set as being in the "default" set (or not). By default this is true.,;java.beans.EventSetDescriptor.setInDefaultEventSet(boolean),;1
setIndentSpace,1,1,"Enables subclasses to specify how many spaces an indent maps to. When indentation takes place, the indent level is multiplied by this mapping. The default is 2.",;javax.swing.text.AbstractWriter.setIndentSpace(int),;1
setIndeterminate,1,1,"Sets the indeterminate property of the progress bar, which determines whether the progress bar is in determinate or indeterminate mode. An indeterminate progress bar continuously displays animation indicating that an operation of unknown length is occurring. By default, this property is false. Some look and feels might not support indeterminate progress bars; they will ignore this property. See How to Monitor Progress for examples of using indeterminate progress bars.",;javax.swing.JProgressBar.setIndeterminate(boolean),;1
setIndexedReadMethod,1,1,Sets the method that should be used to read an indexed property value.,;java.beans.IndexedPropertyDescriptor.setIndexedReadMethod(Method),;1
setIndexedWriteMethod,1,1,Sets the method that should be used to write an indexed property value.,;java.beans.IndexedPropertyDescriptor.setIndexedWriteMethod(Method),;1
setInfinity,1,1,Sets the string used to represent infinity. Almost always left unchanged.,;java.text.DecimalFormatSymbols.setInfinity(String),;1
setInfo,1,1,Deprecated.,;java.security.Identity.setInfo(String),;1
setInheritsPopupMenu,1,1,"Sets whether or not getComponentPopupMenu should delegate to the parent if this component does not have a JPopupMenu assigned to it. The default value for this is false, but some JComponent subclasses that are implemented as a number of JComponents may set this to true. This is a bound property.",;javax.swing.JComponent.setInheritsPopupMenu(boolean),;1
setInitialContextFactoryBuilder,1,1,"Sets the InitialContextFactory builder to be builder. The builder can only be installed if the executing thread is allowed by the security manager to do so. Once installed, the builder cannot be replaced.",;javax.naming.spi.NamingManager.setInitialContextFactoryBuilder(InitialContextFactoryBuilder),;1
setInitialPolicies,1,1,"Sets the Set of initial policy identifiers (OID strings), indicating that any one of these policies would be acceptable to the certificate user for the purposes of certification path processing. By default, any policy is acceptable (i.e. all policies), so a user that wants to allow any policy as acceptable does not need to call this method, or can call it with an empty Set (or null). Note that the Set is copied to protect against subsequent modifications.",;java.security.cert.PKIXParameters.setInitialPolicies(Set&lt;String&gt;),;1
setInitialSelectionValue,1,1,Sets the input value that is initially displayed as selected to the user. Only used if wantsInput is true.,;javax.swing.JOptionPane.setInitialSelectionValue(Object),;1
setInitialValue,1,1,Sets the initial value that is to be enabled -- the Component that has the focus when the pane is initially displayed.,;javax.swing.JOptionPane.setInitialValue(Object),;1
setInitThreshold,1,1,Sets the initial threshold value common to all observed objects. The current threshold of every object in the set of observed MBeans is updated consequently.,;javax.management.monitor.CounterMonitor.setInitThreshold(Number),;1
setInnerHTML,1,1,"Replaces the children of the given element with the contents specified as an HTML string. This will be seen as at least two events, n inserts followed by a remove.Consider the following structure (the elem parameter is in bold). &lt;body&gt; | &lt;div&gt; / \ &lt;p&gt; &lt;p&gt; Invoking setInnerHTML(elem, ""&lt;ul&gt;&lt;li&gt;"") results in the following structure (new elements are in red). &lt;body&gt; | &lt;div&gt; \ &lt;ul&gt; \ &lt;li&gt; Parameter elem must not be a leaf element, otherwise an IllegalArgumentException is thrown. If either elem or htmlText parameter is null, no changes are made to the document.For this to work correctly, the document must have an HTMLEditorKit.Parser set. This will be the case if the document was created from an HTMLEditorKit via the createDefaultDocument method.",";javax.swing.text.html.HTMLDocument.setInnerHTML(Element,String)",;1
setInputSource,1,1,Set the SAX InputSource to be used for the Source.,;javax.xml.transform.sax.SAXSource.setInputSource(InputSource),;1
setInputStream,1,1,"Set the byte stream to be used as input. Normally, a stream should be used rather than a reader, so that the XML parser can resolve character encoding specified by the XML declaration. If this Source object is used to process a stylesheet, normally setSystemId should also be called, so that relative URL references can be resolved.",;javax.xml.transform.stream.StreamSource.setInputStream(InputStream),;1
setInputValue,1,1,"Sets the input value that was selected or input by the user. Only used if wantsInput is true. Note that this method is invoked internally by the option pane (in response to user action) and should generally not be called by client programs. To set the input value initially displayed as selected to the user, use setInitialSelectionValue.",;javax.swing.JOptionPane.setInputValue(Object),;1
setInputVerifier,1,1,Sets the input verifier for this component.,;javax.swing.JComponent.setInputVerifier(InputVerifier),;1
setInsets,1,1,Sets the insets for the view.,";javax.swing.text.CompositeView.setInsets(short,short,short,short)",;1
setInstalledLookAndFeels,1,1,"Sets the set of available look and feels. While this method does not check to ensure all of the LookAndFeelInfos are non-null, it is strongly recommended that only non-null values are supplied in the infos array.",;javax.swing.UIManager.setInstalledLookAndFeels(UIManager.LookAndFeelInfo[]),;1
setInstance,1,1,Sets the shared instance of LayoutStyle. Specifying null results in using the LayoutStyle from the current LookAndFeel.,;javax.swing.LayoutStyle.setInstance(LayoutStyle),;1
setInstanceFollowRedirects,1,1,"Sets whether HTTP redirects (requests with response code 3xx) should be automatically followed by this HttpURLConnection instance. The default value comes from followRedirects, which defaults to true.",;java.net.HttpURLConnection.setInstanceFollowRedirects(boolean),;1
setIntercellSpacing,1,1,Sets the rowMargin and the columnMargin -- the height and width of the space between cells -- to intercellSpacing.,;javax.swing.JTable.setIntercellSpacing(Dimension),;1
setInterface,1,1,Set the multicast network interface used by methods whose behavior would be affected by the value of the network interface. Useful for multihomed hosts.,;java.net.MulticastSocket.setInterface(InetAddress),;1
setInternalFrame,1,1,Sets the JInternalFrame with which this DesktopIcon is associated.,;javax.swing.JInternalFrame.JDesktopIcon.setInternalFrame(JInternalFrame),;1
setInternationalCurrencySymbol,1,1,"Sets the ISO 4217 currency code of the currency of these DecimalFormatSymbols. If the currency code is valid (as defined by Currency.getInstance), this also sets the currency attribute to the corresponding Currency instance and the currency symbol attribute to the currency's symbol in the DecimalFormatSymbols' locale. If the currency code is not valid, then the currency attribute is set to null and the currency symbol attribute is not modified.",;java.text.DecimalFormatSymbols.setInternationalCurrencySymbol(String),;1
setInvalidCharacters,1,1,"Allows for further restricting of the characters that can be input. Only characters specified in the mask, not in the invalidCharacters, and in validCharacters will be allowed to be input. Passing in null (the default) implies the valid characters are only bound by the mask and the valid characters.",;javax.swing.text.MaskFormatter.setInvalidCharacters(String),;1
setInverted,1,1,"Specify true to reverse the value-range shown for the slider and false to put the value range in the normal order. The order depends on the slider's ComponentOrientation property. Normal (non-inverted) horizontal sliders with a ComponentOrientation value of LEFT_TO_RIGHT have their maximum on the right. Normal horizontal sliders with a ComponentOrientation value of RIGHT_TO_LEFT have their maximum on the left. Normal vertical sliders have their maximum on the top. These labels are reversed when the slider is inverted. By default, the value of this property is false.",;javax.swing.JSlider.setInverted(boolean),;1
setInvoker,1,1,Sets the invoker of this popup menu -- the component in which the popup menu menu is to be displayed.,;javax.swing.JPopupMenu.setInvoker(Component),;1
setInvokesStopCellEditing,1,1,"Determines what happens when editing is interrupted by selecting another node in the tree, a change in the tree's data, or by some other means. Setting this property to true causes the changes to be automatically saved when editing is interrupted. Fires a property change for the INVOKES_STOP_CELL_EDITING_PROPERTY.",;javax.swing.JTree.setInvokesStopCellEditing(boolean),;1
setIssuerNames,1,1,"Note: use setIssuers(Collection) instead or only specify the byte array form of distinguished names when using this method. See addIssuerName(String) for more information. Sets the issuerNames criterion. The issuer distinguished name in the X509CRL must match at least one of the specified distinguished names. If null, any issuer distinguished name will do. This method allows the caller to specify, with a single method call, the complete set of issuer names which X509CRLs may contain. The specified value replaces the previous value for the issuerNames criterion. The names parameter (if not null) is a Collection of names. Each name is a String or a byte array representing a distinguished name (in RFC 2253 or ASN.1 DER encoded form, respectively). If null is supplied as the value for this argument, no issuerNames check will be performed. Note that the names parameter can contain duplicate distinguished names, but they may be removed from the Collection of names returned by the getIssuerNames method. If a name is specified as a byte array, it should contain a single DER encoded distinguished name, as defined in X.501. The ASN.1 notation for this structure is as follows. Name ::= CHOICE { RDNSequence } RDNSequence ::= SEQUENCE OF RelativeDistinguishedName RelativeDistinguishedName ::= SET SIZE (1 .. MAX) OF AttributeTypeAndValue AttributeTypeAndValue ::= SEQUENCE { type AttributeType, value AttributeValue } AttributeType ::= OBJECT IDENTIFIER AttributeValue ::= ANY DEFINED BY AttributeType .... DirectoryString ::= CHOICE { teletexString TeletexString (SIZE (1..MAX)), printableString PrintableString (SIZE (1..MAX)), universalString UniversalString (SIZE (1..MAX)), utf8String UTF8String (SIZE (1.. MAX)), bmpString BMPString (SIZE (1..MAX)) } Note that a deep copy is performed on the Collection to protect against subsequent modifications.",;java.security.cert.X509CRLSelector.setIssuerNames(Collection&lt;?&gt;),;1
setIssuers,1,1,"Sets the issuerNames criterion. The issuer distinguished name in the X509CRL must match at least one of the specified distinguished names. If null, any issuer distinguished name will do. This method allows the caller to specify, with a single method call, the complete set of issuer names which X509CRLs may contain. The specified value replaces the previous value for the issuerNames criterion. The names parameter (if not null) is a Collection of X500Principals. Note that the names parameter can contain duplicate distinguished names, but they may be removed from the Collection of names returned by the getIssuers method. Note that a copy is performed on the Collection to protect against subsequent modifications.",;java.security.cert.X509CRLSelector.setIssuers(Collection&lt;X500Principal&gt;),;1
setItalic,1,1,Sets the italic attribute.,";javax.swing.text.StyleConstants.setItalic(MutableAttributeSet,boolean)",;1
setItem,1,1,Sets the item that should be edited.,;javax.swing.plaf.basic.BasicComboBoxEditor.setItem(Object),;1
setJNDIContext,1,1,"Sets the initial JNDI context from which SyncProvider implementations can be retrieved from a JNDI namespace This method checks to see that there is an SQLPermission object which grants the permission setSyncFactory before allowing the method to succeed. If a SecurityManager exists and its checkPermission method denies calling setJNDIContext, this method throws a java.lang.SecurityException.",;javax.sql.rowset.spi.SyncFactory.setJNDIContext(Context),;1
setJobName,1,1,Sets the name of the document to be printed. The document name can not be null.,;java.awt.print.PrinterJob.setJobName(String),;1
setJustification,1,1,Sets the type of justification.,;javax.swing.text.ParagraphView.setJustification(int),;1
setKeepAlive,1,1,Enable/disable SO_KEEPALIVE.,;java.net.Socket.setKeepAlive(boolean),;1
setKeepAliveTime,1,1,"Sets the time limit for which threads may remain idle before being terminated. If there are more than the core number of threads currently in the pool, after waiting this amount of time without processing a task, excess threads will be terminated. This overrides any value set in the constructor.",";java.util.concurrent.ThreadPoolExecutor.setKeepAliveTime(long,TimeUnit)",;1
setKeyChar,1,1,Set the keyChar value to indicate a logical character.,;java.awt.event.KeyEvent.setKeyChar(char),;1
setKeyCode,1,1,Set the keyCode value to indicate a physical key.,;java.awt.event.KeyEvent.setKeyCode(int),;1
setKeymap,1,1,Sets the keymap to use for binding events to actions. Setting to null effectively disables keyboard input. A PropertyChange event ("keymap") is fired when a new keymap is installed.,;javax.swing.text.JTextComponent.setKeymap(Keymap),;1
setKeyPair,1,1,Deprecated.,;java.security.Signer.setKeyPair(KeyPair),;1
setKeySelectionManager,1,1,"Sets the object that translates a keyboard character into a list selection. Typically, the first selection with a matching first character becomes the selected item.",;javax.swing.JComboBox.setKeySelectionManager(JComboBox.KeySelectionManager),;1
setKeySelector,1,1,Description copied from interface:XMLCryptoContext,;javax.xml.crypto.dom.DOMCryptoContext.setKeySelector(KeySelector),;1
setKeyUsage,1,1,"Sets the keyUsage criterion. The X509Certificate must allow the specified keyUsage values. If null, no keyUsage check will be done. Note that an X509Certificate that has no keyUsage extension implicitly allows all keyUsage values. Note that the boolean array supplied here is cloned to protect against subsequent modifications.",;java.security.cert.X509CertSelector.setKeyUsage(boolean[]),;1
setLabelFor,1,1,"Set the component this is labelling. Can be null if this does not label a Component. If the displayedMnemonic property is set and the labelFor property is also set, the label will call the requestFocus method of the component specified by the labelFor property when the mnemonic is activated.",;javax.swing.JLabel.setLabelFor(Component),;1
setLabelTable,1,1,"Used to specify what label will be drawn at any given value. The key-value pairs are of this format: { Integer value, java.swing.JComponent label }. An easy way to generate a standard table of value labels is by using the createStandardLabels method. Once the labels have been set, this method calls updateLabelUIs(). Note that the labels are only painted if the paintLabels property is true.",;javax.swing.JSlider.setLabelTable(Dictionary),;1
setLanguage,1,1,"Sets the language. If language is the empty string or null, the language in this Builder is removed. Otherwise, the language must be well-formed or an exception is thrown. The typical language value is a two or three-letter language code as defined in ISO639.",;java.util.Locale.Builder.setLanguage(String),;1
setLanguageTag,1,1,"Resets the Builder to match the provided IETF BCP 47 language tag. Discards the existing state. Null and the empty string cause the builder to be reset, like clear(). Grandfathered tags (see Locale.forLanguageTag(java.lang.String)) are converted to their canonical form before being processed. Otherwise, the language tag must be well-formed (see Locale) or an exception is thrown (unlike Locale.forLanguageTag, which just discards ill-formed and following portions of the tag).",;java.util.Locale.Builder.setLanguageTag(String),;1
setLastAccessTime,1,1,"Sets the last access time of the entry. If set, the last access time will be stored into the extended timestamp fields of entry's optional extra data, when output to a ZIP file or ZIP file formatted stream.",;java.util.zip.ZipEntry.setLastAccessTime(FileTime),;1
setLastDividerLocation,1,1,Sets the last location the divider was at to newLastLocation.,;javax.swing.JSplitPane.setLastDividerLocation(int),;1
setLastDragLocation,1,1,Set the last drag location of the JSplitPane.,;javax.swing.plaf.basic.BasicSplitPaneUI.setLastDragLocation(int),;1
setLastModified,1,1,"Sets the last-modified time of the file or directory named by this abstract pathname. All platforms support file-modification times to the nearest second, but some provide more precision. The argument will be truncated to fit the supported precision. If the operation succeeds and no intervening operations on the file take place, then the next invocation of the lastModified() method will return the (possibly truncated) time argument that was passed to this method.",;java.io.File.setLastModified(long),;1
setLayerEventMask,1,1,"Enables the events from JLayer and all its descendants defined by the specified event mask parameter to be delivered to the LayerUI.eventDispatched(AWTEvent, JLayer) method. Events are delivered provided that LayerUI is set for this JLayer and the JLayer is displayable. The following example shows how to correctly use this method in the LayerUI implementations: public void installUI(JComponent c) { super.installUI(c); JLayer l = (JLayer) c; // this LayerUI will receive only key and focus events l.setLayerEventMask(AWTEvent.KEY_EVENT_MASK | AWTEvent.FOCUS_EVENT_MASK); } public void uninstallUI(JComponent c) { super.uninstallUI(c); JLayer l = (JLayer) c; // JLayer must be returned to its initial state l.setLayerEventMask(0); } By default JLayer receives no events and its event mask is 0.",;javax.swing.JLayer.setLayerEventMask(long),;1
setLayoutOrientation,1,1,"Defines the way list cells are layed out. Consider a JList with five cells. Cells can be layed out in one of the following ways: VERTICAL: 0 1 2 3 4 HORIZONTAL_WRAP: 0 1 2 3 4 VERTICAL_WRAP: 0 3 1 4 2 A description of these layouts follows: ValueDescriptionVERTICALCells are layed out vertically in a single column. HORIZONTAL_WRAPCells are layed out horizontally, wrapping to a new row as necessary. If the visibleRowCount property is less than or equal to zero, wrapping is determined by the width of the list; otherwise wrapping is done in such a way as to ensure visibleRowCount rows in the list. VERTICAL_WRAPCells are layed out vertically, wrapping to a new column as necessary. If the visibleRowCount property is less than or equal to zero, wrapping is determined by the height of the list; otherwise wrapping is done at visibleRowCount rows. The default value of this property is VERTICAL.",;javax.swing.JList.setLayoutOrientation(int),;1
setLayoutStyle,1,1,Sets the LayoutStyle used to calculate the preferred gaps between components. A value of null indicates the shared instance of LayoutStyle should be used.,;javax.swing.GroupLayout.setLayoutStyle(LayoutStyle),;1
setLeadAnchorNotificationEnabled,1,1,Sets the value of the leadAnchorNotificationEnabled flag.,;javax.swing.DefaultListSelectionModel.setLeadAnchorNotificationEnabled(boolean),;1
setLeadSelectionIndex,1,1,"Sets the lead selection index, ensuring that values between the anchor and the new lead are either all selected or all deselected. If the value at the anchor index is selected, first clear all the values in the range [anchor, oldLeadIndex], then select all the values values in the range [anchor, newLeadIndex], where oldLeadIndex is the old leadIndex and newLeadIndex is the new one. If the value at the anchor index is not selected, do the same thing in reverse selecting values in the old range and deselecting values in the new one. Generate a single event for this change and notify all listeners. For the purposes of generating minimal bounds in this event, do the operation in a single pass; that way the first and last index inside the ListSelectionEvent that is broadcast will refer to cells that actually changed value because of this method. If, instead, this operation were done in two steps the effect on the selection state would be the same but two events would be generated and the bounds around the changed values would be wider, including cells that had been first cleared only to later be set. This method can be used in the mouseDragged method of a UI class to extend a selection.",;javax.swing.DefaultListSelectionModel.setLeadSelectionIndex(int),;1
setLeadSelectionPath,1,1,"Sets the path identifies as the lead. The lead may not be selected. The lead is not maintained by JTree, rather the UI will update it. This is a bound property.",;javax.swing.JTree.setLeadSelectionPath(TreePath),;1
setLeafIcon,1,1,Sets the icon used to represent leaf nodes.,;javax.swing.tree.DefaultTreeCellRenderer.setLeafIcon(Icon),;1
setLeftComponent,1,1,Sets the component to the left (or above) the divider.,;javax.swing.JSplitPane.setLeftComponent(Component),;1
setLeftIndent,1,1,Sets left indent.,";javax.swing.text.StyleConstants.setLeftIndent(MutableAttributeSet,float)",;1
setLeftInset,1,1,Set the left part of the margin around the view.,;javax.swing.text.AsyncBoxView.setLeftInset(float),;1
setLexicalHandler,1,1,"Set the SAX2 LexicalHandler for the output. This is needed to handle XML comments and the like. If the lexical handler is not set, an attempt should be made by the transformer to cast the ContentHandler to a LexicalHandler.",;javax.xml.transform.sax.SAXResult.setLexicalHandler(LexicalHandler),;1
setLibraryDirectory,1,1,Sets the directory used by the library loader for storing native libraries before they are loaded into memory.,;javax.management.loading.MLet.setLibraryDirectory(String),;1
setLimit,1,1,"Sets the maximum number of edits this UndoManager holds. A value less than 0 indicates the number of edits is not limited. If edits need to be discarded to shrink the limit, die will be invoked on them in the reverse order they were added. The default is 100.",;javax.swing.undo.UndoManager.setLimit(int),;1
setLineIncrement,1,1,"Deprecated.As of JDK version 1.1, replaced by setUnitIncrement(int).",;java.awt.Scrollbar.setLineIncrement(int),;1
setLineLength,1,1,Enables subclasses to set the number of characters they want written per line. The default is 100.,;javax.swing.text.AbstractWriter.setLineLength(int),;1
setLineSeparator,1,1,"Sets the String used to represent newlines. This is initialized in the constructor from either the Document, or the System property line.separator.",;javax.swing.text.AbstractWriter.setLineSeparator(String),;1
setLineWrap,1,1,"Sets the line-wrapping policy of the text area. If set to true the lines will be wrapped if they are too long to fit within the allocated width. If set to false, the lines will always be unwrapped. A PropertyChange event (""lineWrap"") is fired when the policy is changed. By default this property is false.",;javax.swing.JTextArea.setLineWrap(boolean),;1
setLinkCursor,1,1,Sets the cursor to use over links.,;javax.swing.text.html.HTMLEditorKit.setLinkCursor(Cursor),;1
setLinkedException,1,1,Set the linked exception field of this event.,;javax.xml.bind.helpers.ValidationEventImpl.setLinkedException(Throwable),;1
setList,1,1,"Changes the list that defines this sequence and resets the index of the models value to zero. Note that list is not copied, the model just stores a reference to it. This method fires a ChangeEvent if list is not equal to the current list.",;javax.swing.SpinnerListModel.setList(List&lt;?&gt;),;1
setLoadsSynchronously,1,1,"Sets how the image is loaded. If newValue is true, the image we be loaded when first asked for, otherwise it will be loaded asynchronously. The default is to not load synchronously, that is to load the image asynchronously.",;javax.swing.text.html.ImageView.setLoadsSynchronously(boolean),;1
setLocalName,1,1,Set the local name of a specific attribute.,";org.xml.sax.helpers.AttributesImpl.setLocalName(int,String)",;1
setLocalPatternChars,1,1,"Sets localized date-time pattern characters. For example: 'u', 't', etc.",;java.text.DateFormatSymbols.setLocalPatternChars(String),;1
setLocationByPlatform,1,1,"Sets whether this Window should appear at the default location for the native windowing system or at the current location (returned by getLocation) the next time the Window is made visible. This behavior resembles a native window shown without programmatically setting its location. Most windowing systems cascade windows if their locations are not explicitly set. The actual location is determined once the window is shown on the screen. This behavior can also be enabled by setting the System Property ""java.awt.Window.locationByPlatform"" to ""true"", though calls to this method take precedence. Calls to setVisible, setLocation and setBounds after calling setLocationByPlatform clear this property of the Window. For example, after the following code is executed: setLocationByPlatform(true); setVisible(true); boolean flag = isLocationByPlatform(); The window will be shown at platform's default location and flag will be false. In the following sample: setLocationByPlatform(true); setLocation(10, 10); boolean flag = isLocationByPlatform(); setVisible(true); The window will be shown at (10, 10) and flag will be false.",;java.awt.Window.setLocationByPlatform(boolean),;1
setLocator,1,1,Set the locator object for this event.,;javax.xml.bind.helpers.ValidationEventImpl.setLocator(ValidationEventLocator),;1
setLockingKeyState,1,1,"Sets the state of the given locking key on the keyboard. Valid key codes are VK_CAPS_LOCK, VK_NUM_LOCK, VK_SCROLL_LOCK, and VK_KANA_LOCK. Depending on the platform, setting the state of a locking key may involve event processing and therefore may not be immediately observable through getLockingKeyState.",";java.awt.Toolkit.setLockingKeyState(int,boolean)",;1
setLog,1,1,"Log RMI calls to the output stream out. If out is null, call logging is turned off. If there is a security manager, its checkPermission method will be invoked with a java.util.logging.LoggingPermission(""control"") permission; this could result in a SecurityException.",;java.rmi.server.RemoteServer.setLog(OutputStream),;1
setLoggerName,1,1,Set the source Logger's name.,;java.util.logging.LogRecord.setLoggerName(String),;1
setLoginTimeout,1,1,Sets the maximum time in seconds that a driver will wait while attempting to connect to a database once the driver has been identified.,;java.sql.DriverManager.setLoginTimeout(int),;1
setLogTimers,1,1,"Enables or disables the timer log. When enabled, a message is posted to System.out whenever the timer goes off.",;javax.swing.Timer.setLogTimers(boolean),;1
setLogWriter,1,1,"Sets the logging/tracing PrintWriter object that is used by the DriverManager and all drivers. There is a minor versioning problem created by the introduction of the method setLogWriter. The method setLogWriter cannot create a PrintStream object that will be returned by getLogStream---the Java platform does not provide a backward conversion. As a result, a new application that uses setLogWriter and also uses a JDBC 1.0 driver that uses getLogStream will likely not see debugging information written by that driver. Starting with the Java 2 SDK, Standard Edition, version 1.3 release, this method checks to see that there is an SQLPermission object before setting the logging stream. If a SecurityManager exists and its checkPermission method denies setting the log writer, this method throws a java.lang.SecurityException.",;java.sql.DriverManager.setLogWriter(PrintWriter),;1
setLoopbackMode,1,1,"Disable/Enable local loopback of multicast datagrams The option is used by the platform's networking code as a hint for setting whether multicast data will be looped back to the local socket. Because this option is a hint, applications that want to verify what loopback mode is set to should call getLoopbackMode()",;java.net.MulticastSocket.setLoopbackMode(boolean),;1
setMagicCaretPosition,1,1,"Saves the current caret position. This is used when caret up/down actions occur, moving between lines that have uneven end positions.",;javax.swing.text.DefaultCaret.setMagicCaretPosition(Point),;1
setMajorTickSpacing,1,1,"This method sets the major tick spacing. The number that is passed in represents the distance, measured in values, between each major tick mark. If you have a slider with a range from 0 to 50 and the major tick spacing is set to 10, you will get major ticks next to the following values: 0, 10, 20, 30, 40, 50. In order for major ticks to be painted, setPaintTicks must be set to true. This method will also set up a label table for you. If there is not already a label table, and the major tick spacing is &gt; 0, and getPaintLabels returns true, a standard label table will be generated (by calling createStandardLabels) with labels at the major tick marks. For the example above, you would get text labels: ""0"", ""10"", ""20"", ""30"", ""40"", ""50"". The label table is then set on the slider by calling setLabelTable.",;javax.swing.JSlider.setMajorTickSpacing(int),;1
setManagedResource,1,1,Sets the instance handle of the object against which to execute all methods in this ModelMBean management interface (MBeanInfo and Descriptors).,";javax.management.modelmbean.RequiredModelMBean.setManagedResource(Object,String)",;1
setMask,1,1,Sets the mask dictating the legal characters. This will throw a ParseException if mask is not valid.,;javax.swing.text.MaskFormatter.setMask(String),;1
setMatchAllSubjectAltNames,1,1,"Enables/disables matching all of the subjectAlternativeNames specified in the setSubjectAlternativeNames or addSubjectAlternativeName methods. If enabled, the X509Certificate must contain all of the specified subject alternative names. If disabled, the X509Certificate must contain at least one of the specified subject alternative names. The matchAllNames flag is true by default.",;java.security.cert.X509CertSelector.setMatchAllSubjectAltNames(boolean),;1
setMaxAge,1,1,"Sets the maximum age of the cookie in seconds. A positive value indicates that the cookie will expire after that many seconds have passed. Note that the value is the maximum age when the cookie will expire, not the cookie's current age. A negative value means that the cookie is not stored persistently and will be deleted when the Web browser exits. A zero value causes the cookie to be deleted.",;java.net.HttpCookie.setMaxAge(long),;1
setMaxCRLNumber,1,1,"Sets the maxCRLNumber criterion. The X509CRL must have a CRL number extension whose value is less than or equal to the specified value. If null, no maxCRLNumber check will be done.",;java.security.cert.X509CRLSelector.setMaxCRLNumber(BigInteger),;1
setMaxFieldSize,1,1,"Sets the maximum number of bytes that can be used for a column value in this RowSet object to the given number. This limit applies only to columns that hold values of the following types: BINARY, VARBINARY, LONGVARBINARY, CHAR, VARCHAR, and LONGVARCHAR. If the limit is exceeded, the excess data is silently discarded. For maximum portability, it is advisable to use values greater than 256.",;javax.sql.rowset.BaseRowSet.setMaxFieldSize(int),;1
setMaximizable,1,1,"Sets the maximizable property, which determines whether the JInternalFrame can be maximized by some user action. Some look and feels might not support maximizing internal frames; they will ignore this property.",;javax.swing.JInternalFrame.setMaximizable(boolean),;1
setMaximizedBounds,1,1,"Sets the maximized bounds for this frame. When a frame is in maximized state the system supplies some defaults bounds. This method allows some or all of those system supplied values to be overridden. If bounds is null, accept bounds supplied by the system. If non-null you can override some of the system supplied values while accepting others by setting those fields you want to accept from system to Integer.MAX_VALUE. Note, the given maximized bounds are used as a hint for the native system, because the underlying platform may not support setting the location and/or size of the maximized windows. If that is the case, the provided values do not affect the appearance of the frame in the maximized state.",;java.awt.Frame.setMaximizedBounds(Rectangle),;1
setMaximumPoolSize,1,1,"Sets the maximum allowed number of threads. This overrides any value set in the constructor. If the new value is smaller than the current value, excess existing threads will be terminated when they next become idle.",;java.util.concurrent.ThreadPoolExecutor.setMaximumPoolSize(int),;1
setMaximumRowCount,1,1,"Sets the maximum number of rows the JComboBox displays. If the number of objects in the model is greater than count, the combo box uses a scrollbar.",;javax.swing.JComboBox.setMaximumRowCount(int),;1
setMaximumZoneSize,1,1,Set the desired maximum zone size. A zone may get larger than this size if a single child view is larger than this size since zones are formed on child view boundaries.,;javax.swing.text.ZoneView.setMaximumZoneSize(int),;1
setMaxPage,1,1,Specifies the maximum value the user can specify as the last page to be printed for jobs using these attributes. Not specifying this attribute is equivalent to specifying Integer.MAX_VALUE.,;java.awt.JobAttributes.setMaxPage(int),;1
setMaxPathLength,1,1,"Sets the value of the maximum number of non-self-issued intermediate certificates that may exist in a certification path. A certificate is self-issued if the DNs that appear in the subject and issuer fields are identical and are not empty. Note that the last certificate in a certification path is not an intermediate certificate, and is not included in this limit. Usually the last certificate is an end entity certificate, but it can be a CA certificate. A PKIX CertPathBuilder instance must not build paths longer than the length specified. A value of 0 implies that the path can only contain a single certificate. A value of -1 implies that the path length is unconstrained (i.e. there is no maximum). The default maximum path length, if not specified, is 5. Setting a value less than -1 will cause an exception to be thrown. If any of the CA certificates contain the BasicConstraintsExtension, the value of the pathLenConstraint field of the extension overrides the maximum path length parameter whenever the result is a certification path of smaller length.",;java.security.cert.PKIXBuilderParameters.setMaxPathLength(int),;1
setMaxPriority,1,1,"Sets the maximum priority of the group. Threads in the thread group that already have a higher priority are not affected. First, the checkAccess method of this thread group is called with no arguments; this may result in a security exception. If the pri argument is less than Thread.MIN_PRIORITY or greater than Thread.MAX_PRIORITY, the maximum priority of the group remains unchanged. Otherwise, the priority of this ThreadGroup object is set to the smaller of the specified pri and the maximum permitted priority of the parent of this thread group. (If this thread group is the system thread group, which has no parent, then its maximum priority is simply set to pri.) Then this method is called recursively, with pri as its argument, for every thread group that belongs to this thread group.",;java.lang.ThreadGroup.setMaxPriority(int),;1
setMaxRows,1,1,"Sets the maximum number of rows that this RowSet object may contain to the given number. If this limit is exceeded, the excess rows are silently dropped.",;javax.sql.rowset.BaseRowSet.setMaxRows(int),;1
setMaxSortKeys,1,1,"Sets the maximum number of sort keys. The number of sort keys determines how equal values are resolved when sorting. For example, assume a table row sorter is created and setMaxSortKeys(2) is invoked on it. The user clicks the header for column 1, causing the table rows to be sorted based on the items in column 1. Next, the user clicks the header for column 2, causing the table to be sorted based on the items in column 2; if any items in column 2 are equal, then those particular rows are ordered based on the items in column 1. In this case, we say that the rows are primarily sorted on column 2, and secondarily on column 1. If the user then clicks the header for column 3, then the items are primarily sorted on column 3 and secondarily sorted on column 2. Because the maximum number of sort keys has been set to 2 with setMaxSortKeys, column 1 no longer has an effect on the order. The maximum number of sort keys is enforced by toggleSortOrder. You can specify more sort keys by invoking setSortKeys directly and they will all be honored. However if toggleSortOrder is subsequently invoked the maximum number of sort keys will be enforced. The default value is 3.",;javax.swing.DefaultRowSorter.setMaxSortKeys(int),;1
setMaxWidth,1,1,"Sets the TableColumn's maximum width to maxWidth or, if maxWidth is less than the minimum width, to the minimum width. If the value of the width or preferredWidth property is more than the new maximum width, this method sets that property to the new maximum width.",;javax.swing.table.TableColumn.setMaxWidth(int),;1
setMaxZonesLoaded,1,1,Sets the current setting of the number of zones allowed to be loaded at the same time. This will throw an IllegalArgumentException if mzl is less than 1.,;javax.swing.text.ZoneView.setMaxZonesLoaded(int),;1
setMBeanDescriptor,1,1,Description copied from interface:ModelMBeanInfo,;javax.management.modelmbean.ModelMBeanInfoSupport.setMBeanDescriptor(Descriptor),;1
setMedia,1,1,"Specifies the desired paper size for pages using these attributes. The actual paper size will be determined by the limitations of the target printer. If an exact match cannot be found, an implementation will choose the closest possible match. Not specifying this attribute is equivalent to specifying the default size for the default locale. The default size for locales in the United States and Canada is MediaType.NA_LETTER. The default size for all other locales is MediaType.ISO_A4.",;java.awt.PageAttributes.setMedia(PageAttributes.MediaType),;1
setMediaToDefault,1,1,Sets the paper size for pages using these attributes to the default size for the default locale. The default size for locales in the United States and Canada is MediaType.NA_LETTER. The default size for all other locales is MediaType.ISO_A4.,;java.awt.PageAttributes.setMediaToDefault(),;1
setMenuLocation,1,1,Sets the location of the popup component.,";javax.swing.JMenu.setMenuLocation(int,int)",;1
setMessageType,1,1,Sets the option pane's message type. The message type is used by the Look and Feel to determine the icon to display (if not supplied) as well as potentially how to lay out the parentComponent.,;javax.swing.JOptionPane.setMessageType(int),;1
setMillis,1,1,Set event time.,;java.util.logging.LogRecord.setMillis(long),;1
setMillisecond,1,1,Set milliseconds.Unset this field by invoking the setter with a parameter value of DatatypeConstants.FIELD_UNDEFINED.,;javax.xml.datatype.XMLGregorianCalendar.setMillisecond(int),;1
setMillisToDecideToPopup,1,1,Specifies the amount of time to wait before deciding whether or not to popup a progress monitor.,;javax.swing.ProgressMonitor.setMillisToDecideToPopup(int),;1
setMillisToPopup,1,1,"Specifies the amount of time it will take for the popup to appear. (If the predicted time remaining is less than this time, the popup won't be displayed.)",;javax.swing.ProgressMonitor.setMillisToPopup(int),;1
setMinCRLNumber,1,1,"Sets the minCRLNumber criterion. The X509CRL must have a CRL number extension whose value is greater than or equal to the specified value. If null, no minCRLNumber check will be done.",;java.security.cert.X509CRLSelector.setMinCRLNumber(BigInteger),;1
setMinimalDaysInFirstWeek,1,1,"Sets what the minimal days required in the first week of the year are; For example, if the first week is defined as one that contains the first day of the first month of a year, call this method with value 1. If it must be a full week, use value 7.",;java.util.Calendar.setMinimalDaysInFirstWeek(int),;1
setMinorTickSpacing,1,1,"This method sets the minor tick spacing. The number that is passed in represents the distance, measured in values, between each minor tick mark. If you have a slider with a range from 0 to 50 and the minor tick spacing is set to 10, you will get minor ticks next to the following values: 0, 10, 20, 30, 40, 50. In order for minor ticks to be painted, setPaintTicks must be set to true.",;javax.swing.JSlider.setMinorTickSpacing(int),;1
setMinPage,1,1,Specifies the minimum value the user can specify as the first page to be printed for jobs using these attributes. Not specifying this attribute is equivalent to specifying 1.,;java.awt.JobAttributes.setMinPage(int),;1
setMinusSign,1,1,"Sets the character used to represent minus sign. If no explicit negative format is specified, one is formed by prefixing minusSign to the positive format.",;java.text.DecimalFormatSymbols.setMinusSign(char),;1
setMinute,1,1,Set minutes.Unset this field by invoking the setter with a parameter value of DatatypeConstants.FIELD_UNDEFINED.,;javax.xml.datatype.XMLGregorianCalendar.setMinute(int),;1
setMinWidth,1,1,"Sets the TableColumn's minimum width to minWidth, adjusting the new minimum width if necessary to ensure that 0 &lt;= minWidth &lt;= maxWidth. For example, if the minWidth argument is negative, this method sets the minWidth property to 0. If the value of the width or preferredWidth property is less than the new minimum width, this method sets that property to the new minimum width.",;javax.swing.table.TableColumn.setMinWidth(int),;1
setMnemonicAt,1,1,"Sets the keyboard mnemonic for accessing the specified tab. The mnemonic is the key which when combined with the look and feel's mouseless modifier (usually Alt) will activate the specified tab. A mnemonic must correspond to a single key on the keyboard and should be specified using one of the VK_XXX keycodes defined in java.awt.event.KeyEvent or one of the extended keycodes obtained through java.awt.event.KeyEvent.getExtendedKeyCodeForChar. Mnemonics are case-insensitive, therefore a key event with the corresponding keycode would cause the button to be activated whether or not the Shift modifier was pressed. This will update the displayed mnemonic property for the specified tab.",";javax.swing.JTabbedPane.setMnemonicAt(int,int)",;1
setModal,1,1,Specifies whether this dialog should be modal. This method is obsolete and is kept for backwards compatibility only. Use setModalityType() instead. Note: changing modality of the visible dialog may have no effect until it is hidden and then shown again.,;java.awt.Dialog.setModal(boolean),;1
setModalExclusionType,1,1,"Specifies the modal exclusion type for this window. If a window is modal excluded, it is not blocked by some modal dialogs. See Dialog.ModalExclusionType for possible modal exclusion types. If the given type is not supported, NO_EXCLUDE is used. Note: changing the modal exclusion type for a visible window may have no effect until it is hidden and then shown again.",;java.awt.Window.setModalExclusionType(Dialog.ModalExclusionType),;1
setModalityType,1,1,"Sets the modality type for this dialog. See ModalityType for possible modality types. If the given modality type is not supported, MODELESS is used. You may want to call getModalityType() after calling this method to ensure that the modality type has been set. Note: changing modality of the visible dialog may have no effect until it is hidden and then shown again.",;java.awt.Dialog.setModalityType(Dialog.ModalityType),;1
setMode,1,1,"Sets the mode of the file dialog. If mode is not a legal value, an exception will be thrown and mode will not be set.",;java.awt.FileDialog.setMode(int),;1
setModelIndex,1,1,Sets the model index for this column. The model index is the index of the column in the model that will be displayed by this TableColumn. As the TableColumn is moved around in the view the model index remains constant.,;javax.swing.table.TableColumn.setModelIndex(int),;1
setModelMBeanInfo,1,1,"Initializes a ModelMBean object using ModelMBeanInfo passed in. This method makes it possible to set a customized ModelMBeanInfo on the ModelMBean as long as it is not registered with the MBeanServer. Once the ModelMBean's ModelMBeanInfo (with Descriptors) are customized and set on the ModelMBean, the ModelMBean be registered with the MBeanServer. If the ModelMBean is currently registered, this method throws a RuntimeOperationsException wrapping an IllegalStateException If the given inModelMBeanInfo does not contain any ModelMBeanNotificationInfo for the GENERIC or ATTRIBUTE_CHANGE notifications, then the RequiredModelMBean will supply its own default ModelMBeanNotificationInfos for those missing notifications.",;javax.management.modelmbean.RequiredModelMBean.setModelMBeanInfo(ModelMBeanInfo),;1
setModelWrapper,1,1,Sets the model wrapper providing the data that is being sorted and filtered.,";javax.swing.DefaultRowSorter.setModelWrapper(DefaultRowSorter.ModelWrapper&lt;M,I&gt;)",;1
setModifiers,1,1,Deprecated.as of JDK1.1.4,;java.awt.event.KeyEvent.setModifiers(int),;1
setModulus,1,1,Sets the modulus value common to all observed MBeans.,;javax.management.monitor.CounterMonitor.setModulus(Number),;1
setMonetaryDecimalSeparator,1,1,Sets the monetary decimal separator.,;java.text.DecimalFormatSymbols.setMonetaryDecimalSeparator(char),;1
setMonths,1,1,"Sets month strings. For example: ""January"", ""February"", etc.",;java.text.DateFormatSymbols.setMonths(String[]),;1
setMouseOver,1,1,Sets whether or not the mouse is currently over the divider.,;javax.swing.plaf.basic.BasicSplitPaneDivider.setMouseOver(boolean),;1
setMultiClickThreshhold,1,1,"Sets the amount of time (in milliseconds) required between mouse press events for the button to generate the corresponding action events. After the initial mouse press occurs (and action event generated) any subsequent mouse press events which occur on intervals less than the threshhold will be ignored and no corresponding action event generated. By default the threshhold is 0, which means that for each mouse press, an action event will be fired, no matter how quickly the mouse clicks occur. In buttons where this behavior is not desirable (for example, the ""OK"" button in a dialog), this threshhold should be set to an appropriate positive value.",;javax.swing.AbstractButton.setMultiClickThreshhold(long),;1
setMultipleDocumentHandling,1,1,"Specifies the handling of multiple copies, including collation, for jobs using these attributes. Not specifying this attribute is equivalent to specifying MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_UNCOLLATED_COPIES.",;java.awt.JobAttributes.setMultipleDocumentHandling(JobAttributes.MultipleDocumentHandlingType),;1
setMultipleDocumentHandlingToDefault,1,1,"Sets the handling of multiple copies, including collation, for jobs using these attributes to the default. The default handling is MultipleDocumentHandlingType.SEPARATE_DOCUMENTS_UNCOLLATED_COPIES.",;java.awt.JobAttributes.setMultipleDocumentHandlingToDefault(),;1
setMultipleSelections,1,1,"Deprecated.As of JDK version 1.1, replaced by setMultipleMode(boolean).",;java.awt.List.setMultipleSelections(boolean),;1
setMultiplier,1,1,"Sets the multiplier for use in percent, per mille, and similar formats. For a percent format, set the multiplier to 100 and the suffixes to have '%' (for Arabic, use the Arabic percent sign). For a per mille format, set the multiplier to 1000 and the suffixes to have '\u2030'. Example: with multiplier 100, 1.23 is formatted as ""123"", and ""123"" is parsed into 1.23.",;java.text.DecimalFormat.setMultiplier(int),;1
setMultiSelectionEnabled,1,1,Sets the file chooser to allow multiple file selections.,;javax.swing.JFileChooser.setMultiSelectionEnabled(boolean),;1
setNameConstraints,1,1,"Sets the name constraints criterion. The X509Certificate must have subject and subject alternative names that meet the specified name constraints. The name constraints are specified as a byte array. This byte array should contain the DER encoded form of the name constraints, as they would appear in the NameConstraints structure defined in RFC 3280 and X.509. The ASN.1 definition of this structure appears below. NameConstraints ::= SEQUENCE { permittedSubtrees [0] GeneralSubtrees OPTIONAL, excludedSubtrees [1] GeneralSubtrees OPTIONAL } GeneralSubtrees ::= SEQUENCE SIZE (1..MAX) OF GeneralSubtree GeneralSubtree ::= SEQUENCE { base GeneralName, minimum [0] BaseDistance DEFAULT 0, maximum [1] BaseDistance OPTIONAL } BaseDistance ::= INTEGER (0..MAX) GeneralName ::= CHOICE { otherName [0] OtherName, rfc822Name [1] IA5String, dNSName [2] IA5String, x400Address [3] ORAddress, directoryName [4] Name, ediPartyName [5] EDIPartyName, uniformResourceIdentifier [6] IA5String, iPAddress [7] OCTET STRING, registeredID [8] OBJECT IDENTIFIER} Note that the byte array supplied here is cloned to protect against subsequent modifications.",;java.security.cert.X509CertSelector.setNameConstraints(byte[]),;1
setNameInNamespace,1,1,"Sets the full name of this binding. This method must be called to set the full name whenever a NameClassPair is created and a full name is applicable to this binding. Setting the full name to null, or not setting it at all, will cause getNameInNamespace() to throw an exception.",;javax.naming.NameClassPair.setNameInNamespace(String),;1
setNamespaceDeclUris,1,1,Controls whether namespace declaration attributes are placed into the NSDECL namespace by processName(). This may only be changed before any contexts have been pushed.,;org.xml.sax.helpers.NamespaceSupport.setNamespaceDeclUris(boolean),;1
setNaN,1,1,Sets the string used to represent "not a number". Almost always left unchanged.,;java.text.DecimalFormatSymbols.setNaN(String),;1
setNanos,1,1,Sets this Timestamp object's nanos field to the given value.,;java.sql.Timestamp.setNanos(int),;1
setNativesForFlavor,1,1,"Discards the current mappings for the specified DataFlavor and all DataFlavors equal to the specified DataFlavor, and creates new mappings to the specified String natives. Unlike getNativesForFlavor, the mappings will only be established in one direction, and the natives will not be encoded. To establish two-way mappings, call setFlavorsForNative as well. The first native in the array will represent the highest priority mapping. Subsequent natives will represent mappings of decreasing priority. If the array contains several elements that reference equal String natives, this method will establish new mappings for the first of those elements and ignore the rest of them. It is recommended that client code not reset mappings established by the data transfer subsystem. This method should only be used for application-level mappings.",";java.awt.datatransfer.SystemFlavorMap.setNativesForFlavor(DataFlavor,String[])",;1
setNavigationFilter,1,1,Sets the NavigationFilter. NavigationFilter is used by DefaultCaret and the default cursor movement actions as a way to restrict the cursor movement.,;javax.swing.text.JTextComponent.setNavigationFilter(NavigationFilter),;1
setNeedClientAuth,1,1,Sets whether client authentication should be required. Calling this method clears the wantClientAuth flag.,;javax.net.ssl.SSLParameters.setNeedClientAuth(boolean),;1
setNegativePrefix,1,1,"Set the negative prefix. Examples: -123, ($123) (with negative suffix), sFr-123",;java.text.DecimalFormat.setNegativePrefix(String),;1
setNegativeSuffix,1,1,Set the negative suffix. Examples: 123%,;java.text.DecimalFormat.setNegativeSuffix(String),;1
setNetworkInterface,1,1,Specify the network interface for outgoing multicast datagrams sent on this socket.,;java.net.MulticastSocket.setNetworkInterface(NetworkInterface),;1
setNextFocusableComponent,1,1,"Deprecated.As of 1.4, replaced by FocusTraversalPolicy",;javax.swing.JComponent.setNextFocusableComponent(Component),;1
setNil,1,1,Set whether this element has nil content.,;javax.xml.bind.JAXBElement.setNil(boolean),;1
setNodeValue,1,1,Sets the String value associated with this node.,;javax.imageio.metadata.IIOMetadataNode.setNodeValue(String),;1
setNoNSSchemaLocation,1,1,Convenience method for setting the noNamespaceSchemaLocation.,;javax.xml.bind.helpers.AbstractMarshallerImpl.setNoNSSchemaLocation(String),;1
setNormalBounds,1,1,"Sets the normal bounds for this internal frame, the bounds that this internal frame would be restored to from its maximized state. This method is intended for use only by desktop managers.",;javax.swing.JInternalFrame.setNormalBounds(Rectangle),;1
setNote,1,1,"Specifies the additional note that is displayed along with the progress message. Used, for example, to show which file the is currently being copied during a multiple-file copy.",;javax.swing.ProgressMonitor.setNote(String),;1
setNotify,1,1,Sets the notification's on/off switch value common to all observed MBeans.,;javax.management.monitor.CounterMonitor.setNotify(boolean),;1
setNotifyDiffer,1,1,Sets the differing notification's on/off switch value common to all observed MBeans.,;javax.management.monitor.StringMonitor.setNotifyDiffer(boolean),;1
setNotifyHigh,1,1,Sets the high notification's on/off switch value common to all observed MBeans.,;javax.management.monitor.GaugeMonitor.setNotifyHigh(boolean),;1
setNotifyLow,1,1,Sets the low notification's on/off switch value common to all observed MBeans.,;javax.management.monitor.GaugeMonitor.setNotifyLow(boolean),;1
setNotifyMatch,1,1,Sets the matching notification's on/off switch value common to all observed MBeans.,;javax.management.monitor.StringMonitor.setNotifyMatch(boolean),;1
setNullable,1,1,Sets whether a value stored in the designated column can be set to NULL to the given constant from the interface ResultSetMetaData.,";javax.sql.rowset.RowSetMetaDataImpl.setNullable(int,int)",;1
setNullFormatter,1,1,Sets the formatter to use if the value of the JFormattedTextField is null.,;javax.swing.text.DefaultFormatterFactory.setNullFormatter(JFormattedTextField.AbstractFormatter),;1
setNumberFormat,1,1,Allows you to set the number formatter.,;java.text.DateFormat.setNumberFormat(NumberFormat),;1
setNumRows,1,1,Obsolete as of Java 2 platform v1.3. Please use setRowCount instead.,;javax.swing.table.DefaultTableModel.setNumRows(int),;1
setObjectFactoryBuilder,1,1,"The ObjectFactoryBuilder determines the policy used when trying to load object factories. See getObjectInstance() and class ObjectFactory for a description of the default policy. setObjectFactoryBuilder() overrides this default policy by installing an ObjectFactoryBuilder. Subsequent object factories will be loaded and created using the installed builder. The builder can only be installed if the executing thread is allowed (by the security manager's checkSetFactory() method) to do so. Once installed, the builder cannot be replaced.",;javax.naming.spi.NamingManager.setObjectFactoryBuilder(ObjectFactoryBuilder),;1
setObservedAttribute,1,1,Sets the attribute to observe. The observed attribute is not initialized by default (set to null).,;javax.management.monitor.Monitor.setObservedAttribute(String),;1
setObservedObject,1,1,"Deprecated.As of JMX 1.2, replaced by addObservedObject(javax.management.ObjectName)",;javax.management.monitor.Monitor.setObservedObject(ObjectName),;1
setOcspExtensions,1,1,Sets the optional OCSP request extensions.,;java.security.cert.PKIXRevocationChecker.setOcspExtensions(List&lt;Extension&gt;),;1
setOcspResponder,1,1,"Sets the URI that identifies the location of the OCSP responder. This overrides the ocsp.responderURL security property and any responder specified in a certificate's Authority Information Access Extension, as defined in RFC 5280.",;java.security.cert.PKIXRevocationChecker.setOcspResponder(URI),;1
setOcspResponderCert,1,1,"Sets the OCSP responder's certificate. This overrides the ocsp.responderCertSubjectName, ocsp.responderCertIssuerName, and ocsp.responderCertSerialNumber security properties.",;java.security.cert.PKIXRevocationChecker.setOcspResponderCert(X509Certificate),;1
setOcspResponses,1,1,Sets the OCSP responses. These responses are used to determine the revocation status of the specified certificates when OCSP is used.,";java.security.cert.PKIXRevocationChecker.setOcspResponses(Map&lt;X509Certificate,byte[]&gt;)",;1
setOneTouchExpandable,1,1,"Sets the value of the oneTouchExpandable property, which must be true for the JSplitPane to provide a UI widget on the divider to quickly expand/collapse the divider. The default value of this property is false. Some look and feels might not support one-touch expanding; they will ignore this property.",;javax.swing.JSplitPane.setOneTouchExpandable(boolean),;1
setOOBInline,1,1,"Enable/disable SO_OOBINLINE (receipt of TCP urgent data) By default, this option is disabled and TCP urgent data received on a socket is silently discarded. If the user wishes to receive urgent data, then this option must be enabled. When enabled, urgent data is received inline with normal data. Note, only limited support is provided for handling incoming urgent data. In particular, no notification of incoming urgent data is provided and there is no capability to distinguish between normal data and urgent data unless provided by a higher level protocol.",;java.net.Socket.setOOBInline(boolean),;1
setOpaque,1,1,"If true the component paints every pixel within its bounds. Otherwise, the component may not paint some or all of its pixels, allowing the underlying pixels to show through. The default value of this property is false for JComponent. However, the default value for this property on most standard JComponent subclasses (such as JButton and JTree) is look-and-feel dependent.",;javax.swing.JComponent.setOpaque(boolean),;1
setOpenIcon,1,1,Sets the icon used to represent non-leaf nodes that are expanded.,;javax.swing.tree.DefaultTreeCellRenderer.setOpenIcon(Icon),;1
setOptimizeHuffmanTables,1,1,"Tells the writer to generate optimized Huffman tables for the image as part of the writing process. The default is false. If this flag is set to true, it overrides any tables specified in the metadata. Note that this means that any image written with this flag set to true will always contain Huffman tables.",;javax.imageio.plugins.jpeg.JPEGImageWriteParam.setOptimizeHuffmanTables(boolean),;1
setOptionType,1,1,Sets the options to display. The option type is used by the Look and Feel to determine what buttons to show (unless options are supplied).,;javax.swing.JOptionPane.setOptionType(int),;1
setOrdering,1,1,"Sets a pairwise ordering between two service provider objects within a given category. If one or both objects are not currently registered within the given category, or if the desired ordering is already set, nothing happens and false is returned. If the providers previously were ordered in the reverse direction, that ordering is removed. The ordering will be used by the getServiceProviders methods when their useOrdering argument is true.",";javax.imageio.spi.ServiceRegistry.setOrdering(Class&lt;T&gt;,T,T)",;1
setOrientationRequestedToDefault,1,1,Sets the print orientation for pages using these attributes to the default. The default orientation is portrait.,;java.awt.PageAttributes.setOrientationRequestedToDefault(),;1
setOrigin,1,1,"Specifies whether drawing at (0, 0) to pages using these attributes draws at the upper-left corner of the physical page, or at the upper-left corner of the printable area. (Note that these locations could be equivalent.) Not specifying the property is equivalent to specifying OriginType.PHYSICAL.",;java.awt.PageAttributes.setOrigin(PageAttributes.OriginType),;1
setOut,1,1,"Reassigns the ""standard"" output stream. First, if there is a security manager, its checkPermission method is called with a RuntimePermission(""setIO"") permission to see if it's ok to reassign the ""standard"" output stream.",;java.lang.System.setOut(PrintStream),;1
setOuterHTML,1,1,"Replaces the given element in the parent with the contents specified as an HTML string. This will be seen as at least two events, n inserts followed by a remove.When replacing a leaf this will attempt to make sure there is a newline present if one is needed. This may result in an additional element being inserted. Consider, if you were to replace a character element that contained a newline with &lt;img&gt; this would create two elements, one for the image, and one for the newline.If you try to replace the element at length you will most likely end up with two elements, eg setOuterHTML(getCharacterElement (getLength()), ""blah"") will result in two leaf elements at the end, one representing 'blah', and the other representing the end element.Consider the following structure (the elem parameter is in bold). &lt;body&gt; | &lt;div&gt; / \ &lt;p&gt; &lt;p&gt; Invoking setOuterHTML(elem, ""&lt;ul&gt;&lt;li&gt;"") results in the following structure (new elements are in red). &lt;body&gt; | &lt;ul&gt; \ &lt;li&gt; If either elem or htmlText parameter is null, no changes are made to the document.For this to work correctly, the document must have an HTMLEditorKit.Parser set. This will be the case if the document was created from an HTMLEditorKit via the createDefaultDocument method.",";javax.swing.text.html.HTMLDocument.setOuterHTML(Element,String)",;1
setOutput,1,1,"Sets the destination to the given ImageOutputStream or other Object. The destination is assumed to be ready to accept data, and will not be closed at the end of each write. This allows distributed imaging applications to transmit a series of images over a single network connection. If output is null, any currently set output will be removed. If output is an ImageOutputStream, calls to the write, writeToSequence, and prepareWriteEmpty/endWriteEmpty methods will preserve the existing contents of the stream. Other write methods, such as writeInsert, replaceStreamMetadata, replaceImageMetadata, replacePixels, prepareInsertEmpty/endInsertEmpty, and endWriteSequence, require the full contents of the stream to be readable and writable, and may alter any portion of the stream. Use of a general Object other than an ImageOutputStream is intended for writers that interact directly with an output device or imaging protocol. The set of legal classes is advertised by the writer's service provider's getOutputTypes method; most writers will return a single-element array containing only ImageOutputStream.class to indicate that they accept only an ImageOutputStream. The default implementation sets the output instance variable to the value of output after checking output against the set of classes advertised by the originating provider, if there is one.",;javax.imageio.ImageWriter.setOutput(Object),;1
setOutputProperties,1,1,"Set the output properties for the transformation. These properties will override properties set in the Templates with xsl:output. If argument to this function is null, any properties previously set are removed, and the value will revert to the value defined in the templates object.Pass a qualified property key name as a two-part string, the namespace URI enclosed in curly braces ({}), followed by the local name. If the name has a null URL, the String only contain the local name. An application can safely check for a non-null URI by testing to see if the first character of the name is a '{' character.For example, if a URI and local name were obtained from an element defined with &lt;xyz:foo xmlns:xyz=""http://xyz.foo.com/yada/baz.html""/&gt;, then the qualified name would be ""{http://xyz.foo.com/yada/baz.html}foo"". Note that no prefix is used. An IllegalArgumentException is thrown if any of the argument keys are not recognized and are not namespace qualified.",;javax.xml.transform.Transformer.setOutputProperties(Properties),;1
setOutputProperty,1,1,"Set an output property that will be in effect for the transformation. Pass a qualified property name as a two-part string, the namespace URI enclosed in curly braces ({}), followed by the local name. If the name has a null URL, the String only contain the local name. An application can safely check for a non-null URI by testing to see if the first character of the name is a '{' character.For example, if a URI and local name were obtained from an element defined with &lt;xyz:foo xmlns:xyz=""http://xyz.foo.com/yada/baz.html""/&gt;, then the qualified name would be ""{http://xyz.foo.com/yada/baz.html}foo"". Note that no prefix is used.The Properties object that was passed to setOutputProperties(java.util.Properties) won't be effected by calling this method.",";javax.xml.transform.Transformer.setOutputProperty(String,String)",;1
setOverwriteMode,1,1,"Configures the behavior when inserting characters. If overwriteMode is true (the default), new characters overwrite existing characters in the model.",;javax.swing.text.DefaultFormatter.setOverwriteMode(boolean),;1
setPackageAssertionStatus,1,1,"Sets the package default assertion status for the named package. The package default assertion status determines the assertion status for classes initialized in the future that belong to the named package or any of its ""subpackages"". A subpackage of a package named p is any package whose name begins with ""p."". For example, javax.swing.text is a subpackage of javax.swing, and both java.util and java.lang.reflect are subpackages of java. In the event that multiple package defaults apply to a given class, the package default pertaining to the most specific package takes precedence over the others. For example, if javax.lang and javax.lang.reflect both have package defaults associated with them, the latter package default applies to classes in javax.lang.reflect. Package defaults take precedence over the class loader's default assertion status, and may be overridden on a per-class basis by invoking setClassAssertionStatus(String, boolean).",";java.lang.ClassLoader.setPackageAssertionStatus(String,boolean)",;1
setPageable,1,1,"Queries document for the number of pages and the PageFormat and Printable for each page held in the Pageable instance, document.",;java.awt.print.PrinterJob.setPageable(Pageable),;1
setPageIncrement,1,1,"Deprecated.As of JDK version 1.1, replaced by setBlockIncrement().",;java.awt.Scrollbar.setPageIncrement(int),;1
setPageRanges,1,1,"Specifies, for jobs using these attributes, the ranges of pages to be printed, if a range of pages is to be printed. All range numbers are inclusive. If this attribute is not specified, then the values from the fromPage and toPages attributes are used. If pageRanges and either or both of fromPage and toPage are specified, pageRanges takes precedence. Specifying none of pageRanges, fromPage, or toPage is equivalent to calling setPageRanges(new int[][] { new int[] { minPage, minPage } });",;java.awt.JobAttributes.setPageRanges(int[][]),;1
setPaint,1,1,Sets the Paint attribute for the Graphics2D context. Calling this method with a null Paint object does not have any effect on the current Paint attribute of this Graphics2D.,;java.awt.Graphics2D.setPaint(Paint),;1
setPaintLabels,1,1,"Determines whether labels are painted on the slider. This method will also set up a label table for you. If there is not already a label table, and the major tick spacing is &gt; 0, a standard label table will be generated (by calling createStandardLabels) with labels at the major tick marks. The label table is then set on the slider by calling setLabelTable. By default, this property is false.",;javax.swing.JSlider.setPaintLabels(boolean),;1
setPaintTicks,1,1,"Determines whether tick marks are painted on the slider. By default, this property is false.",;javax.swing.JSlider.setPaintTicks(boolean),;1
setPaintTrack,1,1,"Determines whether the track is painted on the slider. By default, this property is true.",;javax.swing.JSlider.setPaintTrack(boolean),;1
setPaper,1,1,Sets the Paper object for this PageFormat.,;java.awt.print.PageFormat.setPaper(Paper),;1
setParagraphInsets,1,1,Sets the insets from the paragraph attributes specified in the given attributes.,;javax.swing.text.CompositeView.setParagraphInsets(AttributeSet),;1
setParameterBlock,1,1,"Change the current ParameterBlock of the operation, allowing editing of image rendering chains. The effects of such a change will be visible when a new rendering is created from this RenderableImageOp or any dependent RenderableImageOp.",;java.awt.image.renderable.RenderableImageOp.setParameterBlock(ParameterBlock),;1
setParseBigDecimal,1,1,"Sets whether the parse(java.lang.String, java.text.ParsePosition) method returns BigDecimal.",;java.text.DecimalFormat.setParseBigDecimal(boolean),;1
setParseIntegerOnly,1,1,Sets whether or not numbers should be parsed as integers only.,;java.text.NumberFormat.setParseIntegerOnly(boolean),;1
setParser,1,1,"Sets the parser that is used by the methods that insert html into the existing document, such as setInnerHTML, and setOuterHTML. HTMLEditorKit.createDefaultDocument will set the parser for you. If you create an HTMLDocument by hand, be sure and set the parser accordingly.",;javax.swing.text.html.HTMLDocument.setParser(HTMLEditorKit.Parser),;1
setPartialReturn,1,1,"Flag to indicate that partial returns are valid. If the flag is true, an implementation of the interface method Document.getText(position,length,Segment) should return as much text as possible without making a copy. The default state of the flag is false which will cause Document.getText(position,length,Segment) to provide the same return behavior it always had, which may or may not make a copy of the text depending upon the request.",;javax.swing.text.Segment.setPartialReturn(boolean),;1
setPath,1,1,"Specifies a path for the cookie to which the client should return the cookie. The cookie is visible to all the pages in the directory you specify, and all the pages in that directory's subdirectories. A cookie's path must include the servlet that set the cookie, for example, /catalog, which makes the cookie visible to all directories on the server under /catalog. Consult RFC 2965 (available on the Internet) for more information on setting path names for cookies.",;java.net.HttpCookie.setPath(String),;1
setPathToNames,1,1,"Sets the pathToNames criterion. The X509Certificate must not include name constraints that would prohibit building a path to the specified names. This method allows the caller to specify, with a single method call, the complete set of names which the X509Certificates's name constraints must permit. The specified value replaces the previous value for the pathToNames criterion. This constraint is useful when building a certification path forward (from the target toward the trust anchor. If a partial path has been built, any candidate certificate must not include name constraints that would prohibit building a path to any of the names in the partial path. The names parameter (if not null) is a Collection with one entry for each name to be included in the pathToNames criterion. Each entry is a List whose first entry is an Integer (the name type, 0-8) and whose second entry is a String or a byte array (the name, in string or ASN.1 DER encoded form, respectively). There can be multiple names of the same type. If null is supplied as the value for this argument, no pathToNames check will be performed. Each name in the Collection may be specified either as a String or as an ASN.1 encoded byte array. For more details about the formats used, see addPathToName(int type, String name) and addPathToName(int type, byte [] name). Note: for distinguished names, specify the byte array form instead of the String form. See the note in addPathToName(int, String) for more information. Note that the names parameter can contain duplicate names (same name and name type), but they may be removed from the Collection of names returned by the getPathToNames method. Note that a deep copy is performed on the Collection to protect against subsequent modifications.",;java.security.cert.X509CertSelector.setPathToNames(Collection&lt;List&lt;?&gt;&gt;),;1
setPatternSeparator,1,1,Sets the character used to separate positive and negative subpatterns in a pattern.,;java.text.DecimalFormatSymbols.setPatternSeparator(char),;1
setPendingCount,1,1,Sets the pending count to the given value.,;java.util.concurrent.CountedCompleter.setPendingCount(int),;1
setPercent,1,1,"Sets the character used for percent sign. Different for Arabic, etc.",;java.text.DecimalFormatSymbols.setPercent(char),;1
setPerMill,1,1,"Sets the character used for per mille sign. Different for Arabic, etc.",;java.text.DecimalFormatSymbols.setPerMill(char),;1
setPersistenceDelegate,1,1,Associates the specified persistence delegate with the given type.,";java.beans.Encoder.setPersistenceDelegate(Class&lt;?&gt;,PersistenceDelegate)",;1
setPlaceholder,1,1,Sets the string to use if the value does not completely fill in the mask. A null value implies the placeholder char should be used.,;javax.swing.text.MaskFormatter.setPlaceholder(String),;1
setPlaceholderCharacter,1,1,"Sets the character to use in place of characters that are not present in the value, ie the user must fill them in. The default value is a space. This is only applicable if the placeholder string has not been specified, or does not completely fill in the mask.",;javax.swing.text.MaskFormatter.setPlaceholderCharacter(char),;1
setPolicyMappingInhibited,1,1,"Sets the PolicyMappingInhibited flag. If this flag is true, policy mapping is inhibited. By default, policy mapping is not inhibited (the flag is false).",;java.security.cert.PKIXParameters.setPolicyMappingInhibited(boolean),;1
setPolicyQualifiersRejected,1,1,"Sets the PolicyQualifiersRejected flag. If this flag is true, certificates that include policy qualifiers in a certificate policies extension that is marked critical are rejected. If the flag is false, certificates are not rejected on this basis. When a PKIXParameters object is created, this flag is set to true. This setting reflects the most common (and simplest) strategy for processing policy qualifiers. Applications that want to use a more sophisticated policy must set this flag to false. Note that the PKIX certification path validation algorithm specifies that any policy qualifier in a certificate policies extension that is marked critical must be processed and validated. Otherwise the certification path must be rejected. If the policyQualifiersRejected flag is set to false, it is up to the application to validate all policy qualifiers in this manner in order to be PKIX compliant.",;java.security.cert.PKIXParameters.setPolicyQualifiersRejected(boolean),;1
setPopupMenu,1,1,"Sets the popup menu for this TrayIcon. If popup is null, no popup menu will be associated with this TrayIcon. Note that this popup must not be added to any parent before or after it is set on the tray icon. If you add it to some parent, the popup may be removed from that parent. The popup can be set on one TrayIcon only. Setting the same popup on multiple TrayIcons will cause an IllegalArgumentException. Note: Some platforms may not support showing the user-specified popup menu component when the user right-clicks the tray icon. In this situation, either no menu will be displayed or, on some systems, a native version of the menu may be displayed.",;java.awt.TrayIcon.setPopupMenu(PopupMenu),;1
setPopupMenuVisible,1,1,"Sets the visibility of the menu's popup. If the menu is not enabled, this method will have no effect.",;javax.swing.JMenu.setPopupMenuVisible(boolean),;1
setPort,1,1,Sets the port number on the remote host to which this datagram is being sent.,;java.net.DatagramPacket.setPort(int),;1
setPortlist,1,1,"Specify the portlist of the cookie, which restricts the port(s) to which a cookie may be sent back in a Cookie header.",;java.net.HttpCookie.setPortlist(String),;1
setPositivePrefix,1,1,"Set the positive prefix. Examples: +123, $123, sFr123",;java.text.DecimalFormat.setPositivePrefix(String),;1
setPositiveSuffix,1,1,Set the positive suffix. Example: 123%,;java.text.DecimalFormat.setPositiveSuffix(String),;1
setPosixFilePermissions,1,1,Sets a file's POSIX permissions. The path parameter is associated with a FileSystem that supports the PosixFileAttributeView. This attribute view provides access to file attributes commonly associated with files on file systems used by operating systems that implement the Portable Operating System Interface (POSIX) family of standards.,";java.nio.file.Files.setPosixFilePermissions(Path,Set&lt;PosixFilePermission&gt;)",;1
setPrecision,1,1,Sets the total number of decimal digits in a value stored in the designated column to the given number.,";javax.sql.rowset.RowSetMetaDataImpl.setPrecision(int,int)",;1
setPreferred,1,1,The "preferred" flag is used to identify features that are particularly important for presenting to humans.,;java.beans.FeatureDescriptor.setPreferred(boolean),;1
setPreferredMinSize,1,1,Sets the preferred minimum size.,;javax.swing.plaf.basic.BasicTreeUI.setPreferredMinSize(Dimension),;1
setPreferredScrollableViewportSize,1,1,Sets the preferred size of the viewport for this table.,;javax.swing.JTable.setPreferredScrollableViewportSize(Dimension),;1
setPreferredWidth,1,1,"Sets this column's preferred width to preferredWidth. If preferredWidth exceeds the minimum or maximum width, it is adjusted to the appropriate limiting value. For details on how the widths of columns in the JTable (and JTableHeader) are calculated from the preferredWidth, see the doLayout method in JTable.",;javax.swing.table.TableColumn.setPreferredWidth(int),;1
setPrefix,1,1,"Does nothing, since namespaces are not supported.",;javax.imageio.metadata.IIOMetadataNode.setPrefix(String),;1
setPreservesUnknownTags,1,1,"Determines how unknown tags are handled by the parser. If set to true, unknown tags are put in the model, otherwise they are dropped.",;javax.swing.text.html.HTMLDocument.setPreservesUnknownTags(boolean),;1
setPressedIcon,1,1,Sets the pressed icon for the button.,;javax.swing.AbstractButton.setPressedIcon(Icon),;1
setPreviewPanel,1,1,Sets the current preview panel. This will fire a PropertyChangeEvent for the property named "previewPanel".,;javax.swing.JColorChooser.setPreviewPanel(JComponent),;1
setPreviousBounds,1,1,Stores the bounds of the component just before a maximize call.,";javax.swing.DefaultDesktopManager.setPreviousBounds(JInternalFrame,Rectangle)",;1
setPrimaryType,1,1,Set the primary type for this object to the given String.,;javax.activation.MimeType.setPrimaryType(String),;1
setPrincipal,1,1,Sets the principal component of this builder.,;java.nio.file.attribute.AclEntry.Builder.setPrincipal(UserPrincipal),;1
setPrinter,1,1,Specifies the destination printer for jobs using these attributes. Default is platform-dependent and implementation-defined.,;java.awt.JobAttributes.setPrinter(String),;1
setPrinterResolutionToDefault,1,1,Sets the printer resolution for pages using these attributes to the default. The default is 72 dpi for both the feed and cross feed resolutions.,;java.awt.PageAttributes.setPrinterResolutionToDefault(),;1
setPrintQualityToDefault,1,1,Sets the print quality for pages using these attributes to the default. The default print quality is normal.,;java.awt.PageAttributes.setPrintQualityToDefault(),;1
setPrintService,1,1,Associate this PrinterJob with a new PrintService. This method is overridden by subclasses which support specifying a Print Service. Throws PrinterException if the specified service cannot support the Pageable and Printable interfaces necessary to support 2D printing.,;java.awt.print.PrinterJob.setPrintService(PrintService),;1
setPriority,1,1,"Changes the priority of this thread. First the checkAccess method of this thread is called with no arguments. This may result in throwing a SecurityException. Otherwise, the priority of this thread is set to the smaller of the specified newPriority and the maximum permitted priority of the thread's thread group.",;java.lang.Thread.setPriority(int),;1
setPrivacy,1,1,Sets the privacy state.,;org.ietf.jgss.MessageProp.setPrivacy(boolean),;1
setPrivateKeyValid,1,1,"Sets the privateKeyValid criterion. The specified date must fall within the private key validity period for the X509Certificate. If null, no privateKeyValid check will be done. Note that the Date supplied here is cloned to protect against subsequent modifications.",;java.security.cert.X509CertSelector.setPrivateKeyValid(Date),;1
setProblemType,1,1,Sets problem type.,;javax.management.relation.RoleUnresolved.setProblemType(int),;1
setPropagatedFrom,1,1,Sets the BeanContext from which this event was propagated.,;java.beans.beancontext.BeanContextEvent.setPropagatedFrom(BeanContext),;1
setPropagationId,1,1,Sets the propagationId object for the event.,;java.beans.PropertyChangeEvent.setPropagationId(Object),;1
setPropertyEditorClass,1,1,"Normally PropertyEditors will be found using the PropertyEditorManager. However if for some reason you want to associate a particular PropertyEditor with a given property, then you can do it with this method.",;java.beans.PropertyDescriptor.setPropertyEditorClass(Class&lt;?&gt;),;1
setProtocols,1,1,Sets the array of protocols.,;javax.net.ssl.SSLParameters.setProtocols(String[]),;1
setPrototypeCellValue,1,1,"Sets the prototypeCellValue property, and then (if the new value is non-null), computes the fixedCellWidth and fixedCellHeight properties by requesting the cell renderer component for the given value (and index 0) from the cell renderer, and using that component's preferred size. This method is useful when the list is too long to allow the ListUI to compute the width/height of each cell, and there is a single cell value that is known to occupy as much space as any of the others, a so-called prototype. While all three of the prototypeCellValue, fixedCellHeight, and fixedCellWidth properties may be modified by this method, PropertyChangeEvent notifications are only sent when the prototypeCellValue property changes. To see an example which sets this property, see the class description above. The default value of this property is null. This is a JavaBeans bound property.",;javax.swing.JList.setPrototypeCellValue(E),;1
setPrototypeDisplayValue,1,1,"Sets the prototype display value used to calculate the size of the display for the UI portion. If a prototype display value is specified, the preferred size of the combo box is calculated by configuring the renderer with the prototype display value and obtaining its preferred size. Specifying the preferred display value is often useful when the combo box will be displaying large amounts of data. If no prototype display value has been specified, the renderer must be configured for each value from the model and its preferred size obtained, which can be relatively expensive.",;javax.swing.JComboBox.setPrototypeDisplayValue(E),;1
setPublicKey,1,1,Deprecated.,;java.security.Identity.setPublicKey(PublicKey),;1
setPurgeFlag,1,1,"Sets the flag to indicate if when a notification is received for the unregistration of an MBean referenced in a relation, if an immediate ""purge"" of the relations (look for the relations no longer valid) has to be performed , or if that will be performed only when the purgeRelations method will be explicitly called. true is immediate purge.",;javax.management.relation.RelationService.setPurgeFlag(boolean),;1
setPushLevel,1,1,"Set the pushLevel. After a LogRecord is copied into our internal buffer, if its level is greater than or equal to the pushLevel, then push will be called.",;java.util.logging.MemoryHandler.setPushLevel(Level),;1
setQName,1,1,Set the qualified name of a specific attribute.,";org.xml.sax.helpers.AttributesImpl.setQName(int,String)",;1
setQOP,1,1,Sets the QOP value.,;org.ietf.jgss.MessageProp.setQOP(int),;1
setQueryTimeout,1,1,"Sets to the given number the maximum number of seconds the driver will wait for a query to execute. If the limit is exceeded, an SQLException is thrown.",;javax.sql.rowset.BaseRowSet.setQueryTimeout(int),;1
setRangeProperties,1,1,"Sets all of the BoundedRangeModel properties after forcing the arguments to obey the usual constraints: minimum &lt;= value &lt;= value+extent &lt;= maximum At most, one ChangeEvent is generated.",";javax.swing.DefaultBoundedRangeModel.setRangeProperties(int,int,int,int,boolean)",;1
setRaster,1,1,Sets the current Raster. The value is stored by reference. Any existing RenderedImage is discarded.,;javax.imageio.IIOImage.setRaster(Raster),;1
setRawContent,1,1,Sets the content of this attachment part to that contained by the InputStream content and sets the value of the Content-Type header to the value contained in contentType. A subsequent call to getSize() may not be an exact measure of the content size.,";javax.xml.soap.AttachmentPart.setRawContent(InputStream,String)",;1
setRawContentBytes,1,1,Sets the content of this attachment part to that contained by the byte[] array content and sets the value of the Content-Type header to the value contained in contentType.,";javax.xml.soap.AttachmentPart.setRawContentBytes(byte[],int,int,String)",;1
setReadMethod,1,1,Sets the method that should be used to read the property value.,;java.beans.PropertyDescriptor.setReadMethod(Method),;1
setReadTimeout,1,1,"Sets the read timeout to a specified timeout, in milliseconds. A non-zero value specifies the timeout when reading from Input stream when a connection is established to a resource. If the timeout expires before there is data available for read, a java.net.SocketTimeoutException is raised. A timeout of zero is interpreted as an infinite timeout. Some non-standard implementation of this method ignores the specified timeout. To see the read timeout set, please call getReadTimeout().",;java.net.URLConnection.setReadTimeout(int),;1
setRegion,1,1,"Sets the region. If region is null or the empty string, the region in this Builder is removed. Otherwise, the region must be well-formed or an exception is thrown. The typical region value is a two-letter ISO 3166 code or a three-digit UN M.49 area code. The country value in the Locale created by the Builder is always normalized to upper case.",;java.util.Locale.Builder.setRegion(String),;1
setRejectedExecutionHandler,1,1,Sets a new handler for unexecutable tasks.,;java.util.concurrent.ThreadPoolExecutor.setRejectedExecutionHandler(RejectedExecutionHandler),;1
setRelationServiceManagementFlag,1,1,Description copied from interface:RelationSupportMBean,;javax.management.relation.RelationSupport.setRelationServiceManagementFlag(Boolean),;1
setRelative,1,1,Sets whether the name of this binding is relative to the target context (which is named by the first parameter of the list() method).,;javax.naming.NameClassPair.setRelative(boolean),;1
setRemainingName,1,1,Sets the remaining name field of this result to name. A copy of name is made so that modifying the copy within this ResolveResult does not affect name and vice versa.,;javax.naming.spi.ResolveResult.setRemainingName(Name),;1
setRemoveOnCancelPolicy,1,1,Sets the policy on whether cancelled tasks should be immediately removed from the work queue at time of cancellation. This value is by default false.,;java.util.concurrent.ScheduledThreadPoolExecutor.setRemoveOnCancelPolicy(boolean),;1
setRenderContext,1,1,Sets a new RenderContext to use for the next startProduction() call.,;java.awt.image.renderable.RenderableImageProducer.setRenderContext(RenderContext),;1
setRenderedImage,1,1,Sets the current RenderedImage. The value is stored by reference. Any existing Raster is discarded.,;javax.imageio.IIOImage.setRenderedImage(RenderedImage),;1
setRenderer,1,1,"Sets the renderer that paints the list items and the item selected from the list in the JComboBox field. The renderer is used if the JComboBox is not editable. If it is editable, the editor is used to render and edit the selected item. The default renderer displays a string or an icon. Other renderers can handle graphic images and composite items. To display the selected item, aRenderer.getListCellRendererComponent is called, passing the list object and an index of -1.",;javax.swing.JComboBox.setRenderer(ListCellRenderer&lt;?),;1
setRenderingHint,1,1,Sets the value of a single preference for the rendering algorithms. Hint categories include controls for rendering quality and overall time/quality trade-off in the rendering process. Refer to the RenderingHints class for definitions of some common keys and values.,";java.awt.Graphics2D.setRenderingHint(RenderingHints.Key,Object)",;1
setReorderingAllowed,1,1,Sets whether the user can drag column headers to reorder columns.,;javax.swing.table.JTableHeader.setReorderingAllowed(boolean),;1
setRepeats,1,1,"If flag is false, instructs the Timer to send only one action event to its listeners.",;javax.swing.Timer.setRepeats(boolean),;1
setRequestControls,1,1,Description copied from interface:LdapContext,;javax.naming.ldap.InitialLdapContext.setRequestControls(Control[]),;1
setRequestFocusEnabled,1,1,"Provides a hint as to whether or not this JComponent should get focus. This is only a hint, and it is up to consumers that are requesting focus to honor this property. This is typically honored for mouse operations, but not keyboard operations. For example, look and feels could verify this property is true before requesting focus during a mouse operation. This would often times be used if you did not want a mouse press on a JComponent to steal focus, but did want the JComponent to be traversable via the keyboard. If you do not want this JComponent focusable at all, use the setFocusable method instead. Please see How to Use the Focus Subsystem, a section in The Java Tutorial, for more information.",;javax.swing.JComponent.setRequestFocusEnabled(boolean),;1
setRequestProperty,1,1,"Sets the general request property. If a property with the key already exists, overwrite its value with the new value. NOTE: HTTP requires all request properties which can legally have multiple instances with the same key to use a comma-separated list syntax which enables multiple properties to be appended into a single property.",";java.net.URLConnection.setRequestProperty(String,String)",;1
setReshowDelay,1,1,"Used to specify the amount of time before the user has to wait initialDelay milliseconds before a tooltip will be shown. That is, if the tooltip is hidden, and the user moves into a region of the same Component that has a valid tooltip within milliseconds milliseconds the tooltip will immediately be shown. Otherwise, if the user moves into a region with a valid tooltip after milliseconds milliseconds, the user will have to wait an additional initialDelay milliseconds before the tooltip is shown again.",;javax.swing.ToolTipManager.setReshowDelay(int),;1
setResizeWeight,1,1,"Specifies how to distribute extra space when the size of the split pane changes. A value of 0, the default, indicates the right/bottom component gets all the extra space (the left/top component acts fixed), where as a value of 1 specifies the left/top component gets all the extra space (the right/bottom component acts fixed). Specifically, the left/top component gets (weight * diff) extra space and the right/bottom component gets (1 - weight) * diff extra space.",;javax.swing.JSplitPane.setResizeWeight(double),;1
setResizingAllowed,1,1,Sets whether the user can resize columns by dragging between headers.,;javax.swing.table.JTableHeader.setResizingAllowed(boolean),;1
setResizingColumn,1,1,"Sets the header's resizingColumn to aColumn. Application code will not use this method explicitly, it is used internally by the column sizing mechanism.",;javax.swing.table.JTableHeader.setResizingColumn(TableColumn),;1
setResolvedObj,1,1,Sets the resolved Object field of this result to obj.,;javax.naming.spi.ResolveResult.setResolvedObj(Object),;1
setResolveParent,1,1,Sets the resolving parent.,;javax.swing.text.SimpleAttributeSet.setResolveParent(AttributeSet),;1
setResourceBaseName,1,1,"Sets a new base name for locating ResourceBundles containing descriptions of elements and attributes for this format. Prior to the first time this method is called, the base name will be equal to this.getClass().getName() + ""Resources"".",;javax.imageio.metadata.IIOMetadataFormatImpl.setResourceBaseName(String),;1
setResourceBundleName,1,1,Set the localization resource bundle name.,;java.util.logging.LogRecord.setResourceBundleName(String),;1
setReturningAttributes,1,1,Specifies the attributes that will be returned as part of the search. null indicates that all attributes will be returned. An empty array indicates no attributes are returned.,;javax.naming.directory.SearchControls.setReturningAttributes(String[]),;1
setReturningObjFlag,1,1,"Enables/disables returning objects returned as part of the result. If disabled, only the name and class of the object is returned. If enabled, the object will be returned.",;javax.naming.directory.SearchControls.setReturningObjFlag(boolean),;1
setRevocationEnabled,1,1,"Sets the RevocationEnabled flag. If this flag is true, the default revocation checking mechanism of the underlying PKIX service provider will be used. If this flag is false, the default revocation checking mechanism will be disabled (not used). When a PKIXParameters object is created, this flag is set to true. This setting reflects the most common strategy for checking revocation, since each service provider must support revocation checking to be PKIX compliant. Sophisticated applications should set this flag to false when it is not practical to use a PKIX service provider's default revocation checking mechanism or when an alternative revocation checking mechanism is to be substituted (by also calling the addCertPathChecker or setCertPathCheckers methods).",;java.security.cert.PKIXParameters.setRevocationEnabled(boolean),;1
setRightComponent,1,1,Sets the component to the right (or below) the divider.,;javax.swing.JSplitPane.setRightComponent(Component),;1
setRightIndent,1,1,Sets right indent.,";javax.swing.text.StyleConstants.setRightIndent(MutableAttributeSet,float)",;1
setRightInset,1,1,Set the right part of the margin around the view.,;javax.swing.text.AsyncBoxView.setRightInset(float),;1
setRolesUnresolved,1,1,Sets list of roles unsuccessfully accessed.,;javax.management.relation.RoleResult.setRolesUnresolved(RoleUnresolvedList),;1
setRolloverBorders,1,1,Sets the flag for enabling rollover borders on the toolbar and it will also install the appropriate border depending on the state of the flag.,;javax.swing.plaf.basic.BasicToolBarUI.setRolloverBorders(boolean),;1
setRolloverEnabled,1,1,"Sets the rolloverEnabled property, which must be true for rollover effects to occur. The default value for the rolloverEnabled property is false. Some look and feels might not implement rollover effects; they will ignore this property.",;javax.swing.AbstractButton.setRolloverEnabled(boolean),;1
setRolloverIcon,1,1,Sets the rollover icon for the button.,;javax.swing.AbstractButton.setRolloverIcon(Icon),;1
setRolloverSelectedIcon,1,1,Sets the rollover selected icon for the button.,;javax.swing.AbstractButton.setRolloverSelectedIcon(Icon),;1
setRoot,1,1,"Sets the root to root. A null root implies the tree is to display nothing, and is legal.",;javax.swing.tree.DefaultTreeModel.setRoot(TreeNode),;1
setRootFrame,1,1,Sets the frame to use for class methods in which a frame is not provided. Note: It is recommended that rather than using this method you supply a valid parent.,;javax.swing.JOptionPane.setRootFrame(Frame),;1
setRowCount,1,1,"Sets the number of rows in the model. If the new size is greater than the current size, new rows are added to the end of the model If the new size is less than the current size, all rows at index rowCount and greater are discarded.",;javax.swing.table.DefaultTableModel.setRowCount(int),;1
setRowFilter,1,1,"Sets the filter that determines which rows, if any, should be hidden from the view. The filter is applied before sorting. A value of null indicates all values from the model should be included. RowFilter's include method is passed an Entry that wraps the underlying model. The number of columns in the Entry corresponds to the number of columns in the ModelWrapper. The identifier comes from the ModelWrapper as well. This method triggers a sort.",";javax.swing.DefaultRowSorter.setRowFilter(RowFilter&lt;?,?)",;1
setRowHeader,1,1,"Removes the old rowHeader, if it exists; if the new rowHeader isn't null, syncs the y coordinate of its viewPosition with the viewport (if there is one) and then adds it to the scroll pane. Most applications will find it more convenient to use setRowHeaderView to add a row header component and its viewport to the scroll pane.",;javax.swing.JScrollPane.setRowHeader(JViewport),;1
setRowHeaderView,1,1,"Creates a row-header viewport if necessary, sets its view and then adds the row-header viewport to the scrollpane. For example: JScrollPane scrollpane = new JScrollPane(); scrollpane.setViewportView(myBigComponentToScroll); scrollpane.setRowHeaderView(myBigComponentsRowHeader);",;javax.swing.JScrollPane.setRowHeaderView(Component),;1
setRowMargin,1,1,Sets the amount of empty space between cells in adjacent rows.,;javax.swing.JTable.setRowMargin(int),;1
setRowSelectionAllowed,1,1,Sets whether the rows in this model can be selected.,;javax.swing.JTable.setRowSelectionAllowed(boolean),;1
setRowSelectionInterval,1,1,"Selects the rows from index0 to index1, inclusive.",";javax.swing.JTable.setRowSelectionInterval(int,int)",;1
setRowSorter,1,1,"Sets the RowSorter. RowSorter is used to provide sorting and filtering to a JTable. This method clears the selection and resets any variable row heights. This method fires a PropertyChangeEvent when appropriate, with the property name ""rowSorter"". For backward-compatibility, this method fires an additional event with the property name ""sorter"". If the underlying model of the RowSorter differs from that of this JTable undefined behavior will result.",;javax.swing.JTable.setRowSorter(RowSorter&lt;?),;1
setSchemaLocation,1,1,Convenience method for setting the schemaLocation.,;javax.xml.bind.helpers.AbstractMarshallerImpl.setSchemaLocation(String),;1
setSchemaName,1,1,"Sets the designated column's table's schema name, if any, to schemaName. If schemaName is null, the schema name is set to an empty string ("""").",";javax.sql.rowset.RowSetMetaDataImpl.setSchemaName(int,String)",;1
setScript,1,1,"Sets the script. If script is null or the empty string, the script in this Builder is removed. Otherwise, the script must be well-formed or an exception is thrown. The typical script value is a four-letter script code as defined by ISO 15924.",;java.util.Locale.Builder.setScript(String),;1
setScrollMode,1,1,Used to control the method of scrolling the viewport contents. You may want to change this mode to get maximum performance for your use case.,;javax.swing.JViewport.setScrollMode(int),;1
setScrollOffset,1,1,"Sets the scroll offset, in pixels.",;javax.swing.JTextField.setScrollOffset(int),;1
setScrollsOnExpand,1,1,"Sets the scrollsOnExpand property, which determines whether the tree might scroll to show previously hidden children. If this property is true (the default), when a node expands the tree can use scrolling to make the maximum possible number of the node's descendants visible. In some look and feels, trees might not need to scroll when expanded; those look and feels will ignore this property. This is a bound property.",;javax.swing.JTree.setScrollsOnExpand(boolean),;1
setSearchable,1,1,Sets whether a value stored in the designated column can be used in a WHERE clause to the given boolean value.,";javax.sql.rowset.RowSetMetaDataImpl.setSearchable(int,boolean)",;1
setSearchScope,1,1,"Sets the search scope to one of: OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE.",;javax.naming.directory.SearchControls.setSearchScope(int),;1
setSecond,1,1,Set seconds.Unset this field by invoking the setter with a parameter value of DatatypeConstants.FIELD_UNDEFINED.,;javax.xml.datatype.XMLGregorianCalendar.setSecond(int),;1
setSecure,1,1,"Indicates whether the cookie should only be sent using a secure protocol, such as HTTPS or SSL. The default value is false.",;java.net.HttpCookie.setSecure(boolean),;1
setSecurityManager,1,1,"Sets the System security. If there is a security manager already installed, this method first calls the security manager's checkPermission method with a RuntimePermission(""setSecurityManager"") permission to ensure it's ok to replace the existing security manager. This may result in throwing a SecurityException. Otherwise, the argument is established as the current security manager. If the argument is null and no security manager has been established, then no action is taken and the method simply returns.",;java.lang.System.setSecurityManager(SecurityManager),;1
setSelectedCheckbox,1,1,"Sets the currently selected check box in this group to be the specified check box. This method sets the state of that check box to ""on"" and sets all other check boxes in the group to be off. If the check box argument is null, all check boxes in this check box group are deselected. If the check box argument belongs to a different check box group, this method does nothing.",;java.awt.CheckboxGroup.setSelectedCheckbox(Checkbox),;1
setSelectedColor,1,1,"Sets the selected color to color. Note that setting the color to null is undefined and may have unpredictable results. This method fires a state changed event if it sets the current color to a new non-null color; if the new color is the same as the current color, no event is fired.",;javax.swing.colorchooser.DefaultColorSelectionModel.setSelectedColor(Color),;1
setSelectedComponent,1,1,Sets the selected component for this tabbedpane. This will automatically set the selectedIndex to the index corresponding to the specified component.,;javax.swing.JTabbedPane.setSelectedComponent(Component),;1
setSelectedFile,1,1,"Sets the selected file. If the file's parent directory is not the current directory, changes the current directory to be the file's parent directory.",;javax.swing.JFileChooser.setSelectedFile(File),;1
setSelectedFiles,1,1,Sets the list of selected files if the file chooser is set to allow multiple selection.,;javax.swing.JFileChooser.setSelectedFiles(File[]),;1
setSelectedFrame,1,1,Sets the currently active JInternalFrame in this JDesktopPane. This method is used to bridge the package gap between JDesktopPane and the platform implementation code and should not be called directly. To visually select the frame the client must call JInternalFrame.setSelected(true) to activate the frame.,;javax.swing.JDesktopPane.setSelectedFrame(JInternalFrame),;1
setSelectedIcon,1,1,Sets the selected icon for the button.,;javax.swing.AbstractButton.setSelectedIcon(Icon),;1
setSelectedIndexes,1,1,Set the selected choices.,;javax.security.auth.callback.ChoiceCallback.setSelectedIndexes(int[]),;1
setSelectedIndices,1,1,Changes the selection to be the set of indices specified by the given array. Indices greater than or equal to the model size are ignored. This is a convenience method that clears the selection and then uses addSelectionInterval on the selection model to add the indices. Refer to the documentation of the selection model class being used for details on how values less than 0 are handled.,;javax.swing.JList.setSelectedIndices(int[]),;1
setSelectedPath,1,1,Changes the selection in the menu hierarchy. The elements in the array are sorted in order from the root menu element to the currently selected menu element. Note that this method is public but is used by the look and feel engine and should not be called by client applications.,;javax.swing.MenuSelectionManager.setSelectedPath(MenuElement[]),;1
setSelectedTextColor,1,1,Sets the current color used to render the selected text. Setting the color to null is the same as Color.black. Setting the color results in a PropertyChange event ("selectedTextColor") being fired.,;javax.swing.text.JTextComponent.setSelectedTextColor(Color),;1
setSelectedValue,1,1,Selects the specified object from the list.,";javax.swing.JList.setSelectedValue(Object,boolean)",;1
setSelection,1,1,Sets the selected state.,;javax.swing.text.html.Option.setSelection(boolean),;1
setSelectionColor,1,1,Sets the current color used to render the selection. Setting the color to null is the same as setting Color.white. Setting the color results in a PropertyChange event ("selectionColor").,;javax.swing.text.JTextComponent.setSelectionColor(Color),;1
setSelectionRow,1,1,Selects the node at the specified row in the display.,;javax.swing.JTree.setSelectionRow(int),;1
setSelectionRows,1,1,"Selects the nodes corresponding to each of the specified rows in the display. If a particular element of rows is &lt; 0 or &gt;= getRowCount, it will be ignored. If none of the elements in rows are valid rows, the selection will be cleared. That is it will be as if clearSelection was invoked.",;javax.swing.JTree.setSelectionRows(int[]),;1
setSelectionValues,1,1,"Sets the input selection values for a pane that provides the user with a list of items to choose from. (The UI provides a widget for choosing one of the values.) A null value implies the user can input whatever they wish, usually by means of a JTextField. Sets wantsInput to true. Use setInitialSelectionValue to specify the initially-chosen value. After the pane as been enabled, inputValue is set to the value the user has selected.",;javax.swing.JOptionPane.setSelectionValues(Object[]),;1
setSelectionVisible,1,1,Changes the selection visibility.,;javax.swing.text.DefaultCaret.setSelectionVisible(boolean),;1
setSendPastNotifications,1,1,Sets the flag indicating whether the timer sends past notifications or not. The default value of the past notifications sending on/off flag is false.,;javax.management.timer.Timer.setSendPastNotifications(boolean),;1
setSeparatorSize,1,1,Sets the size of the separator.,;javax.swing.JToolBar.Separator.setSeparatorSize(Dimension),;1
setSerialNumber,1,1,"Sets the serialNumber criterion. The specified serial number must match the certificate serial number in the X509Certificate. If null, any certificate serial number will do.",;java.security.cert.X509CertSelector.setSerialNumber(BigInteger),;1
setServerNames,1,1,Sets the desired SNIServerNames of the Server Name Indication (SNI) parameter. This method is only useful to SSLSockets or SSLEngines operating in client mode. Note that the serverNames list is cloned to protect against subsequent modification.,;javax.net.ssl.SSLParameters.setServerNames(List&lt;SNIServerName&gt;),;1
setSeverity,1,1,Set the severity field of this event.,;javax.xml.bind.helpers.ValidationEventImpl.setSeverity(int),;1
setSharedInstance,1,1,Sets the PopupFactory that will be used to obtain Popups. This will throw an IllegalArgumentException if factory is null.,;javax.swing.PopupFactory.setSharedInstance(PopupFactory),;1
setShortcut,1,1,"Set the MenuShortcut object associated with this menu item. If a menu shortcut is already associated with this menu item, it is replaced.",;java.awt.MenuItem.setShortcut(MenuShortcut),;1
setShortDescription,1,1,You can associate a short descriptive string with a feature. Normally these descriptive strings should be less than about 40 characters.,;java.beans.FeatureDescriptor.setShortDescription(String),;1
setShortMonths,1,1,"Sets short month strings. For example: ""Jan"", ""Feb"", etc.",;java.text.DateFormatSymbols.setShortMonths(String[]),;1
setShortWeekdays,1,1,"Sets short weekday strings. For example: ""Sun"", ""Mon"", etc.",;java.text.DateFormatSymbols.setShortWeekdays(String[]),;1
setShowDeleted,1,1,"Sets the property showDeleted to the given boolean value, which determines whether rows marked for deletion appear in the set of current rows.",;javax.sql.rowset.BaseRowSet.setShowDeleted(boolean),;1
setShowDropLocation,1,1,"Sets whether or not the drop location should be visually indicated for the transfer - which must represent a drop. This is applicable to those components that automatically show the drop location when appropriate during a drag and drop operation). By default, the drop location is shown only when the TransferHandler has said it can accept the import represented by this TransferSupport. With this method you can force the drop location to always be shown, or always not be shown. This method is only for use with drag and drop transfers. Calling it when isDrop() is false results in an IllegalStateException.",;javax.swing.TransferHandler.TransferSupport.setShowDropLocation(boolean),;1
setShowGrid,1,1,Sets whether the table draws grid lines around cells. If showGrid is true it does; if it is false it doesn't. There is no getShowGrid method as this state is held in two variables -- showHorizontalLines and showVerticalLines -- each of which can be queried independently.,;javax.swing.JTable.setShowGrid(boolean),;1
setShowHorizontalLines,1,1,Sets whether the table draws horizontal lines between cells. If showHorizontalLines is true it does; if it is false it doesn't.,;javax.swing.JTable.setShowHorizontalLines(boolean),;1
setShowVerticalLines,1,1,Sets whether the table draws vertical lines between cells. If showVerticalLines is true it does; if it is false it doesn't.,;javax.swing.JTable.setShowVerticalLines(boolean),;1
setSides,1,1,"Specifies how consecutive pages should be imposed upon the sides of the print medium for jobs using these attributes. SidesType.ONE_SIDED imposes each consecutive page upon the same side of consecutive media sheets. This imposition is sometimes called simplex. SidesType.TWO_SIDED_LONG_EDGE imposes each consecutive pair of pages upon front and back sides of consecutive media sheets, such that the orientation of each pair of pages on the medium would be correct for the reader as if for binding on the long edge. This imposition is sometimes called duplex. SidesType.TWO_SIDED_SHORT_EDGE imposes each consecutive pair of pages upon front and back sides of consecutive media sheets, such that the orientation of each pair of pages on the medium would be correct for the reader as if for binding on the short edge. This imposition is sometimes called tumble. Not specifying this attribute is equivalent to specifying SidesType.ONE_SIDED.",;java.awt.JobAttributes.setSides(JobAttributes.SidesType),;1
setSidesToDefault,1,1,Sets how consecutive pages should be imposed upon the sides of the print medium for jobs using these attributes to the default. The default imposition is SidesType.ONE_SIDED.,;java.awt.JobAttributes.setSidesToDefault(),;1
setSigned,1,1,Sets whether a value stored in the designated column is a signed number to the given boolean.,";javax.sql.rowset.RowSetMetaDataImpl.setSigned(int,boolean)",;1
setSigners,1,1,Sets the signers of a class. This should be invoked after defining a class.,";java.lang.ClassLoader.setSigners(Class&lt;?&gt;,Object[])",;1
setSigProvider,1,1,"Sets the signature provider's name. The specified provider will be preferred when creating Signature objects. If null or not set, the first provider found supporting the algorithm will be used.",;java.security.cert.PKIXParameters.setSigProvider(String),;1
setSizes,1,1,"Resets this SizeSequence object, using the data in the sizes argument. This method reinitializes this object so that it contains as many entries as the sizes array. Each entry's size is initialized to the value of the corresponding item in sizes.",;javax.swing.SizeSequence.setSizes(int[]),;1
setSnapToTicks,1,1,"Specifying true makes the knob (and the data value it represents) resolve to the closest tick mark next to where the user positioned the knob. By default, this property is false.",;javax.swing.JSlider.setSnapToTicks(boolean),;1
setSNIMatchers,1,1,Sets the SNIMatchers of the Server Name Indication (SNI) parameter. This method is only useful to SSLSockets or SSLEngines operating in server mode. Note that the matchers collection is cloned to protect against subsequent modification.,;javax.net.ssl.SSLParameters.setSNIMatchers(Collection&lt;SNIMatcher&gt;),;1
setSocketAddress,1,1,Sets the SocketAddress (usually IP address + port number) of the remote host to which this datagram is being sent.,;java.net.DatagramPacket.setSocketAddress(SocketAddress),;1
setSocketImplFactory,1,1,"Sets the client socket implementation factory for the application. The factory can be specified only once. When an application creates a new client socket, the socket implementation factory's createSocketImpl method is called to create the actual socket implementation. Passing null to the method is a no-op unless the factory was already set. If there is a security manager, this method first calls the security manager's checkSetFactory method to ensure the operation is allowed. This could result in a SecurityException.",;java.net.Socket.setSocketImplFactory(SocketImplFactory),;1
setSoLinger,1,1,Enable/disable SO_LINGER with the specified linger time in seconds. The maximum timeout value is platform specific. The setting only affects socket close.,";java.net.Socket.setSoLinger(boolean,int)",;1
setSortable,1,1,Sets whether or not the specified column is sortable. The specified value is only checked when toggleSortOrder is invoked. It is still possible to sort on a column that has been marked as unsortable by directly setting the sort keys. The default is true.,";javax.swing.DefaultRowSorter.setSortable(int,boolean)",;1
setSortsOnUpdates,1,1,"If true, specifies that a sort should happen when the underlying model is updated (rowsUpdated is invoked). For example, if this is true and the user edits an entry the location of that item in the view may change. The default is false.",;javax.swing.DefaultRowSorter.setSortsOnUpdates(boolean),;1
setSourceActions,1,1,This method sets the permitted source drag action(s) for this Drag and Drop operation.,;java.awt.dnd.DragGestureRecognizer.setSourceActions(int),;1
setSourceBands,1,1,"Sets the indices of the source bands to be used. Duplicate indices are not allowed. A null value indicates that all source bands will be used. At the time of reading, an IllegalArgumentException will be thrown by the reader or writer if a value larger than the largest available source band index has been specified or if the number of source bands and destination bands to be used differ. The ImageReader.checkReadParamBandSettings method may be used to automate this test. Semantically, a copy is made of the array; changes to the array contents subsequent to this call have no effect on this IIOParam.",;javax.imageio.IIOParam.setSourceBands(int[]),;1
setSourceClassName,1,1,Set the name of the class that (allegedly) issued the logging request.,;java.util.logging.LogRecord.setSourceClassName(String),;1
setSourceMethodName,1,1,Set the name of the method that (allegedly) issued the logging request.,;java.util.logging.LogRecord.setSourceMethodName(String),;1
setSourceProgressivePasses,1,1,"Sets the range of progressive passes that will be decoded. Passes outside of this range will be ignored. A progressive pass is a re-encoding of the entire image, generally at progressively higher effective resolutions, but requiring greater transmission bandwidth. The most common use of progressive encoding is found in the JPEG format, where successive passes include more detailed representations of the high-frequency image content. The actual number of passes to be decoded is determined during decoding, based on the number of actual passes available in the stream. Thus if minPass + numPasses - 1 is larger than the index of the last available passes, decoding will end with that pass. A value of numPasses of Integer.MAX_VALUE indicates that all passes from minPass forward should be read. Otherwise, the index of the last pass (i.e., minPass + numPasses - 1) must not exceed Integer.MAX_VALUE. There is no unsetSourceProgressivePasses method; the same effect may be obtained by calling setSourceProgressivePasses(0, Integer.MAX_VALUE).",";javax.imageio.ImageReadParam.setSourceProgressivePasses(int,int)",;1
setSourceRegion,1,1,"Sets the source region of interest. The region of interest is described as a rectangle, with the upper-left corner of the source image as pixel (0, 0) and increasing values down and to the right. The actual number of pixels used will depend on the subsampling factors set by setSourceSubsampling. If subsampling has been set such that this number is zero, an IllegalStateException will be thrown. The source region of interest specified by this method will be clipped as needed to fit within the source bounds, as well as the destination offsets, width, and height at the time of actual I/O. A value of null for sourceRegion will remove any region specification, causing the entire image to be used.",;javax.imageio.IIOParam.setSourceRegion(Rectangle),;1
setSourceRenderSize,1,1,"If the image is able to be rendered at an arbitrary size, sets the source width and height to the supplied values. Note that the values returned from the getWidth and getHeight methods on ImageReader are not affected by this method; they will continue to return the default size for the image. Similarly, if the image is also tiled the tile width and height are given in terms of the default size. Typically, the width and height should be chosen such that the ratio of width to height closely approximates the aspect ratio of the image, as returned from ImageReader.getAspectRatio. If this plug-in does not allow the rendering size to be set, an UnsupportedOperationException will be thrown. To remove the render size setting, pass in a value of null for size.",;javax.imageio.ImageReadParam.setSourceRenderSize(Dimension),;1
setSources,1,1,Sets the entire Vector of sources to a given Vector.,;java.awt.image.renderable.ParameterBlock.setSources(Vector&lt;Object&gt;),;1
setSourceSubsampling,1,1,"Specifies a decimation subsampling to apply on I/O. The sourceXSubsampling and sourceYSubsampling parameters specify the subsampling period (i.e., the number of rows and columns to advance after every source pixel). Specifically, a period of 1 will use every row or column; a period of 2 will use every other row or column. The subsamplingXOffset and subsamplingYOffset parameters specify an offset from the region (or image) origin for the first subsampled pixel. Adjusting the origin of the subsample grid is useful for avoiding seams when subsampling a very large source image into destination regions that will be assembled into a complete subsampled image. Most users will want to simply leave these parameters at 0. The number of pixels and scanlines to be used are calculated as follows. The number of subsampled pixels in a scanline is given by truncate[(width - subsamplingXOffset + sourceXSubsampling - 1) / sourceXSubsampling]. If the region is such that this width is zero, an IllegalStateException is thrown. The number of scanlines to be used can be computed similarly. The ability to set the subsampling grid to start somewhere other than the source region origin is useful if the region is being used to create subsampled tiles of a large image, where the tile width and height are not multiples of the subsampling periods. If the subsampling grid does not remain consistent from tile to tile, there will be artifacts at the tile boundaries. By adjusting the subsampling grid offset for each tile to compensate, these artifacts can be avoided. The tradeoff is that in order to avoid these artifacts, the tiles are not all the same size. The grid offset to use in this case is given by: grid offset = [period - (region offset modulo period)] modulo period) If either sourceXSubsampling or sourceYSubsampling is 0 or negative, an IllegalArgumentException will be thrown. If either subsamplingXOffset or subsamplingYOffset is negative or greater than or equal to the corresponding period, an IllegalArgumentException will be thrown. There is no unsetSourceSubsampling method; simply call setSourceSubsampling(1, 1, 0, 0) to restore default values.",";javax.imageio.IIOParam.setSourceSubsampling(int,int,int,int)",;1
setSpaceAbove,1,1,Sets space above.,";javax.swing.text.StyleConstants.setSpaceAbove(MutableAttributeSet,float)",;1
setSpaceBelow,1,1,Sets space below.,";javax.swing.text.StyleConstants.setSpaceBelow(MutableAttributeSet,float)",;1
setSpecified,1,1,"Assign a value to the ""specified"" flag of a specific attribute. This is the only way this flag can be cleared, except clearing by initialization with the copy constructor.",";org.xml.sax.ext.Attributes2Impl.setSpecified(int,boolean)",;1
setSSLSocketFactory,1,1,Sets the SSLSocketFactory to be used when this instance creates sockets for secure https URL connections. New instances of this class inherit the default static SSLSocketFactory set by setDefaultSSLSocketFactory. Calls to this method replace this object's SSLSocketFactory.,;javax.net.ssl.HttpsURLConnection.setSSLSocketFactory(SSLSocketFactory),;1
setStackTrace,1,1,"Sets the stack trace elements that will be returned by getStackTrace() and printed by printStackTrace() and related methods. This method, which is designed for use by RPC frameworks and other advanced systems, allows the client to override the default stack trace that is either generated by fillInStackTrace() when a throwable is constructed or deserialized when a throwable is read from a serialization stream. If the stack trace of this Throwable is not writable, calling this method has no effect other than validating its argument.",;java.lang.Throwable.setStackTrace(StackTraceElement[]),;1
setStart,1,1,"Changes the lower limit for Dates in this sequence. If start is null, then there is no lower limit. No bounds checking is done here: the new start value may invalidate the (start &lt;= value &lt;= end) invariant enforced by the constructors. This is to simplify updating the model. Naturally one should ensure that the invariant is true before calling the nextValue, previousValue, or setValue methods. Typically this property is a Date however it's possible to use a Comparable with a compareTo method for Dates. For example start might be an instance of a class like this: MyStartDate implements Comparable { long t = 12345; public int compareTo(Date d) { return (t &lt; d.getTime() ? -1 : (t == d.getTime() ? 0 : 1)); } public int compareTo(Object o) { return compareTo((Date)o); } } Note that the above example will throw a ClassCastException if the Object passed to compareTo(Object) is not a Date. This method fires a ChangeEvent if the start has changed.",;javax.swing.SpinnerDateModel.setStart(Comparable),;1
setStartYear,1,1,Sets the daylight saving time starting year.,;java.util.SimpleTimeZone.setStartYear(int),;1
setStatus,1,1,Sets the HTTP status code for the response. This method must be called prior to calling getResponseBody().,;javax.xml.ws.spi.http.HttpExchange.setStatus(int),;1
setStepSize,1,1,Changes the size of the value change computed by the getNextValue and getPreviousValue methods. An IllegalArgumentException is thrown if stepSize is null. This method fires a ChangeEvent if the stepSize has changed.,;javax.swing.SpinnerNumberModel.setStepSize(Number),;1
setStrategy,1,1,"Sets the compression strategy to the specified value. If the compression strategy is changed, the next invocation of deflate will compress the input available so far with the old strategy (and may be flushed); the new strategy will take effect only after that invocation.",;java.util.zip.Deflater.setStrategy(int),;1
setStrength,1,1,Sets this Collator's strength property. The strength property determines the minimum level of difference considered significant during comparison. See the Collator class description for an example of use.,;java.text.Collator.setStrength(int),;1
setStringConverter,1,1,"Sets the object responsible for converting values from the model to strings. If non-null this is used to convert any object values, that do not have a registered Comparator, to strings.",;javax.swing.table.TableRowSorter.setStringConverter(TableStringConverter),;1
setStringPainted,1,1,"Sets the value of the stringPainted property, which determines whether the progress bar should render a progress string. The default is false, meaning no string is painted. Some look and feels might not support progress strings or might support them only when the progress bar is in determinate mode.",;javax.swing.JProgressBar.setStringPainted(boolean),;1
setStringToCompare,1,1,Sets the string to compare with the observed attribute common to all observed MBeans.,;javax.management.monitor.StringMonitor.setStringToCompare(String),;1
setStroke,1,1,Sets the Stroke for the Graphics2D context.,;java.awt.Graphics2D.setStroke(Stroke),;1
setStub,1,1,"Sets this applet's stub. This is done automatically by the system. If there is a security manager, its checkPermission method is called with the AWTPermission(""setAppletStub"") permission if a stub has already been set.",;java.applet.Applet.setStub(AppletStub),;1
setStyledDocument,1,1,"Associates the editor with a text document. The currently registered factory is used to build a view for the document, which gets displayed by the editor.",;javax.swing.JTextPane.setStyledDocument(StyledDocument),;1
setStyleFactory,1,1,Sets the SynthStyleFactory that the UI classes provided by synth will use to obtain a SynthStyle.,;javax.swing.plaf.synth.SynthLookAndFeel.setStyleFactory(SynthStyleFactory),;1
setStyleSheet,1,1,"Set the set of styles to be used to render the various HTML elements. These styles are specified in terms of CSS specifications. Each document produced by the kit will have a copy of the sheet which it can add the document specific styles to. By default, the StyleSheet specified is shared by all HTMLEditorKit instances. This should be reimplemented to provide a finer granularity if desired.",;javax.swing.text.html.HTMLEditorKit.setStyleSheet(StyleSheet),;1
setSubjectAlternativeNames,1,1,"Sets the subjectAlternativeNames criterion. The X509Certificate must contain all or at least one of the specified subjectAlternativeNames, depending on the value of the matchAllNames flag (see setMatchAllSubjectAltNames). This method allows the caller to specify, with a single method call, the complete set of subject alternative names for the subjectAlternativeNames criterion. The specified value replaces the previous value for the subjectAlternativeNames criterion. The names parameter (if not null) is a Collection with one entry for each name to be included in the subject alternative name criterion. Each entry is a List whose first entry is an Integer (the name type, 0-8) and whose second entry is a String or a byte array (the name, in string or ASN.1 DER encoded form, respectively). There can be multiple names of the same type. If null is supplied as the value for this argument, no subjectAlternativeNames check will be performed. Each subject alternative name in the Collection may be specified either as a String or as an ASN.1 encoded byte array. For more details about the formats used, see addSubjectAlternativeName(int type, String name) and addSubjectAlternativeName(int type, byte [] name). Note: for distinguished names, specify the byte array form instead of the String form. See the note in addSubjectAlternativeName(int, String) for more information. Note that the names parameter can contain duplicate names (same name and name type), but they may be removed from the Collection of names returned by the getSubjectAlternativeNames method. Note that a deep copy is performed on the Collection to protect against subsequent modifications.",;java.security.cert.X509CertSelector.setSubjectAlternativeNames(Collection&lt;List&lt;?&gt;&gt;),;1
setSubjectKeyIdentifier,1,1,"Sets the subjectKeyIdentifier criterion. The X509Certificate must contain a SubjectKeyIdentifier extension for which the contents of the extension matches the specified criterion value. If the criterion value is null, no subjectKeyIdentifier check will be done. If subjectKeyID is not null, it should contain a single DER encoded value corresponding to the contents of the extension value (not including the object identifier, criticality setting, and encapsulating OCTET STRING) for a SubjectKeyIdentifier extension. The ASN.1 notation for this structure follows. SubjectKeyIdentifier ::= KeyIdentifier KeyIdentifier ::= OCTET STRING Since the format of subject key identifiers is not mandated by any standard, subject key identifiers are not parsed by the X509CertSelector. Instead, the values are compared using a byte-by-byte comparison. Note that the byte array supplied here is cloned to protect against subsequent modifications.",;java.security.cert.X509CertSelector.setSubjectKeyIdentifier(byte[]),;1
setSubjectPublicKeyAlgID,1,1,"Sets the subjectPublicKeyAlgID criterion. The X509Certificate must contain a subject public key with the specified algorithm. If null, no subjectPublicKeyAlgID check will be done.",;java.security.cert.X509CertSelector.setSubjectPublicKeyAlgID(String),;1
setSubType,1,1,Set the subtype for this object to the given String.,;javax.activation.MimeType.setSubType(String),;1
setSupplementaryStates,1,1,This method sets the state for the supplementary information flags and the minor status in MessageProp. It is not used by the application but by the GSS implementation to return this information to the caller of a per-message context method.,";org.ietf.jgss.MessageProp.setSupplementaryStates(boolean,boolean,boolean,boolean,int,String)",;1
setSurrendersFocusOnKeystroke,1,1,"Sets whether editors in this JTable get the keyboard focus when an editor is activated as a result of the JTable forwarding keyboard events for a cell. By default, this property is false, and the JTable retains the focus unless the cell is clicked.",;javax.swing.JTable.setSurrendersFocusOnKeystroke(boolean),;1
setSystem,1,1,"Set the activation system for the VM. The activation system can only be set it if no group is currently active. If the activation system is not set via this call, then the getSystem method attempts to obtain a reference to the ActivationSystem by looking up the name ""java.rmi.activation.ActivationSystem"" in the Activator's registry. By default, the port number used to look up the activation system is defined by ActivationSystem.SYSTEM_PORT. This port can be overridden by setting the property java.rmi.activation.port. If there is a security manager, this method first calls the security manager's checkSetFactory method. This could result in a SecurityException.",;java.rmi.activation.ActivationGroup.setSystem(ActivationSystem),;1
setSystemScope,1,1,Deprecated.,;java.security.IdentityScope.setSystemScope(IdentityScope),;1
setTabComponentAt,1,1,Sets the component that is responsible for rendering the title for the specified tab. A null value means JTabbedPane will render the title and/or icon for the specified tab. A non-null value means the component will render the title and JTabbedPane will not render the title and/or icon. Note: The component must not be one that the developer has already added to the tabbed pane.,";javax.swing.JTabbedPane.setTabComponentAt(int,Component)",;1
setTable,1,1,Sets the table associated with this header.,;javax.swing.table.JTableHeader.setTable(JTable),;1
setTableHeader,1,1,Sets the tableHeader working with this JTable to newHeader. It is legal to have a null tableHeader.,;javax.swing.JTable.setTableHeader(JTableHeader),;1
setTableName,1,1,Sets the name of the table from which the designated column was derived to the given table name.,";javax.sql.rowset.RowSetMetaDataImpl.setTableName(int,String)",;1
setTabSet,1,1,Sets the TabSet.,";javax.swing.text.StyleConstants.setTabSet(MutableAttributeSet,TabSet)",;1
setTabSize,1,1,Sets the number of characters to expand tabs to. This will be multiplied by the maximum advance for variable width fonts. A PropertyChange event ("tabSize") is fired when the tab size changes.,;javax.swing.JTextArea.setTabSize(int),;1
setTargetActions,1,1,This method sets the current actions acceptable to this DropTarget.,;java.awt.dnd.DropTargetContext.setTargetActions(int),;1
setTargetCertConstraints,1,1,"Sets the required constraints on the target certificate. The constraints are specified as an instance of CertSelector. If null, no constraints are defined. Note that the CertSelector specified is cloned to protect against subsequent modifications.",;java.security.cert.PKIXParameters.setTargetCertConstraints(CertSelector),;1
setTcpNoDelay,1,1,Enable/disable TCP_NODELAY (disable/enable Nagle's algorithm).,;java.net.Socket.setTcpNoDelay(boolean),;1
setTextContent,1,1,This DOM Level 3 method is not supported for IIOMetadataNode and will throw a DOMException.,;javax.imageio.metadata.IIOMetadataNode.setTextContent(String),;1
setTextNonSelectionColor,1,1,Sets the color the text is drawn with when the node isn't selected.,;javax.swing.tree.DefaultTreeCellRenderer.setTextNonSelectionColor(Color),;1
setTextSelectionColor,1,1,Sets the color the text is drawn with when the node is selected.,;javax.swing.tree.DefaultTreeCellRenderer.setTextSelectionColor(Color),;1
setThreadFactory,1,1,Sets the thread factory used to create new threads.,;java.util.concurrent.ThreadPoolExecutor.setThreadFactory(ThreadFactory),;1
setThreadID,1,1,Set an identifier for the thread where the message originated.,;java.util.logging.LogRecord.setThreadID(int),;1
setThreshold,1,1,"Deprecated.As of JMX 1.2, replaced by setInitThreshold(java.lang.Number)",;javax.management.monitor.CounterMonitor.setThreshold(Number),;1
setThresholds,1,1,Sets the high and the low threshold values common to all observed MBeans.,";javax.management.monitor.GaugeMonitor.setThresholds(Number,Number)",;1
setThrown,1,1,Set a throwable associated with the log event.,;java.util.logging.LogRecord.setThrown(Throwable),;1
setThumbnails,1,1,"Sets the list of thumbnails to a new List of BufferedImages, or to null. The reference to the previous List is discarded. The thumbnails argument must either be null or contain only BufferedImage objects.",;javax.imageio.IIOImage.setThumbnails(List&lt;?),;1
setTick,1,1,"Sets the time-stamp for the event, in MIDI ticks",;javax.sound.midi.MidiEvent.setTick(long),;1
setTiling,1,1,"Specifies that the image should be tiled in the output stream. The tileWidth and tileHeight parameters specify the width and height of the tiles in the file. If the tile width or height is greater than the width or height of the image, the image is not tiled in that dimension. If canOffsetTiles returns false, then the tileGridXOffset and tileGridYOffset parameters must be zero.",";javax.imageio.ImageWriteParam.setTiling(int,int,int,int)",;1
setTimeInMillis,1,1,Sets this Calendar's current time from the given long value.,;java.util.Calendar.setTimeInMillis(long),;1
setTimeLimit,1,1,"Sets the time limit of these SearchControls in milliseconds. If the value is 0, this means to wait indefinitely.",;javax.naming.directory.SearchControls.setTimeLimit(int),;1
setTimeStamp,1,1,Set the notification timestamp.,;javax.management.Notification.setTimeStamp(long),;1
setTimezone,1,1,Set the number of minutes in the timezone offset.Unset this field by invoking the setter with a parameter value of DatatypeConstants.FIELD_UNDEFINED.,;javax.xml.datatype.XMLGregorianCalendar.setTimezone(int),;1
setTipText,1,1,Sets the text to show when the tool tip is displayed. The string tipText may be null.,;javax.swing.JToolTip.setTipText(String),;1
setTitleAt,1,1,Sets the title at index to title which can be null. The title is not shown if a tab component for this tab was specified. An internal exception is raised if there is no tab at that index.,";javax.swing.JTabbedPane.setTitleAt(int,String)",;1
setTitleColor,1,1,Sets the title-color of the titled border.,;javax.swing.border.TitledBorder.setTitleColor(Color),;1
setTitleFont,1,1,Sets the title-font of the titled border.,;javax.swing.border.TitledBorder.setTitleFont(Font),;1
setTitleJustification,1,1,Sets the title-justification of the titled border.,;javax.swing.border.TitledBorder.setTitleJustification(int),;1
setTitlePosition,1,1,Sets the title-position of the titled border.,;javax.swing.border.TitledBorder.setTitlePosition(int),;1
setToggleClickCount,1,1,Sets the number of mouse clicks before a node will expand or close. The default is two. This is a bound property.,;javax.swing.JTree.setToggleClickCount(int),;1
setToIdentity,1,1,Resets this transform to the Identity transform.,;java.awt.geom.AffineTransform.setToIdentity(),;1
setTokenThreshold,1,1,Sets the number of tokens to buffer before trying to update the documents element structure.,;javax.swing.text.html.HTMLDocument.setTokenThreshold(int),;1
setToolTip,1,1,"Sets the tooltip string for this TrayIcon. The tooltip is displayed automatically when the mouse hovers over the icon. Setting the tooltip to null removes any tooltip text. When displayed, the tooltip string may be truncated on some platforms; the number of characters that may be displayed is platform-dependent.",;java.awt.TrayIcon.setToolTip(String),;1
setToolTipText,1,1,Registers the text to display in a tool tip. The text displays when the cursor lingers over the component. See How to Use Tool Tips in The Java Tutorial for further documentation.,;javax.swing.JComponent.setToolTipText(String),;1
setToolTipTextAt,1,1,Sets the tooltip text at index to toolTipText which can be null. An internal exception is raised if there is no tab at that index.,";javax.swing.JTabbedPane.setToolTipTextAt(int,String)",;1
setToPage,1,1,"Specifies, for jobs using these attributes, the last page (inclusive) to be printed, if a range of pages is to be printed. If this attribute is not specified, then the values from the pageRanges attribute are used. If pageRanges and either or both of fromPage and toPage are specified, pageRanges takes precedence. Specifying none of pageRanges, fromPage, or toPage is equivalent to calling setPageRanges(new int[][] { new int[] { minPage } });",;java.awt.JobAttributes.setToPage(int),;1
setTopComponent,1,1,"Sets the component above, or to the left of the divider.",;javax.swing.JSplitPane.setTopComponent(Component),;1
setTopDown,1,1,"If set, the data will be written out in a top-down manner, the first scanline being written first.",;javax.imageio.plugins.bmp.BMPImageWriteParam.setTopDown(boolean),;1
setTopInset,1,1,Set the top part of the margin around the view.,;javax.swing.text.AsyncBoxView.setTopInset(float),;1
setToScale,1,1,Sets this transform to a scaling transformation. The matrix representing this transform becomes: [ sx 0 0 ] [ 0 sy 0 ] [ 0 0 1 ],";java.awt.geom.AffineTransform.setToScale(double,double)",;1
setToShear,1,1,Sets this transform to a shearing transformation. The matrix representing this transform becomes: [ 1 shx 0 ] [ shy 1 0 ] [ 0 0 1 ],";java.awt.geom.AffineTransform.setToShear(double,double)",;1
setToTranslation,1,1,Sets this transform to a translation transformation. The matrix representing this transform becomes: [ 1 0 tx ] [ 0 1 ty ] [ 0 0 1 ],";java.awt.geom.AffineTransform.setToTranslation(double,double)",;1
setTransactionIsolation,1,1,"Sets the transaction isolation property for this JDBC RowSet object to the given constant. The DBMS will use this transaction isolation level for transactions if it can. For RowSet implementations such as the CachedRowSet that operate in a disconnected environment, the SyncProvider object being used offers complementary locking and data integrity options. The options described below are pertinent only to connected RowSet objects (JdbcRowSet objects).",;javax.sql.rowset.BaseRowSet.setTransactionIsolation(int),;1
setTree,1,1,Sets the tree currently editing for. This is needed to add a selection listener.,;javax.swing.tree.DefaultTreeCellEditor.setTree(JTree),;1
setTrustAnchors,1,1,Sets the Set of most-trusted CAs. Note that the Set is copied to protect against subsequent modifications.,;java.security.cert.PKIXParameters.setTrustAnchors(Set&lt;TrustAnchor&gt;),;1
setTypeMap,1,1,"Installs the given java.util.Map object as the type map associated with the Connection object for this RowSet object. The custom mapping indicated in this type map will be used unless a different type map is explicitly supplied to a method, in which case the type map supplied will be used.",";javax.sql.rowset.BaseRowSet.setTypeMap(Map&lt;String,Class&lt;?&gt;&gt;)",;1
setUncaughtExceptionHandler,1,1,Set the handler invoked when this thread abruptly terminates due to an uncaught exception. A thread can take full control of how it responds to uncaught exceptions by having its uncaught exception handler explicitly set. If no such handler is set then the thread's ThreadGroup object acts as its handler.,;java.lang.Thread.setUncaughtExceptionHandler(Thread.UncaughtExceptionHandler),;1
setUnicast,1,1,Mark an event set as unicast (or not).,;java.beans.EventSetDescriptor.setUnicast(boolean),;1
setUnicodeLocaleKeyword,1,1,"Sets the Unicode locale keyword type for the given key. If the type is null, the Unicode keyword is removed. Otherwise, the key must be non-null and both key and type must be well-formed or an exception is thrown. Keys and types are converted to lower case. Note:Setting the 'u' extension via setExtension(char, java.lang.String) replaces all Unicode locale keywords with those defined in the extension.",";java.util.Locale.Builder.setUnicodeLocaleKeyword(String,String)",;1
setUnicodeStream,1,1,Deprecated.getCharacterStream should be used in its place,";javax.sql.rowset.BaseRowSet.setUnicodeStream(int,InputStream,int)",;1
setup,1,1,Performs common constructor initialization and setup.,;javax.swing.JFileChooser.setup(FileSystemView),;1
setUpdateRect,1,1,Sets the rectangle representing the area which needs to be repainted in response to this event.,;java.awt.event.PaintEvent.setUpdateRect(Rectangle),;1
setUpdateSelectionOnSort,1,1,"Specifies whether the selection should be updated after sorting. If true, on sorting the selection is reset such that the same rows, in terms of the model, remain selected. The default is true.",;javax.swing.JTable.setUpdateSelectionOnSort(boolean),;1
setUpdateTableInRealTime,1,1,"Obsolete as of Java 2 platform v1.3. Real time repaints, in response to column dragging or resizing, are now unconditional.",;javax.swing.table.JTableHeader.setUpdateTableInRealTime(boolean),;1
setURI,1,1,Set the Namespace URI of a specific attribute.,";org.xml.sax.helpers.AttributesImpl.setURI(int,String)",;1
setURIDereferencer,1,1,Description copied from interface:XMLCryptoContext,;javax.xml.crypto.dom.DOMCryptoContext.setURIDereferencer(URIDereferencer),;1
setUrl,1,1,"Sets the Url property for this RowSet object to the given String object and sets the dataSource name property to null. The Url property is a JDBC URL that is used when the connection is created using a JDBC technology-enabled driver (""JDBC driver"") and the DriverManager. The correct JDBC URL for the specific driver to be used can be found in the driver documentation. Although there are guidelines for for how a JDBC URL is formed, a driver vendor can specify any String object except one with a length of 0 (an empty string). Setting the Url property is optional if connections are established using a DataSource object instead of the DriverManager. The driver will use either the URL property or the dataSourceName property to create a connection, whichever was specified most recently. If an application uses a JDBC URL, it must load a JDBC driver that accepts the JDBC URL before it uses the RowSet object to connect to a database. The RowSet object will use the URL internally to create a database connection in order to read or write data.",;javax.sql.rowset.BaseRowSet.setUrl(String),;1
setURLStreamHandlerFactory,1,1,"Sets an application's URLStreamHandlerFactory. This method can be called at most once in a given Java Virtual Machine. The URLStreamHandlerFactory instance is used toconstruct a stream protocol handler from a protocol name. If there is a security manager, this method first calls the security manager's checkSetFactory method to ensure the operation is allowed. This could result in a SecurityException.",;java.net.URL.setURLStreamHandlerFactory(URLStreamHandlerFactory),;1
setUseCache,1,1,"Sets a flag indicating whether a disk-based cache file should be used when creating ImageInputStreams and ImageOutputStreams. When reading from a standard InputStream, it may be necessary to save previously read information in a cache since the underlying stream does not allow data to be re-read. Similarly, when writing to a standard OutputStream, a cache may be used to allow a previously written value to be changed before flushing it to the final destination. The cache may reside in main memory or on disk. Setting this flag to false disallows the use of disk for future streams, which may be advantageous when working with small images, as the overhead of creating and destroying files is removed. On startup, the value is set to true.",;javax.imageio.ImageIO.setUseCache(boolean),;1
setUseCaches,1,1,"Sets the value of the useCaches field of this URLConnection to the specified value. Some protocols do caching of documents. Occasionally, it is important to be able to ""tunnel through"" and ignore the caches (e.g., the ""reload"" button in a browser). If the UseCaches flag on a connection is true, the connection is allowed to use whatever caches it can. If false, caches are to be ignored. The default value comes from DefaultUseCaches, which defaults to true.",;java.net.URLConnection.setUseCaches(boolean),;1
setUseCipherSuitesOrder,1,1,Sets whether the local cipher suites preference should be honored.,;javax.net.ssl.SSLParameters.setUseCipherSuitesOrder(boolean),;1
setUseParentHandlers,1,1,"Specify whether or not this logger should send its output to its parent Logger. This means that any LogRecords will also be written to the parent's Handlers, and potentially to its parent, recursively up the namespace.",;java.util.logging.Logger.setUseParentHandlers(boolean),;1
setUsername,1,1,"Sets the username property for this RowSet object to the given user name. Because it is not serialized, the username property is set at run time before calling the method execute.",;javax.sql.rowset.BaseRowSet.setUsername(String),;1
setValidCharacters,1,1,"Allows for further restricting of the characters that can be input. Only characters specified in the mask, not in the invalidCharacters, and in validCharacters will be allowed to be input. Passing in null (the default) implies the valid characters are only bound by the mask and the invalid characters.",;javax.swing.text.MaskFormatter.setValidCharacters(String),;1
setValueClass,1,1,"Sets that class that is used to create new Objects. If the passed in class does not have a single argument constructor that takes a String, String values will be used.",;javax.swing.text.DefaultFormatter.setValueClass(Class&lt;?&gt;),;1
setValueContainsLiteralCharacters,1,1,"If true, the returned value and set value will also contain the literal characters in mask. For example, if the mask is '(###) ###-####', the current value is '(415) 555-1212', and valueContainsLiteralCharacters is true stringToValue will return '(415) 555-1212'. On the other hand, if valueContainsLiteralCharacters is false, stringToValue will return '4155551212'.",;javax.swing.text.MaskFormatter.setValueContainsLiteralCharacters(boolean),;1
setVariant,1,1,"Sets the variant. If variant is null or the empty string, the variant in this Builder is removed. Otherwise, it must consist of one or more well-formed subtags, or an exception is thrown. Note: This method checks if variant satisfies the IETF BCP 47 variant subtag's syntax requirements, and normalizes the value to lowercase letters. However, the Locale class does not impose any syntactic restriction on variant, and the variant value in Locale is case sensitive. To set such a variant, use a Locale constructor.",;java.util.Locale.Builder.setVariant(String),;1
setVerifyInputWhenFocusTarget,1,1,"Sets the value to indicate whether input verifier for the current focus owner will be called before this component requests focus. The default is true. Set to false on components such as a Cancel button or a scrollbar, which should activate even if the input in the current focus owner is not ""passed"" by the input verifier for that component.",;javax.swing.JComponent.setVerifyInputWhenFocusTarget(boolean),;1
setVersion,1,1,Sets the version of the cookie protocol this cookie complies with. Version 0 complies with the original Netscape cookie specification. Version 1 complies with RFC 2965/2109.,;java.net.HttpCookie.setVersion(int),;1
setVerticalGroup,1,1,Sets the Group that positions and sizes components along the vertical axis.,;javax.swing.GroupLayout.setVerticalGroup(GroupLayout.Group),;1
setVerticalScrollBar,1,1,"Adds the scrollbar that controls the viewports vertical view position to the scrollpane. This is usually unnecessary, as JScrollPane creates vertical and horizontal scrollbars by default.",;javax.swing.JScrollPane.setVerticalScrollBar(JScrollBar),;1
setViewport,1,1,"Removes the old viewport (if there is one); forces the viewPosition of the new viewport to be in the +x,+y quadrant; syncs up the row and column headers (if there are any) with the new viewport; and finally syncs the scrollbars and headers with the new viewport. Most applications will find it more convenient to use setViewportView to add a viewport and a view to the scrollpane.",;javax.swing.JScrollPane.setViewport(JViewport),;1
setViewportBorder,1,1,"Adds a border around the viewport. Note that the border isn't set on the viewport directly, JViewport doesn't support the JComponent border property. Similarly setting the JScrollPanes viewport doesn't affect the viewportBorder property. The default value of this property is computed by the look and feel implementation.",;javax.swing.JScrollPane.setViewportBorder(Border),;1
setViewportView,1,1,Creates a viewport if necessary and then sets its view. Applications that don't provide the view directly to the JScrollPane constructor should use this method to specify the scrollable child that's going to be displayed in the scrollpane. For example: JScrollPane scrollpane = new JScrollPane(); scrollpane.setViewportView(myBigComponentToScroll); Applications should not add children directly to the scrollpane.,;javax.swing.JScrollPane.setViewportView(Component),;1
setViewPosition,1,1,"Sets the view coordinates that appear in the upper left hand corner of the viewport, does nothing if there's no view.",;javax.swing.JViewport.setViewPosition(Point),;1
setViewSize,1,1,Sets the size of the view. A state changed event will be fired.,;javax.swing.JViewport.setViewSize(Dimension),;1
setWantClientAuth,1,1,Sets whether client authentication should be requested. Calling this method clears the needClientAuth flag.,;javax.net.ssl.SSLParameters.setWantClientAuth(boolean),;1
setWantsInput,1,1,"Sets the wantsInput property. If newValue is true, an input component (such as a text field or combo box) whose parent is parentComponent is provided to allow the user to input a value. If getSelectionValues returns a non-null array, the input value is one of the objects in that array. Otherwise the input value is whatever the user inputs. This is a bound property.",;javax.swing.JOptionPane.setWantsInput(boolean),;1
setWasIcon,1,1,Sets that the component has been iconized and the bounds of the desktopIcon are valid.,";javax.swing.DefaultDesktopManager.setWasIcon(JInternalFrame,Boolean)",;1
setWeekdays,1,1,"Sets weekday strings. For example: ""Sunday"", ""Monday"", etc.",;java.text.DateFormatSymbols.setWeekdays(String[]),;1
setWeekDefinition,1,1,Sets the week definition parameters to the values given by firstDayOfWeek and minimalDaysInFirstWeek that are used to determine the first week of a year. The parameters given by this method have precedence over the default values given by the locale.,";java.util.Calendar.Builder.setWeekDefinition(int,int)",;1
setWindingRule,1,1,Sets the winding rule for this path to the specified value.,;java.awt.geom.Path2D.setWindingRule(int),;1
setWindowDecorationStyle,1,1,"Sets the type of Window decorations (such as borders, widgets for closing a Window, title ...) the JRootPane should provide. The default is to provide no Window decorations (NONE). This is only a hint, and some look and feels may not support this. This is a bound property.",;javax.swing.JRootPane.setWindowDecorationStyle(int),;1
setWrapStyleWord,1,1,"Sets the style of wrapping used if the text area is wrapping lines. If set to true the lines will be wrapped at word boundaries (whitespace) if they are too long to fit within the allocated width. If set to false, the lines will be wrapped at character boundaries. By default this property is false.",;javax.swing.JTextArea.setWrapStyleWord(boolean),;1
setWriteMethod,1,1,Sets the method that should be used to write the property value.,;java.beans.PropertyDescriptor.setWriteMethod(Method),;1
setX,1,1,"Sets the x property, which controls the x value of a component's location.",;javax.swing.SpringLayout.Constraints.setX(Spring),;1
setXMLReader,1,1,Set the XMLReader to be used for the Source.,;javax.xml.transform.sax.SAXSource.setXMLReader(XMLReader),;1
setXMLReporter,1,1,The reporter that will be set on any XMLStreamReader or XMLEventReader created by this factory instance.,;javax.xml.stream.XMLInputFactory.setXMLReporter(XMLReporter),;1
setXMLResolver,1,1,The resolver that will be set on any XMLStreamReader or XMLEventReader created by this factory instance.,;javax.xml.stream.XMLInputFactory.setXMLResolver(XMLResolver),;1
setXMLVersion,1,1,Assigns the current value of the version property.,;org.xml.sax.ext.Locator2Impl.setXMLVersion(String),;1
setXPathFunctionResolver,1,1,Establish a default function resolver.Any XPath objects constructed from this factory will use the specified resolver by default.A NullPointerException is thrown if resolver is null.,;javax.xml.xpath.XPathFactory.setXPathFunctionResolver(XPathFunctionResolver),;1
setXPathVariableResolver,1,1,Establish a default variable resolver.Any XPath objects constructed from this factory will use the specified resolver by default.A NullPointerException is thrown if resolver is null.,;javax.xml.xpath.XPathFactory.setXPathVariableResolver(XPathVariableResolver),;1
setY,1,1,"Sets the y property, which controls the y value of a component's location.",;javax.swing.SpringLayout.Constraints.setY(Spring),;1
setZeroDigit,1,1,"Sets the character used for zero. Different for Arabic, etc.",;java.text.DecimalFormatSymbols.setZeroDigit(char),;1
shallowClone,1,1,Creates a shallow copy of a ParameterBlock. The source and parameter Vectors are copied by reference -- additions or changes will be visible to both versions.,;java.awt.image.renderable.ParameterBlock.shallowClone(),;1
shift,1,1,"Changes the control value from the initial value to the final value linearly over the specified time period, specified in microseconds. This method returns without blocking; it does not wait for the shift to complete. An implementation should complete the operation within the time specified. The default implementation simply changes the value to the final value immediately.",";javax.sound.sampled.FloatControl.shift(float,float,int)",;1
shiftDown,1,1,NOTE: The Event class is obsolete and is available only for backwards compatibility. It has been replaced by the AWTEvent class and its subclasses. Checks if the Shift key is down.,;java.awt.Event.shiftDown(),;1
shiftEnd,1,1,"Make the gap bigger, moving any necessary data and updating the appropriate marks",;javax.swing.text.GapContent.shiftEnd(int),;1
shiftGap,1,1,"Move the start of the gap to a new location, without changing the size of the gap. This moves the data in the array and updates the marks accordingly.",;javax.swing.text.GapContent.shiftGap(int),;1
shiftGapEndUp,1,1,"Adjust the gap end upward. This doesn't move any data, but it does update any marks affected by the boundary change. All marks from the old gap end up to the new gap end are squeezed to the end of the gap (their location has been removed).",;javax.swing.text.GapContent.shiftGapEndUp(int),;1
shiftGapStartDown,1,1,"Adjust the gap end downward. This doesn't move any data, but it does update any marks affected by the boundary change. All marks from the old gap start down to the new gap start are squeezed to the end of the gap (their location has been removed).",;javax.swing.text.GapContent.shiftGapStartDown(int),;1
shiftLeft,1,1,"Returns a BigInteger whose value is (this &lt;&lt; n). The shift distance, n, may be negative, in which case this method performs a right shift. (Computes floor(this * 2n).)",;java.math.BigInteger.shiftLeft(int),;1
shiftRight,1,1,"Returns a BigInteger whose value is (this &gt;&gt; n). Sign extension is performed. The shift distance, n, may be negative, in which case this method performs a left shift. (Computes floor(this / 2n).)",;java.math.BigInteger.shiftRight(int),;1
shortcuts,1,1,Gets an enumeration of all menu shortcuts this menu bar is managing.,;java.awt.MenuBar.shortcuts(),;1
shouldPaintExpandControl,1,1,Returns true if the expand (toggle) control should be drawn for the specified row.,";javax.swing.plaf.basic.BasicTreeUI.shouldPaintExpandControl(TreePath,int,boolean,boolean,boolean)",;1
shouldStartEditingTimer,1,1,Returns true if event is a MouseEvent and the click count is 1.,;javax.swing.tree.DefaultTreeCellEditor.shouldStartEditingTimer(EventObject),;1
shouldUpdateStyleOnEvent,1,1,Returns whether or not the UIs should update their styles when a particular event occurs.,;javax.swing.plaf.synth.SynthLookAndFeel.shouldUpdateStyleOnEvent(PropertyChangeEvent),;1
shouldYieldFocus,1,1,"Calls verify(input) to ensure that the input is valid. This method can have side effects. In particular, this method is called when the user attempts to advance focus out of the argument component into another Swing component in this window. If this method returns true, then the focus is transfered normally; if it returns false, then the focus remains in the argument component.",;javax.swing.InputVerifier.shouldYieldFocus(JComponent),;1
showInternalOptionDialog,1,1,"Brings up an internal dialog panel with a specified icon, where the initial choice is determined by the initialValue parameter and the number of choices is determined by the optionType parameter. If optionType is YES_NO_OPTION, or YES_NO_CANCEL_OPTION and the options parameter is null, then the options are supplied by the Look and Feel. The messageType parameter is primarily used to supply a default icon from the look and feel.",";javax.swing.JOptionPane.showInternalOptionDialog(Component,Object,String,int,int,Icon,Object[],Object)",;1
showOpenDialog,1,1,Pops up an "Open File" file chooser dialog. Note that the text that appears in the approve button is determined by the L&amp;F.,;javax.swing.JFileChooser.showOpenDialog(Component),;1
showOptionDialog,1,1,"Brings up a dialog with a specified icon, where the initial choice is determined by the initialValue parameter and the number of choices is determined by the optionType parameter. If optionType is YES_NO_OPTION, or YES_NO_CANCEL_OPTION and the options parameter is null, then the options are supplied by the look and feel. The messageType parameter is primarily used to supply a default icon from the look and feel.",";javax.swing.JOptionPane.showOptionDialog(Component,Object,String,int,int,Icon,Object[],Object)",;1
showPopup,1,1,Causes the combo box to display its popup window.,;javax.swing.JComboBox.showPopup(),;1
showSaveDialog,1,1,Pops up a "Save File" file chooser dialog. Note that the text that appears in the approve button is determined by the L&amp;F.,;javax.swing.JFileChooser.showSaveDialog(Component),;1
showStatus,1,1,"Requests that the argument string be displayed in the ""status window"". Many browsers and applet viewers provide such a window, where the application can inform users of its current state.",;java.applet.Applet.showStatus(String),;1
showSystemMenu,1,1,Override the parent's method to do nothing. Metal frames do not have system menus.,;javax.swing.plaf.metal.MetalInternalFrameTitlePane.showSystemMenu(),;1
SimpleName,1,1,description,;MethodName,;1
singleton,1,1,Returns an immutable set containing only the specified object. The returned set is serializable.,;java.util.Collections.singleton(T),;1
singletonKeySelector,1,1,"Returns a KeySelector that always selects the specified key, regardless of the KeyInfo passed to it.",;javax.xml.crypto.KeySelector.singletonKeySelector(Key),;1
singletonList,1,1,Returns an immutable list containing only the specified object. The returned list is serializable.,;java.util.Collections.singletonList(T),;1
singletonMap,1,1,"Returns an immutable map, mapping only the specified key to the specified value. The returned map is serializable.",";java.util.Collections.singletonMap(K,V)",;1
sink,1,1,Returns this pipe's sink channel.,;java.nio.channels.Pipe.sink(),;1
sizeWidthToFit,1,1,"Resizes the TableColumn to fit the width of its header cell. This method does nothing if the header renderer is null (the default case). Otherwise, it sets the minimum, maximum and preferred widths of this column to the widths of the minimum, maximum and preferred sizes of the Component delivered by the header renderer. The transient ""width"" property of this TableColumn is also set to the preferred width. Note this method is not used internally by the table package.",;javax.swing.table.TableColumn.sizeWidthToFit(),;1
slashSlashComments,1,1,"Determines whether or not the tokenizer recognizes C++-style comments. If the flag argument is true, this stream tokenizer recognizes C++-style comments. Any occurrence of two consecutive slash characters ('/') is treated as the beginning of a comment that extends to the end of the line. If the flag argument is false, then C++-style comments are not treated specially.",;java.io.StreamTokenizer.slashSlashComments(boolean),;1
slashStarComments,1,1,"Determines whether or not the tokenizer recognizes C-style comments. If the flag argument is true, this stream tokenizer recognizes C-style comments. All text between successive occurrences of /* and */ are discarded. If the flag argument is false, then C-style comments are not treated specially.",;java.io.StreamTokenizer.slashStarComments(boolean),;1
sorterChanged,1,1,RowSorterListener notification that the RowSorter has changed in some way.,;javax.swing.JTable.sorterChanged(RowSorterEvent),;1
source,1,1,Returns this pipe's source channel.,;java.nio.channels.Pipe.source(),;1
sourceAddress,1,1,"Returns the source address if this membership key is source-specific, or null if this membership is not source-specific.",;java.nio.channels.MembershipKey.sourceAddress(),;1
sourceToInputSource,1,1,Attempt to obtain a SAX InputSource object from a Source object.,;javax.xml.transform.sax.SAXSource.sourceToInputSource(Source),;1
splitAsStream,1,1,"Creates a stream from the given input sequence around matches of this pattern. The stream returned by this method contains each substring of the input sequence that is terminated by another subsequence that matches this pattern or is terminated by the end of the input sequence. The substrings in the stream are in the order in which they occur in the input. Trailing empty strings will be discarded and not encountered in the stream. If this pattern does not match any subsequence of the input then the resulting stream has just one element, namely the input sequence in string form. When there is a positive-width match at the beginning of the input sequence then an empty leading substring is included at the beginning of the stream. A zero-width match at the beginning however never produces such empty leading substring. If the input sequence is mutable, it must remain constant during the execution of the terminal stream operation. Otherwise, the result of the terminal stream operation is undefined.",;java.util.regex.Pattern.splitAsStream(CharSequence),;1
standaloneSet,1,1,Description copied from interface:XMLStreamReader,;javax.xml.stream.util.StreamReaderDelegate.standaloneSet(),;1
startAutoScrolling,1,1,This protected method is implementation specific and should be private. do not call or override.,;javax.swing.plaf.basic.BasicComboPopup.startAutoScrolling(int),;1
startCDATA,1,1,Description copied from interface:LexicalHandler,;org.xml.sax.ext.DefaultHandler2.startCDATA(),;1
startDragging,1,1,"Should be messaged before the dragging session starts, resets lastDragLocation and dividerSize.",;javax.swing.plaf.basic.BasicSplitPaneUI.startDragging(),;1
startDTD,1,1,Description copied from interface:LexicalHandler,";org.xml.sax.ext.DefaultHandler2.startDTD(String,String,String)",;1
startEditing,1,1,Will start editing for node if there is a cellEditor and shouldSelectCell returns true. This assumes that path is valid and visible.,";javax.swing.plaf.basic.BasicTreeUI.startEditing(TreePath,MouseEvent)",;1
startEditingTimer,1,1,Starts the editing timer.,;javax.swing.tree.DefaultTreeCellEditor.startEditingTimer(),;1
startEntity,1,1,Description copied from interface:LexicalHandler,;org.xml.sax.ext.DefaultHandler2.startEntity(String),;1
startFontTag,1,1,"This is no longer used, instead &lt;span&gt; will be written out. Writes out a start tag for the &lt;font&gt; tag. Because font tags cannot be nested, this method closes out any enclosing font tag before writing out a new start tag.",;javax.swing.text.html.MinimalHTMLWriter.startFontTag(String),;1
startGrabbing,1,1,Request the PixelGrabber to start fetching the pixels.,;java.awt.image.PixelGrabber.startGrabbing(),;1
startHandshake,1,1,"Starts an SSL handshake on this connection. Common reasons include a need to use new encryption keys, to change cipher suites, or to initiate a new session. To force complete reauthentication, the current session could be invalidated before starting this handshake. If data has already been sent on the connection, it continues to flow during this handshake. When the handshake completes, this will be signaled with an event. This method is synchronous for the initial handshake on a connection and returns when the negotiated handshake is complete. Some protocols may not support multiple handshakes on an existing socket and may throw an IOException.",;javax.net.ssl.SSLSocket.startHandshake(),;1
status,1,1,"Returns the status of the pixels. The ImageObserver flags representing the available pixel information are returned. This method and getStatus have the same implementation, but getStatus is the preferred method because it conforms to the convention of naming information-retrieval methods with the form ""getXXX"".",;java.awt.image.PixelGrabber.status(),;1
statusAll,1,1,"Calculates and returns the bitwise inclusive OR of the status of all media that are tracked by this media tracker. Possible flags defined by the MediaTracker class are LOADING, ABORTED, ERRORED, and COMPLETE. An image that hasn't started loading has zero as its status. If the value of load is true, then this method starts loading any images that are not yet being loaded.",;java.awt.MediaTracker.statusAll(boolean),;1
statusID,1,1,"Calculates and returns the bitwise inclusive OR of the status of all media with the specified identifier that are tracked by this media tracker. Possible flags defined by the MediaTracker class are LOADING, ABORTED, ERRORED, and COMPLETE. An image that hasn't started loading has zero as its status. If the value of load is true, then this method starts loading any images that are not yet being loaded.",";java.awt.MediaTracker.statusID(int,boolean)",;1
stopAutoScrolling,1,1,This protected method is implementation specific and should be private. do not call or override.,;javax.swing.plaf.basic.BasicComboPopup.stopAutoScrolling(),;1
string_to_object,1,1,Converts a string produced by the method object_to_string back to a CORBA object reference.,;org.omg.CORBA.ORB.string_to_object(String),;1
stringPropertyNames,1,1,"Returns a set of keys in this property list where the key and its corresponding value are strings, including distinct keys in the default property list if a key of the same name has not already been found from the main properties list. Properties whose key or value is not of type String are omitted. The returned set is not backed by the Properties object. Changes to this Properties are not reflected in the set, or vice versa.",;java.util.Properties.stringPropertyNames(),;1
stringToColor,1,1,"Converts a color string such as ""RED"" or ""#NNNNNN"" to a Color. Note: This will only convert the HTML3.2 color strings or a string of length 7; otherwise, it will return null.",;javax.swing.text.html.StyleSheet.stringToColor(String),;1
stringWidth,1,1,Returns the total advance width for showing the specified String in this Font. The advance is the distance from the leftmost point to the rightmost point on the string's baseline. Note that the advance of a String is not necessarily the sum of the advances of its characters.,;java.awt.FontMetrics.stringWidth(String),;1
stripExtensions,1,1,"Returns a copy of this Locale with no extensions. If this Locale has no extensions, this Locale is returned.",;java.util.Locale.stripExtensions(),;1
stripTrailingZeros,1,1,"Returns a BigDecimal which is numerically equal to this one but with any trailing zeros removed from the representation. For example, stripping the trailing zeros from the BigDecimal value 600.0, which has [BigInteger, scale] components equals to [6000, 1], yields 6E2 with [BigInteger, scale] components equals to [6, -2]. If this BigDecimal is numerically equal to zero, then BigDecimal.ZERO is returned.",;java.math.BigDecimal.stripTrailingZeros(),;1
styleChanged,1,1,Called when any of this document's styles have changed. Subclasses may wish to be intelligent about what gets damaged.,;javax.swing.text.DefaultStyledDocument.styleChanged(Style),;1
submitData,1,1,This method is responsible for submitting the form data. A thread is forked to undertake the submission.,;javax.swing.text.html.FormView.submitData(String),;1
substituteColorModel,1,1,"Registers two ColorModel objects for substitution. If the oldcm is encountered during any of the setPixels methods, the newcm is substituted and the pixels passed through untouched (but with the new ColorModel object).",";java.awt.image.RGBImageFilter.substituteColorModel(ColorModel,ColorModel)",;1
summarizingDouble,1,1,"Returns a Collector which applies an double-producing mapping function to each input element, and returns summary statistics for the resulting values.",;java.util.stream.Collectors.summarizingDouble(ToDoubleFunction&lt;?),;1
summarizingInt,1,1,"Returns a Collector which applies an int-producing mapping function to each input element, and returns summary statistics for the resulting values.",;java.util.stream.Collectors.summarizingInt(ToIntFunction&lt;?),;1
summarizingLong,1,1,"Returns a Collector which applies an long-producing mapping function to each input element, and returns summary statistics for the resulting values.",;java.util.stream.Collectors.summarizingLong(ToLongFunction&lt;?),;1
summingDouble,1,1,"Returns a Collector that produces the sum of a double-valued function applied to the input elements. If no elements are present, the result is 0. The sum returned can vary depending upon the order in which values are recorded, due to accumulated rounding error in addition of values of differing magnitudes. Values sorted by increasing absolute magnitude tend to yield more accurate results. If any recorded value is a NaN or the sum is at any point a NaN then the sum will be NaN.",;java.util.stream.Collectors.summingDouble(ToDoubleFunction&lt;?),;1
summingInt,1,1,"Returns a Collector that produces the sum of a integer-valued function applied to the input elements. If no elements are present, the result is 0.",;java.util.stream.Collectors.summingInt(ToIntFunction&lt;?),;1
summingLong,1,1,"Returns a Collector that produces the sum of a long-valued function applied to the input elements. If no elements are present, the result is 0.",;java.util.stream.Collectors.summingLong(ToLongFunction&lt;?),;1
supportedFileAttributeViews,1,1,"Returns the set of the names of the file attribute views supported by this FileSystem. The BasicFileAttributeView is required to be supported and therefore the set contains at least one element, ""basic"". The supportsFileAttributeView(String) method may be used to test if an underlying FileStore supports the file attributes identified by a file attribute view.",;java.nio.file.FileSystem.supportedFileAttributeViews(),;1
supportsCustomEditor,1,1,Determines whether the propertyEditor can provide a custom editor.,;java.beans.PropertyEditorSupport.supportsCustomEditor(),;1
supportsMulticast,1,1,Returns whether a network interface supports multicasting or not.,;java.net.NetworkInterface.supportsMulticast(),;1
supportsParameter,1,1,"Test whether this Service can use the specified parameter. Returns false if this service cannot use the parameter. Returns true if this service can use the parameter, if a fast test is infeasible, or if the status is unknown. The security provider framework uses this method with some types of services to quickly exclude non-matching implementations for consideration. Applications will typically not need to call it. For details and the values of parameter that are valid for the various types of services see the top of this class and the Java Cryptography Architecture API Specification &amp; Reference. Security providers can override it to implement their own test.",;java.security.Provider.Service.supportsParameter(Object),;1
supportsUpdatableView,1,1,Returns whether this SyncProvider implementation can perform synchronization between a RowSet object and the SQL VIEW in the data source from which the RowSet object got its data.,;javax.sql.rowset.spi.SyncProvider.supportsUpdatableView(),;1
supportsUrgentData,1,1,"Returns whether or not this SocketImpl supports sending urgent data. By default, false is returned unless the method is overridden in a sub-class",;java.net.SocketImpl.supportsUrgentData(),;1
swap,1,1,"Swaps the elements at the specified positions in the specified list. (If the specified positions are equal, invoking this method leaves the list unchanged.)",";java.util.Collections.swap(List&lt;?&gt;,int,int)",;1
synchronizedCollection,1,1,"Returns a synchronized (thread-safe) collection backed by the specified collection. In order to guarantee serial access, it is critical that all access to the backing collection is accomplished through the returned collection. It is imperative that the user manually synchronize on the returned collection when traversing it via Iterator, Spliterator or Stream: Collection c = Collections.synchronizedCollection(myCollection); ... synchronized (c) { Iterator i = c.iterator(); // Must be in the synchronized block while (i.hasNext()) foo(i.next()); } Failure to follow this advice may result in non-deterministic behavior. The returned collection does not pass the hashCode and equals operations through to the backing collection, but relies on Object's equals and hashCode methods. This is necessary to preserve the contracts of these operations in the case that the backing collection is a set or a list. The returned collection will be serializable if the specified collection is serializable.",;java.util.Collections.synchronizedCollection(Collection&lt;T&gt;),;1
synchronizedList,1,1,"Returns a synchronized (thread-safe) list backed by the specified list. In order to guarantee serial access, it is critical that all access to the backing list is accomplished through the returned list. It is imperative that the user manually synchronize on the returned list when iterating over it: List list = Collections.synchronizedList(new ArrayList()); ... synchronized (list) { Iterator i = list.iterator(); // Must be in synchronized block while (i.hasNext()) foo(i.next()); } Failure to follow this advice may result in non-deterministic behavior. The returned list will be serializable if the specified list is serializable.",;java.util.Collections.synchronizedList(List&lt;T&gt;),;1
synchronizedMap,1,1,"Returns a synchronized (thread-safe) map backed by the specified map. In order to guarantee serial access, it is critical that all access to the backing map is accomplished through the returned map. It is imperative that the user manually synchronize on the returned map when iterating over any of its collection views: Map m = Collections.synchronizedMap(new HashMap()); ... Set s = m.keySet(); // Needn't be in synchronized block ... synchronized (m) { // Synchronizing on m, not s! Iterator i = s.iterator(); // Must be in synchronized block while (i.hasNext()) foo(i.next()); } Failure to follow this advice may result in non-deterministic behavior. The returned map will be serializable if the specified map is serializable.",";java.util.Collections.synchronizedMap(Map&lt;K,V&gt;)",;1
synchronizedNavigableMap,1,1,"Returns a synchronized (thread-safe) navigable map backed by the specified navigable map. In order to guarantee serial access, it is critical that all access to the backing navigable map is accomplished through the returned navigable map (or its views). It is imperative that the user manually synchronize on the returned navigable map when iterating over any of its collection views, or the collections views of any of its subMap, headMap or tailMap views. NavigableMap m = Collections.synchronizedNavigableMap(new TreeMap()); ... Set s = m.keySet(); // Needn't be in synchronized block ... synchronized (m) { // Synchronizing on m, not s! Iterator i = s.iterator(); // Must be in synchronized block while (i.hasNext()) foo(i.next()); } or: NavigableMap m = Collections.synchronizedNavigableMap(new TreeMap()); NavigableMap m2 = m.subMap(foo, true, bar, false); ... Set s2 = m2.keySet(); // Needn't be in synchronized block ... synchronized (m) { // Synchronizing on m, not m2 or s2! Iterator i = s.iterator(); // Must be in synchronized block while (i.hasNext()) foo(i.next()); } Failure to follow this advice may result in non-deterministic behavior. The returned navigable map will be serializable if the specified navigable map is serializable.",";java.util.Collections.synchronizedNavigableMap(NavigableMap&lt;K,V&gt;)",;1
synchronizedNavigableSet,1,1,"Returns a synchronized (thread-safe) navigable set backed by the specified navigable set. In order to guarantee serial access, it is critical that all access to the backing navigable set is accomplished through the returned navigable set (or its views). It is imperative that the user manually synchronize on the returned navigable set when iterating over it or any of its subSet, headSet, or tailSet views. NavigableSet s = Collections.synchronizedNavigableSet(new TreeSet()); ... synchronized (s) { Iterator i = s.iterator(); // Must be in the synchronized block while (i.hasNext()) foo(i.next()); } or: NavigableSet s = Collections.synchronizedNavigableSet(new TreeSet()); NavigableSet s2 = s.headSet(foo, true); ... synchronized (s) { // Note: s, not s2!!! Iterator i = s2.iterator(); // Must be in the synchronized block while (i.hasNext()) foo(i.next()); } Failure to follow this advice may result in non-deterministic behavior. The returned navigable set will be serializable if the specified navigable set is serializable.",;java.util.Collections.synchronizedNavigableSet(NavigableSet&lt;T&gt;),;1
synchronizedSet,1,1,"Returns a synchronized (thread-safe) set backed by the specified set. In order to guarantee serial access, it is critical that all access to the backing set is accomplished through the returned set. It is imperative that the user manually synchronize on the returned set when iterating over it: Set s = Collections.synchronizedSet(new HashSet()); ... synchronized (s) { Iterator i = s.iterator(); // Must be in the synchronized block while (i.hasNext()) foo(i.next()); } Failure to follow this advice may result in non-deterministic behavior. The returned set will be serializable if the specified set is serializable.",;java.util.Collections.synchronizedSet(Set&lt;T&gt;),;1
synchronizedSortedMap,1,1,"Returns a synchronized (thread-safe) sorted map backed by the specified sorted map. In order to guarantee serial access, it is critical that all access to the backing sorted map is accomplished through the returned sorted map (or its views). It is imperative that the user manually synchronize on the returned sorted map when iterating over any of its collection views, or the collections views of any of its subMap, headMap or tailMap views. SortedMap m = Collections.synchronizedSortedMap(new TreeMap()); ... Set s = m.keySet(); // Needn't be in synchronized block ... synchronized (m) { // Synchronizing on m, not s! Iterator i = s.iterator(); // Must be in synchronized block while (i.hasNext()) foo(i.next()); } or: SortedMap m = Collections.synchronizedSortedMap(new TreeMap()); SortedMap m2 = m.subMap(foo, bar); ... Set s2 = m2.keySet(); // Needn't be in synchronized block ... synchronized (m) { // Synchronizing on m, not m2 or s2! Iterator i = s.iterator(); // Must be in synchronized block while (i.hasNext()) foo(i.next()); } Failure to follow this advice may result in non-deterministic behavior. The returned sorted map will be serializable if the specified sorted map is serializable.",";java.util.Collections.synchronizedSortedMap(SortedMap&lt;K,V&gt;)",;1
synchronizedSortedSet,1,1,"Returns a synchronized (thread-safe) sorted set backed by the specified sorted set. In order to guarantee serial access, it is critical that all access to the backing sorted set is accomplished through the returned sorted set (or its views). It is imperative that the user manually synchronize on the returned sorted set when iterating over it or any of its subSet, headSet, or tailSet views. SortedSet s = Collections.synchronizedSortedSet(new TreeSet()); ... synchronized (s) { Iterator i = s.iterator(); // Must be in the synchronized block while (i.hasNext()) foo(i.next()); } or: SortedSet s = Collections.synchronizedSortedSet(new TreeSet()); SortedSet s2 = s.headSet(foo); ... synchronized (s) { // Note: s, not s2!!! Iterator i = s2.iterator(); // Must be in the synchronized block while (i.hasNext()) foo(i.next()); } Failure to follow this advice may result in non-deterministic behavior. The returned sorted set will be serializable if the specified sorted set is serializable.",;java.util.Collections.synchronizedSortedSet(SortedSet&lt;T&gt;),;1
syncSpi,1,1,"This method is invoked with this node locked. The contract of this method is to synchronize any cached preferences stored at this node with any stored in the backing store. (It is perfectly possible that this node does not exist on the backing store, either because it has been deleted by another VM, or because it has not yet been created.) Note that this method should not synchronize the preferences in any subnodes of this node. If the backing store naturally syncs an entire subtree at once, the implementer is encouraged to override sync(), rather than merely overriding this method. If this node throws a BackingStoreException, the exception will propagate out beyond the enclosing sync() invocation.",;java.util.prefs.AbstractPreferences.syncSpi(),;1
syncWithScrollPane,1,1,This method is invoked after the ScrollPaneLayout is set as the LayoutManager of a JScrollPane. It initializes all of the internal fields that are ordinarily set by addLayoutComponent. For example: ScrollPaneLayout mySPLayout = new ScrollPanelLayout() { public void layoutContainer(Container p) { super.layoutContainer(p); // do some extra work here ... } }; scrollpane.setLayout(mySPLayout):,;javax.swing.ScrollPaneLayout.syncWithScrollPane(JScrollPane),;1
synthesizedElement,1,1,Returns true if the element is a synthesized element. Currently we are only testing for the p-implied tag.,;javax.swing.text.html.HTMLWriter.synthesizedElement(Element),;1
system,1,1,"Obtains a clock that returns the current instant using best available system clock. This clock is based on the best available system clock. This may use System.currentTimeMillis(), or a higher resolution clock if one is available. Conversion from instant to date or time uses the specified time-zone. The returned implementation is immutable, thread-safe and Serializable.",;java.time.Clock.system(ZoneId),;1
systemDefault,1,1,"Gets the system default time-zone. This queries TimeZone.getDefault() to find the default time-zone and converts it to a ZoneId. If the system default time-zone is changed, then the result of this method will also change.",;java.time.ZoneId.systemDefault(),;1
systemDefaultZone,1,1,"Obtains a clock that returns the current instant using the best available system clock, converting to date and time using the default time-zone. This clock is based on the best available system clock. This may use System.currentTimeMillis(), or a higher resolution clock if one is available. Using this method hard codes a dependency to the default time-zone into your application. It is recommended to avoid this and use a specific time-zone whenever possible. The UTC clock should be used when you need the current instant without the date or time. The returned implementation is immutable, thread-safe and Serializable. It is equivalent to system(ZoneId.systemDefault()).",;java.time.Clock.systemDefaultZone(),;1
systemNodeForPackage,1,1,"Returns the preference node from the system preference tree that is associated (by convention) with the specified class's package. The convention is as follows: the absolute path name of the node is the fully qualified package name, preceded by a slash ('/'), and with each period ('.') replaced by a slash. For example the absolute path name of the node associated with the class com.acme.widget.Foo is /com/acme/widget. This convention does not apply to the unnamed package, whose associated preference node is &lt;unnamed&gt;. This node is not intended for long term use, but for convenience in the early development of programs that do not yet belong to a package, and for ""throwaway"" programs. Valuable data should not be stored at this node as it is shared by all programs that use it.A class Foo wishing to access preferences pertaining to its package can obtain a preference node as follows: static Preferences prefs = Preferences.systemNodeForPackage(Foo.class); This idiom obviates the need for using a string to describe the preferences node and decreases the likelihood of a run-time failure. (If the class name is misspelled, it will typically result in a compile-time error.) Invoking this method will result in the creation of the returned node and its ancestors if they do not already exist. If the returned node did not exist prior to this call, this node and any ancestors that were created by this call are not guaranteed to become permanent until the flush method is called on the returned node (or one of its ancestors or descendants).",;java.util.prefs.Preferences.systemNodeForPackage(Class&lt;?&gt;),;1
systemRoot,1,1,Returns the root preference node for the system.,;java.util.prefs.Preferences.systemRoot(),;1
systemUTC,1,1,"Obtains a clock that returns the current instant using the best available system clock, converting to date and time using the UTC time-zone. This clock, rather than systemDefaultZone(), should be used when you need the current instant without the date or time. This clock is based on the best available system clock. This may use System.currentTimeMillis(), or a higher resolution clock if one is available. Conversion from instant to date or time uses the UTC time-zone. The returned implementation is immutable, thread-safe and Serializable. It is equivalent to system(ZoneOffset.UTC).",;java.time.Clock.systemUTC(),;1
tableChanged,1,1,"Invoked when this table's TableModel generates a TableModelEvent. The TableModelEvent should be constructed in the coordinate system of the model; the appropriate mapping to the view coordinate system is performed by this JTable when it receives the event. Application code will not use these methods explicitly, they are used internally by JTable. Note that as of 1.3, this method clears the selection, if any.",;javax.swing.JTable.tableChanged(TableModelEvent),;1
takeFirst,1,1,Description copied from interface:BlockingDeque,;java.util.concurrent.LinkedBlockingDeque.takeFirst(),;1
takeLast,1,1,Description copied from interface:BlockingDeque,;java.util.concurrent.LinkedBlockingDeque.takeLast(),;1
target,1,1,Retrieves the the target object reference.,;org.omg.CORBA.Request.target(),;1
terminated,1,1,"Method invoked when the Executor has terminated. Default implementation does nothing. Note: To properly nest multiple overridings, subclasses should generally invoke super.terminated within this method.",;java.util.concurrent.ThreadPoolExecutor.terminated(),;1
tertiaryOrder,1,1,Return the tertiary component of a collation element.,;java.text.CollationElementIterator.tertiaryOrder(int),;1
testBit,1,1,Returns true if and only if the designated bit is set. (Computes ((this &amp; (1&lt;&lt;n)) != 0).),;java.math.BigInteger.testBit(int),;1
textAreaContent,1,1,Writes out text that is contained in a TEXTAREA form element.,;javax.swing.text.html.HTMLWriter.textAreaContent(AttributeSet),;1
textValueChanged,1,1,Description copied from interface:TextListener,;java.awt.AWTEventMulticaster.textValueChanged(TextEvent),;1
thenAccept,1,1,Description copied from interface:CompletionStage,;java.util.concurrent.CompletableFuture.thenAccept(Consumer&lt;?),;1
thenAcceptBoth,1,1,Description copied from interface:CompletionStage,";java.util.concurrent.CompletableFuture.thenAcceptBoth(CompletionStage&lt;?,BiConsumer&lt;?,?)",;1
thenApply,1,1,Description copied from interface:CompletionStage,";java.util.concurrent.CompletableFuture.thenApply(Function&lt;?,?)",;1
thenCombine,1,1,Description copied from interface:CompletionStage,";java.util.concurrent.CompletableFuture.thenCombine(CompletionStage&lt;?,BiFunction&lt;?,?,?)",;1
thenCompose,1,1,Description copied from interface:CompletionStage,";java.util.concurrent.CompletableFuture.thenCompose(Function&lt;?,?)",;1
thenRun,1,1,Description copied from interface:CompletionStage,;java.util.concurrent.CompletableFuture.thenRun(Runnable),;1
throwing,1,1,"Log throwing an exception. This is a convenience method to log that a method is terminating by throwing an exception. The logging is done using the FINER level. If the logger is currently enabled for the given message level then the given arguments are stored in a LogRecord which is forwarded to all registered output handlers. The LogRecord's message is set to ""THROW"". Note that the thrown argument is stored in the LogRecord thrown property, rather than the LogRecord parameters property. Thus it is processed specially by output Formatters and is not treated as a formatting parameter to the LogRecord message property.",";java.util.logging.Logger.throwing(String,String,Throwable)",;1
tick,1,1,"Obtains a clock that returns instants from the specified clock truncated to the nearest occurrence of the specified duration. This clock will only tick as per the specified duration. Thus, if the duration is half a second, the clock will return instants truncated to the half second. The tick duration must be positive. If it has a part smaller than a whole millisecond, then the whole duration must divide into one second without leaving a remainder. All normal tick durations will match these criteria, including any multiple of hours, minutes, seconds and milliseconds, and sensible nanosecond durations, such as 20ns, 250,000ns and 500,000ns. A duration of zero or one nanosecond would have no truncation effect. Passing one of these will return the underlying clock. Implementations may use a caching strategy for performance reasons. As such, it is possible that the start of the requested duration observed via this clock will be later than that observed directly via the underlying clock. The returned implementation is immutable, thread-safe and Serializable providing that the base clock is.",";java.time.Clock.tick(Clock,Duration)",;1
tickMinutes,1,1,"Obtains a clock that returns the current instant ticking in whole minutes using best available system clock. This clock will always have the nano-of-second and second-of-minute fields set to zero. This ensures that the visible time ticks in whole minutes. The underlying clock is the best available system clock, equivalent to using system(ZoneId). Implementations may use a caching strategy for performance reasons. As such, it is possible that the start of the minute observed via this clock will be later than that observed directly via the underlying clock. The returned implementation is immutable, thread-safe and Serializable. It is equivalent to tick(system(zone), Duration.ofMinutes(1)).",;java.time.Clock.tickMinutes(ZoneId),;1
ticks,1,1,"Obtains the length of the track, expressed in MIDI ticks. (The duration of a tick in seconds is determined by the timing resolution of the Sequence containing this track, and also by the tempo of the music as set by the sequencer.)",;javax.sound.midi.Track.ticks(),;1
tickSeconds,1,1,"Obtains a clock that returns the current instant ticking in whole seconds using best available system clock. This clock will always have the nano-of-second field set to zero. This ensures that the visible time ticks in whole seconds. The underlying clock is the best available system clock, equivalent to using system(ZoneId). Implementations may use a caching strategy for performance reasons. As such, it is possible that the start of the second observed via this clock will be later than that observed directly via the underlying clock. The returned implementation is immutable, thread-safe and Serializable. It is equivalent to tick(system(zone), Duration.ofSeconds(1)).",;java.time.Clock.tickSeconds(ZoneId),;1
timeLineOrder,1,1,Gets a comparator that compares two OffsetDateTime instances based solely on the instant. This method differs from the comparison in compareTo(java.time.OffsetDateTime) in that it only compares the underlying instant.,;java.time.OffsetDateTime.timeLineOrder(),;1
times,1,1,Returns a binary expression representing the product of two numeric values.,";javax.management.Query.times(ValueExp,ValueExp)",;1
timestamp,1,1,"The timestamp value associated with this UUID. The 60 bit timestamp value is constructed from the time_low, time_mid, and time_hi fields of this UUID. The resulting timestamp is measured in 100-nanosecond units since midnight, October 15, 1582 UTC. The timestamp value is only meaningful in a time-based UUID, which has version type 1. If this UUID is not a time-based UUID then this method throws UnsupportedOperationException.",;java.util.UUID.timestamp(),;1
to_name,1,1,This operation converts a Stringified Name into an equivalent array of Name Components.,;org.omg.CosNaming._NamingContextExtStub.to_name(String),;1
to_string,1,1,This operation creates a stringified name from the array of Name components.,;org.omg.CosNaming._NamingContextExtStub.to_string(NameComponent[]),;1
to_url,1,1,This operation creates a URL based "iiopname://" format name from the Stringified Name of the object.,";org.omg.CosNaming._NamingContextExtStub.to_url(String,String)",;1
toASCIIString,1,1,Returns the content of this URI as a US-ASCII string. If this URI does not contain any characters in the other category then an invocation of this method will return the same value as an invocation of the toString method. Otherwise this method works as if by invoking that method and then encoding the result.,;java.net.URI.toASCIIString(),;1
toAttributes,1,1,Retrieves the Attributes view of the type/value mappings contained in this Rdn.,;javax.naming.ldap.Rdn.toAttributes(),;1
toBigInteger,1,1,"Converts this BigDecimal to a BigInteger. This conversion is analogous to the narrowing primitive conversion from double to long as defined in section 5.1.3 of The Java閳 Language Specification: any fractional part of this BigDecimal will be discarded. Note that this conversion can lose information about the precision of the BigDecimal value. To have an exception thrown if the conversion is inexact (in other words if a nonzero fractional part is discarded), use the toBigIntegerExact() method.",;java.math.BigDecimal.toBigInteger(),;1
toBigIntegerExact,1,1,"Converts this BigDecimal to a BigInteger, checking for lost information. An exception is thrown if this BigDecimal has a nonzero fractional part.",;java.math.BigDecimal.toBigIntegerExact(),;1
toBundleName,1,1,"Converts the given baseName and locale to the bundle name. This method is called from the default implementation of the newBundle and needsReload methods. This implementation returns the following value: baseName + ""_"" + language + ""_"" + script + ""_"" + country + ""_"" + variant where language, script, country, and variant are the language, script, country, and variant values of locale, respectively. Final component values that are empty Strings are omitted along with the preceding '_'. When the script is empty, the script value is omitted along with the preceding '_'. If all of the values are empty strings, then baseName is returned. For example, if baseName is ""baseName"" and locale is Locale(""ja"","""",""XX""), then ""baseName_ja_ _XX"" is returned. If the given locale is Locale(""en""), then ""baseName_en"" is returned. Overriding this method allows applications to use different conventions in the organization and packaging of localized resources.",";java.util.ResourceBundle.Control.toBundleName(String,Locale)",;1
toCodePoint,1,1,Converts the specified surrogate pair to its supplementary code point value. This method does not validate the specified surrogate pair. The caller must validate it using isSurrogatePair if necessary.,";java.lang.Character.toCodePoint(char,char)",;1
toCollection,1,1,"Returns a Collector that accumulates the input elements into a new Collection, in encounter order. The Collection is created by the provided factory.",;java.util.stream.Collectors.toCollection(Supplier&lt;C&gt;),;1
toCompletableFuture,1,1,Returns this CompletableFuture.,;java.util.concurrent.CompletableFuture.toCompletableFuture(),;1
toDays,1,1,Gets the number of days in this duration. This returns the total number of days in the duration by dividing the number of seconds by 86400. This is based on the standard definition of a day as 24 hours. This instance is immutable and unaffected by this method call.,;java.time.Duration.toDays(),;1
toEngineeringString,1,1,"Returns a string representation of this BigDecimal, using engineering notation if an exponent is needed. Returns a string that represents the BigDecimal as described in the toString() method, except that if exponential notation is used, the power of ten is adjusted to be a multiple of three (engineering notation) such that the integer part of nonzero values will be in the range 1 through 999. If exponential notation is used for zero values, a decimal point and one or two fractional zero digits are used so that the scale of the zero value is preserved. Note that unlike the output of toString(), the output of this method is not guaranteed to recover the same [integer, scale] pair of this BigDecimal if the output string is converting back to a BigDecimal using the string constructor. The result of this method meets the weaker constraint of always producing a numerically equal result from applying the string constructor to the method's output.",;java.math.BigDecimal.toEngineeringString(),;1
toEpochMilli,1,1,"Converts this instant to the number of milliseconds from the epoch of 1970-01-01T00:00:00Z. If this instant represents a point on the time-line too far in the future or past to fit in a long milliseconds, then an exception is thrown. If this instant has greater than millisecond precision, then the conversion will drop any excess precision information as though the amount in nanoseconds was subject to integer division by one million.",;java.time.Instant.toEpochMilli(),;1
toFront,1,1,Brings this internal frame to the front. Places this internal frame at the top of the stacking order and makes the corresponding adjustment to other visible internal frames.,;javax.swing.JInternalFrame.toFront(),;1
toggleExpandState,1,1,"Expands path if it is not expanded, or collapses row if it is expanded. If expanding a path and JTree scrolls on expand, ensureRowsAreVisible is invoked to scroll as many of the children to visible as possible (tries to scroll to last visible descendant of path).",;javax.swing.plaf.basic.BasicTreeUI.toggleExpandState(TreePath),;1
toggleOpenClose,1,1,Hides the popup if it is showing and shows the popup if it is hidden.,;javax.swing.plaf.basic.BasicComboBoxUI.toggleOpenClose(),;1
togglePopup,1,1,Makes the popup visible if it is hidden and makes it hidden if it is visible.,;javax.swing.plaf.basic.BasicComboPopup.togglePopup(),;1
toGMTString,1,1,"Deprecated.As of JDK version 1.1, replaced by DateFormat.format(Date date), using a GMT TimeZone.",;java.util.Date.toGMTString(),;1
toHours,1,1,Gets the number of hours in this duration. This returns the total number of hours in the duration by dividing the number of seconds by 3600. This instance is immutable and unaffected by this method call.,;java.time.Duration.toHours(),;1
toList,1,1,"Returns a Collector that accumulates the input elements into a new List. There are no guarantees on the type, mutability, serializability, or thread-safety of the List returned; if more control over the returned List is required, use toCollection(Supplier).",;java.util.stream.Collectors.toList(),;1
toLocaleString,1,1,"Deprecated.As of JDK version 1.1, replaced by DateFormat.format(Date date).",;java.util.Date.toLocaleString(),;1
toLongArray,1,1,"Returns a new long array containing all the bits in this bit set. More precisely, if long[] longs = s.toLongArray();then longs.length == (s.length()+63)/64 and s.get(n) == ((longs[n/64] &amp; (1L&lt;&lt;(n%64))) != 0)for all n &lt; 64 * longs.length.",;java.util.BitSet.toLongArray(),;1
toMatchResult,1,1,Returns the match state of this matcher as a MatchResult. The result is unaffected by subsequent operations performed upon this matcher.,;java.util.regex.Matcher.toMatchResult(),;1
toMethodDescriptorString,1,1,"Produces a bytecode descriptor representation of the method type. Note that this is not a strict inverse of fromMethodDescriptorString. Two distinct classes which share a common name but have different class loaders will appear identical when viewed within descriptor strings. This method is included for the benefit of applications that must generate bytecodes that process method handles and invokedynamic. fromMethodDescriptorString, because the latter requires a suitable class loader argument.",;java.lang.invoke.MethodType.toMethodDescriptorString(),;1
toMinutes,1,1,Gets the number of minutes in this duration. This returns the total number of minutes in the duration by dividing the number of seconds by 60. This instance is immutable and unaffected by this method call.,;java.time.Duration.toMinutes(),;1
toNanoOfDay,1,1,"Extracts the time as nanos of day, from 0 to 24 * 60 * 60 * 1,000,000,000 - 1.",;java.time.LocalTime.toNanoOfDay(),;1
toNanos,1,1,"Converts this duration to the total length in nanoseconds expressed as a long. If this duration is too large to fit in a long nanoseconds, then an exception is thrown.",;java.time.Duration.toNanos(),;1
toOffsetDateTime,1,1,Converts this date-time to an OffsetDateTime. This creates an offset date-time using the local date-time and offset. The zone ID is ignored.,;java.time.ZonedDateTime.toOffsetDateTime(),;1
toOffsetTime,1,1,Converts this date-time to an OffsetTime. This returns an offset time with the same local time and offset.,;java.time.OffsetDateTime.toOffsetTime(),;1
toPath,1,1,Returns a java.nio.file.Path object constructed from the this abstract path. The resulting Path is associated with the default-filesystem. The first invocation of this method works as if invoking it were equivalent to evaluating the expression: FileSystems.getDefault().getPath(this.getPath()); Subsequent invocations of this method return the same Path. If this abstract pathname is the empty abstract pathname then this method returns a Path that may be used to access the current user directory.,;java.io.File.toPath(),;1
toPlainString,1,1,"Returns a string representation of this BigDecimal without an exponent field. For values with a positive scale, the number of digits to the right of the decimal point is used to indicate scale. For values with a zero or negative scale, the resulting string is generated as if the value were converted to a numerically equal value with zero scale and as if all the trailing zeros of the zero scale value were present in the result. The entire string is prefixed by a minus sign character '-' ('\u002D') if the unscaled value is less than zero. No sign character is prefixed if the unscaled value is zero or positive. Note that if the result of this method is passed to the string constructor, only the numerical value of this BigDecimal will necessarily be recovered; the representation of the new BigDecimal may have a different scale. In particular, if this BigDecimal has a negative scale, the string resulting from this method will have a scale of zero when processed by the string constructor. (This method behaves analogously to the toString method in 1.4 and earlier releases.)",;java.math.BigDecimal.toPlainString(),;1
toResourceName,1,1,"Converts the given bundleName to the form required by the ClassLoader.getResource method by replacing all occurrences of '.' in bundleName with '/' and appending a '.' and the given file suffix. For example, if bundleName is ""foo.bar.MyResources_ja_JP"" and suffix is ""properties"", then ""foo/bar/MyResources_ja_JP.properties"" is returned.",";java.util.ResourceBundle.Control.toResourceName(String,String)",;1
toSecondOfDay,1,1,"Extracts the time as seconds of day, from 0 to 24 * 60 * 60 - 1.",;java.time.LocalTime.toSecondOfDay(),;1
toSet,1,1,"Returns a Collector that accumulates the input elements into a new Set. There are no guarantees on the type, mutability, serializability, or thread-safety of the Set returned; if more control over the returned Set is required, use toCollection(Supplier). This is an unordered Collector.",;java.util.stream.Collectors.toSet(),;1
totalMemory,1,1,"Returns the total amount of memory in the Java virtual machine. The value returned by this method may vary over time, depending on the host environment. Note that the amount of memory required to hold an object of any given type may be implementation-dependent.",;java.lang.Runtime.totalMemory(),;1
toTotalMonths,1,1,Gets the total number of months in this period. This returns the total number of months in the period by multiplying the number of years by 12 and adding the number of months. This instance is immutable and unaffected by this method call.,;java.time.Period.toTotalMonths(),;1
toXMLFormat,1,1,"Return the lexical representation of this instance. The format is specified in XML Schema 1.0 Part 2, Section 3.2.[7-14].1, Lexical Representation"".Specific target lexical representation format is determined by getXMLSchemaType().",;javax.xml.datatype.XMLGregorianCalendar.toXMLFormat(),;1
toXMLString,1,1,"Returns an XML String representing the descriptor.The format is not defined, but an implementation must ensure that the string returned by this method can be used to build an equivalent descriptor when instantiated using the constructor DescriptorSupport(String inStr).Fields which are not String objects will have toString() called on them to create the value. The value will be enclosed in parentheses. It is not guaranteed that you can reconstruct these objects unless they have been specifically set up to support toString() in a meaningful format and have a matching constructor that accepts a String in the same format.If the descriptor is empty the following String is returned: &lt;Descriptor&gt;&lt;/Descriptor&gt;",;javax.management.modelmbean.DescriptorSupport.toXMLString(),;1
toZoneId,1,1,Converts this TimeZone object to a ZoneId.,;java.util.TimeZone.toZoneId(),;1
traceInstructions,1,1,"Enables/Disables tracing of instructions. If the boolean argument is true, this method suggests that the Java virtual machine emit debugging information for each instruction in the virtual machine as it is executed. The format of this information, and the file or other output stream to which it is emitted, depends on the host environment. The virtual machine may ignore this request if it does not support this feature. The destination of the trace output is system dependent. If the boolean argument is false, this method causes the virtual machine to stop performing the detailed instruction trace it is performing.",;java.lang.Runtime.traceInstructions(boolean),;1
traceMethodCalls,1,1,"Enables/Disables tracing of method calls. If the boolean argument is true, this method suggests that the Java virtual machine emit debugging information for each method in the virtual machine as it is called. The format of this information, and the file or other output stream to which it is emitted, depends on the host environment. The virtual machine may ignore this request if it does not support this feature. Calling this method with argument false suggests that the virtual machine cease emitting per-call debugging information.",;java.lang.Runtime.traceMethodCalls(boolean),;1
trailing,1,1,Creates a hit on the trailing edge of the character at the specified charIndex.,;java.awt.font.TextHitInfo.trailing(int),;1
transfer,1,1,"Transfers the element to a consumer, waiting if necessary to do so. More precisely, transfers the specified element immediately if there exists a consumer already waiting to receive it (in take() or timed poll), else inserts the specified element at the tail of this queue and waits until the element is received by a consumer.",;java.util.concurrent.LinkedTransferQueue.transfer(E),;1
transferablesFlavorsChanged,1,1,Notifies the peer that the Transferable's DataFlavors have changed.,;java.awt.dnd.DragSourceContext.transferablesFlavorsChanged(),;1
transferFocus,1,1,"Transfers the focus to the next component, as though this Component were the focus owner.",;java.awt.Component.transferFocus(),;1
transferFocusBackward,1,1,"Transfers the focus to the previous component, as though this Component were the focus owner.",;java.awt.Component.transferFocusBackward(),;1
transferFocusDownCycle,1,1,"Transfers the focus down one focus traversal cycle. If this Container is a focus cycle root, then the focus owner is set to this Container's default Component to focus, and the current focus cycle root is set to this Container. If this Container is not a focus cycle root, then no focus traversal operation occurs.",;java.awt.Container.transferFocusDownCycle(),;1
transferFocusUpCycle,1,1,"Transfers the focus up one focus traversal cycle. Typically, the focus owner is set to this Component's focus cycle root, and the current focus cycle root is set to the new focus owner's focus cycle root. If, however, this Component's focus cycle root is a Window, then the focus owner is set to the focus cycle root's default Component to focus, and the current focus cycle root is unchanged.",;java.awt.Component.transferFocusUpCycle(),;1
transferFrom,1,1,"Transfers bytes into this channel's file from the given readable byte channel. An attempt is made to read up to count bytes from the source channel and write them to this channel's file starting at the given position. An invocation of this method may or may not transfer all of the requested bytes; whether or not it does so depends upon the natures and states of the channels. Fewer than the requested number of bytes will be transferred if the source channel has fewer than count bytes remaining, or if the source channel is non-blocking and has fewer than count bytes immediately available in its input buffer. This method does not modify this channel's position. If the given position is greater than the file's current size then no bytes are transferred. If the source channel has a position then bytes are read starting at that position and then the position is incremented by the number of bytes read. This method is potentially much more efficient than a simple loop that reads from the source channel and writes to this channel. Many operating systems can transfer bytes directly from the source channel into the filesystem cache without actually copying them.",";java.nio.channels.FileChannel.transferFrom(ReadableByteChannel,long,long)",;1
transferTo,1,1,"Transfers bytes from this channel's file to the given writable byte channel. An attempt is made to read up to count bytes starting at the given position in this channel's file and write them to the target channel. An invocation of this method may or may not transfer all of the requested bytes; whether or not it does so depends upon the natures and states of the channels. Fewer than the requested number of bytes are transferred if this channel's file contains fewer than count bytes starting at the given position, or if the target channel is non-blocking and it has fewer than count bytes free in its output buffer. This method does not modify this channel's position. If the given position is greater than the file's current size then no bytes are transferred. If the target channel has a position then bytes are written starting at that position and then the position is incremented by the number of bytes written. This method is potentially much more efficient than a simple loop that reads from this channel and writes to the target channel. Many operating systems can transfer bytes directly from the filesystem cache to the target channel without actually copying them.",";java.nio.channels.FileChannel.transferTo(long,long,WritableByteChannel)",;1
translateHTMLToCSS,1,1,Converts a set of HTML attributes to an equivalent set of CSS attributes.,;javax.swing.text.html.StyleSheet.translateHTMLToCSS(AttributeSet),;1
translatePoint,1,1,Translates the event's coordinates to a new position by adding specified x (horizontal) and y (vertical) offsets.,";java.awt.event.MouseEvent.translatePoint(int,int)",;1
treeDidChange,1,1,"Sent when the tree has changed enough that we need to resize the bounds, but not enough that we need to remove the expanded node set (e.g nodes were expanded or collapsed, or nodes were inserted into the tree). You should never have to invoke this, the UI will invoke this as it needs to.",;javax.swing.JTree.treeDidChange(),;1
trim,1,1,"Returns a string whose value is this string, with any leading and trailing whitespace removed. If this String object represents an empty character sequence, or the first and last characters of character sequence represented by this String object both have codes greater than '\u0020' (the space character), then a reference to this String object is returned. Otherwise, if there is no character with a code greater than '\u0020' in the string, then a String object representing an empty string is returned. Otherwise, let k be the index of the first character in the string whose code is greater than '\u0020', and let m be the index of the last character in the string whose code is greater than '\u0020'. A String object is returned, representing the substring of this string that begins with the character at index k and ends with the character at index m-that is, the result of this.substring(k, m + 1). This method may be used to trim whitespace (as defined above) from the beginning and end of a string.",;java.lang.String.trim(),;1
trimEdits,1,1,"Removes edits in the specified range. All edits in the given range (inclusive, and in reverse order) will have die invoked on them and are removed from the list of edits. This has no effect if from &gt; to.",";javax.swing.undo.UndoManager.trimEdits(int,int)",;1
trimForLimit,1,1,"Reduces the number of queued edits to a range of size limit, centered on the index of the next edit.",;javax.swing.undo.UndoManager.trimForLimit(),;1
tryComplete,1,1,"If the pending count is nonzero, decrements the count; otherwise invokes onCompletion(CountedCompleter) and then similarly tries to complete this task's completer, if one exists, else marks this task as complete.",;java.util.concurrent.CountedCompleter.tryComplete(),;1
tryConvertToOptimisticRead,1,1,"If the lock state matches the given stamp then, if the stamp represents holding a lock, releases it and returns an observation stamp. Or, if an optimistic read, returns it if validated. This method returns zero in all other cases, and so may be useful as a form of ""tryUnlock"".",;java.util.concurrent.locks.StampedLock.tryConvertToOptimisticRead(long),;1
tryConvertToReadLock,1,1,"If the lock state matches the given stamp, performs one of the following actions. If the stamp represents holding a write lock, releases it and obtains a read lock. Or, if a read lock, returns it. Or, if an optimistic read, acquires a read lock and returns a read stamp only if immediately available. This method returns zero in all other cases.",;java.util.concurrent.locks.StampedLock.tryConvertToReadLock(long),;1
tryConvertToWriteLock,1,1,"If the lock state matches the given stamp, performs one of the following actions. If the stamp represents holding a write lock, returns it. Or, if a read lock, if the write lock is available, releases the read lock and returns a write stamp. Or, if an optimistic read, returns a write stamp only if immediately available. This method returns zero in all other cases.",;java.util.concurrent.locks.StampedLock.tryConvertToWriteLock(long),;1
tryOptimisticRead,1,1,"Returns a stamp that can later be validated, or zero if exclusively locked.",;java.util.concurrent.locks.StampedLock.tryOptimisticRead(),;1
tryToLoadClass,1,1,"Tries to load a class from: the bootstrap loader, the system loader, the context loader (if one is present) and finally the loader specified.",";java.awt.datatransfer.DataFlavor.tryToLoadClass(String,ClassLoader)",;1
tryUnfork,1,1,"Tries to unschedule this task for execution. This method will typically (but is not guaranteed to) succeed if this task is the most recently forked task by the current thread, and has not commenced executing in another thread. This method may be useful when arranging alternative local processing of tasks that could have been, but were not, stolen.",;java.util.concurrent.ForkJoinTask.tryUnfork(),;1
tryUnlockRead,1,1,"Releases one hold of the read lock if it is held, without requiring a stamp value. This method may be useful for recovery after errors.",;java.util.concurrent.locks.StampedLock.tryUnlockRead(),;1
tryUnlockWrite,1,1,"Releases the write lock if it is held, without requiring a stamp value. This method may be useful for recovery after errors.",;java.util.concurrent.locks.StampedLock.tryUnlockWrite(),;1
type_modifier,1,1,"Returns a constant indicating the modifier of the value type that this TypeCode object describes. The constant returned must be one of the following: VM_NONE.value, VM_ABSTRACT.value, VM_CUSTOM.value, or VM_TRUNCATABLE.value,",;org.omg.CORBA.TypeCode.type_modifier(),;1
uisToArray,1,1,"Creates an array, populates it with UI objects from the passed-in vector, and returns the array. If uis is null, this method returns an array with zero elements. If uis is an empty vector, this method returns null. A run-time error occurs if any objects in the uis vector are not of type ComponentUI.",;javax.swing.plaf.multi.MultiLookAndFeel.uisToArray(Vector),;1
ulp,1,1,"Returns the size of an ulp, a unit in the last place, of this BigDecimal. An ulp of a nonzero BigDecimal value is the positive distance between this value and the BigDecimal value next larger in magnitude with the same number of digits. An ulp of a zero value is numerically equal to 1 with the scale of this. The result is stored with the same scale as this so the result for zero and nonzero values is equal to [1, this.scale()].",;java.math.BigDecimal.ulp(),;1
unblock,1,1,Unblock multicast datagrams from the given source address that was previously blocked using the block method.,;java.nio.channels.MembershipKey.unblock(InetAddress),;1
unconfigurableExecutorService,1,1,"Returns an object that delegates all defined ExecutorService methods to the given executor, but not any other methods that might otherwise be accessible using casts. This provides a way to safely ""freeze"" configuration and disallow tuning of a given concrete implementation.",;java.util.concurrent.Executors.unconfigurableExecutorService(ExecutorService),;1
unconfigurableScheduledExecutorService,1,1,"Returns an object that delegates all defined ScheduledExecutorService methods to the given executor, but not any other methods that might otherwise be accessible using casts. This provides a way to safely ""freeze"" configuration and disallow tuning of a given concrete implementation.",;java.util.concurrent.Executors.unconfigurableScheduledExecutorService(ScheduledExecutorService),;1
unconfigureArrowButton,1,1,This public method is implementation specific and should be private. Do not call or override.,;javax.swing.plaf.basic.BasicComboBoxUI.unconfigureArrowButton(),;1
unconfigureEnclosingScrollPane,1,1,"Reverses the effect of configureEnclosingScrollPane by replacing the columnHeaderView of the enclosing scroll pane with null. JTable's removeNotify method calls this method, which is protected so that this default uninstallation procedure can be overridden by a subclass.",;javax.swing.JTable.unconfigureEnclosingScrollPane(),;1
undoableEditHappened,1,1,An UndoableEditListener method. This invokes addEdit with e.getEdit().,;javax.swing.undo.UndoManager.undoableEditHappened(UndoableEditEvent),;1
undoOrRedo,1,1,"Convenience method that invokes one of undo or redo. If any edits have been undone (the index of the next edit is less than the length of the edits list) this invokes redo, otherwise it invokes undo.",;javax.swing.undo.UndoManager.undoOrRedo(),;1
undoTo,1,1,"Undoes all changes from the index of the next edit to edit, updating the index of the next edit appropriately.",;javax.swing.undo.UndoManager.undoTo(UndoableEdit),;1
unescapeValue,1,1,"Given an attribute value string formated according to the rules specified in RFC 2253, returns the unformated value. Escapes and quotes are stripped away, and hex-encoded UTF-8 is converted to equivalent UTF-16 characters. Returns a string value as a String, and a binary value as a byte array. Legal and illegal values are defined in RFC 2253. This method is generous in accepting the values and does not catch all illegal values. Therefore, passing in an illegal value might not necessarily trigger an IllegalArgumentException.",;javax.naming.ldap.Rdn.unescapeValue(String),;1
uninstall,1,1,"Uninstalls any state the AbstractFormatter may have installed on the JFormattedTextField. This resets the DocumentFilter, NavigationFilter and additional Actions installed on the JFormattedTextField.",;javax.swing.JFormattedTextField.AbstractFormatter.uninstall(),;1
uninstallBorder,1,1,"Convenience method for uninstalling a border. If the border of the component is a UIResource, it is set to null.",;javax.swing.LookAndFeel.uninstallBorder(JComponent),;1
uninstallChooserPanel,1,1,"Invoked when the panel is removed from the chooser. If override this, be sure to call super.",;javax.swing.colorchooser.AbstractColorChooserPanel.uninstallChooserPanel(JColorChooser),;1
uninstallComboBoxModelListeners,1,1,Removes the listeners from the combo box model,;javax.swing.plaf.basic.BasicComboPopup.uninstallComboBoxModelListeners(ComboBoxModel),;1
uninstallingUI,1,1,"Called when the UI is uninstalling. Since this popup isn't in the component tree, it won't get it's uninstallUI() called. It removes the listeners that were added in addComboBoxListeners().",;javax.swing.plaf.basic.BasicComboPopup.uninstallingUI(),;1
uninstallPreviewPanel,1,1,Removes installed preview panel from the UI delegate.,;javax.swing.plaf.basic.BasicColorChooserUI.uninstallPreviewPanel(),;1
unloadZone,1,1,"Unload a zone (Convert the zone to its memory saving state). The zones are expected to represent a subset of the child elements of the element this view is responsible for. Therefore, the default implementation is to simple remove all the children.",;javax.swing.text.ZoneView.unloadZone(View),;1
unlockRead,1,1,"If the lock state matches the given stamp, releases the non-exclusive lock.",;java.util.concurrent.locks.StampedLock.unlockRead(long),;1
unlockWrite,1,1,"If the lock state matches the given stamp, releases the exclusive lock.",;java.util.concurrent.locks.StampedLock.unlockWrite(long),;1
unmappableForLength,1,1,Static factory method that returns the unique result object describing an unmappable-character error of the given length.,;java.nio.charset.CoderResult.unmappableForLength(int),;1
unmarshalKeyInfo,1,1,Unmarshals a new KeyInfo instance from a mechanism-specific XMLStructure (ex: DOMStructure) instance.,;javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.unmarshalKeyInfo(XMLStructure),;1
unmodifiableCollection,1,1,"Returns an unmodifiable view of the specified collection. This method allows modules to provide users with ""read-only"" access to internal collections. Query operations on the returned collection ""read through"" to the specified collection, and attempts to modify the returned collection, whether direct or via its iterator, result in an UnsupportedOperationException. The returned collection does not pass the hashCode and equals operations through to the backing collection, but relies on Object's equals and hashCode methods. This is necessary to preserve the contracts of these operations in the case that the backing collection is a set or a list. The returned collection will be serializable if the specified collection is serializable.",;java.util.Collections.unmodifiableCollection(Collection&lt;?),;1
unmodifiableList,1,1,"Returns an unmodifiable view of the specified list. This method allows modules to provide users with ""read-only"" access to internal lists. Query operations on the returned list ""read through"" to the specified list, and attempts to modify the returned list, whether direct or via its iterator, result in an UnsupportedOperationException. The returned list will be serializable if the specified list is serializable. Similarly, the returned list will implement RandomAccess if the specified list does.",;java.util.Collections.unmodifiableList(List&lt;?),;1
unmodifiableMap,1,1,"Returns an unmodifiable view of the specified map. This method allows modules to provide users with ""read-only"" access to internal maps. Query operations on the returned map ""read through"" to the specified map, and attempts to modify the returned map, whether direct or via its collection views, result in an UnsupportedOperationException. The returned map will be serializable if the specified map is serializable.",";java.util.Collections.unmodifiableMap(Map&lt;?,?)",;1
unmodifiableNavigableMap,1,1,"Returns an unmodifiable view of the specified navigable map. This method allows modules to provide users with ""read-only"" access to internal navigable maps. Query operations on the returned navigable map ""read through"" to the specified navigable map. Attempts to modify the returned navigable map, whether direct, via its collection views, or via its subMap, headMap, or tailMap views, result in an UnsupportedOperationException. The returned navigable map will be serializable if the specified navigable map is serializable.",";java.util.Collections.unmodifiableNavigableMap(NavigableMap&lt;K,?)",;1
unmodifiableNavigableSet,1,1,"Returns an unmodifiable view of the specified navigable set. This method allows modules to provide users with ""read-only"" access to internal navigable sets. Query operations on the returned navigable set ""read through"" to the specified navigable set. Attempts to modify the returned navigable set, whether direct, via its iterator, or via its subSet, headSet, or tailSet views, result in an UnsupportedOperationException. The returned navigable set will be serializable if the specified navigable set is serializable.",;java.util.Collections.unmodifiableNavigableSet(NavigableSet&lt;T&gt;),;1
unmodifiableSet,1,1,"Returns an unmodifiable view of the specified set. This method allows modules to provide users with ""read-only"" access to internal sets. Query operations on the returned set ""read through"" to the specified set, and attempts to modify the returned set, whether direct or via its iterator, result in an UnsupportedOperationException. The returned set will be serializable if the specified set is serializable.",;java.util.Collections.unmodifiableSet(Set&lt;?),;1
unmodifiableSortedMap,1,1,"Returns an unmodifiable view of the specified sorted map. This method allows modules to provide users with ""read-only"" access to internal sorted maps. Query operations on the returned sorted map ""read through"" to the specified sorted map. Attempts to modify the returned sorted map, whether direct, via its collection views, or via its subMap, headMap, or tailMap views, result in an UnsupportedOperationException. The returned sorted map will be serializable if the specified sorted map is serializable.",";java.util.Collections.unmodifiableSortedMap(SortedMap&lt;K,?)",;1
unmodifiableSortedSet,1,1,"Returns an unmodifiable view of the specified sorted set. This method allows modules to provide users with ""read-only"" access to internal sorted sets. Query operations on the returned sorted set ""read through"" to the specified sorted set. Attempts to modify the returned sorted set, whether direct, via its iterator, or via its subSet, headSet, or tailSet views, result in an UnsupportedOperationException. The returned sorted set will be serializable if the specified sorted set is serializable.",;java.util.Collections.unmodifiableSortedSet(SortedSet&lt;T&gt;),;1
unpark,1,1,"Makes available the permit for the given thread, if it was not already available. If the thread was blocked on park then it will unblock. Otherwise, its next call to park is guaranteed not to block. This operation is not guaranteed to have any effect at all if the given thread has not been started.",;java.util.concurrent.locks.LockSupport.unpark(Thread),;1
unquote,1,1,"Returns an unquoted form of the given String. If q is a String returned by quote(s), then unquote(q).equals(s). If there is no String s for which quote(s).equals(q), then unquote(q) throws an IllegalArgumentException.These rules imply that there is a one-to-one mapping between quoted and unquoted forms.",;javax.management.ObjectName.unquote(String),;1
unreferenced,1,1,Description copied from interface:Unreferenced,;javax.management.remote.rmi.RMIConnectionImpl.unreferenced(),;1
unreflect,1,1,"Makes a direct method handle to m, if the lookup class has permission. If m is non-static, the receiver argument is treated as an initial argument. If m is virtual, overriding is respected on every call. Unlike the Core Reflection API, exceptions are not wrapped. The type of the method handle will be that of the method, with the receiver type prepended (but only if it is non-static). If the method's accessible flag is not set, access checking is performed immediately on behalf of the lookup class. If m is not public, do not share the resulting handle with untrusted parties. The returned method handle will have variable arity if and only if the method's variable arity modifier bit (0x0080) is set. If m is static, and if the returned method handle is invoked, the method's class will be initialized, if it has not already been initialized.",;java.lang.invoke.MethodHandles.Lookup.unreflect(Method),;1
unreflectConstructor,1,1,"Produces a method handle for a reflected constructor. The type of the method handle will be that of the constructor, with the return type changed to the declaring class. The method handle will perform a newInstance operation, creating a new instance of the constructor's class on the arguments passed to the method handle. If the constructor's accessible flag is not set, access checking is performed immediately on behalf of the lookup class. The returned method handle will have variable arity if and only if the constructor's variable arity modifier bit (0x0080) is set. If the returned method handle is invoked, the constructor's class will be initialized, if it has not already been initialized.",;java.lang.invoke.MethodHandles.Lookup.unreflectConstructor(Constructor&lt;?&gt;),;1
unreflectGetter,1,1,"Produces a method handle giving read access to a reflected field. The type of the method handle will have a return type of the field's value type. If the field is static, the method handle will take no arguments. Otherwise, its single argument will be the instance containing the field. If the field's accessible flag is not set, access checking is performed immediately on behalf of the lookup class. If the field is static, and if the returned method handle is invoked, the field's class will be initialized, if it has not already been initialized.",;java.lang.invoke.MethodHandles.Lookup.unreflectGetter(Field),;1
unreflectSetter,1,1,"Produces a method handle giving write access to a reflected field. The type of the method handle will have a void return type. If the field is static, the method handle will take a single argument, of the field's value type, the value to be stored. Otherwise, the two arguments will be the instance containing the field, and the value to be stored. If the field's accessible flag is not set, access checking is performed immediately on behalf of the lookup class. If the field is static, and if the returned method handle is invoked, the field's class will be initialized, if it has not already been initialized.",;java.lang.invoke.MethodHandles.Lookup.unreflectSetter(Field),;1
unreflectSpecial,1,1,"Produces a method handle for a reflected method. It will bypass checks for overriding methods on the receiver, as if called from an invokespecial instruction from within the explicitly specified specialCaller. The type of the method handle will be that of the method, with a suitably restricted receiver type prepended. (The receiver type will be specialCaller or a subtype.) If the method's accessible flag is not set, access checking is performed immediately on behalf of the lookup class, as if invokespecial instruction were being linked. Before method resolution, if the explicitly specified caller class is not identical with the lookup class, or if this lookup object does not have private access privileges, the access fails. The returned method handle will have variable arity if and only if the method's variable arity modifier bit (0x0080) is set.",";java.lang.invoke.MethodHandles.Lookup.unreflectSpecial(Method,Class&lt;?&gt;)",;1
unregister,1,1,Revokes previous registration for the activation descriptor associated with id. An object can no longer be activated via that id.,;java.rmi.activation.Activatable.unregister(ActivationID),;1
unregisterComponent,1,1,Removes a component from tooltip control.,;javax.swing.ToolTipManager.unregisterComponent(JComponent),;1
unregisterKeyboardAction,1,1,"This method is now obsolete. To unregister an existing binding you can either remove the binding from the ActionMap/InputMap, or place a dummy binding the InputMap. Removing the binding from the InputMap allows bindings in parent InputMaps to be active, whereas putting a dummy binding in the InputMap effectively disables the binding from ever happening. Unregisters a keyboard action. This will remove the binding from the ActionMap (if it exists) as well as the InputMaps.",;javax.swing.JComponent.unregisterKeyboardAction(KeyStroke),;1
unregisterProvider,1,1,Removes the designated currently registered synchronization provider from the Factory SPI register.,;javax.sql.rowset.spi.SyncFactory.unregisterProvider(String),;1
unscaledValue,1,1,Returns a BigInteger whose value is the unscaled value of this BigDecimal. (Computes (this * 10this.scale()).),;java.math.BigDecimal.unscaledValue(),;1
unsetDecodeTables,1,1,Removes any quantization and Huffman tables that are currently set.,;javax.imageio.plugins.jpeg.JPEGImageReadParam.unsetDecodeTables(),;1
unsetEncodeTables,1,1,Removes any quantization and Huffman tables that are currently set.,;javax.imageio.plugins.jpeg.JPEGImageWriteParam.unsetEncodeTables(),;1
unsetOrdering,1,1,"Sets a pairwise ordering between two service provider objects within a given category. If one or both objects are not currently registered within the given category, or if no ordering is currently set between them, nothing happens and false is returned. The ordering will be used by the getServiceProviders methods when their useOrdering argument is true.",";javax.imageio.spi.ServiceRegistry.unsetOrdering(Class&lt;T&gt;,T,T)",;1
unsetTiling,1,1,"Removes any previous tile grid parameters specified by calls to setTiling. The default implementation sets the instance variables tileWidth, tileHeight, tileGridXOffset, and tileGridYOffset to 0.",;javax.imageio.ImageWriteParam.unsetTiling(),;1
updateAutoscroll,1,1,update autoscrolling with current cursor location,;java.awt.dnd.DropTarget.updateAutoscroll(Point),;1
updateCachedPreferredSize,1,1,"Updates the preferredSize instance variable, which is returned from getPreferredSize(). For left to right orientations, the size is determined from the current AbstractLayoutCache. For RTL orientations, the preferred size becomes the width minus the minimum x position.",;javax.swing.plaf.basic.BasicTreeUI.updateCachedPreferredSize(),;1
updateCellEditor,1,1,"Updates the cellEditor based on the editability of the JTree that we're contained in. If the tree is editable but doesn't have a cellEditor, a basic one will be used.",;javax.swing.plaf.basic.BasicTreeUI.updateCellEditor(),;1
updateChooser,1,1,Invoked automatically when the model's state changes. It is also called by installChooserPanel to allow you to set up the initial state of your chooser. Override this method to update your ChooserPanel.,;javax.swing.colorchooser.AbstractColorChooserPanel.updateChooser(),;1
updateComponentTreeUI,1,1,"A simple minded look and feel change: ask each node in the tree to updateUI() -- that is, to initialize its UI property with the current look and feel.",;javax.swing.SwingUtilities.updateComponentTreeUI(Component),;1
updateCurrentCursor,1,1,"If the default drag cursor behavior is active, this method sets the default drag cursor for the specified actions supported by the drag source, the drop target action, and status, otherwise this method does nothing.",";java.awt.dnd.DragSourceContext.updateCurrentCursor(int,int,int)",;1
updateDamage,1,1,"Repaint the region of change covered by the given document event. Damages the line that begins the range to cover the case when the insert/remove is only on one line. If lines are added or removed, damages the whole view. The longest line is checked to see if it has changed.",";javax.swing.text.PlainView.updateDamage(DocumentEvent,Shape,ViewFactory)",;1
updateDepthOffset,1,1,Updates how much each depth should be offset by.,;javax.swing.plaf.basic.BasicTreeUI.updateDepthOffset(),;1
updateExpandedDescendants,1,1,Updates the expanded state of all the descendants of path by getting the expanded descendants from the tree and forwarding to the tree state.,;javax.swing.plaf.basic.BasicTreeUI.updateExpandedDescendants(TreePath),;1
updateJAXB,1,1,"Takes an XML node and updates its associated JAXB object and its descendants. This operation can be thought of as an ""in-place"" unmarshalling. The difference is that instead of creating a whole new JAXB tree, this operation updates an existing tree, reusing as much JAXB objects as possible. As a side-effect, this operation updates the association between XML nodes and JAXB objects.",;javax.xml.bind.Binder.updateJAXB(XmlNode),;1
updateLabelUIs,1,1,Updates the UIs for the labels in the label table by calling updateUI on each label. The UIs are updated from the current look and feel. The labels are also set to their preferred size.,;javax.swing.JSlider.updateLabelUIs(),;1
updateLayoutCacheExpandedNodes,1,1,Makes all the nodes that are expanded in JTree expanded in LayoutCache. This invokes updateExpandedDescendants with the root path.,;javax.swing.plaf.basic.BasicTreeUI.updateLayoutCacheExpandedNodes(),;1
updateLayoutState,1,1,"Recompute the value of cellHeight or cellHeights based and cellWidth, based on the current font and the current values of fixedCellWidth, fixedCellHeight, and prototypeCellValue.",;javax.swing.plaf.basic.BasicListUI.updateLayoutState(),;1
updateLeadIndex,1,1,Updates the leadIndex instance variable.,;javax.swing.tree.DefaultTreeSelectionModel.updateLeadIndex(),;1
updateLeadSelectionRow,1,1,Updates the lead row of the selection.,;javax.swing.plaf.basic.BasicTreeUI.updateLeadSelectionRow(),;1
updateListBoxSelectionForEvent,1,1,"A utility method used by the event listeners. Given a mouse event, it changes the list selection to the list item below the mouse.",";javax.swing.plaf.basic.BasicComboPopup.updateListBoxSelectionForEvent(MouseEvent,boolean)",;1
updateLocation,1,1,cause autoscroll to occur,;java.awt.dnd.DropTarget.DropTargetAutoScroller.updateLocation(Point),;1
updateMetrics,1,1,Checks to see if the font metrics and longest line are up-to-date.,;javax.swing.text.PlainView.updateMetrics(),;1
updateRoleMap,1,1,"Handles update of the Relation Service role map for the update of given role in given relation. It is called in relation MBean setRole() (for given role) and setRoles() (for each role) methods (implementation provided in RelationSupport class). It is also called in Relation Service setRole() (for given role) and setRoles() (for each role) methods. To allow the Relation Service to maintain the consistency (in case of MBean unregistration) and to be able to perform queries, this method must be called when a role is updated.",";javax.management.relation.RelationService.updateRoleMap(String,Role,List&lt;ObjectName&gt;)",;1
updateSize,1,1,"Marks the cached size as being invalid, and messages the tree with treeDidChange.",;javax.swing.plaf.basic.BasicTreeUI.updateSize(),;1
updateStyles,1,1,"Updates the style associated with c, and all its children. This is a lighter version of SwingUtilities.updateComponentTreeUI.",;javax.swing.plaf.synth.SynthLookAndFeel.updateStyles(Component),;1
useAnchoringBounds,1,1,"Sets the anchoring of region bounds for this matcher. Invoking this method with an argument of true will set this matcher to use anchoring bounds. If the boolean argument is false, then non-anchoring bounds will be used. Using anchoring bounds, the boundaries of this matcher's region match anchors such as ^ and $. Without anchoring bounds, the boundaries of this matcher's region will not match anchors such as ^ and $. By default, a matcher uses anchoring region boundaries.",;java.util.regex.Matcher.useAnchoringBounds(boolean),;1
useLocale,1,1,Sets this scanner's locale to the specified locale. A scanner's locale affects many elements of its default primitive matching regular expressions; see localized numbers above. Invoking the reset() method will set the scanner's locale to the initial locale.,;java.util.Scanner.useLocale(Locale),;1
usePattern,1,1,Changes the Pattern that this Matcher uses to find matches with. This method causes this matcher to lose information about the groups of the last match that occurred. The matcher's position in the input is maintained and its last append position is unaffected.,;java.util.regex.Matcher.usePattern(Pattern),;1
useProtocolVersion,1,1,"Specify stream protocol version to use when writing the stream. This routine provides a hook to enable the current version of Serialization to write in a format that is backwards compatible to a previous version of the stream format. Every effort will be made to avoid introducing additional backwards incompatibilities; however, sometimes there is no other alternative.",;java.io.ObjectOutputStream.useProtocolVersion(int),;1
useRadix,1,1,"Sets this scanner's default radix to the specified radix. A scanner's radix affects elements of its default number matching regular expressions; see localized numbers above. If the radix is less than Character.MIN_RADIX or greater than Character.MAX_RADIX, then an IllegalArgumentException is thrown. Invoking the reset() method will set the scanner's radix to 10.",;java.util.Scanner.useRadix(int),;1
userNodeForPackage,1,1,"Returns the preference node from the calling user's preference tree that is associated (by convention) with the specified class's package. The convention is as follows: the absolute path name of the node is the fully qualified package name, preceded by a slash ('/'), and with each period ('.') replaced by a slash. For example the absolute path name of the node associated with the class com.acme.widget.Foo is /com/acme/widget. This convention does not apply to the unnamed package, whose associated preference node is &lt;unnamed&gt;. This node is not intended for long term use, but for convenience in the early development of programs that do not yet belong to a package, and for ""throwaway"" programs. Valuable data should not be stored at this node as it is shared by all programs that use it.A class Foo wishing to access preferences pertaining to its package can obtain a preference node as follows: static Preferences prefs = Preferences.userNodeForPackage(Foo.class); This idiom obviates the need for using a string to describe the preferences node and decreases the likelihood of a run-time failure. (If the class name is misspelled, it will typically result in a compile-time error.) Invoking this method will result in the creation of the returned node and its ancestors if they do not already exist. If the returned node did not exist prior to this call, this node and any ancestors that were created by this call are not guaranteed to become permanent until the flush method is called on the returned node (or one of its ancestors or descendants).",;java.util.prefs.Preferences.userNodeForPackage(Class&lt;?&gt;),;1
userRoot,1,1,Returns the root preference node for the calling user.,;java.util.prefs.Preferences.userRoot(),;1
usesFractionalMetrics,1,1,Returns a boolean which whether text fractional metrics mode is used in this FontRenderContext. Call getFractionalMetricsHint() to obtain the corresponding rendering hint value.,;java.awt.font.FontRenderContext.usesFractionalMetrics(),;1
usesShiftModifier,1,1,Returns whether this MenuShortcut must be invoked using the SHIFT key.,;java.awt.MenuShortcut.usesShiftModifier(),;1
useTransparentBounds,1,1,"Sets the transparency of region bounds for this matcher. Invoking this method with an argument of true will set this matcher to use transparent bounds. If the boolean argument is false, then opaque bounds will be used. Using transparent bounds, the boundaries of this matcher's region are transparent to lookahead, lookbehind, and boundary matching constructs. Those constructs can see beyond the boundaries of the region to see if a match is appropriate. Using opaque bounds, the boundaries of this matcher's region are opaque to lookahead, lookbehind, and boundary matching constructs that may try to see beyond them. Those constructs cannot look past the boundaries so they will fail to match anything outside of the region. By default, a matcher uses opaque bounds.",;java.util.regex.Matcher.useTransparentBounds(boolean),;1
usingProxy,1,1,Indicates if the connection is going through a proxy.,;java.net.HttpURLConnection.usingProxy(),;1
UTC,1,1,"Deprecated.As of JDK version 1.1, replaced by Calendar.set(year + 1900, month, date, hrs, min, sec) or GregorianCalendar(year + 1900, month, date, hrs, min, sec), using a UTC TimeZone, followed by Calendar.getTime().getTime().",";java.util.Date.UTC(int,int,int,int,int,int)",;1
valid,1,1,Tests if this file descriptor object is valid.,;java.io.FileDescriptor.valid(),;1
validate_connection,1,1,Throws an org.omg.CORBA.NO_IMPLEMENT exception with the message "This is a locally constrained object." This method does not apply to local objects and is therefore not implemented. This method is the default implementation of the org.omg.CORBA.Object method.,;org.omg.CORBA.LocalObject.validate_connection(),;1
validateInvalidComponents,1,1,Validate all of the components that have been marked invalid.,;javax.swing.RepaintManager.validateInvalidComponents(),;1
validatePage,1,1,"Returns the clone of page with its settings adjusted to be compatible with the current printer of this PrinterJob. For example, the returned PageFormat could have its imageable area adjusted to fit within the physical area of the paper that is used by the current printer.",;java.awt.print.PrinterJob.validatePage(PageFormat),;1
validatePendingAdd,1,1,"Subclasses of this class may override, or envelope, this method to add validation behavior for the BeanContext to examine child objects immediately prior to their being added to the BeanContext.",;java.beans.beancontext.BeanContextSupport.validatePendingAdd(Object),;1
validatePendingRemove,1,1,"Subclasses of this class may override, or envelope, this method to add validation behavior for the BeanContext to examine child objects immediately prior to their being removed from the BeanContext.",;java.beans.beancontext.BeanContextSupport.validatePendingRemove(Object),;1
validatePendingSetBeanContext,1,1,Called from setBeanContext to validate (or otherwise) the pending change in the nesting BeanContext property value. Returning false will cause setBeanContext to throw PropertyVetoException.,;java.beans.beancontext.BeanContextChildSupport.validatePendingSetBeanContext(BeanContext),;1
validateTree,1,1,Recursively descends the container tree and recomputes the layout for any subtrees marked as needing it (those marked as invalid). Synchronization should be provided by the method that calls this one: validate.,;java.awt.Container.validateTree(),;1
valueForPathChanged,1,1,This sets the user object of the TreeNode identified by path and posts a node changed. If you use custom user objects in the TreeModel you're going to need to subclass this and set the user object of the changed node to something meaningful.,";javax.swing.tree.DefaultTreeModel.valueForPathChanged(TreePath,Object)",;1
verifyAttributeCategory,1,1,"Verify that the given object is a Class that implements the given interface, which is assumed to be interface Attribute or a subinterface thereof.",";javax.print.attribute.AttributeSetUtilities.verifyAttributeCategory(Object,Class&lt;?&gt;)",;1
verifyAttributeValue,1,1,"Verify that the given object is an instance of the given interface, which is assumed to be interface Attribute or a subinterface thereof.",";javax.print.attribute.AttributeSetUtilities.verifyAttributeValue(Object,Class&lt;?&gt;)",;1
verifyCategoryForValue,1,1,"Verify that the given attribute category object is equal to the category of the given attribute value object. If so, this method returns doing nothing. If not, this method throws an exception.",";javax.print.attribute.AttributeSetUtilities.verifyCategoryForValue(Class&lt;?&gt;,Attribute)",;1
visitAnnotation,1,1,Visits an annotation value in an annotation. This implementation calls defaultAction.,";javax.lang.model.util.SimpleAnnotationValueVisitor6.visitAnnotation(AnnotationMirror,P)",;1
visitBoolean,1,1,Visits a boolean value in an annotation. This implementation calls defaultAction.,";javax.lang.model.util.SimpleAnnotationValueVisitor6.visitBoolean(boolean,P)",;1
visitByte,1,1,Visits a byte value in an annotation. This implementation calls defaultAction.,";javax.lang.model.util.SimpleAnnotationValueVisitor6.visitByte(byte,P)",;1
visitChar,1,1,Visits a char value in an annotation. This implementation calls defaultAction.,";javax.lang.model.util.SimpleAnnotationValueVisitor6.visitChar(char,P)",;1
visitDeclared,1,1,Visits a declared type. This implementation calls defaultAction.,";javax.lang.model.util.SimpleTypeVisitor6.visitDeclared(DeclaredType,P)",;1
visitDouble,1,1,Visits a double value in an annotation. This implementation calls defaultAction.,";javax.lang.model.util.SimpleAnnotationValueVisitor6.visitDouble(double,P)",;1
visitEnumConstant,1,1,Visits an enum value in an annotation. This implementation calls defaultAction.,";javax.lang.model.util.SimpleAnnotationValueVisitor6.visitEnumConstant(VariableElement,P)",;1
visitError,1,1,Visits an error type. This implementation calls defaultAction.,";javax.lang.model.util.SimpleTypeVisitor6.visitError(ErrorType,P)",;1
visitExecutableAsConstructor,1,1,Visits a CONSTRUCTOR executable element by calling defaultAction.,";javax.lang.model.util.ElementKindVisitor6.visitExecutableAsConstructor(ExecutableElement,P)",;1
visitExecutableAsInstanceInit,1,1,Visits an INSTANCE_INIT executable element by calling defaultAction.,";javax.lang.model.util.ElementKindVisitor6.visitExecutableAsInstanceInit(ExecutableElement,P)",;1
visitExecutableAsMethod,1,1,Visits a METHOD executable element by calling defaultAction.,";javax.lang.model.util.ElementKindVisitor6.visitExecutableAsMethod(ExecutableElement,P)",;1
visitExecutableAsStaticInit,1,1,Visits a STATIC_INIT executable element by calling defaultAction.,";javax.lang.model.util.ElementKindVisitor6.visitExecutableAsStaticInit(ExecutableElement,P)",;1
visitFile,1,1,"Invoked for a file in a directory. Unless overridden, this method returns CONTINUE.",";java.nio.file.SimpleFileVisitor.visitFile(T,BasicFileAttributes)",;1
visitFileFailed,1,1,"Invoked for a file that could not be visited. Unless overridden, this method re-throws the I/O exception that prevented the file from being visited.",";java.nio.file.SimpleFileVisitor.visitFileFailed(T,IOException)",;1
visitFloat,1,1,Visits a float value in an annotation. This implementation calls defaultAction.,";javax.lang.model.util.SimpleAnnotationValueVisitor6.visitFloat(float,P)",;1
visitInt,1,1,Visits an int value in an annotation. This implementation calls defaultAction.,";javax.lang.model.util.SimpleAnnotationValueVisitor6.visitInt(int,P)",;1
visitLong,1,1,Visits a long value in an annotation. This implementation calls defaultAction.,";javax.lang.model.util.SimpleAnnotationValueVisitor6.visitLong(long,P)",;1
visitNoTypeAsNone,1,1,Visits a NONE pseudo-type by calling defaultAction.,";javax.lang.model.util.TypeKindVisitor6.visitNoTypeAsNone(NoType,P)",;1
visitNoTypeAsPackage,1,1,Visits a PACKAGE pseudo-type by calling defaultAction.,";javax.lang.model.util.TypeKindVisitor6.visitNoTypeAsPackage(NoType,P)",;1
visitNoTypeAsVoid,1,1,Visits a VOID pseudo-type by calling defaultAction.,";javax.lang.model.util.TypeKindVisitor6.visitNoTypeAsVoid(NoType,P)",;1
visitNull,1,1,Visits the null type. This implementation calls defaultAction.,";javax.lang.model.util.SimpleTypeVisitor6.visitNull(NullType,P)",;1
visitPrimitiveAsBoolean,1,1,Visits a BOOLEAN primitive type by calling defaultAction.,";javax.lang.model.util.TypeKindVisitor6.visitPrimitiveAsBoolean(PrimitiveType,P)",;1
visitPrimitiveAsByte,1,1,Visits a BYTE primitive type by calling defaultAction.,";javax.lang.model.util.TypeKindVisitor6.visitPrimitiveAsByte(PrimitiveType,P)",;1
visitPrimitiveAsChar,1,1,Visits a CHAR primitive type by calling defaultAction.,";javax.lang.model.util.TypeKindVisitor6.visitPrimitiveAsChar(PrimitiveType,P)",;1
visitPrimitiveAsDouble,1,1,Visits a DOUBLE primitive type by calling defaultAction.,";javax.lang.model.util.TypeKindVisitor6.visitPrimitiveAsDouble(PrimitiveType,P)",;1
visitPrimitiveAsFloat,1,1,Visits a FLOAT primitive type by calling defaultAction.,";javax.lang.model.util.TypeKindVisitor6.visitPrimitiveAsFloat(PrimitiveType,P)",;1
visitPrimitiveAsInt,1,1,Visits an INT primitive type by calling defaultAction.,";javax.lang.model.util.TypeKindVisitor6.visitPrimitiveAsInt(PrimitiveType,P)",;1
visitPrimitiveAsLong,1,1,Visits a LONG primitive type by calling defaultAction.,";javax.lang.model.util.TypeKindVisitor6.visitPrimitiveAsLong(PrimitiveType,P)",;1
visitPrimitiveAsShort,1,1,Visits a SHORT primitive type by calling defaultAction.,";javax.lang.model.util.TypeKindVisitor6.visitPrimitiveAsShort(PrimitiveType,P)",;1
visitShort,1,1,Visits a short value in an annotation. This implementation calls defaultAction.,";javax.lang.model.util.SimpleAnnotationValueVisitor6.visitShort(short,P)",;1
visitString,1,1,Visits a string value in an annotation. This implementation calls defaultAction.,";javax.lang.model.util.SimpleAnnotationValueVisitor6.visitString(String,P)",;1
visitTypeAsAnnotationType,1,1,Visits an ANNOTATION_TYPE type element by calling defaultAction.,";javax.lang.model.util.ElementKindVisitor6.visitTypeAsAnnotationType(TypeElement,P)",;1
visitTypeAsClass,1,1,Visits a CLASS type element by calling defaultAction.,";javax.lang.model.util.ElementKindVisitor6.visitTypeAsClass(TypeElement,P)",;1
visitTypeAsEnum,1,1,Visits an ENUM type element by calling defaultAction.,";javax.lang.model.util.ElementKindVisitor6.visitTypeAsEnum(TypeElement,P)",;1
visitTypeAsInterface,1,1,Visits an INTERFACE type element by calling defaultAction..,";javax.lang.model.util.ElementKindVisitor6.visitTypeAsInterface(TypeElement,P)",;1
visitTypeVariable,1,1,Visits a type variable. This implementation calls defaultAction.,";javax.lang.model.util.SimpleTypeVisitor6.visitTypeVariable(TypeVariable,P)",;1
visitVariableAsEnumConstant,1,1,Visits an ENUM_CONSTANT variable element by calling defaultAction.,";javax.lang.model.util.ElementKindVisitor6.visitVariableAsEnumConstant(VariableElement,P)",;1
visitVariableAsExceptionParameter,1,1,Visits an EXCEPTION_PARAMETER variable element by calling defaultAction.,";javax.lang.model.util.ElementKindVisitor6.visitVariableAsExceptionParameter(VariableElement,P)",;1
visitVariableAsField,1,1,Visits a FIELD variable element by calling defaultAction.,";javax.lang.model.util.ElementKindVisitor6.visitVariableAsField(VariableElement,P)",;1
visitVariableAsLocalVariable,1,1,Visits a LOCAL_VARIABLE variable element by calling defaultAction.,";javax.lang.model.util.ElementKindVisitor6.visitVariableAsLocalVariable(VariableElement,P)",;1
visitVariableAsParameter,1,1,Visits a PARAMETER variable element by calling defaultAction.,";javax.lang.model.util.ElementKindVisitor6.visitVariableAsParameter(VariableElement,P)",;1
visitWildcard,1,1,Visits a wildcard type. This implementation calls defaultAction.,";javax.lang.model.util.SimpleTypeVisitor6.visitWildcard(WildcardType,P)",;1
wait,1,1,"Causes the current thread to wait until another thread invokes the notify() method or the notifyAll() method for this object. In other words, this method behaves exactly as if it simply performs the call wait(0). The current thread must own this object's monitor. The thread releases ownership of this monitor and waits until another thread notifies threads waiting on this object's monitor to wake up either through a call to the notify method or the notifyAll method. The thread then waits until it can re-obtain ownership of the monitor and resumes execution. As in the one argument version, interrupts and spurious wakeups are possible, and this method should always be used in a loop: synchronized (obj) { while (&lt;condition does not hold&gt;) obj.wait(); ... // Perform action appropriate to condition } This method should only be called by a thread that is the owner of this object's monitor. See the notify method for a description of the ways in which a thread can become the owner of a monitor.",;java.lang.Object.wait(),;1
waitForIdle,1,1,Waits until all events currently on the event queue have been processed.,;java.awt.Robot.waitForIdle(),;1
waitForWork,1,1,Used by the worker thread to get a new task to execute,;javax.swing.text.LayoutQueue.waitForWork(),;1
wakeup,1,1,Causes the first selection operation that has not yet returned to return immediately. If another thread is currently blocked in an invocation of the select() or select(long) methods then that invocation will return immediately. If no selection operation is currently in progress then the next invocation of one of these methods will return immediately unless the selectNow() method is invoked in the meantime. In any case the value returned by that invocation may be non-zero. Subsequent invocations of the select() or select(long) methods will block as usual unless this method is invoked again in the meantime. Invoking this method more than once between two successive selection operations has the same effect as invoking it just once.,;java.nio.channels.Selector.wakeup(),;1
wasIcon,1,1,"Returns true if the component has been iconized and the bounds of the desktopIcon are valid, otherwise returns false.",;javax.swing.DefaultDesktopManager.wasIcon(JInternalFrame),;1
wasNull,1,1,Ascertains whether the last value read from this SQLInputImpl object was null.,;javax.sql.rowset.serial.SQLInputImpl.wasNull(),;1
weekBasedYear,1,1,"Returns a field to access the year of a week-based-year based on this WeekFields. This represents the concept of the year where weeks start on a fixed day-of-week, such as Monday and each week belongs to exactly one year. This field is typically used with dayOfWeek() and weekOfWeekBasedYear(). Week one(1) is the week starting on the getFirstDayOfWeek() where there are at least getMinimalDaysInFirstWeek() days in the year. Thus, week one may start before the start of the year. If the first week starts after the start of the year then the period before is in the last week of the previous year. This field can be used with any calendar system. In the resolving phase of parsing, a date can be created from a week-based-year, week-of-year and day-of-week. In strict mode, all three fields are validated against their range of valid values. The week-of-year field is validated to ensure that the resulting week-based-year is the week-based-year requested. In smart mode, all three fields are validated against their range of valid values. The week-of-week-based-year field is validated from 1 to 53, meaning that the resulting date can be in the following week-based-year to that specified. In lenient mode, the year and day-of-week are validated against the range of valid values. The resulting date is calculated equivalent to the following three stage approach. First, create a date on the first day of the first week in the requested week-based-year. Then take the week-of-week-based-year, subtract one, and add the amount in weeks to the date. Finally, adjust to the correct day-of-week within the localized week.",;java.time.temporal.WeekFields.weekBasedYear(),;1
weekOfMonth,1,1,"Returns a field to access the week of month based on this WeekFields. This represents the concept of the count of weeks within the month where weeks start on a fixed day-of-week, such as Monday. This field is typically used with dayOfWeek(). Week one (1) is the week starting on the getFirstDayOfWeek() where there are at least getMinimalDaysInFirstWeek() days in the month. Thus, week one may start up to minDays days before the start of the month. If the first week starts after the start of the month then the period before is week zero (0). For example: - if the 1st day of the month is a Monday, week one starts on the 1st and there is no week zero - if the 2nd day of the month is a Monday, week one starts on the 2nd and the 1st is in week zero - if the 4th day of the month is a Monday, week one starts on the 4th and the 1st to 3rd is in week zero - if the 5th day of the month is a Monday, week two starts on the 5th and the 1st to 4th is in week one This field can be used with any calendar system. In the resolving phase of parsing, a date can be created from a year, week-of-month, month-of-year and day-of-week. In strict mode, all four fields are validated against their range of valid values. The week-of-month field is validated to ensure that the resulting month is the month requested. In smart mode, all four fields are validated against their range of valid values. The week-of-month field is validated from 0 to 6, meaning that the resulting date can be in a different month to that specified. In lenient mode, the year and day-of-week are validated against the range of valid values. The resulting date is calculated equivalent to the following four stage approach. First, create a date on the first day of the first week of January in the requested year. Then take the month-of-year, subtract one, and add the amount in months to the date. Then take the week-of-month, subtract one, and add the amount in weeks to the date. Finally, adjust to the correct day-of-week within the localized week.",;java.time.temporal.WeekFields.weekOfMonth(),;1
weekOfWeekBasedYear,1,1,"Returns a field to access the week of a week-based-year based on this WeekFields. This represents the concept of the count of weeks within the year where weeks start on a fixed day-of-week, such as Monday and each week belongs to exactly one year. This field is typically used with dayOfWeek() and weekBasedYear(). Week one(1) is the week starting on the getFirstDayOfWeek() where there are at least getMinimalDaysInFirstWeek() days in the year. If the first week starts after the start of the year then the period before is in the last week of the previous year. For example: - if the 1st day of the year is a Monday, week one starts on the 1st - if the 2nd day of the year is a Monday, week one starts on the 2nd and the 1st is in the last week of the previous year - if the 4th day of the year is a Monday, week one starts on the 4th and the 1st to 3rd is in the last week of the previous year - if the 5th day of the year is a Monday, week two starts on the 5th and the 1st to 4th is in week one This field can be used with any calendar system. In the resolving phase of parsing, a date can be created from a week-based-year, week-of-year and day-of-week. In strict mode, all three fields are validated against their range of valid values. The week-of-year field is validated to ensure that the resulting week-based-year is the week-based-year requested. In smart mode, all three fields are validated against their range of valid values. The week-of-week-based-year field is validated from 1 to 53, meaning that the resulting date can be in the following week-based-year to that specified. In lenient mode, the year and day-of-week are validated against the range of valid values. The resulting date is calculated equivalent to the following three stage approach. First, create a date on the first day of the first week in the requested week-based-year. Then take the week-of-week-based-year, subtract one, and add the amount in weeks to the date. Finally, adjust to the correct day-of-week within the localized week.",;java.time.temporal.WeekFields.weekOfWeekBasedYear(),;1
weekOfYear,1,1,"Returns a field to access the week of year based on this WeekFields. This represents the concept of the count of weeks within the year where weeks start on a fixed day-of-week, such as Monday. This field is typically used with dayOfWeek(). Week one(1) is the week starting on the getFirstDayOfWeek() where there are at least getMinimalDaysInFirstWeek() days in the year. Thus, week one may start up to minDays days before the start of the year. If the first week starts after the start of the year then the period before is week zero (0). For example: - if the 1st day of the year is a Monday, week one starts on the 1st and there is no week zero - if the 2nd day of the year is a Monday, week one starts on the 2nd and the 1st is in week zero - if the 4th day of the year is a Monday, week one starts on the 4th and the 1st to 3rd is in week zero - if the 5th day of the year is a Monday, week two starts on the 5th and the 1st to 4th is in week one This field can be used with any calendar system. In the resolving phase of parsing, a date can be created from a year, week-of-year and day-of-week. In strict mode, all three fields are validated against their range of valid values. The week-of-year field is validated to ensure that the resulting year is the year requested. In smart mode, all three fields are validated against their range of valid values. The week-of-year field is validated from 0 to 54, meaning that the resulting date can be in a different year to that specified. In lenient mode, the year and day-of-week are validated against the range of valid values. The resulting date is calculated equivalent to the following three stage approach. First, create a date on the first day of the first week in the requested year. Then take the week-of-year, subtract one, and add the amount in weeks to the date. Finally, adjust to the correct day-of-week within the localized week.",;java.time.temporal.WeekFields.weekOfYear(),;1
whenComplete,1,1,Description copied from interface:CompletionStage,";java.util.concurrent.CompletableFuture.whenComplete(BiConsumer&lt;?,?)",;1
whitespaceChars,1,1,Specifies that all characters c in the range low&lt;=c&lt;=high are white space characters. White space characters serve only to separate tokens in the input stream. Any other attribute settings for the characters in the specified range are cleared.,";java.io.StreamTokenizer.whitespaceChars(int,int)",;1
width,1,1,"Returns a spring whose minimum, preferred, maximum and value properties are defined by the widths of the minimumSize, preferredSize, maximumSize and size properties of the supplied component. The returned spring is a 'wrapper' implementation whose methods call the appropriate size methods of the supplied component. The minimum, preferred, maximum and value properties of the returned spring therefore report the current state of the appropriate properties in the component and track them as they change.",;javax.swing.Spring.width(Component),;1
windowForComponent,1,1,"Returns the first Window ancestor of c, or null if c is not contained inside a Window. Note: This method provides the same functionality as getWindowAncestor.",;javax.swing.SwingUtilities.windowForComponent(Component),;1
windowInit,1,1,Called by the constructors to init the JWindow properly.,;javax.swing.JWindow.windowInit(),;1
withCachedThreadPool,1,1,"Creates an asynchronous channel group with a given thread pool that creates new threads as needed. The executor parameter is an ExecutorService that creates new threads as needed to execute tasks that are submitted to handle I/O events and dispatch completion results for operations initiated on asynchronous channels in the group. It may reuse previously constructed threads when they are available. The initialSize parameter may be used by the implementation as a hint as to the initial number of tasks it may submit. For example, it may be used to indicate the initial number of threads that wait on I/O events. The executor is intended to be used exclusively by the resulting asynchronous channel group. Termination of the group results in the orderly shutdown of the executor service. Shutting down the executor service by other means results in unspecified behavior. The group is created by invoking the openAsynchronousChannelGroup(ExecutorService,int) method of the system-wide default AsynchronousChannelProvider object.",";java.nio.channels.AsynchronousChannelGroup.withCachedThreadPool(ExecutorService,int)",;1
withChronology,1,1,"Returns a copy of this formatter with a new override chronology. This returns a formatter with similar state to this formatter but with the override chronology set. By default, a formatter has no override chronology, returning null. If an override is added, then any date that is formatted or parsed will be affected. When formatting, if the temporal object contains a date, then it will be converted to a date in the override chronology. Whether the temporal contains a date is determined by querying the EPOCH_DAY field. Any time or zone will be retained unaltered unless overridden. If the temporal object does not contain a date, but does contain one or more ChronoField date fields, then a DateTimeException is thrown. In all other cases, the override chronology is added to the temporal, replacing any previous chronology, but without changing the date/time. When parsing, there are two distinct cases to consider. If a chronology has been parsed directly from the text, perhaps because DateTimeFormatterBuilder.appendChronologyId() was used, then this override chronology has no effect. If no zone has been parsed, then this override chronology will be used to interpret the ChronoField values into a date according to the date resolving rules of the chronology. This instance is immutable and unaffected by this method call.",;java.time.format.DateTimeFormatter.withChronology(Chronology),;1
withDays,1,1,Returns a copy of this period with the specified amount of days. This sets the amount of the days unit in a copy of this period. The years and months units are unaffected. This instance is immutable and unaffected by this method call.,;java.time.Period.withDays(int),;1
withDecimalSeparator,1,1,Returns a copy of the info with a new character that represents the decimal point. The character used to represent a decimal point may vary by culture. This method specifies the character to use.,;java.time.format.DecimalStyle.withDecimalSeparator(char),;1
withDecimalStyle,1,1,Returns a copy of this formatter with a new DecimalStyle. This instance is immutable and unaffected by this method call.,;java.time.format.DateTimeFormatter.withDecimalStyle(DecimalStyle),;1
withEarlierOffsetAtOverlap,1,1,"Returns a copy of this date-time changing the zone offset to the earlier of the two valid offsets at a local time-line overlap. This method only has any effect when the local time-line overlaps, such as at an autumn daylight savings cutover. In this scenario, there are two valid offsets for the local date-time. Calling this method will return a zoned date-time with the earlier of the two selected. If this method is called when it is not an overlap, this is returned. This instance is immutable and unaffected by this method call.",;java.time.ZonedDateTime.withEarlierOffsetAtOverlap(),;1
withFixedOffsetZone,1,1,"Returns a copy of this date-time with the zone ID set to the offset. This returns a zoned date-time where the zone ID is the same as getOffset(). The local date-time, offset and instant of the result will be the same as in this date-time. Setting the date-time to a fixed single offset means that any future calculations, such as addition or subtraction, have no complex edge cases due to time-zone rules. This might also be useful when sending a zoned date-time across a network, as most protocols, such as ISO-8601, only handle offsets, and not region-based zone IDs. This is equivalent to ZonedDateTime.of(zdt.toLocalDateTime(), zdt.getOffset()).",;java.time.ZonedDateTime.withFixedOffsetZone(),;1
withFixedThreadPool,1,1,"Creates an asynchronous channel group with a fixed thread pool. The resulting asynchronous channel group reuses a fixed number of threads. At any point, at most nThreads threads will be active processing tasks that are submitted to handle I/O events and dispatch completion results for operations initiated on asynchronous channels in the group. The group is created by invoking the openAsynchronousChannelGroup(int,ThreadFactory) method of the system-wide default AsynchronousChannelProvider object.",";java.nio.channels.AsynchronousChannelGroup.withFixedThreadPool(int,ThreadFactory)",;1
withInitial,1,1,Creates a thread local variable. The initial value of the variable is determined by invoking the get method on the Supplier.,;java.lang.ThreadLocal.withInitial(Supplier&lt;?),;1
withLaterOffsetAtOverlap,1,1,"Returns a copy of this date-time changing the zone offset to the later of the two valid offsets at a local time-line overlap. This method only has any effect when the local time-line overlaps, such as at an autumn daylight savings cutover. In this scenario, there are two valid offsets for the local date-time. Calling this method will return a zoned date-time with the later of the two selected. If this method is called when it is not an overlap, this is returned. This instance is immutable and unaffected by this method call.",;java.time.ZonedDateTime.withLaterOffsetAtOverlap(),;1
withLocale,1,1,"Returns a copy of this formatter with a new locale. This is used to lookup any part of the formatter needing specific localization, such as the text or localized pattern. This instance is immutable and unaffected by this method call.",;java.time.format.DateTimeFormatter.withLocale(Locale),;1
withMonths,1,1,Returns a copy of this period with the specified amount of months. This sets the amount of the months unit in a copy of this period. The years and days units are unaffected. The months unit is not automatically normalized with the years unit. This means that a period of "15 months" is different to a period of "1 year and 3 months". This instance is immutable and unaffected by this method call.,;java.time.Period.withMonths(int),;1
withNanos,1,1,"Returns a copy of this duration with the specified nano-of-second. This returns a duration with the specified nano-of-second, retaining the seconds part of this duration. This instance is immutable and unaffected by this method call.",;java.time.Duration.withNanos(int),;1
withNegativeSign,1,1,Returns a copy of the info with a new character that represents the negative sign. The character used to represent a negative number may vary by culture. This method specifies the character to use.,;java.time.format.DecimalStyle.withNegativeSign(char),;1
withoutPadding,1,1,"Returns an encoder instance that encodes equivalently to this one, but without adding any padding character at the end of the encoded byte data. The encoding scheme of this encoder instance is unaffected by this invocation. The returned encoder instance should be used for non-padding encoding operation.",;java.util.Base64.Encoder.withoutPadding(),;1
withPositiveSign,1,1,Returns a copy of the info with a new character that represents the positive sign. The character used to represent a positive number may vary by culture. This method specifies the character to use.,;java.time.format.DecimalStyle.withPositiveSign(char),;1
withResolverStyle,1,1,"Returns a copy of this formatter with a new resolver style. This returns a formatter with similar state to this formatter but with the resolver style set. By default, a formatter has the SMART resolver style. Changing the resolver style only has an effect during parsing. Parsing a text string occurs in two phases. Phase 1 is a basic text parse according to the fields added to the builder. Phase 2 resolves the parsed field-value pairs into date and/or time objects. The resolver style is used to control how phase 2, resolving, happens. See ResolverStyle for more information on the options available. This instance is immutable and unaffected by this method call.",;java.time.format.DateTimeFormatter.withResolverStyle(ResolverStyle),;1
withSeconds,1,1,"Returns a copy of this duration with the specified amount of seconds. This returns a duration with the specified seconds, retaining the nano-of-second part of this duration. This instance is immutable and unaffected by this method call.",;java.time.Duration.withSeconds(long),;1
withThreadPool,1,1,"Creates an asynchronous channel group with a given thread pool. The executor parameter is an ExecutorService that executes tasks submitted to dispatch completion results for operations initiated on asynchronous channels in the group. Care should be taken when configuring the executor service. It should support direct handoff or unbounded queuing of submitted tasks, and the thread that invokes the execute method should never invoke the task directly. An implementation may mandate additional constraints. The executor is intended to be used exclusively by the resulting asynchronous channel group. Termination of the group results in the orderly shutdown of the executor service. Shutting down the executor service by other means results in unspecified behavior. The group is created by invoking the openAsynchronousChannelGroup(ExecutorService,int) method of the system-wide default AsynchronousChannelProvider object with an initialSize of 0.",;java.nio.channels.AsynchronousChannelGroup.withThreadPool(ExecutorService),;1
withVariant,1,1,"Returns a HijrahDate with the Chronology requested. The year, month, and day are checked against the new requested HijrahChronology. If the chronology has a shorter month length for the month, the day is reduced to be the last day of the month.",;java.time.chrono.HijrahDate.withVariant(HijrahChronology),;1
withYears,1,1,Returns a copy of this period with the specified amount of years. This sets the amount of the years unit in a copy of this period. The months and days units are unaffected. The months unit is not automatically normalized with the years unit. This means that a period of "15 months" is different to a period of "1 year and 3 months". This instance is immutable and unaffected by this method call.,;java.time.Period.withYears(int),;1
withZeroDigit,1,1,"Returns a copy of the info with a new character that represents zero. The character used to represent digits may vary by culture. This method specifies the zero character to use, which implies the characters for one to nine.",;java.time.format.DecimalStyle.withZeroDigit(char),;1
withZoneSameInstant,1,1,"Returns a copy of this date-time with a different time-zone, retaining the instant. This method changes the time-zone and retains the instant. This normally results in a change to the local date-time. This method is based on retaining the same instant, thus gaps and overlaps in the local time-line have no effect on the result. To change the offset while keeping the local time, use withZoneSameLocal(ZoneId).",;java.time.ZonedDateTime.withZoneSameInstant(ZoneId),;1
withZoneSameLocal,1,1,"Returns a copy of this date-time with a different time-zone, retaining the local date-time if possible. This method changes the time-zone and retains the local date-time. The local date-time is only changed if it is invalid for the new zone, determined using the same approach as ofLocal(LocalDateTime, ZoneId, ZoneOffset). To change the zone and adjust the local date-time, use withZoneSameInstant(ZoneId). This instance is immutable and unaffected by this method call.",;java.time.ZonedDateTime.withZoneSameLocal(ZoneId),;1
wordChars,1,1,Specifies that all characters c in the range low&lt;=c&lt;=high are word constituents. A word token consists of a word constituent followed by zero or more word constituents or number constituents.,";java.io.StreamTokenizer.wordChars(int,int)",;1
work_pending,1,1,"Returns true if the ORB needs the main thread to perform some work, and false if the ORB does not need the main thread.",;org.omg.CORBA.ORB.work_pending(),;1
wrapException,1,1,Wraps an exception thrown by an implementation method. It returns the corresponding client-side exception.,;javax.rmi.CORBA.Util.wrapException(Throwable),;1
wrapperInstanceTarget,1,1,Produces or recovers a target method handle which is behaviorally equivalent to the unique method of this wrapper instance. The object x must have been produced by a call to asInterfaceInstance. This requirement may be tested via isWrapperInstance.,;java.lang.invoke.MethodHandleProxies.wrapperInstanceTarget(Object),;1
wrapperInstanceType,1,1,Recovers the unique single-method interface type for which this wrapper instance was created. The object x must have been produced by a call to asInterfaceInstance. This requirement may be tested via isWrapperInstance.,;java.lang.invoke.MethodHandleProxies.wrapperInstanceType(Object),;1
write_abstract_interface,1,1,Marshals a value object or a stub object.,;org.omg.CORBA_2_3.portable.OutputStream.write_abstract_interface(Object),;1
write_any,1,1,Writes an Any on this output stream.,;org.omg.CORBA.portable.OutputStream.write_any(Any),;1
write_boolean,1,1,Writes a boolean value to this stream.,;org.omg.CORBA.portable.OutputStream.write_boolean(boolean),;1
write_boolean_array,1,1,Writes an array of booleans on this output stream.,";org.omg.CORBA.portable.OutputStream.write_boolean_array(boolean[],int,int)",;1
write_char,1,1,Writes a char value to this stream.,;org.omg.CORBA.portable.OutputStream.write_char(char),;1
write_char_array,1,1,Writes an array of chars on this output stream.,";org.omg.CORBA.portable.OutputStream.write_char_array(char[],int,int)",;1
write_Context,1,1,Writes a CORBA context on this stream. The Context is marshaled as a sequence of strings. Only those Context values specified in the contexts parameter are actually written.,";org.omg.CORBA.portable.OutputStream.write_Context(Context,ContextList)",;1
write_double,1,1,Writes a double value to this stream.,;org.omg.CORBA.portable.OutputStream.write_double(double),;1
write_double_array,1,1,Writes an array of doubles on this output stream.,";org.omg.CORBA.portable.OutputStream.write_double_array(double[],int,int)",;1
write_fixed,1,1,Writes a BigDecimal number.,;org.omg.CORBA.portable.OutputStream.write_fixed(BigDecimal),;1
write_float,1,1,Writes a float value to this stream.,;org.omg.CORBA.portable.OutputStream.write_float(float),;1
write_float_array,1,1,Writes an array of floats on this output stream.,";org.omg.CORBA.portable.OutputStream.write_float_array(float[],int,int)",;1
write_long,1,1,Writes a CORBA long (i.e. Java int) value to this stream.,;org.omg.CORBA.portable.OutputStream.write_long(int),;1
write_long_array,1,1,Writes an array of CORBA longs (i.e. Java ints) on this output stream.,";org.omg.CORBA.portable.OutputStream.write_long_array(int[],int,int)",;1
write_longlong,1,1,Writes a CORBA longlong (i.e. Java long) value to this stream.,;org.omg.CORBA.portable.OutputStream.write_longlong(long),;1
write_longlong_array,1,1,Writes an array of CORBA longlongs (i.e. Java longs) on this output stream.,";org.omg.CORBA.portable.OutputStream.write_longlong_array(long[],int,int)",;1
write_Object,1,1,Writes a CORBA Object on this output stream.,;org.omg.CORBA.portable.OutputStream.write_Object(Object),;1
write_octet,1,1,Writes a CORBA octet (i.e. byte) value to this stream.,;org.omg.CORBA.portable.OutputStream.write_octet(byte),;1
write_octet_array,1,1,Writes an array of CORBA octets (bytes) on this output stream.,";org.omg.CORBA.portable.OutputStream.write_octet_array(byte[],int,int)",;1
write_Principal,1,1,Deprecated.Deprecated by CORBA 2.2.,;org.omg.CORBA.portable.OutputStream.write_Principal(Principal),;1
write_short,1,1,Writes a short value to this stream.,;org.omg.CORBA.portable.OutputStream.write_short(short),;1
write_short_array,1,1,Writes an array of shorts on this output stream.,";org.omg.CORBA.portable.OutputStream.write_short_array(short[],int,int)",;1
write_string,1,1,Writes a string value to this stream.,;org.omg.CORBA.portable.OutputStream.write_string(String),;1
write_TypeCode,1,1,Writes a TypeCode on this output stream.,;org.omg.CORBA.portable.OutputStream.write_TypeCode(TypeCode),;1
write_ulong,1,1,Writes an unsigned CORBA long (i.e. Java int) value to this stream.,;org.omg.CORBA.portable.OutputStream.write_ulong(int),;1
write_ulong_array,1,1,Writes an array of unsigned CORBA longs (i.e. Java ints) on this output stream.,";org.omg.CORBA.portable.OutputStream.write_ulong_array(int[],int,int)",;1
write_ulonglong,1,1,Writes an unsigned CORBA longlong (i.e. Java long) value to this stream.,;org.omg.CORBA.portable.OutputStream.write_ulonglong(long),;1
write_ulonglong_array,1,1,Writes an array of unsigned CORBA longlongs (i.e. Java ints) on this output stream.,";org.omg.CORBA.portable.OutputStream.write_ulonglong_array(long[],int,int)",;1
write_ushort,1,1,Writes an unsigned short value to this stream.,;org.omg.CORBA.portable.OutputStream.write_ushort(short),;1
write_ushort_array,1,1,Writes an array of unsigned shorts on this output stream.,";org.omg.CORBA.portable.OutputStream.write_ushort_array(short[],int,int)",;1
write_wchar,1,1,Writes a wide char value to this stream.,;org.omg.CORBA.portable.OutputStream.write_wchar(char),;1
write_wchar_array,1,1,Writes an array of wide chars on this output stream.,";org.omg.CORBA.portable.OutputStream.write_wchar_array(char[],int,int)",;1
write_wstring,1,1,Writes a wide string value to this stream.,;org.omg.CORBA.portable.OutputStream.write_wstring(String),;1
writeAbstractObject,1,1,"Writes a java.lang.Object as either a value or a CORBA Object. If obj is a value object or a stub object, it is written to out.write_abstract_interface(java.lang.Object). If objisan exported RMI-IIOP server object, the tie is found and wired to obj, then written to out.write_abstract_interface(java.lang.Object).",";javax.rmi.CORBA.Util.writeAbstractObject(OutputStream,Object)",;1
writeAny,1,1,Writes any java.lang.Object as a CORBA any.,";javax.rmi.CORBA.Util.writeAny(OutputStream,Object)",;1
writeArray,1,1,Writes an Array object in the Java programming language to this SQLOutputImpl object. The driver converts this value to a serializable SerialArray SQL ARRAY value before returning it to the database.,;javax.sql.rowset.serial.SQLOutputImpl.writeArray(Array),;1
writeAsciiStream,1,1,Writes a stream of ASCII characters to this SQLOutputImpl object. The driver will do any necessary conversion from ASCII to the database CHAR format.,;javax.sql.rowset.serial.SQLOutputImpl.writeAsciiStream(InputStream),;1
writeAttributeSet,1,1,Writes a set of attributes to the given object stream for the purpose of serialization. This will take special care to deal with static attribute keys that have been registered wit the registerStaticAttributeKey method. Any attribute key not registered as a static key will be serialized directly. All values are expected to be serializable.,";javax.swing.text.StyleContext.writeAttributeSet(ObjectOutputStream,AttributeSet)",;1
writeBigDecimal,1,1,Writes a java.math.BigDecimal object in the Java programming language to this SQLOutputImpl object. The driver converts it to an SQL NUMERIC before returning it to the database.,;javax.sql.rowset.serial.SQLOutputImpl.writeBigDecimal(BigDecimal),;1
writeBinaryStream,1,1,Writes a stream of uninterpreted bytes to this SQLOutputImpl object.,;javax.sql.rowset.serial.SQLOutputImpl.writeBinaryStream(InputStream),;1
writeBit,1,1,Description copied from interface:ImageOutputStream,;javax.imageio.stream.ImageOutputStreamImpl.writeBit(int),;1
writeBits,1,1,Description copied from interface:ImageOutputStream,";javax.imageio.stream.ImageOutputStreamImpl.writeBits(long,int)",;1
writeBlob,1,1,Writes a Blob object in the Java programming language to this SQLOutputImpl object. The driver converts it to a serializable SerialBlob SQL BLOB value before returning it to the database.,;javax.sql.rowset.serial.SQLOutputImpl.writeBlob(Blob),;1
writeBody,1,1,Iterates over the elements in the document and processes elements based on whether they are branch elements or leaf elements. This method specially handles leaf elements that are text.,;javax.swing.text.html.MinimalHTMLWriter.writeBody(),;1
writeCharacterStream,1,1,Writes a stream of Unicode characters to this SQLOutputImpl object. The driver will do any necessary conversion from Unicode to the database CHAR format.,;javax.sql.rowset.serial.SQLOutputImpl.writeCharacterStream(Reader),;1
writeChildren,1,1,Used to serialize all children of this BeanContext.,;java.beans.beancontext.BeanContextSupport.writeChildren(ObjectOutputStream),;1
writeClassDescriptor,1,1,"Write the specified class descriptor to the ObjectOutputStream. Class descriptors are used to identify the classes of objects written to the stream. Subclasses of ObjectOutputStream may override this method to customize the way in which class descriptors are written to the serialization stream. The corresponding method in ObjectInputStream, readClassDescriptor, should then be overridden to reconstitute the class descriptor from its custom stream representation. By default, this method writes class descriptors according to the format defined in the Object Serialization specification. Note that this method will only be called if the ObjectOutputStream is not using the old serialization stream format (set by calling ObjectOutputStream's useProtocolVersion method). If this serialization stream is using the old format (PROTOCOL_VERSION_1), the class descriptor will be written internally in a manner that cannot be overridden or customized.",;java.io.ObjectOutputStream.writeClassDescriptor(ObjectStreamClass),;1
writeClob,1,1,Writes a Clob object in the Java programming language to this SQLOutputImpl object. The driver converts it to a serializable SerialClob SQL CLOB value before returning it to the database.,;javax.sql.rowset.serial.SQLOutputImpl.writeClob(Clob),;1
writeComponent,1,1,Responsible for handling Component Elements; deliberately unimplemented. How this method is implemented is a matter of policy.,;javax.swing.text.html.MinimalHTMLWriter.writeComponent(Element),;1
writeContent,1,1,Writes out the attribute set in an HTML-compliant manner.,";javax.swing.text.html.MinimalHTMLWriter.writeContent(Element,boolean)",;1
writeDate,1,1,Writes a java.sql.Date object in the Java programming language to this SQLOutputImpl object. The driver converts it to an SQL DATE before returning it to the database.,;javax.sql.rowset.serial.SQLOutputImpl.writeDate(Date),;1
writeDoubles,1,1,Description copied from interface:ImageOutputStream,";javax.imageio.stream.ImageOutputStreamImpl.writeDoubles(double[],int,int)",;1
writeEmbeddedTags,1,1,Searches for embedded tags in the AttributeSet and writes them out. It also stores these tags in a vector so that when appropriate the corresponding end tags can be written out.,;javax.swing.text.html.HTMLWriter.writeEmbeddedTags(AttributeSet),;1
writeEndParagraph,1,1,"Emits an end tag for a &lt;p&gt; tag. Before writing out the tag, this method ensures that all other tags that have been opened are appropriately closed off.",;javax.swing.text.html.MinimalHTMLWriter.writeEndParagraph(),;1
writeEndTag,1,1,Writes out an end tag appropriately indented. Also decrements the indent level.,;javax.swing.text.html.MinimalHTMLWriter.writeEndTag(String),;1
writeFields,1,1,Write the buffered fields to the stream.,;java.io.ObjectOutputStream.writeFields(),;1
writeFloats,1,1,Description copied from interface:ImageOutputStream,";javax.imageio.stream.ImageOutputStreamImpl.writeFloats(float[],int,int)",;1
writeHeader,1,1,"Writes out the &lt;head&gt; and &lt;style&gt; tags, and then invokes writeStyles() to write out all the named styles as the content of the &lt;style&gt; tag. The content is surrounded by valid HTML comment markers to ensure that the document is viewable in applications/browsers that do not support the tag.",;javax.swing.text.html.MinimalHTMLWriter.writeHeader(),;1
writeHTMLTags,1,1,"Generates bold &lt;b&gt;, italic &lt;i&gt;, and &lt;u&gt; tags for the text based on its attribute settings.",;javax.swing.text.html.MinimalHTMLWriter.writeHTMLTags(AttributeSet),;1
writeImage,1,1,"Responsible for handling Icon Elements; deliberately unimplemented. How to implement this method is an issue of policy. For example, if you're generating an &lt;img&gt; tag, how should you represent the src attribute (the location of the image)? In certain cases it could be a URL, in others it could be read from a stream.",;javax.swing.text.html.MinimalHTMLWriter.writeImage(Element),;1
writeInsert,1,1,"Inserts a new image into an existing image stream. Existing images with an index greater than imageIndex are preserved, and their indices are each increased by 1. A value for imageIndex of -1 may be used to signify an index one larger than the previous largest index; that is, it will cause the image to be logically appended to the end of the sequence. If the output is an ImageOutputStream, the entirety of the stream must be both readable and writeable. If canInsertImage(imageIndex) returns false, an UnsupportedOperationException will be thrown. An ImageWriteParam may optionally be supplied to control the writing process. If param is null, a default write param will be used. If the supplied ImageWriteParam contains optional setting values not supported by this writer (e.g. progressive encoding or any format-specific settings), they will be ignored. The default implementation throws an IllegalStateException if the output is null, and otherwise throws an UnsupportedOperationException.",";javax.imageio.ImageWriter.writeInsert(int,IIOImage,ImageWriteParam)",;1
writeInts,1,1,Description copied from interface:ImageOutputStream,";javax.imageio.stream.ImageOutputStreamImpl.writeInts(int[],int,int)",;1
writeLeaf,1,1,Responsible for writing out other non-text leaf elements.,;javax.swing.text.html.MinimalHTMLWriter.writeLeaf(Element),;1
writeLockInterruptibly,1,1,"Exclusively acquires the lock, blocking if necessary until available or the current thread is interrupted. Behavior under interruption matches that specified for method Lock.lockInterruptibly().",;java.util.concurrent.locks.StampedLock.writeLockInterruptibly(),;1
writeLongs,1,1,Description copied from interface:ImageOutputStream,";javax.imageio.stream.ImageOutputStreamImpl.writeLongs(long[],int,int)",;1
writeNClob,1,1,Writes an SQL NCLOB value to the stream.,;javax.sql.rowset.serial.SQLOutputImpl.writeNClob(NClob),;1
writeNonHTMLAttributes,1,1,"Writes out the remaining character-level attributes (attributes other than bold, italic, and underline) in an HTML-compliant way. Given that attributes such as font family and font size have no direct mapping to HTML tags, a &lt;span&gt; tag is generated and its style attribute is set to contain the list of remaining attributes just like inline styles.",;javax.swing.text.html.MinimalHTMLWriter.writeNonHTMLAttributes(AttributeSet),;1
writeNString,1,1,Writes the next attribute to the stream as a String in the Java programming language. The driver converts this to a SQL NCHAR or NVARCHAR or LONGNVARCHAR value (depending on the argument's size relative to the driver's limits on NVARCHAR values) when it sends it to the stream.,;javax.sql.rowset.serial.SQLOutputImpl.writeNString(String),;1
writeObjectOverride,1,1,Method used by subclasses to override the default writeObject method. This method is called by trusted subclasses of ObjectInputStream that constructed ObjectInputStream using the protected no-arg constructor. The subclass is expected to provide an override method with the modifier "final".,;java.io.ObjectOutputStream.writeObjectOverride(Object),;1
writeOption,1,1,Writes out the content of the Option form element.,;javax.swing.text.html.HTMLWriter.writeOption(Option),;1
writer,1,1,Retrieves the unique PrintWriter object associated with this console.,;java.io.Console.writer(),;1
writeRef,1,1,Writes a Ref object in the Java programming language to this SQLOutputImpl object. The driver converts it to a serializable SerialRef SQL REF value before returning it to the database.,;javax.sql.rowset.serial.SQLOutputImpl.writeRef(Ref),;1
writeRemoteObject,1,1,"Writes a java.lang.Object as a CORBA Object. If obj is an exported RMI-IIOP server object, the tie is found and wired to obj, then written to out.write_Object(org.omg.CORBA.Object). If obj is a CORBA Object, it is written to out.write_Object(org.omg.CORBA.Object).",";javax.rmi.CORBA.Util.writeRemoteObject(OutputStream,Object)",;1
writeRowId,1,1,Writes an SQL ROWID value to the stream.,;javax.sql.rowset.serial.SQLOutputImpl.writeRowId(RowId),;1
writeShorts,1,1,Description copied from interface:ImageOutputStream,";javax.imageio.stream.ImageOutputStreamImpl.writeShorts(short[],int,int)",;1
writeSQLXML,1,1,Writes an SQL XML value to the stream.,;javax.sql.rowset.serial.SQLOutputImpl.writeSQLXML(SQLXML),;1
writeStartParagraph,1,1,"Emits the start tag for a paragraph. If the paragraph has a named style associated with it, then this method also generates a class attribute for the &lt;p&gt; tag and sets its value to be the name of the style.",;javax.swing.text.html.MinimalHTMLWriter.writeStartParagraph(Element),;1
writeStartTag,1,1,Writes out a start tag appropriately indented. Also increments the indent level.,;javax.swing.text.html.MinimalHTMLWriter.writeStartTag(String),;1
writeStreamHeader,1,1,The writeStreamHeader method is provided so subclasses can append or prepend their own header to the stream. It writes the magic number and version to the stream.,;java.io.ObjectOutputStream.writeStreamHeader(),;1
writeString,1,1,"Writes a String in the Java programming language to this SQLOutputImpl object. The driver converts it to an SQL CHAR, VARCHAR, or LONGVARCHAR before returning it to the database.",;javax.sql.rowset.serial.SQLOutputImpl.writeString(String),;1
writeStruct,1,1,Writes a Struct object in the Java programming language to this SQLOutputImpl object. The driver converts this value to an SQL structured type before returning it to the database. This method should be used when an SQL structured type has been mapped to a Struct object in the Java programming language (the standard mapping). The method writeObject should be used if an SQL structured type has been custom mapped to a class in the Java programming language.,;javax.sql.rowset.serial.SQLOutputImpl.writeStruct(Struct),;1
writeStyles,1,1,Writes out all the named styles as the content of the &lt;style&gt; tag.,;javax.swing.text.html.MinimalHTMLWriter.writeStyles(),;1
writeTime,1,1,Writes a java.sql.Time object in the Java programming language to this SQLOutputImpl object. The driver converts it to an SQL TIME before returning it to the database.,;javax.sql.rowset.serial.SQLOutputImpl.writeTime(Time),;1
writeTimestamp,1,1,Writes a java.sql.Timestamp object in the Java programming language to this SQLOutputImpl object. The driver converts it to an SQL TIMESTAMP before returning it to the database.,;javax.sql.rowset.serial.SQLOutputImpl.writeTimestamp(Timestamp),;1
writeToSequence,1,1,"Appends a single image and possibly associated metadata and thumbnails, to the output. If the output is an ImageOutputStream, the existing contents of the output prior to the current seek position may be flushed, and need not be readable or writable, unless the plug-in needs to be able to patch up the header information when endWriteSequence is called (e.g. TIFF). If canWriteSequence returns false, this method will throw an UnsupportedOperationException. The output must have been set beforehand using the setOutput method. prepareWriteSequence must have been called beforehand, or an IllegalStateException is thrown. If canWriteRasters returns true, the IIOImage may contain a Raster source. Otherwise, it must contain a RenderedImage source. The supplied thumbnails will be resized if needed, and any thumbnails in excess of the supported number will be ignored. If the format requires additional thumbnails that are not provided, the writer will generate them internally. An ImageWriteParam may optionally be supplied to control the writing process. If param is null, a default write param will be used. If the supplied ImageWriteParam contains optional setting values not supported by this writer (e.g. progressive encoding or any format-specific settings), they will be ignored. The default implementation throws an IllegalStateException if the output is null, and otherwise throws an UnsupportedOperationException.",";javax.imageio.ImageWriter.writeToSequence(IIOImage,ImageWriteParam)",;1
writeUnlock,1,1,"Releases a write lock previously obtained via writeLock. After decrementing the lock count if there are no outstanding locks this will allow a new writer, or readers.",;javax.swing.text.AbstractDocument.writeUnlock(),;1
writeURL,1,1,Writes an java.sql.Type.DATALINK object in the Java programming language to this SQLOutputImpl object. The driver converts this value to a serializable SerialDatalink SQL DATALINK value before return it to the database.,;javax.sql.rowset.serial.SQLOutputImpl.writeURL(URL),;1
wsdlDocumentLocation,1,1,Sets the wsdlDocumentLocation that will be referenced as wsa:Metadata/@wsdli:wsdlLocation. The namespace name for the wsdli:wsdlLocation's value can be taken from the WSDL itself. See 2.1 Referencing WSDL Metadata from an EPR for more details.,;javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder.wsdlDocumentLocation(String),;1
xor,1,1,Returns a BigInteger whose value is (this ^ val). (This method returns a negative BigInteger if and only if exactly one of this and val are negative.),;java.math.BigInteger.xor(BigInteger),;1
yield,1,1,"A hint to the scheduler that the current thread is willing to yield its current use of a processor. The scheduler is free to ignore this hint. Yield is a heuristic attempt to improve relative progression between threads that would otherwise over-utilise a CPU. Its use should be combined with detailed profiling and benchmarking to ensure that it actually has the desired effect. It is rarely appropriate to use this method. It may be useful for debugging or testing purposes, where it may help to reproduce bugs due to race conditions. It may also be useful when designing concurrency control constructs such as the ones in the java.util.concurrent.locks package.",;java.lang.Thread.yield(),;1
zone,1,1,"A lenient query for the ZoneId, falling back to the ZoneOffset. This queries a TemporalAccessor for the zone. It first tries to obtain the zone, using zoneId(). If that is not found it tries to obtain the offset(). Thus a ZonedDateTime will return the result of getZone(), while an OffsetDateTime will return the result of getOffset(). In most cases, applications should use this query rather than #zoneId(). The method ZoneId.from(TemporalAccessor) can be used as a TemporalQuery via a method reference, ZoneId::from. That method is equivalent to this query, except that it throws an exception if a zone cannot be obtained.",;java.time.temporal.TemporalQueries.zone(),;1
zoneId,1,1,"A strict query for the ZoneId. This queries a TemporalAccessor for the zone. The zone is only returned if the date-time conceptually contains a ZoneId. It will not be returned if the date-time only conceptually has an ZoneOffset. Thus a ZonedDateTime will return the result of getZone(), but an OffsetDateTime will return null. In most cases, applications should use zone() as this query is too strict. The result from JDK classes implementing TemporalAccessor is as follows:LocalDate returns nullLocalTime returns nullLocalDateTime returns nullZonedDateTime returns the associated zoneOffsetTime returns nullOffsetDateTime returns nullChronoLocalDate returns nullChronoLocalDateTime returns nullChronoZonedDateTime returns the associated zoneEra returns nullDayOfWeek returns nullMonth returns nullYear returns nullYearMonth returns nullMonthDay returns nullZoneOffset returns nullInstant returns null",;java.time.temporal.TemporalQueries.zoneId(),;1
zoneWasLoaded,1,1,Called by a zone when it gets loaded. This happens when an attempt is made to display or perform a model/view translation on a zone that was in an unloaded state. This is implemented to check if the maximum number of zones was reached and to unload the oldest zone if so.,;javax.swing.text.ZoneView.zoneWasLoaded(View),;1
_duplicate,2,0.5,Returns a duplicate of this ObjectImpl object.,;org.omg.CORBA.LocalObject._duplicate();org.omg.CORBA.portable.ObjectImpl._duplicate(),;0.50;0.50
_get_delegate,2,0.5,Gets the ORB vendor-specific implementation of PortableServer::Servant.,;org.omg.CORBA.portable.ObjectImpl._get_delegate();org.omg.PortableServer.Servant._get_delegate(),;0.50;0.50
_get_domain_managers,2,0.5,Retrieves a list of the domain managers for this ObjectImpl object.,;org.omg.CORBA.LocalObject._get_domain_managers();org.omg.CORBA.portable.ObjectImpl._get_domain_managers(),;0.50;0.50
_get_policy,2,0.5,Retrieves the Policy object for this ObjectImpl object that has the given policy type.,;org.omg.CORBA.LocalObject._get_policy(int);org.omg.CORBA.portable.ObjectImpl._get_policy(int),;0.50;0.50
_hash,2,0.5,Retrieves the hash code that serves as an ORB-internal identifier for this ObjectImpl object.,;org.omg.CORBA.LocalObject._hash(int);org.omg.CORBA.portable.ObjectImpl._hash(int),;0.50;0.50
_is_equivalent,2,0.5,Checks whether the the given ObjectImpl object is equivalent to this ObjectImpl object.,;org.omg.CORBA.LocalObject._is_equivalent(Object);org.omg.CORBA.portable.ObjectImpl._is_equivalent(Object),;0.50;0.50
_is_local,2,0.5,"Checks whether this ObjectImpl object is implemented by a local servant. If so, local invocation API's may be used.",;org.omg.CORBA.LocalObject._is_local();org.omg.CORBA.portable.ObjectImpl._is_local(),;0.50;0.50
_release,2,0.5,Releases the resources associated with this ObjectImpl object.,;org.omg.CORBA.LocalObject._release();org.omg.CORBA.portable.ObjectImpl._release(),;0.50;0.50
_releaseReply,2,0.549342373,"Throws an org.omg.CORBA.NO_IMPLEMENT exception with the message ""This is a locally constrained object."" This method is the default implementation of the org.omg.CORBA.Object method. May optionally be called by a stub to release a reply stream back to the ORB when the unmarshaling has completed. The stub passes the InputStream returned by _invoke() or ApplicationException.getInputStream(). A null value may also be passed to _releaseReply, in which case the method is a no-op.",;org.omg.CORBA.LocalObject._releaseReply(InputStream);org.omg.CORBA.portable.ObjectImpl._releaseReply(InputStream),;0.55;0.52
_servant_postinvoke,2,0.5,"Is called by the local stub after it has invoked an operation on the local servant that was previously retrieved from a call to the method _servant_preinvoke. The _servant_postinvoke method must be called if the _servant_preinvoke method returned a non-null value, even if an exception was thrown by the method invoked by the servant. For this reason, the call to the method _servant_postinvoke should be placed in a Java finally clause.",;org.omg.CORBA.LocalObject._servant_postinvoke(ServantObject);org.omg.CORBA.portable.ObjectImpl._servant_postinvoke(ServantObject),;0.50;0.50
_servant_preinvoke,2,0.5,"Returns a Java reference to the local servant that should be used for sending a request for the method specified. If this ObjectImpl object is a local stub, it will invoke the _servant_preinvoke method before sending a request in order to obtain the ServantObject instance to use. If a ServantObject object is returned, its servant field has been set to an object of the expected type (Note: the object may or may not be the actual servant instance). The local stub may cast the servant field to the expected type, and then invoke the operation directly. The ServantRequest object is valid for only one invocation and cannot be used for more than one invocation.",";org.omg.CORBA.LocalObject._servant_preinvoke(String,Class);org.omg.CORBA.portable.ObjectImpl._servant_preinvoke(String,Class)",;0.50;0.50
_set_delegate,2,0.5,Supports the Java ORB portability interfaces by providing a method for classes that support ORB portability through delegation to set their delegate.,;org.omg.CORBA.portable.ObjectImpl._set_delegate(Delegate);org.omg.PortableServer.Servant._set_delegate(Delegate),;0.50;0.50
_set_policy_override,2,0.5,Sets this ObjectImpl object's override type for the given policies to the given instance of SetOverrideType.,";org.omg.CORBA.LocalObject._set_policy_override(Policy[],SetOverrideType);org.omg.CORBA.portable.ObjectImpl._set_policy_override(Policy[],SetOverrideType)",;0.50;0.50
_this_object,2,0.924616332,Allows the servant to obtain the object reference for the target CORBA Object it is incarnating for that request.,;org.omg.PortableServer.Servant._this_object();org.omg.PortableServer.Servant._this_object(ORB),;0.92;0.92
abortRequested,2,0.876106751,Returns true if a request to abort the current write operation has been made since the writer was instantiated or clearAbortRequest was called.,;javax.imageio.ImageReader.abortRequested();javax.imageio.ImageWriter.abortRequested(),;0.88;0.88
absolutePath,2,0.5,Returns this preference node's absolute path name.,;java.util.prefs.AbstractPreferences.absolutePath();java.util.prefs.Preferences.absolutePath(),;0.50;0.50
acceptDrag,2,0.5,"Accepts the drag. This method should be called from a DropTargetListeners dragEnter, dragOver, and dropActionChanged methods if the implementation wishes to accept an operation from the srcActions other than the one selected by the user as represented by the dropAction.",;java.awt.dnd.DropTargetContext.acceptDrag(int);java.awt.dnd.DropTargetDragEvent.acceptDrag(int),;0.00;0.50
acceptDrop,2,0.5,"accept the drop, using the specified action.",;java.awt.dnd.DropTargetContext.acceptDrop(int);java.awt.dnd.DropTargetDropEvent.acceptDrop(int),;0.50;0.50
acceptEitherAsync,2,1,Description copied from interface:CompletionStage,";java.util.concurrent.CompletableFuture.acceptEitherAsync(CompletionStage&lt;?,Consumer&lt;?);java.util.concurrent.CompletableFuture.acceptEitherAsync(CompletionStage&lt;?,Consumer&lt;?,Executor)",;1.00;1.00
accumulate,2,1,Updates with the given value.,;java.util.concurrent.atomic.DoubleAccumulator.accumulate(double);java.util.concurrent.atomic.LongAccumulator.accumulate(long),;1.00;1.00
acquire,2,0.93647176,"Acquires in exclusive mode, ignoring interrupts. Implemented by invoking at least once tryAcquire(int), returning on success. Otherwise the thread is queued, possibly repeatedly blocking and unblocking, invoking tryAcquire(int) until success. This method can be used to implement method Lock.lock().",;java.util.concurrent.locks.AbstractQueuedLongSynchronizer.acquire(long);java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(int),;0.94;0.94
acquireInterruptibly,2,0.950384525,"Acquires in exclusive mode, aborting if interrupted. Implemented by first checking interrupt status, then invoking at least once tryAcquire(int), returning on success. Otherwise the thread is queued, possibly repeatedly blocking and unblocking, invoking tryAcquire(int) until success or the thread is interrupted. This method can be used to implement method Lock.lockInterruptibly().",;java.util.concurrent.locks.AbstractQueuedLongSynchronizer.acquireInterruptibly(long);java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(int),;0.95;0.95
acquireShared,2,0.922163012,"Acquires in shared mode, ignoring interrupts. Implemented by first invoking at least once tryAcquireShared(int), returning on success. Otherwise the thread is queued, possibly repeatedly blocking and unblocking, invoking tryAcquireShared(int) until success.",;java.util.concurrent.locks.AbstractQueuedLongSynchronizer.acquireShared(long);java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireShared(int),;0.92;0.92
acquireSharedInterruptibly,2,0.93805231,"Acquires in shared mode, aborting if interrupted. Implemented by first checking interrupt status, then invoking at least once tryAcquireShared(int), returning on success. Otherwise the thread is queued, possibly repeatedly blocking and unblocking, invoking tryAcquireShared(int) until success or the thread is interrupted.",;java.util.concurrent.locks.AbstractQueuedLongSynchronizer.acquireSharedInterruptibly(long);java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(int),;0.94;0.94
acquireUninterruptibly,2,0.76218008,"Acquires the given number of permits from this semaphore, blocking until all are available. Acquires the given number of permits, if they are available, and returns immediately, reducing the number of available permits by the given amount. If insufficient permits are available then the current thread becomes disabled for thread scheduling purposes and lies dormant until some other thread invokes one of the release methods for this semaphore, the current thread is next to be assigned permits and the number of available permits satisfies this request. If the current thread is interrupted while waiting for permits then it will continue to wait and its position in the queue is not affected. When the thread does return from this method its interrupt status will be set.",;java.util.concurrent.Semaphore.acquireUninterruptibly();java.util.concurrent.Semaphore.acquireUninterruptibly(int),;0.76;0.76
activateController,2,0.848930006,"Activates the installed IIOMetadataController for this IIOMetadata object and returns the resulting value. When this method returns true, all values for this IIOMetadata object will be ready for the next write operation. If false is returned, no settings in this object will have been disturbed (i.e., the user canceled the operation). Ordinarily, the controller will be a GUI providing a user interface for a subclass of IIOMetadata for a particular plug-in. Controllers need not be GUIs, however. The default implementation calls getController and the calls activate on the returned object if hasController returns true.",;javax.imageio.IIOParam.activateController();javax.imageio.metadata.IIOMetadata.activateController(),;0.84;0.85
activateFrame,2,0.5,This method is called when the frame becomes selected. This action is delegated to the desktopManager.,;javax.swing.DefaultDesktopManager.activateFrame(JInternalFrame);javax.swing.plaf.basic.BasicInternalFrameUI.activateFrame(JInternalFrame),;0.50;0.50
activeCount,2,0.923556446,"Returns an estimate of the number of active threads in the current thread's thread group and its subgroups. Recursively iterates over all subgroups in the current thread's thread group. The value returned is only an estimate because the number of threads may change dynamically while this method traverses internal data structures, and might be affected by the presence of certain system threads. This method is intended primarily for debugging and monitoring purposes.",;java.lang.Thread.activeCount();java.lang.ThreadGroup.activeCount(),;0.92;0.92
activeObject,2,0.5,This protected method is necessary for subclasses to make the activeObject callback to the group's monitor. The call is simply forwarded to the group's ActivationMonitor.,";java.rmi.activation.ActivationGroup.activeObject(ActivationID,Remote);java.rmi.activation.ActivationGroup.activeObject(ActivationID,MarshalledObject&lt;?)",;0.50;0.50
addCellEditorListener,2,0.5,Adds a CellEditorListener to the listener list.,;javax.swing.AbstractCellEditor.addCellEditorListener(CellEditorListener);javax.swing.tree.DefaultTreeCellEditor.addCellEditorListener(CellEditorListener),;0.50;0.00
addCustomEntriesToTable,2,0.534198167,Adds values specific to this theme to the defaults table. This method is invoked when the look and feel defaults are obtained from MetalLookAndFeel. This implementation does nothing; it is provided for subclasses that wish to customize the defaults table.,;javax.swing.plaf.metal.MetalTheme.addCustomEntriesToTable(UIDefaults);javax.swing.plaf.metal.OceanTheme.addCustomEntriesToTable(UIDefaults),;0.53;0.51
addDocumentListener,2,1,Adds a document listener for notification of any changes.,;javax.swing.text.AbstractDocument.addDocumentListener(DocumentListener);javax.swing.text.DefaultStyledDocument.addDocumentListener(DocumentListener),;1.00;1.00
addDragSourceListener,2,0.5,"Add a DragSourceListener to this DragSourceContext if one has not already been added. If a DragSourceListener already exists, this method throws a TooManyListenersException.",;java.awt.dnd.DragSource.addDragSourceListener(DragSourceListener);java.awt.dnd.DragSourceContext.addDragSourceListener(DragSourceListener),;0.50;0.50
addImage,2,0.847831456,Adds an image to the list of images being tracked by this media tracker. The image will eventually be rendered at its default (unscaled) size.,";java.awt.MediaTracker.addImage(Image,int);java.awt.MediaTracker.addImage(Image,int,int,int)",;0.85;0.85
addInputMethodListener,2,0.5,Description copied from class:Component,;java.awt.Component.addInputMethodListener(InputMethodListener);javax.swing.text.JTextComponent.addInputMethodListener(InputMethodListener),;0.50;0.50
addIssuerName,2,0.725364176,"Adds a name to the issuerNames criterion. The issuer distinguished name in the X509CRL must match at least one of the specified distinguished names. This method allows the caller to add a name to the set of issuer names which X509CRLs may contain. The specified name is added to any previous value for the issuerNames criterion. If the specified name is a duplicate, it may be ignored. If a name is specified as a byte array, it should contain a single DER encoded distinguished name, as defined in X.501. The ASN.1 notation for this structure is as follows. The name is provided as a byte array. This byte array should contain a single DER encoded distinguished name, as defined in X.501. The ASN.1 notation for this structure appears in the documentation for setIssuerNames(Collection names). Note that the byte array supplied here is cloned to protect against subsequent modifications.",;java.security.cert.X509CRLSelector.addIssuerName(String);java.security.cert.X509CRLSelector.addIssuerName(byte[]),;0.71;0.73
addListSelectionListener,2,0.592043536,"Adds a listener to the list, to be notified each time a change to the selection occurs; the preferred way of listening for selection state changes. JList takes care of listening for selection state changes in the selection model, and notifies the given listener of each change. ListSelectionEvents sent to the listener have a source property set to this list.",;javax.swing.DefaultListSelectionModel.addListSelectionListener(ListSelectionListener);javax.swing.JList.addListSelectionListener(ListSelectionListener),;0.53;0.59
addMenuKeyListener,2,0.821729442,Adds a MenuKeyListener to the popup menu.,;javax.swing.JMenuItem.addMenuKeyListener(MenuKeyListener);javax.swing.JPopupMenu.addMenuKeyListener(MenuKeyListener),;0.82;0.82
addMimeHeader,2,0.650565493,"Creates a MimeHeader object with the specified name and value and adds it to this SOAPPart object. If a MimeHeader with the specified name already exists, this method adds the specified value to the already existing value(s). Note that RFC822 headers can contain only US-ASCII characters.",";javax.xml.soap.AttachmentPart.addMimeHeader(String,String);javax.xml.soap.SOAPPart.addMimeHeader(String,String)",;0.61;0.65
addMouseListener,2,0.672237821,"Adds the specified mouse listener to receive mouse events from this TrayIcon. Calling this method with a null value has no effect. Note: The MouseEvent's coordinates (received from the TrayIcon) are relative to the screen, not the TrayIcon. Note: The MOUSE_ENTERED and MOUSE_EXITED mouse events are not supported. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Component.addMouseListener(MouseListener);java.awt.TrayIcon.addMouseListener(MouseListener),;0.65;0.67
addMouseMotionListener,2,0.669094773,"Adds the specified mouse listener to receive mouse-motion events from this TrayIcon. Calling this method with a null value has no effect. Note: The MouseEvent's coordinates (received from the TrayIcon) are relative to the screen, not the TrayIcon. Note: The MOUSE_DRAGGED mouse event is not supported. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Component.addMouseMotionListener(MouseMotionListener);java.awt.TrayIcon.addMouseMotionListener(MouseMotionListener),;0.66;0.67
addMtomAttachment,2,0.606049159,"Consider MIME content data for optimized binary storage as an attachment. This method is called by JAXB marshal process when isXOPPackage() is true, for each element whose datatype is ""base64Binary"", as described in Step 3 in Creating XOP Packages. The method implementor determines whether data shall be attached separately or inlined as base64Binary data. If the implementation chooses to optimize the storage of the binary data as a MIME part, it is responsible for attaching data to the MIME-based package, and then assigning an unique content-id, cid, that identifies the MIME part within the MIME message. This method returns the cid, which enables the JAXB marshaller to marshal a XOP element that refers to that cid in place of marshalling the binary data. When the method returns null, the JAXB marshaller inlines data as base64binary data. The caller of this method is required to meet the following constraint. If the element infoset item containing data has the attribute xmime:contentType or if the JAXB property/field representing datais annotated with a known MIME type, data.getContentType() should be set to that MIME type. The elementNamespace and elementLocalName parameters provide the context that contains the binary data. This information could be used by the MIME-based package processor to determine if the binary data should be inlined or optimized as an attachment.",";javax.xml.bind.attachment.AttachmentMarshaller.addMtomAttachment(DataHandler,String,String);javax.xml.bind.attachment.AttachmentMarshaller.addMtomAttachment(byte[],int,int,String,String,String)",;0.61;0.53
addNodeChangeListener,2,0.5,"Registers the specified listener to receive node change events for this node. A node change event is generated when a child node is added to or removed from this node. (A single removeNode() invocation results in multiple node change events, one for every node in the subtree rooted at the removed node.) Events are only guaranteed for changes made within the same JVM as the registered listener, though some implementations may generate events for changes made outside this JVM. Events may be generated before the changes have become permanent. Events are not generated when indirect descendants of this node are added or removed; a caller desiring such events must register with each descendant. Few guarantees can be made regarding node creation. Because nodes are created implicitly upon access, it may not be feasible for an implementation to determine whether a child node existed in the backing store prior to access (for example, because the backing store is unreachable or cached information is out of date). Under these circumstances, implementations are neither required to generate node change events nor prohibited from doing so.",;java.util.prefs.AbstractPreferences.addNodeChangeListener(NodeChangeListener);java.util.prefs.Preferences.addNodeChangeListener(NodeChangeListener),;0.50;0.50
addNotificationListeners,2,1,Description copied from interface:RMIConnection,";javax.management.remote.rmi.RMIConnectionImpl.addNotificationListeners(ObjectName[],MarshalledObject[],Subject[]);javax.management.remote.rmi.RMIConnectionImpl_Stub.addNotificationListeners(ObjectName[],MarshalledObject[],Subject[])",;1.00;1.00
addPathToName,2,0.694985926,"Adds a name to the pathToNames criterion. The X509Certificate must not include name constraints that would prohibit building a path to the specified name. This method allows the caller to add a name to the set of names which the X509Certificates's name constraints must permit. The specified name is added to any previous value for the pathToNames criterion. If the name is a duplicate, it may be ignored. The name is provided in string format. RFC 822, DNS, and URI names use the well-established string formats for those types (subject to the restrictions included in RFC 3280). IPv4 address names are supplied using dotted quad notation. OID address names are represented as a series of nonnegative integers separated by periods. And directory names (distinguished names) are supplied in RFC 2253 format. No standard string format is defined for otherNames, X.400 names, EDI party names, IPv6 address names, or any other type of names. They should be specified using the addPathToName(int type, byte [] name) method. Note: for distinguished names, use addPathToName(int, byte[]) instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.",";java.security.cert.X509CertSelector.addPathToName(int,String);java.security.cert.X509CertSelector.addPathToName(int,byte[])",;0.69;0.67
addPopupMenuListener,2,0.519944263,"Adds a PopupMenu listener which will listen to notification messages from the popup portion of the combo box. For all standard look and feels shipped with Java, the popup list portion of combo box is implemented as a JPopupMenu. A custom look and feel may not implement it this way and will therefore not receive the notification.",;javax.swing.JComboBox.addPopupMenuListener(PopupMenuListener);javax.swing.JPopupMenu.addPopupMenuListener(PopupMenuListener),;0.52;0.50
addPort,2,1,Creates a new port for the service. Ports created in this way contain no WSDL port type information and can only be used for creating Dispatchinstances.,";javax.xml.ws.Service.addPort(QName,String,String);javax.xml.ws.spi.ServiceDelegate.addPort(QName,String,String)",;1.00;1.00
addPreferenceChangeListener,2,0.5,"Registers the specified listener to receive preference change events for this preference node. A preference change event is generated when a preference is added to this node, removed from this node, or when the value associated with a preference is changed. (Preference change events are not generated by the removeNode() method, which generates a node change event. Preference change events are generated by the clear method.) Events are only guaranteed for changes made within the same JVM as the registered listener, though some implementations may generate events for changes made outside this JVM. Events may be generated before the changes have been made persistent. Events are not generated when preferences are modified in descendants of this node; a caller desiring such events must register with each descendant.",;java.util.prefs.AbstractPreferences.addPreferenceChangeListener(PreferenceChangeListener);java.util.prefs.Preferences.addPreferenceChangeListener(PreferenceChangeListener),;0.50;0.50
address,2,0.5,Sets the address to the W3CEndpointReference instance's wsa:Address. The address MUST be set to a non-null value when building a W3CEndpointReference for a web service endpoint that is not published by the same Java EE application or when running on Java SE.,;java.net.Proxy.address();javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder.address(String),;0.50;0.50
addRow,2,1,Adds a row to the end of the model. The new row will contain null values unless rowData is specified. Notification of the row being added will be generated.,;javax.swing.table.DefaultTableModel.addRow(Vector);javax.swing.table.DefaultTableModel.addRow(Object[]),;1.00;1.00
addSelectionPath,2,0.540797469,"Adds the node identified by the specified TreePath to the current selection. If any component of the path isn't viewable, and getExpandsSelectedPaths is true it is made viewable. Note that JTree does not allow duplicate nodes to exist as children under the same parent -- each sibling must be a unique object.",;javax.swing.JTree.addSelectionPath(TreePath);javax.swing.tree.DefaultTreeSelectionModel.addSelectionPath(TreePath),;0.54;0.53
addService,2,1.22E-77,add a service,";java.beans.beancontext.BeanContextServicesSupport.addService(Class,BeanContextServiceProvider);java.beans.beancontext.BeanContextServicesSupport.addService(Class,BeanContextServiceProvider,boolean)",;0.00;0.00
addSource,2,0.5,Adds an image to end of the list of sources. The image is stored as an object in order to allow new node types in the future.,;java.awt.image.renderable.ParameterBlock.addSource(Object);org.w3c.dom.bootstrap.DOMImplementationRegistry.addSource(DOMImplementationSource),;0.50;0.00
addSubjectAlternativeName,2,0.69325537,"Adds a name to the subjectAlternativeNames criterion. The X509Certificate must contain all or at least one of the specified subjectAlternativeNames, depending on the value of the matchAllNames flag (see setMatchAllSubjectAltNames). This method allows the caller to add a name to the set of subject alternative names. The specified name is added to any previous value for the subjectAlternativeNames criterion. If the specified name is a duplicate, it may be ignored. The name is provided in string format. RFC 822, DNS, and URI names use the well-established string formats for those types (subject to the restrictions included in RFC 3280). IPv4 address names are supplied using dotted quad notation. OID address names are represented as a series of nonnegative integers separated by periods. And directory names (distinguished names) are supplied in RFC 2253 format. No standard string format is defined for otherNames, X.400 names, EDI party names, IPv6 address names, or any other type of names. They should be specified using the addSubjectAlternativeName(int type, byte [] name) method. Note: for distinguished names, use addSubjectAlternativeName(int, byte[]) instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names.",";java.security.cert.X509CertSelector.addSubjectAlternativeName(int,String);java.security.cert.X509CertSelector.addSubjectAlternativeName(int,byte[])",;0.69;0.69
addUndoableEditListener,2,0.5,Registers an UndoableEditListener. The listener is notified whenever an edit occurs which can be undone.,;javax.swing.text.AbstractDocument.addUndoableEditListener(UndoableEditListener);javax.swing.undo.UndoableEditSupport.addUndoableEditListener(UndoableEditListener),;0.50;0.50
aliases,2,0.5,Lists all the alias names of this keystore.,;java.nio.charset.Charset.aliases();java.security.KeyStore.aliases(),;0.50;0.50
allKeys,2,0.855058441,Returns an array of the KeyStrokes defined in this InputMap and its parent. This differs from keys() in that this method includes the keys defined in the parent.,;javax.swing.ActionMap.allKeys();javax.swing.InputMap.allKeys(),;0.85;0.86
allOf,2,0.5,"Returns a new CompletableFuture that is completed when all of the given CompletableFutures complete. If any of the given CompletableFutures complete exceptionally, then the returned CompletableFuture also does so, with a CompletionException holding this exception as its cause. Otherwise, the results, if any, of the given CompletableFutures are not reflected in the returned CompletableFuture, but may be obtained by inspecting them individually. If no CompletableFutures are provided, returns a CompletableFuture completed with the value null. Among the applications of this method is to await completion of a set of independent CompletableFutures before continuing a program, as in: CompletableFuture.allOf(c1, c2, c3).join();.",;java.util.EnumSet.allOf(Class&lt;E&gt;);java.util.concurrent.CompletableFuture.allOf(CompletableFuture&lt;?&gt;...),;0.50;0.50
allRowsChanged,2,1,"Invoked when the contents of the underlying model have completely changed. The structure of the table is the same, only the contents have changed. This is typically sent when it is too expensive to characterize the change in terms of the other methods. You normally do not call this method. This method is public to allow view classes to call it.",;javax.swing.DefaultRowSorter.allRowsChanged();javax.swing.RowSorter.allRowsChanged(),;1.00;1.00
ancestorMoved,2,0.5,Called when an ancestor of the source is moved.,;java.awt.AWTEventMulticaster.ancestorMoved(HierarchyEvent);java.awt.event.HierarchyBoundsAdapter.ancestorMoved(HierarchyEvent),;0.50;0.50
ancestorResized,2,0.5,Called when an ancestor of the source is resized.,;java.awt.AWTEventMulticaster.ancestorResized(HierarchyEvent);java.awt.event.HierarchyBoundsAdapter.ancestorResized(HierarchyEvent),;0.50;0.50
andNot,2,0.5,Clears all of the bits in this BitSet whose corresponding bit is set in the specified BitSet.,;java.math.BigInteger.andNot(BigInteger);java.util.BitSet.andNot(BitSet),;0.50;0.50
appendCodePoint,2,1,Appends the string representation of the codePoint argument to this sequence. The argument is appended to the contents of this sequence. The length of this sequence increases by Character.charCount(codePoint). The overall effect is exactly as if the argument were converted to a char array by the method Character.toChars(int) and the character in that array were then appended to this character sequence.,;java.lang.StringBuffer.appendCodePoint(int);java.lang.StringBuilder.appendCodePoint(int),;1.00;1.00
appendInstant,2,0.765337349,"Appends an instant using ISO-8601 to the formatter with control over the number of fractional digits. Instants have a fixed output format, although this method provides some control over the fractional digits. They are converted to a date-time with a zone-offset of UTC and printed using the standard ISO-8601 format. The localized decimal style is not used. The fractionalDigits parameter allows the output of the fractional second to be controlled. Specifying zero will cause no fractional digits to be output. From 1 to 9 will output an increasing number of digits, using zero right-padding if necessary. The special value -1 is used to output as many digits as necessary to avoid any trailing zeroes. When parsing in strict mode, the number of parsed digits must match the fractional digits. When parsing in lenient mode, any number of fractional digits from zero to nine are accepted. The instant is obtained using INSTANT_SECONDS and optionally (@code NANO_OF_SECOND). The value of INSTANT_SECONDS may be outside the maximum range of LocalDateTime. The resolver style has no effect on instant parsing. The end-of-day time of '24:00' is handled as midnight at the start of the following day. The leap-second time of '23:59:60' is handled to some degree, see DateTimeFormatter.parsedLeapSecond() for full details. An alternative to this method is to format/parse the instant as a single epoch-seconds value. That is achieved using appendValue(INSTANT_SECONDS).",;java.time.format.DateTimeFormatterBuilder.appendInstant();java.time.format.DateTimeFormatterBuilder.appendInstant(int),;0.74;0.77
appendLiteral,2,0.667787555,"Appends a string literal to the formatter. This string will be output during a format. If the literal is empty, nothing is added to the formatter.",;java.time.format.DateTimeFormatterBuilder.appendLiteral(char);java.time.format.DateTimeFormatterBuilder.appendLiteral(String),;0.65;0.67
appendParameterTypes,2,1,Finds or creates a method type with additional parameter types. Convenience method for methodType.,;java.lang.invoke.MethodType.appendParameterTypes(Class&lt;?&gt;...);java.lang.invoke.MethodType.appendParameterTypes(List&lt;Class&lt;?&gt;&gt;),;1.00;1.00
appendValueReduced,2,0.801352238,"Appends the reduced value of a date-time field to the formatter. This is typically used for formatting and parsing a two digit year. The base date is used to calculate the full value during parsing. For example, if the base date is 1950-01-01 then parsed values for a two digit year parse will be in the range 1950-01-01 to 2049-12-31. Only the year would be extracted from the date, thus a base date of 1950-08-25 would also parse to the range 1950-01-01 to 2049-12-31. This behavior is necessary to support fields such as week-based-year or other calendar systems where the parsed value does not align with standard ISO years. The exact behavior is as follows. Parse the full set of fields and determine the effective chronology using the last chronology if it appears more than once. Then convert the base date to the effective chronology. Then extract the specified field from the chronology-specific base date and use it to determine the baseValue used below. For formatting, the width and maxWidth are used to determine the number of characters to format. If they are equal then the format is fixed width. If the value of the field is within the range of the baseValue using width characters then the reduced value is formatted otherwise the value is truncated to fit maxWidth. The rightmost characters are output to match the width, left padding with zero. For strict parsing, the number of characters allowed by width to maxWidth are parsed. For lenient parsing, the number of characters must be at least 1 and less than 10. If the number of digits parsed is equal to width and the value is positive, the value of the field is computed to be the first number greater than or equal to the baseValue with the same least significant characters, otherwise the value parsed is the field value. This allows a reduced value to be entered for values in range of the baseValue and width and absolute values can be entered for values outside the range. For example, a base value of 1980 and a width of 2 will have valid values from 1980 to 2079. During parsing, the text ""12"" will result in the value 2012 as that is the value within the range where the last two characters are ""12"". By contrast, parsing the text ""1915"" will result in the value 1915.",";java.time.format.DateTimeFormatterBuilder.appendValueReduced(TemporalField,int,int,int);java.time.format.DateTimeFormatterBuilder.appendValueReduced(TemporalField,int,int,ChronoLocalDate)",;0.78;0.80
appendZoneText,2,0.911508965,"Appends the time-zone name, such as 'British Summer Time', to the formatter. This appends an instruction to format/parse the textual name of the zone to the builder. During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with TemporalQueries.zoneId(). If the zone is a ZoneOffset it will be printed using the result of ZoneOffset.getId(). If the zone is not an offset, the textual name will be looked up for the locale set in the DateTimeFormatter. If the temporal object being printed represents an instant, then the text will be the summer or winter time text as appropriate. If the lookup for text does not find any suitable result, then the ID will be printed instead. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional. During parsing, either the textual zone name, the zone ID or the offset is accepted. Many textual zone names are not unique, such as CST can be for both ""Central Standard Time"" and ""China Standard Time"". In this situation, the zone id will be determined by the region information from formatter's locale and the standard zone id for that area, for example, America/New_York for the America Eastern zone. This method also allows a set of preferred ZoneId to be specified for parsing. The matched preferred zone id will be used if the textural zone name being parsed is not unique. If the zone cannot be parsed then an exception is thrown unless the section of the formatter is optional.",";java.time.format.DateTimeFormatterBuilder.appendZoneText(TextStyle);java.time.format.DateTimeFormatterBuilder.appendZoneText(TextStyle,Set&lt;ZoneId&gt;)",;0.91;0.91
applyLocalizedPattern,2,0.5,Applies the given localized pattern string to this date format.,;java.text.DecimalFormat.applyLocalizedPattern(String);java.text.SimpleDateFormat.applyLocalizedPattern(String),;0.50;0.50
applyResourceBundle,2,1,"Deprecated.As of J2SE 1.4, replaced by Component.applyComponentOrientation.",;java.awt.Window.applyResourceBundle(ResourceBundle);java.awt.Window.applyResourceBundle(String),;1.00;1.00
applyToEitherAsync,2,1,Description copied from interface:CompletionStage,";java.util.concurrent.CompletableFuture.applyToEitherAsync(CompletionStage&lt;?,Function&lt;?,U&gt;);java.util.concurrent.CompletableFuture.applyToEitherAsync(CompletionStage&lt;?,Function&lt;?,U&gt;,Executor)",;1.00;1.00
areFocusTraversalKeysSet,2,0.933054373,"Returns whether the Set of focus traversal keys for the given focus traversal operation has been explicitly defined for this Container. If this method returns false, this Container is inheriting the Set from an ancestor, or from the current KeyboardFocusManager.",;java.awt.Component.areFocusTraversalKeysSet(int);java.awt.Container.areFocusTraversalKeysSet(int),;0.93;0.93
areTablesSet,2,1,Returns true if tables are currently set.,;javax.imageio.plugins.jpeg.JPEGImageReadParam.areTablesSet();javax.imageio.plugins.jpeg.JPEGImageWriteParam.areTablesSet(),;1.00;1.00
arguments,2,0.5,"Specifies method parameter types and retrieves ""in"" and ""inout"" argument values. Unless it calls the method set_exception, the DIR must call this method exactly once, even if the method signature contains no parameters. Once the method arguments or set_exception has been called, calling arguments on the same ServerRequest object will result in a BAD_INV_ORDER system exception. The DIR must pass in to the method arguments an NVList initialized with TypeCodes and Flags describing the parameter types for the operation, in the order in which they appear in the IDL specification (left to right). A potentially-different NVList will be returned from arguments, with the ""in"" and ""inout"" argument values supplied. If it does not call the method set_exception, the DIR must supply the returned NVList with return values for any ""out"" arguments before returning, and it may also change the return values for any ""inout"" arguments.",;org.omg.CORBA.Request.arguments();org.omg.CORBA.ServerRequest.arguments(NVList),;0.50;0.50
atDate,2,0.836240643,Combines this time with a date to create an OffsetDateTime. This returns an OffsetDateTime formed from this time and the specified date. All possible combinations of date and time are valid.,;java.time.LocalTime.atDate(LocalDate);java.time.OffsetTime.atDate(LocalDate),;0.84;0.84
atDay,2,0.663617758,Combines this year-month with a day-of-month to create a LocalDate. This returns a LocalDate formed from this year-month and the specified day-of-month. The day-of-month value must be valid for the year-month. This method can be used as part of a chain to produce a date: LocalDate date = year.atMonth(month).atDay(day);,;java.time.Year.atDay(int);java.time.YearMonth.atDay(int),;0.65;0.66
atMonth,2,1,Combines this year with a month to create a YearMonth. This returns a YearMonth formed from this year and the specified month. All possible combinations of year and month are valid. This method can be used as part of a chain to produce a date: LocalDate date = year.atMonth(month).atDay(day);,;java.time.Year.atMonth(Month);java.time.Year.atMonth(int),;1.00;1.00
atStartOfDay,2,0.52173429,"Returns a zoned date-time from this date at the earliest valid time according to the rules in the time-zone. Time-zone rules, such as daylight savings, mean that not every local date-time is valid for the specified zone, thus the local date-time may not be midnight. In most cases, there is only one valid offset for a local date-time. In the case of an overlap, there are two valid offsets, and the earlier one is used, corresponding to the first occurrence of midnight on the date. In the case of a gap, the zoned date-time will represent the instant just after the gap. If the zone ID is a ZoneOffset, then the result always has a time of midnight. To convert to a specific time in a given time-zone call atTime(LocalTime) followed by LocalDateTime.atZone(ZoneId).",;java.time.LocalDate.atStartOfDay();java.time.LocalDate.atStartOfDay(ZoneId),;0.51;0.52
attr,2,0.733165238,"Returns a new attribute expression. See AttributeValueExp for a detailed description of the semantics of the expression.Evaluating this expression for a given objectName includes performing MBeanServer.getAttribute(objectName, name).",";javax.management.Query.attr(String);javax.management.Query.attr(String,String)",;0.73;0.73
atZone,2,0.538619834,"Combines this date-time with a time-zone to create a ZonedDateTime. This returns a ZonedDateTime formed from this date-time at the specified time-zone. The result will match this date-time as closely as possible. Time-zone rules, such as daylight savings, mean that not every local date-time is valid for the specified zone, thus the local date-time may be adjusted. The local date-time is resolved to a single instant on the time-line. This is achieved by finding a valid offset from UTC/Greenwich for the local date-time as defined by the rules of the zone ID. In most cases, there is only one valid offset for a local date-time. In the case of an overlap, where clocks are set back, there are two valid offsets. This method uses the earlier offset typically corresponding to ""summer"". In the case of a gap, where clocks jump forward, there is no valid offset. Instead, the local date-time is adjusted to be later by the length of the gap. For a typical one hour daylight savings change, the local date-time will be moved one hour later into the offset typically corresponding to ""summer"". To obtain the later offset during an overlap, call ZonedDateTime.withLaterOffsetAtOverlap() on the result of this method. To throw an exception when there is a gap or overlap, use ZonedDateTime.ofStrict(LocalDateTime, ZoneOffset, ZoneId).",;java.time.Instant.atZone(ZoneId);java.time.LocalDateTime.atZone(ZoneId),;0.51;0.54
awaitAdvanceInterruptibly,2,0.913129635,"Awaits the phase of this phaser to advance from the given phase value or the given timeout to elapse, throwing InterruptedException if interrupted while waiting, or returning immediately if the current phase is not equal to the given phase value or this phaser is terminated.",";java.util.concurrent.Phaser.awaitAdvanceInterruptibly(int);java.util.concurrent.Phaser.awaitAdvanceInterruptibly(int,long,TimeUnit)",;0.91;0.91
bcsPreDeserializationHook,2,0.5,called by readObject after defaultReadObject() but prior to deserialization of any children. This method may be overridden by subclasses to perform custom deserialization of their state prior to this superclass deserializing the children. This method should not however be used by subclasses to replace their own implementation (if any) of readObject().,;java.beans.beancontext.BeanContextServicesSupport.bcsPreDeserializationHook(ObjectInputStream);java.beans.beancontext.BeanContextSupport.bcsPreDeserializationHook(ObjectInputStream),;0.50;0.50
bcsPreSerializationHook,2,0.543138072,called by writeObject after defaultWriteObject() but prior to serialization of currently serializable children. This method may be overridden by subclasses to perform custom serialization of their state prior to this superclass serializing the children. This method should not however be used by subclasses to replace their own implementation (if any) of writeObject().,;java.beans.beancontext.BeanContextServicesSupport.bcsPreSerializationHook(ObjectOutputStream);java.beans.beancontext.BeanContextSupport.bcsPreSerializationHook(ObjectOutputStream),;0.54;0.54
begin,2,0.744284446,"Marks the beginning of an I/O operation that might block indefinitely. This method should be invoked in tandem with the end method, using a try...finally block as shown above, in order to implement interruption for this selector. Invoking this method arranges for the selector's wakeup method to be invoked if a thread's interrupt method is invoked while the thread is blocked in an I/O operation upon the selector.",;java.nio.channels.spi.AbstractInterruptibleChannel.begin();java.nio.channels.spi.AbstractSelector.begin(),;0.71;0.74
bind_context,2,1,Names an object that is a naming context. Naming contexts that are bound using bind_context() participate in name resolution when compound names are passed to be resolved.,";org.omg.CosNaming._NamingContextExtStub.bind_context(NameComponent[],NamingContext);org.omg.CosNaming._NamingContextStub.bind_context(NameComponent[],NamingContext)",;1.00;1.00
bind_new_context,2,1,"This operation creates a new context and binds it to the name supplied as an argument. The newly-created context is implemented by the same naming server as the context in which it was bound (that is, the naming server that implements the context denoted by the name argument excluding the last component).",;org.omg.CosNaming._NamingContextExtStub.bind_new_context(NameComponent[]);org.omg.CosNaming._NamingContextStub.bind_new_context(NameComponent[]),;1.00;1.00
blockingLock,2,0.5,Description copied from class:SelectableChannel,;java.nio.channels.SelectableChannel.blockingLock();java.nio.channels.spi.AbstractSelectableChannel.blockingLock(),;0.50;0.50
byteValueExact,2,0.70095232,"Converts this BigDecimal to a byte, checking for lost information. If this BigDecimal has a nonzero fractional part or is out of the possible range for a byte result then an ArithmeticException is thrown.",;java.math.BigDecimal.byteValueExact();java.math.BigInteger.byteValueExact(),;0.70;0.70
calculateAlignedPositions,2,0.856739701,"Creates a set of offset/span pairs specifying how to lay out a set of components with the specified alignments. The resulting span allocations will overlap, with each one fitting as well as possible into the given total allocation. This method requires that you specify the total amount of space to be allocated, the size requirements for each component to be placed (specified as an array of SizeRequirements), and the total size requirements of the set of components (only the alignment field of which is actually used) You can get the total size requirement by invoking getAlignedSizeRequirements. This method also requires a flag indicating whether normal or reverse alignment should be performed. With normal alignment the value 0.0f represents the left/top edge of the component to be aligned. With reverse alignment, 0.0f represents the right/bottom edge.",";javax.swing.SizeRequirements.calculateAlignedPositions(int,SizeRequirements,SizeRequirements[],int[],int[]);javax.swing.SizeRequirements.calculateAlignedPositions(int,SizeRequirements,SizeRequirements[],int[],int[],boolean)",;0.85;0.86
calculateMajorAxisRequirements,2,0.5,Calculate the requirements of the block along the major axis (i.e. the axis along with it tiles). This is implemented to provide the superclass behavior and then adjust it if the CSS width or height attribute is specified and applicable to the axis.,";javax.swing.text.BoxView.calculateMajorAxisRequirements(int,SizeRequirements);javax.swing.text.html.BlockView.calculateMajorAxisRequirements(int,SizeRequirements)",;0.50;0.50
calculateTiledPositions,2,0.7953126,"Creates a set of offset/span pairs representing how to lay out a set of components end-to-end. This method requires that you specify the total amount of space to be allocated, the size requirements for each component to be placed (specified as an array of SizeRequirements), and the total size requirement of the set of components. You can get the total size requirement by invoking the getTiledSizeRequirements method. This method also requires a flag indicating whether components should be tiled in the forward direction (offsets increasing from 0) or reverse direction (offsets decreasing from the end of the allocated space). The forward direction represents components tiled from left to right or top to bottom. The reverse direction represents components tiled from right to left or bottom to top.",";javax.swing.SizeRequirements.calculateTiledPositions(int,SizeRequirements,SizeRequirements[],int[],int[]);javax.swing.SizeRequirements.calculateTiledPositions(int,SizeRequirements,SizeRequirements[],int[],int[],boolean)",;0.77;0.80
canDisplay,2,0.645219577,"Checks if this Font has a glyph for the specified character. Note: This method cannot handle supplementary characters. To support all Unicode characters, including supplementary characters, use the canDisplay(int) method or canDisplayUpTo methods.",;java.awt.Font.canDisplay(char);java.awt.Font.canDisplay(int),;0.65;0.56
canEncodeImage,2,0.541395538,"Returns true if the ImageWriter implementation associated with this service provider is able to encode an image with the given layout. The layout (i.e., the image's SampleModel and ColorModel) is described by an ImageTypeSpecifier object. A return value of true is not an absolute guarantee of successful encoding; the encoding process may still produce errors due to factors such as I/O errors, inconsistent or malformed data structures, etc. The intent is that a reasonable inspection of the basic structure of the image be performed in order to determine if it is within the scope of the encoding format. For example, a service provider for a format that can only encode greyscale would return false if handed an RGB BufferedImage. Similarly, a service provider for a format that can encode 8-bit RGB imagery might refuse to encode an image with an associated alpha channel. Different ImageWriters, and thus service providers, may choose to be more or less strict. For example, they might accept an image with premultiplied alpha even though it will have to be divided out of each pixel, at some loss of precision, in order to be stored.",;javax.imageio.spi.ImageWriterSpi.canEncodeImage(ImageTypeSpecifier);javax.imageio.spi.ImageWriterSpi.canEncodeImage(RenderedImage),;0.54;0.51
canImport,2,0.5,"Indicates whether a component will accept an import of the given set of data flavors prior to actually attempting to import it. Note: Swing now calls the newer version of canImport that takes a TransferSupport, which in turn calls this method (only if the component in the TransferSupport is a JComponent). Developers are encouraged to call and override the newer version as it provides more information (and is the only version that supports use with a TransferHandler set directly on a JFrame or other non-JComponent).",";javax.swing.TransferHandler.canImport(TransferHandler.TransferSupport);javax.swing.TransferHandler.canImport(JComponent,DataFlavor[])",;0.50;0.50
canUseCacheFile,2,0.880440807,"Returns true if the ImageOutputStream implementation associated with this service provider can optionally make use of a cache File for improved performance and/or memory footrprint. If false, the value of the cacheFile argument to createOutputStreamInstance will be ignored. The default implementation returns false.",;javax.imageio.spi.ImageInputStreamSpi.canUseCacheFile();javax.imageio.spi.ImageOutputStreamSpi.canUseCacheFile(),;0.88;0.88
ceiling,2,1,Description copied from interface:NavigableSet,;java.util.TreeSet.ceiling(E);java.util.concurrent.ConcurrentSkipListSet.ceiling(E),;1.00;1.00
ceilingEntry,2,0.5,"Returns a key-value mapping associated with the least key greater than or equal to the given key, or null if there is no such entry. The returned entry does not support the Entry.setValue method.",;java.util.TreeMap.ceilingEntry(K);java.util.concurrent.ConcurrentSkipListMap.ceilingEntry(K),;0.50;0.50
ceilingKey,2,1,Description copied from interface:NavigableMap,;java.util.TreeMap.ceilingKey(K);java.util.concurrent.ConcurrentSkipListMap.ceilingKey(K),;1.00;1.00
charset,2,0.904553356,Returns the charset that created this encoder.,;java.nio.charset.CharsetDecoder.charset();java.nio.charset.CharsetEncoder.charset(),;0.90;0.90
charWidth,2,0.82193408,Returns the advance width of the specified character in this Font. The advance is the distance from the leftmost point to the rightmost point on the character's baseline. Note that the advance of a String is not necessarily the sum of the advances of its characters. This method doesn't validate the specified character to be a valid Unicode code point. The caller must validate the character value using Character.isValidCodePoint if necessary.,;java.awt.FontMetrics.charWidth(int);java.awt.FontMetrics.charWidth(char),;0.82;0.82
checkAll,2,0.79941355,"Checks to see if all images being tracked by this media tracker have finished loading. If the value of the load flag is true, then this method starts loading any images that are not yet being loaded. If there is an error while loading or scaling an image, that image is considered to have finished loading. Use the isErrorAny and isErrorID methods to check for errors.",;java.awt.MediaTracker.checkAll();java.awt.MediaTracker.checkAll(boolean),;0.80;0.80
checkClientTrusted,2,0.939274271,"Given the partial or complete certificate chain provided by the peer, build and validate the certificate path based on the authentication type and ssl parameters. The authentication type is determined by the actual certificate used. For instance, if RSAPublicKey is used, the authType should be ""RSA"". Checking is case-sensitive. If the socket parameter is an instance of SSLSocket, and the endpoint identification algorithm of the SSLParameters is non-empty, to prevent man-in-the-middle attacks, the address that the socket connected to should be checked against the peer's identity presented in the end-entity X509 certificate, as specified in the endpoint identification algorithm. If the socket parameter is an instance of SSLSocket, and the algorithm constraints of the SSLParameters is non-null, for every certificate in the certification path, fields such as subject public key, the signature algorithm, key usage, extended key usage, etc. need to conform to the algorithm constraints in place on this socket.",";javax.net.ssl.X509ExtendedTrustManager.checkClientTrusted(X509Certificate[],String,Socket);javax.net.ssl.X509ExtendedTrustManager.checkClientTrusted(X509Certificate[],String,SSLEngine)",;0.94;0.94
checkConnect,2,0.817053324,"Throws a SecurityException if the specified security context is not allowed to open a socket connection to the specified host and port number. A port number of -1 indicates that the calling method is attempting to determine the IP address of the specified host name. If context is not an instance of AccessControlContext then a SecurityException is thrown. Otherwise, the port number is checked. If it is not equal to -1, the context's checkPermission method is called with a SocketPermission(host+"":""+port,""connect"") permission. If the port is equal to -1, then the context's checkPermission method is called with a SocketPermission(host,""resolve"") permission. If you override this method, then you should make a call to super.checkConnect at the point the overridden method would normally throw an exception.",";java.lang.SecurityManager.checkConnect(String,int);java.lang.SecurityManager.checkConnect(String,int,Object)",;0.81;0.82
checkError,2,0.535995605,"Flushes the stream and checks its error state. The internal error state is set to true when the underlying output stream throws an IOException other than InterruptedIOException, and when the setError method is invoked. If an operation on the underlying output stream throws an InterruptedIOException, then the PrintStream converts the exception back into an interrupt by doing: Thread.currentThread().interrupt(); or the equivalent.",;java.io.PrintStream.checkError();java.io.PrintWriter.checkError(),;0.54;0.50
checkID,2,0.848261863,"Checks to see if all images tracked by this media tracker that are tagged with the specified identifier have finished loading. If the value of the load flag is true, then this method starts loading any images that are not yet being loaded. If there is an error while loading or scaling an image, then that image is considered to have finished loading. Use the isErrorAny or isErrorID methods to check for errors.",";java.awt.MediaTracker.checkID(int);java.awt.MediaTracker.checkID(int,boolean)",;0.85;0.85
checkMulticast,2,0.5,Deprecated.Use #checkPermission(java.security.Permission) instead,";java.lang.SecurityManager.checkMulticast(InetAddress);java.lang.SecurityManager.checkMulticast(InetAddress,byte)",;0.50;0.50
checkServerTrusted,2,0.953765334,"Given the partial or complete certificate chain provided by the peer, build and validate the certificate path based on the authentication type and ssl parameters. The authentication type is the key exchange algorithm portion of the cipher suites represented as a String, such as ""RSA"", ""DHE_DSS"". Note: for some exportable cipher suites, the key exchange algorithm is determined at run time during the handshake. For instance, for TLS_RSA_EXPORT_WITH_RC4_40_MD5, the authType should be RSA_EXPORT when an ephemeral RSA key is used for the key exchange, and RSA when the key from the server certificate is used. Checking is case-sensitive. If the socket parameter is an instance of SSLSocket, and the endpoint identification algorithm of the SSLParameters is non-empty, to prevent man-in-the-middle attacks, the address that the socket connected to should be checked against the peer's identity presented in the end-entity X509 certificate, as specified in the endpoint identification algorithm. If the socket parameter is an instance of SSLSocket, and the algorithm constraints of the SSLParameters is non-null, for every certificate in the certification path, fields such as subject public key, the signature algorithm, key usage, extended key usage, etc. need to conform to the algorithm constraints in place on this socket.",";javax.net.ssl.X509ExtendedTrustManager.checkServerTrusted(X509Certificate[],String,Socket);javax.net.ssl.X509ExtendedTrustManager.checkServerTrusted(X509Certificate[],String,SSLEngine)",;0.95;0.95
checkWrite,2,0.890799447,"Throws a SecurityException if the calling thread is not allowed to write to the file specified by the string argument. This method calls checkPermission with the FilePermission(file,""write"") permission. If you override this method, then you should make a call to super.checkWrite at the point the overridden method would normally throw an exception.",;java.lang.SecurityManager.checkWrite(FileDescriptor);java.lang.SecurityManager.checkWrite(String),;0.89;0.89
childAllocation,2,0.5,Returns the allocation for a given child.,";javax.swing.text.BoxView.childAllocation(int,Rectangle);javax.swing.text.CompositeView.childAllocation(int,Rectangle)",;0.50;0.50
childJustRemovedHook,2,0.5,subclasses may override this method to simply extend remove() semantics after the child has been removed and before the event notification has occurred. The method is called with the child synchronized.,";java.beans.beancontext.BeanContextServicesSupport.childJustRemovedHook(Object,BeanContextSupport.BCSChild);java.beans.beancontext.BeanContextSupport.childJustRemovedHook(Object,BeanContextSupport.BCSChild)",;0.50;0.50
children,2,0.5,Creates and returns a forward-order enumeration of this node's children. Modifying this node's child array invalidates any child enumerations created before the modification.,;javax.swing.JTree.DynamicUtilTreeNode.children();javax.swing.tree.DefaultMutableTreeNode.children(),;0.50;0.50
childrenNames,2,0.5,"Returns the names of the children of this preference node, relative to this node. (The returned array will be of size zero if this node has no children.)",;java.util.prefs.AbstractPreferences.childrenNames();java.util.prefs.Preferences.childrenNames(),;0.50;0.50
clearAbortRequest,2,1,"Clears any previous abort request. After this method has been called, abortRequested will return false.",;javax.imageio.ImageReader.clearAbortRequest();javax.imageio.ImageWriter.clearAbortRequest(),;1.00;1.00
clearCache,2,0.893199327,Removes all resource bundles from the cache that have been loaded using the given class loader.,;java.util.ResourceBundle.clearCache();java.util.ResourceBundle.clearCache(ClassLoader),;0.89;0.89
clearError,2,0.955522573,Clears the error state of this stream. This method will cause subsequent invocations of checkError() to return false until another write operation fails and invokes setError().,;java.io.PrintStream.clearError();java.io.PrintWriter.clearError(),;0.95;0.96
clearParameters,2,0.5,Clear all parameters set with setParameter.,;javax.sql.rowset.BaseRowSet.clearParameters();javax.xml.transform.Transformer.clearParameters(),;0.50;0.50
clearPassword,2,0.5,Clear the retrieved password.,;javax.crypto.spec.PBEKeySpec.clearPassword();javax.security.auth.callback.PasswordCallback.clearPassword(),;0.50;0.50
clearRect,2,0.5,"Clears the specified rectangle by filling it with the background color of the current drawing surface. This operation does not use the current paint mode. Beginning with Java1.1, the background color of offscreen images may be system dependent. Applications should use setColor followed by fillRect to ensure that an offscreen image is cleared to a specific color.",";java.awt.Graphics.clearRect(int,int,int,int);javax.swing.DebugGraphics.clearRect(int,int,int,int)",;0.50;0.00
clipRect,2,0.5,"Intersects the current clip with the specified rectangle. The resulting clipping area is the intersection of the current clipping area and the specified rectangle. If there is no current clipping area, either because the clip has never been set, or the clip has been cleared using setClip(null), the specified rectangle becomes the new clip. This method sets the user clip, which is independent of the clipping associated with device bounds and window visibility. This method can only be used to make the current clip smaller. To set the current clip larger, use any of the setClip methods. Rendering operations have no effect outside of the clipping area.",";java.awt.Graphics.clipRect(int,int,int,int);javax.swing.DebugGraphics.clipRect(int,int,int,int)",;0.50;0.00
closeEntry,2,0.891271145,Closes the current ZIP entry and positions the stream for writing the next entry.,;java.util.zip.ZipInputStream.closeEntry();java.util.zip.ZipOutputStream.closeEntry(),;0.89;0.89
closeFrame,2,0.5,This method is called when the user wants to close the frame. The playCloseSound Action is fired. This action is delegated to the desktopManager.,;javax.swing.DefaultDesktopManager.closeFrame(JInternalFrame);javax.swing.plaf.basic.BasicInternalFrameUI.closeFrame(JInternalFrame),;0.50;0.50
columnAdded,2,1,"Invoked when a column is added to the table column model. Application code will not use these methods explicitly, they are used internally by JTable.",;javax.swing.JTable.columnAdded(TableColumnModelEvent);javax.swing.table.JTableHeader.columnAdded(TableColumnModelEvent),;1.00;1.00
columnAtPoint,2,0.766532009,"Returns the index of the column that point lies in, or -1 if the result is not in the range [0, getColumnCount()-1].",;javax.swing.JTable.columnAtPoint(Point);javax.swing.table.JTableHeader.columnAtPoint(Point),;0.77;0.76
columnMarginChanged,2,0.784349658,"Invoked when a column is moved due to a margin change. If a cell is being edited, then editing is stopped and the cell is redrawn. Application code will not use these methods explicitly, they are used internally by JTable.",;javax.swing.JTable.columnMarginChanged(ChangeEvent);javax.swing.table.JTableHeader.columnMarginChanged(ChangeEvent),;0.78;0.76
columnMoved,2,0.751654624,"Invoked when a column is repositioned. If a cell is being edited, then editing is stopped and the cell is redrawn. Application code will not use these methods explicitly, they are used internally by JTable.",;javax.swing.JTable.columnMoved(TableColumnModelEvent);javax.swing.table.JTableHeader.columnMoved(TableColumnModelEvent),;0.75;0.72
columnRemoved,2,1,"Invoked when a column is removed from the table column model. Application code will not use these methods explicitly, they are used internally by JTable.",;javax.swing.JTable.columnRemoved(TableColumnModelEvent);javax.swing.table.JTableHeader.columnRemoved(TableColumnModelEvent),;1.00;1.00
columnSelectionChanged,2,0.81181815,"Invoked when the selection model of the TableColumnModel is changed. This method currently has no effect (the header is not redrawn). Application code will not use these methods explicitly, they are used internally by JTable.",;javax.swing.JTable.columnSelectionChanged(ListSelectionEvent);javax.swing.table.JTableHeader.columnSelectionChanged(ListSelectionEvent),;0.79;0.81
comment,2,0.5,Description copied from interface:LexicalHandler,";javax.swing.text.html.HTMLWriter.comment(Element);org.xml.sax.ext.DefaultHandler2.comment(char[],int,int)",;0.00;0.50
compareAndSetState,2,1,Atomically sets synchronization state to the given updated value if the current state value equals the expected value. This operation has memory semantics of a volatile read and write.,";java.util.concurrent.locks.AbstractQueuedLongSynchronizer.compareAndSetState(long,long);java.util.concurrent.locks.AbstractQueuedSynchronizer.compareAndSetState(int,int)",;1.00;1.00
compareUnsigned,2,0.853553391,Compares two long values numerically treating the values as unsigned.,";java.lang.Integer.compareUnsigned(int,int);java.lang.Long.compareUnsigned(long,long)",;0.85;0.85
compile,2,0.806614871,Compiles the given regular expression into a pattern with the given flags.,";java.util.regex.Pattern.compile(String);java.util.regex.Pattern.compile(String,int)",;0.80;0.81
completeEditing,2,0.538489116,"Messages to stop the editing session. If the UI the receiver is providing the look and feel for returns true from getInvokesStopCellEditing, stopCellEditing will invoked on the current editor. Then completeEditing will be messaged with false, true, false to cancel any lingering editing.",";javax.swing.plaf.basic.BasicTreeUI.completeEditing();javax.swing.plaf.basic.BasicTreeUI.completeEditing(boolean,boolean,boolean)",;0.54;0.54
completeExceptionally,2,0.534585921,"Completes this task abnormally, and if not already aborted or cancelled, causes it to throw the given exception upon join and related operations. This method may be used to induce exceptions in asynchronous tasks, or to force completion of tasks that would not otherwise complete. Its use in other situations is discouraged. This method is overridable, but overridden versions must invoke super implementation to maintain guarantees.",;java.util.concurrent.CompletableFuture.completeExceptionally(Throwable);java.util.concurrent.ForkJoinTask.completeExceptionally(Throwable),;0.51;0.53
componentAdded,2,0.5,Invoked when a component has been added to the container.,;java.awt.AWTEventMulticaster.componentAdded(ContainerEvent);java.awt.event.ContainerAdapter.componentAdded(ContainerEvent),;0.50;0.50
componentHidden,2,0.5,Invoked when the component has been made invisible.,;java.awt.AWTEventMulticaster.componentHidden(ComponentEvent);java.awt.event.ComponentAdapter.componentHidden(ComponentEvent),;0.50;0.50
componentMoved,2,0.5,Invoked when the component's position changes.,;java.awt.AWTEventMulticaster.componentMoved(ComponentEvent);java.awt.event.ComponentAdapter.componentMoved(ComponentEvent),;0.50;0.50
componentRemoved,2,0.5,Invoked when a component has been removed from the container.,;java.awt.AWTEventMulticaster.componentRemoved(ContainerEvent);java.awt.event.ContainerAdapter.componentRemoved(ContainerEvent),;0.50;0.50
componentResized,2,0.5,Invoked when the component's size changes.,;java.awt.AWTEventMulticaster.componentResized(ComponentEvent);java.awt.event.ComponentAdapter.componentResized(ComponentEvent),;0.50;0.50
componentShown,2,0.5,Invoked when the component has been made visible.,;java.awt.AWTEventMulticaster.componentShown(ComponentEvent);java.awt.event.ComponentAdapter.componentShown(ComponentEvent),;0.50;0.50
composeName,2,1,"Composes the name of this context with a name relative to this context. Since an initial context may never be named relative to any context other than itself, the value of the prefix parameter must be an empty name.",";javax.naming.InitialContext.composeName(String,String);javax.naming.InitialContext.composeName(Name,Name)",;1.00;1.00
computeFields,2,0.701082613,"Converts the current millisecond time value time to calendar field values in fields[]. This allows you to sync up the calendar field values with a new time that is set for the calendar. The time is not recomputed first; to recompute the time, then the fields, call the complete() method.",;java.util.Calendar.computeFields();java.util.GregorianCalendar.computeFields(),;0.70;0.68
computeStringWidth,2,0.5,Returns the size of the passed in string.,";javax.swing.SwingUtilities.computeStringWidth(FontMetrics,String);javax.swing.plaf.synth.SynthGraphicsUtils.computeStringWidth(SynthContext,Font,FontMetrics,String)",;0.50;0.50
computeTime,2,0.5,Converts calendar field values to the time value (millisecond offset from the Epoch).,;java.util.Calendar.computeTime();java.util.GregorianCalendar.computeTime(),;0.50;0.50
config,2,0.698564,"Log a CONFIG message, which is only to be constructed if the logging level is such that the message will actually be logged. If the logger is currently enabled for the CONFIG message level then the message is constructed by invoking the provided supplier function and forwarded to all the registered output Handler objects.",;java.util.logging.Logger.config(String);java.util.logging.Logger.config(Supplier&lt;String&gt;),;0.66;0.70
configureBlocking,2,0.539012499,Adjusts this channel's blocking mode. If this channel is registered with one or more selectors then an attempt to place it into blocking mode will cause an IllegalBlockingModeException to be thrown. This method may be invoked at any time. The new blocking mode will only affect I/O operations that are initiated after this method returns. For some implementations this may require blocking until all pending I/O operations are complete. If this method is invoked while another invocation of this method or of the register method is in progress then it will first block until the other operation is complete.,;java.nio.channels.SelectableChannel.configureBlocking(boolean);java.nio.channels.spi.AbstractSelectableChannel.configureBlocking(boolean),;0.54;0.52
connectionClosed,2,0.5,Description copied from class:JMXConnectorServer,";javax.management.remote.JMXConnectorServer.connectionClosed(String,String,Object);javax.management.remote.rmi.RMIConnectorServer.connectionClosed(String,String,Object)",;0.50;0.50
connectionFailed,2,0.5,Description copied from class:JMXConnectorServer,";javax.management.remote.JMXConnectorServer.connectionFailed(String,String,Object);javax.management.remote.rmi.RMIConnectorServer.connectionFailed(String,String,Object)",;0.50;0.50
connectionOpened,2,0.5,Description copied from class:JMXConnectorServer,";javax.management.remote.JMXConnectorServer.connectionOpened(String,String,Object);javax.management.remote.rmi.RMIConnectorServer.connectionOpened(String,String,Object)",;0.50;0.50
constructorsIn,2,0.744461511,Returns a set of constructors in elements.,;javax.lang.model.util.ElementFilter.constructorsIn(Iterable&lt;?);javax.lang.model.util.ElementFilter.constructorsIn(Set&lt;?),;0.74;0.74
contentEquals,2,0.757883313,Compares this string to the specified CharSequence. The result is true if and only if this String represents the same sequence of char values as the specified sequence. Note that if the CharSequence is a StringBuffer then the method synchronizes on it.,;java.lang.String.contentEquals(StringBuffer);java.lang.String.contentEquals(CharSequence),;0.75;0.76
contentsLost,2,0.5,Returns true if rendering data was lost since last validate call. This method should be called by the application at the end of any series of rendering operations to or from the image to see whether the image needs to be validated and the rendering redone.,;java.awt.image.BufferStrategy.contentsLost();java.awt.image.VolatileImage.contentsLost(),;0.50;0.50
convertPoint,2,0.865079204,"Convert the point (x,y) in source coordinate system to destination coordinate system. If source is null, (x,y) is assumed to be in destination's root component coordinate system. If destination is null, (x,y) will be converted to source's root component coordinate system. If both source and destination are null, return (x,y) without any conversion.",";javax.swing.SwingUtilities.convertPoint(Component,Point,Component);javax.swing.SwingUtilities.convertPoint(Component,int,int,Component)",;0.86;0.87
convertToVector,2,0.839040739,Returns a vector that contains the same objects as the array.,;javax.swing.table.DefaultTableModel.convertToVector(Object[]);javax.swing.table.DefaultTableModel.convertToVector(Object[][]),;0.84;0.84
copyArea,2,0.5,"Copies an area of the component by a distance specified by dx and dy. From the point specified by x and y, this method copies downwards and to the right. To copy an area of the component to the left or upwards, specify a negative value for dx or dy. If a portion of the source rectangle lies outside the bounds of the component, or is obscured by another window or component, copyArea will be unable to copy the associated pixels. The area that is omitted can be refreshed by calling the component's paint method.",";java.awt.Graphics.copyArea(int,int,int,int,int,int);javax.swing.DebugGraphics.copyArea(int,int,int,int,int,int)",;0.50;0.00
copyInto,2,0.63246343,"Copies the components of this list into the specified array. The array must be big enough to hold all the objects in this list, else an IndexOutOfBoundsException is thrown.",;java.util.Vector.copyInto(Object[]);javax.swing.DefaultListModel.copyInto(Object[]),;0.63;0.63
copyValueOf,2,0.80326533,Equivalent to valueOf(char[]).,";java.lang.String.copyValueOf(char[],int,int);java.lang.String.copyValueOf(char[])",;0.75;0.80
create_dyn_any,2,0.5,"Creates a new DynAny object from an any value. A copy of the TypeCode associated with the any value is assigned to the resulting DynAny object. The value associated with the DynAny object is a copy of the value in the original any. The current position of the created DynAny is set to zero if the passed value has components, to -1 otherwise",;org.omg.CORBA.ORB.create_dyn_any(Any);org.omg.DynamicAny._DynAnyFactoryStub.create_dyn_any(Any),;0.50;0.50
create_input_stream,2,0.5,Returns an input stream with the same buffer.,;org.omg.CORBA.Any.create_input_stream();org.omg.CORBA.portable.OutputStream.create_input_stream(),;0.50;0.50
create_output_stream,2,0.5,Creates a new org.omg.CORBA.portable.OutputStream into which IDL method parameters can be marshalled during method invocation.,;org.omg.CORBA.Any.create_output_stream();org.omg.CORBA.ORB.create_output_stream(),;0.50;0.50
create_request,2,1,Creates a Request instance for use in the Dynamic Invocation Interface.,";org.omg.CORBA.portable.Delegate.create_request(Object,Context,String,NVList,NamedValue);org.omg.CORBA.portable.Delegate.create_request(Object,Context,String,NVList,NamedValue,ExceptionList,ContextList)",;1.00;1.00
createAndPublishEndpoint,2,0.715106185,"Creates and publishes an endpoint object with the specified address, implementation object and web service features. Provider implementations must override the default implementation.",";javax.xml.ws.spi.Provider.createAndPublishEndpoint(String,Object);javax.xml.ws.spi.Provider.createAndPublishEndpoint(String,Object,WebServiceFeature...)",;0.69;0.72
createBCSChild,2,1,Subclasses can override this method to insert their own subclass of Child without having to override add() or the other Collection methods that add children to the set.,";java.beans.beancontext.BeanContextServicesSupport.createBCSChild(Object,Object);java.beans.beancontext.BeanContextSupport.createBCSChild(Object,Object)",;1.00;1.00
createBinder,2,0.5,Creates a Binder for W3C DOM.,;javax.xml.bind.JAXBContext.createBinder(Class&lt;T&gt;);javax.xml.bind.JAXBContext.createBinder(),;0.50;0.50
createBranchElement,2,0.716400764,"Creates a document branch element, that can contain other elements. This is implemented to return an element of type HTMLDocument.BlockElement.",";javax.swing.text.AbstractDocument.createBranchElement(Element,AttributeSet);javax.swing.text.html.HTMLDocument.createBranchElement(Element,AttributeSet)",;0.67;0.72
createCompatibleImage,2,0.847333561,Returns a BufferedImage that supports the specified transparency and has a data layout and color model compatible with this GraphicsConfiguration. This method has nothing to do with memory-mapping a device. The returned BufferedImage has a layout and color model that can be optimally blitted to a device with this GraphicsConfiguration.,";java.awt.GraphicsConfiguration.createCompatibleImage(int,int);java.awt.GraphicsConfiguration.createCompatibleImage(int,int,int)",;0.85;0.85
createCompoundBorder,2,0.588629628,Creates a compound border with a null inside edge and a null outside edge.,";javax.swing.BorderFactory.createCompoundBorder();javax.swing.BorderFactory.createCompoundBorder(Border,Border)",;0.59;0.59
createDefaultCellEditor,2,1,Creates a default cell editor.,;javax.swing.plaf.basic.BasicTreeUI.createDefaultCellEditor();javax.swing.plaf.synth.SynthTreeUI.createDefaultCellEditor(),;1.00;1.00
createDefaultCellRenderer,2,1,Returns the default cell renderer that is used to do the stamping of each node.,;javax.swing.plaf.basic.BasicTreeUI.createDefaultCellRenderer();javax.swing.plaf.synth.SynthTreeUI.createDefaultCellRenderer(),;1.00;1.00
createDefaultColumnModel,2,1,Returns the default column model object which is a DefaultTableColumnModel. A subclass can override this method to return a different column model object,;javax.swing.JTable.createDefaultColumnModel();javax.swing.table.JTableHeader.createDefaultColumnModel(),;1.00;1.00
createDefaultEditorKit,2,0.5,Creates the EditorKit to use by default. This is implemented to return javax.swing.text.StyledEditorKit.,;javax.swing.JEditorPane.createDefaultEditorKit();javax.swing.JTextPane.createDefaultEditorKit(),;0.50;0.50
createDefaultModel,2,0.924147148,Creates the default implementation of the model to be used at construction if one isn't explicitly given. An instance of PlainDocument is returned.,;javax.swing.JTextArea.createDefaultModel();javax.swing.JTextField.createDefaultModel(),;0.92;0.92
createDefaultNonContinuousLayoutDivider,2,1,"Returns the default non continuous layout divider, which is an instance of Canvas that fills in the background with dark gray.",;javax.swing.plaf.basic.BasicSplitPaneUI.createDefaultNonContinuousLayoutDivider();javax.swing.plaf.synth.SynthSplitPaneUI.createDefaultNonContinuousLayoutDivider(),;1.00;1.00
createDirectory,2,0.514493189,Creates a new directory. The check for the existence of the file and the creation of the directory if it does not exist are a single operation that is atomic with respect to all other filesystem activities that might affect the directory. The createDirectories method should be used where it is required to create all nonexistent parent directories first. The attrs parameter is optional file-attributes to set atomically when creating the directory. Each attribute is identified by its name. If more than one attribute of the same name is included in the array then all but the last occurrence is ignored.,";java.nio.file.Files.createDirectory(Path,FileAttribute&lt;?&gt;...);java.nio.file.spi.FileSystemProvider.createDirectory(Path,FileAttribute&lt;?&gt;...)",;0.51;0.50
createDragGestureRecognizer,2,0.5,"Creates a new DragGestureRecognizer that implements the specified abstract subclass of DragGestureRecognizer, and sets the specified Component and DragGestureListener on the newly created object.",";java.awt.Toolkit.createDragGestureRecognizer(Class&lt;T&gt;,DragSource,Component,int,DragGestureListener);java.awt.dnd.DragSource.createDragGestureRecognizer(Class&lt;T&gt;,Component,int,DragGestureListener)",;0.50;0.50
createEmptyBorder,2,0.71040865,"Creates an empty border that takes up no space. (The width of the top, bottom, left, and right sides are all zero.)",";javax.swing.BorderFactory.createEmptyBorder();javax.swing.BorderFactory.createEmptyBorder(int,int,int,int)",;0.71;0.71
createFault,2,0.5,Creates a new default SOAPFault object,";javax.xml.soap.SOAPFactory.createFault(String,QName);javax.xml.soap.SOAPFactory.createFault()",;0.50;0.50
createFileObject,2,0.737692637,Returns a File object constructed from the given path string.,";javax.swing.filechooser.FileSystemView.createFileObject(File,String);javax.swing.filechooser.FileSystemView.createFileObject(String)",;0.73;0.74
createFilteredReader,2,0.799570852,Create a filtered reader that wraps the filter around the reader,";javax.xml.stream.XMLInputFactory.createFilteredReader(XMLStreamReader,StreamFilter);javax.xml.stream.XMLInputFactory.createFilteredReader(XMLEventReader,EventFilter)",;0.80;0.80
createFont,2,0.803056273,"Returns a new Font using the specified font type and input data. The new Font is created with a point size of 1 and style PLAIN. This base font can then be used with the deriveFont methods in this class to derive new Font objects with varying sizes, styles, transforms and font features. This method does not close the InputStream. To make the Font available to Font constructors the returned Font must be registered in the GraphicsEnviroment by calling registerFont(Font).",";java.awt.Font.createFont(int,InputStream);java.awt.Font.createFont(int,File)",;0.80;0.78
createFragment,2,0.791909654,"Creates a view that represents a portion of the element. This is potentially useful during formatting operations for taking measurements of fragments of the view. If the view doesn't support fragmenting (the default), it should return itself. This view does support fragmenting. It is implemented to return a nested class that shares state in this view representing only a portion of the view.",";javax.swing.text.GlyphView.createFragment(int,int);javax.swing.text.View.createFragment(int,int)",;0.79;0.75
createGlassPane,2,0.798438709,Called by the constructor methods to create a default glassPane. By default this method creates a new JPanel with visibility set to true and opacity set to false.,;javax.swing.JLayer.createGlassPane();javax.swing.JRootPane.createGlassPane(),;0.80;0.80
createGrayscale,2,0.930339478,Returns a specifier for a grayscale image format that will pack pixels of the given bit depth into array elements of the specified data type.,";javax.imageio.ImageTypeSpecifier.createGrayscale(int,int,boolean);javax.imageio.ImageTypeSpecifier.createGrayscale(int,int,boolean,boolean)",;0.93;0.93
createInputAttributes,2,1,"Copies the key/values in elements AttributeSet into set. This does not copy component, icon, or element names attributes. Subclasses may wish to refine what is and what isn't copied here. But be sure to first remove all the attributes that are in set. This is called anytime the caret moves over a different location.",";javax.swing.text.StyledEditorKit.createInputAttributes(Element,MutableAttributeSet);javax.swing.text.html.HTMLEditorKit.createInputAttributes(Element,MutableAttributeSet)",;1.00;1.00
createInputStreamInstance,2,0.646669315,"Returns an instance of the ImageInputStream implementation associated with this service provider. If the use of a cache file is optional, the useCache parameter will be consulted. Where a cache is required, or not applicable, the value of useCache will be ignored.",";javax.imageio.spi.ImageInputStreamSpi.createInputStreamInstance(Object,boolean,File);javax.imageio.spi.ImageInputStreamSpi.createInputStreamInstance(Object)",;0.65;0.64
createItemListener,2,1,Creates an ItemListener which will be added to the combo box. If this method returns null then it will not be added to the combo box. Subclasses may override this method to return instances of their own ItemEvent handlers.,;javax.swing.plaf.basic.BasicComboBoxUI.createItemListener();javax.swing.plaf.basic.BasicComboPopup.createItemListener(),;1.00;1.00
createLargeAttributeSet,2,0.990987299,Creates a large set of attributes that should trade off space for time. This set will not be shared. This is a hook for subclasses that want to alter the behavior of the larger attribute storage format (which is SimpleAttributeSet by default). This can be reimplemented to return a MutableAttributeSet that provides some sort of attribute conversion.,;javax.swing.text.StyleContext.createLargeAttributeSet(AttributeSet);javax.swing.text.html.StyleSheet.createLargeAttributeSet(AttributeSet),;0.99;0.99
createLeafElement,2,0.535178584,"Creates a document leaf element. Hook through which elements are created to represent the document structure. Because this implementation keeps structure and content separate, elements grow automatically when content is extended so splits of existing elements follow. The document itself gets to decide how to generate elements to give flexibility in the type of elements used.",";javax.swing.text.AbstractDocument.createLeafElement(Element,AttributeSet,int,int);javax.swing.text.html.HTMLDocument.createLeafElement(Element,AttributeSet,int,int)",;0.54;0.52
createLink,2,0.545450821,"Creates a new link (directory entry) for an existing file (optional operation). The link parameter locates the directory entry to create. The existing parameter is the path to an existing file. This method creates a new directory entry for the file so that it can be accessed using link as the path. On some file systems this is known as creating a ""hard link"". Whether the file attributes are maintained for the file or for each directory entry is file system specific and therefore not specified. Typically, a file system requires that all links (directory entries) for a file be on the same file system. Furthermore, on some platforms, the Java virtual machine may require to be started with implementation specific privileges to create hard links or to create links to directories.",";java.nio.file.Files.createLink(Path,Path);java.nio.file.spi.FileSystemProvider.createLink(Path,Path)",;0.55;0.51
createList,2,0.5,Creates the JList used in the popup to display the items in the combo box model. This method is called when the UI class is created.,;java.awt.Toolkit.createList(List);javax.swing.plaf.basic.BasicComboPopup.createList(),;0.50;0.50
createMatteBorder,2,0.548582581,"Creates a matte-look border that consists of multiple tiles of a specified icon. Multiple copies of the icon are placed side-by-side to fill up the border area. Note: If the icon doesn't load, the border area is painted gray.",";javax.swing.BorderFactory.createMatteBorder(int,int,int,int,Color);javax.swing.BorderFactory.createMatteBorder(int,int,int,int,Icon)",;0.54;0.55
createMBeanServer,2,0.849481321,Return a new object implementing the MBeanServer interface with a standard default domain name. The default domain name is used as the domain part in the ObjectName of MBeans when the domain is specified by the user is null.The standard default domain name is DefaultDomain.The MBeanServer reference is internally kept. This will allow findMBeanServer to return a reference to this MBeanServer object.This method is equivalent to createMBeanServer(null).,;javax.management.MBeanServerFactory.createMBeanServer();javax.management.MBeanServerFactory.createMBeanServer(String),;0.85;0.84
createMessage,2,0.521684853,"Creates a new SOAPMessage object with the default SOAPPart, SOAPEnvelope, SOAPBody, and SOAPHeader objects. Profile-specific message factories can choose to prepopulate the SOAPMessage object with profile-specific headers. Content can be added to this message's SOAPPart object, and the message can be sent ""as is"" when a message containing only a SOAP part is sufficient. Otherwise, the SOAPMessage object needs to create one or more AttachmentPart objects and add them to itself. Any content that is not in XML format must be in an AttachmentPart object.",";javax.xml.soap.MessageFactory.createMessage();javax.xml.soap.MessageFactory.createMessage(MimeHeaders,InputStream)",;0.52;0.50
createMessageArea,2,0.876801318,Called from installComponents() to create a Container containing the body of the message. The icon is the created by calling BasicOptionPaneUI.addIcon(java.awt.Container).,;javax.swing.plaf.basic.BasicOptionPaneUI.createMessageArea();javax.swing.plaf.synth.SynthOptionPaneUI.createMessageArea(),;0.88;0.88
createNamespace,2,0.5,Create a new Namespace,";javax.xml.stream.XMLEventFactory.createNamespace(String);javax.xml.stream.XMLEventFactory.createNamespace(String,String)",;0.50;0.50
createNextButton,2,1,"Creates an increment button, i.e. component that replaces the spinner value with the object returned by spinner.getNextValue. By default the nextButton is a JButton. If the increment button is not needed this method should return null.",;javax.swing.plaf.basic.BasicSpinnerUI.createNextButton();javax.swing.plaf.synth.SynthSpinnerUI.createNextButton(),;1.00;1.00
createNonRolloverBorder,2,0.5,Description copied from class:BasicToolBarUI,;javax.swing.plaf.basic.BasicToolBarUI.createNonRolloverBorder();javax.swing.plaf.metal.MetalToolBarUI.createNonRolloverBorder(),;0.50;0.50
createOutputStreamInstance,2,0.646669315,"Returns an instance of the ImageOutputStream implementation associated with this service provider. If the use of a cache file is optional, the useCache parameter will be consulted. Where a cache is required, or not applicable, the value of useCache will be ignored.",";javax.imageio.spi.ImageOutputStreamSpi.createOutputStreamInstance(Object,boolean,File);javax.imageio.spi.ImageOutputStreamSpi.createOutputStreamInstance(Object)",;0.65;0.64
createPreviousButton,2,1,"Creates a decrement button, i.e. component that replaces the spinner value with the object returned by spinner.getPreviousValue. By default the previousButton is a JButton. If the decrement button is not needed this method should return null.",;javax.swing.plaf.basic.BasicSpinnerUI.createPreviousButton();javax.swing.plaf.synth.SynthSpinnerUI.createPreviousButton(),;1.00;1.00
createReaderInstance,2,0.715913662,"Returns an instance of the ImageReader implementation associated with this service provider. The returned object will initially be in an initial state as if its reset method had been called. An Object may be supplied to the plug-in at construction time. The nature of the object is entirely plug-in specific. Typically, a plug-in will implement this method using code such as return new MyImageReader(this).",;javax.imageio.spi.ImageReaderSpi.createReaderInstance();javax.imageio.spi.ImageReaderSpi.createReaderInstance(Object),;0.68;0.72
createRegistry,2,0.787297558,"Creates and exports a Registry instance on the local host that uses custom socket factories for communication with that instance. The registry that is created listens for incoming requests on the given port using a ServerSocket created from the supplied RMIServerSocketFactory. The Registry instance is exported as if the static UnicastRemoteObject.exportObject method is invoked, passing the Registry instance, the specified port, the specified RMIClientSocketFactory, and the specified RMIServerSocketFactory as arguments, except that the Registry instance is exported with a well-known object identifier, an ObjID instance constructed with the value ObjID.REGISTRY_ID.",";java.rmi.registry.LocateRegistry.createRegistry(int);java.rmi.registry.LocateRegistry.createRegistry(int,RMIClientSocketFactory,RMIServerSocketFactory)",;0.77;0.79
createRenderer,2,1,Creates the default renderer that will be used in a non-editiable combo box. A default renderer will used only if a renderer has not been explicitly set with setRenderer.,;javax.swing.plaf.basic.BasicComboBoxUI.createRenderer();javax.swing.plaf.synth.SynthComboBoxUI.createRenderer(),;1.00;1.00
createRolloverBorder,2,0.5,Description copied from class:BasicToolBarUI,;javax.swing.plaf.basic.BasicToolBarUI.createRolloverBorder();javax.swing.plaf.metal.MetalToolBarUI.createRolloverBorder(),;0.50;0.50
createRow,2,0.658888815,Create a View that should be used to hold a a rows worth of children in a flow. This is called by the FlowStrategy when new children are added or removed (i.e. rows are added or removed) in the process of updating the flow.,;javax.swing.text.FlowView.createRow();javax.swing.text.ParagraphView.createRow(),;0.66;0.60
createScrollButton,2,1,Creates and returns a JButton that will provide the user with a way to scroll the tabs in a particular direction. The returned JButton must be instance of UIResource.,;javax.swing.plaf.basic.BasicTabbedPaneUI.createScrollButton(int);javax.swing.plaf.synth.SynthTabbedPaneUI.createScrollButton(int),;1.00;1.00
createSelectionModel,2,0.5,Creates a new default list selection model.,;javax.swing.JList.createSelectionModel();javax.swing.table.DefaultTableColumnModel.createSelectionModel(),;0.50;0.50
createServiceDelegate,2,1,Creates a service delegate object.,";javax.xml.ws.spi.Provider.createServiceDelegate(URL,QName,Class&lt;?);javax.xml.ws.spi.Provider.createServiceDelegate(URL,QName,Class&lt;?,WebServiceFeature...)",;1.00;1.00
createSmallAttributeSet,2,0.986654635,Creates a compact set of attributes that might be shared. This is a hook for subclasses that want to alter the behavior of SmallAttributeSet. This can be reimplemented to return an AttributeSet that provides some sort of attribute conversion.,;javax.swing.text.StyleContext.createSmallAttributeSet(AttributeSet);javax.swing.text.html.StyleSheet.createSmallAttributeSet(AttributeSet),;0.99;0.99
createSSLEngine,2,0.770340734,"Creates a new SSLEngine using this context. Applications using this factory method are providing no hints for an internal session reuse strategy. If hints are desired, createSSLEngine(String, int) should be used instead. Some cipher suites (such as Kerberos) require remote hostname information, in which case this factory method should not be used.",";javax.net.ssl.SSLContext.createSSLEngine();javax.net.ssl.SSLContext.createSSLEngine(String,int)",;0.77;0.77
createStandardLabels,2,0.897864046,"Creates a Hashtable of numerical text labels, starting at the slider minimum, and using the increment specified. For example, if you call createStandardLabels( 10 ) and the slider minimum is zero, then labels will be created for the values 0, 10, 20, 30, and so on. For the labels to be drawn on the slider, the returned Hashtable must be passed into setLabelTable, and setPaintLabels must be set to true. For further details on the makeup of the returned Hashtable, see the setLabelTable documentation.",";javax.swing.JSlider.createStandardLabels(int);javax.swing.JSlider.createStandardLabels(int,int)",;0.90;0.90
createStrokeBorder,2,0.791087366,"Creates a border of the specified stroke and paint. If the specified paint is null, the component's foreground color will be used to render the border.",";javax.swing.BorderFactory.createStrokeBorder(BasicStroke);javax.swing.BorderFactory.createStrokeBorder(BasicStroke,Paint)",;0.78;0.79
createSymbolicLink,2,0.524687745,"Creates a symbolic link to a target (optional operation). The target parameter is the target of the link. It may be an absolute or relative path and may not exist. When the target is a relative path then file system operations on the resulting link are relative to the path of the link. The attrs parameter is optional attributes to set atomically when creating the link. Each attribute is identified by its name. If more than one attribute of the same name is included in the array then all but the last occurrence is ignored. Where symbolic links are supported, but the underlying FileStore does not support symbolic links, then this may fail with an IOException. Additionally, some operating systems may require that the Java virtual machine be started with implementation specific privileges to create symbolic links, in which case this method may throw IOException.",";java.nio.file.Files.createSymbolicLink(Path,Path,FileAttribute&lt;?&gt;...);java.nio.file.spi.FileSystemProvider.createSymbolicLink(Path,Path,FileAttribute&lt;?&gt;...)",;0.52;0.51
createTempDirectory,2,0.58431011,"Creates a new directory in the specified directory, using the given prefix to generate its name. The resulting Path is associated with the same FileSystem as the given directory. The details as to how the name of the directory is constructed is implementation dependent and therefore not specified. Where possible the prefix is used to construct candidate names. As with the createTempFile methods, this method is only part of a temporary-file facility. A shutdown-hook, or the File.deleteOnExit() mechanism may be used to delete the directory automatically. The attrs parameter is optional file-attributes to set atomically when creating the directory. Each attribute is identified by its name. If more than one attribute of the same name is included in the array then all but the last occurrence is ignored.",";java.nio.file.Files.createTempDirectory(Path,String,FileAttribute&lt;?&gt;...);java.nio.file.Files.createTempDirectory(String,FileAttribute&lt;?&gt;...)",;0.58;0.55
createTransformedShape,2,0.518043456,"Returns a new Shape representing a transformed version of this Path2D. Note that the exact type and coordinate precision of the return value is not specified for this method. The method will return a Shape that contains no less precision for the transformed geometry than this Path2D currently maintains, but it may contain no more precision either. If the tradeoff of precision vs. storage size in the result is important then the convenience constructors in the Path2D.Float and Path2D.Double subclasses should be used to make the choice explicit.",;java.awt.geom.AffineTransform.createTransformedShape(Shape);java.awt.geom.Path2D.createTransformedShape(AffineTransform),;0.50;0.52
createTreeModelListener,2,0.5,Returns a listener that can update the tree when the model changes.,;javax.swing.JTree.createTreeModelListener();javax.swing.plaf.basic.BasicTreeUI.createTreeModelListener(),;0.50;0.50
createUnmarshaller,2,0.5,Description copied from interface:DomHandler,;javax.xml.bind.JAXBContext.createUnmarshaller();javax.xml.bind.annotation.W3CDomHandler.createUnmarshaller(ValidationEventHandler),;0.50;0.50
createValue,2,0.5,Creates the value retrieved from the UIDefaults table. The object is created each time it is accessed.,;javax.swing.UIDefaults.LazyInputMap.createValue(UIDefaults);javax.swing.UIDefaults.ProxyLazyValue.createValue(UIDefaults),;0.50;0.50
createVolatileImage,2,0.580781729,"Creates a volatile off-screen drawable image, with the given capabilities. The contents of this image may be lost at any time due to operating system issues, so the image must be managed via the VolatileImage interface.",";java.awt.Component.createVolatileImage(int,int);java.awt.Component.createVolatileImage(int,int,ImageCapabilities)",;0.54;0.58
createW3CEndpointReference,2,0.918116572,"Factory method to create a W3CEndpointReference. Using this method, a W3CEndpointReference instance can be created with extension elements, and attributes. Provider implementations must override the default implementation. This method can be used to create a W3CEndpointReference for any endpoint by specifying the address property along with any other desired properties. This method can also be used to create a W3CEndpointReference for an endpoint that is published by the same Java EE application. To do so the address property can be provided or this method can automatically determine the address of an endpoint that is published by the same Java EE application and is identified by the serviceName and portName propeties. If the address is null and the serviceName and portName do not identify an endpoint published by the same Java EE application, a javax.lang.IllegalStateException MUST be thrown.",";javax.xml.ws.spi.Provider.createW3CEndpointReference(String,QName,QName,List&lt;Element&gt;,String,List&lt;Element&gt;);javax.xml.ws.spi.Provider.createW3CEndpointReference(String,QName,QName,QName,List&lt;Element&gt;,String,List&lt;Element&gt;,List&lt;Element&gt;,Map&lt;QName,String&gt;)",;0.91;0.92
createWritableRaster,2,0.939949448,"Creates a WritableRaster with the specified SampleModel. The upper left corner of the Raster is given by the location argument. If location is null, (0, 0) will be used.",";java.awt.image.Raster.createWritableRaster(SampleModel,Point);java.awt.image.Raster.createWritableRaster(SampleModel,DataBuffer,Point)",;0.94;0.94
createWriterInstance,2,0.715913662,"Returns an instance of the ImageWriter implementation associated with this service provider. The returned object will initially be in an initial state as if its reset method had been called. An Object may be supplied to the plug-in at construction time. The nature of the object is entirely plug-in specific. Typically, a plug-in will implement this method using code such as return new MyImageWriter(this).",;javax.imageio.spi.ImageWriterSpi.createWriterInstance();javax.imageio.spi.ImageWriterSpi.createWriterInstance(Object),;0.68;0.72
createZipEntry,2,0.5,Creates a new ZipEntry object for the specified entry name.,;java.util.jar.JarInputStream.createZipEntry(String);java.util.zip.ZipInputStream.createZipEntry(String),;0.50;0.50
current_member_kind,2,1,Returns the TCKind associated with the member at the current position.,;org.omg.DynamicAny._DynStructStub.current_member_kind();org.omg.DynamicAny._DynValueStub.current_member_kind(),;1.00;1.00
current_member_name,2,1,Returns the name of the member at the current position. This operation may return an empty string since the TypeCode of the value being manipulated may not contain the names of members.,;org.omg.DynamicAny._DynStructStub.current_member_name();org.omg.DynamicAny._DynValueStub.current_member_name(),;1.00;1.00
currentManager,2,0.617200291,Return the RepaintManager for the calling thread given a JComponent. Note: This method exists for backward binary compatibility with earlier versions of the Swing library. It simply returns the result returned by currentManager(Component).,;javax.swing.RepaintManager.currentManager(Component);javax.swing.RepaintManager.currentManager(JComponent),;0.54;0.62
currentSegment,2,0.964499387,"Returns the coordinates and type of the current path segment in the iteration. The return value is the path segment type: SEG_MOVETO, SEG_LINETO, or SEG_CLOSE. A double array of length 6 must be passed in and can be used to store the coordinates of the point(s). Each point is stored as a pair of double x,y coordinates. SEG_MOVETO and SEG_LINETO types return one point, and SEG_CLOSE does not return any points.",;java.awt.geom.FlatteningPathIterator.currentSegment(float[]);java.awt.geom.FlatteningPathIterator.currentSegment(double[]),;0.96;0.96
cut,2,0.686766929,"Invokes provideErrorFeedback on the current look and feel, which typically initiates an error beep. The normal behavior of transferring the currently selected range in the associated text model to the system clipboard, and removing the contents from the model, is not acceptable for a password field.",;javax.swing.JPasswordField.cut();javax.swing.text.JTextComponent.cut(),;0.69;0.67
deactivateFrame,2,0.5,This method is called when the frame is no longer selected. This action is delegated to the desktopManager.,;javax.swing.DefaultDesktopManager.deactivateFrame(JInternalFrame);javax.swing.plaf.basic.BasicInternalFrameUI.deactivateFrame(JInternalFrame),;0.50;0.50
decodeColor,2,0.813142248,"Decodes and returns a color, which is derived from a offset between two other colors.",";javax.swing.plaf.nimbus.AbstractRegionPainter.decodeColor(String,float,float,float,int);javax.swing.plaf.nimbus.AbstractRegionPainter.decodeColor(Color,Color,float)",;0.81;0.81
decorateTask,2,0.959233901,Modifies or replaces the task used to execute a callable. This method can be used to override the concrete class used for managing internal tasks. The default implementation simply returns the given task.,";java.util.concurrent.ScheduledThreadPoolExecutor.decorateTask(Runnable,RunnableScheduledFuture&lt;V&gt;);java.util.concurrent.ScheduledThreadPoolExecutor.decorateTask(Callable&lt;V&gt;,RunnableScheduledFuture&lt;V&gt;)",;0.96;0.96
decrementExact,2,0.925366567,"Returns the argument decremented by one, throwing an exception if the result overflows a long.",;java.lang.Math.decrementExact(int);java.lang.Math.decrementExact(long),;0.93;0.93
defaultPage,2,0.5,Creates a new PageFormat instance and sets it to a default size and orientation.,;java.awt.print.PrinterJob.defaultPage(PageFormat);java.awt.print.PrinterJob.defaultPage(),;0.50;0.50
defEntity,2,0.5,Creates and returns an Entity.,";javax.swing.text.html.parser.DTD.defEntity(String,int,int);javax.swing.text.html.parser.DTD.defEntity(String,int,String)",;0.50;0.50
definePackage,2,0.564437092,"Defines a new package by name in this ClassLoader. The attributes contained in the specified Manifest will be used to obtain package version and sealing information. For sealed packages, the additional URL specifies the code source URL from which the package was loaded.",";java.lang.ClassLoader.definePackage(String,String,String,String,String,String,String,URL);java.net.URLClassLoader.definePackage(String,Manifest,URL)",;0.56;0.56
deiconifyFrame,2,0.5,This method is called when the user wants to deiconify the frame. The playRestoreUpSound Action is fired. This action is delegated to the desktopManager.,;javax.swing.DefaultDesktopManager.deiconifyFrame(JInternalFrame);javax.swing.plaf.basic.BasicInternalFrameUI.deiconifyFrame(JInternalFrame),;0.50;0.50
deleteChar,2,0.543962004,"Updates the TextMeasurer after a single character has been deleted from the paragraph currently represented by this TextMeasurer. After this call, this TextMeasurer is equivalent to a new TextMeasurer created from the text; however, it will usually be more efficient to update an existing TextMeasurer than to create a new one from scratch.",";java.awt.font.LineBreakMeasurer.deleteChar(AttributedCharacterIterator,int);java.awt.font.TextMeasurer.deleteChar(AttributedCharacterIterator,int)",;0.53;0.54
deleteCharAt,2,1,"Removes the char at the specified position in this sequence. This sequence is shortened by one char. Note: If the character at the given index is a supplementary character, this method does not remove the entire character. If correct handling of supplementary characters is required, determine the number of chars to remove by calling Character.charCount(thisSequence.codePointAt(index)), where thisSequence is this sequence.",;java.lang.StringBuffer.deleteCharAt(int);java.lang.StringBuilder.deleteCharAt(int),;1.00;1.00
deleteIfExists,2,0.527117046,"Deletes a file if it exists. As with the delete(Path) method, an implementation may need to examine the file to determine if the file is a directory. Consequently this method may not be atomic with respect to other file system operations. If the file is a symbolic link, then the symbolic link itself, not the final target of the link, is deleted. If the file is a directory then the directory must be empty. In some implementations a directory has entries for special files or links that are created when the directory is created. In such implementations a directory is considered empty when only the special entries exist. On some operating systems it may not be possible to remove a file when it is open and in use by this Java virtual machine or other programs.",;java.nio.file.Files.deleteIfExists(Path);java.nio.file.spi.FileSystemProvider.deleteIfExists(Path),;0.53;0.51
deleteShortcut,2,0.5,Delete any MenuShortcut object associated with this menu item.,;java.awt.MenuBar.deleteShortcut(MenuShortcut);java.awt.MenuItem.deleteShortcut(),;0.50;0.50
deliverEvent,2,1,"Deprecated.As of JDK version 1.1, replaced by dispatchEvent(AWTEvent e)",;java.awt.Component.deliverEvent(Event);java.awt.Container.deliverEvent(Event),;1.00;1.00
deltaTransform,2,0.693845883,"Transforms an array of relative distance vectors by this transform. A relative distance vector is transformed without applying the translation components of the affine transformation matrix using the following equations: [ x' ] [ m00 m01 (m02) ] [ x ] [ m00x + m01y ] [ y' ] = [ m10 m11 (m12) ] [ y ] = [ m10x + m11y ] [ (1) ] [ (0) (0) ( 1 ) ] [ (1) ] [ (1) ] The two coordinate array sections can be exactly the same or can be overlapping sections of the same array without affecting the validity of the results. This method ensures that no source coordinates are overwritten by a previous operation before they can be transformed. The coordinates are stored in the arrays starting at the indicated offset in the order [x0, y0, x1, y1, ..., xn, yn].",";java.awt.geom.AffineTransform.deltaTransform(Point2D,Point2D);java.awt.geom.AffineTransform.deltaTransform(double[],int,double[],int,int)",;0.69;0.69
dequeueKeyEvents,2,0.828735351,"Called by the AWT to notify the KeyboardFocusManager that it should cancel delayed dispatching of KeyEvents. All KeyEvents which were enqueued because of a call to enqueueKeyEvents with the same timestamp and Component should be released for normal dispatching to the current focus owner. If the given timestamp is less than zero, the outstanding enqueue request for the given Component with the oldest timestamp (if any) should be cancelled.",";java.awt.DefaultKeyboardFocusManager.dequeueKeyEvents(long,Component);java.awt.KeyboardFocusManager.dequeueKeyEvents(long,Component)",;0.82;0.83
deregisterAll,2,0.5,Deregisters all currently registered service providers from all categories.,;javax.imageio.spi.ServiceRegistry.deregisterAll(Class&lt;?&gt;);javax.imageio.spi.ServiceRegistry.deregisterAll(),;0.50;0.50
deregisterServiceProvider,2,0.53869954,"Removes a service provider object from the given category. If the provider was not previously registered, nothing happens and false is returned. Otherwise, true is returned. If an object of the same class as provider but not equal (using ==) to provider is registered, it will not be deregistered. If provider implements the RegisterableService interface, its onDeregistration method will be called.",";javax.imageio.spi.ServiceRegistry.deregisterServiceProvider(T,Class&lt;T&gt;);javax.imageio.spi.ServiceRegistry.deregisterServiceProvider(Object)",;0.54;0.50
derive,2,0.779999093,"Returns a similar AlphaComposite object that uses the specified alpha value. If this object already has the specified alpha value, this object is returned.",;java.awt.AlphaComposite.derive(int);java.awt.AlphaComposite.derive(float),;0.78;0.78
descendingKeySet,2,0.834370152,Description copied from interface:ConcurrentNavigableMap,;java.util.TreeMap.descendingKeySet();java.util.concurrent.ConcurrentSkipListMap.descendingKeySet(),;0.83;0.83
descendingMap,2,0.834370152,Description copied from interface:ConcurrentNavigableMap,;java.util.TreeMap.descendingMap();java.util.concurrent.ConcurrentSkipListMap.descendingMap(),;0.83;0.83
descendingSet,2,0.5,"Returns a reverse order view of the elements contained in this set. The descending set is backed by this set, so changes to the set are reflected in the descending set, and vice-versa. The returned set has an ordering equivalent to Collections.reverseOrder(comparator()). The expression s.descendingSet().descendingSet() returns a view of s essentially equivalent to s.",;java.util.TreeSet.descendingSet();java.util.concurrent.ConcurrentSkipListSet.descendingSet(),;0.50;0.50
destroySubcontext,2,1,Description copied from interface:Context,;javax.naming.InitialContext.destroySubcontext(String);javax.naming.InitialContext.destroySubcontext(Name),;1.00;1.00
die,2,0.5,"Sends die to each subedit, in the reverse of the order that they were added.",;javax.swing.undo.AbstractUndoableEdit.die();javax.swing.undo.CompoundEdit.die(),;0.50;0.50
directory,2,0.960688701,"Sets this process builder's working directory. Subprocesses subsequently started by this object's start() method will use this as their working directory. The argument may be null -- this means to use the working directory of the current Java process, usually the directory named by the system property user.dir, as the working directory of the child process.",;java.lang.ProcessBuilder.directory();java.lang.ProcessBuilder.directory(File),;0.96;0.96
disableEvents,2,0.747913587,Disables event delivery to this menu item for events defined by the specified event mask parameter.,;java.awt.Component.disableEvents(long);java.awt.MenuItem.disableEvents(long),;0.75;0.75
discardKeyEvents,2,0.686654502,Called by the AWT to notify the KeyboardFocusManager that it should cancel delayed dispatching of KeyEvents. All KeyEvents which were enqueued because of one or more calls to enqueueKeyEvents with the same Component should be discarded.,;java.awt.DefaultKeyboardFocusManager.discardKeyEvents(Component);java.awt.KeyboardFocusManager.discardKeyEvents(Component),;0.67;0.69
dispatchKeyEvent,2,0.615867242,"Called by dispatchEvent if no other KeyEventDispatcher in the dispatcher chain dispatched the KeyEvent, or if no other KeyEventDispatchers are registered. If the event has not been consumed, its target is enabled, and the focus owner is not null, this method dispatches the event to its target. This method will also subsequently dispatch the event to all registered KeyEventPostProcessors. After all this operations are finished, the event is passed to peers for processing. In all cases, this method returns true, since DefaultKeyboardFocusManager is designed so that neither dispatchEvent, nor the AWT event dispatcher, should take further action on the event in any situation.",;java.awt.DefaultKeyboardFocusManager.dispatchKeyEvent(KeyEvent);java.awt.KeyboardFocusManager.dispatchKeyEvent(KeyEvent),;0.62;0.59
displayName,2,0.967684787,Returns this charset's human-readable name for the given locale. The default implementation of this method simply returns this charset's canonical name. Concrete subclasses of this class may override this method in order to provide a localized display name.,;java.nio.charset.Charset.displayName();java.nio.charset.Charset.displayName(Locale),;0.97;0.97
divideToIntegralValue,2,0.648285163,"Returns a BigDecimal whose value is the integer part of (this / divisor). Since the integer part of the exact quotient does not depend on the rounding mode, the rounding mode does not affect the values returned by this method. The preferred scale of the result is (this.scale() - divisor.scale()). An ArithmeticException is thrown if the integer part of the exact quotient needs more than mc.precision digits.",";java.math.BigDecimal.divideToIntegralValue(BigDecimal);java.math.BigDecimal.divideToIntegralValue(BigDecimal,MathContext)",;0.58;0.65
divideUnsigned,2,1,"Returns the unsigned quotient of dividing the first argument by the second where each argument and the result is interpreted as an unsigned value. Note that in two's complement arithmetic, the three other basic arithmetic operations of add, subtract, and multiply are bit-wise identical if the two operands are regarded as both being signed or both being unsigned. Therefore separate addUnsigned, etc. methods are not provided.",";java.lang.Integer.divideUnsigned(int,int);java.lang.Long.divideUnsigned(long,long)",;1.00;1.00
doAs,2,0.976723018,"Perform work as a particular Subject. This method first retrieves the current Thread's AccessControlContext via AccessController.getContext, and then instantiates a new AccessControlContext using the retrieved context along with a new SubjectDomainCombiner (constructed using the provided Subject). Finally, this method invokes AccessController.doPrivileged, passing it the provided PrivilegedExceptionAction, as well as the newly constructed AccessControlContext.",";javax.security.auth.Subject.doAs(Subject,PrivilegedAction&lt;T&gt;);javax.security.auth.Subject.doAs(Subject,PrivilegedExceptionAction&lt;T&gt;)",;0.98;0.98
doAsPrivileged,2,1,"Perform privileged work as a particular Subject. This method behaves exactly as Subject.doAs, except that instead of retrieving the current Thread's AccessControlContext, it uses the provided AccessControlContext. If the provided AccessControlContext is null, this method instantiates a new AccessControlContext with an empty collection of ProtectionDomains.",";javax.security.auth.Subject.doAsPrivileged(Subject,PrivilegedAction&lt;T&gt;,AccessControlContext);javax.security.auth.Subject.doAsPrivileged(Subject,PrivilegedExceptionAction&lt;T&gt;,AccessControlContext)",;1.00;1.00
doLookup,2,0.557688931,"A static method to retrieve the named object. This is a shortcut method equivalent to invoking: InitialContext ic = new InitialContext(); Object obj = ic.lookup(); If name is empty, returns a new instance of this context (which represents the same naming context as this context, but its environment may be modified independently and it may be accessed concurrently).",;javax.naming.InitialContext.doLookup(Name);javax.naming.InitialContext.doLookup(String),;0.56;0.51
done,2,0.749750159,Executed on the Event Dispatch Thread after the doInBackground method is finished. The default implementation does nothing. Subclasses may override this method to perform completion actions on the Event Dispatch Thread. Note that you can query status inside the implementation of this method to determine the result of this task or whether this task has been cancelled.,;java.util.concurrent.FutureTask.done();javax.swing.SwingWorker.done(),;0.75;0.75
doubleStream,2,0.647854189,"Creates a new sequential or parallel DoubleStream from a Supplier of Spliterator.OfDouble. The Supplier.get() method will be invoked on the supplier no more than once, and only after the terminal operation of the stream pipeline commences. For spliterators that report a characteristic of IMMUTABLE or CONCURRENT, or that are late-binding, it is likely more efficient to use doubleStream(java.util.Spliterator.OfDouble, boolean) instead. The use of a Supplier in this form provides a level of indirection that reduces the scope of potential interference with the source. Since the supplier is only invoked after the terminal operation commences, any modifications to the source up to the start of the terminal operation are reflected in the stream result. See Non-Interference for more details.",";java.util.stream.StreamSupport.doubleStream(Spliterator.OfDouble,boolean);java.util.stream.StreamSupport.doubleStream(Supplier&lt;?,int,boolean)",;0.63;0.65
dragDividerTo,2,0.5,Messaged during a dragging session to move the divider to the passed in location. If continuousLayout is true the location is reset and the splitPane validated.,;javax.swing.plaf.basic.BasicSplitPaneDivider.dragDividerTo(int);javax.swing.plaf.basic.BasicSplitPaneUI.dragDividerTo(int),;0.50;0.50
dragDropEnd,2,0.5,"Calls dragDropEnd on the DragSourceListeners registered with this DragSourceContext and with the associated DragSource, and passes them the specified DragSourceDropEvent.",;java.awt.dnd.DragSourceAdapter.dragDropEnd(DragSourceDropEvent);java.awt.dnd.DragSourceContext.dragDropEnd(DragSourceDropEvent),;0.50;0.50
dragMouseMoved,2,0.5,"Calls dragMouseMoved on the DragSourceMotionListeners registered with the DragSource associated with this DragSourceContext, and them passes the specified DragSourceDragEvent.",;java.awt.dnd.DragSourceAdapter.dragMouseMoved(DragSourceDragEvent);java.awt.dnd.DragSourceContext.dragMouseMoved(DragSourceDragEvent),;0.50;0.50
drawArc,2,0.5,"Draws the outline of a circular or elliptical arc covering the specified rectangle. The resulting arc begins at startAngle and extends for arcAngle degrees, using the current color. Angles are interpreted such that 0degrees is at the 3o'clock position. A positive value indicates a counter-clockwise rotation while a negative value indicates a clockwise rotation. The center of the arc is the center of the rectangle whose origin is (x,y) and whose size is specified by the width and height arguments. The resulting arc covers an area width+1 pixels wide by height+1 pixels tall. The angles are specified relative to the non-square extents of the bounding rectangle such that 45 degrees always falls on the line from the center of the ellipse to the upper right corner of the bounding rectangle. As a result, if the bounding rectangle is noticeably longer in one axis than the other, the angles to the start and end of the arc segment will be skewed farther along the longer axis of the bounds.",";java.awt.Graphics.drawArc(int,int,int,int,int,int);javax.swing.DebugGraphics.drawArc(int,int,int,int,int,int)",;0.50;0.00
drawBytes,2,0.5,"Draws the text given by the specified byte array, using this graphics context's current font and color. The baseline of the first character is at position (x,y) in this graphics context's coordinate system. Use of this method is not recommended as each byte is interpreted as a Unicode code point in the range 0 to 255, and so can only be used to draw Latin characters in that range.",";java.awt.Graphics.drawBytes(byte[],int,int,int,int);javax.swing.DebugGraphics.drawBytes(byte[],int,int,int,int)",;0.50;0.00
drawChars,2,0.5,"Draws the text given by the specified character array, using this graphics context's current font and color. The baseline of the first character is at position (x,y) in this graphics context's coordinate system.",";java.awt.Graphics.drawChars(char[],int,int,int,int);javax.swing.DebugGraphics.drawChars(char[],int,int,int,int)",;0.50;0.00
drawOval,2,0.5,"Draws the outline of an oval. The result is a circle or ellipse that fits within the rectangle specified by the x, y, width, and height arguments. The oval covers an area that is width+1 pixels wide and height+1 pixels tall.",";java.awt.Graphics.drawOval(int,int,int,int);javax.swing.DebugGraphics.drawOval(int,int,int,int)",;0.50;0.00
drawPolyline,2,0.5,"Draws a sequence of connected lines defined by arrays of x and y coordinates. Each pair of (x,y) coordinates defines a point. The figure is not closed if the first point differs from the last point.",";java.awt.Graphics.drawPolyline(int[],int[],int);javax.swing.DebugGraphics.drawPolyline(int[],int[],int)",;0.50;0.00
drawRect,2,0.5,Draws the outline of the specified rectangle. The left and right edges of the rectangle are at x and x+width. The top and bottom edges are at y and y+height. The rectangle is drawn using the graphics context's current color.,";java.awt.Graphics.drawRect(int,int,int,int);javax.swing.DebugGraphics.drawRect(int,int,int,int)",;0.50;0.00
drawRoundRect,2,0.5,"Draws an outlined round-cornered rectangle using this graphics context's current color. The left and right edges of the rectangle are at x and x+width, respectively. The top and bottom edges of the rectangle are at y and y+height.",";java.awt.Graphics.drawRoundRect(int,int,int,int,int,int);javax.swing.DebugGraphics.drawRoundRect(int,int,int,int,int,int)",;0.50;0.00
drop,2,0.5,"Drop membership. If the membership key represents a membership to receive all datagrams then the membership is dropped and the channel will no longer receive any datagrams sent to the group. If the membership key is source-specific then the channel will no longer receive datagrams sent to the group from that source address. After membership is dropped it may still be possible to receive datagrams sent to the group. This can arise when datagrams are waiting to be received in the socket's receive buffer. After membership is dropped then the channel may join the group again in which case a new membership key is returned. Upon return, this membership object will be invalid. If the multicast group membership is already invalid then invoking this method has no effect. Once a multicast group membership is invalid, it remains invalid forever.",;java.awt.dnd.DropTarget.drop(DropTargetDropEvent);java.nio.channels.MembershipKey.drop(),;0.50;0.50
dropArguments,2,0.856065762,"Produces a method handle which will discard some dummy arguments before calling some other specified target method handle. The type of the new method handle will be the same as the target's type, except it will also include the dummy argument types, at some given position. The pos argument may range between zero and N, where N is the arity of the target. If pos is zero, the dummy arguments will precede the target's real arguments; if pos is N they will come after. Example:import static java.lang.invoke.MethodHandles.*;import static java.lang.invoke.MethodType.*;...MethodHandle cat = lookup().findVirtual(String.class, ""concat"", methodType(String.class, String.class));assertEquals(""xy"", (String) cat.invokeExact(""x"", ""y""));MethodHandle d0 = dropArguments(cat, 0, String.class);assertEquals(""yz"", (String) d0.invokeExact(""x"", ""y"", ""z""));MethodHandle d1 = dropArguments(cat, 1, String.class);assertEquals(""xz"", (String) d1.invokeExact(""x"", ""y"", ""z""));MethodHandle d2 = dropArguments(cat, 2, String.class);assertEquals(""xy"", (String) d2.invokeExact(""x"", ""y"", ""z""));MethodHandle d12 = dropArguments(cat, 1, int.class, boolean.class);assertEquals(""xz"", (String) d12.invokeExact(""x"", 12, true, ""z"")); This method is also equivalent to the following code: dropArguments (target, pos, Arrays.asList(valueTypes))",";java.lang.invoke.MethodHandles.dropArguments(MethodHandle,int,List&lt;Class&lt;?&gt;&gt;);java.lang.invoke.MethodHandles.dropArguments(MethodHandle,int,Class&lt;?&gt;...)",;0.85;0.86
dropComplete,2,0.5,This method notifies the DragSource that the drop transfer(s) are completed.,;java.awt.dnd.DropTargetContext.dropComplete(boolean);java.awt.dnd.DropTargetDropEvent.dropComplete(boolean),;0.50;0.50
echoCharIsSet,2,0.574629226,"Indicates whether or not this text field has a character set for echoing. An echo character is useful for text fields where user input should not be echoed to the screen, as in the case of a text field for entering a password.",;java.awt.TextField.echoCharIsSet();javax.swing.JPasswordField.echoCharIsSet(),;0.57;0.56
editCellAt,2,0.757379543,"Programmatically starts editing the cell at row and column, if those indices are in the valid range, and the cell at those indices is editable. To prevent the JTable from editing a particular table, column or cell value, return false from the isCellEditable method in the TableModel interface.",";javax.swing.JTable.editCellAt(int,int);javax.swing.JTable.editCellAt(int,int,EventObject)",;0.75;0.76
elementAt,2,0.587182925,"Returns the component at the specified index. Throws an ArrayIndexOutOfBoundsException if the index is negative or not less than the size of the list. Note: Although this method is not deprecated, the preferred method to use is get(int), which implements the List interface defined in the 1.2 Collections framework.",;java.util.Vector.elementAt(int);javax.swing.DefaultListModel.elementAt(int),;0.56;0.59
enableEvents,2,0.816725785,Enables the events defined by the specified event mask parameter to be delivered to this component. Event types are automatically enabled when a listener for that event type is added to the component. This method only needs to be invoked by subclasses of Component which desire to have the specified event types delivered to processEvent regardless of whether or not a listener is registered.,;java.awt.Component.enableEvents(long);java.awt.MenuItem.enableEvents(long),;0.82;0.82
enableInputMethods,2,0.847509339,"Enables or disables input method support for this text component. If input method support is enabled and the text component also processes key events, incoming events are offered to the current input method and will only be processed by the component or dispatched to its listeners if the input method does not consume them. Whether and how input method support for this text component is enabled or disabled by default is implementation dependent.",;java.awt.Component.enableInputMethods(boolean);java.awt.TextComponent.enableInputMethods(boolean),;0.84;0.85
endTag,2,0.5,Handle an end tag. The end tag is popped from the tag stack.,;javax.swing.text.html.HTMLWriter.endTag(Element);javax.swing.text.html.parser.Parser.endTag(boolean),;0.50;0.50
engineCreateSSLEngine,2,0.763526963,"Creates a new SSLEngine using this context. Applications using this factory method are providing no hints for an internal session reuse strategy. If hints are desired, engineCreateSSLEngine(String, int) should be used instead. Some cipher suites (such as Kerberos) require remote hostname information, in which case this factory method should not be used.",";javax.net.ssl.SSLContextSpi.engineCreateSSLEngine();javax.net.ssl.SSLContextSpi.engineCreateSSLEngine(String,int)",;0.76;0.75
engineDigest,2,0.80398591,"Completes the hash computation by performing final operations such as padding. Once engineDigest has been called, the engine should be reset (see engineReset). Resetting is the responsibility of the engine implementor. This method should be abstract, but we leave it concrete for binary compatibility. Knowledgeable providers should override this method.",";java.security.MessageDigestSpi.engineDigest();java.security.MessageDigestSpi.engineDigest(byte[],int,int)",;0.77;0.80
engineGenExemptionBlob,2,0.540718026,"Generates the exemption mechanism key blob, and stores the result in the output buffer, starting at outputOffset inclusive. If the output buffer is too small to hold the result, a ShortBufferException is thrown. In this case, repeat this call with a larger output buffer. Use engineGetOutputSize to determine how big the output buffer should be.",";javax.crypto.ExemptionMechanismSpi.engineGenExemptionBlob();javax.crypto.ExemptionMechanismSpi.engineGenExemptionBlob(byte[],int)",;0.50;0.54
engineGetEncoded,2,0.730490152,"Returns the parameters encoded in the specified format. If format is null, the primary encoding format for parameters is used. The primary encoding format is ASN.1, if an ASN.1 specification for these parameters exists.",;java.security.AlgorithmParametersSpi.engineGetEncoded();java.security.AlgorithmParametersSpi.engineGetEncoded(String),;0.73;0.73
engineGetKeySpec,2,0.599117441,"Returns a specification (key material) of the given key object. keySpec identifies the specification class in which the key material should be returned. It could, for example, be DSAPublicKeySpec.class, to indicate that the key material should be returned in an instance of the DSAPublicKeySpec class.",";java.security.KeyFactorySpi.engineGetKeySpec(Key,Class&lt;T&gt;);javax.crypto.SecretKeyFactorySpi.engineGetKeySpec(SecretKey,Class&lt;?&gt;)",;0.60;0.54
engineGetOutputSize,2,0.796209929,"Returns the length in bytes that an output buffer would need to be in order to hold the result of the next update or doFinal operation, given the input length inputLen (in bytes). This call takes into account any unprocessed (buffered) data from a previous update call, padding, and AEAD tagging. The actual output length of the next update or doFinal call may be smaller than the length returned by this method.",;javax.crypto.CipherSpi.engineGetOutputSize(int);javax.crypto.ExemptionMechanismSpi.engineGetOutputSize(int),;0.80;0.78
engineGetParameters,2,0.565040001,"This method is overridden by providers to return the parameters used with this signature engine. If this signature engine has been previously initialized with parameters (by calling the engineSetParameter method), this method returns the same parameters. If this signature engine has not been initialized with parameters, this method may return a combination of default and randomly generated parameter values if the underlying signature implementation supports it and can successfully generate them. Otherwise, null is returned.",;java.security.SignatureSpi.engineGetParameters();javax.crypto.CipherSpi.engineGetParameters(),;0.57;0.56
engineGetPermissions,2,0.957203097,Return a PermissionCollection object containing the set of permissions granted to the specified ProtectionDomain. The default implementation of this method returns Policy.UNSUPPORTED_EMPTY_COLLECTION object. This method can be overridden if the policy implementation can return a set of permissions granted to a ProtectionDomain.,;java.security.PolicySpi.engineGetPermissions(CodeSource);java.security.PolicySpi.engineGetPermissions(ProtectionDomain),;0.96;0.96
engineGetRevocationChecker,2,0.985245392,"Returns a CertPathChecker that this implementation uses to check the revocation status of certificates. A PKIX implementation returns objects of type PKIXRevocationChecker. The primary purpose of this method is to allow callers to specify additional input parameters and options specific to revocation checking. See the class description of CertPathValidator for an example. This method was added to version 1.8 of the Java Platform Standard Edition. In order to maintain backwards compatibility with existing service providers, this method cannot be abstract and by default throws an UnsupportedOperationException.",;java.security.cert.CertPathBuilderSpi.engineGetRevocationChecker();java.security.cert.CertPathValidatorSpi.engineGetRevocationChecker(),;0.99;0.99
engineInitSign,2,0.630098685,"Initializes this signature object with the specified private key and source of randomness for signing operations. This concrete method has been added to this previously-defined abstract class. (For backwards compatibility, it cannot be abstract.)",";java.security.SignatureSpi.engineInitSign(PrivateKey);java.security.SignatureSpi.engineInitSign(PrivateKey,SecureRandom)",;0.56;0.63
engineLoad,2,0.5,"Loads the keystore using the given KeyStore.LoadStoreParameter. Note that if this KeyStore has already been loaded, it is reinitialized and loaded again from the given parameter.",";java.security.KeyStoreSpi.engineLoad(InputStream,char[]);java.security.KeyStoreSpi.engineLoad(KeyStore.LoadStoreParameter)",;0.50;0.50
engineRefresh,2,0.73447607,"Refresh and reload the Configuration. This method causes this Configuration object to refresh/reload its contents in an implementation-dependent manner. For example, if this Configuration object stores its entries in a file, calling refresh may cause the file to be re-read. The default implementation of this method does nothing. This method should be overridden if a refresh operation is supported by the implementation.",;java.security.PolicySpi.engineRefresh();javax.security.auth.login.ConfigurationSpi.engineRefresh(),;0.73;0.73
engineReset,2,0.5,"Resets the MAC for further use, maintaining the secret key that the MAC was initialized with.",;java.security.MessageDigestSpi.engineReset();javax.crypto.MacSpi.engineReset(),;0.50;0.50
engineSetKeyEntry,2,0.900764326,"Assigns the given key (that has already been protected) to the given alias. If the protected key is of type java.security.PrivateKey, it must be accompanied by a certificate chain certifying the corresponding public key. If the given alias already exists, the keystore information associated with it is overridden by the given key (and possibly certificate chain).",";java.security.KeyStoreSpi.engineSetKeyEntry(String,Key,char[],Certificate[]);java.security.KeyStoreSpi.engineSetKeyEntry(String,byte[],Certificate[])",;0.90;0.90
engineSetParameter,2,0.5,This method is overridden by providers to initialize this signature engine with the specified parameter set.,";java.security.SignatureSpi.engineSetParameter(String,Object);java.security.SignatureSpi.engineSetParameter(AlgorithmParameterSpec)",;0.50;0.50
engineSign,2,0.56430833,"Finishes this signature operation and stores the resulting signature bytes in the provided buffer outbuf, starting at offset. The format of the signature depends on the underlying signature scheme. The signature implementation is reset to its initial state (the state it was in after a call to one of the engineInitSign methods) and can be reused to generate further signatures with the same private key. This method should be abstract, but we leave it concrete for binary compatibility. Knowledgeable providers should override this method.",";java.security.SignatureSpi.engineSign();java.security.SignatureSpi.engineSign(byte[],int,int)",;0.52;0.56
engineStore,2,0.5,Stores this keystore using the given KeyStore.LoadStoreParmeter.,";java.security.KeyStoreSpi.engineStore(OutputStream,char[]);java.security.KeyStoreSpi.engineStore(KeyStore.LoadStoreParameter)",;0.50;0.50
engineTranslateKey,2,0.944483778,"Translates a key object, whose provider may be unknown or potentially untrusted, into a corresponding key object of this key factory.",;java.security.KeyFactorySpi.engineTranslateKey(Key);javax.crypto.SecretKeyFactorySpi.engineTranslateKey(SecretKey),;0.94;0.94
engineUpdateAAD,2,0.822044957,"Continues a multi-part update of the Additional Authentication Data (AAD). Calls to this method provide AAD to the cipher when operating in modes such as AEAD (GCM/CCM). If this cipher is operating in either GCM or CCM mode, all AAD must be supplied before beginning operations on the ciphertext (via the update and doFinal methods). All src.remaining() bytes starting at src.position() are processed. Upon return, the input buffer's position will be equal to its limit; its limit will not have changed.",";javax.crypto.CipherSpi.engineUpdateAAD(byte[],int,int);javax.crypto.CipherSpi.engineUpdateAAD(ByteBuffer)",;0.81;0.82
engineVerify,2,0.577075325,"Verifies the passed-in signature in the specified array of bytes, starting at the specified offset. Note: Subclasses should overwrite the default implementation.",";java.security.SignatureSpi.engineVerify(byte[]);java.security.SignatureSpi.engineVerify(byte[],int,int)",;0.51;0.58
enqueueKeyEvents,2,0.686540688,"Called by the AWT to notify the KeyboardFocusManager that it should delay dispatching of KeyEvents until the specified Component becomes the focus owner. If client code requests a focus change, and the AWT determines that this request might be granted by the native windowing system, then the AWT will call this method. It is the responsibility of the KeyboardFocusManager to delay dispatching of KeyEvents with timestamps later than the specified time stamp until the specified Component receives a FOCUS_GAINED event, or the AWT cancels the delay request by invoking dequeueKeyEvents or discardKeyEvents.",";java.awt.DefaultKeyboardFocusManager.enqueueKeyEvents(long,Component);java.awt.KeyboardFocusManager.enqueueKeyEvents(long,Component)",;0.63;0.69
ensureFileIsVisible,2,0.5,Invokes the ensureFileIsVisible method on each UI handled by this object.,";javax.swing.JFileChooser.ensureFileIsVisible(File);javax.swing.plaf.multi.MultiFileChooserUI.ensureFileIsVisible(JFileChooser,File)",;0.50;0.50
entries,2,0.797301779,Returns an enumeration of the ZIP file entries.,;java.util.jar.JarFile.entries();java.util.zip.ZipFile.entries(),;0.80;0.80
eventDispatched,2,0.5,"Processes AWTEvents for JLayer and all its descendants to this LayerUI instance. To enable the AWTEvents of a particular type, you call JLayer.setLayerEventMask(long) in installUI(javax.swing.JComponent) and set the layer event mask to 0 in uninstallUI(javax.swing.JComponent) after that. By default this method calls the appropriate process&amp;lt;event&amp;nbsp;type&amp;gt;Event method for the given class of event. Note: Events are processed only for displayable JLayers.",";java.awt.event.AWTEventListenerProxy.eventDispatched(AWTEvent);javax.swing.plaf.LayerUI.eventDispatched(AWTEvent,JLayer&lt;?)",;0.50;0.50
exception,2,0.5,Inserts the given exception into this Environment object.,;org.omg.CORBA.Environment.exception();org.omg.CORBA.Environment.exception(Exception),;0.50;0.50
exit,2,0.575140887,"Terminates the currently running Java virtual machine by initiating its shutdown sequence. This method never returns normally. The argument serves as a status code; by convention, a nonzero status code indicates abnormal termination. The virtual machine's shutdown sequence consists of two phases. In the first phase all registered shutdown hooks, if any, are started in some unspecified order and allowed to run concurrently until they finish. In the second phase all uninvoked finalizers are run if finalization-on-exit has been enabled. Once this is done the virtual machine halts. If this method is invoked after the virtual machine has begun its shutdown sequence then if shutdown hooks are being run this method will block indefinitely. If shutdown hooks have already been run and on-exit finalization has been enabled then this method halts the virtual machine with the given status code if the status is nonzero; otherwise, it blocks indefinitely. The System.exit method is the conventional and convenient means of invoking this method.",;java.lang.Runtime.exit(int);java.lang.System.exit(int),;0.58;0.53
exiting,2,0.822810104,"Log a method return, with result object. This is a convenience method that can be used to log returning from a method. A LogRecord with message ""RETURN {0}"", log level FINER, and the gives sourceMethod, sourceClass, and result object is logged.",";java.util.logging.Logger.exiting(String,String);java.util.logging.Logger.exiting(String,String,Object)",;0.82;0.82
exportNode,2,0.5,"Emits on the specified output stream an XML document representing all of the preferences contained in this node (but not its descendants). This XML document is, in effect, an offline backup of the node. The XML document will have the following DOCTYPE declaration: &lt;!DOCTYPE preferences SYSTEM ""http://java.sun.com/dtd/preferences.dtd""&gt; The UTF-8 character encoding will be used. This method is an exception to the general rule that the results of concurrently executing multiple methods in this class yields results equivalent to some serial execution. If the preferences at this node are modified concurrently with an invocation of this method, the exported preferences comprise a ""fuzzy snapshot"" of the preferences contained in the node; some of the concurrent modifications may be reflected in the exported data while others may not.",;java.util.prefs.AbstractPreferences.exportNode(OutputStream);java.util.prefs.Preferences.exportNode(OutputStream),;0.50;0.50
exportSubtree,2,0.5,"Emits an XML document representing all of the preferences contained in this node and all of its descendants. This XML document is, in effect, an offline backup of the subtree rooted at the node. The XML document will have the following DOCTYPE declaration: &lt;!DOCTYPE preferences SYSTEM ""http://java.sun.com/dtd/preferences.dtd""&gt; The UTF-8 character encoding will be used. This method is an exception to the general rule that the results of concurrently executing multiple methods in this class yields results equivalent to some serial execution. If the preferences or nodes in the subtree rooted at this node are modified concurrently with an invocation of this method, the exported preferences comprise a ""fuzzy snapshot"" of the subtree; some of the concurrent modifications may be reflected in the exported data while others may not.",;java.util.prefs.AbstractPreferences.exportSubtree(OutputStream);java.util.prefs.Preferences.exportSubtree(OutputStream),;0.50;0.50
fetchNotifications,2,1,Description copied from interface:RMIConnection,";javax.management.remote.rmi.RMIConnectionImpl.fetchNotifications(long,int,long);javax.management.remote.rmi.RMIConnectionImpl_Stub.fetchNotifications(long,int,long)",;1.00;1.00
fieldsIn,2,0.744461511,Returns a set of fields in elements.,;javax.lang.model.util.ElementFilter.fieldsIn(Iterable&lt;?);javax.lang.model.util.ElementFilter.fieldsIn(Set&lt;?),;0.74;0.74
fillArc,2,0.5,"Fills a circular or elliptical arc covering the specified rectangle. The resulting arc begins at startAngle and extends for arcAngle degrees. Angles are interpreted such that 0degrees is at the 3o'clock position. A positive value indicates a counter-clockwise rotation while a negative value indicates a clockwise rotation. The center of the arc is the center of the rectangle whose origin is (x,y) and whose size is specified by the width and height arguments. The resulting arc covers an area width+1 pixels wide by height+1 pixels tall. The angles are specified relative to the non-square extents of the bounding rectangle such that 45 degrees always falls on the line from the center of the ellipse to the upper right corner of the bounding rectangle. As a result, if the bounding rectangle is noticeably longer in one axis than the other, the angles to the start and end of the arc segment will be skewed farther along the longer axis of the bounds.",";java.awt.Graphics.fillArc(int,int,int,int,int,int);javax.swing.DebugGraphics.fillArc(int,int,int,int,int,int)",;0.50;0.00
fillOval,2,0.5,Fills an oval bounded by the specified rectangle with the current color.,";java.awt.Graphics.fillOval(int,int,int,int);javax.swing.DebugGraphics.fillOval(int,int,int,int)",;0.50;0.00
fillRect,2,0.5,Fills the specified rectangle. The left and right edges of the rectangle are at x and x+width-1. The top and bottom edges are at y and y+height-1. The resulting rectangle covers an area width pixels wide by height pixels tall. The rectangle is filled using the graphics context's current color.,";java.awt.Graphics.fillRect(int,int,int,int);javax.swing.DebugGraphics.fillRect(int,int,int,int)",;0.50;0.00
fillRoundRect,2,0.5,"Fills the specified rounded corner rectangle with the current color. The left and right edges of the rectangle are at x and x+width-1, respectively. The top and bottom edges of the rectangle are at y and y+height-1.",";java.awt.Graphics.fillRoundRect(int,int,int,int,int,int);javax.swing.DebugGraphics.fillRoundRect(int,int,int,int,int,int)",;0.50;0.00
filterRGB,2,0.5,Subclasses must specify a method to convert a single input pixel in the default RGB ColorModel to a single output pixel.,";java.awt.image.RGBImageFilter.filterRGB(int,int,int);javax.swing.GrayFilter.filterRGB(int,int,int)",;0.50;0.00
filterTags,2,0.753822665,"Returns a list of matching languages tags using the basic filtering mechanism defined in RFC 4647. This is equivalent to filterTags(List, Collection, FilteringMode) when mode is Locale.FilteringMode.AUTOSELECT_FILTERING.",";java.util.Locale.filterTags(List&lt;Locale.LanguageRange&gt;,Collection&lt;String&gt;,Locale.FilteringMode);java.util.Locale.filterTags(List&lt;Locale.LanguageRange&gt;,Collection&lt;String&gt;)",;0.71;0.75
findComponentAt,2,0.985750172,"Locates the visible child component that contains the specified point. The top-most child component is returned in the case where there is overlap in the components. If the containing child component is a Container, this method will continue searching for the deepest nested child component. Components which are not visible are ignored during the search. The findComponentAt method is different from getComponentAt in that getComponentAt only searches the Container's immediate children; if the containing component is a Container, findComponentAt will search that child to find a nested component.",";java.awt.Container.findComponentAt(int,int);java.awt.Container.findComponentAt(Point)",;0.99;0.99
findInLine,2,0.538601582,"Attempts to find the next occurrence of the specified pattern ignoring delimiters. If the pattern is found before the next line separator, the scanner advances past the input that matched and returns the string that matched the pattern. If no such pattern is detected in the input up to the next line separator, then null is returned and the scanner's position is unchanged. This method may block waiting for input that matches the pattern. Since this method continues to search through the input looking for the specified pattern, it may buffer all of the input searching for the desired token if no line separators are present.",;java.util.Scanner.findInLine(String);java.util.Scanner.findInLine(Pattern),;0.52;0.54
findResource,2,0.593796012,Finds the resource with the given name. Class loader implementations should override this method to specify where to find resources.,;java.lang.ClassLoader.findResource(String);java.net.URLClassLoader.findResource(String),;0.59;0.59
findResources,2,0.5,Returns an Enumeration of URLs representing all of the resources on the URL search path having the specified name.,;java.lang.ClassLoader.findResources(String);java.net.URLClassLoader.findResources(String),;0.50;0.50
findWithinHorizon,2,0.523185917,"Attempts to find the next occurrence of the specified pattern. This method searches through the input up to the specified search horizon, ignoring delimiters. If the pattern is found the scanner advances past the input that matched and returns the string that matched the pattern. If no such pattern is detected then the null is returned and the scanner's position remains unchanged. This method may block waiting for input that matches the pattern. A scanner will never search more than horizon code points beyond its current position. Note that a match may be clipped by the horizon; that is, an arbitrary match result may have been different if the horizon had been larger. The scanner treats the horizon as a transparent, non-anchoring bound (see Matcher.useTransparentBounds(boolean) and Matcher.useAnchoringBounds(boolean)). If horizon is 0, then the horizon is ignored and this method continues to search through the input looking for the specified pattern without bound. In this case it may buffer all of the input searching for the pattern. If horizon is negative, then an IllegalArgumentException is thrown.",";java.util.Scanner.findWithinHorizon(String,int);java.util.Scanner.findWithinHorizon(Pattern,int)",;0.50;0.52
fine,2,0.698564,"Log a FINE message, which is only to be constructed if the logging level is such that the message will actually be logged. If the logger is currently enabled for the FINE message level then the message is constructed by invoking the provided supplier function and forwarded to all the registered output Handler objects.",;java.util.logging.Logger.fine(String);java.util.logging.Logger.fine(Supplier&lt;String&gt;),;0.66;0.70
finer,2,0.698564,"Log a FINER message, which is only to be constructed if the logging level is such that the message will actually be logged. If the logger is currently enabled for the FINER message level then the message is constructed by invoking the provided supplier function and forwarded to all the registered output Handler objects.",;java.util.logging.Logger.finer(String);java.util.logging.Logger.finer(Supplier&lt;String&gt;),;0.66;0.70
finest,2,0.698564,"Log a FINEST message, which is only to be constructed if the logging level is such that the message will actually be logged. If the logger is currently enabled for the FINEST message level then the message is constructed by invoking the provided supplier function and forwarded to all the registered output Handler objects.",;java.util.logging.Logger.finest(String);java.util.logging.Logger.finest(Supplier&lt;String&gt;),;0.66;0.70
finishDraggingTo,2,0.5,Messaged to finish the dragging session. If not continuous display the dividers location will be reset.,;javax.swing.plaf.basic.BasicSplitPaneDivider.finishDraggingTo(int);javax.swing.plaf.basic.BasicSplitPaneUI.finishDraggingTo(int),;0.50;0.50
finished,2,0.894096486,Returns true if the end of the compressed data stream has been reached.,;java.util.zip.Deflater.finished();java.util.zip.Inflater.finished(),;0.89;0.89
fireChangedUpdate,2,1,Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method.,;javax.swing.text.AbstractDocument.fireChangedUpdate(DocumentEvent);javax.swing.text.html.HTMLDocument.fireChangedUpdate(DocumentEvent),;1.00;1.00
fireServiceAdded,2,0.5,Fires a BeanContextServiceAvailableEvent indicating that a new service has become available.,;java.beans.beancontext.BeanContextServicesSupport.fireServiceAdded(Class);java.beans.beancontext.BeanContextServicesSupport.fireServiceAdded(BeanContextServiceAvailableEvent),;0.50;0.50
fireServiceRevoked,2,0.5,Fires a BeanContextServiceRevokedEvent indicating that a particular service is no longer available.,";java.beans.beancontext.BeanContextServicesSupport.fireServiceRevoked(BeanContextServiceRevokedEvent);java.beans.beancontext.BeanContextServicesSupport.fireServiceRevoked(Class,boolean)",;0.50;0.50
fireUndoableEditUpdate,2,1,Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the parameters passed into the fire method.,;javax.swing.text.AbstractDocument.fireUndoableEditUpdate(UndoableEditEvent);javax.swing.text.html.HTMLDocument.fireUndoableEditUpdate(UndoableEditEvent),;1.00;1.00
firstElement,2,0.60004004,Returns the first component of this list. Throws a NoSuchElementException if this vector has no components.,;java.util.Vector.firstElement();javax.swing.DefaultListModel.firstElement(),;0.60;0.60
firstEntry,2,0.5,"Returns a key-value mapping associated with the least key in this map, or null if the map is empty. The returned entry does not support the Entry.setValue method.",;java.util.TreeMap.firstEntry();java.util.concurrent.ConcurrentSkipListMap.firstEntry(),;0.50;0.50
firstKey,2,1,Description copied from interface:SortedMap,;java.util.TreeMap.firstKey();java.util.concurrent.ConcurrentSkipListMap.firstKey(),;1.00;1.00
floor,2,1,Description copied from interface:NavigableSet,;java.util.TreeSet.floor(E);java.util.concurrent.ConcurrentSkipListSet.floor(E),;1.00;1.00
floorEntry,2,0.5,"Returns a key-value mapping associated with the greatest key less than or equal to the given key, or null if there is no such key. The returned entry does not support the Entry.setValue method.",;java.util.TreeMap.floorEntry(K);java.util.concurrent.ConcurrentSkipListMap.floorEntry(K),;0.50;0.50
floorKey,2,1,Description copied from interface:NavigableMap,;java.util.TreeMap.floorKey(K);java.util.concurrent.ConcurrentSkipListMap.floorKey(K),;1.00;1.00
forEachEntry,2,0.726920394,Performs the given action for each non-null transformation of each entry.,";java.util.concurrent.ConcurrentHashMap.forEachEntry(long,Consumer&lt;?,V&gt;&gt;);java.util.concurrent.ConcurrentHashMap.forEachEntry(long,Function&lt;Map.Entry&lt;K,V&gt;,?,Consumer&lt;?)",;0.72;0.73
forEachKey,2,0.726920394,Performs the given action for each non-null transformation of each key.,";java.util.concurrent.ConcurrentHashMap.forEachKey(long,Consumer&lt;?);java.util.concurrent.ConcurrentHashMap.forEachKey(long,Function&lt;?,?,Consumer&lt;?)",;0.72;0.73
forEachValue,2,0.726920394,Performs the given action for each non-null transformation of each value.,";java.util.concurrent.ConcurrentHashMap.forEachValue(long,Consumer&lt;?);java.util.concurrent.ConcurrentHashMap.forEachValue(long,Function&lt;?,?,Consumer&lt;?)",;0.72;0.73
fromCIEXYZ,2,0.582106962,"Transforms a color value assumed to be in the CS_CIEXYZ conversion color space into this ColorSpace. This method transforms color values using relative colorimetry, as defined by the ICC Specification. This means that the XYZ argument values taken by this method are represented relative to the D50 white point of the CS_CIEXYZ color space. This representation is useful in a two-step color conversion process in which colors are transformed from an input color space to CS_CIEXYZ and then to an output color space. The color values returned by this method are not those that would produce the XYZ value passed to the method when measured by a colorimeter. If you have XYZ values corresponding to measurements made using current CIE recommended practices, they must be converted to D50 relative values before being passed to this method. The paragraphs below explain this in more detail. The ICC standard uses a device independent color space (DICS) as the mechanism for converting color from one device to another device. In this architecture, colors are converted from the source device's color space to the ICC DICS and then from the ICC DICS to the destination device's color space. The ICC standard defines device profiles which contain transforms which will convert between a device's color space and the ICC DICS. The overall conversion of colors from a source device to colors of a destination device is done by connecting the device-to-DICS transform of the profile for the source device to the DICS-to-device transform of the profile for the destination device. For this reason, the ICC DICS is commonly referred to as the profile connection space (PCS). The color space used in the methods toCIEXYZ and fromCIEXYZ is the CIEXYZ PCS defined by the ICC Specification. This is also the color space represented by ColorSpace.CS_CIEXYZ. The XYZ values of a color are often represented as relative to some white point, so the actual meaning of the XYZ values cannot be known without knowing the white point of those values. This is known as relative colorimetry. The PCS uses a white point of D50, so the XYZ values of the PCS are relative to D50. For example, white in the PCS will have the XYZ values of D50, which is defined to be X=.9642, Y=1.000, and Z=0.8249. This white point is commonly used for graphic arts applications, but others are often used in other applications. To quantify the color characteristics of a device such as a printer or monitor, measurements of XYZ values for particular device colors are typically made. For purposes of this discussion, the term device XYZ values is used to mean the XYZ values that would be measured from device colors using current CIE recommended practices. Converting between device XYZ values and the PCS XYZ values taken as arguments by this method corresponds to converting between the device's color space, as represented by CIE colorimetric values, and the PCS. There are many factors involved in this process, some of which are quite subtle. The most important, however, is the adjustment made to account for differences between the device's white point and the white point of the PCS. There are many techniques for doing this and it is the subject of much current research and controversy. Some commonly used methods are XYZ scaling, the von Kries transform, and the Bradford transform. The proper method to use depends upon each particular application. The simplest method is XYZ scaling. In this method each device XYZ value is converted to a PCS XYZ value by multiplying it by the ratio of the PCS white point (D50) to the device white point. Xd, Yd, Zd are the device XYZ values Xdw, Ydw, Zdw are the device XYZ white point values Xp, Yp, Zp are the PCS XYZ values Xd50, Yd50, Zd50 are the PCS XYZ white point values Xp = Xd * (Xd50 / Xdw) Yp = Yd * (Yd50 / Ydw) Zp = Zd * (Zd50 / Zdw) Conversion from the PCS to the device would be done by inverting these equations: Xd = Xp * (Xdw / Xd50) Yd = Yp * (Ydw / Yd50) Zd = Zp * (Zdw / Zd50) Note that the media white point tag in an ICC profile is not the same as the device white point. The media white point tag is expressed in PCS values and is used to represent the difference between the XYZ of device illuminant and the XYZ of the device media when measured under that illuminant. The device white point is expressed as the device XYZ values corresponding to white displayed on the device. For example, displaying the RGB color (1.0, 1.0, 1.0) on an sRGB device will result in a measured device XYZ value of D65. This will not be the same as the media white point tag XYZ value in the ICC profile for an sRGB device.",;java.awt.color.ColorSpace.fromCIEXYZ(float[]);java.awt.color.ICC_ColorSpace.fromCIEXYZ(float[]),;0.51;0.58
fromRGB,2,1,"Transforms a color value assumed to be in the default CS_sRGB color space into this ColorSpace. This method transforms color values using algorithms designed to produce the best perceptual match between input and output colors. In order to do colorimetric conversion of color values, you should use the toCIEXYZ method of the CS_sRGB color space to first convert from the input color space to the CS_CIEXYZ color space, and then use the fromCIEXYZ method of this color space to convert from CS_CIEXYZ to the output color space. See toCIEXYZ and fromCIEXYZ for further information.",;java.awt.color.ColorSpace.fromRGB(float[]);java.awt.color.ICC_ColorSpace.fromRGB(float[]),;1.00;1.00
fromString,2,0.5,Creates a UUID from the string standard representation as described in the toString() method.,;java.nio.file.attribute.PosixFilePermissions.fromString(String);java.util.UUID.fromString(String),;0.50;0.50
gc,2,0.709993247,"Runs the garbage collector. Calling this method suggests that the Java virtual machine expend effort toward recycling unused objects in order to make the memory they currently occupy available for quick reuse. When control returns from the method call, the virtual machine has made its best effort to recycle all discarded objects. The name gc stands for ""garbage collector"". The virtual machine performs this recycling process automatically as needed, in a separate thread, even if the gc method is not invoked explicitly. The method System.gc() is the conventional and convenient means of invoking this method.",;java.lang.Runtime.gc();java.lang.System.gc(),;0.71;0.70
generateKeyPair,2,0.682371672,"Generates a key pair. If this KeyPairGenerator has not been initialized explicitly, provider-specific defaults will be used for the size and other (algorithm-specific) values of the generated keys. This will generate a new key pair every time it is called. This method is functionally equivalent to genKeyPair.",;java.security.KeyPairGenerator.generateKeyPair();java.security.KeyPairGeneratorSpi.generateKeyPair(),;0.68;0.67
genericMethodType,2,0.747873503,"Finds or creates a method type whose components are Object with an optional trailing Object[] array. Convenience method for methodType. All parameters and the return type will be Object, except the final array parameter if any, which will be Object[].",";java.lang.invoke.MethodType.genericMethodType(int,boolean);java.lang.invoke.MethodType.genericMethodType(int)",;0.75;0.72
get_elements,2,0.879917843,Returns the elements of the sequence.,;org.omg.DynamicAny._DynArrayStub.get_elements();org.omg.DynamicAny._DynSequenceStub.get_elements(),;0.88;0.88
get_elements_as_dyn_any,2,0.681412072,Returns the elements of the DynArray as DynAnys.,;org.omg.DynamicAny._DynArrayStub.get_elements_as_dyn_any();org.omg.DynamicAny._DynSequenceStub.get_elements_as_dyn_any(),;0.68;0.68
get_members,2,0.9075052,Returns a sequence of NameValuePairs describing the name and the value of each member in the struct associated with a DynStruct object. The sequence contains members in the same order as the declaration order of members as indicated by the DynStruct's TypeCode. The current position is not affected. The member names in the returned sequence will be empty strings if the DynStruct's TypeCode does not contain member names.,;org.omg.DynamicAny._DynStructStub.get_members();org.omg.DynamicAny._DynValueStub.get_members(),;0.91;0.91
get_members_as_dyn_any,2,0.9075052,Returns a sequence of NameDynAnyPairs describing the name and the value of each member in the struct associated with a DynStruct object. The sequence contains members in the same order as the declaration order of members as indicated by the DynStruct's TypeCode. The current position is not affected. The member names in the returned sequence will be empty strings if the DynStruct's TypeCode does not contain member names.,;org.omg.DynamicAny._DynStructStub.get_members_as_dyn_any();org.omg.DynamicAny._DynValueStub.get_members_as_dyn_any(),;0.91;0.91
getAcceleratorForeground,2,0.620392175,Returns the accelerator foreground color of the current theme. This is a cover method for getCurrentTheme().getAcceleratorForeground().,;javax.swing.plaf.metal.MetalLookAndFeel.getAcceleratorForeground();javax.swing.plaf.metal.MetalTheme.getAcceleratorForeground(),;0.62;0.61
getAcceleratorSelectedForeground,2,0.646414901,Returns the accelerator selected foreground color of the current theme. This is a cover method for getCurrentTheme().getAcceleratorSelectedForeground().,;javax.swing.plaf.metal.MetalLookAndFeel.getAcceleratorSelectedForeground();javax.swing.plaf.metal.MetalTheme.getAcceleratorSelectedForeground(),;0.65;0.64
getAccessibleIndexInParent,2,0.604724607,"Get the index of this object in its accessible parent. Note: as of the Java 2 platform v1.3, it is recommended that developers call Component.AccessibleAWTComponent.getAccessibleIndexInParent() instead of using this method.",;javax.accessibility.AccessibleContext.getAccessibleIndexInParent();javax.swing.SwingUtilities.getAccessibleIndexInParent(Component),;0.55;0.60
getAccessibleStateSet,2,0.5,"Get the state of this object. Note: as of the Java 2 platform v1.3, it is recommended that developers call Component.AccessibleAWTComponent.getAccessibleIndexInParent() instead of using this method.",;javax.accessibility.AccessibleContext.getAccessibleStateSet();javax.swing.SwingUtilities.getAccessibleStateSet(Component),;0.50;0.50
getAccessLevel,2,0.5,This implementation returns null. Subclasses can change this behavior as long as the contract of JavaFileObject is obeyed.,;javax.tools.ForwardingJavaFileObject.getAccessLevel();javax.tools.SimpleJavaFileObject.getAccessLevel(),;0.50;0.50
getACHuffmanTables,2,0.947112777,"Returns a copy of the array of AC Huffman tables set on the most recent call to setEncodeTables, or null if tables are not currently set.",;javax.imageio.plugins.jpeg.JPEGImageReadParam.getACHuffmanTables();javax.imageio.plugins.jpeg.JPEGImageWriteParam.getACHuffmanTables(),;0.95;0.95
getActualMaximum,2,0.569411347,"Returns the maximum value that this calendar field could have, taking into consideration the given time value and the current values of the getFirstDayOfWeek, getMinimalDaysInFirstWeek, getGregorianChange and getTimeZone methods. For example, if the date of this instance is February 1, 2004, the actual maximum value of the DAY_OF_MONTH field is 29 because 2004 is a leap year, and if the date of this instance is February 1, 2005, it's 28. This method calculates the maximum value of WEEK_OF_YEAR based on the YEAR (calendar year) value, not the week year. Call getWeeksInWeekYear() to get the maximum value of WEEK_OF_YEAR in the week year of this GregorianCalendar.",;java.util.Calendar.getActualMaximum(int);java.util.GregorianCalendar.getActualMaximum(int),;0.56;0.57
getActualMinimum,2,0.55876326,"Returns the minimum value that this calendar field could have, taking into consideration the given time value and the current values of the getFirstDayOfWeek, getMinimalDaysInFirstWeek, getGregorianChange and getTimeZone methods. For example, if the Gregorian change date is January 10, 1970 and the date of this GregorianCalendar is January 20, 1970, the actual minimum value of the DAY_OF_MONTH field is 10 because the previous date of January 10, 1970 is December 27, 1996 (in the Julian calendar). Therefore, December 28, 1969 to January 9, 1970 don't exist.",;java.util.Calendar.getActualMinimum(int);java.util.GregorianCalendar.getActualMinimum(int),;0.55;0.56
getAdapter,2,0.834370152,Description copied from interface:Unmarshaller,;javax.xml.bind.helpers.AbstractMarshallerImpl.getAdapter(Class&lt;A&gt;);javax.xml.bind.helpers.AbstractUnmarshallerImpl.getAdapter(Class&lt;A&gt;),;0.83;0.83
getAdler,2,1,Returns the ADLER-32 value of the uncompressed data.,;java.util.zip.Deflater.getAdler();java.util.zip.Inflater.getAdler(),;1.00;1.00
getAllAttributeKeys,2,0.5,Returns the set of HTML attributes recognized.,;javax.swing.text.html.CSS.getAllAttributeKeys();javax.swing.text.html.HTML.getAllAttributeKeys(),;0.50;0.50
getAllMimeHeaders,2,0.90016016,Retrieves all the headers for this SOAPPart object as an iterator over the MimeHeader objects.,;javax.xml.soap.AttachmentPart.getAllMimeHeaders();javax.xml.soap.SOAPPart.getAllMimeHeaders(),;0.90;0.90
getAllRoles,2,1,Returns all roles present in the relation.,;javax.management.relation.RelationService.getAllRoles(String);javax.management.relation.RelationSupport.getAllRoles(),;1.00;1.00
getAnchorSelectionIndex,2,0.5,Returns the anchor selection index. This is a cover method that delegates to the method of the same name on the list's selection model.,;javax.swing.DefaultListSelectionModel.getAnchorSelectionIndex();javax.swing.JList.getAnchorSelectionIndex(),;0.50;0.50
getAnnotatedReceiverType,2,1,"Returns an AnnotatedType object that represents the use of a type to specify the receiver type of the method/constructor represented by this Executable object. The receiver type of a method/constructor is available only if the method/constructor has a receiver parameter (JLS 8.4.1). If this Executable object represents a constructor or instance method that does not have a receiver parameter, or has a receiver parameter with no annotations on its type, then the return value is an AnnotatedType object representing an element with no annotations. If this Executable object represents a static method, then the return value is null.",;java.lang.reflect.Constructor.getAnnotatedReceiverType();java.lang.reflect.Executable.getAnnotatedReceiverType(),;1.00;1.00
getAnnotatedType,2,0.852265379,Returns an AnnotatedType object that represents the use of a type to specify the type of the formal parameter represented by this Parameter.,;java.lang.reflect.Field.getAnnotatedType();java.lang.reflect.Parameter.getAnnotatedType(),;0.85;0.85
getAnonymousLogger,2,1,"Create an anonymous Logger. The newly created Logger is not registered in the LogManager namespace. There will be no access checks on updates to the logger. This factory method is primarily intended for use from applets. Because the resulting Logger is anonymous it can be kept private by the creating class. This removes the need for normal security checks, which in turn allows untrusted applet code to update the control state of the Logger. For example an applet can do a setLevel or an addHandler on an anonymous Logger. Even although the new logger is anonymous, it is configured to have the root logger ("""") as its parent. This means that by default it inherits its effective level and handlers from the root logger. Changing its parent via the setParent method will still require the security permission specified by that method.",;java.util.logging.Logger.getAnonymousLogger();java.util.logging.Logger.getAnonymousLogger(String),;1.00;1.00
getApplicationProtocol,2,1,"Returns the most recent application protocol value negotiated for this connection. If supported by the underlying SSL/TLS/DTLS implementation, application name negotiation mechanisms such as RFC 7301 , the Application-Layer Protocol Negotiation (ALPN), can negotiate application-level values between peers.",;javax.net.ssl.SSLEngine.getApplicationProtocol();javax.net.ssl.SSLSocket.getApplicationProtocol(),;1.00;1.00
getApproveButtonText,2,0.5,Invokes the getApproveButtonText method on each UI handled by this object.,;javax.swing.JFileChooser.getApproveButtonText();javax.swing.plaf.multi.MultiFileChooserUI.getApproveButtonText(JFileChooser),;0.50;0.50
getAttachments,2,0.585491618,Retrieves all the AttachmentPart objects that have header entries that match the specified headers. Note that a returned attachment could have headers in addition to those specified.,;javax.xml.soap.SOAPMessage.getAttachments();javax.xml.soap.SOAPMessage.getAttachments(MimeHeaders),;0.56;0.59
getAttributeCount,2,0.5,Description copied from interface:XMLStreamReader,;javax.swing.text.SimpleAttributeSet.getAttributeCount();javax.xml.stream.util.StreamReaderDelegate.getAttributeCount(),;0.50;0.50
getAttributeID,2,0.5,Retrieves the ID of the attribute that caused the sort to fail. Returns null if no ID was returned by the server.,;javax.naming.ldap.SortKey.getAttributeID();javax.naming.ldap.SortResponseControl.getAttributeID(),;0.50;0.50
getAttributeType,2,0.5,Description copied from interface:XMLStreamReader,;javax.management.AttributeChangeNotification.getAttributeType();javax.xml.stream.util.StreamReaderDelegate.getAttributeType(int),;0.50;0.50
getAttributeValue,2,1,Description copied from interface:XMLStreamReader,";javax.xml.stream.util.StreamReaderDelegate.getAttributeValue(String,String);javax.xml.stream.util.StreamReaderDelegate.getAttributeValue(int)",;1.00;1.00
getAudioClip,2,0.93609138,"Returns the AudioClip object specified by the URL argument. This method always returns immediately, whether or not the audio clip exists. When this applet attempts to play the audio clip, the data will be loaded.",";java.applet.Applet.getAudioClip(URL);java.applet.Applet.getAudioClip(URL,String)",;0.94;0.94
getAuthority,2,0.5,Gets the authority part of this URL.,;java.net.URI.getAuthority();java.net.URL.getAuthority(),;0.50;0.50
getAvailableFontFamilyNames,2,0.94651077,"Returns an array containing the names of all font families in this GraphicsEnvironment localized for the default locale, as returned by Locale.getDefault(). Typical usage would be for presentation to a user for selection of a particular family name. An application can then specify this name when creating a font, in conjunction with a style, such as bold or italic, giving the font system flexibility in choosing its own best match among multiple fonts in the same font family.",;java.awt.GraphicsEnvironment.getAvailableFontFamilyNames();java.awt.GraphicsEnvironment.getAvailableFontFamilyNames(Locale),;0.95;0.95
getAvailableIDs,2,0.5,Gets all the available IDs supported.,;java.util.TimeZone.getAvailableIDs(int);java.util.TimeZone.getAvailableIDs(),;0.50;0.50
getAvailableZoneIds,2,0.563639285,"Gets the set of available zone IDs. This set includes the string form of all available region-based IDs. Offset-based zone IDs are not included in the returned set. The ID can be passed to of(String) to create a ZoneId. The set of zone IDs can increase over time, although in a typical application the set of IDs is fixed. Each call to this method is thread-safe.",;java.time.ZoneId.getAvailableZoneIds();java.time.zone.ZoneRulesProvider.getAvailableZoneIds(),;0.56;0.51
getAWTEventListeners,2,0.903746161,"Returns an array of all the AWTEventListeners registered on this toolkit which listen to all of the event types specified in the eventMask argument. If there is a security manager, its checkPermission method is called with an AWTPermission(""listenToAllAWTEvents"") permission. This may result in a SecurityException. Listeners can be returned within AWTEventListenerProxy objects, which also contain the event mask for the given listener. Note that listener objects added multiple times appear only once in the returned array.",;java.awt.Toolkit.getAWTEventListeners();java.awt.Toolkit.getAWTEventListeners(long),;0.90;0.90
getAWTKeyStroke,2,0.5,"Parses a string and returns an AWTKeyStroke. The string must have the following syntax: &lt;modifiers&gt;* (&lt;typedID&gt; | &lt;pressedReleasedID&gt;) modifiers := shift | control | ctrl | meta | alt | altGraph typedID := typed &lt;typedKey&gt; typedKey := string of length 1 giving Unicode character. pressedReleasedID := (pressed | released) key key := KeyEvent key code name, i.e. the name following ""VK_"". If typed, pressed or released is not specified, pressed is assumed. Here are some examples: ""INSERT"" =&gt; getAWTKeyStroke(KeyEvent.VK_INSERT, 0); ""control DELETE"" =&gt; getAWTKeyStroke(KeyEvent.VK_DELETE, InputEvent.CTRL_MASK); ""alt shift X"" =&gt; getAWTKeyStroke(KeyEvent.VK_X, InputEvent.ALT_MASK | InputEvent.SHIFT_MASK); ""alt shift released X"" =&gt; getAWTKeyStroke(KeyEvent.VK_X, InputEvent.ALT_MASK | InputEvent.SHIFT_MASK, true); ""typed a"" =&gt; getAWTKeyStroke('a');",;java.awt.AWTKeyStroke.getAWTKeyStroke(char);java.awt.AWTKeyStroke.getAWTKeyStroke(String),;0.50;0.50
getAxis,2,0.5,Fetches the tile axis property. This is the axis along which the child views are tiled.,;javax.swing.BoxLayout.getAxis();javax.swing.text.BoxView.getAxis(),;0.50;0.50
getBase,2,0.5,"Returns the location to resolve relative URLs against. By default this will be the document's URL if the document was loaded from a URL. If a base tag is found and can be parsed, it will be used as the base location.",;javax.swing.text.html.HTMLDocument.getBase();javax.swing.text.html.StyleSheet.getBase(),;0.50;0.00
getBaselineOffset,2,1,Returns the amount the baseline is offset by. This is typically the same as getTabLabelShiftY.,;javax.swing.plaf.basic.BasicTabbedPaneUI.getBaselineOffset();javax.swing.plaf.metal.MetalTabbedPaneUI.getBaselineOffset(),;1.00;1.00
getBaselineOffsets,2,0.5,"Returns the offsets array for the baselines used for this TextLayout. The array is indexed by one of the values defined in Font, which are roman, centered and hanging. The values are relative to this TextLayout object's baseline, so that getBaselineOffsets[getBaseline()] == 0. Offsets are added to the position of the TextLayout object's baseline to get the position for the new baseline.",;java.awt.font.LineMetrics.getBaselineOffsets();java.awt.font.TextLayout.getBaselineOffsets(),;0.50;0.50
getBaseType,2,0.5,Retrieves the SQL type of the elements in this SerialArray object. The int returned is one of the constants in the class java.sql.Types.,;javax.activation.MimeType.getBaseType();javax.sql.rowset.serial.SerialArray.getBaseType(),;0.50;0.50
getBaseTypeName,2,0.5,Returns a string describing the base type name of the Ref.,;javax.sql.rowset.serial.SerialArray.getBaseTypeName();javax.sql.rowset.serial.SerialRef.getBaseTypeName(),;0.50;0.50
getBaseURI,2,0.5,Description copied from interface:XMLCryptoContext,;javax.imageio.metadata.IIOMetadataNode.getBaseURI();javax.xml.crypto.dom.DOMCryptoContext.getBaseURI(),;0.50;0.50
getBasicConstraints,2,0.5,"Returns the basic constraints constraint. If the value is greater than or equal to zero, the X509Certificates must include a basicConstraints extension with a pathLen of at least this value. If the value is -2, only end-entity certificates are accepted. If the value is -1, no basicConstraints check is done.",;java.security.cert.X509Certificate.getBasicConstraints();java.security.cert.X509CertSelector.getBasicConstraints(),;0.50;0.50
getBeanContext,2,0.5,Gets the BeanContext associated with this event.,;java.beans.beancontext.BeanContextChildSupport.getBeanContext();java.beans.beancontext.BeanContextEvent.getBeanContext(),;0.50;0.50
getBestConfiguration,2,1,Returns the "best" configuration possible that passes the criteria defined in the GraphicsConfigTemplate.,;java.awt.GraphicsConfigTemplate.getBestConfiguration(GraphicsConfiguration[]);java.awt.GraphicsDevice.getBestConfiguration(GraphicsConfigTemplate),;1.00;1.00
getBinaryStream,2,0.5,"Returns an InputStream object that contains a partial Blob value, starting with the byte specified by pos, which is length bytes in length.",";javax.sql.rowset.serial.SerialBlob.getBinaryStream();javax.sql.rowset.serial.SerialBlob.getBinaryStream(long,long)",;0.50;0.50
getBitOffset,2,0.5,Description copied from interface:ImageInputStream,;java.awt.image.MultiPixelPackedSampleModel.getBitOffset(int);javax.imageio.stream.ImageInputStreamImpl.getBitOffset(),;0.50;0.50
getBody,2,0.5,Returns the response body as an InputStream.,;java.net.CacheRequest.getBody();java.net.CacheResponse.getBody(),;0.50;0.50
getBorderSelectionColor,2,1,Returns the color the border is drawn.,;javax.swing.tree.DefaultTreeCellEditor.getBorderSelectionColor();javax.swing.tree.DefaultTreeCellRenderer.getBorderSelectionColor(),;1.00;1.00
getBottomInset,2,0.5,Gets the bottom inset.,;javax.swing.text.AsyncBoxView.getBottomInset();javax.swing.text.CompositeView.getBottomInset(),;0.50;0.50
getBox,2,1,"Stores the position and size of the bouncing box that would be painted for the current animation index in r and returns r. Subclasses that add to the painting performed in this class's implementation of paintIndeterminate -- to draw an outline around the bouncing box, for example -- can use this method to get the location of the bouncing box that was just painted. By overriding this method, you have complete control over the size and position of the bouncing box, without having to reimplement paintIndeterminate.",;javax.swing.plaf.basic.BasicProgressBarUI.getBox(Rectangle);javax.swing.plaf.synth.SynthProgressBarUI.getBox(Rectangle),;1.00;1.00
getBroadcast,2,0.5,"Returns an InetAddress for the broadcast address for this InterfaceAddress. Only IPv4 networks have broadcast address therefore, in the case of an IPv6 network, null will be returned.",;java.net.DatagramSocket.getBroadcast();java.net.InterfaceAddress.getBroadcast(),;0.50;0.50
getBufferStrategy,2,1,Returns the BufferStrategy used by this component. This method will return null if a BufferStrategy has not yet been created or has been disposed.,;java.awt.Canvas.getBufferStrategy();java.awt.Window.getBufferStrategy(),;1.00;1.00
getByName,2,0.5,Searches for the network interface with the specified name.,;java.net.InetAddress.getByName(String);java.net.NetworkInterface.getByName(String),;0.50;0.50
getByte,2,0.5,Gets the value of a static or instance byte field.,";java.lang.reflect.Array.getByte(Object,int);java.lang.reflect.Field.getByte(Object)",;0.50;0.50
getByteArray,2,0.5,"Returns the byte array value represented by the string associated with the specified key in this preference node. Valid strings are Base64 encoded binary data, as defined in RFC 2045, Section 6.8, with one minor change: the string must consist solely of characters from the Base64 Alphabet; no newline characters or extraneous characters are permitted. This method is intended for use in conjunction with putByteArray(java.lang.String, byte[]). Returns the specified default if there is no value associated with the key, the backing store is inaccessible, or if the associated value is not a valid Base64 encoded byte array (as defined above). If the implementation supports stored defaults and such a default exists and is accessible, it is used in preference to the specified default, unless the stored default is not a valid Base64 encoded byte array (as defined above), in which case the specified default is used.",";java.util.prefs.AbstractPreferences.getByteArray(String,byte[]);java.util.prefs.Preferences.getByteArray(String,byte[])",;0.50;0.50
getByteLength,2,0.5,Obtains the size in bytes of the entire audio file (not just its audio data).,;javax.sound.midi.MidiFileFormat.getByteLength();javax.sound.sampled.AudioFileFormat.getByteLength(),;0.50;0.50
getBytesRead,2,0.829018503,Returns the total number of compressed bytes input so far.,;java.util.zip.Deflater.getBytesRead();java.util.zip.Inflater.getBytesRead(),;0.83;0.83
getBytesWritten,2,0.829018503,Returns the total number of uncompressed bytes output so far.,;java.util.zip.Deflater.getBytesWritten();java.util.zip.Inflater.getBytesWritten(),;0.83;0.83
getCalendarField,2,0.536579933,"Returns the Calendar field associated with this attribute. For example, if this represents the hours field of a Calendar, this would return Calendar.HOUR. If there is no corresponding Calendar constant, this will return -1.",;java.text.DateFormat.Field.getCalendarField();javax.swing.SpinnerDateModel.getCalendarField(),;0.54;0.53
getCaretInfo,2,0.561422328,"Returns information about the caret corresponding to hit. The first element of the array is the intersection of the caret with the baseline, as a distance along the baseline. The second element of the array is the inverse slope (run/rise) of the caret, measured with respect to the baseline at that point. This method is meant for informational use. To display carets, it is better to use getCaretShapes.",";java.awt.font.TextLayout.getCaretInfo(TextHitInfo,Rectangle2D);java.awt.font.TextLayout.getCaretInfo(TextHitInfo)",;0.56;0.53
getCaretPosition,2,0.590937987,"Returns the position of the text insertion caret. The caret position is constrained to be between 0 and the last character of the text, inclusive. If the text or caret have not been set, the default caret position is 0.",;java.awt.TextComponent.getCaretPosition();javax.swing.text.JTextComponent.getCaretPosition(),;0.59;0.53
getCaretShape,2,0.845255184,Returns a Shape representing the caret at the specified hit inside the specified bounds.,";java.awt.font.TextLayout.getCaretShape(TextHitInfo,Rectangle2D);java.awt.font.TextLayout.getCaretShape(TextHitInfo)",;0.85;0.84
getCellEditorListeners,2,0.895533254,Returns an array of all the CellEditorListeners added to this DefaultTreeCellEditor with addCellEditorListener().,;javax.swing.AbstractCellEditor.getCellEditorListeners();javax.swing.tree.DefaultTreeCellEditor.getCellEditorListeners(),;0.90;0.90
getCellEditorValue,2,0.5,Returns the value currently being edited.,;javax.swing.DefaultCellEditor.getCellEditorValue();javax.swing.tree.DefaultTreeCellEditor.getCellEditorValue(),;0.50;0.50
getCenterPoint,2,0.5,Returns a copy of the center point of the radial gradient.,;java.awt.GraphicsEnvironment.getCenterPoint();java.awt.RadialGradientPaint.getCenterPoint(),;0.50;0.50
getCertificateChain,2,0.5,Gets the Certificate chain from this entry. The stored chain is cloned before being returned.,;java.security.KeyStore.getCertificateChain(String);java.security.KeyStore.PrivateKeyEntry.getCertificateChain(),;0.50;0.50
getCharContent,2,0.5,This implementation always throws UnsupportedOperationException. Subclasses can change this behavior as long as the contract of FileObject is obeyed.,;javax.tools.ForwardingFileObject.getCharContent(boolean);javax.tools.SimpleJavaFileObject.getCharContent(boolean),;0.50;0.50
getChecksum,2,0.821729442,Returns the Checksum for this output stream.,;java.util.zip.CheckedInputStream.getChecksum();java.util.zip.CheckedOutputStream.getChecksum(),;0.82;0.82
getChildAt,2,0.5,Returns the child at the specified index in this node's child array.,;javax.swing.JTree.DynamicUtilTreeNode.getChildAt(int);javax.swing.tree.DefaultMutableTreeNode.getChildAt(int),;0.50;0.50
getClassAnnotation,2,0.803587117,"Returns the annotation string (representing a location for the class definition) that RMI will use to annotate the class descriptor when marshalling objects of the given class. This method delegates to the RMIClassLoaderSpi.getClassAnnotation(Class) method of the provider instance, passing cl as the argument.",;java.rmi.server.RMIClassLoader.getClassAnnotation(Class&lt;?&gt;);java.rmi.server.RMIClassLoaderSpi.getClassAnnotation(Class&lt;?&gt;),;0.80;0.79
getClassLoaderRepository,2,0.5,Return the Class Loader Repository used to perform class loading. Subclasses may wish to redefine this method in order to return the appropriate ClassLoaderRepository that should be used in this object.,;javax.management.MBeanServerFactory.getClassLoaderRepository(MBeanServer);javax.management.modelmbean.RequiredModelMBean.getClassLoaderRepository(),;0.50;0.50
getCodeBase,2,0.5,Gets the code base URL.,;java.applet.Applet.getCodeBase();javax.management.loading.MLetContent.getCodeBase(),;0.50;0.50
getCodeSigners,2,0.5,"Returns the CodeSigner objects for this entry, or null if none. This method can only be called once the JarEntry has been completely verified by reading from the entry input stream until the end of the stream has been reached. Otherwise, this method will return null. The returned array comprises all the code signers that have signed this entry.",;java.security.CodeSource.getCodeSigners();java.util.jar.JarEntry.getCodeSigners(),;0.50;0.50
getCollationElementIterator,2,0.904553356,Returns a CollationElementIterator for the given CharacterIterator.,;java.text.RuleBasedCollator.getCollationElementIterator(String);java.text.RuleBasedCollator.getCollationElementIterator(CharacterIterator),;0.90;0.90
getCollationKey,2,0.566150761,Transforms the String into a series of bits that can be compared bitwise to other CollationKeys. CollationKeys provide better performance than Collator.compare when Strings are involved in multiple comparisons. See the Collator class description for an example using CollationKeys.,;java.text.Collator.getCollationKey(String);java.text.RuleBasedCollator.getCollationKey(String),;0.57;0.56
getColorComponents,2,0.924121346,"Returns a float array containing only the color components of the Color in the ColorSpace specified by the cspace parameter. If compArray is null, an array with length equal to the number of components in cspace is created for the return value. Otherwise, compArray must have at least this length, and it is filled in with the components and returned.",";java.awt.Color.getColorComponents(float[]);java.awt.Color.getColorComponents(ColorSpace,float[])",;0.92;0.92
getColumnClass,2,0.5,Returns Object.class regardless of columnIndex.,;javax.swing.JTable.getColumnClass(int);javax.swing.table.AbstractTableModel.getColumnClass(int),;0.50;0.50
getColumnHeader,2,0.5,Returns the JViewport object that is the column header.,;javax.swing.JScrollPane.getColumnHeader();javax.swing.ScrollPaneLayout.getColumnHeader(),;0.50;0.50
getColumnModel,2,0.956550358,Returns the TableColumnModel that contains all column information of this table.,;javax.swing.JTable.getColumnModel();javax.swing.table.JTableHeader.getColumnModel(),;0.96;0.95
getColumnNumber,2,0.5,Return the saved column number (1-based).,;javax.xml.bind.helpers.ValidationEventLocatorImpl.getColumnNumber();org.xml.sax.helpers.LocatorImpl.getColumnNumber(),;0.50;0.50
getColumnSelectionAllowed,2,0.5,"Returns true if column selection is allowed, otherwise false. The default is false.",;javax.swing.JTable.getColumnSelectionAllowed();javax.swing.table.DefaultTableColumnModel.getColumnSelectionAllowed(),;0.50;0.50
getColumnWidth,2,0.982751476,Gets column width. The meaning of what a column is can be considered a fairly weak notion for some fonts. This method is used to define the width of a column. By default this is defined to be the width of the character m for the font used. This method can be redefined to be some alternative amount.,;javax.swing.JTextArea.getColumnWidth();javax.swing.JTextField.getColumnWidth(),;0.98;0.98
getCompressionQualityDescriptions,2,0.5,Description copied from class:ImageWriteParam,;javax.imageio.ImageWriteParam.getCompressionQualityDescriptions();javax.imageio.plugins.jpeg.JPEGImageWriteParam.getCompressionQualityDescriptions(),;0.50;0.50
getCompressionQualityValues,2,0.5,Description copied from class:ImageWriteParam,;javax.imageio.ImageWriteParam.getCompressionQualityValues();javax.imageio.plugins.jpeg.JPEGImageWriteParam.getCompressionQualityValues(),;0.50;0.50
getConfiguration,2,0.5,Get the installed login Configuration.,;java.security.DomainLoadStoreParameter.getConfiguration();javax.security.auth.login.Configuration.getConfiguration(),;0.50;0.50
getConstraint,2,0.5,"Returns the value of the specified edge, which may be a derived value, or even null. The edge must have one of the following values: SpringLayout.NORTH, SpringLayout.SOUTH, SpringLayout.EAST, SpringLayout.WEST, SpringLayout.HORIZONTAL_CENTER, SpringLayout.VERTICAL_CENTER, SpringLayout.BASELINE, SpringLayout.WIDTH or SpringLayout.HEIGHT. For any other String value passed as the edge, null will be returned. Throws NullPointerException for a null edge.",";javax.swing.SpringLayout.getConstraint(String,Component);javax.swing.SpringLayout.Constraints.getConstraint(String)",;0.50;0.50
getConstructor,2,0.5,Returns the ModelMBeanConstructorInfo requested by name. If no ModelMBeanConstructorInfo exists for this name null is returned.,;java.lang.Class.getConstructor(Class&lt;?&gt;...);javax.management.modelmbean.ModelMBeanInfoSupport.getConstructor(String),;0.50;0.50
getContainer,2,0.5,"Fetches the container hosting the view. This is useful for things like scheduling a repaint, finding out the host components font, etc. The default implementation of this is to forward the query to the parent view.",;java.awt.event.ContainerEvent.getContainer();javax.swing.text.View.getContainer(),;0.50;0.50
getContentId,2,0.903527864,Retrieves the value of the MIME header whose name is "Content-Id".,;javax.xml.soap.AttachmentPart.getContentId();javax.xml.soap.SOAPPart.getContentId(),;0.90;0.90
getContentLocation,2,0.951801002,Retrieves the value of the MIME header whose name is "Content-Location".,;javax.xml.soap.AttachmentPart.getContentLocation();javax.xml.soap.SOAPPart.getContentLocation(),;0.95;0.95
getControlDarkShadow,2,0.646414901,Returns the control dark shadow color of the current theme. This is a cover method for getCurrentTheme().getControlDarkShadow().,;javax.swing.plaf.metal.MetalLookAndFeel.getControlDarkShadow();javax.swing.plaf.metal.MetalTheme.getControlDarkShadow(),;0.65;0.64
getControlDisabled,2,0.620392175,Returns the control disabled color of the current theme. This is a cover method for getCurrentTheme().getControlDisabled().,;javax.swing.plaf.metal.MetalLookAndFeel.getControlDisabled();javax.swing.plaf.metal.MetalTheme.getControlDisabled(),;0.62;0.61
getControlHighlight,2,0.620392175,Returns the control highlight color of the current theme. This is a cover method for getCurrentTheme().getControlHighlight().,;javax.swing.plaf.metal.MetalLookAndFeel.getControlHighlight();javax.swing.plaf.metal.MetalTheme.getControlHighlight(),;0.62;0.61
getControlInfo,2,0.620392175,Returns the control info color of the current theme. This is a cover method for getCurrentTheme().getControlInfo().,;javax.swing.plaf.metal.MetalLookAndFeel.getControlInfo();javax.swing.plaf.metal.MetalTheme.getControlInfo(),;0.62;0.61
getController,2,0.812382353,"Returns whatever IIOMetadataController is currently installed. This could be the default if there is one, null, or the argument of the most recent call to setController. The default implementation returns the value of the controller instance variable.",;javax.imageio.IIOParam.getController();javax.imageio.metadata.IIOMetadata.getController(),;0.80;0.81
getControlShadow,2,0.620392175,Returns the control shadow color of the current theme. This is a cover method for getCurrentTheme().getControlShadow().,;javax.swing.plaf.metal.MetalLookAndFeel.getControlShadow();javax.swing.plaf.metal.MetalTheme.getControlShadow(),;0.62;0.61
getCopies,2,0.549851115,Returns the number of copies the application should render for jobs using these attributes. This attribute is updated to the value chosen by the user.,;java.awt.JobAttributes.getCopies();java.awt.print.PrinterJob.getCopies(),;0.55;0.52
getCurrentServiceSelectors,2,0.5,Description copied from interface:BeanContextServices,;java.beans.beancontext.BeanContextServiceAvailableEvent.getCurrentServiceSelectors();java.beans.beancontext.BeanContextServicesSupport.getCurrentServiceSelectors(Class),;0.50;0.50
getCursor,2,0.5,Returns the current drag Cursor.,;java.awt.Component.getCursor();java.awt.dnd.DragSourceContext.getCursor(),;0.50;0.50
getDataType,2,0.683602813,Returns the data type of the DataBuffer storing the pixel data.,;java.awt.image.DataBuffer.getDataType();java.awt.image.SampleModel.getDataType(),;0.68;0.68
getDays,2,0.5,"Obtains the value of the DAYS field as an integer value, or 0 if not present. This method works just like getYears() except that this method works on the DAYS field.",;java.time.Period.getDays();javax.xml.datatype.Duration.getDays(),;0.50;0.50
getDCHuffmanTables,2,0.947112777,"Returns a copy of the array of DC Huffman tables set on the most recent call to setEncodeTables, or null if tables are not currently set.",;javax.imageio.plugins.jpeg.JPEGImageReadParam.getDCHuffmanTables();javax.imageio.plugins.jpeg.JPEGImageWriteParam.getDCHuffmanTables(),;0.95;0.95
getDecimalSeparator,2,0.5,Gets the character that represents the decimal point. The character used to represent a decimal point may vary by culture. This method specifies the character to use.,;java.text.DecimalFormatSymbols.getDecimalSeparator();java.time.format.DecimalStyle.getDecimalSeparator(),;0.50;0.50
getDefaultAlgorithm,2,0.860117194,Obtains the default TrustManagerFactory algorithm name. The default TrustManager can be changed at runtime by setting the value of the ssl.TrustManagerFactory.algorithm security property to the desired algorithm name.,;javax.net.ssl.KeyManagerFactory.getDefaultAlgorithm();javax.net.ssl.TrustManagerFactory.getDefaultAlgorithm(),;0.86;0.86
getDefaultCipherSuites,2,1,"Returns the list of cipher suites which are enabled by default. Unless a different list is enabled, handshaking on an SSL connection will use one of these cipher suites. The minimum quality of service for these defaults requires confidentiality protection and server authentication (that is, no anonymous cipher suites).",;javax.net.ssl.SSLServerSocketFactory.getDefaultCipherSuites();javax.net.ssl.SSLSocketFactory.getDefaultCipherSuites(),;1.00;1.00
getDefaultController,2,0.78366879,"Returns the default IIOMetadataController, if there is one, regardless of the currently installed controller. If there is no default controller, returns null. The default implementation returns the value of the defaultController instance variable.",;javax.imageio.IIOParam.getDefaultController();javax.imageio.metadata.IIOMetadata.getDefaultController(),;0.76;0.78
getDefaultCursor,2,0.5,Returns the default cursor.,;java.awt.Cursor.getDefaultCursor();javax.swing.text.html.HTMLEditorKit.getDefaultCursor(),;0.50;0.50
getDefaultDomain,2,1,Description copied from interface:RMIConnection,;javax.management.remote.rmi.RMIConnectionImpl.getDefaultDomain(Subject);javax.management.remote.rmi.RMIConnectionImpl_Stub.getDefaultDomain(Subject),;1.00;1.00
getDefaultIcon,2,0.617311752,Returns the default icon. This should not callback to the JComponent.,;javax.swing.plaf.basic.BasicRadioButtonUI.getDefaultIcon();javax.swing.plaf.synth.SynthButtonUI.getDefaultIcon(AbstractButton),;0.59;0.62
getDefaultLocale,2,0.537020047,"Returns the default locale. The default locale is used in retrieving localized values via get methods that do not take a locale argument. As of release 1.4, Swing UI objects should retrieve localized values using the locale of their component rather than the default locale. The default locale exists to provide compatibility with pre 1.4 behaviour.",;javax.swing.JComponent.getDefaultLocale();javax.swing.UIDefaults.getDefaultLocale(),;0.54;0.54
getDefaultPort,2,0.5,Returns the default port for a URL parsed by this handler. This method is meant to be overidden by handlers with default port numbers.,;java.net.URL.getDefaultPort();java.net.URLStreamHandler.getDefaultPort(),;0.50;0.50
getDefaultRenderer,2,0.5,Returns the default renderer used when no headerRenderer is defined by a TableColumn.,;javax.swing.JTable.getDefaultRenderer(Class&lt;?&gt;);javax.swing.table.JTableHeader.getDefaultRenderer(),;0.50;0.50
getDefaultSize,2,0.656816727,Returns the default size of an empty display area of the combo box using the current renderer and font. This method was overridden to use SynthComboBoxRenderer instead of DefaultListCellRenderer as the default renderer when calculating the size of the combo box. This is used in the case of the combo not having any data.,;javax.swing.plaf.basic.BasicComboBoxUI.getDefaultSize();javax.swing.plaf.synth.SynthComboBoxUI.getDefaultSize(),;0.57;0.66
getDelay,2,0.5,"Returns the delay, in milliseconds, between firings of action events.",;javax.swing.JMenu.getDelay();javax.swing.Timer.getDelay(),;0.50;0.50
getDesktopManager,2,0.5,"Returns the proper DesktopManager. Calls getDesktopPane() to find the JDesktop component and returns the desktopManager from it. If this fails, it will return a default DesktopManager that should work in arbitrary parents.",;javax.swing.JDesktopPane.getDesktopManager();javax.swing.plaf.basic.BasicInternalFrameUI.getDesktopManager(),;0.50;0.50
getDesktopPane,2,0.5,Convenience method to ask the icon for the Desktop object it belongs to.,;javax.swing.JInternalFrame.getDesktopPane();javax.swing.JInternalFrame.JDesktopIcon.getDesktopPane(),;0.50;0.50
getDifferenceMode,2,1,Gets the difference mode flag value common to all observed MBeans.,;javax.management.monitor.CounterMonitor.getDifferenceMode();javax.management.monitor.GaugeMonitor.getDifferenceMode(),;1.00;1.00
getDirection,2,0.5,Returns the direction of the arrow.,;javax.swing.plaf.basic.BasicArrowButton.getDirection();javax.swing.text.DefaultStyledDocument.ElementSpec.getDirection(),;0.50;0.00
getDirectionality,2,0.739597507,"Returns the Unicode directionality property for the given character. Character directionality is used to calculate the visual ordering of text. The directionality value of undefined char values is DIRECTIONALITY_UNDEFINED. Note: This method cannot handle supplementary characters. To support all Unicode characters, including supplementary characters, use the getDirectionality(int) method.",;java.lang.Character.getDirectionality(char);java.lang.Character.getDirectionality(int),;0.74;0.72
getDirectory,2,0.5,Property to remember the directory that is currently selected in the UI.,;java.awt.FileDialog.getDirectory();javax.swing.plaf.basic.BasicFileChooserUI.getDirectory(),;0.50;0.50
getDisplayNames,2,0.626205365,"Returns a Map containing all names of the calendar field in the given style and locale and their corresponding field values. For example, if this Calendar is a GregorianCalendar, the returned map would contain ""Jan"" to JANUARY, ""Feb"" to FEBRUARY, and so on, in the short style in an English locale. Narrow names may not be unique due to use of single characters, such as ""S"" for Sunday and Saturday. In that case narrow names are not included in the returned Map. The values of other calendar fields may be taken into account to determine a set of display names. For example, if this Calendar is a lunisolar calendar system and the year value given by the YEAR field has a leap month, this method would return month names containing the leap month name, and month names are mapped to their values specific for the year. The default implementation supports display names contained in a DateFormatSymbols. For example, if field is MONTH and style is ALL_STYLES, this method returns a Map containing all strings returned by DateFormatSymbols.getShortMonths() and DateFormatSymbols.getMonths().",";java.util.Calendar.getDisplayNames(int,int,Locale);java.util.spi.CalendarNameProvider.getDisplayNames(String,int,int,Locale)",;0.63;0.63
getDividerSize,2,0.617942241,"Returns the size of the divider, that is the width if the splitpane is HORIZONTAL_SPLIT, or the height of VERTICAL_SPLIT.",;javax.swing.JSplitPane.getDividerSize();javax.swing.plaf.basic.BasicSplitPaneDivider.getDividerSize(),;0.55;0.62
getDivisionType,2,0.800214386,Obtains the timing division type for this sequence.,;javax.sound.midi.MidiFileFormat.getDivisionType();javax.sound.midi.Sequence.getDivisionType(),;0.79;0.80
getDocumentBase,2,0.5,Gets the MLet text file's base URL.,;java.applet.Applet.getDocumentBase();javax.management.loading.MLetContent.getDocumentBase(),;0.50;0.50
getDomain,2,0.5,Returns the domain part.,;java.net.HttpCookie.getDomain();javax.management.ObjectName.getDomain(),;0.50;0.50
getDomains,2,1,Description copied from interface:RMIConnection,;javax.management.remote.rmi.RMIConnectionImpl.getDomains(Subject);javax.management.remote.rmi.RMIConnectionImpl_Stub.getDomains(Subject),;1.00;1.00
getDOMImplementation,2,0.5,"Return the first implementation that has the desired features, or null if none is found.",;javax.xml.parsers.DocumentBuilder.getDOMImplementation();org.w3c.dom.bootstrap.DOMImplementationRegistry.getDOMImplementation(String),;0.50;0.50
getDot,2,0.5,Fetches the current position of the caret.,;javax.swing.event.CaretEvent.getDot();javax.swing.text.DefaultCaret.getDot(),;0.50;0.50
getDropTarget,2,0.730999668,Gets the DropTarget associated with this Component.,;java.awt.Component.getDropTarget();java.awt.dnd.DropTargetContext.getDropTarget(),;0.73;0.72
getDropTargetContext,2,0.730999668,Gets the DropTargetContext associated with this DropTarget.,;java.awt.dnd.DropTarget.getDropTargetContext();java.awt.dnd.DropTargetEvent.getDropTargetContext(),;0.73;0.72
getDSTSavings,2,0.520842711,"Returns the amount of time to be added to local standard time to get local wall clock time. The default implementation returns 3600000 milliseconds (i.e., one hour) if a call to useDaylightTime() returns true. Otherwise, 0 (zero) is returned. If an underlying TimeZone implementation subclass supports historical and future Daylight Saving Time schedule changes, this method returns the amount of saving time of the last known Daylight Saving Time rule that can be a future prediction. If the amount of saving time at any given time stamp is required, construct a Calendar with this TimeZone and the time stamp, and call Calendar.get(Calendar.DST_OFFSET).",;java.util.SimpleTimeZone.getDSTSavings();java.util.TimeZone.getDSTSavings(),;0.50;0.52
getDTDHandler,2,0.5,Get the current DTD event handler.,;org.xml.sax.helpers.ParserAdapter.getDTDHandler();org.xml.sax.helpers.XMLFilterImpl.getDTDHandler(),;0.50;0.50
getEchoChar,2,0.528320166,"Gets the character that is to be used for echoing. An echo character is useful for text fields where user input should not be echoed to the screen, as in the case of a text field for entering a password. If echoChar = 0, user input is echoed to the screen unchanged. A Java platform implementation may support only a limited, non-empty set of echo characters. This function returns the echo character originally requested via setEchoChar(). The echo character actually used by the TextField implementation might be different.",;java.awt.TextField.getEchoChar();javax.swing.JPasswordField.getEchoChar(),;0.53;0.52
getEditorComponent,2,0.5,Description copied from interface:ComboBoxEditor,;javax.swing.JTable.getEditorComponent();javax.swing.plaf.basic.BasicComboBoxEditor.getEditorComponent(),;0.50;0.50
getElements,2,0.5,Update elemVec with the list of elements that are part of the this contentModel.,;javax.swing.ButtonGroup.getElements();javax.swing.text.html.parser.ContentModel.getElements(Vector&lt;Element&gt;),;0.50;0.50
getElementText,2,0.834370152,Description copied from interface:XMLStreamReader,;javax.xml.stream.util.EventReaderDelegate.getElementText();javax.xml.stream.util.StreamReaderDelegate.getElementText(),;0.83;0.83
getEndPoint,2,0.5,Returns the ending point of the arc. This point is the intersection of the ray from the center defined by the starting angle plus the angular extent of the arc and the elliptical boundary of the arc.,;java.awt.LinearGradientPaint.getEndPoint();java.awt.geom.Arc2D.getEndPoint(),;0.50;0.50
getEndpointReference,2,0.616499494,"Returns the EndpointReference associated with this Endpoint instance. If the Binding for this bindingProvider is either SOAP1.1/HTTP or SOAP1.2/HTTP, then a W3CEndpointReference MUST be returned.",";javax.xml.ws.Endpoint.getEndpointReference(Element...);javax.xml.ws.Endpoint.getEndpointReference(Class&lt;T&gt;,Element...)",;0.62;0.54
getEntity,2,0.5,Gets a character entity.,;javax.swing.text.html.parser.DTD.getEntity(String);javax.swing.text.html.parser.DTD.getEntity(int),;0.50;0.50
getEntityResolver,2,0.834370152,Get the current entity resolver.,;org.xml.sax.helpers.ParserAdapter.getEntityResolver();org.xml.sax.helpers.XMLFilterImpl.getEntityResolver(),;0.83;0.83
getenv,2,0.581175174,"Gets the value of the specified environment variable. An environment variable is a system-dependent external named value. If a security manager exists, its checkPermission method is called with a RuntimePermission(""getenv.""+name) permission. This may result in a SecurityException being thrown. If no exception is thrown the value of the variable name is returned. System properties and environment variables are both conceptually mappings between names and values. Both mechanisms can be used to pass user-defined information to a Java process. Environment variables have a more global effect, because they are visible to all descendants of the process which defines them, not just the immediate Java subprocess. They can have subtly different semantics, such as case insensitivity, on different operating systems. For these reasons, environment variables are more likely to have unintended side effects. It is best to use system properties where possible. Environment variables should be used when a global effect is desired, or when an external system interface requires an environment variable (such as PATH). On UNIX systems the alphabetic case of name is typically significant, while on Microsoft Windows systems it is typically not. For example, the expression System.getenv(""FOO"").equals(System.getenv(""foo"")) is likely to be true on Microsoft Windows.",;java.lang.System.getenv(String);java.lang.System.getenv(),;0.58;0.58
getErrorListener,2,0.623119765,Get the error event handler in effect for the transformation. Implementations must provide a default error listener.,;javax.xml.transform.Transformer.getErrorListener();javax.xml.transform.TransformerFactory.getErrorListener(),;0.62;0.60
getErrorStream,2,0.522558273,"Returns the error stream if the connection failed but the server sent useful data nonetheless. The typical example is when an HTTP server responds with a 404, which will cause a FileNotFoundException to be thrown in connect, but the server sent an HTML help page with suggestions as to what to do. This method will not cause a connection to be initiated. If the connection was not connected, or if the server did not have an error while connecting or if the server had an error but no error data was sent, this method will return null. This is the default.",;java.lang.Process.getErrorStream();java.net.HttpURLConnection.getErrorStream(),;0.52;0.52
getEventContext,2,0.577814835,"Retrieves the event source that fired this event. This returns the same object as EventObject.getSource(). If the result of this method is used to access the event source, for example, to look up the object or get its attributes, then it needs to be locked because implementations of Context are not guaranteed to be thread-safe (and EventContext is a subinterface of Context). See the package description for more information on threading issues.",;javax.naming.event.NamingEvent.getEventContext();javax.naming.event.NamingExceptionEvent.getEventContext(),;0.58;0.51
getEventType,2,0.5,Description copied from interface:XMLStreamReader,;javax.swing.event.HyperlinkEvent.getEventType();javax.xml.stream.util.StreamReaderDelegate.getEventType(),;0.50;0.50
getExceptionListener,2,1,Gets the exception handler for this stream.,;java.beans.Encoder.getExceptionListener();java.beans.XMLDecoder.getExceptionListener(),;1.00;1.00
getExclusiveQueuedThreads,2,1,Returns a collection containing threads that may be waiting to acquire in exclusive mode. This has the same properties as getQueuedThreads() except that it only returns those threads waiting due to an exclusive acquire.,;java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getExclusiveQueuedThreads();java.util.concurrent.locks.AbstractQueuedSynchronizer.getExclusiveQueuedThreads(),;1.00;1.00
getExtendedKeyUsage,2,0.511284018,"Gets an unmodifiable list of Strings representing the OBJECT IDENTIFIERs of the ExtKeyUsageSyntax field of the extended key usage extension, (OID = 2.5.29.37). It indicates one or more purposes for which the certified public key may be used, in addition to or in place of the basic purposes indicated in the key usage extension field. The ASN.1 definition for this is: ExtKeyUsageSyntax ::= SEQUENCE SIZE (1..MAX) OF KeyPurposeId KeyPurposeId ::= OBJECT IDENTIFIER Key purposes may be defined by any organization with a need. Object identifiers used to identify key purposes shall be assigned in accordance with IANA or ITU-T Rec. X.660 | ISO/IEC/ITU 9834-1. This method was added to version 1.4 of the Java 2 Platform Standard Edition. In order to maintain backwards compatibility with existing service providers, this method is not abstract and it provides a default implementation. Subclasses should override this method with a correct implementation.",;java.security.cert.X509Certificate.getExtendedKeyUsage();java.security.cert.X509CertSelector.getExtendedKeyUsage(),;0.51;0.50
getExtension,2,0.5,Obtains the common file name extension for this file type.,;java.util.Locale.getExtension(char);javax.sound.sampled.AudioFileFormat.Type.getExtension(),;0.50;0.50
getExtent,2,0.5,Returns the "extent" from the BoundedRangeModel. This represents the range of values "covered" by the knob.,;javax.swing.DefaultBoundedRangeModel.getExtent();javax.swing.JSlider.getExtent(),;0.50;0.50
getFamily,2,0.921042722,"Returns the family name of this Font. The family name of a font is font specific. Two fonts such as Helvetica Italic and Helvetica Bold have the same family name, Helvetica, whereas their font face names are Helvetica Bold and Helvetica Italic. The list of available family names may be obtained by using the GraphicsEnvironment.getAvailableFontFamilyNames() method. Use getName to get the logical name of the font. Use getFontName to get the font face name of the font.",;java.awt.Font.getFamily();java.awt.Font.getFamily(Locale),;0.92;0.92
getFieldNames,2,1,Description copied from interface:Descriptor,;javax.management.ImmutableDescriptor.getFieldNames();javax.management.modelmbean.DescriptorSupport.getFieldNames(),;1.00;1.00
getFieldSize,2,0.745394233,Returns the field size in bits which is m for this characteristic 2 finite field.,;java.security.spec.ECFieldF2m.getFieldSize();java.security.spec.ECFieldFp.getFieldSize(),;0.75;0.74
getFieldValue,2,1,Description copied from interface:Descriptor,;javax.management.ImmutableDescriptor.getFieldValue(String);javax.management.modelmbean.DescriptorSupport.getFieldValue(String),;1.00;1.00
getFieldValues,2,1,Description copied from interface:Descriptor,;javax.management.ImmutableDescriptor.getFieldValues(String...);javax.management.modelmbean.DescriptorSupport.getFieldValues(String...),;1.00;1.00
getFileAttributeView,2,0.525945524,"Returns a file attribute view of a given type. A file attribute view provides a read-only or updatable view of a set of file attributes. This method is intended to be used where the file attribute view defines type-safe methods to read or update the file attributes. The type parameter is the type of the attribute view required and the method returns an instance of that type if supported. The BasicFileAttributeView type supports access to the basic attributes of a file. Invoking this method to select a file attribute view of that type will always return an instance of that class. The options array may be used to indicate how symbolic links are handled by the resulting file attribute view for the case that the file is a symbolic link. By default, symbolic links are followed. If the option NOFOLLOW_LINKS is present then symbolic links are not followed. This option is ignored by implementations that do not support symbolic links. Usage Example: Suppose we want read or set a file's ACL, if supported: Path path = ... AclFileAttributeView view = Files.getFileAttributeView(path, AclFileAttributeView.class); if (view != null) { List&lt;AclEntry&gt; acl = view.getAcl(); : }",";java.nio.file.Files.getFileAttributeView(Path,Class&lt;V&gt;,LinkOption...);java.nio.file.spi.FileSystemProvider.getFileAttributeView(Path,Class&lt;V&gt;,LinkOption...)",;0.53;0.50
getFileDescriptor,2,0.5,Returns the value of this socket's fd field.,;java.net.DatagramSocketImpl.getFileDescriptor();java.net.SocketImpl.getFileDescriptor(),;0.50;0.50
getFileName,2,0.5,"Returns the name of the source file containing the execution point represented by this stack trace element. Generally, this corresponds to the SourceFile attribute of the relevant class file (as per The Java Virtual Machine Specification, Section 4.7.7). In some systems, the name may refer to some source code unit other than a file, such as an entry in source repository.",;java.awt.JobAttributes.getFileName();java.lang.StackTraceElement.getFileName(),;0.50;0.50
getFiles,2,0.5,Gets the list of shown (i.e. not hidden) files.,";java.awt.FileDialog.getFiles();javax.swing.filechooser.FileSystemView.getFiles(File,boolean)",;0.50;0.50
getFileStore,2,0.58427982,"Returns the FileStore representing the file store where a file is located. Once a reference to the FileStore is obtained it is implementation specific if operations on the returned FileStore, or FileStoreAttributeView objects obtained from it, continue to depend on the existence of the file. In particular the behavior is not defined for the case that the file is deleted or moved to a different file store.",;java.nio.file.Files.getFileStore(Path);java.nio.file.spi.FileSystemProvider.getFileStore(Path),;0.58;0.55
getFileSystem,2,0.82150758,"Returns an existing FileSystem created by this provider. This method returns a reference to a FileSystem that was created by invoking the newFileSystem(URI,Map) method. File systems created the newFileSystem(Path,Map) method are not returned by this method. The file system is identified by its URI. Its exact form is highly provider dependent. In the case of the default provider the URI's path component is ""/"" and the authority, query and fragment components are undefined (Undefined components are represented by null). Once a file system created by this provider is closed it is provider-dependent if this method returns a reference to the closed file system or throws FileSystemNotFoundException. If the provider allows a new file system to be created with the same URI as a file system it previously created then this method throws the exception if invoked after the file system is closed (and before a new instance is created by the newFileSystem method). If a security manager is installed then a provider implementation may require to check a permission before returning a reference to an existing file system. In the case of the default file system, no permission check is required.",;java.nio.file.FileSystems.getFileSystem(URI);java.nio.file.spi.FileSystemProvider.getFileSystem(URI),;0.82;0.82
getFileView,2,0.5,Invokes the getFileView method on each UI handled by this object.,;javax.swing.JFileChooser.getFileView();javax.swing.plaf.multi.MultiFileChooserUI.getFileView(JFileChooser),;0.50;0.50
getFirstChild,2,0.61517236,"Returns this node's first child. If this node has no children, throws NoSuchElementException.",;javax.imageio.metadata.IIOMetadataNode.getFirstChild();javax.swing.tree.DefaultMutableTreeNode.getFirstChild(),;0.61;0.62
getFirstQueuedThread,2,1,"Returns the first (longest-waiting) thread in the queue, or null if no threads are currently queued. In this implementation, this operation normally returns in constant time, but may iterate upon contention if other threads are concurrently modifying the queue.",;java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getFirstQueuedThread();java.util.concurrent.locks.AbstractQueuedSynchronizer.getFirstQueuedThread(),;1.00;1.00
getFlavorMap,2,0.5,"Gets the FlavorMap associated with this DropTarget. If no FlavorMap has been set for this DropTarget, it is associated with the default FlavorMap.",;java.awt.dnd.DragSource.getFlavorMap();java.awt.dnd.DropTarget.getFlavorMap(),;0.50;0.50
getFlowSpan,2,0.593425708,"Fetch the constraining span to flow against for the given child index. This is called by the FlowStrategy while it is updating the flow. A flow can be shaped by providing different values for the row constraints. By default, the entire span inside of the insets along the flow axis is returned.",;javax.swing.text.FlowView.getFlowSpan(int);javax.swing.text.ParagraphView.getFlowSpan(int),;0.59;0.52
getFlowStart,2,0.652672641,Fetch the location along the flow axis that the flow span will start at. This is called by the FlowStrategy while it is updating the flow. A flow can be shaped by providing different values for the row constraints.,;javax.swing.text.FlowView.getFlowStart(int);javax.swing.text.ParagraphView.getFlowStart(int),;0.65;0.58
getFocusColor,2,0.588046413,Returns the focus color of the current theme. This is a cover method for getCurrentTheme().getFocusColor().,;javax.swing.plaf.metal.MetalLookAndFeel.getFocusColor();javax.swing.plaf.metal.MetalTheme.getFocusColor(),;0.59;0.58
getFontForState,2,0.649078278,"Returns the font for the specified state. This should NOT call any method on the JComponent. Overridden to cause this style to populate itself with data from UIDefaults, if necessary. If a value named ""font"" is not found in UIDefaults, then the ""defaultFont"" font in UIDefaults will be returned instead.",;javax.swing.plaf.nimbus.NimbusStyle.getFontForState(SynthContext);javax.swing.plaf.synth.SynthStyle.getFontForState(SynthContext),;0.65;0.56
getFontName,2,0.769504018,"Returns the font face name of this Font. For example, Helvetica Bold could be returned as a font face name. Use getFamily to get the family name of the font. Use getName to get the logical name of the font.",;java.awt.Font.getFontName();java.awt.Font.getFontName(Locale),;0.77;0.77
getFrameLength,2,0.707674943,"Obtains the length of the stream, expressed in sample frames rather than bytes.",;javax.sound.sampled.AudioFileFormat.getFrameLength();javax.sound.sampled.AudioInputStream.getFrameLength(),;0.71;0.71
getGamma,2,0.750493431,"Returns a gamma value representing the tone reproduction curve (TRC) for a particular component. The component parameter must be one of REDCOMPONENT, GREENCOMPONENT, or BLUECOMPONENT. If the profile represents the TRC for the corresponding component as a table rather than a single gamma value, an exception is thrown. In this case the actual table can be obtained through the getTRC(int) method. When using a gamma value, the linear component (R, G, or B) is computed as follows: gamma linearComponent = deviceComponent",;java.awt.color.ICC_ProfileGray.getGamma();java.awt.color.ICC_ProfileRGB.getGamma(int),;0.74;0.75
getGlyphOutline,2,0.919256502,"Returns a Shape whose interior corresponds to the visual representation of the specified glyph within this GlyphVector, offset to x,y. The outline returned by this method is positioned around the origin of each individual glyph.",";java.awt.font.GlyphVector.getGlyphOutline(int);java.awt.font.GlyphVector.getGlyphOutline(int,float,float)",;0.92;0.92
getGreatestMinimum,2,0.825498467,Returns the highest minimum value for the given calendar field of this Calendar instance. The highest minimum value is defined as the largest value returned by getActualMinimum(int) for any possible time value. The greatest minimum value depends on calendar system specific parameters of the instance.,;java.util.Calendar.getGreatestMinimum(int);java.util.GregorianCalendar.getGreatestMinimum(int),;0.83;0.83
getHandlerResolver,2,1,Returns the configured handler resolver.,;javax.xml.ws.Service.getHandlerResolver();javax.xml.ws.spi.ServiceDelegate.getHandlerResolver(),;1.00;1.00
getHandshakeApplicationProtocol,2,1,"Returns the application protocol value negotiated on a SSL/TLS handshake currently in progress. Like getHandshakeSession(), a connection may be in the middle of a handshake. The application protocol may or may not yet be available.",;javax.net.ssl.SSLEngine.getHandshakeApplicationProtocol();javax.net.ssl.SSLSocket.getHandshakeApplicationProtocol(),;1.00;1.00
getHandshakeApplicationProtocolSelector,2,1,Retrieves the callback function that selects an application protocol value during a SSL/TLS/DTLS handshake. See setHandshakeApplicationProtocolSelector for the function's type parameters.,;javax.net.ssl.SSLEngine.getHandshakeApplicationProtocolSelector();javax.net.ssl.SSLSocket.getHandshakeApplicationProtocolSelector(),;1.00;1.00
getHandshakeSession,2,0.943214659,"Returns the SSLSession being constructed during a SSL/TLS handshake. TLS protocols may negotiate parameters that are needed when using an instance of this class, but before the SSLSession has been completely initialized and made available via getSession. For example, the list of valid signature algorithms may restrict the type of certificates that can used during TrustManager decisions, or the maximum TLS fragment packet sizes can be resized to better support the network environment. This method provides early access to the SSLSession being constructed. Depending on how far the handshake has progressed, some data may not yet be available for use. For example, if a remote server will be sending a Certificate chain, but that chain has yet not been processed, the getPeerCertificates method of SSLSession will throw a SSLPeerUnverifiedException. Once that chain has been processed, getPeerCertificates will return the proper value. Unlike getSession(), this method does not initiate the initial handshake and does not block until handshaking is complete.",;javax.net.ssl.SSLEngine.getHandshakeSession();javax.net.ssl.SSLSocket.getHandshakeSession(),;0.94;0.94
getHandshakeStatus,2,0.5,Gets the handshake status of this SSLEngine operation.,;javax.net.ssl.SSLEngine.getHandshakeStatus();javax.net.ssl.SSLEngineResult.getHandshakeStatus(),;0.50;0.50
getHead,2,0.655731889,"Return the header string for a set of formatted records. This base class returns an empty string, but this may be overridden by subclasses.",;java.util.logging.Formatter.getHead(Handler);java.util.logging.XMLFormatter.getHead(Handler),;0.66;0.61
getHeaderFieldDate,2,0.5,"Returns the value of the named field parsed as date. The result is the number of milliseconds since January 1, 1970 GMT represented by the named field. This form of getHeaderField exists because some connection types (e.g., http-ng) have pre-parsed headers. Classes for that connection type can override this method and short-circuit the parsing.",";java.net.HttpURLConnection.getHeaderFieldDate(String,long);java.net.URLConnection.getHeaderFieldDate(String,long)",;0.50;0.50
getHeaderFieldKey,2,0.584359193,"Returns the key for the nth header field. Some implementations may treat the 0th header field as special, i.e. as the status line returned by the HTTP server. In this case, getHeaderField(0) returns the status line, but getHeaderFieldKey(0) returns null.",;java.net.HttpURLConnection.getHeaderFieldKey(int);java.net.URLConnection.getHeaderFieldKey(int),;0.58;0.56
getHelpMenu,2,0.591647068,Gets the help menu for the menu bar. This method is not yet implemented and will throw an exception.,;java.awt.MenuBar.getHelpMenu();javax.swing.JMenuBar.getHelpMenu(),;0.56;0.59
getHighlightColor,2,0.681451818,"Returns the highlight color of the etched border when rendered on the specified component. If no highlight color was specified at instantiation, the highlight color is derived from the specified component's background color.",;javax.swing.border.EtchedBorder.getHighlightColor(Component);javax.swing.border.EtchedBorder.getHighlightColor(),;0.68;0.65
getHighlightedTextColor,2,0.620392175,Returns the highlighted text color of the current theme. This is a cover method for getCurrentTheme().getHighlightedTextColor().,;javax.swing.plaf.metal.MetalLookAndFeel.getHighlightedTextColor();javax.swing.plaf.metal.MetalTheme.getHighlightedTextColor(),;0.62;0.61
getHighlightInnerColor,2,0.691216164,"Returns the inner highlight color of the bevel border when rendered on the specified component. If no highlight color was specified at instantiation, the highlight color is derived from the specified component's background color.",;javax.swing.border.BevelBorder.getHighlightInnerColor(Component);javax.swing.border.BevelBorder.getHighlightInnerColor(),;0.69;0.66
getHighlightOuterColor,2,0.691216164,"Returns the outer highlight color of the bevel border when rendered on the specified component. If no highlight color was specified at instantiation, the highlight color is derived from the specified component's background color.",;javax.swing.border.BevelBorder.getHighlightOuterColor(Component);javax.swing.border.BevelBorder.getHighlightOuterColor(),;0.69;0.66
getHoldCount,2,0.665233485,"Queries the number of holds on this lock by the current thread. A thread has a hold on a lock for each lock action that is not matched by an unlock action. The hold count information is typically only used for testing and debugging purposes. For example, if a certain section of code should not be entered with the lock already held then we can assert that fact: class X { ReentrantLock lock = new ReentrantLock(); // ... public void m() { assert lock.getHoldCount() == 0; lock.lock(); try { // ... method body } finally { lock.unlock(); } } }",;java.util.concurrent.locks.ReentrantLock.getHoldCount();java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.getHoldCount(),;0.67;0.61
getHorizontalAlignment,2,0.5,Returns the alignment of the label's contents along the X axis.,;javax.swing.AbstractButton.getHorizontalAlignment();javax.swing.JLabel.getHorizontalAlignment(),;0.50;0.50
getHorizontalLegBuffer,2,0.5,Description copied from class:BasicTreeUI,;javax.swing.plaf.basic.BasicTreeUI.getHorizontalLegBuffer();javax.swing.plaf.metal.MetalTreeUI.getHorizontalLegBuffer(),;0.50;0.50
getHorizontalScrollBar,2,0.5,Returns the JScrollBar object that handles horizontal scrolling.,;javax.swing.JScrollPane.getHorizontalScrollBar();javax.swing.ScrollPaneLayout.getHorizontalScrollBar(),;0.50;0.50
getHorizontalScrollBarPolicy,2,0.5,Returns the horizontal scrollbar-display policy.,;javax.swing.JScrollPane.getHorizontalScrollBarPolicy();javax.swing.ScrollPaneLayout.getHorizontalScrollBarPolicy(),;0.50;0.50
getHorizontalTextPosition,2,0.745010123,Returns the horizontal position of the text relative to the icon.,;javax.swing.AbstractButton.getHorizontalTextPosition();javax.swing.JLabel.getHorizontalTextPosition(),;0.75;0.74
getHost,2,0.5,"The host part of the Service URL. If the Service URL was constructed with the constructor that takes a URL string parameter, the result is the substring specifying the host in that URL. If the Service URL was constructed with a constructor that takes a separate host parameter, the result is the string that was specified. If that string was null, the result is InetAddress.getLocalHost().getHostName().In either case, if the host was specified using the [...] syntax for numeric IPv6 addresses, the square brackets are not included in the return value here.",;java.net.URL.getHost();javax.management.remote.JMXServiceURL.getHost(),;0.50;0.50
getHostName,2,0.520702484,"Gets the host name for this IP address. If this InetAddress was created with a host name, this host name will be remembered and returned; otherwise, a reverse name lookup will be performed and the result will be returned based on the system configured name lookup service. If a lookup of the name service is required, call getCanonicalHostName. If there is a security manager, its checkConnect method is first called with the hostname and -1 as its arguments to see if the operation is allowed. If the operation is not allowed, it will return the textual representation of the IP address.",;java.net.InetAddress.getHostName();java.net.InetSocketAddress.getHostName(),;0.52;0.50
getHumanPresentableName,2,0.5,Return the Human Presentable name.,;java.awt.datatransfer.DataFlavor.getHumanPresentableName();javax.activation.ActivationDataFlavor.getHumanPresentableName(),;0.50;0.50
getIconTextGap,2,0.962695591,Returns the amount of space between the text and the icon displayed in this label.,;javax.swing.AbstractButton.getIconTextGap();javax.swing.JLabel.getIconTextGap(),;0.96;0.96
getImageableHeight,2,0.5,Returns the height of this Paper object's imageable area.,;java.awt.print.PageFormat.getImageableHeight();java.awt.print.Paper.getImageableHeight(),;0.50;0.50
getImageableWidth,2,0.5,Returns the width of this Paper object's imageable area.,;java.awt.print.PageFormat.getImageableWidth();java.awt.print.Paper.getImageableWidth(),;0.50;0.50
getImageableX,2,0.632994356,Returns the x coordinate of the upper left point of the imageable area of the Paper object associated with this PageFormat. This method takes into account the orientation of the page.,;java.awt.print.PageFormat.getImageableX();java.awt.print.Paper.getImageableX(),;0.63;0.61
getImageableY,2,0.632994356,Returns the y coordinate of the upper left point of the imageable area of the Paper object associated with this PageFormat. This method takes into account the orientation of the page.,;java.awt.print.PageFormat.getImageableY();java.awt.print.Paper.getImageableY(),;0.63;0.61
getImageMetadata,2,0.558098638,"Returns an IIOMetadata object representing the metadata associated with the given image, or null if the reader does not support reading metadata or none is available. The resulting metadata object is only responsible for returning documents in the format named by formatName. Within any documents that are returned, only nodes whose names are members of nodeNames are required to be returned. In this way, the amount of metadata processing done by the reader may be kept to a minimum, based on what information is actually needed. If formatName is not the name of a supported metadata format, null may be returned. In all cases, it is legal to return a more capable metadata object than strictly necessary. The format name and node names are merely hints that may be used to reduce the reader's workload. The default implementation simply returns the result of calling getImageMetadata(imageIndex), after checking that the format name is supported. If it is not, null is returned.",";javax.imageio.ImageReader.getImageMetadata(int);javax.imageio.ImageReader.getImageMetadata(int,String,Set&lt;String&gt;)",;0.51;0.56
getImageURL,2,0.5,"Return a URL for the image source, or null if it could not be determined.",;java.awt.SplashScreen.getImageURL();javax.swing.text.html.ImageView.getImageURL(),;0.50;0.50
getImpact,2,0.5,Customization hook: Get the impact flag of the operation that will be used in the MBeanOperationInfo returned by this MBean. Subclasses may redefine this method in order to supply their custom impact flag. The default implementation returns info.getImpact().,;javax.management.MBeanOperationInfo.getImpact();javax.management.StandardMBean.getImpact(MBeanOperationInfo),;0.50;0.50
getImplementationVendor,2,0.5,Returns the JMX implementation vendor (the vendor of this product).,;java.lang.Package.getImplementationVendor();javax.management.MBeanServerDelegate.getImplementationVendor(),;0.50;0.50
getImplementationVersion,2,0.524721651,Return the version of this implementation. It consists of any string assigned by the vendor of this implementation and does not have any particular syntax specified or expected by the Java runtime. It may be compared for equality with other package version strings used for this implementation by this vendor for this package.,;java.lang.Package.getImplementationVersion();javax.management.MBeanServerDelegate.getImplementationVersion(),;0.52;0.50
getImplicitDownCycleTraversal,2,0.953334997,"Returns whether this SortingFocusTraversalPolicy transfers focus down- cycle implicitly. If true, during normal focus traversal, the Component traversed after a focus cycle root will be the focus-cycle-root's default Component to focus. If false, the next Component in the focus traversal cycle rooted at the specified focus cycle root will be traversed instead.",;java.awt.ContainerOrderFocusTraversalPolicy.getImplicitDownCycleTraversal();javax.swing.SortingFocusTraversalPolicy.getImplicitDownCycleTraversal(),;0.95;0.95
getInactiveSystemTextColor,2,0.646414901,Returns the inactive system text color of the current theme. This is a cover method for getCurrentTheme().getInactiveSystemTextColor().,;javax.swing.plaf.metal.MetalLookAndFeel.getInactiveSystemTextColor();javax.swing.plaf.metal.MetalTheme.getInactiveSystemTextColor(),;0.65;0.64
getIndexOf,2,0.5,"Returns the index of the specified Component. This is the absolute index, ignoring layers. Index numbers, like position numbers, have the topmost component at index zero. Larger numbers are closer to the bottom.",;javax.swing.DefaultComboBoxModel.getIndexOf(Object);javax.swing.JLayeredPane.getIndexOf(Component),;0.50;0.50
getInfo,2,0.5,"Returns a human-readable description of the provider and its services. This may return an HTML page, with relevant links.",;java.security.Identity.getInfo();java.security.Provider.getInfo(),;0.00;0.50
getInitialComponent,2,0.849335728,"Returns the Component that should receive the focus when a JInternalFrame is selected for the first time. Once the JInternalFrame has been selected by a call to setSelected(true), the initial Component will not be used again. Instead, if the JInternalFrame loses and subsequently regains selection, or is made invisible or undisplayable and subsequently made visible and displayable, the JInternalFrame's most recently focused Component will become the focus owner. The default implementation of this method returns the JInternalFrame's default Component to focus.",;java.awt.FocusTraversalPolicy.getInitialComponent(Window);javax.swing.InternalFrameFocusTraversalPolicy.getInitialComponent(JInternalFrame),;0.85;0.85
getInitialDelay,2,0.5,Returns the initial delay value.,;javax.swing.Timer.getInitialDelay();javax.swing.ToolTipManager.getInitialDelay(),;0.50;0.50
getInputContext,2,0.535196861,"Gets the input context used by this component for handling the communication with input methods when text is entered in this component. By default, the input context used for the parent component is returned. Components may override this to return a private input context.",;java.awt.Component.getInputContext();java.awt.Window.getInputContext(),;0.54;0.53
getInputMap,2,0.632300798,Returns the InputMap that is used when the component has focus. This is convenience method for getInputMap(WHEN_FOCUSED).,;javax.swing.JComponent.getInputMap(int);javax.swing.JComponent.getInputMap(),;0.60;0.63
getInteger,2,0.79336457,"Determines the integer value of the system property with the specified name. The first argument is treated as the name of a system property. System properties are accessible through the System.getProperty(java.lang.String) method. The string value of this property is then interpreted as an integer value using the grammar supported by decode and an Integer object representing this value is returned. The second argument is the default value. An Integer object that represents the value of the second argument is returned if there is no property of the specified name, if the property does not have the correct numeric format, or if the specified name is empty or null. In other words, this method returns an Integer object equal to the value of: getInteger(nm, new Integer(val)) but in practice it may be implemented in a manner such as: Integer result = getInteger(nm, null); return (result == null) ? new Integer(val) : result; to avoid the unnecessary allocation of an Integer object when the default value is not needed.",";java.lang.Integer.getInteger(String);java.lang.Integer.getInteger(String,int)",;0.77;0.79
getInteriorRectangle,2,0.5,Returns a rectangle using the arguments minus the insets of the border. This is useful for determining the area that components should draw in that will not intersect the border.,";javax.swing.border.AbstractBorder.getInteriorRectangle(Component,int,int,int,int);javax.swing.border.AbstractBorder.getInteriorRectangle(Component,Border,int,int,int,int)",;0.50;0.50
getInternalFrame,2,0.5,Returns the originator of the event.,;javax.swing.JInternalFrame.JDesktopIcon.getInternalFrame();javax.swing.event.InternalFrameEvent.getInternalFrame(),;0.50;0.50
getIssuerX500Principal,2,0.932801528,Returns the issuer (issuer distinguished name) value from the CRL as an X500Principal. It is recommended that subclasses override this method.,;java.security.cert.X509Certificate.getIssuerX500Principal();java.security.cert.X509CRL.getIssuerX500Principal(),;0.93;0.93
getIterationCount,2,0.649237295,Returns the iteration count or 0 if not specified.,;javax.crypto.spec.PBEKeySpec.getIterationCount();javax.crypto.spec.PBEParameterSpec.getIterationCount(),;0.65;0.64
getJarEntry,2,0.5,Returns the JarEntry for the given entry name or null if not found.,;java.net.JarURLConnection.getJarEntry();java.util.jar.JarFile.getJarEntry(String),;0.50;0.50
getKeyChar,2,0.5,"Returns the character associated with the key in this event. For example, the KEY_TYPED event for shift + ""a"" returns the value for ""A"". KEY_PRESSED and KEY_RELEASED events are not intended for reporting of character input. Therefore, the values returned by this method are guaranteed to be meaningful only for KEY_TYPED events.",;java.awt.AWTKeyStroke.getKeyChar();java.awt.event.KeyEvent.getKeyChar(),;0.50;0.50
getKeyCode,2,0.5,Returns the integer keyCode associated with the key in this event.,;java.awt.AWTKeyStroke.getKeyCode();java.awt.event.KeyEvent.getKeyCode(),;0.50;0.50
getKeymap,2,0.5,Fetches a named keymap previously added to the document. This does not work with null-named keymaps.,;javax.swing.text.JTextComponent.getKeymap();javax.swing.text.JTextComponent.getKeymap(String),;0.50;0.50
getKeyUsage,2,0.5,"Returns the keyUsage criterion. The X509Certificate must allow the specified keyUsage values. If null, no keyUsage check will be done. Note that the boolean array returned is cloned to protect against subsequent modifications.",;java.security.cert.X509Certificate.getKeyUsage();java.security.cert.X509CertSelector.getKeyUsage(),;0.50;0.50
getKind,2,1,Description copied from interface:JavaFileObject,;javax.tools.ForwardingJavaFileObject.getKind();javax.tools.SimpleJavaFileObject.getKind(),;1.00;1.00
getLastChild,2,0.61517236,"Returns this node's last child. If this node has no children, throws NoSuchElementException.",;javax.imageio.metadata.IIOMetadataNode.getLastChild();javax.swing.tree.DefaultMutableTreeNode.getLastChild(),;0.61;0.62
getLastModifiedTime,2,0.5,"Returns the last modification time of the entry. If the entry is read from a ZIP file or ZIP file formatted input stream, this is the last modification time from the zip file entry's optional extra data if the extended timestamp fields are present. Otherwise the last modification time is read from the entry's date and time fields, the default TimeZone is used to convert the standard MS-DOS formatted date and time to the epoch time.",";java.nio.file.Files.getLastModifiedTime(Path,LinkOption...);java.util.zip.ZipEntry.getLastModifiedTime()",;0.50;0.50
getLayout,2,0.5,Returns a TextLayout on the given character range.,";java.awt.Container.getLayout();java.awt.font.TextMeasurer.getLayout(int,int)",;0.50;0.50
getLayoutComponent,2,0.5,"Returns the component that corresponds to the given constraint location based on the target Container's component orientation. Components added with the relative constraints PAGE_START, PAGE_END, LINE_START, and LINE_END take precedence over components added with the explicit constraints NORTH, SOUTH, WEST, and EAST. The Container's component orientation is used to determine the location of components added with LINE_START and LINE_END.",";java.awt.BorderLayout.getLayoutComponent(Object);java.awt.BorderLayout.getLayoutComponent(Container,Object)",;0.50;0.50
getLeadSelectionIndex,2,0.5,Returns the lead selection index. This is a cover method that delegates to the method of the same name on the list's selection model.,;javax.swing.DefaultListSelectionModel.getLeadSelectionIndex();javax.swing.JList.getLeadSelectionIndex(),;0.50;0.50
getLeadSelectionPath,2,0.5,Returns the last path that was added. This may differ from the leadSelectionPath property maintained by the JTree.,;javax.swing.JTree.getLeadSelectionPath();javax.swing.tree.DefaultTreeSelectionModel.getLeadSelectionPath(),;0.50;0.50
getLeastMaximum,2,0.689904249,"Returns the lowest maximum value for the given calendar field of this Calendar instance. The lowest maximum value is defined as the smallest value returned by getActualMaximum(int) for any possible time value. The least maximum value depends on calendar system specific parameters of the instance. For example, a Calendar for the Gregorian calendar system returns 28 for the DAY_OF_MONTH field, because the 28th is the last day of the shortest month of this calendar, February in a common year.",;java.util.Calendar.getLeastMaximum(int);java.util.GregorianCalendar.getLeastMaximum(int),;0.69;0.66
getLeftInset,2,0.5,Gets the left inset.,;javax.swing.text.AsyncBoxView.getLeftInset();javax.swing.text.CompositeView.getLeftInset(),;0.50;0.50
getLegalValues,2,0.853826722,"Returns an unmodifiable Set of legal values for the parameter described by this OpenMBeanParameterInfoSupport instance, if specified, or null otherwise.",;javax.management.openmbean.OpenMBeanAttributeInfoSupport.getLegalValues();javax.management.openmbean.OpenMBeanParameterInfoSupport.getLegalValues(),;0.85;0.85
getLine,2,0.5,Obtains the audio line that is the source of this event.,;javax.sound.sampled.AudioSystem.getLine(Line.Info);javax.sound.sampled.LineEvent.getLine(),;0.50;0.50
getLineBuffer,2,1,Gives access to a buffer that can be used to fetch text from the associated document.,;javax.swing.text.PlainView.getLineBuffer();javax.swing.text.WrappedPlainView.getLineBuffer(),;1.00;1.00
getList,2,0.5,Implementation of ComboPopup.getList().,;javax.swing.SpinnerListModel.getList();javax.swing.plaf.basic.BasicComboPopup.getList(),;0.50;0.50
getListCellRendererComponent,2,1,Description copied from interface:ListCellRenderer,";javax.swing.DefaultListCellRenderer.getListCellRendererComponent(JList&lt;?&gt;,Object,int,boolean,boolean);javax.swing.plaf.basic.BasicComboBoxRenderer.getListCellRendererComponent(JList,Object,int,boolean,boolean)",;1.00;1.00
getListenerCount,2,0.765848358,Returns the total number of listeners of the supplied type for this listener list.,;javax.swing.event.EventListenerList.getListenerCount();javax.swing.event.EventListenerList.getListenerCount(Class&lt;?&gt;),;0.76;0.77
getListSelectionListeners,2,0.669565881,Returns an array of all the list selection listeners registered on this DefaultListSelectionModel.,;javax.swing.DefaultListSelectionModel.getListSelectionListeners();javax.swing.JList.getListSelectionListeners(),;0.67;0.67
getLocalCertificates,2,0.972185803,"Returns the certificate(s) that were sent to the server during handshaking. Note: This method is useful only when using certificate-based cipher suites. When multiple certificates are available for use in a handshake, the implementation chooses what it considers the ""best"" certificate chain available, and transmits that to the other side. This method allows the caller to know which certificate chain was actually sent.",;javax.net.ssl.HandshakeCompletedEvent.getLocalCertificates();javax.net.ssl.HttpsURLConnection.getLocalCertificates(),;0.97;0.97
getLocationOnScreen,2,0.5,"Returns the absolute x, y position of the event. In a virtual device multi-screen environment in which the desktop area could span multiple physical screen devices, these coordinates are relative to the virtual coordinate system. Otherwise, these coordinates are relative to the coordinate system associated with the Component's GraphicsConfiguration.",;java.awt.Component.getLocationOnScreen();java.awt.event.MouseEvent.getLocationOnScreen(),;0.50;0.50
getLogicalHighlightShape,2,0.540261036,"Returns a Shape enclosing the logical selection in the specified range, extended to the specified bounds. If the selection range includes the first logical character, the selection is extended to the portion of bounds before the start of this TextLayout. If the range includes the last logical character, the selection is extended to the portion of bounds after the end of this TextLayout. The height (width on vertical lines) of the selection is always extended to bounds. The selection can be discontiguous on lines with mixed-direction text. Only those characters in the logical range between start and limit appear selected. For example, consider the text 'ABCdef' where capital letters indicate right-to-left text, rendered on a right-to-left line, with a logical selection from 0 to 4 ('ABCd'). The text appears as follows, with bold standing in for the selection, and underlining for the extension: defCBA The selection is discontiguous because the selected characters are visually discontiguous. Also note that since the range includes the first logical character (A), the selection is extended to the portion of the bounds before the start of the layout, which in this case (a right-to-left line) is the right portion of the bounds.",";java.awt.font.TextLayout.getLogicalHighlightShape(int,int,Rectangle2D);java.awt.font.TextLayout.getLogicalHighlightShape(int,int)",;0.54;0.50
getLogicalStyle,2,0.792829801,"Fetches the logical style assigned to the paragraph represented by the current position of the caret, or null.",;javax.swing.JTextPane.getLogicalStyle();javax.swing.text.DefaultStyledDocument.getLogicalStyle(int),;0.79;0.79
getMainAttributes,2,0.730868315,Returns the main Attributes for the JAR file for this connection.,;java.net.JarURLConnection.getMainAttributes();java.util.jar.Manifest.getMainAttributes(),;0.73;0.73
getMark,2,0.5,"Fetches the current position of the mark. If there is a selection, the dot and mark will not be the same.",;javax.swing.event.CaretEvent.getMark();javax.swing.text.DefaultCaret.getMark(),;0.50;0.50
getMask,2,0.5,Returns the formatting mask.,;java.awt.image.PackedColorModel.getMask(int);javax.swing.text.MaskFormatter.getMask(),;0.50;0.50
getMatchingMimeHeaders,2,1,Retrieves all MimeHeader objects that match a name in the given array.,;javax.xml.soap.AttachmentPart.getMatchingMimeHeaders(String[]);javax.xml.soap.SOAPPart.getMatchingMimeHeaders(String[]),;1.00;1.00
getMaxCharactersPerLineCount,2,0.654754601,Returns the maximum number of characters to place on a line in a message. Default is to return Integer.MAX_VALUE. The value can be changed by overriding this method in a subclass.,;javax.swing.JOptionPane.getMaxCharactersPerLineCount();javax.swing.plaf.basic.BasicOptionPaneUI.getMaxCharactersPerLineCount(),;0.65;0.57
getMaxCharBounds,2,0.68398413,Returns the bounds for the character with the maximum bounds as defined in the specified FontRenderContext. Note: The returned bounds is in baseline-relative coordinates (see class notes).,;java.awt.Font.getMaxCharBounds(FontRenderContext);java.awt.FontMetrics.getMaxCharBounds(Graphics),;0.68;0.65
getMaximumFractionDigits,2,0.68178691,"Gets the maximum number of digits allowed in the fraction portion of a number. For formatting numbers other than BigInteger and BigDecimal objects, the lower of the return value and 340 is used.",;java.text.DecimalFormat.getMaximumFractionDigits();java.text.NumberFormat.getMaximumFractionDigits(),;0.68;0.62
getMaximumIntegerDigits,2,0.68178691,"Gets the maximum number of digits allowed in the integer portion of a number. For formatting numbers other than BigInteger and BigDecimal objects, the lower of the return value and 309 is used.",;java.text.DecimalFormat.getMaximumIntegerDigits();java.text.NumberFormat.getMaximumIntegerDigits(),;0.68;0.62
getMaxSelectionIndex,2,0.613850324,"Returns the largest selected cell index, or -1 if the selection is empty. This is a cover method that delegates to the method of the same name on the list's selection model.",;javax.swing.DefaultListSelectionModel.getMaxSelectionIndex();javax.swing.JList.getMaxSelectionIndex(),;0.56;0.61
getMaxSelectionRow,2,0.5,"Returns the largest value obtained from the RowMapper for the current set of selected TreePaths. If nothing is selected, or there is no RowMapper, this will return -1.",;javax.swing.JTree.getMaxSelectionRow();javax.swing.tree.DefaultTreeSelectionModel.getMaxSelectionRow(),;0.50;0.50
getMBeanCount,2,1,Description copied from interface:RMIConnection,;javax.management.remote.rmi.RMIConnectionImpl.getMBeanCount(Subject);javax.management.remote.rmi.RMIConnectionImpl_Stub.getMBeanCount(Subject),;1.00;1.00
getMBeansFromURL,2,1,Loads a text file containing MLET tags that define the MBeans to be added to the MBean server. The location of the text file is specified by a URL. The MBeans specified in the MLET file will be instantiated and registered in the MBean server.,;javax.management.loading.MLet.getMBeansFromURL(URL);javax.management.loading.MLet.getMBeansFromURL(String),;1.00;1.00
getMediaWhitePoint,2,0.5,Returns an array that contains the components of the profile's mediaWhitePointTag.,;java.awt.color.ICC_ProfileGray.getMediaWhitePoint();java.awt.color.ICC_ProfileRGB.getMediaWhitePoint(),;0.50;0.50
getMenu,2,0.5,Returns the menu at the specified position in the menu bar.,;java.awt.MenuBar.getMenu(int);javax.swing.JMenuBar.getMenu(int),;0.50;0.50
getMenuBackground,2,0.620392175,Returns the menu background color of the current theme. This is a cover method for getCurrentTheme().getMenuBackground().,;javax.swing.plaf.metal.MetalLookAndFeel.getMenuBackground();javax.swing.plaf.metal.MetalTheme.getMenuBackground(),;0.62;0.61
getMenuCount,2,0.5,Returns the number of items in the menu bar.,;java.awt.MenuBar.getMenuCount();javax.swing.JMenuBar.getMenuCount(),;0.50;0.50
getMenuForeground,2,0.620392175,Returns the menu foreground color of the current theme. This is a cover method for getCurrentTheme().getMenuForeground().,;javax.swing.plaf.metal.MetalLookAndFeel.getMenuForeground();javax.swing.plaf.metal.MetalTheme.getMenuForeground(),;0.62;0.61
getMenuKeyListeners,2,0.895533254,Returns an array of all the MenuKeyListeners added to this JPopupMenu with addMenuKeyListener().,;javax.swing.JMenuItem.getMenuKeyListeners();javax.swing.JPopupMenu.getMenuKeyListeners(),;0.90;0.90
getMenuSelectedBackground,2,0.646414901,Returns the menu selected background color of the current theme. This is a cover method for getCurrentTheme().getMenuSelectedBackground().,;javax.swing.plaf.metal.MetalLookAndFeel.getMenuSelectedBackground();javax.swing.plaf.metal.MetalTheme.getMenuSelectedBackground(),;0.65;0.64
getMenuSelectedForeground,2,0.646414901,Returns the menu selected foreground color of the current theme. This is a cover method for getCurrentTheme().getMenuSelectedForeground().,;javax.swing.plaf.metal.MetalLookAndFeel.getMenuSelectedForeground();javax.swing.plaf.metal.MetalTheme.getMenuSelectedForeground(),;0.65;0.64
getMenuSelectionManager,2,1,Returns the current menu selection manager.,;javax.swing.event.MenuDragMouseEvent.getMenuSelectionManager();javax.swing.event.MenuKeyEvent.getMenuSelectionManager(),;1.00;1.00
getMessageDigest,2,1,Returns the message digest associated with this stream.,;java.security.DigestInputStream.getMessageDigest();java.security.DigestOutputStream.getMessageDigest(),;1.00;1.00
getMetadata,2,0.5,Returns a list of metadata documents for the service.,;javax.imageio.IIOImage.getMetadata();javax.xml.ws.Endpoint.getMetadata(),;0.50;0.50
getMethodName,2,0.549589803,"Returns the name of the method containing the execution point represented by this stack trace element. If the execution point is contained in an instance or class initializer, this method will return the appropriate special method name, &lt;init&gt; or &lt;clinit&gt;, as per Section 3.9 of The Java Virtual Machine Specification.",;java.beans.Statement.getMethodName();java.lang.StackTraceElement.getMethodName(),;0.52;0.55
getMGFAlgorithm,2,1,Returns the mask generation function algorithm name.,;java.security.spec.PSSParameterSpec.getMGFAlgorithm();javax.crypto.spec.OAEPParameterSpec.getMGFAlgorithm(),;1.00;1.00
getMGFParameters,2,1,Returns the parameters for the mask generation function.,;java.security.spec.PSSParameterSpec.getMGFParameters();javax.crypto.spec.OAEPParameterSpec.getMGFParameters(),;1.00;1.00
getMicrosecondLength,2,0.5,"Obtains the duration of this sequence, expressed in microseconds.",;javax.sound.midi.MidiFileFormat.getMicrosecondLength();javax.sound.midi.Sequence.getMicrosecondLength(),;0.50;0.50
getMimeEncoder,2,0.809901066,Returns a Base64.Encoder that encodes using the MIME type base64 encoding scheme with specified line length and line separators.,";java.util.Base64.getMimeEncoder();java.util.Base64.getMimeEncoder(int,byte[])",;0.79;0.81
getMimeHeader,2,0.719658018,Gets all the values of the MimeHeader object in this SOAPPart object that is identified by the given String.,;javax.xml.soap.AttachmentPart.getMimeHeader(String);javax.xml.soap.SOAPPart.getMimeHeader(String),;0.71;0.72
getMimeTypes,2,0.705812262,"Get all the MIME types known to this command map. If the command map doesn't support this operation, null is returned.",;javax.activation.CommandMap.getMimeTypes();javax.activation.MailcapCommandMap.getMimeTypes(),;0.71;0.65
getMinimumFractionDigits,2,0.68178691,"Gets the minimum number of digits allowed in the fraction portion of a number. For formatting numbers other than BigInteger and BigDecimal objects, the lower of the return value and 340 is used.",;java.text.DecimalFormat.getMinimumFractionDigits();java.text.NumberFormat.getMinimumFractionDigits(),;0.68;0.62
getMinimumIntegerDigits,2,0.68178691,"Gets the minimum number of digits allowed in the integer portion of a number. For formatting numbers other than BigInteger and BigDecimal objects, the lower of the return value and 309 is used.",;java.text.DecimalFormat.getMinimumIntegerDigits();java.text.NumberFormat.getMinimumIntegerDigits(),;0.68;0.62
getMinSelectionIndex,2,0.613850324,"Returns the smallest selected cell index, or -1 if the selection is empty. This is a cover method that delegates to the method of the same name on the list's selection model.",;javax.swing.DefaultListSelectionModel.getMinSelectionIndex();javax.swing.JList.getMinSelectionIndex(),;0.56;0.61
getMinSelectionRow,2,0.5,"Returns the smallest value obtained from the RowMapper for the current set of selected TreePaths. If nothing is selected, or there is no RowMapper, this will return -1.",;javax.swing.JTree.getMinSelectionRow();javax.swing.tree.DefaultTreeSelectionModel.getMinSelectionRow(),;0.50;0.50
getMixer,2,0.5,Obtains an instance of the mixer represented by the info object. The full set of the mixer info objects that represent the mixers supported by this MixerProvider may be obtained through the getMixerInfo method. Use the isMixerSupported method to test whether this MixerProvider supports a particular mixer.,;javax.sound.sampled.AudioSystem.getMixer(Mixer.Info);javax.sound.sampled.spi.MixerProvider.getMixer(Mixer.Info),;0.50;0.50
getMixerInfo,2,0.5,Obtains the set of info objects representing the mixer or mixers provided by this MixerProvider. The isMixerSupported method returns true for all the info objects returned by this method. The corresponding mixer instances for the info objects are returned by the getMixer method.,;javax.sound.sampled.AudioSystem.getMixerInfo();javax.sound.sampled.spi.MixerProvider.getMixerInfo(),;0.50;0.50
getModelRowCount,2,1,Returns the number of rows in the underlying model.,;javax.swing.DefaultRowSorter.getModelRowCount();javax.swing.RowSorter.getModelRowCount(),;1.00;1.00
getModifiersEx,2,1,"Returns the extended modifier mask for this event. Extended modifiers are the modifiers that ends with the _DOWN_MASK suffix, such as ALT_DOWN_MASK, BUTTON1_DOWN_MASK, and others. Extended modifiers represent the state of all modal keys, such as ALT, CTRL, META, and the mouse buttons just after the event occurred. For example, if the user presses button 1 followed by button 2, and then releases them in the same order, the following sequence of events is generated: MOUSE_PRESSED: BUTTON1_DOWN_MASK MOUSE_PRESSED: BUTTON1_DOWN_MASK | BUTTON2_DOWN_MASK MOUSE_RELEASED: BUTTON2_DOWN_MASK MOUSE_CLICKED: BUTTON2_DOWN_MASK MOUSE_RELEASED: MOUSE_CLICKED: It is not recommended to compare the return value of this method using == because new modifiers can be added in the future. For example, the appropriate way to check that SHIFT and BUTTON1 are down, but CTRL is up is demonstrated by the following code: int onmask = SHIFT_DOWN_MASK | BUTTON1_DOWN_MASK; int offmask = CTRL_DOWN_MASK; if ((event.getModifiersEx() &amp; (onmask | offmask)) == onmask) { ... } The above code will work even if new modifiers are added.",;java.awt.event.InputEvent.getModifiersEx();java.awt.event.MouseEvent.getModifiersEx(),;1.00;1.00
getMostRecentFocusOwner,2,0.673959506,"Returns the child Component of this Window that will receive the focus when this Window is focused. If this Window is currently focused, this method returns the same Component as getFocusOwner(). If this Window is not focused, then the child Component that most recently requested focus will be returned. If no child Component has ever requested focus, and this is a focusable Window, then this Window's initial focusable Component is returned. If no child Component has ever requested focus, and this is a non-focusable Window, null is returned.",;java.awt.Window.getMostRecentFocusOwner();javax.swing.JInternalFrame.getMostRecentFocusOwner(),;0.67;0.67
getMouseListeners,2,0.951801002,Returns an array of all the mouse listeners registered on this TrayIcon.,;java.awt.Component.getMouseListeners();java.awt.TrayIcon.getMouseListeners(),;0.95;0.95
getMouseMotionListeners,2,0.956083955,Returns an array of all the mouse-motion listeners registered on this TrayIcon.,;java.awt.Component.getMouseMotionListeners();java.awt.TrayIcon.getMouseMotionListeners(),;0.96;0.96
getMousePosition,2,0.648381848,"Returns the position of the mouse pointer in this Component's coordinate space if the Component is directly under the mouse pointer, otherwise returns null. If the Component is not showing on the screen, this method returns null even if the mouse pointer is above the area where the Component would be displayed. If the Component is partially or fully obscured by other Components or native windows, this method returns a non-null value only if the mouse pointer is located above the unobscured part of the Component. For Containers it returns a non-null value if the mouse is above the Container itself or above any of its descendants. Use Container.getMousePosition(boolean) if you need to exclude children. Sometimes the exact mouse coordinates are not important, and the only thing that matters is whether a specific Component is under the mouse pointer. If the return value of this method is null, mouse pointer is not directly above the Component.",;java.awt.Component.getMousePosition();java.awt.Container.getMousePosition(boolean),;0.65;0.63
getNameConstraints,2,0.83024182,"Returns the name constraints parameter. The specified name constraints are associated with this trust anchor and are intended to be used as additional constraints when validating an X.509 certification path. The name constraints are returned as a byte array. This byte array contains the DER encoded form of the name constraints, as they would appear in the NameConstraints structure defined in RFC 3280 and X.509. The ASN.1 notation for this structure is supplied in the documentation for TrustAnchor(X509Certificate trustedCert, byte[] nameConstraints) . Note that the byte array returned is cloned to protect against subsequent modifications.",;java.security.cert.TrustAnchor.getNameConstraints();java.security.cert.X509CertSelector.getNameConstraints(),;0.83;0.83
getNameInNamespace,2,0.5,Retrieves the full name of this binding. The full name is the absolute name of this binding within its own namespace. See Context.getNameInNamespace(). In naming systems for which the notion of full name does not apply to this binding an UnsupportedOperationException is thrown. This exception is also thrown when a service provider written before the introduction of the method is in use. The string returned by this method is not a JNDI composite name and should not be passed directly to context methods.,;javax.naming.InitialContext.getNameInNamespace();javax.naming.NameClassPair.getNameInNamespace(),;0.50;0.50
getNameParser,2,1,Description copied from interface:Context,;javax.naming.InitialContext.getNameParser(String);javax.naming.InitialContext.getNameParser(Name),;1.00;1.00
getNamespaceMap,2,1,Returns a map of namespace prefixes. Each key is a namespace prefix String that maps to a corresponding namespace URI String. This implementation returns an unmodifiable map.,;javax.xml.crypto.dsig.spec.XPathFilterParameterSpec.getNamespaceMap();javax.xml.crypto.dsig.spec.XPathType.getNamespaceMap(),;1.00;1.00
getNamespacePrefix,2,0.5,Description copied from interface:XMLStreamReader,";javax.xml.crypto.dom.DOMCryptoContext.getNamespacePrefix(String,String);javax.xml.stream.util.StreamReaderDelegate.getNamespacePrefix(int)",;0.50;0.50
getNestingKind,2,0.5,This implementation returns null. Subclasses can change this behavior as long as the contract of JavaFileObject is obeyed.,;javax.tools.ForwardingJavaFileObject.getNestingKind();javax.tools.SimpleJavaFileObject.getNestingKind(),;0.50;0.50
getNextEntry,2,0.706219128,"Reads the next ZIP file entry and positions the stream at the beginning of the entry data. If verification has been enabled, any invalid signature detected while positioning the stream for the next entry will result in an exception.",;java.util.jar.JarInputStream.getNextEntry();java.util.zip.ZipInputStream.getNextEntry(),;0.71;0.64
getNextMatch,2,0.5,"Returns the TreePath to the next tree element that begins with a prefix. To handle the conversion of a TreePath into a String, convertValueToText is used.",";javax.swing.JList.getNextMatch(String,int,Position.Bias);javax.swing.JTree.getNextMatch(String,int,Position.Bias)",;0.50;0.50
getNextNorthSouthVisualPositionFrom,2,0.799291303,"Returns the next visual position for the cursor, in either the north or south direction.",";javax.swing.text.CompositeView.getNextNorthSouthVisualPositionFrom(int,Position.Bias,Shape,int,Position.Bias[]);javax.swing.text.ParagraphView.getNextNorthSouthVisualPositionFrom(int,Position.Bias,Shape,int,Position.Bias[])",;0.80;0.80
getNonMatchingMimeHeaders,2,1,Retrieves all MimeHeader objects whose name does not match a name in the given array.,;javax.xml.soap.AttachmentPart.getNonMatchingMimeHeaders(String[]);javax.xml.soap.SOAPPart.getNonMatchingMimeHeaders(String[]),;1.00;1.00
getNotAfter,2,1,Gets the notAfter date from the validity period of the certificate. See getNotBefore for relevant ASN.1 definitions.,;java.security.cert.X509Certificate.getNotAfter();javax.security.cert.X509Certificate.getNotAfter(),;1.00;1.00
getNotBefore,2,1,"Gets the notBefore date from the validity period of the certificate. The relevant ASN.1 definitions are: validity Validity Validity ::= SEQUENCE { notBefore CertificateValidityDate, notAfter CertificateValidityDate } CertificateValidityDate ::= CHOICE { utcTime UTCTime, generalTime GeneralizedTime }",;java.security.cert.X509Certificate.getNotBefore();javax.security.cert.X509Certificate.getNotBefore(),;1.00;1.00
getNumericValue,2,0.904224451,"Returns the int value that the specified Unicode character represents. For example, the character '\u216C' (the roman numeral fifty) will return an int with a value of 50. The letters A-Z in their uppercase ('\u0041' through '\u005A'), lowercase ('\u0061' through '\u007A'), and full width variant ('\uFF21' through '\uFF3A' and '\uFF41' through '\uFF5A') forms have numeric values from 10 through 35. This is independent of the Unicode specification, which does not assign numeric values to these char values. If the character does not have a numeric value, then -1 is returned. If the character has a numeric value that cannot be represented as a nonnegative integer (for example, a fractional value), then -2 is returned. Note: This method cannot handle supplementary characters. To support all Unicode characters, including supplementary characters, use the getNumericValue(int) method.",;java.lang.Character.getNumericValue(char);java.lang.Character.getNumericValue(int),;0.90;0.90
getNumGlyphs,2,0.654131382,Returns the number of glyphs in this Font. Glyph codes for this Font range from 0 to getNumGlyphs() - 1.,;java.awt.Font.getNumGlyphs();java.awt.font.GlyphVector.getNumGlyphs(),;0.65;0.61
getNumThumbnails,2,0.525259185,"Returns the number of thumbnail preview images associated with the given image. If the format does not support thumbnails, (readerSupportsThumbnails returns false), 0 will be returned regardless of whether an input source has been set or whether imageIndex is in bounds. The default implementation returns 0 without checking its argument.",;javax.imageio.IIOImage.getNumThumbnails();javax.imageio.ImageReader.getNumThumbnails(int),;0.50;0.53
getObjectInstance,2,1,Description copied from interface:RMIConnection,";javax.management.remote.rmi.RMIConnectionImpl.getObjectInstance(ObjectName,Subject);javax.management.remote.rmi.RMIConnectionImpl_Stub.getObjectInstance(ObjectName,Subject)",;1.00;1.00
getObservedAttribute,2,0.5,Gets the observed attribute of this monitor notification.,;javax.management.monitor.Monitor.getObservedAttribute();javax.management.monitor.MonitorNotification.getObservedAttribute(),;0.50;0.50
getObservedObject,2,0.5,Gets the observed object of this monitor notification.,;javax.management.monitor.Monitor.getObservedObject();javax.management.monitor.MonitorNotification.getObservedObject(),;0.50;0.50
getOffsetAfter,2,0.617942241,Gets the offset after the transition. This is the offset in use on and after the instant of the transition.,;java.time.zone.ZoneOffsetTransition.getOffsetAfter();java.time.zone.ZoneOffsetTransitionRule.getOffsetAfter(),;0.62;0.55
getOffsetBefore,2,0.632300798,Gets the offset before the transition. This is the offset in use before the instant of the transition.,;java.time.zone.ZoneOffsetTransition.getOffsetBefore();java.time.zone.ZoneOffsetTransitionRule.getOffsetBefore(),;0.63;0.57
getOffsets,2,0.554500485,"Returns the offsets in the given array. The array is also returned for convenience. If offsets is null, a new array will be allocated.",;java.awt.image.DataBuffer.getOffsets();java.awt.image.RescaleOp.getOffsets(float[]),;0.54;0.55
getOldValue,2,0.625664682,Gets the old value of the attribute which has changed.,;java.beans.PropertyChangeEvent.getOldValue();javax.management.AttributeChangeNotification.getOldValue(),;0.62;0.63
getOpenType,2,0.830316432,Returns the open type for the values of the parameter described by this OpenMBeanParameterInfoSupport instance.,;javax.management.openmbean.OpenMBeanAttributeInfoSupport.getOpenType();javax.management.openmbean.OpenMBeanParameterInfoSupport.getOpenType(),;0.83;0.83
getOperation,2,0.5,Description copied from interface:ModelMBeanInfo,;java.rmi.server.Operation.getOperation();javax.management.modelmbean.ModelMBeanInfoSupport.getOperation(String),;0.00;0.50
getOptionType,2,0.5,Returns the type of options that are displayed.,;javax.security.auth.callback.ConfirmationCallback.getOptionType();javax.swing.JOptionPane.getOptionType(),;0.50;0.50
getOriginatingProvider,2,0.5,"Returns the ImageWriterSpi object that created this ImageWriter, or null if this object was not created through the IIORegistry. The default implementation returns the value of the originatingProvider instance variable.",;javax.imageio.ImageReader.getOriginatingProvider();javax.imageio.ImageWriter.getOriginatingProvider(),;0.50;0.50
getOutputFormat,2,0.5,Queries the factory for the document format that is emitted by printers obtained from this factory.,;javax.print.StreamPrintService.getOutputFormat();javax.print.StreamPrintServiceFactory.getOutputFormat(),;0.50;0.50
getOutputSize,2,0.796209929,"Returns the length in bytes that an output buffer would need to be in order to hold the result of the next update or doFinal operation, given the input length inputLen (in bytes). This call takes into account any unprocessed (buffered) data from a previous update call, padding, and AEAD tagging. The actual output length of the next update or doFinal call may be smaller than the length returned by this method.",;javax.crypto.Cipher.getOutputSize(int);javax.crypto.ExemptionMechanism.getOutputSize(int),;0.80;0.78
getPackages,2,0.5,"Get all the packages currently known for the caller's ClassLoader instance. Those packages correspond to classes loaded via or accessible by name to that ClassLoader instance. If the caller's ClassLoader instance is the bootstrap ClassLoader instance, which may be represented by null in some implementations, only packages corresponding to classes loaded by the bootstrap ClassLoader instance will be returned.",;java.lang.ClassLoader.getPackages();java.lang.Package.getPackages(),;0.50;0.50
getPageFormat,2,0.5,"Calculates a PageFormat with values consistent with those supported by the current PrintService for this job (ie the value returned by getPrintService()) and media, printable area and orientation contained in attributes. Calling this method does not update the job. It is useful for clients that have a set of attributes obtained from printDialog(PrintRequestAttributeSet attributes) and need a PageFormat to print a Pageable object.",;java.awt.print.Book.getPageFormat(int);java.awt.print.PrinterJob.getPageFormat(PrintRequestAttributeSet),;0.50;0.50
getPaint,2,0.5,Returns the Paint object used to generate a color during the border rendering.,;java.awt.Graphics2D.getPaint();javax.swing.border.StrokeBorder.getPaint(),;0.50;0.50
getParameterName,2,0.965919241,Customization hook: Get the name that will be used for the sequence MBeanParameterInfo of the MBeanOperationInfo returned by this MBean. Subclasses may redefine this method in order to supply their custom parameter name. The default implementation returns param.getName().,";javax.management.StandardMBean.getParameterName(MBeanConstructorInfo,MBeanParameterInfo,int);javax.management.StandardMBean.getParameterName(MBeanOperationInfo,MBeanParameterInfo,int)",;0.97;0.97
getParameterSpec,2,0.5,Returns the cipher algorithm parameter specification.,;java.security.AlgorithmParameters.getParameterSpec(Class&lt;T&gt;);javax.crypto.spec.PBEParameterSpec.getParameterSpec(),;0.50;0.50
getPermission,2,0.516140912,"Returns a permission object representing the permission necessary to make the connection represented by this object. This method returns null if no permission is required to make the connection. By default, this method returns java.security.AllPermission. Subclasses should override this method and return the permission that best represents the permission required to make a a connection to the URL. For example, a URLConnection representing a file: URL would return a java.io.FilePermission object. The permission returned may dependent upon the state of the connection. For example, the permission before connecting may be different from that after connecting. For example, an HTTP sever, say foo.com, may redirect the connection to a different host, say bar.com. Before connecting the permission returned by the connection will represent the permission needed to connect to foo.com, while the permission returned after connecting will be to bar.com. Permissions are generally used for two purposes: to protect caches of objects obtained through URLConnections, and to check the right of a recipient to learn about a particular URL. In the first case, the permission should be obtained after the object has been obtained. For example, in an HTTP connection, this will represent the permission to connect to the host from which the data was ultimately fetched. In the second case, the permission should be obtained and tested before connecting.",;java.net.HttpURLConnection.getPermission();java.net.URLConnection.getPermission(),;0.50;0.52
getPixelBounds,2,0.703250502,"Returns the pixel bounds of this GlyphVector when rendered in a graphics with the given FontRenderContext at the given location. The renderFRC need not be the same as the FontRenderContext of this GlyphVector, and can be null. If it is null, the FontRenderContext of this GlyphVector is used. The default implementation returns the visual bounds, offset to x, y and rounded out to the next integer value (i.e. returns an integer rectangle which encloses the visual bounds) and ignores the FRC. Subclassers should override this method.",";java.awt.font.GlyphVector.getPixelBounds(FontRenderContext,float,float);java.awt.font.TextLayout.getPixelBounds(FontRenderContext,float,float)",;0.70;0.68
getPlatformMXBean,2,0.833800875,"Returns the platform MXBean proxy for mxbeanInterface which is specified to have one single instance in a Java virtual machine and the proxy will forward the method calls through the given MBeanServerConnection. This method may return null if the management interface is not implemented in the Java virtual machine being monitored (for example, a Java virtual machine with no compilation system does not implement CompilationMXBean); otherwise, this method is equivalent to calling: getPlatformMXBeans(connection, mxbeanInterface).get(0);",";java.lang.management.ManagementFactory.getPlatformMXBean(Class&lt;T&gt;);java.lang.management.ManagementFactory.getPlatformMXBean(MBeanServerConnection,Class&lt;T&gt;)",;0.83;0.83
getPlatformMXBeans,2,0.880326982,"Returns the list of the platform MXBean proxies for forwarding the method calls of the mxbeanInterface through the given MBeanServerConnection. The returned list may contain zero, one, or more instances. The number of instances in the returned list is defined in the specification of the given management interface. The order is undefined and there is no guarantee that the list returned is in the same order as previous invocations.",";java.lang.management.ManagementFactory.getPlatformMXBeans(Class&lt;T&gt;);java.lang.management.ManagementFactory.getPlatformMXBeans(MBeanServerConnection,Class&lt;T&gt;)",;0.88;0.88
getPointSize,2,0.5,"Given a string such as ""+2"", ""-2"", or ""2"", returns a point size value.",;javax.swing.text.html.StyleSheet.getPointSize(int);javax.swing.text.html.StyleSheet.getPointSize(String),;0.50;0.50
getPool,2,0.567004129,"Returns the pool hosting the current task execution, or null if this task is executing outside of any ForkJoinPool.",;java.util.concurrent.ForkJoinTask.getPool();java.util.concurrent.ForkJoinWorkerThread.getPool(),;0.57;0.53
getPoolSize,2,0.5,Returns the current number of threads in the pool.,;java.util.concurrent.ForkJoinPool.getPoolSize();java.util.concurrent.ThreadPoolExecutor.getPoolSize(),;0.50;0.50
getPopupMenu,2,0.5,"Returns the popupmenu associated with this menu. If there is no popupmenu, it will create one.",;java.awt.TrayIcon.getPopupMenu();javax.swing.JMenu.getPopupMenu(),;0.50;0.50
getPopupMenuListeners,2,0.895533254,Returns an array of all the PopupMenuListeners added to this JMenuItem with addPopupMenuListener().,;javax.swing.JComboBox.getPopupMenuListeners();javax.swing.JPopupMenu.getPopupMenuListeners(),;0.90;0.90
getPorts,2,1,Returns an Iterator for the list of QNames of service endpoints grouped by this service,;javax.xml.ws.Service.getPorts();javax.xml.ws.spi.ServiceDelegate.getPorts(),;1.00;1.00
getPositionsInRange,2,0.858499394,"Returns a Vector containing instances of UndoPosRef for the Positions in the range offset to offset + length. If v is not null the matching Positions are placed in there. The vector with the resulting Positions are returned. This is meant for internal usage, and is generally not of interest to subclasses.",";javax.swing.text.GapContent.getPositionsInRange(Vector,int,int);javax.swing.text.StringContent.getPositionsInRange(Vector,int,int)",;0.84;0.86
getPreferredHeight,2,1,Returns the preferred height.,;javax.swing.tree.AbstractLayoutCache.getPreferredHeight();javax.swing.tree.VariableHeightLayoutCache.getPreferredHeight(),;1.00;1.00
getPrefixes,2,0.649838079,"Return an enumeration of all prefixes for a given URI whose declarations are active in the current context. This includes declarations from parent contexts that have not been overridden. This method returns prefixes mapped to a specific Namespace URI. The xml: prefix will be included. If you want only one prefix that's mapped to the Namespace URI, and you don't care which one you get, use the getPrefix method instead.Note: the empty (default) prefix is never included in this enumeration; to check for the presence of a default Namespace, use the getURI method with an argument of """".",;org.xml.sax.helpers.NamespaceSupport.getPrefixes();org.xml.sax.helpers.NamespaceSupport.getPrefixes(String),;0.62;0.65
getPreviousSibling,2,0.614114173,Returns the previous sibling of this node in the parent's children array. Returns null if this node has no parent or is the parent's first child. This method performs a linear search that is O(n) where n is the number of children.,;javax.imageio.metadata.IIOMetadataNode.getPreviousSibling();javax.swing.tree.DefaultMutableTreeNode.getPreviousSibling(),;0.56;0.61
getPrimaryControl,2,0.620392175,Returns the primary control color of the current theme. This is a cover method for getCurrentTheme().getPrimaryControl().,;javax.swing.plaf.metal.MetalLookAndFeel.getPrimaryControl();javax.swing.plaf.metal.MetalTheme.getPrimaryControl(),;0.62;0.61
getPrimaryControlDarkShadow,2,0.668506463,Returns the primary control dark shadow color of the current theme. This is a cover method for getCurrentTheme().getPrimaryControlDarkShadow().,;javax.swing.plaf.metal.MetalLookAndFeel.getPrimaryControlDarkShadow();javax.swing.plaf.metal.MetalTheme.getPrimaryControlDarkShadow(),;0.67;0.66
getPrimaryControlHighlight,2,0.646414901,Returns the primary control highlight color of the current theme. This is a cover method for getCurrentTheme().getPrimaryControlHighlight().,;javax.swing.plaf.metal.MetalLookAndFeel.getPrimaryControlHighlight();javax.swing.plaf.metal.MetalTheme.getPrimaryControlHighlight(),;0.65;0.64
getPrimaryControlInfo,2,0.646414901,Returns the primary control info color of the current theme. This is a cover method for getCurrentTheme().getPrimaryControlInfo().,;javax.swing.plaf.metal.MetalLookAndFeel.getPrimaryControlInfo();javax.swing.plaf.metal.MetalTheme.getPrimaryControlInfo(),;0.65;0.64
getPrimaryControlShadow,2,0.646414901,Returns the primary control shadow color of the current theme. This is a cover method for getCurrentTheme().getPrimaryControlShadow().,;javax.swing.plaf.metal.MetalLookAndFeel.getPrimaryControlShadow();javax.swing.plaf.metal.MetalTheme.getPrimaryControlShadow(),;0.65;0.64
getPrimaryType,2,0.5,Retrieve the primary type of this object.,;java.awt.datatransfer.DataFlavor.getPrimaryType();javax.activation.MimeType.getPrimaryType(),;0.50;0.50
getPrimeExponentP,2,1.22E-77,Returns the primeExponentP.,;java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPrimeExponentP();java.security.spec.RSAPrivateCrtKeySpec.getPrimeExponentP(),;0.00;0.00
getPrimeExponentQ,2,1.22E-77,Returns the primeExponentQ.,;java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPrimeExponentQ();java.security.spec.RSAPrivateCrtKeySpec.getPrimeExponentQ(),;0.00;0.00
getPrimeP,2,1.22E-77,Returns the primeP.,;java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPrimeP();java.security.spec.RSAPrivateCrtKeySpec.getPrimeP(),;0.00;0.00
getPrimeQ,2,1.22E-77,Returns the primeQ.,;java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPrimeQ();java.security.spec.RSAPrivateCrtKeySpec.getPrimeQ(),;0.00;0.00
getPrincipal,2,0.5,"Returns the service principal this KeyTab object is bound to. Returns null if it's not bound. Please note the deprecated constructors create a KeyTab object bound for some unknown principal. In this case, this method also returns null. User can call isBound() to verify this case.",;javax.security.auth.kerberos.KerberosKey.getPrincipal();javax.security.auth.kerberos.KeyTab.getPrincipal(),;0.50;0.50
getPrintable,2,0.5,"Returns a Printable to use for printing the content of this JTextComponent. The returned Printable prints the document as it looks on the screen except being reformatted to fit the paper. The returned Printable can be wrapped inside another Printable in order to create complex reports and documents. The returned Printable shares the document with this JTextComponent. It is the responsibility of the developer to ensure that the document is not mutated while this Printable is used. Printing behavior is undefined when the document is mutated during printing. Page header and footer text can be added to the output by providing MessageFormat arguments. The printing code requests Strings from the formats, providing a single item which may be included in the formatted string: an Integer representing the current page number. The returned Printable when printed, formats the document content appropriately for the page size. For correct line wrapping the imageable width of all pages must be the same. See PageFormat.getImageableWidth(). This method is thread-safe, although most Swing methods are not. Please see Concurrency in Swing for more information. The returned Printable can be printed on any thread. This implementation returned Printable performs all painting on the Event Dispatch Thread, regardless of what thread it is used on.",";java.awt.print.Book.getPrintable(int);javax.swing.text.JTextComponent.getPrintable(MessageFormat,MessageFormat)",;0.50;0.50
getPrintServices,2,0.596031357,"Locates services that can be positively confirmed to support the combination of attributes and DocFlavors specified. This method is not called directly by applications. Implemented by a service provider, used by the static methods of this class. The results should be the same as obtaining all the PrintServices and querying each one individually on its support for the specified attributes and flavors, but the process can be more efficient by taking advantage of the capabilities of lookup services for the print services.",";javax.print.PrintServiceLookup.getPrintServices(DocFlavor,AttributeSet);javax.print.PrintServiceLookup.getPrintServices()",;0.60;0.51
getPrivateCredentials,2,0.616269967,"Return the Set of private credentials held by this Subject. The returned Set is backed by this Subject's internal private Credential Set. Any modification to the returned Set affects the internal private Credential Set as well. A caller requires permissions to access the Credentials in the returned Set, or to modify the Set itself. A SecurityException is thrown if the caller does not have the proper permissions. While iterating through the Set, a SecurityException is thrown if the caller does not have permission to access a particular Credential. The Iterator is nevertheless advanced to next element in the Set.",;javax.security.auth.Subject.getPrivateCredentials();javax.security.auth.Subject.getPrivateCredentials(Class&lt;T&gt;),;0.62;0.61
getProperties,2,0.5,Returns the property bag for this Endpoint instance.,;java.lang.System.getProperties();javax.xml.ws.Endpoint.getProperties(),;0.50;0.50
getPropertyNames,2,0.607045463,"Returns an array of names recognized by getProperty(String) or null, if no property names are recognized.",;java.awt.image.BufferedImage.getPropertyNames();java.awt.image.renderable.RenderableImageOp.getPropertyNames(),;0.61;0.58
getProtectionParameter,2,0.5,Returns the ProtectionParameters that should be used to obtain the Entry with the given alias. The getKeyStore method must be invoked before this method may be called.,;java.security.DomainLoadStoreParameter.getProtectionParameter();java.security.KeyStore.Builder.getProtectionParameter(String),;0.50;0.50
getPublicCredentials,2,0.666352496,Return a Set of public credentials associated with this Subject that are instances or subclasses of the specified Class. The returned Set is not backed by this Subject's internal public Credential Set. A new Set is created and returned for each method invocation. Modifications to the returned Set will not affect the internal public Credential Set.,;javax.security.auth.Subject.getPublicCredentials();javax.security.auth.Subject.getPublicCredentials(Class&lt;T&gt;),;0.65;0.67
getQTables,2,0.944763018,"Returns a copy of the array of quantization tables set on the most recent call to setEncodeTables, or null if tables are not currently set.",;javax.imageio.plugins.jpeg.JPEGImageReadParam.getQTables();javax.imageio.plugins.jpeg.JPEGImageWriteParam.getQTables(),;0.94;0.94
getQuadrantRotateInstance,2,0.897646966,"Returns a transform that rotates coordinates by the specified number of quadrants around the specified anchor point. This operation is equivalent to calling: AffineTransform.getRotateInstance(numquadrants * Math.PI / 2.0, anchorx, anchory); Rotating by a positive number of quadrants rotates points on the positive X axis toward the positive Y axis.",";java.awt.geom.AffineTransform.getQuadrantRotateInstance(int);java.awt.geom.AffineTransform.getQuadrantRotateInstance(int,double,double)",;0.90;0.90
getQuery,2,0.5,Gets the query part of this URL.,;java.net.URI.getQuery();java.net.URL.getQuery(),;0.50;0.50
getQueue,2,0.577228954,"Returns the task queue used by this executor. Each element of this queue is a ScheduledFuture, including those tasks submitted using execute which are for scheduling purposes used as the basis of a zero-delay ScheduledFuture. Iteration over this queue is not guaranteed to traverse tasks in the order in which they will execute.",;java.util.concurrent.ScheduledThreadPoolExecutor.getQueue();java.util.concurrent.ThreadPoolExecutor.getQueue(),;0.58;0.57
getQueuedTaskCount,2,0.581528707,"Returns an estimate of the total number of tasks currently held in queues by worker threads (but not including tasks submitted to the pool that have not begun executing). This value is only an approximation, obtained by iterating across all threads in the pool. This method may be useful for tuning task granularities.",;java.util.concurrent.ForkJoinPool.getQueuedTaskCount();java.util.concurrent.ForkJoinTask.getQueuedTaskCount(),;0.58;0.57
getRaster,2,0.5,"Returns the currently set Raster, or null if only a RenderedImage is available.",;java.awt.image.BufferedImage.getRaster();javax.imageio.IIOImage.getRaster(),;0.00;0.50
getRawOffset,2,0.5,"Returns the amount of time in milliseconds to add to UTC to get standard time in this time zone. Because this value is not affected by daylight saving time, it is called raw offset. If an underlying TimeZone implementation subclass supports historical GMT offset changes, the method returns the raw offset value of the current date. In Honolulu, for example, its raw offset changed from GMT-10:30 to GMT-10:00 in 1947, and this method always returns -36000000 milliseconds (i.e., -10 hours).",;java.util.SimpleTimeZone.getRawOffset();java.util.TimeZone.getRawOffset(),;0.50;0.50
getReadLockCount,2,1,"Queries the number of read locks held for this lock. This method is designed for use in monitoring system state, not for synchronization control.",;java.util.concurrent.locks.ReentrantReadWriteLock.getReadLockCount();java.util.concurrent.locks.StampedLock.getReadLockCount(),;1.00;1.00
getRef,2,0.5,Returns the remote reference for the remote object. Note: The object returned from this method may be an instance of an implementation-specific class. The RemoteObject class ensures serialization portability of its instances' remote references through the behavior of its custom writeObject and readObject methods. An instance of RemoteRef should not be serialized outside of its RemoteObject wrapper instance or the result may be unportable.,;java.net.URL.getRef();java.rmi.server.RemoteObject.getRef(),;0.50;0.50
getReference,2,1,Returns the current value of the reference.,;java.util.concurrent.atomic.AtomicMarkableReference.getReference();java.util.concurrent.atomic.AtomicStampedReference.getReference(),;1.00;1.00
getReferencedMBeans,2,1,Retrieves MBeans referenced in the various roles of the relation.,;javax.management.relation.RelationService.getReferencedMBeans(String);javax.management.relation.RelationSupport.getReferencedMBeans(),;1.00;1.00
getRegion,2,0.5,Returns the Region for the JComponent c.,;javax.swing.plaf.synth.SynthContext.getRegion();javax.swing.plaf.synth.SynthLookAndFeel.getRegion(JComponent),;0.50;0.50
getRelationId,2,0.5,Returns relation identifier (used to uniquely identify the relation inside the Relation Service).,;javax.management.relation.RelationNotification.getRelationId();javax.management.relation.RelationSupport.getRelationId(),;0.50;0.50
getRemoteSocketAddress,2,1,"Returns the address of the endpoint this socket is connected to, or null if it is unconnected. If the socket was connected prior to being closed, then this method will continue to return the connected address after the socket is closed.",;java.net.DatagramSocket.getRemoteSocketAddress();java.net.Socket.getRemoteSocketAddress(),;1.00;1.00
getRepresentationClass,2,0.5,Return the representation class.,;java.awt.datatransfer.DataFlavor.getRepresentationClass();javax.activation.ActivationDataFlavor.getRepresentationClass(),;0.50;0.50
getRequestMethod,2,0.5,Get the HTTP request method,;java.net.HttpURLConnection.getRequestMethod();javax.xml.ws.spi.http.HttpExchange.getRequestMethod(),;0.50;0.50
getResource,2,0.5,"Finds the resource with the given name. A resource is some data (images, audio, text, etc) that can be accessed by class code in a way that is independent of the location of the code. The name of a resource is a '/'-separated path name that identifies the resource. This method will first search the parent class loader for the resource; if the parent is null the path of the class loader built-in to the virtual machine is searched. That failing, this method will invoke findResource(String) to find the resource.",";java.beans.beancontext.BeanContextSupport.getResource(String,BeanContextChild);java.lang.ClassLoader.getResource(String)",;0.50;0.50
getResourceBundle,2,0.528001565,"Retrieve the localization resource bundle for this logger. This method will return a ResourceBundle that was either set by the setResourceBundle method or mapped from the the resource bundle name set via the getLogger factory method for the current default locale. Note that if the result is null, then the Logger will use a resource bundle or resource bundle name inherited from its parent.",;java.util.logging.Logger.getResourceBundle();java.util.logging.LogRecord.getResourceBundle(),;0.53;0.52
getReturnType,2,0.577321302,Returns a Class object that represents the formal return type of the method represented by this Method object.,;java.lang.reflect.Method.getReturnType();javax.management.MBeanOperationInfo.getReturnType(),;0.58;0.56
getRevocationChecker,2,0.979409254,Returns a CertPathChecker that the encapsulated CertPathValidatorSpi implementation uses to check the revocation status of certificates. A PKIX implementation returns objects of type PKIXRevocationChecker. Each invocation of this method returns a new instance of CertPathChecker. The primary purpose of this method is to allow callers to specify additional input parameters and options specific to revocation checking. See the class description for an example.,;java.security.cert.CertPathBuilder.getRevocationChecker();java.security.cert.CertPathValidator.getRevocationChecker(),;0.98;0.98
getRevokedCertificate,2,0.537842192,"Get the CRL entry, if any, for the given certificate. This method can be used to lookup CRL entries in indirect CRLs, that means CRLs that contain entries from issuers other than the CRL issuer. The default implementation will only return entries for certificates issued by the CRL issuer. Subclasses that wish to support indirect CRLs should override this method.",;java.security.cert.X509CRL.getRevokedCertificate(BigInteger);java.security.cert.X509CRL.getRevokedCertificate(X509Certificate),;0.50;0.54
getRightInset,2,0.5,Gets the right inset.,;javax.swing.text.AsyncBoxView.getRightInset();javax.swing.text.CompositeView.getRightInset(),;0.50;0.50
getRole,2,0.650716763,Retrieves role value for given role name. Checks if the role exists and is readable according to the relation type.,";javax.management.relation.RelationService.getRole(String,String);javax.management.relation.RelationSupport.getRole(String)",;0.62;0.65
getRoleCardinality,2,0.946576991,Returns the number of MBeans currently referenced in the given role.,";javax.management.relation.RelationService.getRoleCardinality(String,String);javax.management.relation.RelationSupport.getRoleCardinality(String)",;0.95;0.95
getRoleInfo,2,0.5,Returns the role info (RoleInfo object) for the given role info name (null if not found).,";javax.management.relation.RelationService.getRoleInfo(String,String);javax.management.relation.RelationTypeSupport.getRoleInfo(String)",;0.50;0.50
getRoleInfos,2,0.5,Returns the list of role definitions (ArrayList of RoleInfo objects).,;javax.management.relation.RelationService.getRoleInfos(String);javax.management.relation.RelationTypeSupport.getRoleInfos(),;0.50;0.50
getRoleValue,2,1.22E-77,Retrieves role value.,;javax.management.relation.Role.getRoleValue();javax.management.relation.RoleUnresolved.getRoleValue(),;0.00;0.00
getRowHeader,2,0.5,Returns the JViewport object that is the row header.,;javax.swing.JScrollPane.getRowHeader();javax.swing.ScrollPaneLayout.getRowHeader(),;0.50;0.50
getRowX,2,1,"Returns the location, along the x-axis, to render a particular row at. The return value does not include any Insets specified on the JTree. This does not check for the validity of the row or depth, it is assumed to be correct and will not throw an Exception if the row or depth doesn't match that of the tree.",";javax.swing.plaf.basic.BasicTreeUI.getRowX(int,int);javax.swing.plaf.synth.SynthTreeUI.getRowX(int,int)",;1.00;1.00
getSalt,2,0.5,Returns a copy of the salt or null if not specified. Note: this method should return a copy of the salt. It is the caller's responsibility to zero out the salt information after it is no longer needed.,;javax.crypto.spec.PBEKeySpec.getSalt();javax.crypto.spec.PBEParameterSpec.getSalt(),;0.50;0.00
getScaledInstance,2,0.5,"Returns a new quantization table where the values are multiplied by scaleFactor and then clamped to the range 1..32767 (or to 1..255 if forceBaseline is true). Values of scaleFactor less than 1 tend to improve the quality level of the table, and values greater than 1.0 degrade the quality level of the table.",";java.awt.Image.getScaledInstance(int,int,int);javax.imageio.plugins.jpeg.JPEGQTable.getScaledInstance(float,boolean)",;0.50;0.50
getSchemaClassDefinition,2,1,Description copied from interface:DirContext,;javax.naming.directory.InitialDirContext.getSchemaClassDefinition(String);javax.naming.directory.InitialDirContext.getSchemaClassDefinition(Name),;1.00;1.00
getScope,2,0.5,Returns scope of xml element declaration.,;java.security.Identity.getScope();javax.xml.bind.JAXBElement.getScope(),;0.00;0.50
getSecurityContext,2,0.5,"Deprecated.no replacement. As of the Java 2 platform v1.2, RMI no longer uses this method to obtain a class loader's security context.",;java.lang.SecurityManager.getSecurityContext();java.rmi.server.RMIClassLoader.getSecurityContext(ClassLoader),;0.50;0.50
getSeed,2,0.5,Returns the seeding bytes seed used during curve generation. May be null if not specified.,;java.security.SecureRandom.getSeed(int);java.security.spec.EllipticCurve.getSeed(),;0.50;0.50
getSelectedColumnCount,2,0.781170663,Returns the number of columns selected.,;javax.swing.JTable.getSelectedColumnCount();javax.swing.table.DefaultTableColumnModel.getSelectedColumnCount(),;0.78;0.78
getSelectedColumns,2,0.5,"Returns an array of selected columns. If selectionModel is null, returns an empty array.",;javax.swing.JTable.getSelectedColumns();javax.swing.table.DefaultTableColumnModel.getSelectedColumns(),;0.50;0.50
getSelectedIndexes,2,0.5,Get the selected choices.,;java.awt.List.getSelectedIndexes();javax.security.auth.callback.ChoiceCallback.getSelectedIndexes(),;0.50;0.50
getSelectedText,2,0.572884231,"Returns the selected text contained in this TextComponent. If the selection is null or the document empty, returns null.",;java.awt.TextComponent.getSelectedText();javax.swing.text.JTextComponent.getSelectedText(),;0.57;0.57
getSelectionCount,2,0.69249075,Returns the number of nodes selected.,;javax.swing.JTree.getSelectionCount();javax.swing.tree.DefaultTreeSelectionModel.getSelectionCount(),;0.69;0.68
getSelectionEnd,2,0.5,"Returns the selected text's end position. Return 0 if the document is empty, or the value of dot if there is no selection.",;java.awt.TextComponent.getSelectionEnd();javax.swing.text.JTextComponent.getSelectionEnd(),;0.50;0.50
getSelectionPath,2,0.5,Returns the first path in the selection. This is useful if there if only one item currently selected.,;javax.swing.JTree.getSelectionPath();javax.swing.tree.DefaultTreeSelectionModel.getSelectionPath(),;0.50;0.50
getSelectionPaths,2,0.5,Returns the paths of all selected values.,;javax.swing.JTree.getSelectionPaths();javax.swing.tree.DefaultTreeSelectionModel.getSelectionPaths(),;0.50;0.00
getSelectionRows,2,0.5,"Returns the selection in terms of rows. There is not necessarily a one-to-one mapping between the TreePaths returned from getSelectionPaths and this method. In particular, if a TreePath is not viewable (the RowMapper returns -1 for the row corresponding to the TreePath), then the corresponding row is not included in the returned array. For example, if the selection consists of two paths, A and B, with A at row 10, and B not currently viewable, then this method returns an array with the single entry 10.",;javax.swing.JTree.getSelectionRows();javax.swing.tree.DefaultTreeSelectionModel.getSelectionRows(),;0.50;0.50
getSelectionStart,2,0.5,"Returns the selected text's start position. Return 0 for an empty document, or the value of dot if no selection.",;java.awt.TextComponent.getSelectionStart();javax.swing.text.JTextComponent.getSelectionStart(),;0.50;0.50
getSendBufferSize,2,0.915909003,"Get value of the SO_SNDBUF option for this Socket, that is the buffer size used by the platform for output on this Socket.",;java.net.DatagramSocket.getSendBufferSize();java.net.Socket.getSendBufferSize(),;0.92;0.92
getSeparatorBackground,2,0.620392175,Returns the separator background color of the current theme. This is a cover method for getCurrentTheme().getSeparatorBackground().,;javax.swing.plaf.metal.MetalLookAndFeel.getSeparatorBackground();javax.swing.plaf.metal.MetalTheme.getSeparatorBackground(),;0.62;0.61
getSeparatorForeground,2,0.620392175,Returns the separator foreground color of the current theme. This is a cover method for getCurrentTheme().getSeparatorForeground().,;javax.swing.plaf.metal.MetalLookAndFeel.getSeparatorForeground();javax.swing.plaf.metal.MetalTheme.getSeparatorForeground(),;0.62;0.61
getSequenceNumber,2,0.5,Get the notification sequence number.,;java.util.logging.LogRecord.getSequenceNumber();javax.management.Notification.getSequenceNumber(),;0.50;0.50
getSequencer,2,0.839579214,"Obtains the default Sequencer, optionally connected to a default device. If connected is true, the returned Sequencer instance is connected to the default Synthesizer, as returned by getSynthesizer(). If there is no Synthesizer available, or the default Synthesizer cannot be opened, the sequencer is connected to the default Receiver, as returned by getReceiver(). The connection is made by retrieving a Transmitter instance from the Sequencer and setting its Receiver. Closing and re-opening the sequencer will restore the connection to the default device. If connected is false, the returned Sequencer instance is not connected, it has no open Transmitters. In order to play the sequencer on a MIDI device, or a Synthesizer, it is necessary to get a Transmitter and set its Receiver. If the system property javax.sound.midi.Sequencer is defined or it is defined in the file ""sound.properties"", it is used to identify the default sequencer. For details, refer to the class description.",;javax.sound.midi.MidiSystem.getSequencer();javax.sound.midi.MidiSystem.getSequencer(boolean),;0.83;0.84
getService,2,0.5,"Get the service describing this Provider's implementation of the specified type of this algorithm or alias. If no such implementation exists, this method returns null. If there are two matching services, one added to this provider using putService() and one added via put(), the service added via putService() is returned.",";java.beans.beancontext.BeanContextServicesSupport.getService(BeanContextChild,Object,Class,Object,BeanContextServiceRevokedListener);java.security.Provider.getService(String,String)",;0.50;0.50
getServiceClass,2,1,Gets the service class that is the subject of this notification,;java.beans.beancontext.BeanContextServiceAvailableEvent.getServiceClass();java.beans.beancontext.BeanContextServiceRevokedEvent.getServiceClass(),;1.00;1.00
getServiceName,2,1,Gets the name of this service.,;javax.xml.ws.Service.getServiceName();javax.xml.ws.spi.ServiceDelegate.getServiceName(),;1.00;1.00
getServiceProviders,2,0.533487279,"Returns an Iterator containing all registered service providers in the given category. If useOrdering is false, the iterator will return all of the server provider objects in an arbitrary order. Otherwise, the ordering will respect any pairwise orderings that have been set. If the graph of pairwise orderings contains cycles, any providers that belong to a cycle will not be returned.",";javax.imageio.spi.ServiceRegistry.getServiceProviders(Class&lt;T&gt;,boolean);javax.imageio.spi.ServiceRegistry.getServiceProviders(Class&lt;T&gt;,ServiceRegistry.Filter,boolean)",;0.53;0.53
getShadowColor,2,0.681451818,"Returns the shadow color of the etched border when rendered on the specified component. If no shadow color was specified at instantiation, the shadow color is derived from the specified component's background color.",;javax.swing.border.EtchedBorder.getShadowColor(Component);javax.swing.border.EtchedBorder.getShadowColor(),;0.68;0.65
getShadowInnerColor,2,0.691216164,"Returns the inner shadow color of the bevel border when rendered on the specified component. If no shadow color was specified at instantiation, the shadow color is derived from the specified component's background color.",;javax.swing.border.BevelBorder.getShadowInnerColor(Component);javax.swing.border.BevelBorder.getShadowInnerColor(),;0.69;0.66
getShadowOuterColor,2,0.691216164,"Returns the outer shadow color of the bevel border when rendered on the specified component. If no shadow color was specified at instantiation, the shadow color is derived from the specified component's background color.",;javax.swing.border.BevelBorder.getShadowOuterColor(Component);javax.swing.border.BevelBorder.getShadowOuterColor(),;0.69;0.66
getShaper,2,0.820213973,Returns a shaper for the provided Unicode range. All Latin-1 (EUROPEAN) digits are converted to the corresponding decimal digits of the specified Unicode range.,;java.awt.font.NumericShaper.getShaper(int);java.awt.font.NumericShaper.getShaper(NumericShaper.Range),;0.82;0.82
getSharedQueuedThreads,2,1,Returns a collection containing threads that may be waiting to acquire in shared mode. This has the same properties as getQueuedThreads() except that it only returns those threads waiting due to a shared acquire.,;java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getSharedQueuedThreads();java.util.concurrent.locks.AbstractQueuedSynchronizer.getSharedQueuedThreads(),;1.00;1.00
getSignerCertPath,2,0.5,Returns the certificate path for the Timestamping Authority.,;java.security.CodeSigner.getSignerCertPath();java.security.Timestamp.getSignerCertPath(),;0.50;0.50
getSizeButtonsToSameWidth,2,1,"Returns true, basic L&amp;F wants all the buttons to have the same width.",;javax.swing.plaf.basic.BasicOptionPaneUI.getSizeButtonsToSameWidth();javax.swing.plaf.synth.SynthOptionPaneUI.getSizeButtonsToSameWidth(),;1.00;1.00
getSizingIcon,2,1,Returns the Icon used in calculating the preferred/minimum/maximum size.,;javax.swing.plaf.synth.SynthButtonUI.getSizingIcon(AbstractButton);javax.swing.plaf.synth.SynthRadioButtonUI.getSizingIcon(AbstractButton),;1.00;1.00
getSocketFactory,2,0.5,Returns a SocketFactory object for this context.,;java.rmi.server.RMISocketFactory.getSocketFactory();javax.net.ssl.SSLContext.getSocketFactory(),;0.50;0.50
getSortKeys,2,0.870788753,"Returns the current sort keys. This must return a non-null List and may return an unmodifiable List. If you need to change the sort keys, make a copy of the returned List, mutate the copy and invoke setSortKeys with the new list.",;javax.swing.DefaultRowSorter.getSortKeys();javax.swing.RowSorter.getSortKeys(),;0.87;0.87
getSourceAsBeanContextServices,2,1,Gets the source as a reference of type BeanContextServices,;java.beans.beancontext.BeanContextServiceAvailableEvent.getSourceAsBeanContextServices();java.beans.beancontext.BeanContextServiceRevokedEvent.getSourceAsBeanContextServices(),;1.00;1.00
getSourceDataLine,2,0.745359753,"Obtains a source data line that can be used for playing back audio data in the format specified by the AudioFormat object. The returned line will be provided by the default system mixer, or, if not possible, by any other mixer installed in the system that supports a matching SourceDataLine object. The returned line should be opened with the open(AudioFormat) or open(AudioFormat, int) method. This is a high-level method that uses getMixer and getLine internally. The returned SourceDataLine's default audio format will be initialized with format. If the system property javax.sound.sampled.SourceDataLine is defined or it is defined in the file ""sound.properties"", it is used to retrieve the default source data line. For details, refer to the class description.",";javax.sound.sampled.AudioSystem.getSourceDataLine(AudioFormat);javax.sound.sampled.AudioSystem.getSourceDataLine(AudioFormat,Mixer.Info)",;0.75;0.70
getSourceRegion,2,0.5,"A utility method that may be used by readers to compute the region of the source image that should be read, taking into account any source region and subsampling offset settings in the supplied ImageReadParam. The actual subsampling factors, destination size, and destination offset are not taken into consideration, thus further clipping must take place. The computeRegions method performs all necessary clipping.",";javax.imageio.IIOParam.getSourceRegion();javax.imageio.ImageReader.getSourceRegion(ImageReadParam,int,int)",;0.50;0.50
getSpan,2,0.5,Determine the span the glyphs given a start location (for tab expansion).,";javax.swing.text.BoxView.getSpan(int,int);javax.swing.text.GlyphView.GlyphPainter.getSpan(GlyphView,int,int,TabExpander,float)",;0.50;0.50
getSpecificationVendor,2,0.5,Returns the vendor of the JMX specification implemented by this product.,;java.lang.Package.getSpecificationVendor();javax.management.MBeanServerDelegate.getSpecificationVendor(),;0.50;0.50
getSpecificationVersion,2,0.5,Returns the version of the JMX specification implemented by this product.,;java.lang.Package.getSpecificationVersion();javax.management.MBeanServerDelegate.getSpecificationVersion(),;0.50;0.50
getSQLException,2,0.5,Returns the SQLException the driver is about to throw,;javax.sql.ConnectionEvent.getSQLException();javax.sql.StatementEvent.getSQLException(),;0.50;0.50
getStandardOffset,2,0.526925601,Gets the standard offset for the specified instant in this zone. This provides access to historic information on how the standard offset has changed over time. The standard offset is the offset before any daylight saving time is applied. This is typically the offset applicable during winter.,;java.time.zone.ZoneOffsetTransitionRule.getStandardOffset();java.time.zone.ZoneRules.getStandardOffset(Instant),;0.50;0.53
getStartPoint,2,0.5,Returns the starting point of the arc. This point is the intersection of the ray from the center defined by the starting angle and the elliptical boundary of the arc.,;java.awt.LinearGradientPaint.getStartPoint();java.awt.geom.Arc2D.getStartPoint(),;0.50;0.50
getStreamMetadata,2,0.573211012,"Returns an IIOMetadata object representing the metadata associated with the input source as a whole (i.e., not associated with any particular image). If no such data exists, null is returned. The resulting metadata object is only responsible for returning documents in the format named by formatName. Within any documents that are returned, only nodes whose names are members of nodeNames are required to be returned. In this way, the amount of metadata processing done by the reader may be kept to a minimum, based on what information is actually needed. If formatName is not the name of a supported metadata format, null is returned. In all cases, it is legal to return a more capable metadata object than strictly necessary. The format name and node names are merely hints that may be used to reduce the reader's workload. The default implementation simply returns the result of calling getStreamMetadata(), after checking that the format name is supported. If it is not, null is returned.",";javax.imageio.ImageReader.getStreamMetadata();javax.imageio.ImageReader.getStreamMetadata(String,Set&lt;String&gt;)",;0.52;0.57
getStroke,2,0.5,Returns the BasicStroke object used to stroke a shape during the border rendering.,;java.awt.Graphics2D.getStroke();javax.swing.border.StrokeBorder.getStroke(),;0.50;0.50
getStyledDocument,2,0.5,Gets the document associated with an editor pane.,;javax.swing.JTextPane.getStyledDocument();javax.swing.text.StyledEditorKit.StyledTextAction.getStyledDocument(JEditorPane),;0.50;0.50
getStyledEditorKit,2,0.649237295,Gets the editor kit associated with an editor pane.,;javax.swing.JTextPane.getStyledEditorKit();javax.swing.text.StyledEditorKit.StyledTextAction.getStyledEditorKit(JEditorPane),;0.64;0.65
getStyleNames,2,0.5,Fetches the names of the styles defined.,;javax.swing.text.DefaultStyledDocument.getStyleNames();javax.swing.text.StyleContext.getStyleNames(),;0.50;0.50
getSubjectAlternativeNames,2,0.591690087,"Gets an immutable collection of subject alternative names from the SubjectAltName extension, (OID = 2.5.29.17). The ASN.1 definition of the SubjectAltName extension is: SubjectAltName ::= GeneralNames GeneralNames :: = SEQUENCE SIZE (1..MAX) OF GeneralName GeneralName ::= CHOICE { otherName [0] OtherName, rfc822Name [1] IA5String, dNSName [2] IA5String, x400Address [3] ORAddress, directoryName [4] Name, ediPartyName [5] EDIPartyName, uniformResourceIdentifier [6] IA5String, iPAddress [7] OCTET STRING, registeredID [8] OBJECT IDENTIFIER} If this certificate does not contain a SubjectAltName extension, null is returned. Otherwise, a Collection is returned with an entry representing each GeneralName included in the extension. Each entry is a List whose first entry is an Integer (the name type, 0-8) and whose second entry is a String or a byte array (the name, in string or ASN.1 DER encoded form, respectively). RFC 822, DNS, and URI names are returned as Strings, using the well-established string formats for those types (subject to the restrictions included in RFC 3280). IPv4 address names are returned using dotted quad notation. IPv6 address names are returned in the form ""a1:a2:...:a8"", where a1-a8 are hexadecimal values representing the eight 16-bit pieces of the address. OID names are returned as Strings represented as a series of nonnegative integers separated by periods. And directory names (distinguished names) are returned in RFC 2253 string format. No standard string format is defined for otherNames, X.400 names, EDI party names, or any other type of names. They are returned as byte arrays containing the ASN.1 DER encoded form of the name. Note that the Collection returned may contain more than one name of the same type. Also, note that the returned Collection is immutable and any entries containing byte arrays are cloned to protect against subsequent modifications. This method was added to version 1.4 of the Java 2 Platform Standard Edition. In order to maintain backwards compatibility with existing service providers, this method is not abstract and it provides a default implementation. Subclasses should override this method with a correct implementation.",;java.security.cert.X509Certificate.getSubjectAlternativeNames();java.security.cert.X509CertSelector.getSubjectAlternativeNames(),;0.59;0.57
getSubjectDN,2,0.674441583,"Denigrated, replaced by getSubjectX500Principal(). This method returns the subject as an implementation specific Principal object, which should not be relied upon by portable code. Gets the subject (subject distinguished name) value from the certificate. If the subject value is empty, then the getName() method of the returned Principal object returns an empty string (""""). The ASN.1 definition for this is: subject Name See getIssuerDN for Name and other relevant definitions.",;java.security.cert.X509Certificate.getSubjectDN();javax.security.cert.X509Certificate.getSubjectDN(),;0.67;0.60
getSubType,2,0.5,Retrieve the subtype of this object.,;java.awt.datatransfer.DataFlavor.getSubType();javax.activation.MimeType.getSubType(),;0.50;0.50
getSupportsAbsolutePositioning,2,1,Indicates whether the user can absolutely position the thumb with a mouse gesture (usually the middle mouse button).,;javax.swing.plaf.basic.BasicScrollBarUI.getSupportsAbsolutePositioning();javax.swing.plaf.synth.SynthScrollBarUI.getSupportsAbsolutePositioning(),;1.00;1.00
getSupportsWindowDecorations,2,0.5,Returns true; metal can provide Window decorations.,;javax.swing.LookAndFeel.getSupportsWindowDecorations();javax.swing.plaf.metal.MetalLookAndFeel.getSupportsWindowDecorations(),;0.50;0.50
getSystem,2,0.5,Returns the group's activation system.,;java.rmi.activation.ActivationGroup.getSystem();java.rmi.activation.ActivationGroupID.getSystem(),;0.50;0.50
getSystemTextColor,2,0.620392175,Returns the system text color of the current theme. This is a cover method for getCurrentTheme().getSystemTextColor().,;javax.swing.plaf.metal.MetalLookAndFeel.getSystemTextColor();javax.swing.plaf.metal.MetalTheme.getSystemTextColor(),;0.62;0.61
getTabCount,2,0.652548761,Returns the number of tabs in this tabbedpane.,;javax.swing.JTabbedPane.getTabCount();javax.swing.text.TabSet.getTabCount(),;0.65;0.65
getTabRunCount,2,0.5,Invokes the getTabRunCount method on each UI handled by this object.,;javax.swing.JTabbedPane.getTabRunCount();javax.swing.plaf.multi.MultiTabbedPaneUI.getTabRunCount(JTabbedPane),;0.50;0.50
getTabSet,2,0.5,Gets the Tabset to be used in calculating tabs.,;javax.swing.text.ParagraphView.getTabSet();javax.swing.text.StyleConstants.getTabSet(AttributeSet),;0.50;0.00
getTag,2,0.5,Type of tag this iterator represents.,;javax.swing.text.html.HTML.getTag(String);javax.swing.text.html.HTMLDocument.Iterator.getTag(),;0.50;0.50
getTail,2,0.655731889,"Return the tail string for a set of formatted records. This base class returns an empty string, but this may be overridden by subclasses.",;java.util.logging.Formatter.getTail(Handler);java.util.logging.XMLFormatter.getTail(Handler),;0.66;0.61
getTargetActions,2,0.5,This method returns an int representing the current actions this DropTarget will accept.,;java.awt.dnd.DragSourceDragEvent.getTargetActions();java.awt.dnd.DropTargetContext.getTargetActions(),;0.50;0.50
getTargetDataLine,2,0.743287432,"Obtains a target data line that can be used for recording audio data in the format specified by the AudioFormat object. The returned line will be provided by the default system mixer, or, if not possible, by any other mixer installed in the system that supports a matching TargetDataLine object. The returned line should be opened with the open(AudioFormat) or open(AudioFormat, int) method. This is a high-level method that uses getMixer and getLine internally. The returned TargetDataLine's default audio format will be initialized with format. If the system property javax.sound.sampled.TargetDataLine is defined or it is defined in the file ""sound.properties"", it is used to retrieve the default target data line. For details, refer to the class description.",";javax.sound.sampled.AudioSystem.getTargetDataLine(AudioFormat);javax.sound.sampled.AudioSystem.getTargetDataLine(AudioFormat,Mixer.Info)",;0.74;0.70
getTargetFormats,2,0.5,"Obtains the set of target formats with the encoding specified supported by the format converter If no target formats with the specified encoding are supported for this source format, an array of length 0 is returned.",";javax.sound.sampled.AudioSystem.getTargetFormats(AudioFormat.Encoding,AudioFormat);javax.sound.sampled.spi.FormatConversionProvider.getTargetFormats(AudioFormat.Encoding,AudioFormat)",;0.50;0.50
getTextCharacters,2,1,Description copied from interface:XMLStreamReader,";javax.xml.stream.util.StreamReaderDelegate.getTextCharacters(int,char[],int,int);javax.xml.stream.util.StreamReaderDelegate.getTextCharacters()",;1.00;1.00
getTextHighlightColor,2,0.620392175,Returns the text highlight color of the current theme. This is a cover method for getCurrentTheme().getTextHighlightColor().,;javax.swing.plaf.metal.MetalLookAndFeel.getTextHighlightColor();javax.swing.plaf.metal.MetalTheme.getTextHighlightColor(),;0.62;0.61
getThenReset,2,1,"Equivalent in effect to get() followed by reset(). This method may apply for example during quiescent points between multithreaded computations. If there are updates concurrent with this method, the returned value is not guaranteed to be the final value occurring before the reset.",;java.util.concurrent.atomic.DoubleAccumulator.getThenReset();java.util.concurrent.atomic.LongAccumulator.getThenReset(),;1.00;1.00
getThreadGroup,2,0.532035619,"Returns the thread group into which to instantiate any new thread being created at the time this is being called. By default, it returns the thread group of the current thread. This should be overridden by a specific security manager to return the appropriate thread group.",;java.lang.SecurityManager.getThreadGroup();java.lang.Thread.getThreadGroup(),;0.53;0.52
getTimestamp,2,0.5,Returns the date and time when the timestamp was generated.,;java.security.CodeSigner.getTimestamp();java.security.Timestamp.getTimestamp(),;0.50;0.50
getToolkit,2,0.531218513,"Gets the toolkit of this component. Note that the frame that contains a component controls which toolkit is used by that component. Therefore if the component is moved from one frame to another, the toolkit it uses may change.",;java.awt.Component.getToolkit();java.awt.Window.getToolkit(),;0.53;0.50
getTopInset,2,0.5,Gets the top inset.,;javax.swing.text.AsyncBoxView.getTopInset();javax.swing.text.CompositeView.getTopInset(),;0.50;0.50
getTotalIn,2,0.959233901,"Returns the total number of compressed bytes input so far. Since the number of bytes may be greater than Integer.MAX_VALUE, the getBytesRead() method is now the preferred means of obtaining this information.",;java.util.zip.Deflater.getTotalIn();java.util.zip.Inflater.getTotalIn(),;0.96;0.96
getTotalOut,2,0.959233901,"Returns the total number of uncompressed bytes output so far. Since the number of bytes may be greater than Integer.MAX_VALUE, the getBytesWritten() method is now the preferred means of obtaining this information.",;java.util.zip.Deflater.getTotalOut();java.util.zip.Inflater.getTotalOut(),;0.96;0.96
getTotalSpace,2,0.5,"Returns the size, in bytes, of the file store.",;java.io.File.getTotalSpace();java.nio.file.FileStore.getTotalSpace(),;0.50;0.50
getTrafficClass,2,0.943070826,Gets traffic class or type-of-service in the IP header for packets sent from this Socket As the underlying network implementation may ignore the traffic class or type-of-service set using setTrafficClass(int) this method may return a different value than was previously set using the setTrafficClass(int) method on this Socket.,;java.net.DatagramSocket.getTrafficClass();java.net.Socket.getTrafficClass(),;0.94;0.94
getTransferData,2,0.5,"Returns an object that represents the data to be transferred. The class of the object returned is defined by the representation class of the data flavor.For DataHandler's created with DataSources or URLs: The DataHandler attempts to locate a DataContentHandler for this MIME type. If one is found, the passed in DataFlavor and the type of the data are passed to its getTransferData method. If the DataHandler fails to locate a DataContentHandler and the flavor specifies this object's MIME type and the java.io.InputStream class, this object's InputStream is returned. Otherwise it throws an UnsupportedFlavorException. For DataHandler's created with Objects: The DataHandler attempts to locate a DataContentHandler for this MIME type. If one is found, the passed in DataFlavor and the type of the data are passed to its getTransferData method. If the DataHandler fails to locate a DataContentHandler and the flavor specifies this object's MIME type and its class, this DataHandler's referenced object is returned. Otherwise it throws an UnsupportedFlavorException.",;java.awt.datatransfer.StringSelection.getTransferData(DataFlavor);javax.activation.DataHandler.getTransferData(DataFlavor),;0.50;0.50
getTransferDataFlavors,2,0.515429508,"Return the DataFlavors in which this data is available. Returns an array of DataFlavor objects indicating the flavors the data can be provided in. The array is usually ordered according to preference for providing the data, from most richly descriptive to least richly descriptive. The DataHandler attempts to find a DataContentHandler that corresponds to the MIME type of the data. If one is located, the DataHandler calls the DataContentHandler's getTransferDataFlavors method. If a DataContentHandler can not be located, and if the DataHandler was created with a DataSource (or URL), one DataFlavor is returned that represents this object's MIME type and the java.io.InputStream class. If the DataHandler was created with an object and a MIME type, getTransferDataFlavors returns one DataFlavor that represents this object's MIME type and the object's class.",;java.awt.datatransfer.StringSelection.getTransferDataFlavors();javax.activation.DataHandler.getTransferDataFlavors(),;0.50;0.52
getTRC,2,0.866667712,"Returns the TRC for a particular component as an array. Component must be REDCOMPONENT, GREENCOMPONENT, or BLUECOMPONENT. Otherwise the returned array represents a lookup table where the input component value is conceptually in the range [0.0, 1.0]. Value 0.0 maps to array index 0 and value 1.0 maps to array index length-1. Interpolation might be used to generate output values for input values that do not map exactly to an index in the array. Output values also map linearly to the range [0.0, 1.0]. Value 0.0 is represented by an array value of 0x0000 and value 1.0 by 0xFFFF. In other words, the values are really unsigned short values even though they are returned in a short array. If the profile has specified the corresponding TRC as linear (gamma = 1.0) or as a simple gamma value, this method throws an exception. In this case, the getGamma(int) method should be used to get the gamma value.",;java.awt.color.ICC_ProfileGray.getTRC();java.awt.color.ICC_ProfileRGB.getTRC(int),;0.87;0.87
getTreeCellEditorComponent,2,0.5,Configures the editor. Passed onto the realEditor.,";javax.swing.DefaultCellEditor.getTreeCellEditorComponent(JTree,Object,boolean,boolean,boolean,int);javax.swing.tree.DefaultTreeCellEditor.getTreeCellEditorComponent(JTree,Object,boolean,boolean,boolean,int)",;0.50;0.50
getTreeLock,2,1,Gets this component's locking object (the object that owns the thread synchronization monitor) for AWT component-tree and layout operations.,;java.awt.Component.getTreeLock();java.awt.MenuComponent.getTreeLock(),;1.00;1.00
getTreeSelectionListeners,2,0.697766627,Returns an array of all the tree selection listeners registered on this model.,;javax.swing.JTree.getTreeSelectionListeners();javax.swing.tree.DefaultTreeSelectionModel.getTreeSelectionListeners(),;0.70;0.70
getTrigger,2,0.5,Gets the threshold/string (depending on the monitor type) that triggered off this monitor notification.,;java.awt.dnd.DragSourceContext.getTrigger();javax.management.monitor.MonitorNotification.getTrigger(),;0.50;0.50
getTriggerEvent,2,0.5,This method returns the first event in the series of events that initiated the Drag and Drop operation.,;java.awt.dnd.DragGestureEvent.getTriggerEvent();java.awt.dnd.DragGestureRecognizer.getTriggerEvent(),;0.50;0.50
getTTL,2,0.5,"Deprecated.use the getTimeToLive method instead, which returns an int instead of a byte.",;java.net.DatagramSocketImpl.getTTL();java.net.MulticastSocket.getTTL(),;0.50;0.50
getTypeDescription,2,0.5,"A human readable description of the type of the file. For example, a jpg file might have a type description of: ""A JPEG Compressed Image File""",;javax.swing.JFileChooser.getTypeDescription(File);javax.swing.filechooser.FileView.getTypeDescription(File),;0.50;0.50
getTypeName,2,0.633914248,Returns the name of this OpenType instance.,;java.lang.Class.getTypeName();javax.management.openmbean.OpenType.getTypeName(),;0.63;0.63
getUIClass,2,0.5,Returns the L&amp;F class that renders this component.,";javax.swing.UIDefaults.getUIClass(String,ClassLoader);javax.swing.UIDefaults.getUIClass(String)",;0.50;0.50
getUnboundInstance,2,0.856948728,Returns the default unbound KeyTab instance. The result of this method is never null. This method only associates the returned KeyTab object with the default keytab file and does not read it.,;javax.security.auth.kerberos.KeyTab.getUnboundInstance(File);javax.security.auth.kerberos.KeyTab.getUnboundInstance(),;0.86;0.86
getUncaughtExceptionHandler,2,0.5,Returns the handler for internal worker threads that terminate due to unrecoverable errors encountered while executing tasks.,;java.lang.Thread.getUncaughtExceptionHandler();java.util.concurrent.ForkJoinPool.getUncaughtExceptionHandler(),;0.50;0.50
getUndoableEditListeners,2,0.697766627,Returns an array of all the UndoableEditListeners added to this UndoableEditSupport with addUndoableEditListener().,;javax.swing.text.AbstractDocument.getUndoableEditListeners();javax.swing.undo.UndoableEditSupport.getUndoableEditListeners(),;0.70;0.70
getUnnormalizedComponents,2,1,"Returns an array of all of the color/alpha components in unnormalized form, given a normalized component array. Unnormalized components are unsigned integral values between 0 and 2n - 1, where n is the number of bits for a particular component. Normalized components are float values between a per component minimum and maximum specified by the ColorSpace object for this ColorModel. An IllegalArgumentException will be thrown if color component values for this ColorModel are not conveniently representable in the unnormalized form. If the components array is null, a new array will be allocated. The components array will be returned. Color/alpha components are stored in the components array starting at offset (even if the array is allocated by this method). An ArrayIndexOutOfBoundsException is thrown if the components array is not null and is not large enough to hold all the color and alpha components (starting at offset). An IllegalArgumentException is thrown if the normComponents array is not large enough to hold all the color and alpha components starting at normOffset.",";java.awt.image.ColorModel.getUnnormalizedComponents(float[],int,int[],int);java.awt.image.ComponentColorModel.getUnnormalizedComponents(float[],int,int[],int)",;1.00;1.00
getURIResolver,2,0.62653094,"Get the object that is used by default during the transformation to resolve URIs used in document(), xsl:import, or xsl:include.",;javax.xml.transform.Transformer.getURIResolver();javax.xml.transform.TransformerFactory.getURIResolver(),;0.61;0.63
getURLOrDefaultInitCtx,2,0.626669574,"Retrieves a context for resolving name. If the first component of name name is a URL string, then attempt to find a URL context for it. If none is found, or if the first component of name is not a URL string, then return getDefaultInitCtx(). When creating a subclass of InitialContext, use this method as follows. Define a new method that uses this method to get an initial context of the desired subclass. protected XXXContext getURLOrDefaultInitXXXCtx(Name name) throws NamingException { Context answer = getURLOrDefaultInitCtx(name); if (!(answer instanceof XXXContext)) { if (answer == null) { throw new NoInitialContextException(); } else { throw new NotContextException(""Not an XXXContext""); } } return (XXXContext)answer; } When providing implementations for the new methods in the subclass, use this newly defined method to get the initial context. public Object XXXMethod1(Name name, ...) { throws NamingException { return getURLOrDefaultInitXXXCtx(name).XXXMethod1(name, ...); }",;javax.naming.InitialContext.getURLOrDefaultInitCtx(String);javax.naming.InitialContext.getURLOrDefaultInitCtx(Name),;0.57;0.63
getURLs,2,1,"Returns the search path of URLs for loading classes and resources. This includes the original list of URLs specified to the constructor, along with any URLs subsequently appended by the addURL() method.",;java.net.URLClassLoader.getURLs();javax.management.loading.MLet.getURLs(),;1.00;1.00
getUsableSpace,2,0.751583766,"Returns the number of bytes available to this virtual machine on the partition named by this abstract pathname. When possible, this method checks for write permissions and other operating system restrictions and will therefore usually provide a more accurate estimate of how much new data can actually be written than getFreeSpace(). The returned number of available bytes is a hint, but not a guarantee, that it is possible to use most or any of these bytes. The number of unallocated bytes is most likely to be accurate immediately after this call. It is likely to be made inaccurate by any external I/O operations including those made on the system outside of this virtual machine. This method makes no guarantee that write operations to this file system will succeed.",;java.io.File.getUsableSpace();java.nio.file.FileStore.getUsableSpace(),;0.75;0.73
getUserData,2,0.5,Get the user data.,;javax.imageio.metadata.IIOMetadataNode.getUserData(String);javax.management.Notification.getUserData(),;0.50;0.50
getUserInfo,2,0.5,Gets the userInfo part of this URL.,;java.net.URI.getUserInfo();java.net.URL.getUserInfo(),;0.50;0.50
getUserName,2,0.5,Returns the user name.,;java.awt.print.PrinterJob.getUserName();java.net.PasswordAuthentication.getUserName(),;0.50;0.50
getUserObject,2,0.5,Returns this node's user object.,;javax.imageio.metadata.IIOMetadataNode.getUserObject();javax.swing.tree.DefaultMutableTreeNode.getUserObject(),;0.50;0.50
getUserTextColor,2,0.620392175,Returns the user text color of the current theme. This is a cover method for getCurrentTheme().getUserTextColor().,;javax.swing.plaf.metal.MetalLookAndFeel.getUserTextColor();javax.swing.plaf.metal.MetalTheme.getUserTextColor(),;0.62;0.61
getValues,2,0.5,Returns the set of possible values for this control.,;javax.imageio.plugins.jpeg.JPEGHuffmanTable.getValues();javax.sound.sampled.EnumControl.getValues(),;0.50;0.50
getVerticalAlignment,2,0.5,Returns the alignment of the label's contents along the Y axis.,;javax.swing.AbstractButton.getVerticalAlignment();javax.swing.JLabel.getVerticalAlignment(),;0.50;0.50
getVerticalScrollBar,2,0.5,Returns the JScrollBar object that handles vertical scrolling.,;javax.swing.JScrollPane.getVerticalScrollBar();javax.swing.ScrollPaneLayout.getVerticalScrollBar(),;0.50;0.50
getVerticalScrollBarPolicy,2,0.5,Returns the vertical scrollbar-display policy.,;javax.swing.JScrollPane.getVerticalScrollBarPolicy();javax.swing.ScrollPaneLayout.getVerticalScrollBarPolicy(),;0.50;0.50
getVerticalTextPosition,2,0.745010123,Returns the vertical position of the text relative to the icon.,;javax.swing.AbstractButton.getVerticalTextPosition();javax.swing.JLabel.getVerticalTextPosition(),;0.75;0.74
getViewAtPoint,2,1,Fetches the child view at the given coordinates.,";javax.swing.text.BoxView.getViewAtPoint(int,int,Rectangle);javax.swing.text.CompositeView.getViewAtPoint(int,int,Rectangle)",;1.00;1.00
getViewAtPosition,2,0.672082266,Fetches the child view that represents the given position in the model. This is implemented to walk through the children looking for a range that contains the given position. In this view the children do not necessarily have a one to one mapping with the child elements.,";javax.swing.text.CompositeView.getViewAtPosition(int,Rectangle);javax.swing.text.TableView.getViewAtPosition(int,Rectangle)",;0.66;0.67
getViewport,2,0.5,Returns the JViewport object that displays the scrollable contents.,;javax.swing.JScrollPane.getViewport();javax.swing.ScrollPaneLayout.getViewport(),;0.50;0.50
getViewportBorderBounds,2,0.5,Deprecated.As of JDK version Swing1.1 replaced by JScrollPane.getViewportBorderBounds().,;javax.swing.JScrollPane.getViewportBorderBounds();javax.swing.ScrollPaneLayout.getViewportBorderBounds(JScrollPane),;0.50;0.50
getViewRowCount,2,1,Returns the number of rows in the view. If the contents have been filtered this might differ from the row count of the underlying model.,;javax.swing.DefaultRowSorter.getViewRowCount();javax.swing.RowSorter.getViewRowCount(),;1.00;1.00
getVisibleRowCount,2,0.5,Returns the number of rows that are displayed in the display area.,;javax.swing.JList.getVisibleRowCount();javax.swing.JTree.getVisibleRowCount(),;0.50;0.50
getVisualHighlightShape,2,0.529308521,"Returns a path enclosing the visual selection in the specified range, extended to bounds. If the selection includes the leftmost (topmost) position, the selection is extended to the left (top) of bounds. If the selection includes the rightmost (bottommost) position, the selection is extended to the right (bottom) of the bounds. The height (width on vertical lines) of the selection is always extended to bounds. Although the selection is always contiguous, the logically selected text can be discontiguous on lines with mixed-direction text. The logical ranges of text selected can be retrieved using getLogicalRangesForVisualSelection. For example, consider the text 'ABCdef' where capital letters indicate right-to-left text, rendered on a right-to-left line, with a visual selection from 0L (the leading edge of 'A') to 3T (the trailing edge of 'd'). The text appears as follows, with bold underlined areas representing the selection: defCBA The logical selection ranges are 0-3, 4-6 (ABC, ef) because the visually contiguous text is logically discontiguous. Also note that since the rightmost position on the layout (to the right of 'A') is selected, the selection is extended to the right of the bounds.",";java.awt.font.TextLayout.getVisualHighlightShape(TextHitInfo,TextHitInfo,Rectangle2D);java.awt.font.TextLayout.getVisualHighlightShape(TextHitInfo,TextHitInfo)",;0.53;0.50
getWarningString,2,0.565808295,"Gets the warning string that is displayed with this window. If this window is insecure, the warning string is displayed somewhere in the visible area of the window. A window is insecure if there is a security manager and the security manager denies AWTPermission(""showWindowWithoutWarningBanner""). If the window is secure, then getWarningString returns null. If the window is insecure, this method checks for the system property awt.appletWarning and returns the string value of that property.",;java.awt.Window.getWarningString();javax.swing.JInternalFrame.getWarningString(),;0.57;0.55
getWeeksInWeekYear,2,0.593200379,"Returns the number of weeks in the week year represented by this GregorianCalendar. For example, if this GregorianCalendar's date is December 31, 2008 with the ISO 8601 compatible setting, this method will return 53 for the period: December 29, 2008 to January 3, 2010 while getActualMaximum(WEEK_OF_YEAR) will return 52 for the period: December 31, 2007 to December 28, 2008.",;java.util.Calendar.getWeeksInWeekYear();java.util.GregorianCalendar.getWeeksInWeekYear(),;0.55;0.59
getWeekYear,2,0.5931614,Returns the week year represented by this GregorianCalendar. The dates in the weeks between 1 and the maximum week number of the week year have the same week year value that may be one year before or after the YEAR (calendar year) value. This method calls Calendar.complete() before calculating the week year.,;java.util.Calendar.getWeekYear();java.util.GregorianCalendar.getWeekYear(),;0.59;0.59
getWhite,2,0.580943068,Returns the white color of the current theme. This is a cover method for getCurrentTheme().getWhite().,;javax.swing.plaf.metal.MetalLookAndFeel.getWhite();javax.swing.plaf.metal.MetalTheme.getWhite(),;0.58;0.57
getWindingRule,2,0.5,Returns the fill style winding rule.,;java.awt.geom.FlatteningPathIterator.getWindingRule();java.awt.geom.Path2D.getWindingRule(),;0.50;0.50
getWindowBackground,2,0.620392175,Returns the window background color of the current theme. This is a cover method for getCurrentTheme().getWindowBackground().,;javax.swing.plaf.metal.MetalLookAndFeel.getWindowBackground();javax.swing.plaf.metal.MetalTheme.getWindowBackground(),;0.62;0.61
getWindowTitleBackground,2,0.646414901,Returns the window title background color of the current theme. This is a cover method for getCurrentTheme().getWindowTitleBackground().,;javax.swing.plaf.metal.MetalLookAndFeel.getWindowTitleBackground();javax.swing.plaf.metal.MetalTheme.getWindowTitleBackground(),;0.65;0.64
getWindowTitleForeground,2,0.646414901,Returns the window title foreground color of the current theme. This is a cover method for getCurrentTheme().getWindowTitleForeground().,;javax.swing.plaf.metal.MetalLookAndFeel.getWindowTitleForeground();javax.swing.plaf.metal.MetalTheme.getWindowTitleForeground(),;0.65;0.64
getWindowTitleInactiveBackground,2,0.668506463,Returns the window title inactive background color of the current theme. This is a cover method for getCurrentTheme().getWindowTitleInactiveBackground().,;javax.swing.plaf.metal.MetalLookAndFeel.getWindowTitleInactiveBackground();javax.swing.plaf.metal.MetalTheme.getWindowTitleInactiveBackground(),;0.67;0.66
getWindowTitleInactiveForeground,2,0.668506463,Returns the window title inactive foreground color of the current theme. This is a cover method for getCurrentTheme().getWindowTitleInactiveForeground().,;javax.swing.plaf.metal.MetalLookAndFeel.getWindowTitleInactiveForeground();javax.swing.plaf.metal.MetalTheme.getWindowTitleInactiveForeground(),;0.67;0.66
getWSDLDocumentLocation,2,1,Gets the location of the WSDL document for this Service.,;javax.xml.ws.Service.getWSDLDocumentLocation();javax.xml.ws.spi.ServiceDelegate.getWSDLDocumentLocation(),;1.00;1.00
getXMLSchemaType,2,0.887993218,Return the name of the XML Schema date/time type that this instance maps to. Type is computed based on fields that are set. Required fields for XML Schema 1.0 Date/Time Datatypes.(timezone is optional for all date/time datatypes)DatatypeyearmonthdayhourminutesecondDatatypeConstants.DATETIMEXXXXXXDatatypeConstants.DATEXXXDatatypeConstants.TIMEXXXDatatypeConstants.GYEARMONTHXXDatatypeConstants.GMONTHDAYXXDatatypeConstants.GYEARXDatatypeConstants.GMONTHXDatatypeConstants.GDAYX,;javax.xml.datatype.Duration.getXMLSchemaType();javax.xml.datatype.XMLGregorianCalendar.getXMLSchemaType(),;0.89;0.89
getYears,2,0.5,"Get the years value of this Duration as an int or 0 if not present.getYears() is a convenience method for getField(DatatypeConstants.YEARS).As the return value is an int, an incorrect value will be returned for Durations with years that go beyond the range of an int. Use getField(DatatypeConstants.YEARS) to avoid possible loss of precision.",;java.time.Period.getYears();javax.xml.datatype.Duration.getYears(),;0.50;0.50
getZeroDigit,2,0.5,"Gets the character that represents zero. The character used to represent digits may vary by culture. This method specifies the zero character to use, which implies the characters for one to nine.",;java.text.DecimalFormatSymbols.getZeroDigit();java.time.format.DecimalStyle.getZeroDigit(),;0.50;0.50
guardWithTest,2,0.528654041,"Makes a method handle which adapts a target method handle, by guarding it with a test, a boolean-valued method handle. If the guard fails, a fallback handle is called instead. All three method handles must have the same corresponding argument and return types, except that the return type of the test must be boolean, and the test is allowed to have fewer arguments than the other two method handles. Here is pseudocode for the resulting adapter: boolean test(A...); T target(A...,B...); T fallback(A...,B...); T adapter(A... a,B... b) { if (test(a...)) return target(a..., b...); else return fallback(a..., b...); } Note that the test arguments (a... in the pseudocode) cannot be modified by execution of the test, and so are passed unchanged from the caller to the target or fallback as appropriate.",";java.lang.invoke.MethodHandles.guardWithTest(MethodHandle,MethodHandle,MethodHandle);java.lang.invoke.SwitchPoint.guardWithTest(MethodHandle,MethodHandle)",;0.53;0.52
handle,2,0.5,Handles a given request and generates an appropriate response. See HttpExchange for a description of the steps involved in handling an exchange. Container invokes this method when it receives an incoming request.,";java.util.concurrent.CompletableFuture.handle(BiFunction&lt;?,Throwable,?);javax.xml.ws.spi.http.HttpHandler.handle(HttpExchange)",;0.50;0.50
handleAsync,2,1,Description copied from interface:CompletionStage,";java.util.concurrent.CompletableFuture.handleAsync(BiFunction&lt;?,Throwable,?);java.util.concurrent.CompletableFuture.handleAsync(BiFunction&lt;?,Throwable,?,Executor)",;1.00;1.00
handleComment,2,0.5,Called when an HTML comment is encountered.,;javax.swing.text.html.parser.DocumentParser.handleComment(char[]);javax.swing.text.html.parser.Parser.handleComment(char[]),;0.50;0.50
handleEmptyTag,2,0.5,Called when an empty tag is encountered.,;javax.swing.text.html.parser.DocumentParser.handleEmptyTag(TagElement);javax.swing.text.html.parser.Parser.handleEmptyTag(TagElement),;0.00;0.50
handleEndTag,2,0.5,Called when an end tag is encountered.,;javax.swing.text.html.parser.DocumentParser.handleEndTag(TagElement);javax.swing.text.html.parser.Parser.handleEndTag(TagElement),;0.00;0.50
handleError,2,0.5,An error has occurred.,";javax.swing.text.html.parser.DocumentParser.handleError(int,String);javax.swing.text.html.parser.Parser.handleError(int,String)",;0.50;0.50
handleNotification,2,0.5,"Invoked when a JMX notification occurs. Currently handles notifications for unregistration of MBeans, either referenced in a relation role or being a relation itself.",";javax.management.NotificationBroadcasterSupport.handleNotification(NotificationListener,Notification,Object);javax.management.relation.RelationService.handleNotification(Notification,Object)",;0.50;0.50
handleStartTag,2,0.5,Called when a start tag is encountered.,;javax.swing.text.html.parser.DocumentParser.handleStartTag(TagElement);javax.swing.text.html.parser.Parser.handleStartTag(TagElement),;0.00;0.50
handleText,2,0.5,Called when PCDATA is encountered.,;javax.swing.text.html.parser.DocumentParser.handleText(char[]);javax.swing.text.html.parser.Parser.handleText(char[]),;0.00;0.50
hasContended,2,1,"Queries whether any threads have ever contended to acquire this synchronizer; that is if an acquire method has ever blocked. In this implementation, this operation returns in constant time.",;java.util.concurrent.locks.AbstractQueuedLongSynchronizer.hasContended();java.util.concurrent.locks.AbstractQueuedSynchronizer.hasContended(),;1.00;1.00
hasController,2,0.695581025,Returns true if there is a controller installed for this IIOMetadata object. The default implementation returns true if the getController method returns a non-null value.,;javax.imageio.IIOParam.hasController();javax.imageio.metadata.IIOMetadata.hasController(),;0.69;0.70
hasDefaultValue,2,0.844965106,"Returns true if this OpenMBeanParameterInfoSupport instance specifies a non-null default value for the described parameter, false otherwise.",;javax.management.openmbean.OpenMBeanAttributeInfoSupport.hasDefaultValue();javax.management.openmbean.OpenMBeanParameterInfoSupport.hasDefaultValue(),;0.84;0.84
hasExtensions,2,0.691301471,Returns true if this Locale has any extensions.,;java.security.cert.X509CRLEntry.hasExtensions();java.util.Locale.hasExtensions(),;0.69;0.69
hash,2,0.5,Returns an ORB-internal identifier (hashcode) for this object reference.,";java.util.Objects.hash(Object...);org.omg.CORBA.portable.Delegate.hash(Object,int)",;0.50;0.50
hasLegalValues,2,0.863270391,"Returns true if this OpenMBeanParameterInfoSupport instance specifies a non-null set of legal values for the described parameter, false otherwise.",;javax.management.openmbean.OpenMBeanAttributeInfoSupport.hasLegalValues();javax.management.openmbean.OpenMBeanParameterInfoSupport.hasLegalValues(),;0.86;0.86
hasListeners,2,1,"Check if there are any listeners for a specific property, including those registered on all properties. If propertyName is null, only check for listeners registered on all properties.",;java.beans.PropertyChangeSupport.hasListeners(String);java.beans.VetoableChangeSupport.hasListeners(String),;1.00;1.00
hasMaxValue,2,0.844965106,"Returns true if this OpenMBeanParameterInfoSupport instance specifies a non-null maximal value for the described parameter, false otherwise.",;javax.management.openmbean.OpenMBeanAttributeInfoSupport.hasMaxValue();javax.management.openmbean.OpenMBeanParameterInfoSupport.hasMaxValue(),;0.84;0.84
hasMinValue,2,0.844965106,"Returns true if this OpenMBeanParameterInfoSupport instance specifies a non-null minimal value for the described parameter, false otherwise.",;javax.management.openmbean.OpenMBeanAttributeInfoSupport.hasMinValue();javax.management.openmbean.OpenMBeanParameterInfoSupport.hasMinValue(),;0.84;0.84
hasNextBigInteger,2,0.959233901,Returns true if the next token in this scanner's input can be interpreted as a BigInteger in the specified radix using the nextBigInteger() method. The scanner does not advance past any input.,;java.util.Scanner.hasNextBigInteger();java.util.Scanner.hasNextBigInteger(int),;0.96;0.96
hasNextByte,2,0.96052501,Returns true if the next token in this scanner's input can be interpreted as a byte value in the specified radix using the nextByte() method. The scanner does not advance past any input.,;java.util.Scanner.hasNextByte();java.util.Scanner.hasNextByte(int),;0.96;0.96
hasNextInt,2,0.96052501,Returns true if the next token in this scanner's input can be interpreted as an int value in the specified radix using the nextInt() method. The scanner does not advance past any input.,;java.util.Scanner.hasNextInt();java.util.Scanner.hasNextInt(int),;0.96;0.96
hasNextLong,2,0.96052501,Returns true if the next token in this scanner's input can be interpreted as a long value in the specified radix using the nextLong() method. The scanner does not advance past any input.,;java.util.Scanner.hasNextLong();java.util.Scanner.hasNextLong(int),;0.96;0.96
hasNextShort,2,0.96052501,Returns true if the next token in this scanner's input can be interpreted as a short value in the specified radix using the nextShort() method. The scanner does not advance past any input.,;java.util.Scanner.hasNextShort();java.util.Scanner.hasNextShort(int),;0.96;0.96
hasQueuedPredecessors,2,0.985504633,"Queries whether any threads have been waiting to acquire longer than the current thread. An invocation of this method is equivalent to (but may be more efficient than): getFirstQueuedThread() != Thread.currentThread() &amp;&amp; hasQueuedThreads()Note that because cancellations due to interrupts and timeouts may occur at any time, a true return does not guarantee that some other thread will acquire before the current thread. Likewise, it is possible for another thread to win a race to enqueue after this method has returned false, due to the queue being empty. This method is designed to be used by a fair synchronizer to avoid barging. Such a synchronizer's tryAcquire(int) method should return false, and its tryAcquireShared(int) method should return a negative value, if this method returns true (unless this is a reentrant acquire). For example, the tryAcquire method for a fair, reentrant, exclusive mode synchronizer might look like this: protected boolean tryAcquire(int arg) { if (isHeldExclusively()) { // A reentrant acquire; increment hold count return true; } else if (hasQueuedPredecessors()) { return false; } else { // try to acquire normally } }",;java.util.concurrent.locks.AbstractQueuedLongSynchronizer.hasQueuedPredecessors();java.util.concurrent.locks.AbstractQueuedSynchronizer.hasQueuedPredecessors(),;0.99;0.99
hasQueuedThread,2,0.907786513,"Queries whether the given thread is waiting to acquire either the read or write lock. Note that because cancellations may occur at any time, a true return does not guarantee that this thread will ever acquire a lock. This method is designed primarily for use in monitoring of the system state.",;java.util.concurrent.locks.ReentrantLock.hasQueuedThread(Thread);java.util.concurrent.locks.ReentrantReadWriteLock.hasQueuedThread(Thread),;0.91;0.91
hasSameRules,2,0.649972979,"Returns true if this zone has the same rule and offset as another zone. That is, if this zone differs only in ID, if at all. Returns false if the other zone is null.",;java.util.SimpleTimeZone.hasSameRules(TimeZone);java.util.TimeZone.hasSameRules(TimeZone),;0.59;0.65
hasUniformLineMetrics,2,0.567245457,"Checks whether or not this Font has uniform line metrics. A logical Font might be a composite font, which means that it is composed of different physical fonts to cover different code ranges. Each of these fonts might have different LineMetrics. If the logical Font is a single font then the metrics would be uniform.",;java.awt.Font.hasUniformLineMetrics();java.awt.FontMetrics.hasUniformLineMetrics(),;0.57;0.57
higher,2,1,Description copied from interface:NavigableSet,;java.util.TreeSet.higher(E);java.util.concurrent.ConcurrentSkipListSet.higher(E),;1.00;1.00
higherEntry,2,0.5,"Returns a key-value mapping associated with the least key strictly greater than the given key, or null if there is no such key. The returned entry does not support the Entry.setValue method.",;java.util.TreeMap.higherEntry(K);java.util.concurrent.ConcurrentSkipListMap.higherEntry(K),;0.50;0.50
higherKey,2,1,Description copied from interface:NavigableMap,;java.util.TreeMap.higherKey(K);java.util.concurrent.ConcurrentSkipListMap.higherKey(K),;1.00;1.00
highestOneBit,2,0.946325958,"Returns a long value with at most a single one-bit, in the position of the highest-order (""leftmost"") one-bit in the specified long value. Returns zero if the specified value has no one-bits in its two's complement binary representation, that is, if it is equal to zero.",;java.lang.Integer.highestOneBit(int);java.lang.Long.highestOneBit(long),;0.95;0.95
hitTestChar,2,0.567293991,"Returns a TextHitInfo corresponding to the specified point. Coordinates outside the bounds of the TextLayout map to hits on the leading edge of the first logical character, or the trailing edge of the last logical character, as appropriate, regardless of the position of that character in the line. Only the direction along the baseline is used to make this evaluation.",";java.awt.font.TextLayout.hitTestChar(float,float,Rectangle2D);java.awt.font.TextLayout.hitTestChar(float,float)",;0.57;0.54
iconifyFrame,2,0.5,This method is called when the user wants to iconify the frame. The playMinimizeSound Action is fired. This action is delegated to the desktopManager.,;javax.swing.DefaultDesktopManager.iconifyFrame(JInternalFrame);javax.swing.plaf.basic.BasicInternalFrameUI.iconifyFrame(JInternalFrame),;0.50;0.50
implCloseChannel,2,0.625511765,"Closes this channel. This method is invoked by the close method in order to perform the actual work of closing the channel. This method is only invoked if the channel has not yet been closed, and it is never invoked more than once. An implementation of this method must arrange for any other thread that is blocked in an I/O operation upon this channel to return immediately, either by throwing an exception or by returning normally.",;java.nio.channels.spi.AbstractInterruptibleChannel.implCloseChannel();java.nio.channels.spi.AbstractSelectableChannel.implCloseChannel(),;0.63;0.61
implFlush,2,0.907468145,"Flushes this encoder. The default implementation of this method does nothing, and always returns CoderResult.UNDERFLOW. This method should be overridden by encoders that may need to write final bytes to the output buffer once the entire input sequence has been read.",;java.nio.charset.CharsetDecoder.implFlush(CharBuffer);java.nio.charset.CharsetEncoder.implFlush(ByteBuffer),;0.91;0.91
implOnMalformedInput,2,0.922639257,Reports a change to this encoder's malformed-input action. The default implementation of this method does nothing. This method should be overridden by encoders that require notification of changes to the malformed-input action.,;java.nio.charset.CharsetDecoder.implOnMalformedInput(CodingErrorAction);java.nio.charset.CharsetEncoder.implOnMalformedInput(CodingErrorAction),;0.92;0.92
implOnUnmappableCharacter,2,0.922639257,Reports a change to this encoder's unmappable-character action. The default implementation of this method does nothing. This method should be overridden by encoders that require notification of changes to the unmappable-character action.,;java.nio.charset.CharsetDecoder.implOnUnmappableCharacter(CodingErrorAction);java.nio.charset.CharsetEncoder.implOnUnmappableCharacter(CodingErrorAction),;0.92;0.92
implReplaceWith,2,0.914659063,Reports a change to this encoder's replacement value. The default implementation of this method does nothing. This method should be overridden by encoders that require notification of changes to the replacement.,;java.nio.charset.CharsetDecoder.implReplaceWith(String);java.nio.charset.CharsetEncoder.implReplaceWith(byte[]),;0.91;0.91
implReset,2,0.906782384,"Resets this encoder, clearing any charset-specific internal state. The default implementation of this method does nothing. This method should be overridden by encoders that maintain internal state.",;java.nio.charset.CharsetDecoder.implReset();java.nio.charset.CharsetEncoder.implReset(),;0.91;0.91
importData,2,0.552645191,"Causes a transfer to occur from a clipboard or a drag and drop operation. The Transferable to be imported and the component to transfer to are contained within the TransferSupport. While the drag and drop implementation calls canImport to determine the suitability of a transfer before calling this method, the implementation of paste does not. As such, it cannot be assumed that the transfer is acceptable upon a call to this method for paste. It is recommended that canImport be explicitly called to cover this case. Note: The TransferSupport object passed to this method is only valid for the duration of the method call. It is undefined what values it may contain after this method returns.",";javax.swing.TransferHandler.importData(TransferHandler.TransferSupport);javax.swing.TransferHandler.importData(JComponent,Transferable)",;0.55;0.55
incrementExact,2,0.925366567,"Returns the argument incremented by one, throwing an exception if the result overflows a long.",;java.lang.Math.incrementExact(int);java.lang.Math.incrementExact(long),;0.93;0.93
inDaylightTime,2,0.723550931,Queries if the given date is in Daylight Saving Time in this time zone.,;java.util.SimpleTimeZone.inDaylightTime(Date);java.util.TimeZone.inDaylightTime(Date),;0.72;0.72
indexOfTab,2,0.881232929,"Returns the first tab index with a given icon, or -1 if no tab has this icon.",;javax.swing.JTabbedPane.indexOfTab(String);javax.swing.JTabbedPane.indexOfTab(Icon),;0.88;0.88
inflate,2,1,"Uncompresses bytes into specified buffer. Returns actual number of bytes uncompressed. A return value of 0 indicates that needsInput() or needsDictionary() should be called in order to determine if more input data or a preset dictionary is required. In the latter case, getAdler() can be used to get the Adler-32 value of the dictionary required.",";java.util.zip.Inflater.inflate(byte[],int,int);java.util.zip.Inflater.inflate(byte[])",;1.00;1.00
info,2,0.684010423,"Log a INFO message, which is only to be constructed if the logging level is such that the message will actually be logged. If the logger is currently enabled for the INFO message level then the message is constructed by invoking the provided supplier function and forwarded to all the registered output Handler objects.",;java.util.logging.Logger.info(String);java.util.logging.Logger.info(Supplier&lt;String&gt;),;0.64;0.68
initClassDefaults,2,0.62121113,"Populates table with mappings from uiClassID to the fully qualified name of the ui class. MetalLookAndFeel registers an entry for each of the classes in the package javax.swing.plaf.metal that are named MetalXXXUI. The string XXX is one of Swing's uiClassIDs. For the uiClassIDs that do not have a class in metal, the corresponding class in javax.swing.plaf.basic is used. For example, metal does not have a class named ""MetalColorChooserUI"", as such, javax.swing.plaf.basic.BasicColorChooserUI is used.",;javax.swing.plaf.basic.BasicLookAndFeel.initClassDefaults(UIDefaults);javax.swing.plaf.metal.MetalLookAndFeel.initClassDefaults(UIDefaults),;0.59;0.62
initComponentDefaults,2,0.730868315,Populates table with the defaults for the basic look and feel.,;javax.swing.plaf.basic.BasicLookAndFeel.initComponentDefaults(UIDefaults);javax.swing.plaf.metal.MetalLookAndFeel.initComponentDefaults(UIDefaults),;0.73;0.73
initializeBeanContextResources,2,0.5,called from setBeanContext to notify a BeanContextChild to allocate resources obtained from the nesting BeanContext. subclasses may envelope this method to implement their own semantics.,;java.beans.beancontext.BeanContextChildSupport.initializeBeanContextResources();java.beans.beancontext.BeanContextServicesSupport.initializeBeanContextResources(),;0.50;0.50
initializeLocalVars,2,0.5,Initializes the local variables and properties with default values. Used by the constructor methods.,;javax.swing.JTable.initializeLocalVars();javax.swing.table.JTableHeader.initializeLocalVars(),;0.50;0.50
initSign,2,1,"Initialize this object for signing. If this method is called again with a different argument, it negates the effect of this call.",";java.security.Signature.initSign(PrivateKey);java.security.Signature.initSign(PrivateKey,SecureRandom)",;1.00;1.00
initSystemColorDefaults,2,0.518177012,"Populates table with system colors. This creates an array of name-color pairs and invokes loadSystemColors. The name is a String that corresponds to the name of one of the static SystemColor fields in the SystemColor class. A name-color pair is created for every such SystemColor field. The color corresponds to a hex String as understood by Color.decode. For example, one of the name-color pairs is ""desktop""-""#005C5C"". This corresponds to the SystemColor field desktop, with a color value of new Color(0x005C5C). The following shows two of the name-color pairs: String[] nameColorPairs = new String[] { ""desktop"", ""#005C5C"", ""activeCaption"", ""#000080"" }; loadSystemColors(table, nameColorPairs, isNativeLookAndFeel()); As previously stated, this invokes loadSystemColors with the supplied table and name-color pair array. The last argument to loadSystemColors indicates whether the value of the field in SystemColor should be used. This method passes the value of isNativeLookAndFeel() as the last argument to loadSystemColors.",;javax.swing.plaf.basic.BasicLookAndFeel.initSystemColorDefaults(UIDefaults);javax.swing.plaf.metal.MetalLookAndFeel.initSystemColorDefaults(UIDefaults),;0.52;0.52
initVerify,2,0.530516053,"Initializes this object for verification, using the public key from the given certificate. If the certificate is of type X.509 and has a key usage extension field marked as critical, and the value of the key usage extension field implies that the public key in the certificate and its corresponding private key are not supposed to be used for digital signatures, an InvalidKeyException is thrown.",;java.security.Signature.initVerify(PublicKey);java.security.Signature.initVerify(Certificate),;0.51;0.53
insert_fixed,2,1,Throws an org.omg.CORBA.NO_IMPLEMENT exception. Inserts the given java.math.BigDecimal object into this Any object's value field.,";org.omg.CORBA.Any.insert_fixed(BigDecimal);org.omg.CORBA.Any.insert_fixed(BigDecimal,TypeCode)",;1.00;1.00
insert_Object,2,1,Inserts the given org.omg.CORBA.Object object into this Any object's value field.,";org.omg.CORBA.Any.insert_Object(Object);org.omg.CORBA.Any.insert_Object(Object,TypeCode)",;1.00;1.00
insert_Value,2,1,Inserts the given java.io.Serializable object into this Any object's value field.,";org.omg.CORBA.Any.insert_Value(Serializable);org.omg.CORBA.Any.insert_Value(Serializable,TypeCode)",;1.00;1.00
insertChar,2,0.540911254,"Updates the TextMeasurer after a single character has been inserted into the paragraph currently represented by this TextMeasurer. After this call, this TextMeasurer is equivalent to a new TextMeasurer created from the text; however, it will usually be more efficient to update an existing TextMeasurer than to create a new one from scratch.",";java.awt.font.LineBreakMeasurer.insertChar(AttributedCharacterIterator,int);java.awt.font.TextMeasurer.insertChar(AttributedCharacterIterator,int)",;0.53;0.54
insertHTML,2,0.5,A cover for HTMLEditorKit.insertHTML. If an exception it thrown it is wrapped in a RuntimeException and thrown.,";javax.swing.text.html.HTMLEditorKit.insertHTML(HTMLDocument,int,String,int,int,HTML.Tag);javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction.insertHTML(JEditorPane,HTMLDocument,int,String,int,int,HTML.Tag)",;0.50;0.50
insertParameterTypes,2,1,Finds or creates a method type with additional parameter types. Convenience method for methodType.,";java.lang.invoke.MethodType.insertParameterTypes(int,Class&lt;?&gt;...);java.lang.invoke.MethodType.insertParameterTypes(int,List&lt;Class&lt;?&gt;&gt;)",;1.00;1.00
insertRow,2,1,Inserts a row at row in the model. The new row will contain null values unless rowData is specified. Notification of the row being added will be generated.,";javax.swing.table.DefaultTableModel.insertRow(int,Vector);javax.swing.table.DefaultTableModel.insertRow(int,Object[])",;1.00;1.00
insertSeparator,2,1,Inserts a separator at the specified position.,;java.awt.Menu.insertSeparator(int);javax.swing.JMenu.insertSeparator(int),;1.00;1.00
installLookAndFeel,2,0.794533781,"Adds the specified look and feel to the set of available look and feels. While this method allows a null info, it is strongly recommended that a non-null value be used.",";javax.swing.UIManager.installLookAndFeel(UIManager.LookAndFeelInfo);javax.swing.UIManager.installLookAndFeel(String,String)",;0.79;0.79
interestOps,2,0.748408044,"Retrieves this key's interest set. It is guaranteed that the returned set will only contain operation bits that are valid for this key's channel. This method may be invoked at any time. Whether or not it blocks, and for how long, is implementation-dependent.",;java.nio.channels.SelectionKey.interestOps();java.nio.channels.SelectionKey.interestOps(int),;0.75;0.73
interrupt,2,0.519129681,"Interrupts this thread. Unless the current thread is interrupting itself, which is always permitted, the checkAccess method of this thread is invoked, which may cause a SecurityException to be thrown. If this thread is blocked in an invocation of the wait(), wait(long), or wait(long, int) methods of the Object class, or of the join(), join(long), join(long, int), sleep(long), or sleep(long, int), methods of this class, then its interrupt status will be cleared and it will receive an InterruptedException. If this thread is blocked in an I/O operation upon an InterruptibleChannel then the channel will be closed, the thread's interrupt status will be set, and the thread will receive a ClosedByInterruptException. If this thread is blocked in a Selector then the thread's interrupt status will be set and it will return immediately from the selection operation, possibly with a non-zero value, just as if the selector's wakeup method were invoked. If none of the previous conditions hold then this thread's interrupt status will be set. Interrupting a thread that is not alive need not have any effect.",;java.lang.Thread.interrupt();java.lang.ThreadGroup.interrupt(),;0.52;0.50
intersect,2,0.5,"Intersects the pair of specified source Rectangle2D objects and puts the result into the specified destination Rectangle2D object. One of the source rectangles can also be the destination to avoid creating a third Rectangle2D object, but in this case the original points of this source rectangle will be overwritten by this method.",";java.awt.geom.Area.intersect(Area);java.awt.geom.Rectangle2D.intersect(Rectangle2D,Rectangle2D,Rectangle2D)",;0.50;0.50
intervalAdded,2,0.5,This method is public as an implementation side effect. do not call or override.,;javax.swing.JComboBox.intervalAdded(ListDataEvent);javax.swing.plaf.basic.BasicDirectoryModel.intervalAdded(ListDataEvent),;0.50;0.00
intervalRemoved,2,0.5,This method is public as an implementation side effect. do not call or override.,;javax.swing.JComboBox.intervalRemoved(ListDataEvent);javax.swing.plaf.basic.BasicDirectoryModel.intervalRemoved(ListDataEvent),;0.50;0.00
intStream,2,0.647854189,"Creates a new sequential or parallel IntStream from a Supplier of Spliterator.OfInt. The Supplier.get() method will be invoked on the supplier no more than once, and only after the terminal operation of the stream pipeline commences. For spliterators that report a characteristic of IMMUTABLE or CONCURRENT, or that are late-binding, it is likely more efficient to use intStream(java.util.Spliterator.OfInt, boolean) instead. The use of a Supplier in this form provides a level of indirection that reduces the scope of potential interference with the source. Since the supplier is only invoked after the terminal operation commences, any modifications to the source up to the start of the terminal operation are reflected in the stream result. See Non-Interference for more details.",";java.util.stream.StreamSupport.intStream(Spliterator.OfInt,boolean);java.util.stream.StreamSupport.intStream(Supplier&lt;?,int,boolean)",;0.63;0.65
intValueExact,2,0.70095232,"Converts this BigDecimal to an int, checking for lost information. If this BigDecimal has a nonzero fractional part or is out of the possible range for an int result then an ArithmeticException is thrown.",;java.math.BigDecimal.intValueExact();java.math.BigInteger.intValueExact(),;0.70;0.70
invalidEdit,2,0.5,This should be invoked when the user types an invalid character. This forwards the call to the current JFormattedTextField.,;javax.swing.JFormattedTextField.invalidEdit();javax.swing.JFormattedTextField.AbstractFormatter.invalidEdit(),;0.50;0.50
inverseTransform,2,0.5,"Inverse transforms an array of double precision coordinates by this transform. The two coordinate array sections can be exactly the same or can be overlapping sections of the same array without affecting the validity of the results. This method ensures that no source coordinates are overwritten by a previous operation before they can be transformed. The coordinates are stored in the arrays starting at the specified offset in the order [x0, y0, x1, y1, ..., xn, yn].",";java.awt.geom.AffineTransform.inverseTransform(Point2D,Point2D);java.awt.geom.AffineTransform.inverseTransform(double[],int,double[],int,int)",;0.50;0.50
invokeAndWait,2,0.513844787,"Causes doRun.run() to be executed synchronously on the AWT event dispatching thread. This call blocks until all pending AWT events have been processed and (then) doRun.run() returns. This method should be used when an application thread needs to update the GUI. It shouldn't be called from the event dispatching thread. Here's an example that creates a new application thread that uses invokeAndWait to print a string from the event dispatching thread and then, when that's finished, print a string from the application thread. final Runnable doHelloWorld = new Runnable() { public void run() { System.out.println(""Hello World on "" + Thread.currentThread()); } }; Thread appThread = new Thread() { public void run() { try { SwingUtilities.invokeAndWait(doHelloWorld); } catch (Exception e) { e.printStackTrace(); } System.out.println(""Finished on "" + Thread.currentThread()); } }; appThread.start(); Note that if the Runnable.run method throws an uncaught exception (on the event dispatching thread) it's caught and rethrown, as an InvocationTargetException, on the caller's thread. Additional documentation and examples for this method can be found in Concurrency in Swing. As of 1.3 this method is just a cover for java.awt.EventQueue.invokeAndWait().",;java.awt.EventQueue.invokeAndWait(Runnable);javax.swing.SwingUtilities.invokeAndWait(Runnable),;0.50;0.51
invokeAny,2,1,Description copied from interface:ExecutorService,";java.util.concurrent.AbstractExecutorService.invokeAny(Collection&lt;?);java.util.concurrent.AbstractExecutorService.invokeAny(Collection&lt;?,long,TimeUnit)",;1.00;1.00
invokeLater,2,0.518043437,"Causes doRun.run() to be executed asynchronously on the AWT event dispatching thread. This will happen after all pending AWT events have been processed. This method should be used when an application thread needs to update the GUI. In the following example the invokeLater call queues the Runnable object doHelloWorld on the event dispatching thread and then prints a message. Runnable doHelloWorld = new Runnable() { public void run() { System.out.println(""Hello World on "" + Thread.currentThread()); } }; SwingUtilities.invokeLater(doHelloWorld); System.out.println(""This might well be displayed before the other message.""); If invokeLater is called from the event dispatching thread -- for example, from a JButton's ActionListener -- the doRun.run() will still be deferred until all pending events have been processed. Note that if the doRun.run() throws an uncaught exception the event dispatching thread will unwind (not the current thread). Additional documentation and examples for this method can be found in Concurrency in Swing. As of 1.3 this method is just a cover for java.awt.EventQueue.invokeLater(). Unlike the rest of Swing, this method can be invoked from any thread.",;java.awt.EventQueue.invokeLater(Runnable);javax.swing.SwingUtilities.invokeLater(Runnable),;0.50;0.52
ioException,2,0.620240897,"Returns the IOException last thrown by this formatter's Appendable. If the destination's append() method never throws IOException, then this method will always return null.",;java.util.Formatter.ioException();java.util.Scanner.ioException(),;0.62;0.62
isAbsolute,2,0.5,"Tells whether or not this URI is absolute. A URI is absolute if, and only if, it has a scheme component.",;java.io.File.isAbsolute();java.net.URI.isAbsolute(),;0.50;0.50
isAlive,2,0.5,Tests if this thread is alive. A thread is alive if it has been started and has not yet died.,;java.lang.Process.isAlive();java.lang.Thread.isAlive(),;0.50;0.50
isAlphaPremultiplied,2,0.567813674,"Returns whether or not the alpha has been premultiplied in the pixel values to be translated by this ColorModel. If the boolean is true, this ColorModel is to be used to interpret pixel values in which color and alpha information are represented as separate spatial bands, and color samples are assumed to have been multiplied by the alpha sample.",;java.awt.image.BufferedImage.isAlphaPremultiplied();java.awt.image.ColorModel.isAlphaPremultiplied(),;0.52;0.57
isAlwaysOnTopSupported,2,0.621698641,"Returns whether the always-on-top mode is supported for this window. Some platforms may not support always-on-top windows, some may support only some kinds of top-level windows; for example, a platform may not support always-on-top modal dialogs.",;java.awt.Toolkit.isAlwaysOnTopSupported();java.awt.Window.isAlwaysOnTopSupported(),;0.61;0.62
isArmed,2,0.5,Returns whether the menu item is "armed".,;javax.swing.DefaultButtonModel.isArmed();javax.swing.JMenuItem.isArmed(),;0.50;0.50
isArray,2,0.5,"Returns true if the open data values this open type describes are arrays, false otherwise.",;java.lang.Class.isArray();javax.management.openmbean.OpenType.isArray(),;0.50;0.50
isBlocking,2,0.5,Description copied from class:SelectableChannel,;java.nio.channels.SelectableChannel.isBlocking();java.nio.channels.spi.AbstractSelectableChannel.isBlocking(),;0.50;0.50
isBold,2,0.5,Checks whether the bold attribute is set.,;java.awt.Font.isBold();javax.swing.text.StyleConstants.isBold(AttributeSet),;0.50;0.50
isCollapsed,2,0.549964349,"Returns true if the value identified by path is currently collapsed, this will return false if any of the values in path are currently not being displayed.",;javax.swing.JTree.isCollapsed(TreePath);javax.swing.JTree.isCollapsed(int),;0.55;0.53
isCompressionLossless,2,0.5,Returns false since the JPEG plug-in only supports lossy compression.,;javax.imageio.ImageWriteParam.isCompressionLossless();javax.imageio.plugins.jpeg.JPEGImageWriteParam.isCompressionLossless(),;0.50;0.50
isContinuousLayout,2,0.5,Determines whether the JSplitPane is set to use a continuous layout.,;javax.swing.JSplitPane.isContinuousLayout();javax.swing.plaf.basic.BasicSplitPaneUI.isContinuousLayout(),;0.50;0.50
isDaemon,2,0.580775424,Tests if this thread group is a daemon thread group. A daemon thread group is automatically destroyed when its last thread is stopped or its last thread group is destroyed.,;java.lang.Thread.isDaemon();java.lang.ThreadGroup.isDaemon(),;0.52;0.58
isDefaultLookAndFeelDecorated,2,0.959233901,"Returns true if newly created JFrames should have their Window decorations provided by the current look and feel. This is only a hint, as certain look and feels may not support this feature.",;javax.swing.JDialog.isDefaultLookAndFeelDecorated();javax.swing.JFrame.isDefaultLookAndFeelDecorated(),;0.96;0.96
isDesignTime,2,0.5,Reports whether or not this object is in currently in design time mode.,;java.beans.Beans.isDesignTime();java.beans.beancontext.BeanContextSupport.isDesignTime(),;0.50;0.50
isDoubleBuffered,2,0.5,Returns whether this component should use a buffer to paint.,;java.awt.Component.isDoubleBuffered();javax.swing.JComponent.isDoubleBuffered(),;0.50;0.50
isFinite,2,1,Returns true if the argument is a finite floating-point value; returns false otherwise (for NaN and infinity arguments).,;java.lang.Double.isFinite(double);java.lang.Float.isFinite(float),;1.00;1.00
isFixedRowHeight,2,0.883866584,Returns true if the height of each row is a fixed size.,;javax.swing.JTree.isFixedRowHeight();javax.swing.tree.AbstractLayoutCache.isFixedRowHeight(),;0.88;0.88
isHeldByCurrentThread,2,0.533151195,"Queries if this lock is held by the current thread. Analogous to the Thread.holdsLock(Object) method for built-in monitor locks, this method is typically used for debugging and testing. For example, a method that should only be called while a lock is held can assert that this is the case: class X { ReentrantLock lock = new ReentrantLock(); // ... public void m() { assert lock.isHeldByCurrentThread(); // ... method body } }It can also be used to ensure that a reentrant lock is used in a non-reentrant manner, for example: class X { ReentrantLock lock = new ReentrantLock(); // ... public void m() { assert !lock.isHeldByCurrentThread(); lock.lock(); try { // ... method body } finally { lock.unlock(); } } }",;java.util.concurrent.locks.ReentrantLock.isHeldByCurrentThread();java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.isHeldByCurrentThread(),;0.53;0.50
isHeldExclusively,2,0.933117372,"Returns true if synchronization is held exclusively with respect to the current (calling) thread. This method is invoked upon each call to a non-waiting AbstractQueuedSynchronizer.ConditionObject method. (Waiting methods instead invoke release(int).) The default implementation throws UnsupportedOperationException. This method is invoked internally only within AbstractQueuedSynchronizer.ConditionObject methods, so need not be defined if conditions are not used.",;java.util.concurrent.locks.AbstractQueuedLongSynchronizer.isHeldExclusively();java.util.concurrent.locks.AbstractQueuedSynchronizer.isHeldExclusively(),;0.93;0.93
isIdentity,2,0.693137649,Returns true if this AffineTransform is an identity transform.,;java.awt.font.TransformAttribute.isIdentity();java.awt.geom.AffineTransform.isIdentity(),;0.69;0.69
isInterface,2,0.5,"Return true if the integer argument includes the interface modifier, false otherwise.",;java.lang.Class.isInterface();java.lang.reflect.Modifier.isInterface(int),;0.50;0.50
isISOControl,2,0.791664794,"Determines if the specified character is an ISO control character. A character is considered to be an ISO control character if its code is in the range '\u0000' through '\u001F' or in the range '\u007F' through '\u009F'. Note: This method cannot handle supplementary characters. To support all Unicode characters, including supplementary characters, use the isISOControl(int) method.",;java.lang.Character.isISOControl(char);java.lang.Character.isISOControl(int),;0.79;0.77
isItalic,2,0.5,Checks whether the italic attribute is set.,;java.awt.Font.isItalic();javax.swing.text.StyleConstants.isItalic(AttributeSet),;0.50;0.50
isLeap,2,1,"Checks if the year is a leap year, according to the ISO proleptic calendar system rules. This method applies the current rules for leap years across the whole time-line. In general, a year is a leap year if it is divisible by four without remainder. However, years divisible by 100, are not leap years, with the exception of years divisible by 400 which are. For example, 1904 is a leap year it is divisible by 4. 1900 was not a leap year as it is divisible by 100, however 2000 was a leap year as it is divisible by 400. The calculation is proleptic - applying the same rules into the far future and far past. This is historically inaccurate, but is correct for the ISO-8601 standard.",;java.time.Year.isLeap(long);java.time.Year.isLeap(),;1.00;1.00
isLenient,2,0.591647068,Tell whether date/time parsing is to be lenient. This method is equivalent to the following call. getCalendar().isLenient(),;java.text.DateFormat.isLenient();java.util.Calendar.isLenient(),;0.59;0.57
isLetterOrDigit,2,0.711315377,"Determines if the specified character is a letter or digit. A character is considered to be a letter or digit if either Character.isLetter(char ch) or Character.isDigit(char ch) returns true for the character. Note: This method cannot handle supplementary characters. To support all Unicode characters, including supplementary characters, use the isLetterOrDigit(int) method.",;java.lang.Character.isLetterOrDigit(char);java.lang.Character.isLetterOrDigit(int),;0.71;0.69
isLowerCase,2,0.899700505,"Determines if the specified character is a lowercase character. A character is lowercase if its general category type, provided by Character.getType(ch), is LOWERCASE_LETTER, or it has contributory property Other_Lowercase as defined by the Unicode Standard. The following are examples of lowercase characters: a b c d e f g h i j k l m n o p q r s t u v w x y z '\u00DF' '\u00E0' '\u00E1' '\u00E2' '\u00E3' '\u00E4' '\u00E5' '\u00E6' '\u00E7' '\u00E8' '\u00E9' '\u00EA' '\u00EB' '\u00EC' '\u00ED' '\u00EE' '\u00EF' '\u00F0' '\u00F1' '\u00F2' '\u00F3' '\u00F4' '\u00F5' '\u00F6' '\u00F8' '\u00F9' '\u00FA' '\u00FB' '\u00FC' '\u00FD' '\u00FE' '\u00FF' Many other Unicode characters are lowercase too. Note: This method cannot handle supplementary characters. To support all Unicode characters, including supplementary characters, use the isLowerCase(int) method.",;java.lang.Character.isLowerCase(char);java.lang.Character.isLowerCase(int),;0.90;0.90
isMirrored,2,0.864619657,"Determines whether the character is mirrored according to the Unicode specification. Mirrored characters should have their glyphs horizontally mirrored when displayed in text that is right-to-left. For example, '\u0028' LEFT PARENTHESIS is semantically defined to be an opening parenthesis. This will appear as a ""("" in text that is left-to-right but as a "")"" in text that is right-to-left. Note: This method cannot handle supplementary characters. To support all Unicode characters, including supplementary characters, use the isMirrored(int) method.",;java.lang.Character.isMirrored(char);java.lang.Character.isMirrored(int),;0.86;0.86
isMultipleMode,2,0.5,Determines whether this list allows multiple selections.,;java.awt.FileDialog.isMultipleMode();java.awt.List.isMultipleMode(),;0.50;0.50
isNameCompatible,2,0.5,"This implementation compares the path of its URI to the given simple name. This method returns true if the given kind is equal to the kind of this object, and if the path is equal to simpleName + kind.extension or if it ends with ""/"" + simpleName + kind.extension. This method calls getKind() and toUri() and does not access the fields uri and kind directly. Subclasses can change this behavior as long as the contract of JavaFileObject is obeyed.",";javax.tools.ForwardingJavaFileObject.isNameCompatible(String,JavaFileObject.Kind);javax.tools.SimpleJavaFileObject.isNameCompatible(String,JavaFileObject.Kind)",;0.50;0.50
isNegative,2,0.5,"Checks if any of the three units of this period are negative. This checks whether the years, months or days units are less than zero.",;java.time.Duration.isNegative();java.time.Period.isNegative(),;0.50;0.50
isParityAdjusted,2,0.856947892,"Checks if the given DES key material, starting at offset inclusive, is parity-adjusted.",";javax.crypto.spec.DESedeKeySpec.isParityAdjusted(byte[],int);javax.crypto.spec.DESKeySpec.isParityAdjusted(byte[],int)",;0.86;0.86
isPathSelected,2,0.639985129,"Returns true if the path, path, is in the current selection.",;javax.swing.JTree.isPathSelected(TreePath);javax.swing.tree.DefaultTreeSelectionModel.isPathSelected(TreePath),;0.64;0.64
isPrimitive,2,0.5,"Determines if the specified Class object represents a primitive type. There are nine predefined Class objects to represent the eight primitive types and void. These are created by the Java Virtual Machine, and have the same names as the primitive types that they represent, namely boolean, byte, char, short, int, long, float, and double. These objects may only be accessed via the following public static final variables, and are the only Class objects for which this method returns true.",;java.io.ObjectStreamField.isPrimitive();java.lang.Class.isPrimitive(),;0.50;0.50
isPropertySupported,2,1,Query the set of properties that this factory supports.,;javax.xml.stream.XMLInputFactory.isPropertySupported(String);javax.xml.stream.XMLOutputFactory.isPropertySupported(String),;1.00;1.00
isPropertyValuePattern,2,0.5,Checks whether the value associated with a key in a key property is a pattern.,;javax.management.ObjectName.isPropertyValuePattern();javax.management.ObjectName.isPropertyValuePattern(String),;0.50;0.50
isQueued,2,1,Returns true if the given thread is currently queued. This implementation traverses the queue to determine presence of the given thread.,;java.util.concurrent.locks.AbstractQueuedLongSynchronizer.isQueued(Thread);java.util.concurrent.locks.AbstractQueuedSynchronizer.isQueued(Thread),;1.00;1.00
isReachable,2,0.856975427,"Test whether that address is reachable. Best effort is made by the implementation to try to reach the host, but firewalls and server configuration may block requests resulting in a unreachable status while some specific ports may be accessible. A typical implementation will use ICMP ECHO REQUESTs if the privilege can be obtained, otherwise it will try to establish a TCP connection on port 7 (Echo) of the destination host. The network interface and ttl parameters let the caller specify which network interface the test will go through and the maximum number of hops the packets should go through. A negative value for the ttl will result in an IllegalArgumentException being thrown. The timeout value, in milliseconds, indicates the maximum amount of time the try should take. If the operation times out before getting an answer, the host is deemed unreachable. A negative value will result in an IllegalArgumentException being thrown.",";java.net.InetAddress.isReachable(int);java.net.InetAddress.isReachable(NetworkInterface,int,int)",;0.84;0.86
isRollover,2,0.5,Returns the rollover state.,;javax.swing.DefaultButtonModel.isRollover();javax.swing.JToolBar.isRollover(),;0.50;0.50
isRoot,2,0.5,Returns true if this node is the root of the tree. The root is the only node in the tree with a null parent; every tree has exactly one root.,;javax.swing.filechooser.FileSystemView.isRoot(File);javax.swing.tree.DefaultMutableTreeNode.isRoot(),;0.50;0.50
isRootVisible,2,1,Returns true if the root node of the tree is displayed.,;javax.swing.JTree.isRootVisible();javax.swing.tree.AbstractLayoutCache.isRootVisible(),;1.00;1.00
isSameFile,2,0.5,Description copied from interface:JavaFileManager,";java.nio.file.spi.FileSystemProvider.isSameFile(Path,Path);javax.tools.ForwardingJavaFileManager.isSameFile(FileObject,FileObject)",;0.50;0.50
isSealed,2,0.70008008,Returns true if this package is sealed with respect to the specified code source url.,;java.lang.Package.isSealed();java.lang.Package.isSealed(URL),;0.66;0.70
isSelectedIndex,2,0.612405371,"Returns true if the specified index is selected, else false. This is a cover method that delegates to the method of the same name on the list's selection model.",;javax.swing.DefaultListSelectionModel.isSelectedIndex(int);javax.swing.JList.isSelectedIndex(int),;0.53;0.61
isSet,2,0.5,Checks if a field is set. A field of a duration object may or may not be present. This method can be used to test if a field is present.,;java.util.Calendar.isSet(int);javax.xml.datatype.Duration.isSet(DatatypeConstants.Field),;0.50;0.50
isSignificant,2,0.5,Returns true if any of the UndoableEdits in edits do. Returns false if they all return false.,;javax.swing.undo.AbstractUndoableEdit.isSignificant();javax.swing.undo.CompoundEdit.isSignificant(),;0.50;0.50
isTearOff,2,0.5,Returns true if the menu can be torn off. This method is not yet implemented.,;java.awt.Menu.isTearOff();javax.swing.JMenu.isTearOff(),;0.50;0.50
isTerminating,2,0.722704657,"Returns true if the process of termination has commenced but not yet completed. This method may be useful for debugging. A return of true reported a sufficient period after shutdown may indicate that submitted tasks have ignored or suppressed interruption, or are waiting for I/O, causing this executor not to properly terminate. (See the advisory notes for class ForkJoinTask stating that tasks should not normally entail blocking operations. But if they do, they must abort them on interrupt.)",;java.util.concurrent.ForkJoinPool.isTerminating();java.util.concurrent.ThreadPoolExecutor.isTerminating(),;0.72;0.71
isTransformed,2,0.600790374,Indicates whether or not this Font object has a transform that affects its size in addition to the Size attribute.,;java.awt.Font.isTransformed();java.awt.font.FontRenderContext.isTransformed(),;0.60;0.60
isUndecorated,2,0.737936655,"Indicates whether this frame is undecorated. By default, all frames are initially decorated.",;java.awt.Dialog.isUndecorated();java.awt.Frame.isUndecorated(),;0.74;0.74
isUpperCase,2,0.898095935,"Determines if the specified character is an uppercase character. A character is uppercase if its general category type, provided by Character.getType(ch), is UPPERCASE_LETTER. or it has contributory property Other_Uppercase as defined by the Unicode Standard. The following are examples of uppercase characters: A B C D E F G H I J K L M N O P Q R S T U V W X Y Z '\u00C0' '\u00C1' '\u00C2' '\u00C3' '\u00C4' '\u00C5' '\u00C6' '\u00C7' '\u00C8' '\u00C9' '\u00CA' '\u00CB' '\u00CC' '\u00CD' '\u00CE' '\u00CF' '\u00D0' '\u00D1' '\u00D2' '\u00D3' '\u00D4' '\u00D5' '\u00D6' '\u00D8' '\u00D9' '\u00DA' '\u00DB' '\u00DC' '\u00DD' '\u00DE' Many other Unicode characters are uppercase too. Note: This method cannot handle supplementary characters. To support all Unicode characters, including supplementary characters, use the isUpperCase(int) method.",;java.lang.Character.isUpperCase(char);java.lang.Character.isUpperCase(int),;0.90;0.89
isUserNode,2,0.5,"Returns true if this preference node is in the user preference tree, false if it's in the system preference tree.",;java.util.prefs.AbstractPreferences.isUserNode();java.util.prefs.Preferences.isUserNode(),;0.50;0.50
isValidOffset,2,0.5,"Checks if the offset date-time is valid for these rules. To be valid, the local date-time must not be in a gap and the offset must match one of the valid offsets. This default implementation checks if getValidOffsets(java.time.LocalDateTime) contains the specified offset.",";java.time.zone.ZoneOffsetTransition.isValidOffset(ZoneOffset);java.time.zone.ZoneRules.isValidOffset(LocalDateTime,ZoneOffset)",;0.50;0.50
isWeekDateSupported,2,0.5,Returns true indicating this GregorianCalendar supports week dates.,;java.util.Calendar.isWeekDateSupported();java.util.GregorianCalendar.isWeekDateSupported(),;0.50;0.50
isWheelScrollingEnabled,2,1,Indicates whether or not scrolling will take place in response to the mouse wheel. Wheel scrolling is enabled by default.,;java.awt.ScrollPane.isWheelScrollingEnabled();javax.swing.JScrollPane.isWheelScrollingEnabled(),;1.00;1.00
isWhiteSpace,2,0.5,Description copied from interface:XMLStreamReader,;javax.xml.bind.annotation.adapters.CollapsedStringAdapter.isWhiteSpace(char);javax.xml.stream.util.StreamReaderDelegate.isWhiteSpace(),;0.50;0.50
isWriteLocked,2,0.5,Returns true if the lock is currently held exclusively.,;java.util.concurrent.locks.ReentrantReadWriteLock.isWriteLocked();java.util.concurrent.locks.StampedLock.isWriteLocked(),;0.50;0.50
isXOPPackage,2,0.548369852,"Read-only property that returns true if JAXB marshaller should enable XOP creation.This value must not change during the marshalling process. When this value is true, the addMtomAttachment(...) method is invoked when the appropriate binary datatypes are encountered by the marshal process.Marshaller.marshal() must throw IllegalStateException if this value is true and the XML content to be marshalled violates Step 1 in Creating XOP Pacakges http://www.w3.org/TR/2005/REC-xop10-20050125/#creating_xop_packages. ""Ensure the Original XML Infoset contains no element information item with a [namespace name] of ""http://www.w3.org/2004/08/xop/include"" and a [local name] of Include""When this method returns true and during the marshal process at least one call to addMtomAttachment(...) returns a content-id, the MIME-based package processor must label the root part with the application/xop+xml media type as described in Step 5 of Creating XOP Pacakges.",;javax.xml.bind.attachment.AttachmentMarshaller.isXOPPackage();javax.xml.bind.attachment.AttachmentUnmarshaller.isXOPPackage(),;0.55;0.51
isZero,2,0.5,"Checks if all three units of this period are zero. A zero period has the value zero for the years, months and days units.",;java.time.Duration.isZero();java.time.Period.isZero(),;0.50;0.50
keyFor,2,0.5,Description copied from class:SelectableChannel,;java.nio.channels.SelectableChannel.keyFor(Selector);java.nio.channels.spi.AbstractSelectableChannel.keyFor(Selector),;0.50;0.50
keyPressed,2,0.5,Invoked when a key has been pressed.,;java.awt.AWTEventMulticaster.keyPressed(KeyEvent);java.awt.event.KeyAdapter.keyPressed(KeyEvent),;0.50;0.50
keyReleased,2,0.5,Invoked when a key has been released.,;java.awt.AWTEventMulticaster.keyReleased(KeyEvent);java.awt.event.KeyAdapter.keyReleased(KeyEvent),;0.50;0.50
keyTyped,2,0.5,Invoked when a key has been typed. This event occurs when a key press is followed by a key release.,;java.awt.AWTEventMulticaster.keyTyped(KeyEvent);java.awt.event.KeyAdapter.keyTyped(KeyEvent),;0.50;0.50
lastElement,2,0.656571124,Returns the last component of the list. Throws a NoSuchElementException if this vector has no components.,;java.util.Vector.lastElement();javax.swing.DefaultListModel.lastElement(),;0.62;0.66
lastEntry,2,0.5,"Returns a key-value mapping associated with the greatest key in this map, or null if the map is empty. The returned entry does not support the Entry.setValue method.",;java.util.TreeMap.lastEntry();java.util.concurrent.ConcurrentSkipListMap.lastEntry(),;0.50;0.50
lastKey,2,1,Description copied from interface:SortedMap,;java.util.TreeMap.lastKey();java.util.concurrent.ConcurrentSkipListMap.lastKey(),;1.00;1.00
layoutCompoundLabel,2,0.763838827,"Compute and return the location of the icons origin, the location of origin of the text baseline, and a possibly clipped version of the compound labels string. Locations are computed relative to the viewR rectangle. This layoutCompoundLabel() does not know how to handle LEADING/TRAILING values in horizontalTextPosition (they will default to RIGHT) and in horizontalAlignment (they will default to CENTER). Use the other version of layoutCompoundLabel() instead.",";javax.swing.SwingUtilities.layoutCompoundLabel(JComponent,FontMetrics,String,Icon,int,int,int,int,Rectangle,Rectangle,Rectangle,int);javax.swing.SwingUtilities.layoutCompoundLabel(FontMetrics,String,Icon,int,int,int,int,Rectangle,Rectangle,Rectangle,int)",;0.76;0.76
limit,2,0.531189615,Sets this buffer's limit. If the position is larger than the new limit then it is set to the new limit. If the mark is defined and larger than the new limit then it is discarded.,;java.nio.Buffer.limit();java.nio.Buffer.limit(int),;0.50;0.53
linkSize,2,0.91221349,"Forces the specified components to have the same size along the specified axis regardless of their preferred, minimum or maximum sizes. Components that are linked are given the maximum of the preferred size of each of the linked components. For example, if you link two components along the horizontal axis and the preferred width is 10 and 20, both components are given a width of 20. This can be used multiple times to force any number of components to share the same size. Linked Components are not be resizable.",";javax.swing.GroupLayout.linkSize(Component...);javax.swing.GroupLayout.linkSize(int,Component...)",;0.91;0.91
listBindings,2,1,Description copied from interface:Context,;javax.naming.InitialContext.listBindings(String);javax.naming.InitialContext.listBindings(Name),;1.00;1.00
loadClassWithout,2,1.82E-231,Deprecated.,";javax.management.DefaultLoaderRepository.loadClassWithout(ClassLoader,String);javax.management.loading.DefaultLoaderRepository.loadClassWithout(ClassLoader,String)",;0.00;0.00
loadImage,2,0.5,"Loads the image, returning only when the image is loaded.",;java.beans.SimpleBeanInfo.loadImage(String);javax.swing.ImageIcon.loadImage(Image),;0.50;0.50
loadLibrary,2,0.690122231,"Loads the native library specified by the libname argument. The libname argument must not contain any platform specific prefix, file extension or path. If a native library called libname is statically linked with the VM, then the JNI_OnLoad_libname function exported by the library is invoked. See the JNI Specification for more details. Otherwise, the libname argument is loaded from a system library location and mapped to a native library image in an implementation- dependent manner. First, if there is a security manager, its checkLink method is called with the libname as its argument. This may result in a security exception. The method System.loadLibrary(String) is the conventional and convenient means of invoking this method. If native methods are to be used in the implementation of a class, a standard strategy is to put the native code in a library file (call it LibFile) and then to put a static initializer: static { System.loadLibrary(""LibFile""); } within the class declaration. When the class is loaded and initialized, the necessary native code implementation for the native methods will then be loaded as well. If this method is called more than once with the same library name, the second and subsequent calls are ignored.",;java.lang.Runtime.loadLibrary(String);java.lang.System.loadLibrary(String),;0.69;0.62
loadProxyClass,2,0.67166973,"Loads a dynamic proxy class (see Proxy) that implements a set of interfaces with the given names from a codebase URL path. The interfaces will be resolved similar to classes loaded via the loadClass(String,String) method using the given codebase. This method delegates to the RMIClassLoaderSpi.loadProxyClass(String,String[],ClassLoader) method of the provider instance, passing codebase as the first argument, interfaces as the second argument, and defaultLoader as the third argument.",";java.rmi.server.RMIClassLoader.loadProxyClass(String,String[],ClassLoader);java.rmi.server.RMIClassLoaderSpi.loadProxyClass(String,String[],ClassLoader)",;0.67;0.67
loadSystemColors,2,0.5,"Populates table with the name-color pairs in systemColors. Refer to initSystemColorDefaults(UIDefaults) for details on the format of systemColors. An entry is added to table for each of the name-color pairs in systemColors. The entry key is the name of the name-color pair. The value of the entry corresponds to the color of the name-color pair. The value of the entry is calculated in one of two ways. With either approach the value is always a ColorUIResource. If useNative is false, the color is created by using Color.decode to convert the String into a Color. If decode can not convert the String into a Color (NumberFormatException is thrown) then a ColorUIResource of black is used. If useNative is true, the color is the value of the field in SystemColor with the same name as the name of the name-color pair. If the field is not valid, a ColorUIResource of black is used.",";java.awt.Toolkit.loadSystemColors(int[]);javax.swing.plaf.basic.BasicLookAndFeel.loadSystemColors(UIDefaults,String[],boolean)",;0.50;0.50
locale,2,0.5,Returns this scanner's locale. A scanner's locale affects many elements of its default primitive matching regular expressions; see localized numbers above.,;java.util.Formatter.locale();java.util.Scanner.locale(),;0.50;0.50
locate,2,1,"Deprecated.As of JDK version 1.1, replaced by getComponentAt(int, int).",";java.awt.Component.locate(int,int);java.awt.Container.locate(int,int)",;1.00;1.00
location,2,0.5,"Determines which cell in the layout grid contains the point specified by (x,y). Each cell is identified by its column index (ranging from 0 to the number of columns minus 1) and its row index (ranging from 0 to the number of rows minus 1). If the (x,y) point lies outside the grid, the following rules are used. The column index is returned as zero if x lies to the left of the layout for a left-to-right container or to the right of the layout for a right-to-left container. The column index is returned as the number of columns if x lies to the right of the layout in a left-to-right container or to the left in a right-to-left container. The row index is returned as zero if y lies above the layout, and as the number of rows if y lies below the layout. The orientation of a container is determined by its ComponentOrientation property.",";java.awt.Component.location();java.awt.GridBagLayout.location(int,int)",;0.50;0.50
login,2,0.5,"Perform the authentication. This method invokes the login method for each LoginModule configured for the name specified to the LoginContext constructor, as determined by the login Configuration. Each LoginModule then performs its respective type of authentication (username/password, smart card pin verification, etc.). This method completes a 2-phase authentication process by calling each configured LoginModule's commit method if the overall authentication succeeded (the relevant REQUIRED, REQUISITE, SUFFICIENT, and OPTIONAL LoginModules succeeded), or by calling each configured LoginModule's abort method if the overall authentication failed. If authentication succeeded, each successful LoginModule's commit method associates the relevant Principals and Credentials with the Subject. If authentication failed, each LoginModule's abort method removes/destroys any previously stored state. If the commit phase of the authentication process fails, then the overall authentication fails and this method invokes the abort method for each configured LoginModule. If the abort phase fails for any reason, then this method propagates the original exception thrown either during the login phase or the commit phase. In either case, the overall authentication fails. In the case where multiple LoginModules fail, this method propagates the exception raised by the first LoginModule which failed. Note that if this method enters the abort phase (either the login or commit phase failed), this method invokes all LoginModules configured for the application regardless of their respective Configuration flag parameters. Essentially this means that Requisite and Sufficient semantics are ignored during the abort phase. This guarantees that proper cleanup and state restoration can take place.",";java.security.AuthProvider.login(Subject,CallbackHandler);javax.security.auth.login.LoginContext.login()",;0.50;0.50
logout,2,0.5,Logout the Subject. This method invokes the logout method for each LoginModule configured for this LoginContext. Each LoginModule performs its respective logout procedure which may include removing/destroying Principal and Credential information from the Subject and state cleanup. Note that this method invokes all LoginModules configured for the application regardless of their respective Configuration flag parameters. Essentially this means that Requisite and Sufficient semantics are ignored for this method. This guarantees that proper cleanup and state restoration can take place.,;java.security.AuthProvider.logout();javax.security.auth.login.LoginContext.logout(),;0.50;0.50
longStream,2,0.647854189,"Creates a new sequential or parallel LongStream from a Supplier of Spliterator.OfLong. The Supplier.get() method will be invoked on the supplier no more than once, and only after the terminal operation of the stream pipeline commences. For spliterators that report a characteristic of IMMUTABLE or CONCURRENT, or that are late-binding, it is likely more efficient to use longStream(java.util.Spliterator.OfLong, boolean) instead. The use of a Supplier in this form provides a level of indirection that reduces the scope of potential interference with the source. Since the supplier is only invoked after the terminal operation commences, any modifications to the source up to the start of the terminal operation are reflected in the stream result. See Non-Interference for more details.",";java.util.stream.StreamSupport.longStream(Spliterator.OfLong,boolean);java.util.stream.StreamSupport.longStream(Supplier&lt;?,int,boolean)",;0.63;0.65
longValueExact,2,0.70095232,"Converts this BigDecimal to a long, checking for lost information. If this BigDecimal has a nonzero fractional part or is out of the possible range for a long result then an ArithmeticException is thrown.",;java.math.BigDecimal.longValueExact();java.math.BigInteger.longValueExact(),;0.70;0.70
lookupLink,2,1,Description copied from interface:Context,;javax.naming.InitialContext.lookupLink(String);javax.naming.InitialContext.lookupLink(Name),;1.00;1.00
lookupPrintServices,2,0.5,Locates print services capable of printing the specified DocFlavor.,";java.awt.print.PrinterJob.lookupPrintServices();javax.print.PrintServiceLookup.lookupPrintServices(DocFlavor,AttributeSet)",;0.50;0.50
lookupProviders,2,0.5,"Locates and incrementally instantiates the available providers of a given service using the context class loader. This convenience method is equivalent to: ClassLoader cl = Thread.currentThread().getContextClassLoader(); return Service.providers(service, cl);",";javax.imageio.spi.ServiceRegistry.lookupProviders(Class&lt;T&gt;,ClassLoader);javax.imageio.spi.ServiceRegistry.lookupProviders(Class&lt;T&gt;)",;0.50;0.50
lower,2,1,Description copied from interface:NavigableSet,;java.util.TreeSet.lower(E);java.util.concurrent.ConcurrentSkipListSet.lower(E),;1.00;1.00
lowerEntry,2,0.5,"Returns a key-value mapping associated with the greatest key strictly less than the given key, or null if there is no such key. The returned entry does not support the Entry.setValue method.",;java.util.TreeMap.lowerEntry(K);java.util.concurrent.ConcurrentSkipListMap.lowerEntry(K),;0.50;0.50
lowerKey,2,1,Description copied from interface:NavigableMap,;java.util.TreeMap.lowerKey(K);java.util.concurrent.ConcurrentSkipListMap.lowerKey(K),;1.00;1.00
lowestOneBit,2,0.946325958,"Returns a long value with at most a single one-bit, in the position of the lowest-order (""rightmost"") one-bit in the specified long value. Returns zero if the specified value has no one-bits in its two's complement binary representation, that is, if it is equal to zero.",;java.lang.Integer.lowestOneBit(int);java.lang.Long.lowestOneBit(long),;0.95;0.95
mail,2,0.606029919,"Launches the mail composing window of the user default mail client, filling the message fields specified by a mailto: URI. A mailto: URI can specify message fields including ""to"", ""cc"", ""subject"", ""body"", etc. See The mailto URL scheme (RFC 2368) for the mailto: URI specification details.",;java.awt.Desktop.mail();java.awt.Desktop.mail(URI),;0.52;0.61
makeParser,2,1.82E-231,Deprecated.,;org.xml.sax.helpers.ParserFactory.makeParser();org.xml.sax.helpers.ParserFactory.makeParser(String),;0.00;0.00
makeVisible,2,0.5,Ensures that the node identified by path is currently viewable.,;java.awt.List.makeVisible(int);javax.swing.JTree.makeVisible(TreePath),;0.50;0.50
malformedInputAction,2,0.853553391,Returns this encoder's current action for malformed-input errors.,;java.nio.charset.CharsetDecoder.malformedInputAction();java.nio.charset.CharsetEncoder.malformedInputAction(),;0.85;0.85
maximizeFrame,2,0.5,This method is called when the user wants to maximize the frame. The playMaximizeSound Action is fired. This action is delegated to the desktopManager.,;javax.swing.DefaultDesktopManager.maximizeFrame(JInternalFrame);javax.swing.plaf.basic.BasicInternalFrameUI.maximizeFrame(JInternalFrame),;0.50;0.50
member_name,2,0.527147914,"Retrieves the simple name of the member identified by the given index. Since names are local to a Repository, the name returned from a TypeCode object may not match the name of the member in any particular Repository, and may even be an empty string. The method member_name can be invoked on structure, union, and enumeration TypeCode objects. Java IDL extends the CORBA specification to allow this method to operate on exceptions as well.",;org.omg.CORBA.TypeCode.member_name(int);org.omg.DynamicAny._DynUnionStub.member_name(),;0.53;0.52
methodsIn,2,0.744461511,Returns a set of methods in elements.,;javax.lang.model.util.ElementFilter.methodsIn(Iterable&lt;?);javax.lang.model.util.ElementFilter.methodsIn(Set&lt;?),;0.74;0.74
minimizeFrame,2,0.5,This method is called when the user wants to minimize the frame. The playRestoreDownSound Action is fired. This action is delegated to the desktopManager.,;javax.swing.DefaultDesktopManager.minimizeFrame(JInternalFrame);javax.swing.plaf.basic.BasicInternalFrameUI.minimizeFrame(JInternalFrame),;0.50;0.50
minusMillis,2,0.939370954,Returns a copy of this instant with the specified duration in milliseconds subtracted. This instance is immutable and unaffected by this method call.,;java.time.Duration.minusMillis(long);java.time.Instant.minusMillis(long),;0.94;0.94
modelStructureChanged,2,1,"Invoked when the underlying model structure has completely changed. For example, if the number of columns in a TableModel changed, this method would be invoked. You normally do not call this method. This method is public to allow view classes to call it.",;javax.swing.DefaultRowSorter.modelStructureChanged();javax.swing.RowSorter.modelStructureChanged(),;1.00;1.00
mouseMove,2,0.5,Moves mouse pointer to given screen coordinates.,";java.awt.Component.mouseMove(Event,int,int);java.awt.Robot.mouseMove(int,int)",;0.50;0.50
mouseWheelMoved,2,0.5,Invoked when the mouse wheel is rotated.,;java.awt.AWTEventMulticaster.mouseWheelMoved(MouseWheelEvent);java.awt.event.MouseAdapter.mouseWheelMoved(MouseWheelEvent),;0.50;0.50
moveColumn,2,0.594009317,Moves the column and heading at columnIndex to newIndex. The old column at columnIndex will now be found at newIndex. The column that used to be at newIndex is shifted left or right to make room. This will not move any columns if columnIndex equals newIndex. This method also posts a columnMoved event to its listeners.,";javax.swing.JTable.moveColumn(int,int);javax.swing.table.DefaultTableColumnModel.moveColumn(int,int)",;0.57;0.59
moveToBack,2,0.5,Moves the component to the bottom of the components in its current layer (position -1).,;javax.swing.JInternalFrame.moveToBack();javax.swing.JLayeredPane.moveToBack(Component),;0.50;0.50
moveToFront,2,0.5,Moves the component to the top of the components in its current layer (position 0).,;javax.swing.JInternalFrame.moveToFront();javax.swing.JLayeredPane.moveToFront(Component),;0.50;0.50
multipliedBy,2,0.5,"Returns a new instance with each element in this period multiplied by the specified scalar. This returns a period with each of the years, months and days units individually multiplied. For example, a period of ""2 years, -3 months and 4 days"" multiplied by 3 will return ""6 years, -9 months and 12 days"". No normalization is performed.",;java.time.Duration.multipliedBy(long);java.time.Period.multipliedBy(int),;0.50;0.50
mutatesTo,2,0.56076866,"Returns true if an equivalent copy of oldInstance may be created by applying a series of statements to newInstance. In the specification of this method, we mean by equivalent that the modified instance is indistinguishable from oldInstance in the behavior of the relevant methods in its public API. [Note: we use the phrase relevant methods rather than all methods here only because, to be strictly correct, methods like hashCode and toString prevent most classes from producing truly indistinguishable copies of their instances]. The default behavior returns true if the classes of the two instances are the same.",";java.beans.DefaultPersistenceDelegate.mutatesTo(Object,Object);java.beans.PersistenceDelegate.mutatesTo(Object,Object)",;0.55;0.56
navigableKeySet,2,0.834370152,Description copied from interface:ConcurrentNavigableMap,;java.util.TreeMap.navigableKeySet();java.util.concurrent.ConcurrentSkipListMap.navigableKeySet(),;0.83;0.83
needsCacheFile,2,0.748994101,"Returns true if the ImageInputStream implementation associated with this service provider requires the use of a cache File. If true, the value of the useCache argument to createInputStreamInstance will be ignored. The default implementation returns false.",;javax.imageio.spi.ImageInputStreamSpi.needsCacheFile();javax.imageio.spi.ImageOutputStreamSpi.needsCacheFile(),;0.75;0.73
needsInput,2,0.7089732,Returns true if no data remains in the input buffer. This can be used to determine if #setInput should be called in order to provide more input.,;java.util.zip.Deflater.needsInput();java.util.zip.Inflater.needsInput(),;0.70;0.71
negated,2,0.5,"Returns a new instance with each amount in this period negated. This returns a period with each of the years, months and days units individually negated. For example, a period of ""2 years, -3 months and 4 days"" will be negated to ""-2 years, 3 months and -4 days"". No normalization is performed.",;java.time.Duration.negated();java.time.Period.negated(),;0.50;0.50
negateExact,2,0.925366567,"Returns the negation of the argument, throwing an exception if the result overflows a long.",;java.lang.Math.negateExact(int);java.lang.Math.negateExact(long),;0.93;0.93
negotiate,2,0.517991586,"Negotiates a TLS session using an SSL socket factory. Creates an SSL socket using the supplied SSL socket factory and attaches it to the existing connection. Performs the TLS handshake and returns the negotiated session information. If cipher suites have been set via setEnabledCipherSuites then they are enabled before the TLS handshake begins. Hostname verification is performed after the TLS handshake completes. The default hostname verification performs a match of the server's hostname against the hostname information found in the server's certificate. If this verification fails and no callback has been set via setHostnameVerifier then the negotiation fails. If this verification fails and a callback has been set via setHostnameVerifier, then the callback is used to determine whether the negotiation succeeds. If an error occurs then the SSL socket is closed and an IOException is thrown. The underlying connection remains intact.",;javax.naming.ldap.StartTlsResponse.negotiate();javax.naming.ldap.StartTlsResponse.negotiate(SSLSocketFactory),;0.50;0.52
new_context,2,1,This operation returns a naming context implemented by the same naming server as the context on which the operation was invoked. The new context is not bound to any name.,;org.omg.CosNaming._NamingContextExtStub.new_context();org.omg.CosNaming._NamingContextStub.new_context(),;1.00;1.00
newBufferedReader,2,0.714670305,"Opens a file for reading, returning a BufferedReader that may be used to read text from the file in an efficient manner. Bytes from the file are decoded into characters using the specified charset. Reading commences at the beginning of the file. The Reader methods that read from the file throw IOException if a malformed or unmappable byte sequence is read.",";java.nio.file.Files.newBufferedReader(Path,Charset);java.nio.file.Files.newBufferedReader(Path)",;0.71;0.71
newBufferedWriter,2,0.60937091,"Opens or creates a file for writing, returning a BufferedWriter that may be used to write text to the file in an efficient manner. The options parameter specifies how the the file is created or opened. If no options are present then this method works as if the CREATE, TRUNCATE_EXISTING, and WRITE options are present. In other words, it opens the file for writing, creating the file if it doesn't exist, or initially truncating an existing regular-file to a size of 0 if it exists. The Writer methods to write text throw IOException if the text cannot be encoded using the specified charset.",";java.nio.file.Files.newBufferedWriter(Path,Charset,OpenOption...);java.nio.file.Files.newBufferedWriter(Path,OpenOption...)",;0.61;0.58
newBuilder,2,0.54807547,Constructs a new builder. The initial value of the type and who components is null. The initial value of the permissions and flags components is the empty set.,;java.nio.file.attribute.AclEntry.newBuilder();java.nio.file.attribute.AclEntry.newBuilder(AclEntry),;0.55;0.53
newCachedThreadPool,2,0.588355526,"Creates a thread pool that creates new threads as needed, but will reuse previously constructed threads when they are available. These pools will typically improve the performance of programs that execute many short-lived asynchronous tasks. Calls to execute will reuse previously constructed threads if available. If no existing thread is available, a new thread will be created and added to the pool. Threads that have not been used for sixty seconds are terminated and removed from the cache. Thus, a pool that remains idle for long enough will not consume any resources. Note that pools with similar properties but different details (for example, timeout parameters) may be created using ThreadPoolExecutor constructors.",;java.util.concurrent.Executors.newCachedThreadPool();java.util.concurrent.Executors.newCachedThreadPool(ThreadFactory),;0.59;0.52
newCanonicalizationMethod,2,0.60406105,Creates a CanonicalizationMethod for the specified algorithm URI and parameters. The parameters are specified as a mechanism-specific XMLStructure (ex: DOMStructure). This method is useful when the parameters are in XML form or there is no standard class for specifying the parameters.,";javax.xml.crypto.dsig.XMLSignatureFactory.newCanonicalizationMethod(String,C14NMethodParameterSpec);javax.xml.crypto.dsig.XMLSignatureFactory.newCanonicalizationMethod(String,XMLStructure)",;0.52;0.60
newChannel,2,0.945190607,Constructs a channel that writes bytes to the given stream. The resulting channel will not be buffered; it will simply redirect its I/O operations to the given stream. Closing the channel will in turn cause the stream to be closed.,;java.nio.channels.Channels.newChannel(InputStream);java.nio.channels.Channels.newChannel(OutputStream),;0.95;0.95
newClient,2,0.5,Description copied from interface:RMIServer,;javax.management.remote.rmi.RMIServerImpl.newClient(Object);javax.management.remote.rmi.RMIServerImpl_Stub.newClient(Object),;0.50;0.50
newFactory,2,0.5,Creates a new SchemaFactory object for the specified schema language.,";javax.sql.rowset.RowSetProvider.newFactory(String,ClassLoader);javax.xml.validation.SchemaFactoryLoader.newFactory(String)",;0.50;0.50
newFixedThreadPool,2,0.940291608,"Creates a thread pool that reuses a fixed number of threads operating off a shared unbounded queue, using the provided ThreadFactory to create new threads when needed. At any point, at most nThreads threads will be active processing tasks. If additional tasks are submitted when all threads are active, they will wait in the queue until a thread is available. If any thread terminates due to a failure during execution prior to shutdown, a new one will take its place if needed to execute subsequent tasks. The threads in the pool will exist until it is explicitly shutdown.",";java.util.concurrent.Executors.newFixedThreadPool(int);java.util.concurrent.Executors.newFixedThreadPool(int,ThreadFactory)",;0.94;0.94
newKeyInfo,2,0.636791921,Creates a KeyInfo containing the specified list of key information types and optional id. The id parameter represents the value of an XML ID attribute and is useful for referencing the KeyInfo from other XML structures.,";javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.newKeyInfo(List);javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.newKeyInfo(List,String)",;0.55;0.64
newKeySet,2,1,Creates a new Set backed by a ConcurrentHashMap from the given type to Boolean.TRUE.,;java.util.concurrent.ConcurrentHashMap.newKeySet();java.util.concurrent.ConcurrentHashMap.newKeySet(int),;1.00;1.00
newManifest,2,0.858265655,Creates a Manifest containing the specified list of References.,";javax.xml.crypto.dsig.XMLSignatureFactory.newManifest(List);javax.xml.crypto.dsig.XMLSignatureFactory.newManifest(List,String)",;0.86;0.86
newProxyInstance,2,0.5,"Return a proxy that implements the given interface by forwarding its methods through the given MBean server to the named MBean. As of 1.6, the methods JMX.newMBeanProxy(MBeanServerConnection, ObjectName, Class) and JMX.newMBeanProxy(MBeanServerConnection, ObjectName, Class, boolean) are preferred to this method.This method is equivalent to Proxy.newProxyInstance(interfaceClass.getClassLoader(), interfaces, handler). Here handler is the result of new MBeanServerInvocationHandler(connection, objectName), and interfaces is an array that has one element if notificationBroadcaster is false and two if it is true. The first element of interfaces is interfaceClass and the second, if present, is NotificationEmitter.class.",";java.lang.reflect.Proxy.newProxyInstance(ClassLoader,Class&lt;?&gt;[],InvocationHandler);javax.management.MBeanServerInvocationHandler.newProxyInstance(MBeanServerConnection,ObjectName,Class&lt;T&gt;,boolean)",;0.50;0.50
newReader,2,0.551640966,"Constructs a reader that decodes bytes from the given channel using the given decoder. The resulting stream will contain an internal input buffer of at least minBufferCap bytes. The stream's read methods will, as needed, fill the buffer by reading bytes from the underlying channel; if the channel is in non-blocking mode when bytes are to be read then an IllegalBlockingModeException will be thrown. The resulting stream will not otherwise be buffered, and it will not support the mark or reset methods. Closing the stream will in turn cause the channel to be closed.",";java.nio.channels.Channels.newReader(ReadableByteChannel,CharsetDecoder,int);java.nio.channels.Channels.newReader(ReadableByteChannel,String)",;0.55;0.54
newRetrievalMethod,2,0.904553356,Creates a RetrievalMethod from the specified parameters.,";javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.newRetrievalMethod(String);javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.newRetrievalMethod(String,String,List)",;0.90;0.90
newScheduledThreadPool,2,1,"Creates a thread pool that can schedule commands to run after a given delay, or to execute periodically.",";java.util.concurrent.Executors.newScheduledThreadPool(int);java.util.concurrent.Executors.newScheduledThreadPool(int,ThreadFactory)",;1.00;1.00
newSignedInfo,2,0.640879752,"Creates a SignedInfo with the specified canonicalization and signature methods, and list of one or more references.",";javax.xml.crypto.dsig.XMLSignatureFactory.newSignedInfo(CanonicalizationMethod,SignatureMethod,List);javax.xml.crypto.dsig.XMLSignatureFactory.newSignedInfo(CanonicalizationMethod,SignatureMethod,List,String)",;0.64;0.60
newSingleThreadExecutor,2,0.684806118,"Creates an Executor that uses a single worker thread operating off an unbounded queue. (Note however that if this single thread terminates due to a failure during execution prior to shutdown, a new one will take its place if needed to execute subsequent tasks.) Tasks are guaranteed to execute sequentially, and no more than one task will be active at any given time. Unlike the otherwise equivalent newFixedThreadPool(1) the returned executor is guaranteed not to be reconfigurable to use additional threads.",;java.util.concurrent.Executors.newSingleThreadExecutor();java.util.concurrent.Executors.newSingleThreadExecutor(ThreadFactory),;0.68;0.65
newSingleThreadScheduledExecutor,2,0.985483481,"Creates a single-threaded executor that can schedule commands to run after a given delay, or to execute periodically. (Note however that if this single thread terminates due to a failure during execution prior to shutdown, a new one will take its place if needed to execute subsequent tasks.) Tasks are guaranteed to execute sequentially, and no more than one task will be active at any given time. Unlike the otherwise equivalent newScheduledThreadPool(1) the returned executor is guaranteed not to be reconfigurable to use additional threads.",;java.util.concurrent.Executors.newSingleThreadScheduledExecutor();java.util.concurrent.Executors.newSingleThreadScheduledExecutor(ThreadFactory),;0.99;0.99
newTransform,2,0.60406105,Creates a Transform for the specified algorithm URI and parameters. The parameters are specified as a mechanism-specific XMLStructure (ex: DOMStructure). This method is useful when the parameters are in XML form or there is no standard class for specifying the parameters.,";javax.xml.crypto.dsig.XMLSignatureFactory.newTransform(String,TransformParameterSpec);javax.xml.crypto.dsig.XMLSignatureFactory.newTransform(String,XMLStructure)",;0.52;0.60
newTransformer,2,0.5,Create a new Transformer that performs a copy of the Source to the Result. i.e. the "identity transform".,;javax.xml.transform.TransformerFactory.newTransformer(Source);javax.xml.transform.TransformerFactory.newTransformer(),;0.50;0.50
newWorkStealingPool,2,0.5,Creates a work-stealing thread pool using all available processors as its target parallelism level.,;java.util.concurrent.Executors.newWorkStealingPool(int);java.util.concurrent.Executors.newWorkStealingPool(),;0.50;0.50
newWriter,2,0.574654093,"Constructs a writer that encodes characters using the given encoder and writes the resulting bytes to the given channel. The resulting stream will contain an internal output buffer of at least minBufferCap bytes. The stream's write methods will, as needed, flush the buffer by writing bytes to the underlying channel; if the channel is in non-blocking mode when bytes are to be written then an IllegalBlockingModeException will be thrown. The resulting stream will not otherwise be buffered. Closing the stream will in turn cause the channel to be closed.",";java.nio.channels.Channels.newWriter(WritableByteChannel,CharsetEncoder,int);java.nio.channels.Channels.newWriter(WritableByteChannel,String)",;0.57;0.56
newXMLFilter,2,0.5,"Create an XMLFilter, based on the Templates argument..",;javax.xml.transform.sax.SAXTransformerFactory.newXMLFilter(Source);javax.xml.transform.sax.SAXTransformerFactory.newXMLFilter(Templates),;0.50;0.50
newXMLSignature,2,0.73578316,Creates an XMLSignature and initializes it with the contents of the specified SignedInfo and KeyInfo objects.,";javax.xml.crypto.dsig.XMLSignatureFactory.newXMLSignature(SignedInfo,KeyInfo);javax.xml.crypto.dsig.XMLSignatureFactory.newXMLSignature(SignedInfo,KeyInfo,List,String,String)",;0.74;0.72
nextBigInteger,2,0.578232379,"Scans the next token of the input as a BigInteger. If the next token matches the Integer regular expression defined above then the token is converted into a BigInteger value as if by removing all group separators, mapping non-ASCII digits into ASCII digits via the Character.digit, and passing the resulting string to the BigInteger(String, int) constructor with the specified radix.",;java.util.Scanner.nextBigInteger();java.util.Scanner.nextBigInteger(int),;0.57;0.58
nextByte,2,0.543967823,"Scans the next token of the input as a byte. This method will throw InputMismatchException if the next token cannot be translated into a valid byte value as described below. If the translation is successful, the scanner advances past the input that matched. If the next token matches the Integer regular expression defined above then the token is converted into a byte value as if by removing all locale specific prefixes, group separators, and locale specific suffixes, then mapping non-ASCII digits into ASCII digits via Character.digit, prepending a negative sign (-) if the locale specific negative prefixes and suffixes were present, and passing the resulting string to Byte.parseByte with the specified radix.",;java.util.Scanner.nextByte();java.util.Scanner.nextByte(int),;0.52;0.54
nextBytes,2,0.521420901,"Generates random bytes and places them into a user-supplied byte array. The number of random bytes produced is equal to the length of the byte array. The method nextBytes is implemented by class Random as if by: public void nextBytes(byte[] bytes) { for (int i = 0; i &lt; bytes.length; ) for (int rnd = nextInt(), n = Math.min(bytes.length - i, 4); n-- &gt; 0; rnd &gt;&gt;= 8) bytes[i++] = (byte)rnd; }",;java.security.SecureRandom.nextBytes(byte[]);java.util.Random.nextBytes(byte[]),;0.52;0.52
nextGaussian,2,0.5,Description copied from class:Random,;java.util.Random.nextGaussian();java.util.concurrent.ThreadLocalRandom.nextGaussian(),;0.50;0.50
nextLayout,2,1,"Returns the next layout, and updates the current position.",";java.awt.font.LineBreakMeasurer.nextLayout(float);java.awt.font.LineBreakMeasurer.nextLayout(float,int,boolean)",;1.00;1.00
nextOffset,2,1,Returns the position at the end of the next layout. Does NOT update the current position of this LineBreakMeasurer.,";java.awt.font.LineBreakMeasurer.nextOffset(float);java.awt.font.LineBreakMeasurer.nextOffset(float,int,boolean)",;1.00;1.00
nextShort,2,0.543967823,"Scans the next token of the input as a short. This method will throw InputMismatchException if the next token cannot be translated into a valid short value as described below. If the translation is successful, the scanner advances past the input that matched. If the next token matches the Integer regular expression defined above then the token is converted into a short value as if by removing all locale specific prefixes, group separators, and locale specific suffixes, then mapping non-ASCII digits into ASCII digits via Character.digit, prepending a negative sign (-) if the locale specific negative prefixes and suffixes were present, and passing the resulting string to Short.parseShort with the specified radix.",;java.util.Scanner.nextShort();java.util.Scanner.nextShort(int),;0.52;0.54
nextTag,2,0.834370152,Description copied from interface:XMLStreamReader,;javax.xml.stream.util.EventReaderDelegate.nextTag();javax.xml.stream.util.StreamReaderDelegate.nextTag(),;0.83;0.83
nodeExists,2,0.5,"Returns true if the named preference node exists in the same tree as this node. Relative path names (which do not begin with the slash character ('/')) are interpreted relative to this preference node. If this node (or an ancestor) has already been removed with the removeNode() method, it is legal to invoke this method, but only with the path name """"; the invocation will return false. Thus, the idiom p.nodeExists("""") may be used to test whether p has been removed.",;java.util.prefs.AbstractPreferences.nodeExists(String);java.util.prefs.Preferences.nodeExists(String),;0.50;0.50
normalized,2,0.5,"Normalizes the time-zone ID, returning a ZoneOffset where possible. The returns a normalized ZoneId that can be used in place of this ID. The result will have ZoneRules equivalent to those returned by this object, however the ID returned by getId() may be different. The normalization checks if the rules of this ZoneId have a fixed offset. If they do, then the ZoneOffset equal to that offset is returned. Otherwise this is returned.",;java.time.Period.normalized();java.time.ZoneId.normalized(),;0.50;0.50
normalizeMimeType,2,1.82E-231,Deprecated.,;java.awt.datatransfer.DataFlavor.normalizeMimeType(String);javax.activation.ActivationDataFlavor.normalizeMimeType(String),;0.00;0.00
normalizeMimeTypeParameter,2,1.82E-231,Deprecated.,";java.awt.datatransfer.DataFlavor.normalizeMimeTypeParameter(String,String);javax.activation.ActivationDataFlavor.normalizeMimeTypeParameter(String,String)",;0.00;0.00
not,2,0.5,Returns a constraint that is the negation of its argument.,;java.math.BigInteger.not();javax.management.Query.not(QueryExp),;0.50;0.50
notifyObservers,2,0.900855679,"If this object has changed, as indicated by the hasChanged method, then notify all of its observers and then call the clearChanged method to indicate that this object has no longer changed. Each observer has its update method called with two arguments: this observable object and null. In other words, this method is equivalent to: notifyObservers(null)",;java.util.Observable.notifyObservers();java.util.Observable.notifyObservers(Object),;0.90;0.90
numberOfTrailingZeros,2,0.950074562,"Returns the number of zero bits following the lowest-order (""rightmost"") one-bit in the two's complement binary representation of the specified long value. Returns 64 if the specified value has no one-bits in its two's complement representation, in other words if it is equal to zero.",;java.lang.Integer.numberOfTrailingZeros(int);java.lang.Long.numberOfTrailingZeros(long),;0.95;0.95
observesDaylightTime,2,0.545468993,"Returns true if this TimeZone is currently in Daylight Saving Time, or if a transition from Standard Time to Daylight Saving Time occurs at any future time. The default implementation returns true if useDaylightTime() or inDaylightTime(new Date()) returns true.",;java.util.SimpleTimeZone.observesDaylightTime();java.util.TimeZone.observesDaylightTime(),;0.52;0.55
ofDays,2,0.538113568,"Obtains a Duration representing a number of standard 24 hour days. The seconds are calculated based on the standard definition of a day, where each day is 86400 seconds which implies a 24 hour day. The nanosecond in second field is set to zero.",;java.time.Duration.ofDays(long);java.time.Period.ofDays(int),;0.54;0.53
offset,2,0.5,"A query for ZoneOffset returning null if not found. This returns a TemporalQuery that can be used to query a temporal object for the offset. The query will return null if the temporal object cannot supply an offset. The query implementation examines the OFFSET_SECONDS field and uses it to create a ZoneOffset. The method ZoneOffset.from(TemporalAccessor) can be used as a TemporalQuery via a method reference, ZoneOffset::from. This query and ZoneOffset::from will return the same result if the temporal object contains an offset. If the temporal object does not contain an offset, then the method reference will throw an exception, whereas this query will return null.",";java.time.Clock.offset(Clock,Duration);java.time.temporal.TemporalQueries.offset()",;0.50;0.50
ofHours,2,0.5,Obtains an instance of ZoneOffset using an offset in hours.,;java.time.Duration.ofHours(long);java.time.ZoneOffset.ofHours(int),;0.50;0.50
ofLocalizedDateTime,2,0.982151831,"Returns a locale specific date-time formatter for the ISO chronology. This returns a formatter that will format or parse a date-time. The exact format pattern used varies by locale. The locale is determined from the formatter. The formatter returned directly by this method will use the default FORMAT locale. The locale can be controlled using withLocale(Locale) on the result of this method. Note that the localized pattern is looked up lazily. This DateTimeFormatter holds the style required and the locale, looking up the pattern required on demand. The returned formatter has a chronology of ISO set to ensure dates in other calendar systems are correctly converted. It has no override zone and uses the SMART resolver style.",";java.time.format.DateTimeFormatter.ofLocalizedDateTime(FormatStyle);java.time.format.DateTimeFormatter.ofLocalizedDateTime(FormatStyle,FormatStyle)",;0.98;0.98
ofPattern,2,0.90033748,"Creates a formatter using the specified pattern. This method will create a formatter based on a simple pattern of letters and symbols as described in the class documentation. For example, d MMM uuuu will format 2011-12-03 as '3 Dec 2011'. The formatter will use the default FORMAT locale. This can be changed using withLocale(Locale) on the returned formatter Alternatively use the ofPattern(String, Locale) variant of this method. The returned formatter has no override chronology or zone. It uses SMART resolver style.",";java.time.format.DateTimeFormatter.ofPattern(String);java.time.format.DateTimeFormatter.ofPattern(String,Locale)",;0.90;0.90
ofSeconds,2,0.550426114,"Obtains a Duration representing a number of seconds and an adjustment in nanoseconds. This method allows an arbitrary number of nanoseconds to be passed in. The factory will alter the values of the second and nanosecond in order to ensure that the stored nanosecond is in the range 0 to 999,999,999. For example, the following will result in the exactly the same duration: Duration.ofSeconds(3, 1); Duration.ofSeconds(4, -999_999_999); Duration.ofSeconds(2, 1000_000_001);",";java.time.Duration.ofSeconds(long);java.time.Duration.ofSeconds(long,long)",;0.51;0.55
on,2,0.968500573,"Turns the digest function on or off. The default is on. When it is on, a call to one of the write methods results in an update on the message digest. But when it is off, the message digest is not updated.",;java.security.DigestInputStream.on(boolean);java.security.DigestOutputStream.on(boolean),;0.97;0.97
onMalformedInput,2,0.933198776,"Changes this encoder's action for malformed-input errors. This method invokes the implOnMalformedInput method, passing the new action.",;java.nio.charset.CharsetDecoder.onMalformedInput(CodingErrorAction);java.nio.charset.CharsetEncoder.onMalformedInput(CodingErrorAction),;0.93;0.93
onUnmappableCharacter,2,0.933198776,"Changes this encoder's action for unmappable-character errors. This method invokes the implOnUnmappableCharacter method, passing the new action.",;java.nio.charset.CharsetDecoder.onUnmappableCharacter(CodingErrorAction);java.nio.charset.CharsetEncoder.onUnmappableCharacter(CodingErrorAction),;0.93;0.93
openAsynchronousChannelGroup,2,0.815777619,Constructs a new asynchronous channel group with the given thread pool.,";java.nio.channels.spi.AsynchronousChannelProvider.openAsynchronousChannelGroup(int,ThreadFactory);java.nio.channels.spi.AsynchronousChannelProvider.openAsynchronousChannelGroup(ExecutorService,int)",;0.82;0.82
openDatagramChannel,2,1,Opens a datagram channel.,;java.nio.channels.spi.SelectorProvider.openDatagramChannel();java.nio.channels.spi.SelectorProvider.openDatagramChannel(ProtocolFamily),;1.00;1.00
openInputStream,2,0.5,This implementation always throws UnsupportedOperationException. Subclasses can change this behavior as long as the contract of FileObject is obeyed.,;javax.tools.ForwardingFileObject.openInputStream();javax.tools.SimpleJavaFileObject.openInputStream(),;0.50;0.50
openOutputStream,2,0.5,This implementation always throws UnsupportedOperationException. Subclasses can change this behavior as long as the contract of FileObject is obeyed.,;javax.tools.ForwardingFileObject.openOutputStream();javax.tools.SimpleJavaFileObject.openOutputStream(),;0.50;0.50
openReader,2,0.5,Wraps the result of getCharContent(boolean) in a Reader. Subclasses can change this behavior as long as the contract of FileObject is obeyed.,;javax.tools.ForwardingFileObject.openReader(boolean);javax.tools.SimpleJavaFileObject.openReader(boolean),;0.50;0.50
openWriter,2,0.5,Wraps the result of openOutputStream in a Writer. Subclasses can change this behavior as long as the contract of FileObject is obeyed.,;javax.tools.ForwardingFileObject.openWriter();javax.tools.SimpleJavaFileObject.openWriter(),;0.50;0.50
operation,2,0.532948217,"Throws an org.omg.CORBA.NO_IMPLEMENT exception. Retrieves the name of the operation being invoked. According to OMG IDL's rules, these names must be unique among all operations supported by this object's ""most-derived"" interface. Note that the operation names for getting and setting attributes are _get_&lt;attribute_name&gt; and _set_&lt;attribute_name&gt;, respectively.",;org.omg.CORBA.Request.operation();org.omg.CORBA.ServerRequest.operation(),;0.50;0.53
output,2,0.5,"This method is overriden to map any character entities, such as &lt; to &amp;lt;. super.output will be invoked to write the content.",";javax.swing.text.AbstractWriter.output(char[],int,int);javax.swing.text.html.HTMLWriter.output(char[],int,int)",;0.50;0.50
owns,2,1,Queries whether the given ConditionObject uses this synchronizer as its lock.,;java.util.concurrent.locks.AbstractQueuedLongSynchronizer.owns(AbstractQueuedLongSynchronizer.ConditionObject);java.util.concurrent.locks.AbstractQueuedSynchronizer.owns(AbstractQueuedSynchronizer.ConditionObject),;1.00;1.00
packagesIn,2,0.744461511,Returns a set of packages in elements.,;javax.lang.model.util.ElementFilter.packagesIn(Iterable&lt;?);javax.lang.model.util.ElementFilter.packagesIn(Set&lt;?),;0.74;0.74
padNext,2,0.849357566,"Causes the next added printer/parser to pad to a fixed width. This padding is intended for padding other than zero-padding. Zero-padding should be achieved using the appendValue methods. During formatting, the decorated element will be output and then padded to the specified width. An exception will be thrown during formatting if the pad width is exceeded. During parsing, the padding and decorated element are parsed. If parsing is lenient, then the pad width is treated as a maximum. If parsing is case insensitive, then the pad character is matched ignoring case. The padding is parsed greedily. Thus, if the decorated element starts with the pad character, it will not be parsed.",";java.time.format.DateTimeFormatterBuilder.padNext(int);java.time.format.DateTimeFormatterBuilder.padNext(int,char)",;0.84;0.85
pageDialog,2,0.534788162,"A convenience method which displays a cross-platform page setup dialog. The choices available will reflect the print service currently set on this PrinterJob. The attributes parameter on input will reflect the client's required initial selections in the user dialog. Attributes which are not specified display using the default for the service. On return it will reflect the user's choices. Selections may be updated by the implementation to be consistent with the supported values for the currently selected print service. The return value will be a PageFormat equivalent to the selections in the PrintRequestAttributeSet. If the user cancels the dialog, the attributes will not reflect any changes made by the user, and the return value will be null.",;java.awt.print.PrinterJob.pageDialog(PageFormat);java.awt.print.PrinterJob.pageDialog(PrintRequestAttributeSet),;0.53;0.53
paintChild,2,0.853008203,"Paints one of the children; called by paint(). By default that is all it does, but a subclass can use this to paint things relative to the child.",";javax.swing.text.BoxView.paintChild(Graphics,Rectangle,int);javax.swing.text.html.ListView.paintChild(Graphics,Rectangle,int)",;0.85;0.85
paintChildren,2,0.5,"Subclassed to message the UI with finishedPaintingChildren after super has been messaged, as well as painting the border.",;javax.swing.JComponent.paintChildren(Graphics);javax.swing.JSplitPane.paintChildren(Graphics),;0.50;0.50
paintCurrentValueBackground,2,0.827445393,Paints the background of the currently selected item.,";javax.swing.plaf.basic.BasicComboBoxUI.paintCurrentValueBackground(Graphics,Rectangle,boolean);javax.swing.plaf.metal.MetalComboBoxUI.paintCurrentValueBackground(Graphics,Rectangle,boolean)",;0.83;0.82
paintDeterminate,2,0.5,Draws a bit of special highlighting on the progress bar. The core painting is deferred to the BasicProgressBar's paintDeterminate method.,";javax.swing.plaf.basic.BasicProgressBarUI.paintDeterminate(Graphics,JComponent);javax.swing.plaf.metal.MetalProgressBarUI.paintDeterminate(Graphics,JComponent)",;0.50;0.50
paintDisabledText,2,0.5,Just paint the text gray (Label.disabledForeground) rather than in the labels foreground color.,";javax.swing.plaf.basic.BasicLabelUI.paintDisabledText(JLabel,Graphics,String,int,int);javax.swing.plaf.metal.MetalLabelUI.paintDisabledText(JLabel,Graphics,String,int,int)",;0.50;0.50
paintDragWindow,2,1,Paints the contents of the window used for dragging.,;javax.swing.plaf.basic.BasicToolBarUI.paintDragWindow(Graphics);javax.swing.plaf.synth.SynthToolBarUI.paintDragWindow(Graphics),;1.00;1.00
paintDropLine,2,1,Paints the drop line.,;javax.swing.plaf.basic.BasicTreeUI.paintDropLine(Graphics);javax.swing.plaf.synth.SynthTreeUI.paintDropLine(Graphics),;1.00;1.00
paintExpandControl,2,1,"Paints the expand (toggle) part of a row. The receiver should NOT modify clipBounds, or insets.",";javax.swing.plaf.basic.BasicTreeUI.paintExpandControl(Graphics,Rectangle,Insets,Rectangle,TreePath,int,boolean,boolean,boolean);javax.swing.plaf.synth.SynthTreeUI.paintExpandControl(Graphics,Rectangle,Insets,Rectangle,TreePath,int,boolean,boolean,boolean)",;1.00;1.00
paintFocus,2,0.5,Description copied from class:BasicRadioButtonUI,";javax.swing.plaf.basic.BasicRadioButtonUI.paintFocus(Graphics,Rectangle,Dimension);javax.swing.plaf.metal.MetalRadioButtonUI.paintFocus(Graphics,Rectangle,Dimension)",;0.50;0.50
paintHorizontalLine,2,1,Paints a horizontal line.,";javax.swing.plaf.basic.BasicTreeUI.paintHorizontalLine(Graphics,JComponent,int,int,int);javax.swing.plaf.synth.SynthTreeUI.paintHorizontalLine(Graphics,JComponent,int,int,int)",;1.00;1.00
paintIndeterminate,2,0.5,Draws a bit of special highlighting on the progress bar and bouncing box. The core painting is deferred to the BasicProgressBar's paintIndeterminate method.,";javax.swing.plaf.basic.BasicProgressBarUI.paintIndeterminate(Graphics,JComponent);javax.swing.plaf.metal.MetalProgressBarUI.paintIndeterminate(Graphics,JComponent)",;0.50;0.50
paintLayeredHighlights,2,1,When leaf Views (such as LabelView) are rendering they should call into this method. If a highlight is in the given region it will be drawn immediately.,";javax.swing.text.DefaultHighlighter.paintLayeredHighlights(Graphics,int,int,Shape,JTextComponent,View);javax.swing.text.LayeredHighlighter.paintLayeredHighlights(Graphics,int,int,Shape,JTextComponent,View)",;1.00;1.00
paintProgressBarBackground,2,0.654131382,Paints the background of a progress bar. This implementation invokes the method of the same name without the orientation.,";javax.swing.plaf.synth.SynthPainter.paintProgressBarBackground(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPainter.paintProgressBarBackground(SynthContext,Graphics,int,int,int,int,int)",;0.59;0.65
paintProgressBarBorder,2,0.654131382,Paints the border of a progress bar. This implementation invokes the method of the same name without the orientation.,";javax.swing.plaf.synth.SynthPainter.paintProgressBarBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPainter.paintProgressBarBorder(SynthContext,Graphics,int,int,int,int,int)",;0.59;0.65
paintScrollBarBackground,2,0.632300798,Paints the background of a scrollbar. This implementation invokes the method of the same name without the orientation.,";javax.swing.plaf.synth.SynthPainter.paintScrollBarBackground(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPainter.paintScrollBarBackground(SynthContext,Graphics,int,int,int,int,int)",;0.57;0.63
paintScrollBarBorder,2,0.632300798,Paints the border of a scrollbar. This implementation invokes the method of the same name without the orientation.,";javax.swing.plaf.synth.SynthPainter.paintScrollBarBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPainter.paintScrollBarBorder(SynthContext,Graphics,int,int,int,int,int)",;0.57;0.63
paintScrollBarTrackBackground,2,0.754342084,Paints the background of the track of a scrollbar. The track contains the thumb. This implementation invokes the method of the same name without the orientation.,";javax.swing.plaf.synth.SynthPainter.paintScrollBarTrackBackground(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPainter.paintScrollBarTrackBackground(SynthContext,Graphics,int,int,int,int,int)",;0.71;0.75
paintScrollBarTrackBorder,2,0.754342084,Paints the border of the track of a scrollbar. The track contains the thumb. This implementation invokes the method of the same name without the orientation.,";javax.swing.plaf.synth.SynthPainter.paintScrollBarTrackBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPainter.paintScrollBarTrackBorder(SynthContext,Graphics,int,int,int,int,int)",;0.71;0.75
paintSeparatorBackground,2,0.632300798,Paints the background of a separator. This implementation invokes the method of the same name without the orientation.,";javax.swing.plaf.synth.SynthPainter.paintSeparatorBackground(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPainter.paintSeparatorBackground(SynthContext,Graphics,int,int,int,int,int)",;0.57;0.63
paintSeparatorBorder,2,0.632300798,Paints the border of a separator. This implementation invokes the method of the same name without the orientation.,";javax.swing.plaf.synth.SynthPainter.paintSeparatorBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPainter.paintSeparatorBorder(SynthContext,Graphics,int,int,int,int,int)",;0.57;0.63
paintSliderBackground,2,0.632300798,Paints the background of a slider. This implementation invokes the method of the same name without the orientation.,";javax.swing.plaf.synth.SynthPainter.paintSliderBackground(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPainter.paintSliderBackground(SynthContext,Graphics,int,int,int,int,int)",;0.57;0.63
paintSliderBorder,2,0.632300798,Paints the border of a slider. This implementation invokes the method of the same name without the orientation.,";javax.swing.plaf.synth.SynthPainter.paintSliderBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPainter.paintSliderBorder(SynthContext,Graphics,int,int,int,int,int)",;0.57;0.63
paintSliderTrackBackground,2,0.690456852,Paints the background of the track of a slider. This implementation invokes the method of the same name without the orientation.,";javax.swing.plaf.synth.SynthPainter.paintSliderTrackBackground(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPainter.paintSliderTrackBackground(SynthContext,Graphics,int,int,int,int,int)",;0.63;0.69
paintSliderTrackBorder,2,0.690456852,Paints the border of the track of a slider. This implementation invokes the method of the same name without the orientation.,";javax.swing.plaf.synth.SynthPainter.paintSliderTrackBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPainter.paintSliderTrackBorder(SynthContext,Graphics,int,int,int,int,int)",;0.63;0.69
paintSplitPaneDividerBackground,2,0.705812262,Paints the background of the divider of a split pane. This implementation invokes the method of the same name without the orientation.,";javax.swing.plaf.synth.SynthPainter.paintSplitPaneDividerBackground(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPainter.paintSplitPaneDividerBackground(SynthContext,Graphics,int,int,int,int,int)",;0.65;0.71
paintTabArea,2,0.5,Description copied from class:BasicTabbedPaneUI,";javax.swing.plaf.basic.BasicTabbedPaneUI.paintTabArea(Graphics,int,int);javax.swing.plaf.synth.SynthTabbedPaneUI.paintTabArea(Graphics,int,int)",;0.50;0.50
paintTabbedPaneTabAreaBackground,2,0.743794489,Paints the background of the area behind the tabs of a tabbed pane. This implementation invokes the method of the same name without the orientation.,";javax.swing.plaf.synth.SynthPainter.paintTabbedPaneTabAreaBackground(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPainter.paintTabbedPaneTabAreaBackground(SynthContext,Graphics,int,int,int,int,int)",;0.70;0.74
paintTabbedPaneTabAreaBorder,2,0.743794489,Paints the border of the area behind the tabs of a tabbed pane. This implementation invokes the method of the same name without the orientation.,";javax.swing.plaf.synth.SynthPainter.paintTabbedPaneTabAreaBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPainter.paintTabbedPaneTabAreaBorder(SynthContext,Graphics,int,int,int,int,int)",;0.70;0.74
paintTabbedPaneTabBackground,2,0.705812262,Paints the background of a tab of a tabbed pane. This implementation invokes the method of the same name without the orientation.,";javax.swing.plaf.synth.SynthPainter.paintTabbedPaneTabBackground(SynthContext,Graphics,int,int,int,int,int);javax.swing.plaf.synth.SynthPainter.paintTabbedPaneTabBackground(SynthContext,Graphics,int,int,int,int,int,int)",;0.65;0.71
paintTabbedPaneTabBorder,2,0.705812262,Paints the border of a tab of a tabbed pane. This implementation invokes the method of the same name without the orientation.,";javax.swing.plaf.synth.SynthPainter.paintTabbedPaneTabBorder(SynthContext,Graphics,int,int,int,int,int);javax.swing.plaf.synth.SynthPainter.paintTabbedPaneTabBorder(SynthContext,Graphics,int,int,int,int,int,int)",;0.65;0.71
paintTabBorder,2,0.5,Description copied from class:BasicTabbedPaneUI,";javax.swing.plaf.basic.BasicTabbedPaneUI.paintTabBorder(Graphics,int,int,int,int,int,int,boolean);javax.swing.plaf.metal.MetalTabbedPaneUI.paintTabBorder(Graphics,int,int,int,int,int,int,boolean)",;0.50;0.50
paintThumb,2,0.5,Paints the slider thumb.,";javax.swing.plaf.synth.SynthScrollBarUI.paintThumb(SynthContext,Graphics,Rectangle);javax.swing.plaf.synth.SynthSliderUI.paintThumb(SynthContext,Graphics,Rectangle)",;0.50;0.50
paintToolBarBackground,2,0.654131382,Paints the background of a tool bar. This implementation invokes the method of the same name without the orientation.,";javax.swing.plaf.synth.SynthPainter.paintToolBarBackground(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPainter.paintToolBarBackground(SynthContext,Graphics,int,int,int,int,int)",;0.59;0.65
paintToolBarBorder,2,0.654131382,Paints the border of a tool bar. This implementation invokes the method of the same name without the orientation.,";javax.swing.plaf.synth.SynthPainter.paintToolBarBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPainter.paintToolBarBorder(SynthContext,Graphics,int,int,int,int,int)",;0.59;0.65
paintToolBarContentBackground,2,0.705812262,Paints the background of the tool bar's content area. This implementation invokes the method of the same name without the orientation.,";javax.swing.plaf.synth.SynthPainter.paintToolBarContentBackground(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPainter.paintToolBarContentBackground(SynthContext,Graphics,int,int,int,int,int)",;0.65;0.71
paintToolBarContentBorder,2,0.719685477,Paints the border of the content area of a tool bar. This implementation invokes the method of the same name without the orientation.,";javax.swing.plaf.synth.SynthPainter.paintToolBarContentBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPainter.paintToolBarContentBorder(SynthContext,Graphics,int,int,int,int,int)",;0.67;0.72
paintToolBarDragWindowBackground,2,0.796216341,Paints the background of the window containing the tool bar when it has been detached from its primary frame. This implementation invokes the method of the same name without the orientation.,";javax.swing.plaf.synth.SynthPainter.paintToolBarDragWindowBackground(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPainter.paintToolBarDragWindowBackground(SynthContext,Graphics,int,int,int,int,int)",;0.77;0.80
paintToolBarDragWindowBorder,2,0.80292738,Paints the border of the window containing the tool bar when it has been detached from it's primary frame. This implementation invokes the method of the same name without the orientation.,";javax.swing.plaf.synth.SynthPainter.paintToolBarDragWindowBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPainter.paintToolBarDragWindowBorder(SynthContext,Graphics,int,int,int,int,int)",;0.77;0.80
paintTrack,2,0.5,Paints the slider track.,";javax.swing.plaf.synth.SynthScrollBarUI.paintTrack(SynthContext,Graphics,Rectangle);javax.swing.plaf.synth.SynthSliderUI.paintTrack(SynthContext,Graphics,Rectangle)",;0.50;0.50
paintVerticalLine,2,1,Paints a vertical line.,";javax.swing.plaf.basic.BasicTreeUI.paintVerticalLine(Graphics,JComponent,int,int,int);javax.swing.plaf.synth.SynthTreeUI.paintVerticalLine(Graphics,JComponent,int,int,int)",;1.00;1.00
parseBoolean,2,0.5,Converts the string argument into a boolean value.,;java.lang.Boolean.parseBoolean(String);javax.xml.bind.DatatypeConverter.parseBoolean(String),;0.50;0.50
parseByte,2,0.5,Converts the string argument into a byte value.,;java.lang.Byte.parseByte(String);javax.xml.bind.DatatypeConverter.parseByte(String),;0.50;0.50
parseDouble,2,0.5,Converts the string argument into a double value.,;java.lang.Double.parseDouble(String);javax.xml.bind.DatatypeConverter.parseDouble(String),;0.50;0.50
parseFloat,2,0.5,Converts the string argument into a float value.,;java.lang.Float.parseFloat(String);javax.xml.bind.DatatypeConverter.parseFloat(String),;0.50;0.50
parseInt,2,0.5,Convert the string argument into an int value.,;java.lang.Integer.parseInt(String);javax.xml.bind.DatatypeConverter.parseInt(String),;0.50;0.50
parseLong,2,0.5,Converts the string argument into a long value.,;java.lang.Long.parseLong(String);javax.xml.bind.DatatypeConverter.parseLong(String),;0.50;0.50
parseShort,2,0.5,Converts the string argument into a short value.,;java.lang.Short.parseShort(String);javax.xml.bind.DatatypeConverter.parseShort(String),;0.50;0.50
parseUnsignedInt,2,0.5,Converts the string argument into a long value.,;java.lang.Integer.parseUnsignedInt(String);javax.xml.bind.DatatypeConverter.parseUnsignedInt(String),;0.50;0.50
partitioningBy,2,0.784161569,"Returns a Collector which partitions the input elements according to a Predicate, reduces the values in each partition according to another Collector, and organizes them into a Map&lt;Boolean, D&gt; whose values are the result of the downstream reduction. There are no guarantees on the type, mutability, serializability, or thread-safety of the Map returned.",";java.util.stream.Collectors.partitioningBy(Predicate&lt;?);java.util.stream.Collectors.partitioningBy(Predicate&lt;?,Collector&lt;?,A,D&gt;)",;0.77;0.78
pattern,2,0.5,Returns the regular expression from which this pattern was compiled.,;java.util.regex.Matcher.pattern();java.util.regex.Pattern.pattern(),;0.50;0.50
peekEvent,2,0.638880952,"Returns the first event with the specified id, if any.",;java.awt.EventQueue.peekEvent();java.awt.EventQueue.peekEvent(int),;0.64;0.64
play,2,0.724662643,Plays the audio clip given the URL and a specifier that is relative to it. Nothing happens if the audio clip cannot be found.,";java.applet.Applet.play(URL);java.applet.Applet.play(URL,String)",;0.72;0.72
plusMillis,2,0.939370954,Returns a copy of this instant with the specified duration in milliseconds added. This instance is immutable and unaffected by this method call.,;java.time.Duration.plusMillis(long);java.time.Instant.plusMillis(long),;0.94;0.94
pollFirstEntry,2,0.5,"Removes and returns a key-value mapping associated with the least key in this map, or null if the map is empty. The returned entry does not support the Entry.setValue method.",;java.util.TreeMap.pollFirstEntry();java.util.concurrent.ConcurrentSkipListMap.pollFirstEntry(),;0.50;0.50
pollLastEntry,2,0.5,"Removes and returns a key-value mapping associated with the greatest key in this map, or null if the map is empty. The returned entry does not support the Entry.setValue method.",;java.util.TreeMap.pollLastEntry();java.util.concurrent.ConcurrentSkipListMap.pollLastEntry(),;0.50;0.50
postProcessKeyEvent,2,0.902024285,This method will be called by dispatchKeyEvent. It will handle any unconsumed KeyEvents that map to an AWT MenuShortcut by consuming the event and activating the shortcut.,;java.awt.DefaultKeyboardFocusManager.postProcessKeyEvent(KeyEvent);java.awt.KeyboardFocusManager.postProcessKeyEvent(KeyEvent),;0.90;0.90
pow,2,0.5,Returns a BigInteger whose value is (thisexponent). Note that exponent is an integer rather than a BigInteger.,;java.math.BigDecimal.pow(int);java.math.BigInteger.pow(int),;0.50;0.50
precision,2,0.5,"A query for the smallest supported unit. This queries a TemporalAccessor for the time precision. If the target TemporalAccessor represents a consistent or complete date-time, date or time then this must return the smallest precision actually supported. Note that fields such as NANO_OF_DAY and NANO_OF_SECOND are defined to always return ignoring the precision, thus this is the only way to find the actual smallest supported unit. For example, were GregorianCalendar to implement TemporalAccessor it would return a precision of MILLIS. The result from JDK classes implementing TemporalAccessor is as follows:LocalDate returns DAYSLocalTime returns NANOSLocalDateTime returns NANOSZonedDateTime returns NANOSOffsetTime returns NANOSOffsetDateTime returns NANOSChronoLocalDate returns DAYSChronoLocalDateTime returns NANOSChronoZonedDateTime returns NANOSEra returns ERASDayOfWeek returns DAYSMonth returns MONTHSYear returns YEARSYearMonth returns MONTHSMonthDay returns null (does not represent a complete date or time)ZoneOffset returns null (does not represent a date or time)Instant returns NANOS",;java.math.BigDecimal.precision();java.time.temporal.TemporalQueries.precision(),;0.50;0.50
printAll,2,0.5,Invoke this method to print the component. This method invokes print on the component.,;java.awt.Component.printAll(Graphics);javax.swing.JComponent.printAll(Graphics),;0.50;0.50
printComponents,2,0.5,Prints the component in this scroll pane.,;java.awt.Container.printComponents(Graphics);java.awt.ScrollPane.printComponents(Graphics),;0.50;0.50
probeContentType,2,0.58552655,"Probes the content type of a file. This method uses the installed FileTypeDetector implementations to probe the given file to determine its content type. Each file type detector's probeContentType is invoked, in turn, to probe the file type. If the file is recognized then the content type is returned. If the file is not recognized by any of the installed file type detectors then a system-default file type detector is invoked to guess the content type. A given invocation of the Java virtual machine maintains a system-wide list of file type detectors. Installed file type detectors are loaded using the service-provider loading facility defined by the ServiceLoader class. Installed file type detectors are loaded using the system class loader. If the system class loader cannot be found then the extension class loader is used; If the extension class loader cannot be found then the bootstrap class loader is used. File type detectors are typically installed by placing them in a JAR file on the application class path or in the extension directory, the JAR file contains a provider-configuration file named java.nio.file.spi.FileTypeDetector in the resource directory META-INF/services, and the file lists one or more fully-qualified names of concrete subclass of FileTypeDetector that have a zero argument constructor. If the process of locating or instantiating the installed file type detectors fails then an unspecified error is thrown. The ordering that installed providers are located is implementation specific. The return value of this method is the string form of the value of a Multipurpose Internet Mail Extension (MIME) content type as defined by RFC2045: Multipurpose Internet Mail Extensions (MIME) Part One: Format of Internet Message Bodies. The string is guaranteed to be parsable according to the grammar in the RFC.",;java.nio.file.Files.probeContentType(Path);java.nio.file.spi.FileTypeDetector.probeContentType(Path),;0.59;0.53
process,2,0.5,Receives data chunks from the publish method asynchronously on the Event Dispatch Thread. Please refer to the publish(V...) method for more details.,";javax.annotation.processing.AbstractProcessor.process(Set&lt;?,RoundEnvironment);javax.swing.SwingWorker.process(List&lt;V&gt;)",;0.50;0.50
processImageComplete,2,0.882062704,Broadcasts the completion of an image write to all registered IIOWriteProgressListeners by calling their imageComplete method. Subclasses may use this method as a convenience.,;javax.imageio.ImageReader.processImageComplete();javax.imageio.ImageWriter.processImageComplete(),;0.88;0.88
processImageProgress,2,0.942193296,Broadcasts the current percentage of image completion to all registered IIOWriteProgressListeners by calling their imageProgress method. Subclasses may use this method as a convenience.,;javax.imageio.ImageReader.processImageProgress(float);javax.imageio.ImageWriter.processImageProgress(float),;0.94;0.94
processImageStarted,2,0.882062704,Broadcasts the start of an image write to all registered IIOWriteProgressListeners by calling their imageStarted method. Subclasses may use this method as a convenience.,;javax.imageio.ImageReader.processImageStarted(int);javax.imageio.ImageWriter.processImageStarted(int),;0.88;0.88
processMouseMotionEvent,2,0.5,"Processes mouse motion event occurring on the JLayer or any of its subcomponents. This method is not called unless mouse motion events are enabled for the JLayer objects, this LayerUI is set to. Mouse motion events are enabled in the overridden installUI(javax.swing.JComponent) method and should be disabled in the uninstallUI(javax.swing.JComponent) method after that. public void installUI(JComponent c) { super.installUI(c); JLayer l = (JLayer) c; l.setLayerEventMask(AWTEvent.MOUSE_MOTION_EVENT_MASK); } public void uninstallUI(JComponent c) { super.uninstallUI(c); JLayer l = (JLayer) c; l.setLayerEventMask(0); }",";javax.swing.JComponent.processMouseMotionEvent(MouseEvent);javax.swing.plaf.LayerUI.processMouseMotionEvent(MouseEvent,JLayer&lt;?)",;0.50;0.50
processMouseWheelEvent,2,0.5,"Processes mouse wheel event occurring on the JLayer or any of its subcomponents. This method is not called unless mouse wheel events are enabled for the JLayer objects, this LayerUI is set to. Mouse wheel events are enabled in the overridden installUI(javax.swing.JComponent) method and should be disabled in the uninstallUI(javax.swing.JComponent) method after that. public void installUI(JComponent c) { super.installUI(c); JLayer l = (JLayer) c; l.setLayerEventMask(AWTEvent.MOUSE_WHEEL_EVENT_MASK); } public void uninstallUI(JComponent c) { super.uninstallUI(c); JLayer l = (JLayer) c; l.setLayerEventMask(0); }",";java.awt.ScrollPane.processMouseWheelEvent(MouseWheelEvent);javax.swing.plaf.LayerUI.processMouseWheelEvent(MouseWheelEvent,JLayer&lt;?)",;0.50;0.50
processThumbnailComplete,2,0.882062704,Broadcasts the completion of a thumbnail write to all registered IIOWriteProgressListeners by calling their thumbnailComplete method. Subclasses may use this method as a convenience.,;javax.imageio.ImageReader.processThumbnailComplete();javax.imageio.ImageWriter.processThumbnailComplete(),;0.88;0.88
processThumbnailProgress,2,0.942193296,Broadcasts the current percentage of thumbnail completion to all registered IIOWriteProgressListeners by calling their thumbnailProgress method. Subclasses may use this method as a convenience.,;javax.imageio.ImageReader.processThumbnailProgress(float);javax.imageio.ImageWriter.processThumbnailProgress(float),;0.94;0.94
processThumbnailStarted,2,0.882062704,Broadcasts the start of a thumbnail write to all registered IIOWriteProgressListeners by calling their thumbnailStarted method. Subclasses may use this method as a convenience.,";javax.imageio.ImageReader.processThumbnailStarted(int,int);javax.imageio.ImageWriter.processThumbnailStarted(int,int)",;0.88;0.88
processWindowEvent,2,0.56586657,"Processes window events occurring on this component. Hides the window or disposes of it, as specified by the setting of the defaultCloseOperation property.",;javax.swing.JDialog.processWindowEvent(WindowEvent);javax.swing.JFrame.processWindowEvent(WindowEvent),;0.55;0.57
provideErrorFeedback,2,1,"Invoked when the user attempts an invalid operation, such as pasting into an uneditable JTextField that has focus. The default implementation beeps. Subclasses that wish different behavior should override this and provide the additional feedback.",;javax.swing.LookAndFeel.provideErrorFeedback(Component);javax.swing.plaf.metal.MetalLookAndFeel.provideErrorFeedback(Component),;1.00;1.00
purge,2,0.5,"Tries to remove from the work queue all Future tasks that have been cancelled. This method can be useful as a storage reclamation operation, that has no other impact on functionality. Cancelled tasks are never executed, but may accumulate in work queues until worker threads can actively remove them. Invoking this method instead tries to remove them now. However, this method may fail to remove tasks in the presence of interference by other threads.",;java.util.Timer.purge();java.util.concurrent.ThreadPoolExecutor.purge(),;0.50;0.50
putBoolean,2,0.5,"Associates a string representing the specified boolean value with the specified key in this preference node. The associated string is ""true"" if the value is true, and ""false"" if it is false. This method is intended for use in conjunction with getBoolean(java.lang.String, boolean).",";java.util.prefs.AbstractPreferences.putBoolean(String,boolean);java.util.prefs.Preferences.putBoolean(String,boolean)",;0.50;0.50
putByteArray,2,0.5,"Associates a string representing the specified byte array with the specified key in this preference node. The associated string is the Base64 encoding of the byte array, as defined in RFC 2045, Section 6.8, with one minor change: the string will consist solely of characters from the Base64 Alphabet; it will not contain any newline characters. Note that the maximum length of the byte array is limited to three quarters of MAX_VALUE_LENGTH so that the length of the Base64 encoded String does not exceed MAX_VALUE_LENGTH. This method is intended for use in conjunction with getByteArray(java.lang.String, byte[]).",";java.util.prefs.AbstractPreferences.putByteArray(String,byte[]);java.util.prefs.Preferences.putByteArray(String,byte[])",;0.50;0.50
putChar,2,0.858987477,"Relative put method for writing a char value(optional operation). Writes two bytes containing the given char value, in the current byte order, into this buffer at the current position, and then increments the position by two.",";java.nio.ByteBuffer.putChar(char);java.nio.ByteBuffer.putChar(int,char)",;0.86;0.85
putConstraint,2,0.609473897,"Links edge e1 of component c1 to edge e2 of component c2. As edge (e2, c2) changes value, edge (e1, c1) will be calculated by taking the (spring) sum of (e2, c2) and s. Each edge must have one of the following values: SpringLayout.NORTH, SpringLayout.SOUTH, SpringLayout.EAST, SpringLayout.WEST, SpringLayout.VERTICAL_CENTER, SpringLayout.HORIZONTAL_CENTER or SpringLayout.BASELINE.",";javax.swing.SpringLayout.putConstraint(String,Component,int,String,Component);javax.swing.SpringLayout.putConstraint(String,Component,Spring,String,Component)",;0.60;0.61
putNextEntry,2,0.866705424,"Begins writing a new ZIP file entry and positions the stream to the start of the entry data. Closes the current entry if still active. The default compression method will be used if no compression method was specified for the entry, and the current time will be used if the entry has no set modification time.",;java.util.jar.JarOutputStream.putNextEntry(ZipEntry);java.util.zip.ZipOutputStream.putNextEntry(ZipEntry),;0.87;0.87
putShort,2,0.858987477,"Relative put method for writing a short value(optional operation). Writes two bytes containing the given short value, in the current byte order, into this buffer at the current position, and then increments the position by two.",";java.nio.ByteBuffer.putShort(short);java.nio.ByteBuffer.putShort(int,short)",;0.86;0.85
putValue,2,0.5,Sets the Value associated with the specified key.,";java.util.jar.Attributes.putValue(String,String);javax.swing.AbstractAction.putValue(String,Object)",;0.50;0.50
quadrantRotate,2,0.884350242,"Concatenates this transform with a transform that rotates coordinates by the specified number of quadrants around the specified anchor point. This method is equivalent to calling: rotate(numquadrants * Math.PI / 2.0, anchorx, anchory); Rotating by a positive number of quadrants rotates points on the positive X axis toward the positive Y axis.",";java.awt.geom.AffineTransform.quadrantRotate(int);java.awt.geom.AffineTransform.quadrantRotate(int,double,double)",;0.88;0.88
queryMBeans,2,1,Description copied from interface:RMIConnection,";javax.management.remote.rmi.RMIConnectionImpl.queryMBeans(ObjectName,MarshalledObject,Subject);javax.management.remote.rmi.RMIConnectionImpl_Stub.queryMBeans(ObjectName,MarshalledObject,Subject)",;1.00;1.00
queryNames,2,1,Description copied from interface:RMIConnection,";javax.management.remote.rmi.RMIConnectionImpl.queryNames(ObjectName,MarshalledObject,Subject);javax.management.remote.rmi.RMIConnectionImpl_Stub.queryNames(ObjectName,MarshalledObject,Subject)",;1.00;1.00
random,2,1,"Returns a double value with a positive sign, greater than or equal to 0.0 and less than 1.0. Returned values are chosen pseudorandomly with (approximately) uniform distribution from that range. When this method is first called, it creates a single new pseudorandom-number generator, exactly as if by the expression new java.util.Random() This new pseudorandom-number generator is used thereafter for all calls to this method and is used nowhere else. This method is properly synchronized to allow correct use by more than one thread. However, if many threads need to generate pseudorandom numbers at a great rate, it may reduce contention for each thread to have its own pseudorandom-number generator.",;java.lang.Math.random();java.lang.StrictMath.random(),;1.00;1.00
read_abstract_interface,2,0.5,Unmarshal the class object or the stub class corresponding to the passed type.,;org.omg.CORBA_2_3.portable.InputStream.read_abstract_interface();org.omg.CORBA_2_3.portable.InputStream.read_abstract_interface(Class),;0.50;0.50
read_Object,2,0.5,"Unmarshals an object and returns a CORBA Object, which is an instance of the class passed as its argument. This class is the stub class of the expected type.",;org.omg.CORBA.portable.InputStream.read_Object();org.omg.CORBA.portable.InputStream.read_Object(Class),;0.50;0.50
readAll,2,0.779879949,"Returns an Iterator containing all the images, thumbnails, and metadata, starting at the index given by getMinIndex, from the input source in the form of IIOImage objects. An Iterator containing ImageReadParam objects is supplied; one element is consumed for each image read from the input source until no more images are available. If the read param Iterator runs out of elements, but there are still more images available from the input source, default read params are used for the remaining images. If params is null, a default read param will be used for all images. The actual BufferedImage referenced by the returned IIOImage will be chosen using the algorithm defined by the getDestination method. Any registered IIOReadProgressListener objects will be notified by calling their sequenceStarted method once. Then, for each image decoded, there will be a call to imageStarted, followed by calls to imageProgress as the read progresses, and finally to imageComplete. The sequenceComplete method will be called after the last image has been decoded. IIOReadUpdateListener objects may be updated at other times during the read as pixels are decoded. Finally, IIOReadWarningListener objects will receive notification of any non-fatal warnings that occur during decoding. The set of source bands to be read and destination bands to be written is determined by calling getSourceBands and getDestinationBands on the supplied ImageReadParam. If the lengths of the arrays returned by these methods differ, the set of source bands contains an index larger that the largest available source index, or the set of destination bands contains an index larger than the largest legal destination index, an IllegalArgumentException is thrown. Thumbnails will be returned in their entirety regardless of the region settings. If any of the supplied ImageReadParams contain optional setting values not supported by this reader (e.g. source render size or any format-specific settings), they will be ignored.",";javax.imageio.ImageReader.readAll(int,ImageReadParam);javax.imageio.ImageReader.readAll(Iterator&lt;?)",;0.76;0.78
readBytes,2,0.5,Retrieves the next attribute in this SQLInputImpl object as an array of bytes. This method does not perform type-safe checking to determine if the returned type is the expected type; this responsibility is delegated to the UDT mapping as defined by a SQLData implementation.,";javax.imageio.stream.ImageInputStreamImpl.readBytes(IIOByteBuffer,int);javax.sql.rowset.serial.SQLInputImpl.readBytes()",;0.50;0.50
readConfiguration,2,0.749808414,"Reinitialize the logging properties and reread the logging configuration. The same rules are used for locating the configuration properties as are used at startup. So normally the logging properties will be re-read from the same file that was used at startup. Any log level definitions in the new configuration file will be applied using Logger.setLevel(), if the target Logger exists. A PropertyChangeEvent will be fired after the properties are read.",;java.util.logging.LogManager.readConfiguration();java.util.logging.LogManager.readConfiguration(InputStream),;0.75;0.74
readPassword,2,0.791411698,"Provides a formatted prompt, then reads a password or passphrase from the console with echoing disabled.",";java.io.Console.readPassword(String,Object...);java.io.Console.readPassword()",;0.79;0.78
readSymbolicLink,2,0.55887611,"Reads the target of a symbolic link (optional operation). If the file system supports symbolic links then this method is used to read the target of the link, failing if the file is not a symbolic link. The target of the link need not exist. The returned Path object will be associated with the same file system as link.",;java.nio.file.Files.readSymbolicLink(Path);java.nio.file.spi.FileSystemProvider.readSymbolicLink(Path),;0.56;0.55
rebind_context,2,1,Creates a binding of a name and a naming context in the naming context even if the name is already bound in the context. Naming contexts that are bound using rebind_context() participate in name resolution when compound names are passed to be resolved.,";org.omg.CosNaming._NamingContextExtStub.rebind_context(NameComponent[],NamingContext);org.omg.CosNaming._NamingContextStub.rebind_context(NameComponent[],NamingContext)",;1.00;1.00
redirectErrorStream,2,0.926067915,"Tells whether this process builder merges standard error and standard output. If this property is true, then any error output generated by subprocesses subsequently started by this object's start() method will be merged with the standard output, so that both can be read using the Process.getInputStream() method. This makes it easier to correlate error messages with the corresponding output. The initial value is false.",;java.lang.ProcessBuilder.redirectErrorStream();java.lang.ProcessBuilder.redirectErrorStream(boolean),;0.93;0.93
reduceEntries,2,0.862275574,"Returns the result of accumulating the given transformation of all entries using the given reducer to combine values, or null if none.",";java.util.concurrent.ConcurrentHashMap.reduceEntries(long,BiFunction&lt;Map.Entry&lt;K,V&gt;,Map.Entry&lt;K,V&gt;,?,V&gt;&gt;);java.util.concurrent.ConcurrentHashMap.reduceEntries(long,Function&lt;Map.Entry&lt;K,V&gt;,?,BiFunction&lt;?,?,?)",;0.86;0.86
reduceKeys,2,0.862275574,"Returns the result of accumulating the given transformation of all keys using the given reducer to combine values, or null if none.",";java.util.concurrent.ConcurrentHashMap.reduceKeys(long,BiFunction&lt;?,?,?);java.util.concurrent.ConcurrentHashMap.reduceKeys(long,Function&lt;?,?,BiFunction&lt;?,?,?)",;0.86;0.86
reduceValues,2,0.862275574,"Returns the result of accumulating the given transformation of all values using the given reducer to combine values, or null if none.",";java.util.concurrent.ConcurrentHashMap.reduceValues(long,BiFunction&lt;?,?,?);java.util.concurrent.ConcurrentHashMap.reduceValues(long,Function&lt;?,?,BiFunction&lt;?,?,?)",;0.86;0.86
registerDriver,2,1,"Registers the given driver with the DriverManager. A newly-loaded driver class should call the method registerDriver to make itself known to the DriverManager. If the driver is currently registered, no action is taken.",";java.sql.DriverManager.registerDriver(Driver);java.sql.DriverManager.registerDriver(Driver,DriverAction)",;1.00;1.00
registerEditorKitForContentType,2,0.820915088,"Establishes the default bindings of type to classname. The class will be dynamically loaded later when actually needed, and can be safely changed before attempted uses to avoid loading unwanted classes. The prototype EditorKit will be loaded with Class.forName when registered with this method.",";javax.swing.JEditorPane.registerEditorKitForContentType(String,String);javax.swing.JEditorPane.registerEditorKitForContentType(String,String,ClassLoader)",;0.82;0.81
registerKeyboardAction,2,0.521043415,"This method is now obsolete, please use a combination of getActionMap() and getInputMap() for similar behavior. For example, to bind the KeyStrokeaKeyStroke to the Action anAction now use: component.getInputMap().put(aKeyStroke, aCommand); component.getActionMap().put(aCommmand, anAction); The above assumes you want the binding to be applicable for WHEN_FOCUSED. To register bindings for other focus states use the getInputMap method that takes an integer. Register a new keyboard action. anAction will be invoked if a key event matching aKeyStroke occurs and aCondition is verified. The KeyStroke object defines a particular combination of a keyboard key and one or more modifiers (alt, shift, ctrl, meta). The aCommand will be set in the delivered event if specified. The aCondition can be one of: WHEN_FOCUSED The action will be invoked only when the keystroke occurs while the component has the focus. WHEN_IN_FOCUSED_WINDOW The action will be invoked when the keystroke occurs while the component has the focus or if the component is in the window that has the focus. Note that the component need not be an immediate descendent of the window -- it can be anywhere in the window's containment hierarchy. In other words, whenever any component in the window has the focus, the action registered with this component is invoked. WHEN_ANCESTOR_OF_FOCUSED_COMPONENT The action will be invoked when the keystroke occurs while the component has the focus or if the component is an ancestor of the component that has the focus. The combination of keystrokes and conditions lets you define high level (semantic) action events for a specified keystroke+modifier combination (using the KeyStroke class) and direct to a parent or child of a component that has the focus, or to the component itself. In other words, in any hierarchical structure of components, an arbitrary key-combination can be immediately directed to the appropriate component in the hierarchy, and cause a specific method to be invoked (usually by way of adapter objects). If an action has already been registered for the receiving container, with the same charCode and the same modifiers, anAction will replace the action.",";javax.swing.JComponent.registerKeyboardAction(ActionListener,String,KeyStroke,int);javax.swing.JComponent.registerKeyboardAction(ActionListener,KeyStroke,int)",;0.52;0.50
registerListeners,2,0.779684246,register this DragGestureRecognizer's Listeners with the Component subclasses must override this method,;java.awt.dnd.DragGestureRecognizer.registerListeners();java.awt.dnd.MouseDragGestureRecognizer.registerListeners(),;0.78;0.77
registerProvider,2,0.5,"Adds the the given synchronization provider to the factory register. Guidelines are provided in the SyncProvider specification for the required naming conventions for SyncProvider implementations. Synchronization providers bound to a JNDI context can be registered by binding a SyncProvider instance to a JNDI namespace. SyncProvider p = new MySyncProvider(); InitialContext ic = new InitialContext(); ic.bind (""jdbc/rowset/MySyncProvider"", p); Furthermore, an initial JNDI context should be set with the SyncFactory using the setJNDIContext method. The SyncFactory leverages this context to search for available SyncProvider objects bound to the JNDI context and its child nodes.",;java.time.zone.ZoneRulesProvider.registerProvider(ZoneRulesProvider);javax.sql.rowset.spi.SyncFactory.registerProvider(String),;0.50;0.50
rejectDrag,2,0.5,Rejects the drag as a result of examining either the dropAction or the available DataFlavor types.,;java.awt.dnd.DropTargetContext.rejectDrag();java.awt.dnd.DropTargetDragEvent.rejectDrag(),;0.00;0.50
rejectDrop,2,0.5,called to signal that the drop is unacceptable. must be called during DropTargetListener.drop method invocation.,;java.awt.dnd.DropTargetContext.rejectDrop();java.awt.dnd.DropTargetDropEvent.rejectDrop(),;0.50;0.00
releaseBeanContextResources,2,0.5,called from setBeanContext to notify a BeanContextChild to release resources obtained from the nesting BeanContext. This method revokes any services obtained from its parent. subclasses may envelope this method to implement their own semantics.,;java.beans.beancontext.BeanContextChildSupport.releaseBeanContextResources();java.beans.beancontext.BeanContextServicesSupport.releaseBeanContextResources(),;0.50;0.50
releaseShared,2,0.918558505,Releases in shared mode. Implemented by unblocking one or more threads if tryReleaseShared(int) returns true.,;java.util.concurrent.locks.AbstractQueuedLongSynchronizer.releaseShared(long);java.util.concurrent.locks.AbstractQueuedSynchronizer.releaseShared(int),;0.92;0.92
remainderUnsigned,2,1,Returns the unsigned remainder from dividing the first argument by the second where each argument and the result is interpreted as an unsigned value.,";java.lang.Integer.remainderUnsigned(int,int);java.lang.Long.remainderUnsigned(long,long)",;1.00;1.00
removeAllMimeHeaders,2,0.5,Removes all the MimeHeader objects for this SOAPEnvelope object.,;javax.xml.soap.AttachmentPart.removeAllMimeHeaders();javax.xml.soap.SOAPPart.removeAllMimeHeaders(),;0.50;0.50
removeCellEditorListener,2,0.5,Removes the previously added CellEditorListener.,;javax.swing.AbstractCellEditor.removeCellEditorListener(CellEditorListener);javax.swing.tree.DefaultTreeCellEditor.removeCellEditorListener(CellEditorListener),;0.50;0.50
removeColumn,2,0.5,Deletes the column from the tableColumns array. This method will do nothing if column is not in the table's columns list. tile is called to resize both the header and table views. This method also posts a columnRemoved event to its listeners.,;javax.swing.JTable.removeColumn(TableColumn);javax.swing.table.DefaultTableColumnModel.removeColumn(TableColumn),;0.50;0.50
removeConnectionNotificationListener,2,1,Description copied from interface:JMXConnector,";javax.management.remote.rmi.RMIConnector.removeConnectionNotificationListener(NotificationListener);javax.management.remote.rmi.RMIConnector.removeConnectionNotificationListener(NotificationListener,NotificationFilter,Object)",;1.00;1.00
removeDocumentListener,2,1,Removes a document listener.,;javax.swing.text.AbstractDocument.removeDocumentListener(DocumentListener);javax.swing.text.DefaultStyledDocument.removeDocumentListener(DocumentListener),;1.00;1.00
removeDragSourceListener,2,0.550084102,"Removes the specified DragSourceListener from this DragSource. If a null listener is specified, no action is taken and no exception is thrown. If the listener specified by the argument was not previously added to this DragSource, no action is taken and no exception is thrown.",;java.awt.dnd.DragSource.removeDragSourceListener(DragSourceListener);java.awt.dnd.DragSourceContext.removeDragSourceListener(DragSourceListener),;0.55;0.50
removeEditor,2,0.5,This public method is implementation specific and should be private. do not call or override.,;javax.swing.JTable.removeEditor();javax.swing.plaf.basic.BasicComboBoxUI.removeEditor(),;0.50;0.50
removeField,2,0.5,Description copied from interface:Descriptor,;javax.management.ImmutableDescriptor.removeField(String);javax.management.modelmbean.DescriptorSupport.removeField(String),;0.50;0.50
removeListSelectionListener,2,0.579222507,Remove a listener from the list that's notified each time a change to the selection occurs.,;javax.swing.DefaultListSelectionModel.removeListSelectionListener(ListSelectionListener);javax.swing.JList.removeListSelectionListener(ListSelectionListener),;0.58;0.55
removeMenuKeyListener,2,0.821729442,Removes a MenuKeyListener from the popup menu.,;javax.swing.JMenuItem.removeMenuKeyListener(MenuKeyListener);javax.swing.JPopupMenu.removeMenuKeyListener(MenuKeyListener),;0.82;0.82
removeMimeHeader,2,1,Removes all MIME headers that match the given name.,;javax.xml.soap.AttachmentPart.removeMimeHeader(String);javax.xml.soap.SOAPPart.removeMimeHeader(String),;1.00;1.00
removeMouseListener,2,0.612526415,"Removes the specified mouse listener so that it no longer receives mouse events from this component. This method performs no function, nor does it throw an exception, if the listener specified by the argument was not previously added to this component. If listener l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Component.removeMouseListener(MouseListener);java.awt.TrayIcon.removeMouseListener(MouseListener),;0.61;0.57
removeMouseMotionListener,2,0.616819433,"Removes the specified mouse motion listener so that it no longer receives mouse motion events from this component. This method performs no function, nor does it throw an exception, if the listener specified by the argument was not previously added to this component. If listener l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Component.removeMouseMotionListener(MouseMotionListener);java.awt.TrayIcon.removeMouseMotionListener(MouseMotionListener),;0.62;0.58
removeNode,2,0.5,"Removes this preference node and all of its descendants, invalidating any preferences contained in the removed nodes. Once a node has been removed, attempting any method other than name(), absolutePath(), isUserNode(), flush() or nodeExists("""") on the corresponding Preferences instance will fail with an IllegalStateException. (The methods defined on Object can still be invoked on a node after it has been removed; they will not throw IllegalStateException.) The removal is not guaranteed to be persistent until the flush method is called on this node (or an ancestor). If this implementation supports stored defaults, removing a node exposes any stored defaults at or below this node. Thus, a subsequent call to nodeExists on this node's path name may return true, and a subsequent call to node on this path name may return a (different) Preferences instance representing a non-empty collection of preferences and/or children.",;java.util.prefs.AbstractPreferences.removeNode();java.util.prefs.Preferences.removeNode(),;0.50;0.50
removeNodeChangeListener,2,0.5,"Removes the specified NodeChangeListener, so it no longer receives change events.",;java.util.prefs.AbstractPreferences.removeNodeChangeListener(NodeChangeListener);java.util.prefs.Preferences.removeNodeChangeListener(NodeChangeListener),;0.50;0.50
removeNotificationListeners,2,1,Description copied from interface:RMIConnection,";javax.management.remote.rmi.RMIConnectionImpl.removeNotificationListeners(ObjectName,Integer[],Subject);javax.management.remote.rmi.RMIConnectionImpl_Stub.removeNotificationListeners(ObjectName,Integer[],Subject)",;1.00;1.00
removePopupMenuListener,2,0.5,Removes a PopupMenu listener.,;javax.swing.JComboBox.removePopupMenuListener(PopupMenuListener);javax.swing.JPopupMenu.removePopupMenuListener(PopupMenuListener),;0.00;0.50
removePreferenceChangeListener,2,0.5,"Removes the specified preference change listener, so it no longer receives preference change events.",;java.util.prefs.AbstractPreferences.removePreferenceChangeListener(PreferenceChangeListener);java.util.prefs.Preferences.removePreferenceChangeListener(PreferenceChangeListener),;0.50;0.50
removeSelectionPath,2,0.5,Removes path from the selection. If path is in the selection The TreeSelectionListeners are notified. This has no effect if path is null.,;javax.swing.JTree.removeSelectionPath(TreePath);javax.swing.tree.DefaultTreeSelectionModel.removeSelectionPath(TreePath),;0.50;0.50
removeUndoableEditListener,2,0.5,Removes an undo listener.,;javax.swing.text.AbstractDocument.removeUndoableEditListener(UndoableEditListener);javax.swing.undo.UndoableEditSupport.removeUndoableEditListener(UndoableEditListener),;0.50;0.00
rename,2,1,Description copied from interface:Context,";javax.naming.InitialContext.rename(String,String);javax.naming.InitialContext.rename(Name,Name)",;1.00;1.00
replaceEditor,2,1,"Called by the PropertyChangeListener when the JSpinner editor property changes. It's the responsibility of this method to remove the old editor and add the new one. By default this operation is just: spinner.remove(oldEditor); spinner.add(newEditor, ""Editor""); The implementation of replaceEditor should be coordinated with the createEditor method.",";javax.swing.plaf.basic.BasicSpinnerUI.replaceEditor(JComponent,JComponent);javax.swing.plaf.synth.SynthSpinnerUI.replaceEditor(JComponent,JComponent)",;1.00;1.00
replaceFirst,2,0.603444929,"Replaces the first subsequence of the input sequence that matches the pattern with the given replacement string. This method first resets this matcher. It then scans the input sequence looking for a match of the pattern. Characters that are not part of the match are appended directly to the result string; the match is replaced in the result by the replacement string. The replacement string may contain references to captured subsequences as in the appendReplacement method. Note that backslashes (\) and dollar signs ($) in the replacement string may cause the results to be different than if it were being treated as a literal replacement string. Dollar signs may be treated as references to captured subsequences as described above, and backslashes are used to escape literal characters in the replacement string. Given the regular expression dog, the input ""zzzdogzzzdogzzz"", and the replacement string ""cat"", an invocation of this method on a matcher for that expression would yield the string ""zzzcatzzzdogzzz"". Invoking this method changes this matcher's state. If the matcher is to be used in further matching operations then it should first be reset.",";java.lang.String.replaceFirst(String,String);java.util.regex.Matcher.replaceFirst(String)",;0.58;0.60
replacement,2,0.5,Returns this encoder's replacement value.,;java.nio.charset.CharsetDecoder.replacement();java.nio.charset.CharsetEncoder.replacement(),;0.50;0.50
replacePixels,2,0.976863646,"Replaces a portion of an image already present in the output with a portion of the given Raster. The image data must match, or be convertible to, the image layout of the existing image. An ImageWriteParam may optionally be supplied to control the writing process. If param is null, a default write param will be used. The destination region is specified in the param argument, and will be clipped to the image boundaries and the region supplied to prepareReplacePixels. At least one pixel of the source must not be clipped, or an exception is thrown. If the supplied ImageWriteParam contains optional setting values not supported by this writer (e.g. progressive encoding or any format-specific settings), they will be ignored. This method may only be called after a call to prepareReplacePixels, or else an IllegalStateException will be thrown. The default implementation throws an IllegalStateException if the output is null, and otherwise throws an UnsupportedOperationException.",";javax.imageio.ImageWriter.replacePixels(RenderedImage,ImageWriteParam);javax.imageio.ImageWriter.replacePixels(Raster,ImageWriteParam)",;0.98;0.98
replaceRange,2,0.5,Replaces text from the indicated start to end position with the new text specified. Does nothing if the model is null. Simply does a delete if the new string is null or empty.,";java.awt.TextArea.replaceRange(String,int,int);javax.swing.JTextArea.replaceRange(String,int,int)",;0.50;0.50
replaceWith,2,0.948557425,"Changes this encoder's replacement value. This method invokes the implReplaceWith method, passing the new replacement, after checking that the new replacement is acceptable.",;java.nio.charset.CharsetDecoder.replaceWith(String);java.nio.charset.CharsetEncoder.replaceWith(byte[]),;0.95;0.95
request,2,0.5,"request is called by a stub to obtain an OutputStream for marshaling arguments. The stub must supply the operation name, and indicate if a response is expected (i.e is this a oneway call).",";org.omg.CORBA.portable.Delegate.request(Object,String);org.omg.CORBA.portable.Delegate.request(Object,String,boolean)",;0.50;0.50
rescanCurrentDirectory,2,0.5,Invokes the rescanCurrentDirectory method on each UI handled by this object.,;javax.swing.JFileChooser.rescanCurrentDirectory();javax.swing.plaf.multi.MultiFileChooserUI.rescanCurrentDirectory(JFileChooser),;0.50;0.50
resizeAndRepaint,2,0.661886136,Sizes the header and marks it as needing display. Equivalent to revalidate followed by repaint.,;javax.swing.JTable.resizeAndRepaint();javax.swing.table.JTableHeader.resizeAndRepaint(),;0.61;0.66
resolveClass,2,0.5,"Links the specified class. This (misleadingly named) method may be used by a class loader to link a class. If the class c has already been linked, then this method simply returns. Otherwise, the class is linked as described in the ""Execution"" chapter of The Java閳 Language Specification.",;java.io.ObjectInputStream.resolveClass(ObjectStreamClass);java.lang.ClassLoader.resolveClass(Class&lt;?&gt;),;0.50;0.50
result,2,0.5,Deprecated.use the method set_result,;org.omg.CORBA.Request.result();org.omg.CORBA.ServerRequest.result(Any),;0.50;0.50
resume,2,0.5,"Deprecated.This method is used solely in conjunction with Thread.suspend and ThreadGroup.suspend, both of which have been deprecated, as they are inherently deadlock-prone. See Thread.suspend() for details.",;java.lang.Thread.resume();java.lang.ThreadGroup.resume(),;0.50;0.50
reverseOrder,2,0.658851095,"Returns a comparator that imposes the reverse of the natural ordering on a collection of objects that implement the Comparable interface. (The natural ordering is the ordering imposed by the objects' own compareTo method.) This enables a simple idiom for sorting (or maintaining) collections (or arrays) of objects that implement the Comparable interface in reverse-natural-order. For example, suppose a is an array of strings. Then: Arrays.sort(a, Collections.reverseOrder()); sorts the array in reverse-lexicographic (alphabetical) order. The returned comparator is serializable.",;java.util.Collections.reverseOrder();java.util.Collections.reverseOrder(Comparator&lt;T&gt;),;0.66;0.65
rolloverColumnUpdated,2,1,This method gets called every time when a rollover column in the table header is updated. Every look and feel that supports a rollover effect in a table header should override this method and repaint the header.,";javax.swing.plaf.basic.BasicTableHeaderUI.rolloverColumnUpdated(int,int);javax.swing.plaf.synth.SynthTableHeaderUI.rolloverColumnUpdated(int,int)",;1.00;1.00
rotateLeft,2,0.957198231,"Returns the value obtained by rotating the two's complement binary representation of the specified long value left by the specified number of bits. (Bits shifted out of the left hand, or high-order, side reenter on the right, or low-order.) Note that left rotation with a negative distance is equivalent to right rotation: rotateLeft(val, -distance) == rotateRight(val, distance). Note also that rotation by any multiple of 64 is a no-op, so all but the last six bits of the rotation distance can be ignored, even if the distance is negative: rotateLeft(val, distance) == rotateLeft(val, distance &amp; 0x3F).",";java.lang.Integer.rotateLeft(int,int);java.lang.Long.rotateLeft(long,int)",;0.96;0.96
rotateRight,2,0.957198231,"Returns the value obtained by rotating the two's complement binary representation of the specified long value right by the specified number of bits. (Bits shifted out of the right hand, or low-order, side reenter on the left, or high-order.) Note that right rotation with a negative distance is equivalent to left rotation: rotateRight(val, -distance) == rotateLeft(val, distance). Note also that rotation by any multiple of 64 is a no-op, so all but the last six bits of the rotation distance can be ignored, even if the distance is negative: rotateRight(val, distance) == rotateRight(val, distance &amp; 0x3F).",";java.lang.Integer.rotateRight(int,int);java.lang.Long.rotateRight(long,int)",;0.96;0.96
rowsDeleted,2,1,"Invoked when rows have been deleted from the underlying model in the specified range (inclusive). The arguments give the indices of the effected range and are in terms of the model before the change. For example, if you have a 5-row model and delete 3 items from the end of the model the indices are 2, 4. You normally do not call this method. This method is public to allow view classes to call it.",";javax.swing.DefaultRowSorter.rowsDeleted(int,int);javax.swing.RowSorter.rowsDeleted(int,int)",;1.00;1.00
rowsInserted,2,1,"Invoked when rows have been inserted into the underlying model in the specified range (inclusive). The arguments give the indices of the effected range. The first argument is in terms of the model before the change, and must be less than or equal to the size of the model before the change. The second argument is in terms of the model after the change and must be less than the size of the model after the change. For example, if you have a 5-row model and add 3 items to the end of the model the indices are 5, 7. You normally do not call this method. This method is public to allow view classes to call it.",";javax.swing.DefaultRowSorter.rowsInserted(int,int);javax.swing.RowSorter.rowsInserted(int,int)",;1.00;1.00
runAfterBothAsync,2,1,Description copied from interface:CompletionStage,";java.util.concurrent.CompletableFuture.runAfterBothAsync(CompletionStage&lt;?&gt;,Runnable);java.util.concurrent.CompletableFuture.runAfterBothAsync(CompletionStage&lt;?&gt;,Runnable,Executor)",;1.00;1.00
runAfterEitherAsync,2,1,Description copied from interface:CompletionStage,";java.util.concurrent.CompletableFuture.runAfterEitherAsync(CompletionStage&lt;?&gt;,Runnable);java.util.concurrent.CompletableFuture.runAfterEitherAsync(CompletionStage&lt;?&gt;,Runnable,Executor)",;1.00;1.00
runAsync,2,0.911624524,Returns a new CompletableFuture that is asynchronously completed by a task running in the given executor after it runs the given action.,";java.util.concurrent.CompletableFuture.runAsync(Runnable);java.util.concurrent.CompletableFuture.runAsync(Runnable,Executor)",;0.91;0.91
runFinalization,2,0.793709845,"Runs the finalization methods of any objects pending finalization. Calling this method suggests that the Java virtual machine expend effort toward running the finalize methods of objects that have been found to be discarded but whose finalize methods have not yet been run. When control returns from the method call, the virtual machine has made a best effort to complete all outstanding finalizations. The virtual machine performs the finalization process automatically as needed, in a separate thread, if the runFinalization method is not invoked explicitly. The method System.runFinalization() is the conventional and convenient means of invoking this method.",;java.lang.Runtime.runFinalization();java.lang.System.runFinalization(),;0.79;0.79
runFinalizersOnExit,2,1,"Deprecated.This method is inherently unsafe. It may result in finalizers being called on live objects while other threads are concurrently manipulating those objects, resulting in erratic behavior or deadlock.",;java.lang.Runtime.runFinalizersOnExit(boolean);java.lang.System.runFinalizersOnExit(boolean),;1.00;1.00
sameFile,2,0.5,"Compare two urls to see whether they refer to the same file, i.e., having the same protocol, host, port, and path. This method requires that none of its arguments is null. This is guaranteed by the fact that it is only called indirectly by java.net.URL class.",";java.net.URL.sameFile(URL);java.net.URLStreamHandler.sameFile(URL,URL)",;0.50;0.50
scrollDueToClickInTrack,2,0.5,Description copied from class:BasicSliderUI,;javax.swing.plaf.basic.BasicSliderUI.scrollDueToClickInTrack(int);javax.swing.plaf.metal.MetalSliderUI.scrollDueToClickInTrack(int),;0.50;0.50
sendAttributeChangeNotification,2,1,Description copied from interface:ModelMBeanNotificationBroadcaster,";javax.management.modelmbean.RequiredModelMBean.sendAttributeChangeNotification(AttributeChangeNotification);javax.management.modelmbean.RequiredModelMBean.sendAttributeChangeNotification(Attribute,Attribute)",;1.00;1.00
sendUrgentData,2,0.700755009,Send one byte of urgent data on the socket. The byte to be sent is the lowest eight bits of the data parameter. The urgent byte is sent after any preceding writes to the socket OutputStream and before any future writes to the OutputStream.,;java.net.Socket.sendUrgentData(int);java.net.SocketImpl.sendUrgentData(int),;0.70;0.65
serviceAvailable,2,0.545996831,"BeanContextServicesListener callback, propagates event to all currently registered listeners and BeanContextServices children, if this BeanContextService does not already implement this service itself. subclasses may override or envelope this method to implement their own propagation semantics.",;java.beans.beancontext.BeanContextChildSupport.serviceAvailable(BeanContextServiceAvailableEvent);java.beans.beancontext.BeanContextServicesSupport.serviceAvailable(BeanContextServiceAvailableEvent),;0.54;0.55
serviceRevoked,2,0.545996831,"BeanContextServicesListener callback, propagates event to all currently registered listeners and BeanContextServices children, if this BeanContextService does not already implement this service itself. subclasses may override or envelope this method to implement their own propagation semantics.",;java.beans.beancontext.BeanContextChildSupport.serviceRevoked(BeanContextServiceRevokedEvent);java.beans.beancontext.BeanContextServicesSupport.serviceRevoked(BeanContextServiceRevokedEvent),;0.54;0.55
set_elements,2,0.5,Sets the elements of a sequence. The length of the DynSequence is set to the length of value. The current position is set to zero if value has non-zero length and to -1 if value is a zero-length sequence.,;org.omg.DynamicAny._DynArrayStub.set_elements(Any[]);org.omg.DynamicAny._DynSequenceStub.set_elements(Any[]),;0.50;0.50
set_elements_as_dyn_any,2,0.5,Sets the elements of a sequence using DynAnys. The length of the DynSequence is set to the length of value. The current position is set to zero if value has non-zero length and to -1 if value is a zero-length sequence.,;org.omg.DynamicAny._DynArrayStub.set_elements_as_dyn_any(DynAny[]);org.omg.DynamicAny._DynSequenceStub.set_elements_as_dyn_any(DynAny[]),;0.50;0.50
set_members,2,0.861059009,"Initializes the value type's members from a sequence of NameValuePairs. The operation sets the current position to zero if the passed sequences has non-zero length. Otherwise, if an empty sequence is passed, the current position is set to -1. A null value type can be initialized to a non-null value type using this method. Members must appear in the NameValuePairs in the order in which they appear in the IDL specification of the value type as indicated by the DynValue's TypeCode or they must be empty strings. The operation makes no attempt to assign member values based on member names.",;org.omg.DynamicAny._DynStructStub.set_members(NameValuePair[]);org.omg.DynamicAny._DynValueStub.set_members(NameValuePair[]),;0.86;0.86
set_members_as_dyn_any,2,0.861059009,"Initializes the value type's members from a sequence of NameDynAnyPairs. The operation sets the current position to zero if the passed sequences has non-zero length. Otherwise, if an empty sequence is passed, the current position is set to -1. A null value type can be initialized to a non-null value type using this method. Members must appear in the NameDynAnyPairs in the order in which they appear in the IDL specification of the value type as indicated by the DynValue's TypeCode or they must be empty strings. The operation makes no attempt to assign member values based on member names.",;org.omg.DynamicAny._DynStructStub.set_members_as_dyn_any(NameDynAnyPair[]);org.omg.DynamicAny._DynValueStub.set_members_as_dyn_any(NameDynAnyPair[]),;0.86;0.86
set_parameters,2,0.904714052,"Allows the ORB implementation to be initialized with the given applet and parameters. This method, used in applets only, is implemented by subclass ORB implementations and called by the appropriate init method to pass in its parameters.",";org.omg.CORBA.ORB.set_parameters(String[],Properties);org.omg.CORBA.ORB.set_parameters(Applet,Properties)",;0.90;0.90
setAccelerator,2,0.5,"Sets the key combination which invokes the menu item's action listeners without navigating the menu hierarchy. It is the UI's responsibility to install the correct action. Note that when the keyboard accelerator is typed, it will work whether or not the menu is currently displayed.",;javax.swing.JMenu.setAccelerator(KeyStroke);javax.swing.JMenuItem.setAccelerator(KeyStroke),;0.50;0.50
setAccessible,2,0.697163686,"Set the accessible flag for this object to the indicated boolean value. A value of true indicates that the reflected object should suppress Java language access checking when it is used. A value of false indicates that the reflected object should enforce Java language access checks. First, if there is a security manager, its checkPermission method is called with a ReflectPermission(""suppressAccessChecks"") permission. A SecurityException is raised if flag is true but accessibility of this object may not be changed (for example, if this element object is a Constructor object for the class Class). A SecurityException is raised if this object is a Constructor object for the class java.lang.Class, and flag is true.",";java.lang.reflect.AccessibleObject.setAccessible(AccessibleObject[],boolean);java.lang.reflect.AccessibleObject.setAccessible(boolean)",;0.70;0.70
setAlignment,2,0.5,"Sets the alignment for this label to the specified alignment. Possible values are Label.LEFT, Label.RIGHT, and Label.CENTER.",";java.awt.Label.setAlignment(int);javax.swing.text.StyleConstants.setAlignment(MutableAttributeSet,int)",;0.50;0.00
setAngles,2,0.910181901,Sets the starting angle and angular extent of this arc using two sets of coordinates. The first set of coordinates is used to determine the angle of the starting point relative to the arc's center. The second set of coordinates is used to determine the angle of the end point relative to the arc's center. The arc will always be non-empty and extend counterclockwise from the first point around to the second point.,";java.awt.geom.Arc2D.setAngles(double,double,double,double);java.awt.geom.Arc2D.setAngles(Point2D,Point2D)",;0.91;0.91
setAnimationIndex,2,1,Sets the index of the current animation frame to the specified value and requests that the progress bar be repainted. Subclasses that don't use the default painting code might need to override this method to change the way that the repaint method is invoked.,;javax.swing.plaf.basic.BasicProgressBarUI.setAnimationIndex(int);javax.swing.plaf.synth.SynthProgressBarUI.setAnimationIndex(int),;1.00;1.00
setApproveButtonMnemonic,2,0.886275297,Sets the approve button's mnemonic using a character.,;javax.swing.JFileChooser.setApproveButtonMnemonic(int);javax.swing.JFileChooser.setApproveButtonMnemonic(char),;0.88;0.89
setArmed,2,0.5,"Identifies the menu item as ""armed"". If the mouse button is released while it is over this item, the menu's action event will fire. If the mouse button is released elsewhere, the event will not fire and the menu item will be disarmed.",;javax.swing.DefaultButtonModel.setArmed(boolean);javax.swing.JMenuItem.setArmed(boolean),;0.50;0.50
setBase,2,0.5,"Sets the base. All import statements that are relative, will be relative to base.",;javax.swing.text.html.HTMLDocument.setBase(URL);javax.swing.text.html.StyleSheet.setBase(URL),;0.50;0.50
setBaseFontSize,2,0.602248163,"Sets the base font size from the passed in String. The string can either identify a specific font size, with legal values between 1 and 7, or identify a relative font size such as +1 or -2.",;javax.swing.text.html.StyleSheet.setBaseFontSize(int);javax.swing.text.html.StyleSheet.setBaseFontSize(String),;0.54;0.60
setBigDecimal,2,0.616203998,Sets the designated parameter to the given java.lang.BigDecimal value. The driver converts this to an SQL NUMERIC value when it sends it to the database. The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this RowSet object's command when the method execute is called. Methods such as execute and populate must be provided in any class that extends this class and implements one or more of the standard JSR-114 RowSet interfaces. Note: JdbcRowSet does not require the populate method as it is undefined in this class.,";javax.sql.rowset.BaseRowSet.setBigDecimal(int,BigDecimal);javax.sql.rowset.BaseRowSet.setBigDecimal(String,BigDecimal)",;0.62;0.53
setBorderSelectionColor,2,1,Sets the color to use for the border.,;javax.swing.tree.DefaultTreeCellEditor.setBorderSelectionColor(Color);javax.swing.tree.DefaultTreeCellRenderer.setBorderSelectionColor(Color),;1.00;1.00
setBorderToNormal,2,0.5,"This implementation does nothing, because the rollover property of the JToolBar class is not used in the Synth Look and Feel.",;javax.swing.plaf.basic.BasicToolBarUI.setBorderToNormal(Component);javax.swing.plaf.synth.SynthToolBarUI.setBorderToNormal(Component),;0.50;0.50
setBorderToRollover,2,0.5,"This implementation does nothing, because the rollover property of the JToolBar class is not used in the Synth Look and Feel.",;javax.swing.plaf.basic.BasicToolBarUI.setBorderToRollover(Component);javax.swing.plaf.synth.SynthToolBarUI.setBorderToRollover(Component),;0.50;0.50
setCaretPosition,2,0.601533174,"Sets the position of the text insertion caret. The caret position is constrained to be between 0 and the last character of the text, inclusive. If the passed-in value is greater than this range, the value is set to the last character (or 0 if the TextComponent contains no text) and no error is returned. If the passed-in value is less than 0, an IllegalArgumentException is thrown.",;java.awt.TextComponent.setCaretPosition(int);javax.swing.text.JTextComponent.setCaretPosition(int),;0.60;0.60
setChar,2,0.549407557,"Sets the value of a field as a char on the specified object. This method is equivalent to set(obj, cObj), where cObj is a Character object and cObj.charValue() == c.",";java.lang.reflect.Array.setChar(Object,int,char);java.lang.reflect.Field.setChar(Object,char)",;0.54;0.55
setCharAt,2,1,"The character at the specified index is set to ch. This sequence is altered to represent a new character sequence that is identical to the old character sequence, except that it contains the character ch at position index. The index argument must be greater than or equal to 0, and less than the length of this sequence.",";java.lang.StringBuffer.setCharAt(int,char);java.lang.StringBuilder.setCharAt(int,char)",;1.00;1.00
setColumnCount,2,0.550976426,"Sets the number of columns in the model. If the new size is greater than the current size, new columns are added to the end of the model with null cell values. If the new size is less than the current size, all columns at index columnCount and greater are discarded.",;javax.sql.rowset.RowSetMetaDataImpl.setColumnCount(int);javax.swing.table.DefaultTableModel.setColumnCount(int),;0.53;0.55
setColumnIdentifiers,2,1,"Replaces the column identifiers in the model. If the number of newIdentifiers is greater than the current number of columns, new columns are added to the end of each row in the model. If the number of newIdentifiers is less than the current number of columns, all the extra columns at the end of a row are discarded.",;javax.swing.table.DefaultTableModel.setColumnIdentifiers(Vector);javax.swing.table.DefaultTableModel.setColumnIdentifiers(Object[]),;1.00;1.00
setColumnModel,2,0.817793838,Sets the column model for this table to newModel and registers for listener notifications from the new column model. Also sets the column model of the JTableHeader to columnModel.,;javax.swing.JTable.setColumnModel(TableColumnModel);javax.swing.table.JTableHeader.setColumnModel(TableColumnModel),;0.82;0.80
setColumnNumber,2,0.5,Set the column number for this locator (1-based).,;javax.xml.bind.helpers.ValidationEventLocatorImpl.setColumnNumber(int);org.xml.sax.helpers.LocatorImpl.setColumnNumber(int),;0.50;0.50
setColumnSelectionAllowed,2,0.5,Sets whether column selection is allowed. The default is false.,;javax.swing.JTable.setColumnSelectionAllowed(boolean);javax.swing.table.DefaultTableColumnModel.setColumnSelectionAllowed(boolean),;0.50;0.50
setComparator,2,0.5,Sets the Comparator which will be used to sort the Components in a focus traversal cycle.,";javax.swing.DefaultRowSorter.setComparator(int,Comparator&lt;?&gt;);javax.swing.SortingFocusTraversalPolicy.setComparator(Comparator&lt;?)",;0.50;0.50
setComponentZOrder,2,1,"Moves the specified component to the specified z-order index in the container. The z-order determines the order that components are painted; the component with the highest z-order paints first and the component with the lowest z-order paints last. Where components overlap, the component with the lower z-order paints over the component with the higher z-order. If the component is a child of some other container, it is removed from that container before being added to this container. The important difference between this method and java.awt.Container.add(Component, int) is that this method doesn't call removeNotify on the component while removing it from its previous container unless necessary and when allowed by the underlying native windowing system. This way, if the component has the keyboard focus, it maintains the focus when moved to the new position. This property is guaranteed to apply only to lightweight non-Container components. This method changes layout-related information, and therefore, invalidates the component hierarchy. Note: Not all platforms support changing the z-order of heavyweight components from one container into another without the call to removeNotify. There is no way to detect whether a platform supports this, so developers shouldn't make any assumptions.",";java.awt.Container.setComponentZOrder(Component,int);javax.swing.JDesktopPane.setComponentZOrder(Component,int)",;1.00;1.00
setContent,2,0.530503223,Sets the content of this attachment part to that of the given Object and sets the value of the Content-Type header to the given type. The type of the Object should correspond to the value given for the Content-Type. This depends on the particular set of DataContentHandler objects in use.,";javax.xml.soap.AttachmentPart.setContent(Object,String);javax.xml.soap.SOAPPart.setContent(Source)",;0.53;0.52
setContentHandler,2,0.5,Set the content event handler.,;org.xml.sax.helpers.ParserAdapter.setContentHandler(ContentHandler);org.xml.sax.helpers.XMLFilterImpl.setContentHandler(ContentHandler),;0.50;0.50
setContentId,2,0.5,Sets the value of the MIME header named "Content-Id" to the given String.,;javax.xml.soap.AttachmentPart.setContentId(String);javax.xml.soap.SOAPPart.setContentId(String),;0.50;0.50
setContentLocation,2,0.5,Sets the value of the MIME header "Content-Location" to the given String.,;javax.xml.soap.AttachmentPart.setContentLocation(String);javax.xml.soap.SOAPPart.setContentLocation(String),;0.50;0.50
setContentType,2,0.5,Sets the MIME header whose name is "Content-Type" with the given value.,;javax.swing.JEditorPane.setContentType(String);javax.xml.soap.AttachmentPart.setContentType(String),;0.50;0.50
setContinuousLayout,2,0.5,Turn continuous layout on/off.,;javax.swing.JSplitPane.setContinuousLayout(boolean);javax.swing.plaf.basic.BasicSplitPaneUI.setContinuousLayout(boolean),;0.50;0.50
setController,2,0.842372164,"Sets the IIOMetadataController to be used to provide settings for this IIOMetadata object when the activateController method is called, overriding any default controller. If the argument is null, no controller will be used, including any default. To restore the default, use setController(getDefaultController()). The default implementation sets the controller instance variable to the supplied value.",;javax.imageio.IIOParam.setController(IIOParamController);javax.imageio.metadata.IIOMetadata.setController(IIOMetadataController),;0.83;0.84
setCopies,2,0.554500485,Specifies the number of copies the application should render for jobs using these attributes. Not specifying this attribute is equivalent to specifying 1.,;java.awt.JobAttributes.setCopies(int);java.awt.print.PrinterJob.setCopies(int),;0.55;0.53
setCurrentManager,2,0.539060932,"Sets the current KeyboardFocusManager instance for the calling thread's context. If null is specified, then the current KeyboardFocusManager is replaced with a new instance of DefaultKeyboardFocusManager. If a SecurityManager is installed, the calling thread must be granted the AWTPermission ""replaceKeyboardFocusManager"" in order to replace the the current KeyboardFocusManager. If this permission is not granted, this method will throw a SecurityException, and the current KeyboardFocusManager will be unchanged.",;javax.swing.FocusManager.setCurrentManager(FocusManager);javax.swing.RepaintManager.setCurrentManager(RepaintManager),;0.54;0.52
setDaemon,2,0.5,"Changes the daemon status of this thread group. First, the checkAccess method of this thread group is called with no arguments; this may result in a security exception. A daemon thread group is automatically destroyed when its last thread is stopped or its last thread group is destroyed.",;java.lang.Thread.setDaemon(boolean);java.lang.ThreadGroup.setDaemon(boolean),;0.50;0.50
setDataVector,2,0.56695619,"Replaces the current dataVector instance variable with the new Vector of rows, dataVector. Each row is represented in dataVector as a Vector of Object values. columnIdentifiers are the names of the new columns. The first name in columnIdentifiers is mapped to column 0 in dataVector. Each row in dataVector is adjusted to match the number of columns in columnIdentifiers either by truncating the Vector if it is too long, or adding null values if it is too short. Note that passing in a null value for dataVector results in unspecified behavior, an possibly an exception.",";javax.swing.table.DefaultTableModel.setDataVector(Vector,Vector);javax.swing.table.DefaultTableModel.setDataVector(Object[][],Object[])",;0.57;0.54
setDefaultLocale,2,0.554725907,Sets the default locale used to initialize each JComponent's locale property upon creation. The initial value is the VM's default locale. The default locale has "AppContext" scope so that applets (and potentially multiple lightweight applications running in a single VM) can have their own setting. An applet can safely alter its default locale because it will have no affect on other applets (or the browser).,;javax.swing.JComponent.setDefaultLocale(Locale);javax.swing.UIDefaults.setDefaultLocale(Locale),;0.55;0.55
setDefaultLookAndFeelDecorated,2,0.904998691,"Provides a hint as to whether or not newly created JFrames should have their Window decorations (such as borders, widgets to close the window, title...) provided by the current look and feel. If defaultLookAndFeelDecorated is true, the current LookAndFeel supports providing window decorations, and the current window manager supports undecorated windows, then newly created JFrames will have their Window decorations provided by the current LookAndFeel. Otherwise, newly created JFrames will have their Window decorations provided by the current window manager. You can get the same effect on a single JFrame by doing the following: JFrame frame = new JFrame(); frame.setUndecorated(true); frame.getRootPane().setWindowDecorationStyle(JRootPane.FRAME);",;javax.swing.JDialog.setDefaultLookAndFeelDecorated(boolean);javax.swing.JFrame.setDefaultLookAndFeelDecorated(boolean),;0.90;0.90
setDefaultRenderer,2,0.568259486,"Sets a default cell renderer to be used if no renderer has been set in a TableColumn. If renderer is null, removes the default renderer for this column class.",";javax.swing.JTable.setDefaultRenderer(Class&lt;?&gt;,TableCellRenderer);javax.swing.table.JTableHeader.setDefaultRenderer(TableCellRenderer)",;0.57;0.55
setDelay,2,0.5,"Sets the Timer's between-event delay, the number of milliseconds between successive action events. This does not affect the initial delay property, which can be set by the setInitialDelay method.",;javax.swing.JMenu.setDelay(int);javax.swing.Timer.setDelay(int),;0.50;0.50
setDesignTime,2,0.5,Sets the new design time value for this BeanContext.,;java.beans.Beans.setDesignTime(boolean);java.beans.beancontext.BeanContextSupport.setDesignTime(boolean),;0.50;0.50
setDestination,2,0.5,"Supplies a BufferedImage to be used as the destination for decoded pixel data. The currently set image will be written to by the read, readAll, and readRaster methods, and a reference to it will be returned by those methods. Pixel data from the aforementioned methods will be written starting at the offset specified by getDestinationOffset. If destination is null, a newly-created BufferedImage will be returned by those methods. At the time of reading, the image is checked to verify that its ColorModel and SampleModel correspond to one of the ImageTypeSpecifiers returned from the ImageReader's getImageTypes method. If it does not, the reader will throw an IIOException.",;java.awt.JobAttributes.setDestination(JobAttributes.DestinationType);javax.imageio.ImageReadParam.setDestination(BufferedImage),;0.50;0.50
setDestinationType,2,0.5,Description copied from class:IIOParam,;javax.imageio.IIOParam.setDestinationType(ImageTypeSpecifier);javax.imageio.ImageReadParam.setDestinationType(ImageTypeSpecifier),;0.50;0.50
setDifferenceMode,2,1,Sets the difference mode flag value common to all observed MBeans.,;javax.management.monitor.CounterMonitor.setDifferenceMode(boolean);javax.management.monitor.GaugeMonitor.setDifferenceMode(boolean),;1.00;1.00
setDirection,2,0.5,Sets the direction of the arrow.,;javax.swing.plaf.basic.BasicArrowButton.setDirection(int);javax.swing.text.DefaultStyledDocument.ElementSpec.setDirection(short),;0.50;0.00
setDirectory,2,0.5,Property to remember the directory that is currently selected in the UI. This is normally called by the UI on a selection event.,;java.awt.FileDialog.setDirectory(String);javax.swing.plaf.basic.BasicFileChooserUI.setDirectory(File),;0.50;0.50
setDirectorySelected,2,1,Property to remember whether a directory is currently selected in the UI. This is normally called by the UI on a selection event.,;javax.swing.plaf.basic.BasicFileChooserUI.setDirectorySelected(boolean);javax.swing.plaf.metal.MetalFileChooserUI.setDirectorySelected(boolean),;1.00;1.00
setDisabledIcon,2,0.5,Set the icon to be displayed if this JLabel is "disabled" (JLabel.setEnabled(false)). The default value of this property is null.,;javax.swing.AbstractButton.setDisabledIcon(Icon);javax.swing.JLabel.setDisabledIcon(Icon),;0.50;0.50
setDisplayedMnemonic,2,0.5,Specifies the displayedMnemonic as a char value.,;javax.swing.JLabel.setDisplayedMnemonic(int);javax.swing.JLabel.setDisplayedMnemonic(char),;0.50;0.50
setDisplayedMnemonicIndex,2,0.99160098,"Provides a hint to the look and feel as to which character in the text should be decorated to represent the mnemonic. Not all look and feels may support this. A value of -1 indicates either there is no mnemonic, the mnemonic character is not contained in the string, or the developer does not wish the mnemonic to be displayed. The value of this is updated as the properties relating to the mnemonic change (such as the mnemonic itself, the text...). You should only ever have to call this if you do not wish the default character to be underlined. For example, if the text was 'Save As', with a mnemonic of 'a', and you wanted the 'A' to be decorated, as 'Save As', you would have to invoke setDisplayedMnemonicIndex(5) after invoking setDisplayedMnemonic(KeyEvent.VK_A).",;javax.swing.AbstractButton.setDisplayedMnemonicIndex(int);javax.swing.JLabel.setDisplayedMnemonicIndex(int),;0.99;0.99
setDividerSize,2,0.606399414,"Sets the size of the divider to newSize. That is the width if the splitpane is HORIZONTAL_SPLIT, or the height of VERTICAL_SPLIT.",;javax.swing.JSplitPane.setDividerSize(int);javax.swing.plaf.basic.BasicSplitPaneDivider.setDividerSize(int),;0.53;0.61
setDoubleBuffered,2,1,"Sets whether this component should use a buffer to paint. If set to true, all the drawing from this component will be done in an offscreen painting buffer. The offscreen painting buffer will the be copied onto the screen. If a Component is buffered and one of its ancestor is also buffered, the ancestor buffer will be used.",;javax.swing.JComponent.setDoubleBuffered(boolean);javax.swing.JRootPane.setDoubleBuffered(boolean),;1.00;1.00
setEchoChar,2,0.530598572,"Sets the echo character for this text field. An echo character is useful for text fields where user input should not be echoed to the screen, as in the case of a text field for entering a password. Setting echoChar = 0 allows user input to be echoed to the screen again. A Java platform implementation may support only a limited, non-empty set of echo characters. Attempts to set an unsupported echo character will cause the default echo character to be used instead. Subsequent calls to getEchoChar() will return the echo character originally requested. This might or might not be identical to the echo character actually used by the TextField implementation.",;java.awt.TextField.setEchoChar(char);javax.swing.JPasswordField.setEchoChar(char),;0.53;0.52
setEditor,2,0.5,Changes the JComponent that displays the current value of the SpinnerModel. It is the responsibility of this method to disconnect the old editor from the model and to connect the new editor. This may mean removing the old editors ChangeListener from the model or the spinner itself and adding one for the new editor.,;javax.swing.JComboBox.setEditor(ComboBoxEditor);javax.swing.JSpinner.setEditor(JComponent),;0.50;0.50
setEditorKit,2,0.597834762,"Sets the currently installed kit for handling content. This is the bound property that establishes the content type of the editor. Any old kit is first deinstalled, then if kit is non-null, the new kit is installed, and a default document created for it. A PropertyChange event (""editorKit"") is always fired when setEditorKit is called. NOTE: This has the side effect of changing the model, because the EditorKit is the source of how a particular type of content is modeled. This method will cause setDocument to be called on behalf of the caller to ensure integrity of the internal state.",;javax.swing.JEditorPane.setEditorKit(EditorKit);javax.swing.JTextPane.setEditorKit(EditorKit),;0.60;0.51
setElementAt,2,0.604802894,"Sets the component at the specified index of this vector to be the specified object. The previous component at that position is discarded. The index must be a value greater than or equal to 0 and less than the current size of the vector. This method is identical in functionality to the set(int, E) method (which is part of the List interface). Note that the set method reverses the order of the parameters, to more closely match array usage. Note also that the set method returns the old value that was stored at the specified position.",";java.util.Vector.setElementAt(E,int);javax.swing.DefaultListModel.setElementAt(E,int)",;0.60;0.59
setError,2,0.804405322,Indicates that an error has occurred. This method will cause subsequent invocations of checkError() to return true until clearError() is invoked.,;java.io.PrintStream.setError();java.io.PrintWriter.setError(),;0.80;0.80
setErrorListener,2,0.570309837,"Set the error event listener for the TransformerFactory, which is used for the processing of transformation instructions, and not for the transformation itself. An IllegalArgumentException is thrown if the ErrorListener listener is null.",;javax.xml.transform.Transformer.setErrorListener(ErrorListener);javax.xml.transform.TransformerFactory.setErrorListener(ErrorListener),;0.53;0.57
setExceptionListener,2,1,Sets the exception handler for this stream to exceptionListener. The exception handler is notified when this stream catches recoverable exceptions.,;java.beans.Encoder.setExceptionListener(ExceptionListener);java.beans.XMLDecoder.setExceptionListener(ExceptionListener),;1.00;1.00
setExecutable,2,0.770717096,"A convenience method to set the owner's execute permission for this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to execute files that are not marked executable. An invocation of this method of the form file.setExcutable(arg) behaves in exactly the same way as the invocation file.setExecutable(arg, true)",";java.io.File.setExecutable(boolean,boolean);java.io.File.setExecutable(boolean)",;0.77;0.77
setExtent,2,0.5,"Sets the size of the range ""covered"" by the knob. Most look and feel implementations will change the value by this amount if the user clicks on either side of the knob. This method just forwards the new extent value to the model. The data model (an instance of BoundedRangeModel) handles any mathematical issues arising from assigning faulty values. See the BoundedRangeModel documentation for details. If the new extent value is different from the previous extent value, all change listeners are notified.",;javax.swing.DefaultBoundedRangeModel.setExtent(int);javax.swing.JSlider.setExtent(int),;0.50;0.50
setField,2,0.5,Description copied from interface:Descriptor,";javax.management.ImmutableDescriptor.setField(String,Object);javax.management.modelmbean.DescriptorSupport.setField(String,Object)",;0.50;0.50
setFilter,2,0.619527854,Set a Filter to control output on this Handler. For each call of publish the Handler will call this Filter (if it is non-null) to check if the LogRecord should be published or discarded.,;java.util.logging.Handler.setFilter(Filter);java.util.logging.Logger.setFilter(Filter),;0.62;0.62
setFirstLineIndent,2,0.5,Sets the first line indent.,";javax.swing.text.ParagraphView.setFirstLineIndent(float);javax.swing.text.StyleConstants.setFirstLineIndent(MutableAttributeSet,float)",;0.50;0.50
setFixedLengthStreamingMode,2,0.929641026,"This method is used to enable streaming of a HTTP request body without internal buffering, when the content length is known in advance. An exception will be thrown if the application attempts to write more data than the indicated content-length, or if the application closes the OutputStream before writing the indicated amount. When output streaming is enabled, authentication and redirection cannot be handled automatically. A HttpRetryException will be thrown when reading the response if authentication or redirection are required. This exception can be queried for the details of the error. This method must be called before the URLConnection is connected. The content length set by invoking this method takes precedence over any value set by setFixedLengthStreamingMode(int).",;java.net.HttpURLConnection.setFixedLengthStreamingMode(int);java.net.HttpURLConnection.setFixedLengthStreamingMode(long),;0.93;0.93
setFlags,2,0.903537887,"Sets the flags component of this builder. On return, the flags component of this builder is a copy of the given set.",;java.nio.file.attribute.AclEntry.Builder.setFlags(Set&lt;AclEntryFlag&gt;);java.nio.file.attribute.AclEntry.Builder.setFlags(AclEntryFlag...),;0.90;0.90
setFormatter,2,0.5,"Sets the current AbstractFormatter. You should not normally invoke this, instead set the AbstractFormatterFactory or set the value. JFormattedTextField will invoke this as the state of the JFormattedTextField changes and requires the value to be reset. JFormattedTextField passes in the AbstractFormatter obtained from the AbstractFormatterFactory. This is a JavaBeans bound property.",;java.util.logging.Handler.setFormatter(Formatter);javax.swing.JFormattedTextField.setFormatter(JFormattedTextField.AbstractFormatter),;0.50;0.50
setFrameFromCenter,2,0.847600432,Sets the framing rectangle of this Shape based on a specified center Point2D and corner Point2D. The framing rectangle is used by the subclasses of RectangularShape to define their geometry.,";java.awt.geom.RectangularShape.setFrameFromCenter(double,double,double,double);java.awt.geom.RectangularShape.setFrameFromCenter(Point2D,Point2D)",;0.85;0.85
setFrameFromDiagonal,2,0.913616087,Sets the diagonal of the framing rectangle of this Shape based on two specified Point2D objects. The framing rectangle is used by the subclasses of RectangularShape to define their geometry.,";java.awt.geom.RectangularShape.setFrameFromDiagonal(double,double,double,double);java.awt.geom.RectangularShape.setFrameFromDiagonal(Point2D,Point2D)",;0.91;0.91
setGroupingUsed,2,1,Set whether or not grouping will be used in this format.,;java.text.DecimalFormat.setGroupingUsed(boolean);java.text.NumberFormat.setGroupingUsed(boolean),;1.00;1.00
setHandler,2,0.5,JAX-WS runtime sets its handler during Endpoint.publish(HttpContext) to handle HTTP requests for this context. Container or its extensions use this handler to process the requests.,;javax.xml.transform.sax.SAXResult.setHandler(ContentHandler);javax.xml.ws.spi.http.HttpContext.setHandler(HttpHandler),;0.50;0.50
setHandlerResolver,2,1,"Sets the HandlerResolver for this Service instance. The handler resolver, if present, will be called once for each proxy or dispatch instance that is created, and the handler chain returned by the resolver will be set on the instance.",;javax.xml.ws.Service.setHandlerResolver(HandlerResolver);javax.xml.ws.spi.ServiceDelegate.setHandlerResolver(HandlerResolver),;1.00;1.00
setHandshakeApplicationProtocolSelector,2,0.9614184,"Registers a callback function that selects an application protocol value for a SSL/TLS/DTLS handshake. The function overrides any values supplied using SSLParameters.setApplicationProtocols and it supports the following type parameters: SSLSocket The function's first argument allows the current SSLSocket to be inspected, including the handshake session and configuration settings. List&lt;String&gt; The function's second argument lists the application protocol names advertised by the TLS peer. String The function's result is an application protocol name, or null to indicate that none of the advertised names are acceptable. If the return value is an empty String then application protocol indications will not be used. If the return value is null (no value chosen) or is a value that was not advertised by the peer, the underlying protocol will determine what action to take. (For example, ALPN will send a ""no_application_protocol"" alert and terminate the connection.) For example, the following call registers a callback function that examines the TLS handshake parameters and selects an application protocol name: serverSocket.setHandshakeApplicationProtocolSelector( (serverSocket, clientProtocols) -&gt; { SSLSession session = serverSocket.getHandshakeSession(); return chooseApplicationProtocol( serverSocket, clientProtocols, session.getProtocol(), session.getCipherSuite()); });",";javax.net.ssl.SSLEngine.setHandshakeApplicationProtocolSelector(BiFunction&lt;SSLEngine,List&lt;String&gt;,String&gt;);javax.net.ssl.SSLSocket.setHandshakeApplicationProtocolSelector(BiFunction&lt;SSLSocket,List&lt;String&gt;,String&gt;)",;0.96;0.96
setHelpMenu,2,0.5,Sets the help menu that appears when the user selects the "help" option in the menu bar. This method is not yet implemented and will throw an exception.,;java.awt.MenuBar.setHelpMenu(Menu);javax.swing.JMenuBar.setHelpMenu(JMenu),;0.50;0.50
setHonorsVisibility,2,0.652761402,"Sets whether the component's visibility is considered for sizing and positioning. A value of Boolean.TRUE indicates that if component is not visible it should not be treated as part of the layout. A value of false indicates that component is positioned and sized regardless of it's visibility. A value of null indicates the value specified by the single argument method setHonorsVisibility should be used. If component is not a child of the Container this GroupLayout is managing, it will be added to the Container.",";javax.swing.GroupLayout.setHonorsVisibility(boolean);javax.swing.GroupLayout.setHonorsVisibility(Component,Boolean)",;0.65;0.65
setHorizontalAlignment,2,0.5,Sets the alignment of the label's contents along the X axis. This is a JavaBeans bound property.,;javax.swing.AbstractButton.setHorizontalAlignment(int);javax.swing.JLabel.setHorizontalAlignment(int),;0.50;0.50
setHorizontalTextPosition,2,0.745010123,Sets the horizontal position of the text relative to the icon.,;javax.swing.AbstractButton.setHorizontalTextPosition(int);javax.swing.JLabel.setHorizontalTextPosition(int),;0.75;0.74
setHostnameVerifier,2,0.5,Sets the HostnameVerifier for this instance. New instances of this class inherit the default static hostname verifier set by setDefaultHostnameVerifier. Calls to this method replace this object's HostnameVerifier.,;javax.naming.ldap.StartTlsResponse.setHostnameVerifier(HostnameVerifier);javax.net.ssl.HttpsURLConnection.setHostnameVerifier(HostnameVerifier),;0.50;0.50
setHours,2,0.5,"Deprecated.As of JDK version 1.1, replaced by Calendar.set(Calendar.HOUR_OF_DAY, int hours).",;java.sql.Date.setHours(int);java.util.Date.setHours(int),;0.00;0.50
setHumanPresentableName,2,0.556846531,Sets the human presentable name for the data format that this DataFlavor represents. This name would be localized for different countries.,;java.awt.datatransfer.DataFlavor.setHumanPresentableName(String);javax.activation.ActivationDataFlavor.setHumanPresentableName(String),;0.56;0.51
setIconTextGap,2,1,"If both the icon and text properties are set, this property defines the space between them. The default value of this property is 4 pixels. This is a JavaBeans bound property.",;javax.swing.AbstractButton.setIconTextGap(int);javax.swing.JLabel.setIconTextGap(int),;1.00;1.00
setIdAttributeNS,2,0.5,Registers the element's attribute specified by the namespace URI and local name to be of type ID. The attribute must have a non-empty value. This implementation uses an internal HashMap to map the attribute's value to the specified element.,";javax.imageio.metadata.IIOMetadataNode.setIdAttributeNS(String,String,boolean);javax.xml.crypto.dom.DOMCryptoContext.setIdAttributeNS(Element,String,String)",;0.50;0.50
setImage,2,0.5,Sets the image displayed by this icon.,;java.awt.TrayIcon.setImage(Image);javax.swing.ImageIcon.setImage(Image),;0.50;0.50
setImplicitDownCycleTraversal,2,0.95940954,"Sets whether this SortingFocusTraversalPolicy transfers focus down-cycle implicitly. If true, during normal focus traversal, the Component traversed after a focus cycle root will be the focus- cycle-root's default Component to focus. If false, the next Component in the focus traversal cycle rooted at the specified focus cycle root will be traversed instead. The default value for this property is true.",;java.awt.ContainerOrderFocusTraversalPolicy.setImplicitDownCycleTraversal(boolean);javax.swing.SortingFocusTraversalPolicy.setImplicitDownCycleTraversal(boolean),;0.96;0.96
setInitialDelay,2,0.5,Specifies the initial delay value.,;javax.swing.Timer.setInitialDelay(int);javax.swing.ToolTipManager.setInitialDelay(int),;0.50;0.50
setInstant,2,0.623538222,Sets the instant parameter to the instant value given by a Date. This method is equivalent to a call to setInstant(instant.getTime()).,;java.util.Calendar.Builder.setInstant(long);java.util.Calendar.Builder.setInstant(Date),;0.62;0.62
setKeyEntry,2,0.789336533,"Assigns the given key (that has already been protected) to the given alias. If the protected key is of type java.security.PrivateKey, it must be accompanied by a certificate chain certifying the corresponding public key. If the underlying keystore implementation is of type jks, key must be encoded as an EncryptedPrivateKeyInfo as defined in the PKCS #8 standard. If the given alias already exists, the keystore information associated with it is overridden by the given key (and possibly certificate chain).",";java.security.KeyStore.setKeyEntry(String,Key,char[],Certificate[]);java.security.KeyStore.setKeyEntry(String,byte[],Certificate[])",;0.78;0.79
setLargeModel,2,0.5,"Updates the componentListener, if necessary.",;javax.swing.JTree.setLargeModel(boolean);javax.swing.plaf.basic.BasicTreeUI.setLargeModel(boolean),;0.50;0.50
setLastModifiedTime,2,0.5,"Sets the last modification time of the entry. When output to a ZIP file or ZIP file formatted output stream the last modification time set by this method will be stored into zip file entry's date and time fields in standard MS-DOS date and time format), and the extended timestamp fields in optional extra data in UTC time.",";java.nio.file.Files.setLastModifiedTime(Path,FileTime);java.util.zip.ZipEntry.setLastModifiedTime(FileTime)",;0.50;0.50
setLineSpacing,2,0.5,Sets the line spacing.,";javax.swing.text.ParagraphView.setLineSpacing(float);javax.swing.text.StyleConstants.setLineSpacing(MutableAttributeSet,float)",;0.50;0.00
setListData,2,0.897965634,"Constructs a read-only ListModel from a Vector and calls setModel with this model. Attempts to pass a null value to this method results in undefined behavior and, most likely, exceptions. The created model references the given Vector directly. Attempts to modify the Vector after invoking this method results in undefined behavior.",;javax.swing.JList.setListData(E[]);javax.swing.JList.setListData(Vector&lt;?),;0.90;0.90
setListener,2,0.834370152,Description copied from interface:Unmarshaller,;javax.xml.bind.helpers.AbstractMarshallerImpl.setListener(Marshaller.Listener);javax.xml.bind.helpers.AbstractUnmarshallerImpl.setListener(Unmarshaller.Listener),;0.83;0.83
setLogger,2,0.941036414,"Sets the logging object that is used by SyncProvider implementations provided by the SyncFactory SPI. All SyncProvider implementations can log their events to this object and the application can retrieve a handle to this object using the getLogger method. This method checks to see that there is an SQLPermission object which grants the permission setSyncFactory before allowing the method to succeed. If a SecurityManager exists and its checkPermission method denies calling setLogger, this method throws a java.lang.SecurityException.",";javax.sql.rowset.spi.SyncFactory.setLogger(Logger);javax.sql.rowset.spi.SyncFactory.setLogger(Logger,Level)",;0.94;0.94
setLogicalStyle,2,0.826488212,"Sets the logical style to use for the paragraph at the given position. If attributes aren't explicitly set for character and paragraph attributes they will resolve through the logical style assigned to the paragraph, which in turn may resolve through some hierarchy completely independent of the element hierarchy in the document. This method is thread safe, although most Swing methods are not. Please see Concurrency in Swing for more information.",";javax.swing.JTextPane.setLogicalStyle(Style);javax.swing.text.DefaultStyledDocument.setLogicalStyle(int,Style)",;0.81;0.83
setLogStream,2,0.5,Sets the stream to which the DebugGraphics logs drawing operations.,;java.sql.DriverManager.setLogStream(PrintStream);javax.swing.DebugGraphics.setLogStream(PrintStream),;0.00;0.50
setLookAndFeel,2,0.5,"Loads the LookAndFeel specified by the given class name, using the current thread's context class loader, and passes it to setLookAndFeel(LookAndFeel).",;javax.swing.UIManager.setLookAndFeel(LookAndFeel);javax.swing.UIManager.setLookAndFeel(String),;0.50;0.50
setMaximumFractionDigits,2,0.659781706,"Sets the maximum number of digits allowed in the fraction portion of a number. maximumFractionDigits must be 閳 minimumFractionDigits. If the new value for maximumFractionDigits is less than the current value of minimumFractionDigits, then minimumFractionDigits will also be set to the new value.",;java.text.DecimalFormat.setMaximumFractionDigits(int);java.text.NumberFormat.setMaximumFractionDigits(int),;0.66;0.66
setMaximumIntegerDigits,2,0.659781706,"Sets the maximum number of digits allowed in the integer portion of a number. maximumIntegerDigits must be 閳 minimumIntegerDigits. If the new value for maximumIntegerDigits is less than the current value of minimumIntegerDigits, then minimumIntegerDigits will also be set to the new value.",;java.text.DecimalFormat.setMaximumIntegerDigits(int);java.text.NumberFormat.setMaximumIntegerDigits(int),;0.66;0.66
setMaximumSize,2,0.84073203,Sets the maximum size of this component to a constant value. Subsequent calls to getMaximumSize will always return this value; the component's UI will not be asked to compute it. Setting the maximum size to null restores the default behavior.,;java.awt.Component.setMaximumSize(Dimension);javax.swing.JComponent.setMaximumSize(Dimension),;0.83;0.84
setMBeanServerForwarder,2,1,Description copied from interface:JMXConnectorServerMBean,;javax.management.remote.JMXConnectorServer.setMBeanServerForwarder(MBeanServerForwarder);javax.management.remote.rmi.RMIConnectorServer.setMBeanServerForwarder(MBeanServerForwarder),;1.00;1.00
setMessageDigest,2,1,Associates the specified message digest with this stream.,;java.security.DigestInputStream.setMessageDigest(MessageDigest);java.security.DigestOutputStream.setMessageDigest(MessageDigest),;1.00;1.00
setMetadata,2,0.5,Sets the metadata for this endpoint.,;javax.imageio.IIOImage.setMetadata(IIOMetadata);javax.xml.ws.Endpoint.setMetadata(List&lt;Source&gt;),;0.50;0.50
setMethod,2,0.5,"Sets the default compression method for subsequent entries. This default will be used whenever the compression method is not specified for an individual ZIP file entry, and is initially set to DEFLATED.",;java.util.zip.ZipEntry.setMethod(int);java.util.zip.ZipOutputStream.setMethod(int),;0.50;0.50
setMimeHeader,2,0.627597664,"Changes the first header entry that matches the given header name so that its value is the given value, adding a new header with the given name and value if no existing header is a match. If there is a match, this method clears all existing values for the first header that matches and sets the given value instead. If more than one header has the given name, this method removes all of the matching headers after the first one. Note that RFC822 headers can contain only US-ASCII characters.",";javax.xml.soap.AttachmentPart.setMimeHeader(String,String);javax.xml.soap.SOAPPart.setMimeHeader(String,String)",;0.59;0.63
setMinimumFractionDigits,2,0.663024902,"Sets the minimum number of digits allowed in the fraction portion of a number. For formatting numbers other than BigInteger and BigDecimal objects, the lower of newValue and 340 is used. Negative input values are replaced with 0.",;java.text.DecimalFormat.setMinimumFractionDigits(int);java.text.NumberFormat.setMinimumFractionDigits(int),;0.66;0.66
setMinimumIntegerDigits,2,0.663024902,"Sets the minimum number of digits allowed in the integer portion of a number. For formatting numbers other than BigInteger and BigDecimal objects, the lower of newValue and 309 is used. Negative input values are replaced with 0.",;java.text.DecimalFormat.setMinimumIntegerDigits(int);java.text.NumberFormat.setMinimumIntegerDigits(int),;0.66;0.66
setMinutes,2,0.5,"Deprecated.As of JDK version 1.1, replaced by Calendar.set(Calendar.MINUTE, int minutes).",;java.sql.Date.setMinutes(int);java.util.Date.setMinutes(int),;0.00;0.50
setMultipleMode,2,0.5,"Sets the flag that determines whether this list allows multiple selections. When the selection mode is changed from multiple-selection to single-selection, the selected items change as follows: If a selected item has the location cursor, only that item will remain selected. If no selected item has the location cursor, all items will be deselected.",;java.awt.FileDialog.setMultipleMode(boolean);java.awt.List.setMultipleMode(boolean),;0.50;0.50
setNamespaceAware,2,1,Specifies that the parser produced by this code will provide support for XML namespaces. By default the value of this is set to false.,;javax.xml.parsers.DocumentBuilderFactory.setNamespaceAware(boolean);javax.xml.parsers.SAXParserFactory.setNamespaceAware(boolean),;1.00;1.00
setNextSibling,2,0.5,"Set the child node before which the result nodes will be inserted.Use nextSibling to specify the child node before which the result nodes should be inserted. If nextSibling is not a descendant of node, then an IllegalArgumentException is thrown. If node is null and nextSibling is not null, then an IllegalStateException is thrown. If nextSibling is null, then the behavior is the same as calling DOMResult(Node node), i.e. append the result nodes as the last child of the specified node.",;javax.xml.crypto.dsig.dom.DOMSignContext.setNextSibling(Node);javax.xml.transform.dom.DOMResult.setNextSibling(Node),;0.50;0.50
setNodeDimensions,2,0.732289111,Sets the renderer that is responsible for drawing nodes in the tree and which is therefore responsible for calculating the dimensions of individual nodes.,;javax.swing.tree.AbstractLayoutCache.setNodeDimensions(AbstractLayoutCache.NodeDimensions);javax.swing.tree.VariableHeightLayoutCache.setNodeDimensions(AbstractLayoutCache.NodeDimensions),;0.73;0.68
setNonContinuousLayoutDivider,2,0.547992621,Sets the divider to use when the splitPane is configured to not continuously layout. This divider will only be used during a dragging session. It is recommended that the passed in component be a heavy weight.,";javax.swing.plaf.basic.BasicSplitPaneUI.setNonContinuousLayoutDivider(Component);javax.swing.plaf.basic.BasicSplitPaneUI.setNonContinuousLayoutDivider(Component,boolean)",;0.55;0.50
setNString,2,0.729113291,Sets the designated parameter to the given String object. The driver converts this to a SQL NCHAR or NVARCHAR or LONGNVARCHAR value (depending on the argument's size relative to the driver's limits on NVARCHAR values) when it sends it to the database.,";javax.sql.rowset.BaseRowSet.setNString(int,String);javax.sql.rowset.BaseRowSet.setNString(String,String)",;0.73;0.67
setOptions,2,0.5,"Sets the options this pane displays. If an element in newOptions is a Component it is added directly to the pane, otherwise a button is created for the element.",;java.security.cert.PKIXRevocationChecker.setOptions(Set&lt;PKIXRevocationChecker.Option&gt;);javax.swing.JOptionPane.setOptions(Object[]),;0.50;0.50
setOrientationRequested,2,0.694542909,Specifies the print orientation for pages using these attributes. Specifying 3 denotes portrait. Specifying 4 denotes landscape. Specifying any other value will generate an IllegalArgumentException. Not specifying the property is equivalent to calling setOrientationRequested(OrientationRequestedType.PORTRAIT).,;java.awt.PageAttributes.setOrientationRequested(PageAttributes.OrientationRequestedType);java.awt.PageAttributes.setOrientationRequested(int),;0.66;0.69
setPaintMode,2,0.5,Sets the paint mode of this graphics context to overwrite the destination with this graphics context's current color. This sets the logical pixel operation function to the paint or overwrite mode. All subsequent rendering operations will overwrite the destination with the current color.,;java.awt.Graphics.setPaintMode();javax.swing.DebugGraphics.setPaintMode(),;0.50;0.00
setParameters,2,0.5,Set the parameters to the log message.,;java.awt.image.renderable.ParameterBlock.setParameters(Vector&lt;Object&gt;);java.util.logging.LogRecord.setParameters(Object[]),;0.50;0.50
setPassword,2,0.5,"Sets the password used to create a database connection for this RowSet object to the given String object. Because the password property is not serialized, it is set at run time before calling the method execute.",;javax.security.auth.callback.PasswordCallback.setPassword(char[]);javax.sql.rowset.BaseRowSet.setPassword(String),;0.50;0.50
setPermissions,2,0.903537887,"Sets the permissions component of this builder. On return, the permissions component of this builder is a copy of the given set.",;java.nio.file.attribute.AclEntry.Builder.setPermissions(Set&lt;AclEntryPermission&gt;);java.nio.file.attribute.AclEntry.Builder.setPermissions(AclEntryPermission...),;0.90;0.90
setPopupSize,2,0.717099968,"Sets the size of the Popup window to the specified width and height. This is equivalent to setPreferredSize(new Dimension(width, height)).",";javax.swing.JPopupMenu.setPopupSize(Dimension);javax.swing.JPopupMenu.setPopupSize(int,int)",;0.71;0.72
setPosition,2,0.5,"Moves the component to position within its current layer, where 0 is the topmost position within the layer and -1 is the bottommost position. Note: Position numbering is defined by java.awt.Container, and is the opposite of layer numbering. Lower position numbers are closer to the top (0 is topmost), and higher position numbers are closer to the bottom.",";java.awt.font.LineBreakMeasurer.setPosition(int);javax.swing.JLayeredPane.setPosition(Component,int)",;0.50;0.50
setPreferredSize,2,0.624099745,Sets the preferred size of this component to a constant value. Subsequent calls to getPreferredSize will always return this value. Setting the preferred size to null restores the default behavior.,;java.awt.Component.setPreferredSize(Dimension);javax.swing.JComponent.setPreferredSize(Dimension),;0.62;0.62
setPressed,2,0.5,Sets the pressed state of the toggle button.,;javax.swing.DefaultButtonModel.setPressed(boolean);javax.swing.JToggleButton.ToggleButtonModel.setPressed(boolean),;0.50;0.50
setPrintable,2,0.868844849,"Calls painter to render the pages. The pages in the document to be printed by this PrinterJob are rendered by the Printable object, painter. The PageFormat for each page is the default page format.",";java.awt.print.PrinterJob.setPrintable(Printable);java.awt.print.PrinterJob.setPrintable(Printable,PageFormat)",;0.87;0.87
setPrinterResolution,2,0.622229095,Specifies the desired print resolution for pages using these attributes. The actual resolution will be determined by the limitations of the implementation and the target printer. Index 0 of the array specifies the cross feed direction resolution (typically the horizontal resolution). Index 1 of the array specifies the feed direction resolution (typically the vertical resolution). Index 2 of the array specifies whether the resolutions are in dots per inch or dots per centimeter. 3 denotes dots per inch. 4 denotes dots per centimeter. Note that the 1.1 printing implementation (Toolkit.getPrintJob) requires that the feed and cross feed resolutions be the same. Not specifying the property is equivalent to calling setPrinterResolution(72).,;java.awt.PageAttributes.setPrinterResolution(int[]);java.awt.PageAttributes.setPrinterResolution(int),;0.62;0.58
setPrintQuality,2,0.674312599,Specifies the print quality for pages using these attributes. Specifying 3 denotes draft. Specifying 4 denotes normal. Specifying 5 denotes high. Specifying any other value will generate an IllegalArgumentException. Not specifying the property is equivalent to calling setPrintQuality(PrintQualityType.NORMAL).,;java.awt.PageAttributes.setPrintQuality(PageAttributes.PrintQualityType);java.awt.PageAttributes.setPrintQuality(int),;0.63;0.67
setProgress,2,0.5,"Sets the progress bound property. The value should be from 0 to 100. Because PropertyChangeListeners are notified asynchronously on the Event Dispatch Thread multiple invocations to the setProgress method might occur before any PropertyChangeListeners are invoked. For performance purposes all these invocations are coalesced into one invocation with the last invocation argument only. For example, the following invokations: setProgress(1); setProgress(2); setProgress(3); might result in a single PropertyChangeListener notification with the value 3.",;javax.swing.ProgressMonitor.setProgress(int);javax.swing.SwingWorker.setProgress(int),;0.50;0.50
setRawOffset,2,0.6552051,"Sets the base time zone offset to GMT. This is the offset to add to UTC to get local time. If an underlying TimeZone implementation subclass supports historical GMT offset changes, the specified GMT offset is set as the latest GMT offset and the difference from the known latest GMT offset value is used to adjust all historical GMT offset values.",;java.util.SimpleTimeZone.setRawOffset(int);java.util.TimeZone.setRawOffset(int),;0.56;0.66
setReadable,2,0.761819001,Sets the owner's or everybody's read permission for this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to read files that are marked as unreadable. The Files class defines methods that operate on file attributes including file permissions. This may be used when finer manipulation of file permissions is required.,";java.io.File.setReadable(boolean,boolean);java.io.File.setReadable(boolean)",;0.76;0.76
setReader,2,0.5,"Set the input to be a character reader. Normally, a stream should be used rather than a reader, so that the XML parser can resolve character encoding specified by the XML declaration. However, in many cases the encoding of the input stream is already resolved, as in the case of reading XML from a StringReader.",;javax.script.SimpleScriptContext.setReader(Reader);javax.xml.transform.stream.StreamSource.setReader(Reader),;0.50;0.50
setReceiveBufferSize,2,0.5,"Sets a default proposed value for the SO_RCVBUF option for sockets accepted from this ServerSocket. The value actually set in the accepted socket must be determined by calling Socket.getReceiveBufferSize() after the socket is returned by accept(). The value of SO_RCVBUF is used both to set the size of the internal socket receive buffer, and to set the size of the TCP receive window that is advertized to the remote peer. It is possible to change the value subsequently, by calling Socket.setReceiveBufferSize(int). However, if the application wishes to allow a receive window larger than 64K bytes, as defined by RFC1323 then the proposed value must be set in the ServerSocket before it is bound to a local address. This implies, that the ServerSocket must be created with the no-argument constructor, then setReceiveBufferSize() must be called and lastly the ServerSocket is bound to an address by calling bind(). Failure to do this will not cause an error, and the buffer size may be set to the requested value but the TCP receive window in sockets accepted from this ServerSocket will be no larger than 64K bytes.",;java.net.DatagramSocket.setReceiveBufferSize(int);java.net.ServerSocket.setReceiveBufferSize(int),;0.50;0.50
setRef,2,0.5,"Sets the designated parameter to the given Ref object in the Java programming language. The driver converts this to an SQL REF value when it sends it to the database. Internally, the Ref is represented as a SerialRef to ensure serializability. The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this RowSet object's command when the method execute is called. Methods such as execute and populate must be provided in any class that extends this class and implements one or more of the standard JSR-114 RowSet interfaces. NOTE: JdbcRowSet does not require the populate method as it is undefined in this class. After this method has been called, a call to the method getParams will return an object array of the current command parameters, which will include the Ref object set for placeholder parameter number parameterIndex. Note that because the numbering of elements in an array starts at zero, the array element that corresponds to placeholder parameter number parameterIndex is element number parameterIndex -1.",";java.rmi.server.RemoteStub.setRef(RemoteStub,RemoteRef);javax.sql.rowset.BaseRowSet.setRef(int,Ref)",;0.50;0.50
setRenderingHints,2,0.5,Sets the rendering hints of this RenderContext.,";java.awt.Graphics2D.setRenderingHints(Map&lt;?,?&gt;);java.awt.image.renderable.RenderContext.setRenderingHints(RenderingHints)",;0.50;0.50
setResourceBundle,2,0.5,Set the localization resource bundle.,;java.util.logging.Logger.setResourceBundle(ResourceBundle);java.util.logging.LogRecord.setResourceBundle(ResourceBundle),;0.50;0.50
setRGB,2,0.626467402,"Sets an array of integer pixels in the default RGB color model (TYPE_INT_ARGB) and default sRGB color space, into a portion of the image data. Color conversion takes place if the default model does not match the image ColorModel. There are only 8-bits of precision for each color component in the returned data when using this method. With a specified coordinate (x,y) in the this image, the ARGB pixel can be accessed in this way: pixel = rgbArray[offset + (y-startY)*scansize + (x-startX)]; WARNING: No dithering takes place. An ArrayOutOfBoundsException may be thrown if the region is not in bounds. However, explicit bounds checking is not guaranteed.",";java.awt.image.BufferedImage.setRGB(int,int,int);java.awt.image.BufferedImage.setRGB(int,int,int,int,int[],int,int)",;0.60;0.63
setRole,2,0.710325387,Sets the given role in given relation. Will check the role according to its corresponding role definition provided in relation's relation type The Relation Service will keep track of the change to keep the consistency of relations by handling referenced MBean deregistrations.,";javax.management.relation.RelationService.setRole(String,Role);javax.management.relation.RelationSupport.setRole(Role)",;0.71;0.71
setRoleName,2,1.22E-77,Sets role name.,;javax.management.relation.Role.setRoleName(String);javax.management.relation.RoleUnresolved.setRoleName(String),;0.00;0.00
setRoleValue,2,1.22E-77,Sets role value.,;javax.management.relation.Role.setRoleValue(List&lt;ObjectName&gt;);javax.management.relation.RoleUnresolved.setRoleValue(List&lt;ObjectName&gt;),;0.00;0.00
setRollover,2,0.5,Sets the rollover state of this toolbar. If the rollover state is true then the border of the toolbar buttons will be drawn only when the mouse pointer hovers over them. The default value of this property is false. The implementation of a look and feel may choose to ignore this property.,;javax.swing.DefaultButtonModel.setRollover(boolean);javax.swing.JToolBar.setRollover(boolean),;0.50;0.50
setRolloverTab,2,1,Sets the tab the mouse is currently over to index. index will be -1 if the mouse is no longer over any tab. No checking is done to ensure the passed in index identifies a valid tab.,;javax.swing.plaf.basic.BasicTabbedPaneUI.setRolloverTab(int);javax.swing.plaf.synth.SynthTabbedPaneUI.setRolloverTab(int),;1.00;1.00
setRoundingMode,2,0.582259647,Sets the RoundingMode used in this NumberFormat. The default implementation of this method in NumberFormat always throws UnsupportedOperationException. Subclasses which handle different rounding modes should override this method.,;java.text.DecimalFormat.setRoundingMode(RoundingMode);java.text.NumberFormat.setRoundingMode(RoundingMode),;0.52;0.58
setRowId,2,0.950000067,Sets the designated parameter to the given java.sql.RowId object. The driver converts this to a SQL ROWID when it sends it to the database.,";javax.sql.rowset.BaseRowSet.setRowId(int,RowId);javax.sql.rowset.BaseRowSet.setRowId(String,RowId)",;0.95;0.95
setRowMapper,2,0.5,Sets the RowMapper instance. This instance is used to determine the row for a particular TreePath.,;javax.swing.JTree.EmptySelectionModel.setRowMapper(RowMapper);javax.swing.tree.DefaultTreeSelectionModel.setRowMapper(RowMapper),;0.50;0.50
setScrollPosition,2,0.933158569,"Scrolls to the specified position within the child component. A call to this method is only valid if the scroll pane contains a child and the specified position is within legal scrolling bounds of the child. Specifying a position outside of the legal scrolling bounds of the child will scroll to the closest legal position. Legal bounds are defined to be the rectangle: x = 0, y = 0, width = (child width - view port width), height = (child height - view port height). This is a convenience method which interfaces with the Adjustable objects which represent the state of the scrollbars.",";java.awt.ScrollPane.setScrollPosition(int,int);java.awt.ScrollPane.setScrollPosition(Point)",;0.93;0.93
setSeconds,2,0.5,"Deprecated.As of JDK version 1.1, replaced by Calendar.set(Calendar.SECOND, int seconds).",;java.sql.Date.setSeconds(int);java.util.Date.setSeconds(int),;0.00;0.50
setSelectedItem,2,0.5,"Sets the selected item in the combo box display area to the object in the argument. If anObject is in the list, the display area shows anObject selected. If anObject is not in the list and the combo box is uneditable, it will not change the current selection. For editable combo boxes, the selection will change to anObject. If this constitutes a change in the selected item, ItemListeners added to the combo box will be notified with one or two ItemEvents. If there is a current selected item, an ItemEvent will be fired and the state change will be ItemEvent.DESELECTED. If anObject is in the list and is not currently selected then an ItemEvent will be fired and the state change will be ItemEvent.SELECTED. ActionListeners added to the combo box will be notified with an ActionEvent when this method is called.",;javax.swing.DefaultComboBoxModel.setSelectedItem(Object);javax.swing.JComboBox.setSelectedItem(Object),;0.50;0.50
setSelectionBackground,2,0.699211229,"Sets the color used to draw the background of selected items, which cell renderers can use fill selected cells. DefaultListCellRenderer uses this color to fill the background of items in the selected state, as do the renderers installed by most ListUI implementations. The default value of this property is defined by the look and feel implementation. This is a JavaBeans bound property.",;javax.swing.JList.setSelectionBackground(Color);javax.swing.JTable.setSelectionBackground(Color),;0.70;0.68
setSelectionEnd,2,0.675559597,"Sets the selection end for this text component to the specified position. The new end point is constrained to be at or after the current selection start. It also cannot be set beyond the end of the component's text. If the caller supplies a value for selectionEnd that is out of bounds, the method enforces these constraints silently, and without failure.",;java.awt.TextComponent.setSelectionEnd(int);javax.swing.text.JTextComponent.setSelectionEnd(int),;0.68;0.68
setSelectionForeground,2,0.707948109,"Sets the color used to draw the foreground of selected items, which cell renderers can use to render text and graphics. DefaultListCellRenderer uses this color to draw the foreground of items in the selected state, as do the renderers installed by most ListUI implementations. The default value of this property is defined by the look and feel implementation. This is a JavaBeans bound property.",;javax.swing.JList.setSelectionForeground(Color);javax.swing.JTable.setSelectionForeground(Color),;0.71;0.69
setSelectionPath,2,0.5,"Sets the selection to path. If this represents a change, then the TreeSelectionListeners are notified. If path is null, this has the same effect as invoking clearSelection.",;javax.swing.JTree.setSelectionPath(TreePath);javax.swing.tree.DefaultTreeSelectionModel.setSelectionPath(TreePath),;0.50;0.50
setSelectionStart,2,0.607445795,"Sets the selection start for this text component to the specified position. The new start point is constrained to be at or before the current selection end. It also cannot be set to less than zero, the beginning of the component's text. If the caller supplies a value for selectionStart that is out of bounds, the method enforces these constraints silently, and without failure.",;java.awt.TextComponent.setSelectionStart(int);javax.swing.text.JTextComponent.setSelectionStart(int),;0.61;0.61
setSendBufferSize,2,0.627554302,"Sets the SO_SNDBUF option to the specified value for this DatagramSocket. The SO_SNDBUF option is used by the network implementation as a hint to size the underlying network I/O buffers. The SO_SNDBUF setting may also be used by the network implementation to determine the maximum size of the packet that can be sent on this socket. As SO_SNDBUF is a hint, applications that want to verify what size the buffer is should call getSendBufferSize(). Increasing the buffer size may allow multiple outgoing packets to be queued by the network implementation when the send rate is high. Note: If send(DatagramPacket) is used to send a DatagramPacket that is larger than the setting of SO_SNDBUF then it is implementation specific if the packet is sent or discarded.",;java.net.DatagramSocket.setSendBufferSize(int);java.net.Socket.setSendBufferSize(int),;0.63;0.58
setSequenceNumber,2,0.5,Set the notification sequence number.,;java.util.logging.LogRecord.setSequenceNumber(long);javax.management.Notification.setSequenceNumber(long),;0.50;0.50
setShowsRootHandles,2,0.5288034,"Sets the value of the showsRootHandles property, which specifies whether the node handles should be displayed. The default value of this property depends on the constructor used to create the JTree. Some look and feels might not support handles; they will ignore this property. This is a bound property.",;javax.swing.JTree.setShowsRootHandles(boolean);javax.swing.plaf.basic.BasicTreeUI.setShowsRootHandles(boolean),;0.53;0.50
setSocketFactory,2,0.5,"Set the global socket factory from which RMI gets sockets (if the remote object is not associated with a specific client and/or server socket factory). The RMI socket factory can only be set once. Note: The RMISocketFactory may only be set if the current security manager allows setting a socket factory; if disallowed, a SecurityException will be thrown.",;java.net.ServerSocket.setSocketFactory(SocketImplFactory);java.rmi.server.RMISocketFactory.setSocketFactory(RMISocketFactory),;0.50;0.50
setSortKeys,2,0.5,Sets the current sort keys.,;javax.swing.DefaultRowSorter.setSortKeys(List&lt;?);javax.swing.RowSorter.setSortKeys(List&lt;?),;0.50;0.50
setSQLXML,2,1,Sets the designated parameter to the given java.sql.SQLXML object. The driver converts this to an SQL XML value when it sends it to the database.,";javax.sql.rowset.BaseRowSet.setSQLXML(int,SQLXML);javax.sql.rowset.BaseRowSet.setSQLXML(String,SQLXML)",;1.00;1.00
setStrikeThrough,2,0.5,Sets the strikethrough attribute.,";javax.swing.text.LabelView.setStrikeThrough(boolean);javax.swing.text.StyleConstants.setStrikeThrough(MutableAttributeSet,boolean)",;0.50;0.50
setSubjectPublicKey,2,0.582845829,"Sets the subjectPublicKey criterion. The X509Certificate must contain the specified subject public key. If null, no subjectPublicKey check will be done. Because this method allows the public key to be specified as a byte array, it may be used for unknown key types. If key is not null, it should contain a single DER encoded SubjectPublicKeyInfo structure, as defined in X.509. The ASN.1 notation for this structure is as follows. SubjectPublicKeyInfo ::= SEQUENCE { algorithm AlgorithmIdentifier, subjectPublicKey BIT STRING } AlgorithmIdentifier ::= SEQUENCE { algorithm OBJECT IDENTIFIER, parameters ANY DEFINED BY algorithm OPTIONAL } -- contains a value of the type -- registered for use with the -- algorithm object identifier value Note that the byte array supplied here is cloned to protect against subsequent modifications.",;java.security.cert.X509CertSelector.setSubjectPublicKey(PublicKey);java.security.cert.X509CertSelector.setSubjectPublicKey(byte[]),;0.50;0.58
setSubscript,2,0.5,Sets the subscript attribute.,";javax.swing.text.LabelView.setSubscript(boolean);javax.swing.text.StyleConstants.setSubscript(MutableAttributeSet,boolean)",;0.50;0.50
setSuperscript,2,0.5,Sets the superscript attribute.,";javax.swing.text.LabelView.setSuperscript(boolean);javax.swing.text.StyleConstants.setSuperscript(MutableAttributeSet,boolean)",;0.50;0.50
setThumbBounds,2,0.5,This is overridden only to increase the invalid area. This ensures that the "Shadow" below the thumb is invalidated,";javax.swing.plaf.basic.BasicScrollBarUI.setThumbBounds(int,int,int,int);javax.swing.plaf.metal.MetalScrollBarUI.setThumbBounds(int,int,int,int)",;0.50;0.50
setThumbRollover,2,1,Sets whether or not the mouse is currently over the thumb.,;javax.swing.plaf.basic.BasicScrollBarUI.setThumbRollover(boolean);javax.swing.plaf.synth.SynthScrollBarUI.setThumbRollover(boolean),;1.00;1.00
setTimeOfDay,2,0.779251297,"Sets the time of day field parameters to the values given by hourOfDay, minute, second, and millis. This method is equivalent to a call to: setFields(Calendar.HOUR_OF_DAY, hourOfDay, Calendar.MINUTE, minute, Calendar.SECOND, second, Calendar.MILLISECOND, millis);",";java.util.Calendar.Builder.setTimeOfDay(int,int,int);java.util.Calendar.Builder.setTimeOfDay(int,int,int,int)",;0.77;0.78
setTimeToLive,2,0.5,Set the default time-to-live for multicast packets sent out on this MulticastSocket in order to control the scope of the multicasts. The ttl must be in the range 0 &lt;= ttl &lt;= 255 or an IllegalArgumentException will be thrown. Multicast packets sent with a TTL of 0 are not transmitted on the network but may be delivered locally.,;java.net.DatagramSocketImpl.setTimeToLive(int);java.net.MulticastSocket.setTimeToLive(int),;0.50;0.50
setToQuadrantRotation,2,0.88096566,"Sets this transform to a translated rotation transformation that rotates coordinates by the specified number of quadrants around the specified anchor point. This operation is equivalent to calling: setToRotation(numquadrants * Math.PI / 2.0, anchorx, anchory); Rotating by a positive number of quadrants rotates points on the positive X axis toward the positive Y axis.",";java.awt.geom.AffineTransform.setToQuadrantRotation(int);java.awt.geom.AffineTransform.setToQuadrantRotation(int,double,double)",;0.88;0.88
setTTL,2,0.5,"Deprecated.use the setTimeToLive method instead, which uses int instead of byte as the type for ttl.",;java.net.DatagramSocketImpl.setTTL(byte);java.net.MulticastSocket.setTTL(byte),;0.50;0.50
setUndecorated,2,0.930633581,"Disables or enables decorations for this frame. This method can only be called while the frame is not displayable. To make this frame decorated, it must be opaque and have the default shape, otherwise the IllegalComponentStateException will be thrown. Refer to Window.setShape(java.awt.Shape), Window.setOpacity(float) and Window.setBackground(java.awt.Color) for details",;java.awt.Dialog.setUndecorated(boolean);java.awt.Frame.setUndecorated(boolean),;0.93;0.93
setUnderline,2,0.5,Sets the underline attribute.,";javax.swing.text.LabelView.setUnderline(boolean);javax.swing.text.StyleConstants.setUnderline(MutableAttributeSet,boolean)",;0.50;0.50
setURIResolver,2,0.608806544,"Set an object that will be used to resolve URIs used in document(). If the resolver argument is null, the URIResolver value will be cleared and the transformer will no longer have a resolver.",;javax.xml.transform.Transformer.setURIResolver(URIResolver);javax.xml.transform.TransformerFactory.setURIResolver(URIResolver),;0.61;0.60
setUserData,2,0.5,Set the user data.,";javax.imageio.metadata.IIOMetadataNode.setUserData(String,Object,UserDataHandler);javax.management.Notification.setUserData(Object)",;0.50;0.50
setUserObject,2,0.5,Sets the user object for this node to userObject.,;javax.imageio.metadata.IIOMetadataNode.setUserObject(Object);javax.swing.tree.DefaultMutableTreeNode.setUserObject(Object),;0.50;0.50
setValues,2,0.5,Sets the four BoundedRangeModel properties after forcing the arguments to obey the usual constraints: minimum 閳 value 閳 value+extent 閳 maximum,";java.awt.Scrollbar.setValues(int,int,int,int);javax.swing.JScrollBar.setValues(int,int,int,int)",;0.50;0.50
setVerticalAlignment,2,0.5,Sets the alignment of the label's contents along the Y axis. The default value of this property is CENTER.,;javax.swing.AbstractButton.setVerticalAlignment(int);javax.swing.JLabel.setVerticalAlignment(int),;0.50;0.50
setVerticalTextPosition,2,0.608819284,"Sets the vertical position of the label's text, relative to its image. The default value of this property is CENTER. This is a JavaBeans bound property.",;javax.swing.AbstractButton.setVerticalTextPosition(int);javax.swing.JLabel.setVerticalTextPosition(int),;0.57;0.61
setVisibleRowCount,2,0.5,"Sets the number of rows that are to be displayed. This will only work if the tree is contained in a JScrollPane, and will adjust the preferred size and size of that scrollpane. This is a bound property.",;javax.swing.JList.setVisibleRowCount(int);javax.swing.JTree.setVisibleRowCount(int),;0.50;0.50
setWheelScrollingEnabled,2,1,Enables/disables scrolling in response to movement of the mouse wheel. Wheel scrolling is enabled by default.,;java.awt.ScrollPane.setWheelScrollingEnabled(boolean);javax.swing.JScrollPane.setWheelScrollingEnabled(boolean),;1.00;1.00
setWidth,2,0.5,"This method should not be used to set the widths of columns in the JTable, use setPreferredWidth instead. Like a layout manager in the AWT, the JTable adjusts a column's width automatically whenever the table itself changes size, or a column's preferred width is changed. Setting widths programmatically therefore has no long term effect. This method sets this column's width to width. If width exceeds the minimum or maximum width, it is adjusted to the appropriate limiting value.",;javax.swing.SpringLayout.Constraints.setWidth(Spring);javax.swing.table.TableColumn.setWidth(int),;0.50;0.50
setWritable,2,0.76701947,"A convenience method to set the owner's write permission for this abstract pathname. On some platforms it may be possible to start the Java virtual machine with special privileges that allow it to modify files that disallow write operations. An invocation of this method of the form file.setWritable(arg) behaves in exactly the same way as the invocation file.setWritable(arg, true)",";java.io.File.setWritable(boolean,boolean);java.io.File.setWritable(boolean)",;0.77;0.77
setWriter,2,0.5,"Set the writer that is to receive the result. Normally, a stream should be used rather than a writer, so that the transformer may use instructions contained in the transformation instructions to control the encoding. However, there are times when it is useful to write to a writer, such as when using a StringWriter.",;javax.script.SimpleScriptContext.setWriter(Writer);javax.xml.transform.stream.StreamResult.setWriter(Writer),;0.50;0.50
setXIncludeAware,2,1,"Set state of XInclude processing.If XInclude markup is found in the document instance, should it be processed as specified in XML Inclusions (XInclude) Version 1.0.XInclude processing defaults to false.",;javax.xml.parsers.DocumentBuilderFactory.setXIncludeAware(boolean);javax.xml.parsers.SAXParserFactory.setXIncludeAware(boolean),;1.00;1.00
setXORMode,2,0.5,"Sets the paint mode of this graphics context to alternate between this graphics context's current color and the new specified color. This specifies that logical pixel operations are performed in the XOR mode, which alternates pixels between the current color and a specified XOR color. When drawing operations are performed, pixels which are the current color are changed to the specified color, and vice versa. Pixels that are of colors other than those two colors are changed in an unpredictable but reversible manner; if the same figure is drawn twice, then all pixels are restored to their original values.",;java.awt.Graphics.setXORMode(Color);javax.swing.DebugGraphics.setXORMode(Color),;0.50;0.00
severe,2,0.698564,"Log a SEVERE message, which is only to be constructed if the logging level is such that the message will actually be logged. If the logger is currently enabled for the SEVERE message level then the message is constructed by invoking the provided supplier function and forwarded to all the registered output Handler objects.",;java.util.logging.Logger.severe(String);java.util.logging.Logger.severe(Supplier&lt;String&gt;),;0.66;0.70
sharedInstance,2,0.5,Returns a shared ToolTipManager instance.,;javax.swing.JTree.EmptySelectionModel.sharedInstance();javax.swing.ToolTipManager.sharedInstance(),;0.50;0.50
shear,2,0.760105281,"Concatenates the current Graphics2DTransform with a shearing transform. Subsequent renderings are sheared by the specified multiplier relative to the previous position. This is equivalent to calling transform(SH), where SH is an AffineTransform represented by the following matrix: [ 1 shx 0 ] [ shy 1 0 ] [ 0 0 1 ]",";java.awt.Graphics2D.shear(double,double);java.awt.geom.AffineTransform.shear(double,double)",;0.76;0.75
shortValueExact,2,0.70095232,"Converts this BigDecimal to a short, checking for lost information. If this BigDecimal has a nonzero fractional part or is out of the possible range for a short result then an ArithmeticException is thrown.",;java.math.BigDecimal.shortValueExact();java.math.BigInteger.shortValueExact(),;0.70;0.70
shouldUpdateStyleOnAncestorChanged,2,1,Returns whether or not the UIs should update their SynthStyles from the SynthStyleFactory when the ancestor of the JComponent changes. A subclass that provided a SynthStyleFactory that based the return value from getStyle off the containment hierarchy would override this method to return true.,;javax.swing.plaf.nimbus.NimbusLookAndFeel.shouldUpdateStyleOnAncestorChanged();javax.swing.plaf.synth.SynthLookAndFeel.shouldUpdateStyleOnAncestorChanged(),;1.00;1.00
showDialog,2,0.5,"Pops a custom file chooser dialog with a custom approve button. For example, the following code pops up a file chooser with a ""Run Application"" button (instead of the normal ""Save"" or ""Open"" button): filechooser.showDialog(parentFrame, ""Run Application""); Alternatively, the following code does the same thing: JFileChooser chooser = new JFileChooser(null); chooser.setApproveButtonText(""Run Application""); chooser.showDialog(parentFrame, null); <!--PENDING(jeff) - the following method should be added to the api: showDialog(Component parent);--><!--PENDING(kwalrath) - should specify modality and what ""depends"" means.--> The parent argument determines two things: the frame on which the open dialog depends and the component whose position the look and feel should consider when placing the dialog. If the parent is a Frame object (such as a JFrame) then the dialog depends on the frame and the look and feel positions the dialog relative to the frame (for example, centered over the frame). If the parent is a component, then the dialog depends on the frame containing the component, and is positioned relative to the component (for example, centered over the component). If the parent is null, then the dialog depends on no visible window, and it's placed in a look-and-feel-dependent position such as the center of the screen.",";javax.swing.JColorChooser.showDialog(Component,String,Color);javax.swing.JFileChooser.showDialog(Component,String)",;0.50;0.50
shuffle,2,0.846805305,"Randomly permutes the specified list using a default source of randomness. All permutations occur with approximately equal likelihood. The hedge ""approximately"" is used in the foregoing description because default source of randomness is only approximately an unbiased source of independently chosen bits. If it were a perfect source of randomly chosen bits, then the algorithm would choose permutations with perfect uniformity. This implementation traverses the list backwards, from the last element up to the second, repeatedly swapping a randomly selected element into the ""current position"". Elements are randomly selected from the portion of the list that runs from the first element to the current position, inclusive. This method runs in linear time. If the specified list does not implement the RandomAccess interface and is large, this implementation dumps the specified list into an array before shuffling it, and dumps the shuffled array back into the list. This avoids the quadratic behavior that would result from shuffling a ""sequential access"" list in place.",";java.util.Collections.shuffle(List&lt;?&gt;);java.util.Collections.shuffle(List&lt;?&gt;,Random)",;0.85;0.84
sign,2,0.634570936,"Returns the signature bytes of all the data updated. The format of the signature depends on the underlying signature scheme. A call to this method resets this signature object to the state it was in when previously initialized for signing via a call to initSign(PrivateKey). That is, the object is reset and available to generate another signature from the same signer, if desired, via new calls to update and sign.",";java.security.Signature.sign();java.security.Signature.sign(byte[],int,int)",;0.63;0.63
sizeColumnsToFit,2,0.5,Obsolete as of Java 2 platform v1.4. Please use the doLayout() method instead.,;javax.swing.JTable.sizeColumnsToFit(boolean);javax.swing.JTable.sizeColumnsToFit(int),;0.50;0.50
sleep,2,0.906624676,"Causes the currently executing thread to sleep (temporarily cease execution) for the specified number of milliseconds plus the specified number of nanoseconds, subject to the precision and accuracy of system timers and schedulers. The thread does not lose ownership of any monitors.",";java.lang.Thread.sleep(long);java.lang.Thread.sleep(long,int)",;0.90;0.91
solveCubic,2,0.87520102,"Solve the cubic whose coefficients are in the eqn array and place the non-complex roots into the res array, returning the number of roots. The cubic solved is represented by the equation: eqn = {c, b, a, d} dx^3 + ax^2 + bx + c = 0 A return value of -1 is used to distinguish a constant equation, which may be always 0 or never 0, from an equation which has no zeroes.",";java.awt.geom.CubicCurve2D.solveCubic(double[]);java.awt.geom.CubicCurve2D.solveCubic(double[],double[])",;0.88;0.88
solveQuadratic,2,0.964967929,"Solves the quadratic whose coefficients are in the eqn array and places the non-complex roots into the res array, returning the number of roots. The quadratic solved is represented by the equation: eqn = {C, B, A}; ax^2 + bx + c = 0 A return value of -1 is used to distinguish a constant equation, which might be always 0 or never 0, from an equation that has no zeroes.",";java.awt.geom.QuadCurve2D.solveQuadratic(double[]);java.awt.geom.QuadCurve2D.solveQuadratic(double[],double[])",;0.96;0.96
startTag,2,0.5,Handle a start tag. The new tag is pushed onto the tag stack. The attribute list is checked for required attributes.,;javax.swing.text.html.HTMLWriter.startTag(Element);javax.swing.text.html.parser.Parser.startTag(TagElement),;0.50;0.50
stateChanged,2,0.5,Description copied from interface:ChangeListener,;javax.swing.JSpinner.DefaultEditor.stateChanged(ChangeEvent);javax.swing.plaf.basic.BasicButtonListener.stateChanged(ChangeEvent),;0.50;0.50
storeToXML,2,0.581923068,"Emits an XML document representing all of the properties contained in this table, using the specified encoding. The XML document will have the following DOCTYPE declaration: &lt;!DOCTYPE properties SYSTEM ""http://java.sun.com/dtd/properties.dtd""&gt; If the specified comment is null then no comment will be stored in the document. An implementation is required to support writing of XML documents that use the ""UTF-8"" or ""UTF-16"" encoding. An implementation may support additional encodings. The specified stream remains open after this method returns.",";java.util.Properties.storeToXML(OutputStream,String);java.util.Properties.storeToXML(OutputStream,String,String)",;0.56;0.58
subtractFrom,2,0.659482574,"Subtracts this period from the specified temporal object. This returns a temporal object of the same observable type as the input with this period subtracted. If the temporal has a chronology, it must be the ISO chronology. In most cases, it is clearer to reverse the calling pattern by using Temporal.minus(TemporalAmount). // these two lines are equivalent, but the second approach is recommended dateTime = thisPeriod.subtractFrom(dateTime); dateTime = dateTime.minus(thisPeriod); The calculation operates as follows. First, the chronology of the temporal is checked to ensure it is ISO chronology or null. Second, if the months are zero, the years are subtracted if non-zero, otherwise the combination of years and months is subtracted if non-zero. Finally, any days are subtracted. This approach ensures that a partial period can be subtracted from a partial date. For example, a period of years and/or months can be subtracted from a YearMonth, but a period including days cannot. The approach also subtracts years and months together when necessary, which ensures correct behaviour at the end of the month. This instance is immutable and unaffected by this method call.",;java.time.Duration.subtractFrom(Temporal);java.time.Period.subtractFrom(Temporal),;0.61;0.66
sumThenReset,2,1,"Equivalent in effect to sum() followed by reset(). This method may apply for example during quiescent points between multithreaded computations. If there are updates concurrent with this method, the returned value is not guaranteed to be the final value occurring before the reset.",;java.util.concurrent.atomic.DoubleAdder.sumThenReset();java.util.concurrent.atomic.LongAdder.sumThenReset(),;1.00;1.00
supplyAsync,2,0.923332855,Returns a new CompletableFuture that is asynchronously completed by a task running in the given executor with the value obtained by calling the given Supplier.,";java.util.concurrent.CompletableFuture.supplyAsync(Supplier&lt;U&gt;);java.util.concurrent.CompletableFuture.supplyAsync(Supplier&lt;U&gt;,Executor)",;0.92;0.92
supportsFileAttributeView,2,0.954965115,"Tells whether or not this file store supports the file attributes identified by the given file attribute view. Invoking this method to test if the file store supports BasicFileAttributeView, identified by the name ""basic"" will always return true. In the case of the default provider, this method cannot guarantee to give the correct result when the file store is not a local storage device. The reasons for this are implementation specific and therefore unspecified.",;java.nio.file.FileStore.supportsFileAttributeView(Class&lt;?);java.nio.file.FileStore.supportsFileAttributeView(String),;0.95;0.95
suspend,2,0.521364917,"Deprecated.This method has been deprecated, as it is inherently deadlock-prone. If the target thread holds a lock on the monitor protecting a critical system resource when it is suspended, no thread can access this resource until the target thread is resumed. If the thread that would resume the target thread attempts to lock this monitor prior to calling resume, deadlock results. Such deadlocks typically manifest themselves as ""frozen"" processes. For more information, see Why are Thread.stop, Thread.suspend and Thread.resume Deprecated?.",;java.lang.Thread.suspend();java.lang.ThreadGroup.suspend(),;0.52;0.50
tabForCoordinate,2,0.5,Invokes the tabForCoordinate method on each UI handled by this object.,";javax.swing.plaf.basic.BasicTabbedPaneUI.tabForCoordinate(JTabbedPane,int,int);javax.swing.plaf.multi.MultiTabbedPaneUI.tabForCoordinate(JTabbedPane,int,int)",;0.50;0.50
thenAcceptAsync,2,1,Description copied from interface:CompletionStage,";java.util.concurrent.CompletableFuture.thenAcceptAsync(Consumer&lt;?);java.util.concurrent.CompletableFuture.thenAcceptAsync(Consumer&lt;?,Executor)",;1.00;1.00
thenAcceptBothAsync,2,1,Description copied from interface:CompletionStage,";java.util.concurrent.CompletableFuture.thenAcceptBothAsync(CompletionStage&lt;?,BiConsumer&lt;?,?);java.util.concurrent.CompletableFuture.thenAcceptBothAsync(CompletionStage&lt;?,BiConsumer&lt;?,?,Executor)",;1.00;1.00
thenApplyAsync,2,1,Description copied from interface:CompletionStage,";java.util.concurrent.CompletableFuture.thenApplyAsync(Function&lt;?,?);java.util.concurrent.CompletableFuture.thenApplyAsync(Function&lt;?,?,Executor)",;1.00;1.00
thenCombineAsync,2,1,Description copied from interface:CompletionStage,";java.util.concurrent.CompletableFuture.thenCombineAsync(CompletionStage&lt;?,BiFunction&lt;?,?,?);java.util.concurrent.CompletableFuture.thenCombineAsync(CompletionStage&lt;?,BiFunction&lt;?,?,?,Executor)",;1.00;1.00
thenComposeAsync,2,1,Description copied from interface:CompletionStage,";java.util.concurrent.CompletableFuture.thenComposeAsync(Function&lt;?,?);java.util.concurrent.CompletableFuture.thenComposeAsync(Function&lt;?,?,Executor)",;1.00;1.00
thenRunAsync,2,1,Description copied from interface:CompletionStage,";java.util.concurrent.CompletableFuture.thenRunAsync(Runnable);java.util.concurrent.CompletableFuture.thenRunAsync(Runnable,Executor)",;1.00;1.00
throwException,2,0.5,Throws an exception appropriate to the result described by this object.,";java.lang.invoke.MethodHandles.throwException(Class&lt;?&gt;,Class&lt;?);java.nio.charset.CoderResult.throwException()",;0.50;0.50
to,2,0.5,Returns the value at the given unit of granularity. Conversion from a coarser granularity that would numerically overflow saturate to Long.MIN_VALUE if negative or Long.MAX_VALUE if positive.,;java.lang.ProcessBuilder.Redirect.to(File);java.nio.file.attribute.FileTime.to(TimeUnit),;0.50;0.50
toASCII,2,0.564638572,"Translates a string from Unicode to ASCII Compatible Encoding (ACE), as defined by the ToASCII operation of RFC 3490. ToASCII operation can fail. ToASCII fails if any step of it fails. If ToASCII operation fails, an IllegalArgumentException will be thrown. In this case, the input string should not be used in an internationalized domain name. A label is an individual part of a domain name. The original ToASCII operation, as defined in RFC 3490, only operates on a single label. This method can handle both label and entire domain name, by assuming that labels in a domain name are always separated by dots. The following characters are recognized as dots: \u002E (full stop), \u3002 (ideographic full stop), \uFF0E (fullwidth full stop), and \uFF61 (halfwidth ideographic full stop). if dots are used as label separators, this method also changes all of them to \u002E (full stop) in output translated string.",";java.net.IDN.toASCII(String,int);java.net.IDN.toASCII(String)",;0.56;0.51
toBinaryString,2,0.95175378,"Returns a string representation of the long argument as an unsigned integer in base2. The unsigned long value is the argument plus 264 if the argument is negative; otherwise, it is equal to the argument. This value is converted to a string of ASCII digits in binary (base2) with no extra leading 0s. The value of the argument can be recovered from the returned string s by calling Long.parseUnsignedLong(s, 2). If the unsigned magnitude is zero, it is represented by a single zero character '0' ('\u0030'); otherwise, the first character of the representation of the unsigned magnitude will not be the zero character. The characters '0' ('\u0030') and '1' ('\u0031') are used as binary digits.",;java.lang.Integer.toBinaryString(int);java.lang.Long.toBinaryString(long),;0.95;0.95
toCharArray,2,0.5,Converts this string to a new character array.,;java.io.CharArrayWriter.toCharArray();java.lang.String.toCharArray(),;0.50;0.50
toChars,2,0.750704833,"Converts the specified character (Unicode code point) to its UTF-16 representation. If the specified code point is a BMP (Basic Multilingual Plane or Plane 0) value, the same value is stored in dst[dstIndex], and 1 is returned. If the specified code point is a supplementary character, its surrogate values are stored in dst[dstIndex] (high-surrogate) and dst[dstIndex+1] (low-surrogate), and 2 is returned.",";java.lang.Character.toChars(int,char[],int);java.lang.Character.toChars(int)",;0.75;0.75
toCIEXYZ,2,0.575495757,"Transforms a color value assumed to be in this ColorSpace into the CS_CIEXYZ conversion color space. This method transforms color values using relative colorimetry, as defined by the ICC Specification. This means that the XYZ values returned by this method are represented relative to the D50 white point of the CS_CIEXYZ color space. This representation is useful in a two-step color conversion process in which colors are transformed from an input color space to CS_CIEXYZ and then to an output color space. This representation is not the same as the XYZ values that would be measured from the given color value by a colorimeter. A further transformation is necessary to compute the XYZ values that would be measured using current CIE recommended practices. The paragraphs below explain this in more detail. The ICC standard uses a device independent color space (DICS) as the mechanism for converting color from one device to another device. In this architecture, colors are converted from the source device's color space to the ICC DICS and then from the ICC DICS to the destination device's color space. The ICC standard defines device profiles which contain transforms which will convert between a device's color space and the ICC DICS. The overall conversion of colors from a source device to colors of a destination device is done by connecting the device-to-DICS transform of the profile for the source device to the DICS-to-device transform of the profile for the destination device. For this reason, the ICC DICS is commonly referred to as the profile connection space (PCS). The color space used in the methods toCIEXYZ and fromCIEXYZ is the CIEXYZ PCS defined by the ICC Specification. This is also the color space represented by ColorSpace.CS_CIEXYZ. The XYZ values of a color are often represented as relative to some white point, so the actual meaning of the XYZ values cannot be known without knowing the white point of those values. This is known as relative colorimetry. The PCS uses a white point of D50, so the XYZ values of the PCS are relative to D50. For example, white in the PCS will have the XYZ values of D50, which is defined to be X=.9642, Y=1.000, and Z=0.8249. This white point is commonly used for graphic arts applications, but others are often used in other applications. To quantify the color characteristics of a device such as a printer or monitor, measurements of XYZ values for particular device colors are typically made. For purposes of this discussion, the term device XYZ values is used to mean the XYZ values that would be measured from device colors using current CIE recommended practices. Converting between device XYZ values and the PCS XYZ values returned by this method corresponds to converting between the device's color space, as represented by CIE colorimetric values, and the PCS. There are many factors involved in this process, some of which are quite subtle. The most important, however, is the adjustment made to account for differences between the device's white point and the white point of the PCS. There are many techniques for doing this and it is the subject of much current research and controversy. Some commonly used methods are XYZ scaling, the von Kries transform, and the Bradford transform. The proper method to use depends upon each particular application. The simplest method is XYZ scaling. In this method each device XYZ value is converted to a PCS XYZ value by multiplying it by the ratio of the PCS white point (D50) to the device white point. Xd, Yd, Zd are the device XYZ values Xdw, Ydw, Zdw are the device XYZ white point values Xp, Yp, Zp are the PCS XYZ values Xd50, Yd50, Zd50 are the PCS XYZ white point values Xp = Xd * (Xd50 / Xdw) Yp = Yd * (Yd50 / Ydw) Zp = Zd * (Zd50 / Zdw) Conversion from the PCS to the device would be done by inverting these equations: Xd = Xp * (Xdw / Xd50) Yd = Yp * (Ydw / Yd50) Zd = Zp * (Zdw / Zd50) Note that the media white point tag in an ICC profile is not the same as the device white point. The media white point tag is expressed in PCS values and is used to represent the difference between the XYZ of device illuminant and the XYZ of the device media when measured under that illuminant. The device white point is expressed as the device XYZ values corresponding to white displayed on the device. For example, displaying the RGB color (1.0, 1.0, 1.0) on an sRGB device will result in a measured device XYZ value of D65. This will not be the same as the media white point tag XYZ value in the ICC profile for an sRGB device.",;java.awt.color.ColorSpace.toCIEXYZ(float[]);java.awt.color.ICC_ColorSpace.toCIEXYZ(float[]),;0.50;0.58
toDegrees,2,1,Converts an angle measured in radians to an approximately equivalent angle measured in degrees. The conversion from radians to degrees is generally inexact; users should not expect cos(toRadians(90.0)) to exactly equal 0.0.,;java.lang.Math.toDegrees(double);java.lang.StrictMath.toDegrees(double),;1.00;1.00
toEpochSecond,2,0.5,Gets the transition instant as an epoch second.,;java.time.OffsetDateTime.toEpochSecond();java.time.zone.ZoneOffsetTransition.toEpochSecond(),;0.50;0.50
toExternalForm,2,0.5,Converts a URL of a specific protocol to a String.,;java.net.URL.toExternalForm();java.net.URLStreamHandler.toExternalForm(URL),;0.50;0.50
toFormat,2,0.824759413,"Returns this formatter as a java.text.Format instance that will parse using the specified query. The returned Format instance will format any TemporalAccessor and parses to the type specified. The type must be one that is supported by parse(java.lang.CharSequence). Exceptions will follow the definitions of Format, see those methods for details about IllegalArgumentException during formatting and ParseException or null during parsing. The format does not support attributing of the returned format string.",;java.time.format.DateTimeFormatter.toFormat();java.time.format.DateTimeFormatter.toFormat(TemporalQuery&lt;?&gt;),;0.81;0.82
toFormatter,2,0.959860735,"Completes this builder by creating the DateTimeFormatter using the specified locale. This will create a formatter with the specified locale. Numbers will be printed and parsed using the standard DecimalStyle. The resolver style will be SMART. Calling this method will end any open optional sections by repeatedly calling optionalEnd() before creating the formatter. This builder can still be used after creating the formatter if desired, although the state may have been changed by calls to optionalEnd.",;java.time.format.DateTimeFormatterBuilder.toFormatter();java.time.format.DateTimeFormatterBuilder.toFormatter(Locale),;0.96;0.96
toggleSortOrder,2,0.768730858,"Reverses the sort order of the specified column. It is up to subclasses to provide the exact behavior when invoked. Typically this will reverse the sort order from ascending to descending (or descending to ascending) if the specified column is already the primary sorted column; otherwise, makes the specified column the primary sorted column, with an ascending sort order. If the specified column is not sortable, this method has no effect. If this results in changing the sort order and sorting, the appropriate RowSorterListener notification will be sent.",;javax.swing.DefaultRowSorter.toggleSortOrder(int);javax.swing.RowSorter.toggleSortOrder(int),;0.72;0.77
toHexString,2,0.952032551,"Returns a string representation of the long argument as an unsigned integer in base16. The unsigned long value is the argument plus 264 if the argument is negative; otherwise, it is equal to the argument. This value is converted to a string of ASCII digits in hexadecimal (base16) with no extra leading 0s. The value of the argument can be recovered from the returned string s by calling Long.parseUnsignedLong(s, 16). If the unsigned magnitude is zero, it is represented by a single zero character '0' ('\u0030'); otherwise, the first character of the representation of the unsigned magnitude will not be the zero character. The following characters are used as hexadecimal digits: 0123456789abcdef These are the characters '\u0030' through '\u0039' and '\u0061' through '\u0066'. If uppercase letters are desired, the String.toUpperCase() method may be called on the result: Long.toHexString(n).toUpperCase()",;java.lang.Integer.toHexString(int);java.lang.Long.toHexString(long),;0.95;0.95
toIntExact,2,1,Returns the value of the long argument; throwing an exception if the value overflows an int.,;java.lang.Math.toIntExact(long);java.lang.StrictMath.toIntExact(long),;1.00;1.00
toJMXConnector,2,0.633707138,"Returns a client stub for this connector server. A client stub is a serializable object whose connect method can be used to make one new connection to this connector server.A given connector need not support the generation of client stubs. However, the connectors specified by the JMX Remote API do (JMXMP Connector and RMI Connector).The default implementation of this method uses JMXConnectorServerMBean.getAddress() and JMXConnectorFactory to generate the stub, with code equivalent to the following: JMXServiceURL addr = getAddress(); return JMXConnectorFactory.newJMXConnector(addr, env); A connector server for which this is inappropriate must override this method so that it either implements the appropriate logic or throws UnsupportedOperationException.",";javax.management.remote.JMXConnectorServer.toJMXConnector(Map&lt;String,?&gt;);javax.management.remote.rmi.RMIConnectorServer.toJMXConnector(Map&lt;String,?&gt;)",;0.63;0.54
toLocalizedPattern,2,0.593991588,Synthesizes a localized pattern string that represents the current state of this Format object.,;java.text.DecimalFormat.toLocalizedPattern();java.text.SimpleDateFormat.toLocalizedPattern(),;0.59;0.59
toMillis,2,0.5,"Converts this duration to the total length in milliseconds. If this duration is too large to fit in a long milliseconds, then an exception is thrown. If this duration has greater than millisecond precision, then the conversion will drop any excess precision information as though the amount in nanoseconds was subject to integer division by one million.",;java.nio.file.attribute.FileTime.toMillis();java.time.Duration.toMillis(),;0.50;0.50
toOctalString,2,0.953391277,"Returns a string representation of the long argument as an unsigned integer in base8. The unsigned long value is the argument plus 264 if the argument is negative; otherwise, it is equal to the argument. This value is converted to a string of ASCII digits in octal (base8) with no extra leading 0s. The value of the argument can be recovered from the returned string s by calling Long.parseUnsignedLong(s, 8). If the unsigned magnitude is zero, it is represented by a single zero character '0' ('\u0030'); otherwise, the first character of the representation of the unsigned magnitude will not be the zero character. The following characters are used as octal digits: 01234567 These are the characters '\u0030' through '\u0037'.",;java.lang.Integer.toOctalString(int);java.lang.Long.toOctalString(long),;0.95;0.95
toRadians,2,1,Converts an angle measured in degrees to an approximately equivalent angle measured in radians. The conversion from degrees to radians is generally inexact.,;java.lang.Math.toRadians(double);java.lang.StrictMath.toRadians(double),;1.00;1.00
toRGB,2,1,"Transforms a color value assumed to be in this ColorSpace into a value in the default CS_sRGB color space. This method transforms color values using algorithms designed to produce the best perceptual match between input and output colors. In order to do colorimetric conversion of color values, you should use the toCIEXYZ method of this color space to first convert from the input color space to the CS_CIEXYZ color space, and then use the fromCIEXYZ method of the CS_sRGB color space to convert from CS_CIEXYZ to the output color space. See toCIEXYZ and fromCIEXYZ for further information.",;java.awt.color.ColorSpace.toRGB(float[]);java.awt.color.ICC_ColorSpace.toRGB(float[]),;1.00;1.00
toTitleCase,2,0.836776005,"Converts the character argument to titlecase using case mapping information from the UnicodeData file. If a character has no explicit titlecase mapping and is not itself a titlecase char according to UnicodeData, then the uppercase mapping is returned as an equivalent titlecase mapping. If the char argument is already a titlecase char, the same char value will be returned. Note that Character.isTitleCase(Character.toTitleCase(ch)) does not always return true for some ranges of characters. Note: This method cannot handle supplementary characters. To support all Unicode characters, including supplementary characters, use the toTitleCase(int) method.",;java.lang.Character.toTitleCase(char);java.lang.Character.toTitleCase(int),;0.84;0.83
toUnicode,2,0.591255423,"Translates a string from ASCII Compatible Encoding (ACE) to Unicode, as defined by the ToUnicode operation of RFC 3490. ToUnicode never fails. In case of any error, the input string is returned unmodified. A label is an individual part of a domain name. The original ToUnicode operation, as defined in RFC 3490, only operates on a single label. This method can handle both label and entire domain name, by assuming that labels in a domain name are always separated by dots. The following characters are recognized as dots: \u002E (full stop), \u3002 (ideographic full stop), \uFF0E (fullwidth full stop), and \uFF61 (halfwidth ideographic full stop).",";java.net.IDN.toUnicode(String,int);java.net.IDN.toUnicode(String)",;0.59;0.54
toUnsignedInt,2,0.901483828,"Converts the argument to an int by an unsigned conversion. In an unsigned conversion to an int, the high-order 16 bits of the int are zero and the low-order 16 bits are equal to the bits of the short argument. Consequently, zero and positive short values are mapped to a numerically equal int value and negative short values are mapped to an int value equal to the input plus 216.",;java.lang.Byte.toUnsignedInt(byte);java.lang.Short.toUnsignedInt(short),;0.90;0.90
toURI,2,0.5,"Returns a URI equivalent to this URL. This method functions in the same way as new URI (this.toString()). Note, any URL instance that complies with RFC 2396 can be converted to a URI. However, some URLs that are not strictly in compliance can not be converted to a URI.",;java.io.File.toURI();java.net.URL.toURI(),;0.50;0.50
toUri,2,1,Description copied from interface:FileObject,;javax.tools.ForwardingFileObject.toUri();javax.tools.SimpleJavaFileObject.toUri(),;1.00;1.00
toURL,2,0.5,Constructs a URL from this URI. This convenience method works as if invoking it were equivalent to evaluating the expression new URL(this.toString()) after first checking that this URI is absolute.,;java.io.File.toURL();java.net.URI.toURL(),;0.50;0.50
toViewCoordinates,2,0.936967566,Converts a point in pixel coordinates to view coordinates. Subclasses of viewport that support "logical coordinates" will override this method.,;javax.swing.JViewport.toViewCoordinates(Dimension);javax.swing.JViewport.toViewCoordinates(Point),;0.94;0.94
toZonedDateTime,2,0.5,"Converts this object to a ZonedDateTime that represents the same point on the time-line as this GregorianCalendar. Since this object supports a Julian-Gregorian cutover date and ZonedDateTime does not, it is possible that the resulting year, month and day will have different values. The result will represent the correct date in the ISO calendar system, which will also be the same value for Modified Julian Days.",;java.time.OffsetDateTime.toZonedDateTime();java.util.GregorianCalendar.toZonedDateTime(),;0.50;0.50
translateKey,2,0.944483778,"Translates a key object, whose provider may be unknown or potentially untrusted, into a corresponding key object of this key factory.",;java.security.KeyFactory.translateKey(Key);javax.crypto.SecretKeyFactory.translateKey(SecretKey),;0.94;0.94
tryAcquireNanos,2,0.961782425,"Attempts to acquire in exclusive mode, aborting if interrupted, and failing if the given timeout elapses. Implemented by first checking interrupt status, then invoking at least once tryAcquire(int), returning on success. Otherwise, the thread is queued, possibly repeatedly blocking and unblocking, invoking tryAcquire(int) until success or the thread is interrupted or the timeout elapses. This method can be used to implement method Lock.tryLock(long, TimeUnit).",";java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryAcquireNanos(long,long);java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(int,long)",;0.96;0.96
tryAcquireShared,2,1,"Attempts to acquire in shared mode. This method should query if the state of the object permits it to be acquired in the shared mode, and if so to acquire it. This method is always invoked by the thread performing acquire. If this method reports failure, the acquire method may queue the thread, if it is not already queued, until it is signalled by a release from some other thread. The default implementation throws UnsupportedOperationException.",;java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryAcquireShared(long);java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireShared(int),;1.00;1.00
tryAcquireSharedNanos,2,0.953178544,"Attempts to acquire in shared mode, aborting if interrupted, and failing if the given timeout elapses. Implemented by first checking interrupt status, then invoking at least once tryAcquireShared(int), returning on success. Otherwise, the thread is queued, possibly repeatedly blocking and unblocking, invoking tryAcquireShared(int) until success or the thread is interrupted or the timeout elapses.",";java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryAcquireSharedNanos(long,long);java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(int,long)",;0.95;0.95
tryReadLock,2,0.598465193,"Non-exclusively acquires the lock if it is available within the given time and the current thread has not been interrupted. Behavior under timeout and interruption matches that specified for method Lock.tryLock(long,TimeUnit).",";java.util.concurrent.locks.StampedLock.tryReadLock();java.util.concurrent.locks.StampedLock.tryReadLock(long,TimeUnit)",;0.53;0.60
tryRelease,2,1,Attempts to set the state to reflect a release in exclusive mode. This method is always invoked by the thread performing release. The default implementation throws UnsupportedOperationException.,;java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryRelease(long);java.util.concurrent.locks.AbstractQueuedSynchronizer.tryRelease(int),;1.00;1.00
tryReleaseShared,2,1,Attempts to set the state to reflect a release in shared mode. This method is always invoked by the thread performing release. The default implementation throws UnsupportedOperationException.,;java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryReleaseShared(long);java.util.concurrent.locks.AbstractQueuedSynchronizer.tryReleaseShared(int),;1.00;1.00
tryTransfer,2,0.677984057,"Transfers the element to a consumer if it is possible to do so before the timeout elapses. More precisely, transfers the specified element immediately if there exists a consumer already waiting to receive it (in take() or timed poll), else inserts the specified element at the tail of this queue and waits until the element is received by a consumer, returning false if the specified wait time elapses before the element can be transferred.",";java.util.concurrent.LinkedTransferQueue.tryTransfer(E);java.util.concurrent.LinkedTransferQueue.tryTransfer(E,long,TimeUnit)",;0.64;0.68
tryWriteLock,2,0.585686357,"Exclusively acquires the lock if it is available within the given time and the current thread has not been interrupted. Behavior under timeout and interruption matches that specified for method Lock.tryLock(long,TimeUnit).",";java.util.concurrent.locks.StampedLock.tryWriteLock();java.util.concurrent.locks.StampedLock.tryWriteLock(long,TimeUnit)",;0.52;0.59
typesIn,2,0.744461511,Returns a set of types in elements.,;javax.lang.model.util.ElementFilter.typesIn(Iterable&lt;?);javax.lang.model.util.ElementFilter.typesIn(Set&lt;?),;0.74;0.74
unconfigureEditor,2,0.5,Description copied from class:BasicComboBoxUI,;javax.swing.plaf.basic.BasicComboBoxUI.unconfigureEditor();javax.swing.plaf.metal.MetalComboBoxUI.unconfigureEditor(),;0.50;0.50
unmappableCharacterAction,2,0.853553391,Returns this encoder's current action for unmappable-character errors.,;java.nio.charset.CharsetDecoder.unmappableCharacterAction();java.nio.charset.CharsetEncoder.unmappableCharacterAction(),;0.85;0.85
unmarshalXMLSignature,2,0.655539864,Unmarshals a new XMLSignature instance from a mechanism-specific XMLStructure instance. This method is useful if you only want to unmarshal (and not validate) an XMLSignature.,;javax.xml.crypto.dsig.XMLSignatureFactory.unmarshalXMLSignature(XMLValidateContext);javax.xml.crypto.dsig.XMLSignatureFactory.unmarshalXMLSignature(XMLStructure),;0.60;0.66
unregisterListeners,2,1,unregister this DragGestureRecognizer's Listeners with the Component subclasses must override this method,;java.awt.dnd.DragGestureRecognizer.unregisterListeners();java.awt.dnd.MouseDragGestureRecognizer.unregisterListeners(),;1.00;1.00
unregisterMBean,2,1,Description copied from interface:RMIConnection,";javax.management.remote.rmi.RMIConnectionImpl.unregisterMBean(ObjectName,Subject);javax.management.remote.rmi.RMIConnectionImpl_Stub.unregisterMBean(ObjectName,Subject)",;1.00;1.00
unsetCompression,2,0.571495665,"Removes any previous compression type and quality settings. The default implementation sets the instance variable compressionType to null, and the instance variable compressionQuality to 1.0F.",;javax.imageio.ImageWriteParam.unsetCompression();javax.imageio.plugins.jpeg.JPEGImageWriteParam.unsetCompression(),;0.57;0.56
updateChildren,2,0.5,"The superclass behavior will try to update the child views which is not desired in this case, since the children are zones and not directly effected by the changes to the associated element. This is reimplemented to do nothing and return false.",";javax.swing.text.View.updateChildren(DocumentEvent.ElementChange,DocumentEvent,ViewFactory);javax.swing.text.ZoneView.updateChildren(DocumentEvent.ElementChange,DocumentEvent,ViewFactory)",;0.50;0.50
updateLayout,2,0.7333964,Updates the layout in response to receiving notification of change from the model. This is implemented to call preferenceChanged to reschedule a new layout if the ElementChange record is not null.,";javax.swing.text.AsyncBoxView.updateLayout(DocumentEvent.ElementChange,DocumentEvent,Shape);javax.swing.text.View.updateLayout(DocumentEvent.ElementChange,DocumentEvent,Shape)",;0.73;0.73
updateRenderer,2,0.5,Messaged from the tree we're in when the renderer has changed.,";javax.swing.plaf.basic.BasicHTML.updateRenderer(JComponent,String);javax.swing.plaf.basic.BasicTreeUI.updateRenderer()",;0.50;0.50
updateUndoPositions,2,1,"Resets the location for all the UndoPosRef instances in positions. This is meant for internal usage, and is generally not of interest to subclasses.",";javax.swing.text.GapContent.updateUndoPositions(Vector,int,int);javax.swing.text.StringContent.updateUndoPositions(Vector)",;1.00;1.00
updateXML,2,0.5,"Changes in JAXB object tree are updated in its associated XML parse tree. This operation can be thought of as an ""in-place"" marshalling. The difference is that instead of creating a whole new XML tree, this operation updates an existing tree while trying to preserve the XML as much as possible. For example, unknown elements/attributes in XML that were not bound to JAXB will be left untouched (whereas a marshalling operation would create a new tree that doesn't contain any of those.) As a side-effect, this operation updates the association between XML nodes and JAXB objects.",";javax.xml.bind.Binder.updateXML(Object);javax.xml.bind.Binder.updateXML(Object,XmlNode)",;0.50;0.50
useDaylightTime,2,0.5,"Queries if this TimeZone uses Daylight Saving Time. If an underlying TimeZone implementation subclass supports historical and future Daylight Saving Time schedule changes, this method refers to the last known Daylight Saving Time rule that can be a future prediction and may not be the same as the current rule. Consider calling observesDaylightTime() if the current rule should also be taken into account.",;java.util.SimpleTimeZone.useDaylightTime();java.util.TimeZone.useDaylightTime(),;0.50;0.50
useDelimiter,2,0.565218935,Sets this scanner's delimiting pattern to a pattern constructed from the specified String. An invocation of this method of the form useDelimiter(pattern) behaves in exactly the same way as the invocation useDelimiter(Pattern.compile(pattern)). Invoking the reset() method will set the scanner's delimiter to the default.,;java.util.Scanner.useDelimiter(Pattern);java.util.Scanner.useDelimiter(String),;0.51;0.57
useToString,2,1,"Returns whether or not to convert the value to a string before doing comparisons when sorting. If true ModelWrapper.getStringValueAt will be used, otherwise ModelWrapper.getValueAt will be used. It is up to subclasses, such as TableRowSorter, to honor this value in their ModelWrapper implementation.",;javax.swing.DefaultRowSorter.useToString(int);javax.swing.table.TableRowSorter.useToString(int),;1.00;1.00
valueForXPosition,2,1,"Returns the value at the x position. If xPos is beyond the track at the left or the right, this method sets the value to either the minimum or maximum value of the slider, depending on if the slider is inverted or not.",;javax.swing.plaf.basic.BasicSliderUI.valueForXPosition(int);javax.swing.plaf.synth.SynthSliderUI.valueForXPosition(int),;1.00;1.00
valueForYPosition,2,1,"Returns the value at the y position. If yPos is beyond the track at the the bottom or the top, this method sets the value to either the minimum or maximum value of the slider, depending on if the slider is inverted or not.",;javax.swing.plaf.basic.BasicSliderUI.valueForYPosition(int);javax.swing.plaf.synth.SynthSliderUI.valueForYPosition(int),;1.00;1.00
vetoableChange,2,0.5,subclasses may envelope to monitor veto child property changes.,;java.beans.VetoableChangeListenerProxy.vetoableChange(PropertyChangeEvent);java.beans.beancontext.BeanContextSupport.vetoableChange(PropertyChangeEvent),;0.50;0.50
visitArray,2,0.67182232,Visits an array type. This implementation calls defaultAction.,";javax.lang.model.util.SimpleAnnotationValueVisitor6.visitArray(List&lt;?,P);javax.lang.model.util.SimpleTypeVisitor6.visitArray(ArrayType,P)",;0.67;0.67
visitNoType,2,0.559930315,"Visits a NoType instance, dispatching to the visit method for the specific kind of pseudo-type: VOID, PACKAGE, or NONE.",";javax.lang.model.util.SimpleTypeVisitor6.visitNoType(NoType,P);javax.lang.model.util.TypeKindVisitor6.visitNoType(NoType,P)",;0.54;0.56
visitPrimitive,2,0.563368593,"Visits a primitive type, dispatching to the visit method for the specific kind of primitive type: BOOLEAN, BYTE, etc.",";javax.lang.model.util.SimpleTypeVisitor6.visitPrimitive(PrimitiveType,P);javax.lang.model.util.TypeKindVisitor6.visitPrimitive(PrimitiveType,P)",;0.54;0.56
visitVariableAsResourceVariable,2,0.920448208,Visits a RESOURCE_VARIABLE variable element by calling defaultAction.,";javax.lang.model.util.ElementKindVisitor6.visitVariableAsResourceVariable(VariableElement,P);javax.lang.model.util.ElementKindVisitor7.visitVariableAsResourceVariable(VariableElement,P)",;0.92;0.92
waitFor,2,0.614935079,"Causes the current thread to wait, if necessary, until the subprocess represented by this Process object has terminated, or the specified waiting time elapses. If the subprocess has already terminated then this method returns immediately with the value true. If the process has not terminated and the timeout value is less than, or equal to, zero, then this method returns immediately with the value false. The default implementation of this methods polls the exitValue to check if the process has terminated. Concrete implementations of this class are strongly encouraged to override this method with a more efficient implementation.",";java.lang.Process.waitFor();java.lang.Process.waitFor(long,TimeUnit)",;0.58;0.61
waitForAll,2,0.871744633,"Starts loading all images tracked by this media tracker. This method waits until all the images being tracked have finished loading, or until the length of time specified in milliseconds by the ms argument has passed. If there is an error while loading or scaling an image, then that image is considered to have finished loading. Use the isErrorAny or isErrorID methods to check for errors.",;java.awt.MediaTracker.waitForAll();java.awt.MediaTracker.waitForAll(long),;0.86;0.87
waitForID,2,0.85009972,"Starts loading all images tracked by this media tracker with the specified identifier. This method waits until all the images with the specified identifier have finished loading, or until the length of time specified in milliseconds by the ms argument has passed. If there is an error while loading or scaling an image, then that image is considered to have finished loading. Use the statusID, isErrorID, and isErrorAny methods to check for errors.",";java.awt.MediaTracker.waitForID(int);java.awt.MediaTracker.waitForID(int,long)",;0.84;0.85
walk,2,0.608281482,"Return a Stream that is lazily populated with Path by walking the file tree rooted at a given starting file. The file tree is traversed depth-first, the elements in the stream are Path objects that are obtained as if by resolving the relative path against start. The stream walks the file tree as elements are consumed. The Stream returned is guaranteed to have at least one element, the starting file itself. For each file visited, the stream attempts to read its BasicFileAttributes. If the file is a directory and can be opened successfully, entries in the directory, and their descendants will follow the directory in the stream as they are encountered. When all entries have been visited, then the directory is closed. The file tree walk then continues at the next sibling of the directory. The stream is weakly consistent. It does not freeze the file tree while iterating, so it may (or may not) reflect updates to the file tree that occur after returned from this method. By default, symbolic links are not automatically followed by this method. If the options parameter contains the FOLLOW_LINKS option then symbolic links are followed. When following links, and the attributes of the target cannot be read, then this method attempts to get the BasicFileAttributes of the link. If the options parameter contains the FOLLOW_LINKS option then the stream keeps track of directories visited so that cycles can be detected. A cycle arises when there is an entry in a directory that is an ancestor of the directory. Cycle detection is done by recording the file-key of directories, or if file keys are not available, by invoking the isSameFile method to test if a directory is the same file as an ancestor. When a cycle is detected it is treated as an I/O error with an instance of FileSystemLoopException. The maxDepth parameter is the maximum number of levels of directories to visit. A value of 0 means that only the starting file is visited, unless denied by the security manager. A value of MAX_VALUE may be used to indicate that all levels should be visited. When a security manager is installed and it denies access to a file (or directory), then it is ignored and not included in the stream. The returned stream encapsulates one or more DirectoryStreams. If timely disposal of file system resources is required, the try-with-resources construct should be used to ensure that the stream's close method is invoked after the stream operations are completed. Operating on a closed stream will result in an IllegalStateException. If an IOException is thrown when accessing the directory after this method has returned, it is wrapped in an UncheckedIOException which will be thrown from the method that caused the access to take place.",";java.nio.file.Files.walk(Path,int,FileVisitOption...);java.nio.file.Files.walk(Path,FileVisitOption...)",;0.61;0.53
walkFileTree,2,0.507748705,"Walks a file tree. This method walks a file tree rooted at a given starting file. The file tree traversal is depth-first with the given FileVisitor invoked for each file encountered. File tree traversal completes when all accessible files in the tree have been visited, or a visit method returns a result of TERMINATE. Where a visit method terminates due an IOException, an uncaught error, or runtime exception, then the traversal is terminated and the error or exception is propagated to the caller of this method. For each file encountered this method attempts to read its BasicFileAttributes. If the file is not a directory then the visitFile method is invoked with the file attributes. If the file attributes cannot be read, due to an I/O exception, then the visitFileFailed method is invoked with the I/O exception. Where the file is a directory, and the directory could not be opened, then the visitFileFailed method is invoked with the I/O exception, after which, the file tree walk continues, by default, at the next sibling of the directory. Where the directory is opened successfully, then the entries in the directory, and their descendants are visited. When all entries have been visited, or an I/O error occurs during iteration of the directory, then the directory is closed and the visitor's postVisitDirectory method is invoked. The file tree walk then continues, by default, at the next sibling of the directory. By default, symbolic links are not automatically followed by this method. If the options parameter contains the FOLLOW_LINKS option then symbolic links are followed. When following links, and the attributes of the target cannot be read, then this method attempts to get the BasicFileAttributes of the link. If they can be read then the visitFile method is invoked with the attributes of the link (otherwise the visitFileFailed method is invoked as specified above). If the options parameter contains the FOLLOW_LINKS option then this method keeps track of directories visited so that cycles can be detected. A cycle arises when there is an entry in a directory that is an ancestor of the directory. Cycle detection is done by recording the file-key of directories, or if file keys are not available, by invoking the isSameFile method to test if a directory is the same file as an ancestor. When a cycle is detected it is treated as an I/O error, and the visitFileFailed method is invoked with an instance of FileSystemLoopException. The maxDepth parameter is the maximum number of levels of directories to visit. A value of 0 means that only the starting file is visited, unless denied by the security manager. A value of MAX_VALUE may be used to indicate that all levels should be visited. The visitFile method is invoked for all files, including directories, encountered at maxDepth, unless the basic file attributes cannot be read, in which case the visitFileFailed method is invoked. If a visitor returns a result of null then NullPointerException is thrown. When a security manager is installed and it denies access to a file (or directory), then it is ignored and the visitor is not invoked for that file (or directory).",";java.nio.file.Files.walkFileTree(Path,Set&lt;FileVisitOption&gt;,int,FileVisitor&lt;?);java.nio.file.Files.walkFileTree(Path,FileVisitor&lt;?)",;0.51;0.50
whenCompleteAsync,2,1,Description copied from interface:CompletionStage,";java.util.concurrent.CompletableFuture.whenCompleteAsync(BiConsumer&lt;?,?);java.util.concurrent.CompletableFuture.whenCompleteAsync(BiConsumer&lt;?,?,Executor)",;1.00;1.00
windowActivated,2,0.5,Invoked when a window is activated.,;java.awt.AWTEventMulticaster.windowActivated(WindowEvent);java.awt.event.WindowAdapter.windowActivated(WindowEvent),;0.50;0.50
windowClosed,2,0.5,Invoked when a window has been closed.,;java.awt.AWTEventMulticaster.windowClosed(WindowEvent);java.awt.event.WindowAdapter.windowClosed(WindowEvent),;0.50;0.50
windowClosing,2,0.5,Invoked when a window is in the process of being closed. The close operation can be overridden at this point.,;java.awt.AWTEventMulticaster.windowClosing(WindowEvent);java.awt.event.WindowAdapter.windowClosing(WindowEvent),;0.50;0.50
windowDeactivated,2,0.5,Invoked when a window is de-activated.,;java.awt.AWTEventMulticaster.windowDeactivated(WindowEvent);java.awt.event.WindowAdapter.windowDeactivated(WindowEvent),;0.50;0.50
windowDeiconified,2,0.5,Invoked when a window is de-iconified.,;java.awt.AWTEventMulticaster.windowDeiconified(WindowEvent);java.awt.event.WindowAdapter.windowDeiconified(WindowEvent),;0.50;0.50
windowGainedFocus,2,0.5,"Invoked when the Window is set to be the focused Window, which means that the Window, or one of its subcomponents, will receive keyboard events.",;java.awt.AWTEventMulticaster.windowGainedFocus(WindowEvent);java.awt.event.WindowAdapter.windowGainedFocus(WindowEvent),;0.50;0.50
windowIconified,2,0.5,Invoked when a window is iconified.,;java.awt.AWTEventMulticaster.windowIconified(WindowEvent);java.awt.event.WindowAdapter.windowIconified(WindowEvent),;0.50;0.50
windowLostFocus,2,0.5,"Invoked when the Window is no longer the focused Window, which means that keyboard events will no longer be delivered to the Window or any of its subcomponents.",;java.awt.AWTEventMulticaster.windowLostFocus(WindowEvent);java.awt.event.WindowAdapter.windowLostFocus(WindowEvent),;0.50;0.50
windowOpened,2,0.5,Invoked when a window has been opened.,;java.awt.AWTEventMulticaster.windowOpened(WindowEvent);java.awt.event.WindowAdapter.windowOpened(WindowEvent),;0.50;0.50
windowStateChanged,2,0.5,Invoked when a window state is changed.,;java.awt.AWTEventMulticaster.windowStateChanged(WindowEvent);java.awt.event.WindowAdapter.windowStateChanged(WindowEvent),;0.50;0.50
withOffsetSameInstant,2,0.911599122,"Returns a copy of this OffsetTime with the specified offset ensuring that the result is at the same instant on an implied day. This method returns an object with the specified ZoneOffset and a LocalTime adjusted by the difference between the two offsets. This will result in the old and new objects representing the same instant on an implied day. This is useful for finding the local time in a different offset. For example, if this time represents 10:30+02:00 and the offset specified is +03:00, then this method will return 11:30+03:00. To change the offset without adjusting the local time use withOffsetSameLocal(java.time.ZoneOffset). This instance is immutable and unaffected by this method call.",;java.time.OffsetDateTime.withOffsetSameInstant(ZoneOffset);java.time.OffsetTime.withOffsetSameInstant(ZoneOffset),;0.91;0.91
withOffsetSameLocal,2,0.91307236,"Returns a copy of this OffsetDateTime with the specified offset ensuring that the result has the same local date-time. This method returns an object with the same LocalDateTime and the specified ZoneOffset. No calculation is needed or performed. For example, if this time represents 2007-12-03T10:30+02:00 and the offset specified is +03:00, then this method will return 2007-12-03T10:30+03:00. To take into account the difference between the offsets, and adjust the time fields, use withOffsetSameInstant(java.time.ZoneOffset). This instance is immutable and unaffected by this method call.",;java.time.OffsetDateTime.withOffsetSameLocal(ZoneOffset);java.time.OffsetTime.withOffsetSameLocal(ZoneOffset),;0.91;0.91
withResolverFields,2,1,"Returns a copy of this formatter with a new set of resolver fields. This returns a formatter with similar state to this formatter but with the resolver fields set. By default, a formatter has no resolver fields. Changing the resolver fields only has an effect during parsing. Parsing a text string occurs in two phases. Phase 1 is a basic text parse according to the fields added to the builder. Phase 2 resolves the parsed field-value pairs into date and/or time objects. The resolver fields are used to filter the field-value pairs between phase 1 and 2. This can be used to select between two or more ways that a date or time might be resolved. For example, if the formatter consists of year, month, day-of-month and day-of-year, then there are two ways to resolve a date. Calling this method with the arguments YEAR and DAY_OF_YEAR will ensure that the date is resolved using the year and day-of-year, effectively meaning that the month and day-of-month are ignored during the resolving phase. In a similar manner, this method can be used to ignore secondary fields that would otherwise be cross-checked. For example, if the formatter consists of year, month, day-of-month and day-of-week, then there is only one way to resolve a date, but the parsed value for day-of-week will be cross-checked against the resolved date. Calling this method with the arguments YEAR, MONTH_OF_YEAR and DAY_OF_MONTH will ensure that the date is resolved correctly, but without any cross-check for the day-of-week. In implementation terms, this method behaves as follows. The result of the parsing phase can be considered to be a map of field to value. The behavior of this method is to cause that map to be filtered between phase 1 and 2, removing all fields other than those specified as arguments to this method. This instance is immutable and unaffected by this method call.",;java.time.format.DateTimeFormatter.withResolverFields(TemporalField...);java.time.format.DateTimeFormatter.withResolverFields(Set&lt;TemporalField&gt;),;1.00;1.00
withZone,2,0.513056344,"Returns a copy of this formatter with a new override zone. This returns a formatter with similar state to this formatter but with the override zone set. By default, a formatter has no override zone, returning null. If an override is added, then any instant that is formatted or parsed will be affected. When formatting, if the temporal object contains an instant, then it will be converted to a zoned date-time using the override zone. Whether the temporal is an instant is determined by querying the INSTANT_SECONDS field. If the input has a chronology then it will be retained unless overridden. If the input does not have a chronology, such as Instant, then the ISO chronology will be used. If the temporal object does not contain an instant, but does contain an offset then an additional check is made. If the normalized override zone is an offset that differs from the offset of the temporal, then a DateTimeException is thrown. In all other cases, the override zone is added to the temporal, replacing any previous zone, but without changing the date/time. When parsing, there are two distinct cases to consider. If a zone has been parsed directly from the text, perhaps because DateTimeFormatterBuilder.appendZoneId() was used, then this override zone has no effect. If no zone has been parsed, then this override zone will be included in the result of the parse where it can be used to build instants and date-times. This instance is immutable and unaffected by this method call.",;java.time.Clock.withZone(ZoneId);java.time.format.DateTimeFormatter.withZone(ZoneId),;0.50;0.51
writeExpression,2,0.5,"Records the Expression so that the Encoder will produce the actual output when the stream is flushed. This method should only be invoked within the context of initializing a persistence delegate or setting up an encoder to read from a resource bundle. For more information about using resource bundles with the XMLEncoder, see http://java.sun.com/products/jfc/tsc/articles/persistence4/#i18n",;java.beans.Encoder.writeExpression(Expression);java.beans.XMLEncoder.writeExpression(Expression),;0.50;0.50
writeLineSeparator,2,0.580103605,Writes the line separator. This is overriden to make sure we don't replace the newline content in case it is outside normal ascii.,;javax.swing.text.AbstractWriter.writeLineSeparator();javax.swing.text.html.HTMLWriter.writeLineSeparator(),;0.58;0.58
writeReplace,2,0.5,Replaces the CertPath to be serialized with a CertPathRep object.,;java.security.cert.Certificate.writeReplace();java.security.cert.CertPath.writeReplace(),;0.50;0.50
writeStatement,2,0.516735767,"Writes statement oldStm to the stream. The oldStm should be written entirely in terms of the callers environment, i.e. the target and all arguments should be part of the object graph being written. These expressions represent a series of ""what happened"" expressions which tell the output stream how to produce an object graph like the original. The implementation of this method will produce a second expression to represent the same expression in an environment that will exist when the stream is read. This is achieved simply by calling writeObject on the target and all the arguments and building a new expression with the results.",;java.beans.Encoder.writeStatement(Statement);java.beans.XMLEncoder.writeStatement(Statement),;0.52;0.51
yPositionForValue,2,1,Returns the y location for the specified value. No checking is done on the arguments. In particular if trackHeight is negative undefined results may occur.,";javax.swing.plaf.basic.BasicSliderUI.yPositionForValue(int,int,int);javax.swing.plaf.synth.SynthSliderUI.yPositionForValue(int,int,int)",;1.00;1.00
_get_interface_def,3,0.333333333,"Returns an InterfaceDef object as a CORBA::Object that defines the runtime type of the CORBA::Object implemented by the Servant. The invoker of _get_interface_def must narrow the result to an InterfaceDef in order to use it. This default implementation of _get_interface_def() can be overridden by derived servants if the default behavior is not adequate. As defined in the CORBA 2.3.1 specification, section 11.3.1, the default behavior of _get_interface_def() is to use the most derived interface of a static servant or the most derived interface retrieved from a dynamic servant to obtain the InterfaceDef. This behavior must be supported by the Delegate that implements the Servant.",;org.omg.CORBA.LocalObject._get_interface_def();org.omg.CORBA.portable.ObjectImpl._get_interface_def();org.omg.PortableServer.Servant._get_interface_def(),;0.33;0.33;0.33
_is_a,3,0.333333333,Checks to see if the specified repository_id is present on the list returned by _all_interfaces() or is the repository_id for the generic CORBA Object.,;org.omg.CORBA.LocalObject._is_a(String);org.omg.CORBA.portable.ObjectImpl._is_a(String);org.omg.PortableServer.Servant._is_a(String),;0.33;0.33;0.33
_non_existent,3,0.333333333,Checks for the existence of an Object. The Servant provides a default implementation of _non_existent() that can be overridden by derived servants.,;org.omg.CORBA.LocalObject._non_existent();org.omg.CORBA.portable.ObjectImpl._non_existent();org.omg.PortableServer.Servant._non_existent(),;0.33;0.33;0.33
_orb,3,0.333333333,Returns the instance of the ORB currently associated with the Servant (convenience method).,;org.omg.CORBA.LocalObject._orb();org.omg.CORBA.portable.ObjectImpl._orb();org.omg.PortableServer.Servant._orb(),;0.33;0.33;0.33
abort,3,0.566486378,"Requests that any current write operation be aborted. The contents of the output following the abort will be undefined. Writers should call clearAbortRequest at the beginning of each write operation, and poll the value of abortRequested regularly during the write.",;java.net.CacheRequest.abort();javax.imageio.ImageReader.abort();javax.imageio.ImageWriter.abort(),;0.33;0.57;0.57
adapt,3,0.756174861,"Returns a new ForkJoinTask that performs the run method of the given Runnable as its action, and returns the given result upon join().",";java.util.concurrent.ForkJoinTask.adapt(Runnable);java.util.concurrent.ForkJoinTask.adapt(Runnable,T);java.util.concurrent.ForkJoinTask.adapt(Callable&lt;?)",;0.76;0.76;0.63
addAdjustmentListener,3,0.596744128,"Adds the specified adjustment listener to receive adjustment events from this ScrollPaneAdjustable. If l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Scrollbar.addAdjustmentListener(AdjustmentListener);java.awt.ScrollPaneAdjustable.addAdjustmentListener(AdjustmentListener);javax.swing.JScrollBar.addAdjustmentListener(AdjustmentListener),;0.60;0.60;0.33
addConsumer,3,0.66788637,Adds an ImageConsumer to the list of consumers interested in data for this image.,;java.awt.image.FilteredImageSource.addConsumer(ImageConsumer);java.awt.image.MemoryImageSource.addConsumer(ImageConsumer);java.awt.image.renderable.RenderableImageProducer.addConsumer(ImageConsumer),;0.40;0.67;0.67
addDirtyRegion,3,0.608838939,Adds applet to the list of Components that need to be repainted.,";javax.swing.RepaintManager.addDirtyRegion(JComponent,int,int,int,int);javax.swing.RepaintManager.addDirtyRegion(Window,int,int,int,int);javax.swing.RepaintManager.addDirtyRegion(Applet,int,int,int,int)",;0.33;0.61;0.61
addEdit,3,0.333333333,"Adds an UndoableEdit to this UndoManager, if it's possible. This removes all edits from the index of the next edit to the end of the edits list. If end has been invoked the edit is not added and false is returned. If end hasn't been invoked this returns true.",;javax.swing.undo.AbstractUndoableEdit.addEdit(UndoableEdit);javax.swing.undo.CompoundEdit.addEdit(UndoableEdit);javax.swing.undo.UndoManager.addEdit(UndoableEdit),;0.33;0.33;0.33
addSelectionInterval,3,0.380341955,"Changes the selection to be the set union of the current selection and the indices between index0 and index1 inclusive. In SINGLE_SELECTION selection mode, this is equivalent to calling setSelectionInterval, and only the second index is used. In SINGLE_INTERVAL_SELECTION selection mode, this method behaves like setSelectionInterval, unless the given interval is immediately adjacent to or overlaps the existing selection, and can therefore be used to grow it. If this represents a change to the current selection, then each ListSelectionListener is notified of the change. Note that index0 doesn't have to be less than or equal to index1. If either index is -1, this method does nothing and returns without exception. Otherwise, if either index is less than -1, an IndexOutOfBoundsException is thrown.",";javax.swing.DefaultListSelectionModel.addSelectionInterval(int,int);javax.swing.JList.addSelectionInterval(int,int);javax.swing.JTree.addSelectionInterval(int,int)",;0.38;0.37;0.33
addSelectionPaths,3,0.367820811,"Adds paths to the current selection. If any of the paths in paths are not currently in the selection the TreeSelectionListeners are notified. This has no effect if paths is null. The lead path is set to the last element in paths. If the selection mode is CONTIGUOUS_TREE_SELECTION, and adding the new paths would make the selection discontiguous. Then two things can result: if the TreePaths in paths are contiguous, then the selection becomes these TreePaths, otherwise the TreePaths aren't contiguous and the selection becomes the first TreePath in paths.",;javax.swing.JTree.addSelectionPaths(TreePath[]);javax.swing.JTree.EmptySelectionModel.addSelectionPaths(TreePath[]);javax.swing.tree.DefaultTreeSelectionModel.addSelectionPaths(TreePath[]),;0.36;0.33;0.37
addStyle,3,0.969864354,Adds a new style into the logical style hierarchy. Style attributes resolve from bottom up so an attribute specified in a child will override an attribute specified in the parent.,";javax.swing.JTextPane.addStyle(String,Style);javax.swing.text.DefaultStyledDocument.addStyle(String,Style);javax.swing.text.StyleContext.addStyle(String,Style)",;0.97;0.97;0.94
addTab,3,0.769007599,"Adds a component represented by a title and/or icon, either of which can be null. Cover method for insertTab.",";javax.swing.JTabbedPane.addTab(String,Icon,Component,String);javax.swing.JTabbedPane.addTab(String,Icon,Component);javax.swing.JTabbedPane.addTab(String,Component)",;0.72;0.77;0.59
addTreeSelectionListener,3,0.333333333,Adds x to the list of listeners that are notified each time the set of selected TreePaths changes.,;javax.swing.JTree.addTreeSelectionListener(TreeSelectionListener);javax.swing.JTree.EmptySelectionModel.addTreeSelectionListener(TreeSelectionListener);javax.swing.tree.DefaultTreeSelectionModel.addTreeSelectionListener(TreeSelectionListener),;0.33;0.33;0.33
addURL,3,0.721766296,Appends the specified URL to the list of URLs to search for classes and resources.,;java.net.URLClassLoader.addURL(URL);javax.management.loading.MLet.addURL(URL);javax.management.loading.MLet.addURL(String),;0.55;0.72;0.72
after,3,0.333333333,Tests if this date is after the specified date.,;java.sql.Timestamp.after(Timestamp);java.util.Calendar.after(Object);java.util.Date.after(Date),;0.33;0.33;0.33
and,3,0.351434391,Performs a logical AND of this target bit set with the argument bit set. This bit set is modified so that each bit in it has the value true if and only if it both initially had the value true and the corresponding bit in the bit set argument also had the value true.,";java.math.BigInteger.and(BigInteger);java.util.BitSet.and(BitSet);javax.management.Query.and(QueryExp,QueryExp)",;0.35;0.35;0.33
appendValue,3,0.492624803,"Appends the value of a date-time field to the formatter providing full control over formatting. The value of the field will be output during a format. If the value cannot be obtained then an exception will be thrown. This method provides full control of the numeric formatting, including zero-padding and the positive/negative sign. The parser for a variable width value such as this normally behaves greedily, accepting as many digits as possible. This behavior can be affected by 'adjacent value parsing'. See appendValue(java.time.temporal.TemporalField, int) for full details. In strict parsing mode, the minimum number of parsed digits is minWidth and the maximum is maxWidth. In lenient parsing mode, the minimum number of parsed digits is one and the maximum is 19 (except as limited by adjacent value parsing). If this method is invoked with equal minimum and maximum widths and a sign style of NOT_NEGATIVE then it delegates to appendValue(TemporalField,int). In this scenario, the formatting and parsing behavior described there occur.",";java.time.format.DateTimeFormatterBuilder.appendValue(TemporalField);java.time.format.DateTimeFormatterBuilder.appendValue(TemporalField,int);java.time.format.DateTimeFormatterBuilder.appendValue(TemporalField,int,int,SignStyle)",;0.46;0.41;0.49
apply,3,0.333333333,Applies the ValueExp on a MBean.,;javax.management.AttributeValueExp.apply(ObjectName);javax.management.ObjectName.apply(ObjectName);javax.management.StringValueExp.apply(ObjectName),;0.33;0.33;0.33
applyComponentOrientation,3,0.768189873,"Sets the ComponentOrientation property of this container and all components contained within it. This method changes layout-related information, and therefore, invalidates the component hierarchy.",;java.awt.Component.applyComponentOrientation(ComponentOrientation);java.awt.Container.applyComponentOrientation(ComponentOrientation);javax.swing.JMenu.applyComponentOrientation(ComponentOrientation),;0.77;0.77;0.61
atOffset,3,0.628589916,Combines this date-time with an offset to create an OffsetDateTime. This returns an OffsetDateTime formed from this date-time at the specified offset. All possible combinations of date-time and offset are valid.,;java.time.Instant.atOffset(ZoneOffset);java.time.LocalDateTime.atOffset(ZoneOffset);java.time.LocalTime.atOffset(ZoneOffset),;0.50;0.63;0.59
awaitTermination,3,0.417474429,"Blocks until all tasks have completed execution after a shutdown request, or the timeout occurs, or the current thread is interrupted, whichever happens first. Because the commonPool() never terminates until program shutdown, when applied to the common pool, this method is equivalent to awaitQuiescence(long, TimeUnit) but always returns false.",";java.nio.channels.AsynchronousChannelGroup.awaitTermination(long,TimeUnit);java.util.concurrent.ForkJoinPool.awaitTermination(long,TimeUnit);java.util.concurrent.ThreadPoolExecutor.awaitTermination(long,TimeUnit)",;0.40;0.42;0.33
before,3,0.333333333,Tests if this date is before the specified date.,;java.sql.Timestamp.before(Timestamp);java.util.Calendar.before(Object);java.util.Date.before(Date),;0.33;0.33;0.33
between,3,0.387315626,"Obtains a Period consisting of the number of years, months, and days between two dates. The start date is included, but the end date is not. The period is calculated by removing complete months, then calculating the remaining number of days, adjusting to ensure that both have the same sign. The number of months is then split into years and months based on a 12 month year. A month is considered if the end day-of-month is greater than or equal to the start day-of-month. For example, from 2010-01-15 to 2011-03-18 is one year, two months and three days. The result of this method can be a negative period if the end is before the start. The negative sign will be the same in each of year, month and day.",";java.time.Duration.between(Temporal,Temporal);java.time.Period.between(LocalDate,LocalDate);javax.management.Query.between(ValueExp,ValueExp,ValueExp)",;0.39;0.39;0.33
bitCount,3,0.715103897,Returns the number of one-bits in the two's complement binary representation of the specified long value. This function is sometimes referred to as the population count.,;java.lang.Integer.bitCount(int);java.lang.Long.bitCount(long);java.math.BigInteger.bitCount(),;0.72;0.72;0.50
cancelCellEditing,3,0.333333333,Messages cancelCellEditing to the realEditor and removes it from this instance.,;javax.swing.AbstractCellEditor.cancelCellEditing();javax.swing.DefaultCellEditor.cancelCellEditing();javax.swing.tree.DefaultTreeCellEditor.cancelCellEditing(),;0.00;0.33;0.33
canDisplayUpTo,3,0.538383439,Indicates whether or not this Font can display the characters in the specified text starting at start and ending at limit. This method is a convenience overload.,";java.awt.Font.canDisplayUpTo(String);java.awt.Font.canDisplayUpTo(char[],int,int);java.awt.Font.canDisplayUpTo(CharacterIterator,int,int)",;0.42;0.54;0.52
canEncode,3,0.521653976,Tells whether or not this encoder can encode the given character. This method returns false if the given character is a surrogate character; such characters can be interpreted only when they are members of a pair consisting of a high surrogate followed by a low surrogate. The canEncode(CharSequence) method may be used to test whether or not a character sequence can be encoded. This method may modify this encoder's state; it should therefore not be invoked if an encoding operation is already in progress. The default implementation of this method is not very efficient; it should generally be overridden to improve performance.,;java.nio.charset.Charset.canEncode();java.nio.charset.CharsetEncoder.canEncode(char);java.nio.charset.CharsetEncoder.canEncode(CharSequence),;0.37;0.52;0.52
canRedo,3,0.333333333,"Returns true if edits may be redone. If end has been invoked, this returns the value from super. Otherwise, this returns true if there are any edits to be redone (editToBeRedone returns non-null).",;javax.swing.undo.AbstractUndoableEdit.canRedo();javax.swing.undo.CompoundEdit.canRedo();javax.swing.undo.UndoManager.canRedo(),;0.33;0.33;0.33
canUndo,3,0.333333333,"Returns true if edits may be undone. If end has been invoked, this returns the value from super. Otherwise this returns true if there are any edits to be undone (editToBeUndone returns non-null).",;javax.swing.undo.AbstractUndoableEdit.canUndo();javax.swing.undo.CompoundEdit.canUndo();javax.swing.undo.UndoManager.canUndo(),;0.33;0.33;0.33
channel,3,0.583819678,Returns the channel for which this key was created. This method will continue to return the channel even after the key is cancelled.,;java.nio.channels.FileLock.channel();java.nio.channels.MembershipKey.channel();java.nio.channels.SelectionKey.channel(),;0.33;0.58;0.58
check,3,0.493387549,Performs the check(s) on the specified certificate using its internal state and removes any critical extensions that it processes from the specified collection of OID strings that represent the unresolved critical extensions. The certificates are presented in the order specified by the init method.,";java.security.cert.PKIXCertPathChecker.check(Certificate,Collection&lt;String&gt;);java.security.cert.PKIXCertPathChecker.check(Certificate);javax.management.loading.MLet.check(String,URL,String,MLetContent)",;0.49;0.49;0.33
checkImage,3,0.66110984,"Returns the status of the construction of a screen representation of the specified image. This method does not cause the image to begin loading. An application must use the prepareImage method to force the loading of an image. The checkImage method of Component calls its peer's checkImage method to calculate the flags. If this component does not yet have a peer, the component's toolkit's checkImage method is called instead. Information on the flags returned by this method can be found with the discussion of the ImageObserver interface.",";java.awt.Component.checkImage(Image,ImageObserver);java.awt.Component.checkImage(Image,int,int,ImageObserver);java.awt.Toolkit.checkImage(Image,int,int,ImageObserver)",;0.60;0.66;0.58
checkRead,3,0.720003683,"Throws a SecurityException if the calling thread is not allowed to read the file specified by the string argument. This method calls checkPermission with the FilePermission(file,""read"") permission. If you override this method, then you should make a call to super.checkRead at the point the overridden method would normally throw an exception.",";java.lang.SecurityManager.checkRead(FileDescriptor);java.lang.SecurityManager.checkRead(String);java.lang.SecurityManager.checkRead(String,Object)",;0.68;0.72;0.61
closeClient,3,0.666666667,Description copied from class:RMIServerImpl,;javax.management.remote.rmi.RMIIIOPServerImpl.closeClient(RMIConnection);javax.management.remote.rmi.RMIJRMPServerImpl.closeClient(RMIConnection);javax.management.remote.rmi.RMIServerImpl.closeClient(RMIConnection),;0.67;0.67;0.33
closeServer,3,0.895549241,"Called by RMIServerImpl.close() to close the connector server by unexporting this object. After returning from this method, the connector server must not accept any new connections.",;javax.management.remote.rmi.RMIIIOPServerImpl.closeServer();javax.management.remote.rmi.RMIJRMPServerImpl.closeServer();javax.management.remote.rmi.RMIServerImpl.closeServer(),;0.90;0.90;0.79
commitEdit,3,0.406165707,"Commits the currently edited value to the SpinnerModel. If the editor is an instance of DefaultEditor, the call if forwarded to the editor, otherwise this does nothing.",;javax.swing.JFormattedTextField.commitEdit();javax.swing.JSpinner.commitEdit();javax.swing.JSpinner.DefaultEditor.commitEdit(),;0.33;0.41;0.40
configureEditor,3,0.333333333,Description copied from class:BasicComboBoxUI,";javax.swing.JComboBox.configureEditor(ComboBoxEditor,Object);javax.swing.plaf.basic.BasicComboBoxUI.configureEditor();javax.swing.plaf.metal.MetalComboBoxUI.configureEditor()",;0.33;0.33;0.33
constant,3,0.496751726,"Returns a strut -- a spring whose minimum, preferred, and maximum values each have the value pref.",";java.lang.invoke.MethodHandles.constant(Class&lt;?&gt;,Object);javax.swing.Spring.constant(int);javax.swing.Spring.constant(int,int,int)",;0.33;0.50;0.50
consume,3,0.666666667,Consumes this event so that it will not be processed in the default manner by the source which originated it.,;java.awt.AWTEvent.consume();java.awt.event.InputEvent.consume();java.awt.event.InputMethodEvent.consume(),;0.33;0.67;0.67
containsCustomComponents,3,0.333333333,Invokes the containsCustomComponents method on each UI handled by this object.,;javax.swing.plaf.OptionPaneUI.containsCustomComponents(JOptionPane);javax.swing.plaf.basic.BasicOptionPaneUI.containsCustomComponents(JOptionPane);javax.swing.plaf.multi.MultiOptionPaneUI.containsCustomComponents(JOptionPane),;0.33;0.33;0.33
convertRowIndexToModel,3,0.713453489,"Returns the location of index in terms of the underlying model. That is, for the row index in the coordinates of the view this returns the row index in terms of the underlying model.",;javax.swing.DefaultRowSorter.convertRowIndexToModel(int);javax.swing.JTable.convertRowIndexToModel(int);javax.swing.RowSorter.convertRowIndexToModel(int),;0.71;0.43;0.71
convertRowIndexToView,3,0.708256413,"Returns the location of index in terms of the view. That is, for the row index in the coordinates of the underlying model this returns the row index in terms of the view.",;javax.swing.DefaultRowSorter.convertRowIndexToView(int);javax.swing.JTable.convertRowIndexToView(int);javax.swing.RowSorter.convertRowIndexToView(int),;0.71;0.42;0.71
count,3,0.401493358,Returns the number of NamedValue objects that have been added to this NVList object.,;org.omg.CORBA.ContextList.count();org.omg.CORBA.ExceptionList.count();org.omg.CORBA.NVList.count(),;0.40;0.33;0.40
countItems,3,1,"Deprecated.As of JDK version 1.1, replaced by getItemCount().",;java.awt.Choice.countItems();java.awt.List.countItems();java.awt.Menu.countItems(),;1.00;1.00;1.00
createActionChangeListener,3,0.806783462,Returns a properly configured PropertyChangeListener which updates the control as changes to the Action occur.,;javax.swing.JMenu.createActionChangeListener(JMenuItem);javax.swing.JPopupMenu.createActionChangeListener(JMenuItem);javax.swing.JToolBar.createActionChangeListener(JButton),;0.81;0.81;0.67
createActionComponent,3,0.719041776,Factory method which creates the JMenuItem for Actions added to the JPopupMenu.,;javax.swing.JMenu.createActionComponent(Action);javax.swing.JPopupMenu.createActionComponent(Action);javax.swing.JToolBar.createActionComponent(Action),;0.72;0.72;0.54
createActionPropertyChangeListener,3,0.964306293,Creates and returns a PropertyChangeListener that is responsible for listening for changes from the specified Action and updating the appropriate properties. Warning: If you subclass this do not create an anonymous inner class. If you do the lifetime of the textfield will be tied to that of the Action.,;javax.swing.AbstractButton.createActionPropertyChangeListener(Action);javax.swing.JComboBox.createActionPropertyChangeListener(Action);javax.swing.JTextField.createActionPropertyChangeListener(Action),;0.96;0.96;0.96
createArrowButton,3,0.666666667,Creates a button which will be used as the control to show or hide the popup portion of the combo box.,;javax.swing.plaf.basic.BasicComboBoxUI.createArrowButton();javax.swing.plaf.metal.MetalComboBoxUI.createArrowButton();javax.swing.plaf.synth.SynthComboBoxUI.createArrowButton(),;0.67;0.33;0.67
createAttachmentPart,3,0.398155708,Creates an AttachmentPart object and populates it with the specified data of the specified content type. The type of the Object should correspond to the value given for the Content-Type.,";javax.xml.soap.SOAPMessage.createAttachmentPart();javax.xml.soap.SOAPMessage.createAttachmentPart(DataHandler);javax.xml.soap.SOAPMessage.createAttachmentPart(Object,String)",;0.33;0.37;0.40
createAttribute,3,1,Create a new Attribute,";javax.xml.stream.XMLEventFactory.createAttribute(String,String,String,String);javax.xml.stream.XMLEventFactory.createAttribute(String,String);javax.xml.stream.XMLEventFactory.createAttribute(QName,String)",;1.00;1.00;1.00
createBandedRaster,3,0.762260991,"Creates a Raster based on a BandedSampleModel with the specified data type, width, height, scanline stride, bank indices and band offsets. The number of bands is inferred from bankIndices.length and bandOffsets.length, which must be the same. The upper left corner of the Raster is given by the location argument. The dataType parameter should be one of the enumerated values defined in the DataBuffer class. The only dataTypes supported currently are TYPE_BYTE, TYPE_USHORT, and TYPE_INT.",";java.awt.image.Raster.createBandedRaster(int,int,int,int,Point);java.awt.image.Raster.createBandedRaster(int,int,int,int,int[],int[],Point);java.awt.image.Raster.createBandedRaster(DataBuffer,int,int,int,int[],int[],Point)",;0.72;0.76;0.70
createBevelBorder,3,0.486894986,"Creates a beveled border of the specified type, using the specified highlighting and shadowing. The outer edge of the highlighted area uses a brighter shade of the highlight color. The inner edge of the shadow area uses a brighter shade of the shadow color.",";javax.swing.BorderFactory.createBevelBorder(int);javax.swing.BorderFactory.createBevelBorder(int,Color,Color);javax.swing.BorderFactory.createBevelBorder(int,Color,Color,Color,Color)",;0.48;0.49;0.46
createCaret,3,0.666666667,Fetches a caret that can navigate through views produced by the associated ViewFactory.,;javax.swing.plaf.basic.BasicTextUI.createCaret();javax.swing.text.DefaultEditorKit.createCaret();javax.swing.text.EditorKit.createCaret(),;0.33;0.67;0.67
createCredential,3,0.758621801,"Factory method for acquiring a single mechanism credential. GSS-API mechanism providers must impose a local access-control policy on callers to prevent unauthorized callers from acquiring credentials to which they are not entitled. The kinds of permissions needed by different mechanism providers will be documented on a per-mechanism basis. A failed permission check might cause a SecurityException to be thrown from this method. Non-default values for lifetime cannot always be honored by the underlying mechanisms, thus applications should be prepared to call getRemainingLifetime on the returned credential.",";org.ietf.jgss.GSSManager.createCredential(int);org.ietf.jgss.GSSManager.createCredential(GSSName,int,Oid,int);org.ietf.jgss.GSSManager.createCredential(GSSName,int,Oid[],int)",;0.70;0.76;0.71
createDashedBorder,3,0.764781971,"Creates a dashed border of the specified paint, relative length, and relative spacing. If the specified paint is null, the component's foreground color will be used to render the border. The width of a dash line is equal to 1. A dash line is not rounded.",";javax.swing.BorderFactory.createDashedBorder(Paint);javax.swing.BorderFactory.createDashedBorder(Paint,float,float);javax.swing.BorderFactory.createDashedBorder(Paint,float,float,float,boolean)",;0.70;0.76;0.65
createDataContentHandler,3,0.462685286,"Locate a DataContentHandler that corresponds to the MIME type. The mechanism and semantics for determining this are determined by the implementation of the particular CommandMap. The DataSource provides extra information, such as the file name, that a CommandMap implementation may use to further refine the choice of DataContentHandler. The implementation in this class simply calls the createDataContentHandler method that ignores this argument.",";javax.activation.CommandMap.createDataContentHandler(String);javax.activation.CommandMap.createDataContentHandler(String,DataSource);javax.activation.MailcapCommandMap.createDataContentHandler(String)",;0.41;0.46;0.33
createDefaultDivider,3,1,Creates the default divider.,;javax.swing.plaf.basic.BasicSplitPaneUI.createDefaultDivider();javax.swing.plaf.metal.MetalSplitPaneUI.createDefaultDivider();javax.swing.plaf.synth.SynthSplitPaneUI.createDefaultDivider(),;1.00;1.00;1.00
createDefaultRoot,3,1,Creates the root element to be used to represent the default document structure.,;javax.swing.text.DefaultStyledDocument.createDefaultRoot();javax.swing.text.PlainDocument.createDefaultRoot();javax.swing.text.html.HTMLDocument.createDefaultRoot(),;1.00;1.00;1.00
createEndElement,3,1,Create a new EndElement,";javax.xml.stream.XMLEventFactory.createEndElement(QName,Iterator);javax.xml.stream.XMLEventFactory.createEndElement(String,String,String);javax.xml.stream.XMLEventFactory.createEndElement(String,String,String,Iterator)",;1.00;1.00;1.00
createEndpoint,3,0.624792817,"Creates an endpoint object with the provided binding, implementation object and web service features. Provider implementations must override the default implementation.",";javax.xml.ws.spi.Provider.createEndpoint(String,Object);javax.xml.ws.spi.Provider.createEndpoint(String,Object,WebServiceFeature...);javax.xml.ws.spi.Provider.createEndpoint(String,Class&lt;?&gt;,Invoker,WebServiceFeature...)",;0.48;0.62;0.59
createInterleavedRaster,3,0.845682066,"Creates a Raster based on a PixelInterleavedSampleModel with the specified data type, width, height, scanline stride, pixel stride, and band offsets. The number of bands is inferred from bandOffsets.length. The upper left corner of the Raster is given by the location argument. If location is null, (0, 0) will be used. The dataType parameter should be one of the enumerated values defined in the DataBuffer class. Note that interleaved DataBuffer.TYPE_INT Rasters are not supported. To create a 1-band Raster of type DataBuffer.TYPE_INT, use Raster.createPackedRaster(). The only dataTypes supported currently are TYPE_BYTE and TYPE_USHORT.",";java.awt.image.Raster.createInterleavedRaster(int,int,int,int,Point);java.awt.image.Raster.createInterleavedRaster(int,int,int,int,int,int[],Point);java.awt.image.Raster.createInterleavedRaster(DataBuffer,int,int,int,int,int[],Point)",;0.82;0.85;0.76
createLayout,3,0.666666667,"Creates a LayoutManager that manages the editor, nextButton, and previousButton children of the JSpinner. These three children must be added with a constraint that identifies their role: ""Editor"", ""Next"", and ""Previous"". The default layout manager can handle the absence of any of these children.",;javax.swing.plaf.basic.BasicSpinnerUI.createLayout();javax.swing.plaf.synth.SynthSpinnerUI.createLayout();javax.swing.plaf.synth.SynthToolBarUI.createLayout(),;0.67;0.67;0.33
createLineBorder,3,0.459655036,"Creates a line border with the specified color, thickness, and corner shape.",";javax.swing.BorderFactory.createLineBorder(Color);javax.swing.BorderFactory.createLineBorder(Color,int);javax.swing.BorderFactory.createLineBorder(Color,int,boolean)",;0.44;0.42;0.46
createListDataListener,3,0.666666667,Creates a list data listener which will be added to the ComboBoxModel. If this method returns null then it will not be added to the combo box model.,;javax.swing.plaf.basic.BasicComboBoxUI.createListDataListener();javax.swing.plaf.basic.BasicComboPopup.createListDataListener();javax.swing.plaf.basic.BasicListUI.createListDataListener(),;0.67;0.67;0.33
createListSelectionListener,3,0.333333333,Creates a selection listener for the list of files and directories.,;javax.swing.plaf.basic.BasicComboPopup.createListSelectionListener();javax.swing.plaf.basic.BasicListUI.createListSelectionListener();javax.swing.plaf.metal.MetalFileChooserUI.createListSelectionListener(JFileChooser),;0.33;0.33;0.33
createMouseInputListener,3,0.603035571,Creates the mouse listener for the JTable.,;javax.swing.plaf.basic.BasicListUI.createMouseInputListener();javax.swing.plaf.basic.BasicTableHeaderUI.createMouseInputListener();javax.swing.plaf.basic.BasicTableUI.createMouseInputListener(),;0.33;0.60;0.60
createMouseListener,3,0.333333333,Overridden to keep track of whether the selected tab is also pressed.,;javax.swing.plaf.basic.BasicComboPopup.createMouseListener();javax.swing.plaf.basic.BasicTreeUI.createMouseListener();javax.swing.plaf.synth.SynthTabbedPaneUI.createMouseListener(),;0.33;0.33;0.33
createParallelGroup,3,0.514993409,"Creates and returns a ParallelGroup with the specified alignment. This is a cover method for the more general createParallelGroup(Alignment,boolean) method with true supplied for the second argument.",";javax.swing.GroupLayout.createParallelGroup();javax.swing.GroupLayout.createParallelGroup(GroupLayout.Alignment);javax.swing.GroupLayout.createParallelGroup(GroupLayout.Alignment,boolean)",;0.51;0.51;0.39
createPopup,3,0.666666667,Creates the popup portion of the combo box.,;javax.swing.plaf.basic.BasicComboBoxUI.createPopup();javax.swing.plaf.metal.MetalComboBoxUI.createPopup();javax.swing.plaf.synth.SynthComboBoxUI.createPopup(),;0.67;0.33;0.67
createPosition,3,0.709688516,Creates a position within the content that will track change as the content is mutated.,;javax.swing.text.AbstractDocument.createPosition(int);javax.swing.text.GapContent.createPosition(int);javax.swing.text.StringContent.createPosition(int),;0.45;0.71;0.71
createSoftBevelBorder,3,0.603039169,"Creates a beveled border of the specified type with softened corners, using the specified colors for the inner and outer edges of the highlight and the shadow areas. The type is either BevelBorder.RAISED or BevelBorder.LOWERED. Note: The shadow inner and outer colors are switched for a lowered bevel border.",";javax.swing.BorderFactory.createSoftBevelBorder(int);javax.swing.BorderFactory.createSoftBevelBorder(int,Color,Color);javax.swing.BorderFactory.createSoftBevelBorder(int,Color,Color,Color,Color)",;0.57;0.59;0.60
createTempFile,3,0.452598063,"Creates an empty file in the default temporary-file directory, using the given prefix and suffix to generate its name. Invoking this method is equivalent to invoking createTempFile(prefix,suffix,null). The Files.createTempFile method provides an alternative method to create an empty file in the temporary-file directory. Files created by that method may have more restrictive access permissions to files created by this method and so may be more suited to security-sensitive applications.",";java.io.File.createTempFile(String,String);java.nio.file.Files.createTempFile(Path,String,String,FileAttribute&lt;?&gt;...);java.nio.file.Files.createTempFile(String,String,FileAttribute&lt;?&gt;...)",;0.45;0.41;0.44
ctx,3,0.333333333,"Returns the context information specified in IDL for the operation when the operation is not an attribute access and the operation's IDL definition contains a context expression; otherwise it returns a nil Context reference. Calling the method ctx before the method arguments has been called or after the method ctx, set_result, or set_exception has been called will result in a BAD_INV_ORDER system exception.",;org.omg.CORBA.Request.ctx();org.omg.CORBA.Request.ctx(Context);org.omg.CORBA.ServerRequest.ctx(),;0.33;0.33;0.33
defaultAction,3,1,The default action for visit methods. The implementation in this class just returns DEFAULT_VALUE; subclasses will commonly override this method.,";javax.lang.model.util.SimpleAnnotationValueVisitor6.defaultAction(Object,P);javax.lang.model.util.SimpleElementVisitor6.defaultAction(Element,P);javax.lang.model.util.SimpleTypeVisitor6.defaultAction(TypeMirror,P)",;1.00;1.00;1.00
deflate,3,0.636659062,"Compresses the input data and fills specified buffer with compressed data. Returns actual number of bytes of compressed data. A return value of 0 indicates that needsInput should be called in order to determine if more input data is required. This method uses NO_FLUSH as its compression flush mode. An invocation of this method of the form deflater.deflate(b) yields the same result as the invocation of deflater.deflate(b, 0, b.length, Deflater.NO_FLUSH).",";java.util.zip.Deflater.deflate(byte[],int,int);java.util.zip.Deflater.deflate(byte[]);java.util.zip.DeflaterOutputStream.deflate()",;0.64;0.64;0.33
digest,3,0.666666667,Completes the hash computation by performing final operations such as padding. The digest is reset after this call is made.,";java.security.MessageDigest.digest();java.security.MessageDigest.digest(byte[],int,int);java.security.MessageDigest.digest(byte[])",;0.67;0.67;0.33
distance,3,0.626703912,Returns the distance from this Point2D to a specified Point2D.,";java.awt.geom.Point2D.distance(double,double,double,double);java.awt.geom.Point2D.distance(double,double);java.awt.geom.Point2D.distance(Point2D)",;0.33;0.63;0.63
distanceSq,3,0.764249403,Returns the square of the distance from this Point2D to a specified Point2D.,";java.awt.geom.Point2D.distanceSq(double,double,double,double);java.awt.geom.Point2D.distanceSq(double,double);java.awt.geom.Point2D.distanceSq(Point2D)",;0.58;0.76;0.76
divideAndRemainder,3,0.613214367,"Returns a two-element BigDecimal array containing the result of divideToIntegralValue followed by the result of remainder on the two operands calculated with rounding according to the context settings. Note that if both the integer quotient and remainder are needed, this method is faster than using the divideToIntegralValue and remainder methods separately because the division need only be carried out once.",";java.math.BigDecimal.divideAndRemainder(BigDecimal);java.math.BigDecimal.divideAndRemainder(BigDecimal,MathContext);java.math.BigInteger.divideAndRemainder(BigInteger)",;0.61;0.61;0.33
downFocusCycle,3,0.786774287,"Moves the focus down one focus traversal cycle. Typically, if aContainer is a focus cycle root, then the focus owner is set to aContainer's default Component to focus, and the current focus cycle root is set to aContainer. If aContainer is not a focus cycle root, then no focus traversal operation occurs.",;java.awt.DefaultKeyboardFocusManager.downFocusCycle(Container);java.awt.KeyboardFocusManager.downFocusCycle(Container);java.awt.KeyboardFocusManager.downFocusCycle(),;0.78;0.79;0.64
dragEnter,3,0.387631825,"Calls dragEnter on the DragSourceListeners registered with this DragSourceContext and with the associated DragSource, and passes them the specified DragSourceDragEvent.",;java.awt.dnd.DragSourceContext.dragEnter(DragSourceDragEvent);java.awt.dnd.DropTarget.dragEnter(DropTargetDragEvent);java.awt.dnd.DropTargetAdapter.dragEnter(DropTargetDragEvent),;0.39;0.39;0.33
dragExit,3,0.359355084,Calls dragExit on the registered DropTargetListener and passes it the specified DropTargetEvent. Has no effect if this DropTarget is not active. This method itself does not throw any exception for null parameter but for exceptions thrown by the respective method of the listener.,;java.awt.dnd.DragSourceContext.dragExit(DragSourceEvent);java.awt.dnd.DropTarget.dragExit(DropTargetEvent);java.awt.dnd.DropTargetAdapter.dragExit(DropTargetEvent),;0.35;0.36;0.33
dragOver,3,0.387631825,"Calls dragOver on the DragSourceListeners registered with this DragSourceContext and with the associated DragSource, and passes them the specified DragSourceDragEvent.",;java.awt.dnd.DragSourceContext.dragOver(DragSourceDragEvent);java.awt.dnd.DropTarget.dragOver(DropTargetDragEvent);java.awt.dnd.DropTargetAdapter.dragOver(DropTargetDragEvent),;0.39;0.39;0.33
draw3DRect,3,0.611479825,Draws a 3-D highlighted outline of the specified rectangle. The edges of the rectangle are highlighted so that they appear to be beveled and lit from the upper left corner. The colors used for the highlighting effect are determined based on the current color. The resulting rectangle covers an area that is width+1 pixels wide by height+1 pixels tall. This method uses the current Color exclusively and ignores the current Paint.,";java.awt.Graphics.draw3DRect(int,int,int,int,boolean);java.awt.Graphics2D.draw3DRect(int,int,int,int,boolean);javax.swing.DebugGraphics.draw3DRect(int,int,int,int,boolean)",;0.61;0.61;0.00
drawPolygon,3,0.333333333,Draws the outline of a polygon defined by the specified Polygon object.,";java.awt.Graphics.drawPolygon(int[],int[],int);java.awt.Graphics.drawPolygon(Polygon);javax.swing.DebugGraphics.drawPolygon(int[],int[],int)",;0.33;0.33;0.00
drawSelectedText,3,0.922477211,Renders the given range in the model as selected text. This is implemented to render the text in the color specified in the hosting component. It assumes the highlighter will render the selected background.,";javax.swing.text.PasswordView.drawSelectedText(Graphics,int,int,int,int);javax.swing.text.PlainView.drawSelectedText(Graphics,int,int,int,int);javax.swing.text.WrappedPlainView.drawSelectedText(Graphics,int,int,int,int)",;0.86;0.92;0.92
drawUnselectedText,3,0.635742508,Renders the given range in the model as normal unselected text. Uses the foreground or disabled color to render the text.,";javax.swing.text.PasswordView.drawUnselectedText(Graphics,int,int,int,int);javax.swing.text.PlainView.drawUnselectedText(Graphics,int,int,int,int);javax.swing.text.WrappedPlainView.drawUnselectedText(Graphics,int,int,int,int)",;0.60;0.64;0.55
endPrefixMapping,3,0.333333333,Adapt a SAX2 end prefix mapping event.,;org.xml.sax.helpers.DefaultHandler.endPrefixMapping(String);org.xml.sax.helpers.XMLFilterImpl.endPrefixMapping(String);org.xml.sax.helpers.XMLReaderAdapter.endPrefixMapping(String),;0.33;0.33;0.33
engineGenerateCertPath,3,0.854748145,"Generates a CertPath object and initializes it with the data read from the InputStream inStream. The data is assumed to be in the specified encoding. This method was added to version 1.4 of the Java 2 Platform Standard Edition. In order to maintain backwards compatibility with existing service providers, this method cannot be abstract and by default throws an UnsupportedOperationException.",";java.security.cert.CertificateFactorySpi.engineGenerateCertPath(InputStream);java.security.cert.CertificateFactorySpi.engineGenerateCertPath(InputStream,String);java.security.cert.CertificateFactorySpi.engineGenerateCertPath(List&lt;?)",;0.85;0.85;0.74
ensureCapacity,3,0.595958904,"Increases the capacity of this list, if necessary, to ensure that it can hold at least the number of components specified by the minimum capacity argument.",;java.util.ArrayList.ensureCapacity(int);java.util.Vector.ensureCapacity(int);javax.swing.DefaultListModel.ensureCapacity(int),;0.60;0.46;0.60
entering,3,0.754259896,"Log a method entry, with one parameter. This is a convenience method that can be used to log entry to a method. A LogRecord with message ""ENTRY {0}"", log level FINER, and the given sourceMethod, sourceClass, and parameter is logged.",";java.util.logging.Logger.entering(String,String);java.util.logging.Logger.entering(String,String,Object);java.util.logging.Logger.entering(String,String,Object[])",;0.73;0.75;0.70
exists,3,0.333333333,Checks if the keytab file exists. Implementation of this method should make sure that the result matches the latest status of the keytab file. The caller can use the result to determine if it should fallback to another mechanism to read the keys.,";java.io.File.exists();java.nio.file.Files.exists(Path,LinkOption...);javax.security.auth.kerberos.KeyTab.exists()",;0.33;0.33;0.33
export,3,0.666666667,Description copied from class:RMIServerImpl,;javax.management.remote.rmi.RMIIIOPServerImpl.export();javax.management.remote.rmi.RMIJRMPServerImpl.export();javax.management.remote.rmi.RMIServerImpl.export(),;0.67;0.67;0.33
fatalError,3,0.333333333,Filter a fatal error event.,;org.xml.sax.HandlerBase.fatalError(SAXParseException);org.xml.sax.helpers.DefaultHandler.fatalError(SAXParseException);org.xml.sax.helpers.XMLFilterImpl.fatalError(SAXParseException),;0.00;0.33;0.33
fill3DRect,3,0.55212594,Paints a 3-D highlighted rectangle filled with the current color. The edges of the rectangle are highlighted so that it appears as if the edges were beveled and lit from the upper left corner. The colors used for the highlighting effect and for filling are determined from the current Color. This method uses the current Color exclusively and ignores the current Paint.,";java.awt.Graphics.fill3DRect(int,int,int,int,boolean);java.awt.Graphics2D.fill3DRect(int,int,int,int,boolean);javax.swing.DebugGraphics.fill3DRect(int,int,int,int,boolean)",;0.55;0.55;0.00
fillPolygon,3,0.413233661,"Fills a closed polygon defined by arrays of x and y coordinates. This method draws the polygon defined by nPoint line segments, where the first nPoint-1 line segments are line segments from (xPoints[i-1],yPoints[i-1]) to (xPoints[i],yPoints[i]), for 1閳甶閳畁Points. The figure is automatically closed by drawing a line connecting the final point to the first point, if those points are different. The area inside the polygon is defined using an even-odd fill rule, also known as the alternating rule.",";java.awt.Graphics.fillPolygon(int[],int[],int);java.awt.Graphics.fillPolygon(Polygon);javax.swing.DebugGraphics.fillPolygon(int[],int[],int)",;0.41;0.38;0.00
find,3,0.50300755,"Attempts to find the next subsequence of the input sequence that matches the pattern. This method starts at the beginning of this matcher's region, or, if a previous invocation of the method was successful and the matcher has not since been reset, at the first character not matched by the previous match. If the match succeeds then more information can be obtained via the start, end, and group methods.",";java.nio.file.Files.find(Path,int,BiPredicate&lt;Path,BasicFileAttributes&gt;,FileVisitOption...);java.util.regex.Matcher.find();java.util.regex.Matcher.find(int)",;0.33;0.50;0.50
findClass,3,0.361628123,"Finds the class with the specified binary name. This method should be overridden by class loader implementations that follow the delegation model for loading classes, and will be invoked by the loadClass method after checking the parent class loader for the requested class. The default implementation throws a ClassNotFoundException.",;java.lang.ClassLoader.findClass(String);java.net.URLClassLoader.findClass(String);javax.management.loading.MLet.findClass(String),;0.36;0.36;0.33
fireIndexedPropertyChange,3,0.919833266,"Reports a boolean bound indexed property update to listeners that have been registered to track updates of all properties or a property with the specified name. No event is fired if old and new values are equal. This is merely a convenience wrapper around the more general fireIndexedPropertyChange(String, int, Object, Object) method.",";java.beans.PropertyChangeSupport.fireIndexedPropertyChange(String,int,Object,Object);java.beans.PropertyChangeSupport.fireIndexedPropertyChange(String,int,int,int);java.beans.PropertyChangeSupport.fireIndexedPropertyChange(String,int,boolean,boolean)",;0.87;0.92;0.92
fireItemStateChanged,3,0.821123123,Notifies all listeners that have registered interest for notification on this event type.,;javax.swing.AbstractButton.fireItemStateChanged(ItemEvent);javax.swing.DefaultButtonModel.fireItemStateChanged(ItemEvent);javax.swing.JComboBox.fireItemStateChanged(ItemEvent),;0.69;0.82;0.82
firePopupMenuCanceled,3,0.333333333,Description copied from class:JPopupMenu,;javax.swing.JComboBox.firePopupMenuCanceled();javax.swing.JPopupMenu.firePopupMenuCanceled();javax.swing.plaf.basic.BasicComboPopup.firePopupMenuCanceled(),;0.33;0.33;0.33
firePopupMenuWillBecomeInvisible,3,0.333333333,Description copied from class:JPopupMenu,;javax.swing.JComboBox.firePopupMenuWillBecomeInvisible();javax.swing.JPopupMenu.firePopupMenuWillBecomeInvisible();javax.swing.plaf.basic.BasicComboPopup.firePopupMenuWillBecomeInvisible(),;0.33;0.33;0.33
firePopupMenuWillBecomeVisible,3,0.333333333,Description copied from class:JPopupMenu,;javax.swing.JComboBox.firePopupMenuWillBecomeVisible();javax.swing.JPopupMenu.firePopupMenuWillBecomeVisible();javax.swing.plaf.basic.BasicComboPopup.firePopupMenuWillBecomeVisible(),;0.33;0.33;0.33
flags,3,0.333333333,Retrieves the argument mode flag for this NamedValue object.,;java.nio.file.attribute.AclEntry.flags();java.util.regex.Pattern.flags();org.omg.CORBA.NamedValue.flags(),;0.33;0.33;0.33
flip,3,0.448899261,Sets each bit from the specified fromIndex (inclusive) to the specified toIndex (exclusive) to the complement of its current value.,";java.nio.Buffer.flip();java.util.BitSet.flip(int);java.util.BitSet.flip(int,int)",;0.33;0.44;0.45
flipEastAndWestAtEnds,3,0.849310298,"Determines in which direction the next view lays. Consider the View at index n. Typically the Views are layed out from left to right, so that the View to the EAST will be at index n + 1, and the View to the WEST will be at index n - 1. In certain situations, such as with bidirectional text, it is possible that the View to EAST is not at index n + 1, but rather at index n - 1, or that the View to the WEST is not at index n - 1, but index n + 1. In this case this method would return true, indicating the Views are layed out in descending order. This unconditionally returns false, subclasses should override this method if there is the possibility for laying Views in descending order.",";javax.swing.text.BoxView.flipEastAndWestAtEnds(int,Position.Bias);javax.swing.text.CompositeView.flipEastAndWestAtEnds(int,Position.Bias);javax.swing.text.ParagraphView.flipEastAndWestAtEnds(int,Position.Bias)",;0.80;0.85;0.85
floorDiv,3,0.783349259,"Returns the largest (closest to positive infinity) long value that is less than or equal to the algebraic quotient. There is one special case, if the dividend is the Long.MIN_VALUE and the divisor is -1, then integer overflow occurs and the result is equal to the Long.MIN_VALUE. See Math.floorDiv for examples and a comparison to the integer division / operator.",";java.lang.Math.floorDiv(long,long);java.lang.StrictMath.floorDiv(int,int);java.lang.StrictMath.floorDiv(long,long)",;0.66;0.76;0.78
focusNextComponent,3,0.75423033,"Focuses the Component after aComponent, typically based on a FocusTraversalPolicy.",;java.awt.DefaultKeyboardFocusManager.focusNextComponent(Component);java.awt.KeyboardFocusManager.focusNextComponent(Component);java.awt.KeyboardFocusManager.focusNextComponent(),;0.75;0.75;0.51
focusPreviousComponent,3,0.75423033,"Focuses the Component before aComponent, typically based on a FocusTraversalPolicy.",;java.awt.DefaultKeyboardFocusManager.focusPreviousComponent(Component);java.awt.KeyboardFocusManager.focusPreviousComponent(Component);java.awt.KeyboardFocusManager.focusPreviousComponent(),;0.75;0.75;0.51
force,3,0.689109135,"Forces any updates to this channel's file to be written to the storage device that contains it. If this channel's file resides on a local storage device then when this method returns it is guaranteed that all changes made to the file since this channel was created, or since this method was last invoked, will have been written to that device. This is useful for ensuring that critical information is not lost in the event of a system crash. If the file does not reside on a local device then no such guarantee is made. The metaData parameter can be used to limit the number of I/O operations that this method is required to perform. Passing false for this parameter indicates that only updates to the file's content need be written to storage; passing true indicates that updates to both the file's content and metadata must be written, which generally requires at least one more I/O operation. Whether this parameter actually has any effect is dependent upon the underlying operating system and is therefore unspecified. Invoking this method may cause an I/O operation to occur even if the channel was only opened for reading. Some operating systems, for example, maintain a last-access time as part of a file's metadata, and this time is updated whenever the file is read. Whether or not this is actually done is system-dependent and is therefore unspecified. This method is only guaranteed to force changes that were made to this channel's file via the methods defined in this class.",;java.nio.MappedByteBuffer.force();java.nio.channels.AsynchronousFileChannel.force(boolean);java.nio.channels.FileChannel.force(boolean),;0.40;0.69;0.69
forName,3,0.361406746,"Returns the Class object associated with the class or interface with the given string name, using the given class loader. Given the fully qualified name for a class or interface (in the same format returned by getName) this method attempts to locate, load, and link the class or interface. The specified class loader is used to load the class or interface. If the parameter loader is null, the class is loaded through the bootstrap class loader. The class is initialized only if the initialize parameter is true and if it has not been initialized earlier. If name denotes a primitive type or void, an attempt will be made to locate a user-defined class in the unnamed package whose name is name. Therefore, this method cannot be used to obtain any of the Class objects representing primitive types or void. If name denotes an array class, the component type of the array class is loaded but not initialized. For example, in an instance method the expression: Class.forName(""Foo"") is equivalent to: Class.forName(""Foo"", true, this.getClass().getClassLoader()) Note that this method throws errors related to loading, linking or initializing as specified in Sections 12.2, 12.3 and 12.4 of The Java Language Specification. Note that this method does not check whether the requested class is accessible to its caller. If the loader is null, and a security manager is present, and the caller's class loader is not null, then this method calls the security manager's checkPermission method with a RuntimePermission(""getClassLoader"") permission to ensure it's ok to access the bootstrap class loader.",";java.lang.Class.forName(String);java.lang.Class.forName(String,boolean,ClassLoader);java.nio.charset.Charset.forName(String)",;0.34;0.36;0.33
forwardUpdate,3,0.466549591,Forwards the given DocumentEvent to the child views that need to be notified of the change to the model. If a child changed its requirements and the allocation was valid prior to forwarding the portion of the box from the starting child to the end of the box will be repainted.,";javax.swing.text.BoxView.forwardUpdate(DocumentEvent.ElementChange,DocumentEvent,Shape,ViewFactory);javax.swing.text.TableView.forwardUpdate(DocumentEvent.ElementChange,DocumentEvent,Shape,ViewFactory);javax.swing.text.View.forwardUpdate(DocumentEvent.ElementChange,DocumentEvent,Shape,ViewFactory)",;0.47;0.33;0.47
free,3,0.95576738,"This method frees the SeriableClob object and releases the resources that it holds. The object is invalid once the free method is called. If free is called multiple times, the subsequent calls to free are treated as a no-op.",;javax.sql.rowset.serial.SerialArray.free();javax.sql.rowset.serial.SerialBlob.free();javax.sql.rowset.serial.SerialClob.free(),;0.96;0.96;0.96
generateCertPath,3,0.557295445,Generates a CertPath object and initializes it with the data read from the InputStream inStream. The data is assumed to be in the default encoding. The name of the default encoding is the first element of the Iterator returned by the getCertPathEncodings method.,";java.security.cert.CertificateFactory.generateCertPath(InputStream);java.security.cert.CertificateFactory.generateCertPath(InputStream,String);java.security.cert.CertificateFactory.generateCertPath(List&lt;?)",;0.56;0.54;0.44
genExemptionBlob,3,0.661274297,"Generates the exemption mechanism key blob, and stores the result in the output buffer. If the output buffer is too small to hold the result, a ShortBufferException is thrown. In this case, repeat this call with a larger output buffer. Use getOutputSize to determine how big the output buffer should be.",";javax.crypto.ExemptionMechanism.genExemptionBlob();javax.crypto.ExemptionMechanism.genExemptionBlob(byte[]);javax.crypto.ExemptionMechanism.genExemptionBlob(byte[],int)",;0.33;0.66;0.66
getAcceptAllFileFilter,3,0.333333333,Invokes the getAcceptAllFileFilter method on each UI handled by this object.,;javax.swing.JFileChooser.getAcceptAllFileFilter();javax.swing.plaf.basic.BasicFileChooserUI.getAcceptAllFileFilter(JFileChooser);javax.swing.plaf.multi.MultiFileChooserUI.getAcceptAllFileFilter(JFileChooser),;0.33;0.33;0.33
getAdjustmentListeners,3,0.767516886,Returns an array of all the adjustment listeners registered on this ScrollPaneAdjustable.,;java.awt.Scrollbar.getAdjustmentListeners();java.awt.ScrollPaneAdjustable.getAdjustmentListeners();javax.swing.JScrollBar.getAdjustmentListeners(),;0.77;0.77;0.60
getAlignmentX,3,0.666666667,"Returns the alignment along the x axis. This specifies how the component would like to be aligned relative to other components. The value should be a number between 0 and 1 where 0 represents alignment along the origin, 1 is aligned the furthest away from the origin, 0.5 is centered, etc.",;java.awt.Component.getAlignmentX();java.awt.Container.getAlignmentX();javax.swing.JComponent.getAlignmentX(),;0.67;0.67;0.33
getAlignmentY,3,0.666666667,"Returns the alignment along the y axis. This specifies how the component would like to be aligned relative to other components. The value should be a number between 0 and 1 where 0 represents alignment along the origin, 1 is aligned the furthest away from the origin, 0.5 is centered, etc.",;java.awt.Component.getAlignmentY();java.awt.Container.getAlignmentY();javax.swing.JComponent.getAlignmentY(),;0.67;0.67;0.33
getAngleExtent,3,1,Returns the angular extent of the arc.,;java.awt.geom.Arc2D.getAngleExtent();java.awt.geom.Arc2D.Double.getAngleExtent();java.awt.geom.Arc2D.Float.getAngleExtent(),;1.00;1.00;1.00
getAngleStart,3,1,Returns the starting angle of the arc.,;java.awt.geom.Arc2D.getAngleStart();java.awt.geom.Arc2D.Double.getAngleStart();java.awt.geom.Arc2D.Float.getAngleStart(),;1.00;1.00;1.00
getAnnotatedReturnType,3,1,"Returns an AnnotatedType object that represents the use of a type to specify the return type of the method/constructor represented by this Executable. If this Executable object represents a constructor, the AnnotatedType object represents the type of the constructed object. If this Executable object represents a method, the AnnotatedType object represents the use of a type to specify the return type of the method.",;java.lang.reflect.Constructor.getAnnotatedReturnType();java.lang.reflect.Executable.getAnnotatedReturnType();java.lang.reflect.Method.getAnnotatedReturnType(),;1.00;1.00;1.00
getArcHeight,3,1,Gets the height of the arc that rounds off the corners.,;java.awt.geom.RoundRectangle2D.getArcHeight();java.awt.geom.RoundRectangle2D.Double.getArcHeight();java.awt.geom.RoundRectangle2D.Float.getArcHeight(),;1.00;1.00;1.00
getArcWidth,3,1,Gets the width of the arc that rounds off the corners.,;java.awt.geom.RoundRectangle2D.getArcWidth();java.awt.geom.RoundRectangle2D.Double.getArcWidth();java.awt.geom.RoundRectangle2D.Float.getArcWidth(),;1.00;1.00;1.00
getAttributeName,3,0.466462639,Gets the name of the attribute which has changed.,;javax.management.AttributeChangeNotification.getAttributeName();javax.management.AttributeValueExp.getAttributeName();javax.xml.stream.util.StreamReaderDelegate.getAttributeName(int),;0.47;0.46;0.33
getAverage,3,0.672009786,"Returns the arithmetic mean of values recorded, or zero if no values have been recorded.",;java.util.DoubleSummaryStatistics.getAverage();java.util.IntSummaryStatistics.getAverage();java.util.LongSummaryStatistics.getAverage(),;0.45;0.67;0.67
getBeginIndex,3,0.333333333,Returns the start index of the text.,;java.text.FieldPosition.getBeginIndex();java.text.StringCharacterIterator.getBeginIndex();javax.swing.text.Segment.getBeginIndex(),;0.33;0.33;0.33
getBindings,3,0.39518892,Returns the value of the engineScope field if specified scope is ENGINE_SCOPE. Returns the value of the globalScope field if the specified scope is GLOBAL_SCOPE.,;javax.script.AbstractScriptEngine.getBindings(int);javax.script.ScriptEngineManager.getBindings();javax.script.SimpleScriptContext.getBindings(int),;0.33;0.39;0.40
getBlack,3,0.500264233,Returns the black color. This returns a color with an rgb hex value of 0x333333.,;javax.swing.plaf.metal.MetalLookAndFeel.getBlack();javax.swing.plaf.metal.MetalTheme.getBlack();javax.swing.plaf.metal.OceanTheme.getBlack(),;0.45;0.48;0.50
getCapabilities,3,0.508732217,"Returns an ImageCapabilities object which can be inquired as to the specific capabilities of this VolatileImage. This would allow programmers to find out more runtime information on the specific VolatileImage object that they have created. For example, the user might create a VolatileImage but the system may have no video memory left for creating an image of that size, so although the object is a VolatileImage, it is not as accelerated as other VolatileImage objects on this platform might be. The user might want that information to find other solutions to their problem.",;java.awt.Image.getCapabilities(GraphicsConfiguration);java.awt.image.BufferStrategy.getCapabilities();java.awt.image.VolatileImage.getCapabilities(),;0.51;0.33;0.51
getCaret,3,0.333333333,Returns the Caret that is changing.,;java.awt.event.InputMethodEvent.getCaret();javax.swing.text.JTextComponent.getCaret();javax.swing.text.NavigationFilter.FilterBypass.getCaret(),;0.33;0.33;0.33
getCaretShapes,3,0.707319338,Returns two paths corresponding to the strong and weak caret. This method is a convenience overload of getCaretShapes that uses the default caret policy.,";java.awt.font.TextLayout.getCaretShapes(int,Rectangle2D,TextLayout.CaretPolicy);java.awt.font.TextLayout.getCaretShapes(int,Rectangle2D);java.awt.font.TextLayout.getCaretShapes(int)",;0.46;0.71;0.68
getCharacterInstance,3,0.942172273,Returns a new BreakIterator instance for character breaks for the given locale.,;java.text.BreakIterator.getCharacterInstance();java.text.BreakIterator.getCharacterInstance(Locale);java.text.spi.BreakIteratorProvider.getCharacterInstance(Locale),;0.88;0.94;0.94
getCharacterStream,3,0.333333333,Get the character stream for this input source.,";javax.sql.rowset.serial.SerialClob.getCharacterStream();javax.sql.rowset.serial.SerialClob.getCharacterStream(long,long);org.xml.sax.InputSource.getCharacterStream()",;0.33;0.33;0.33
getChildCount,3,0.460706877,Returns the number of children of this node.,;javax.swing.JTree.DynamicUtilTreeNode.getChildCount();javax.swing.tree.DefaultMutableTreeNode.getChildCount();javax.swing.tree.DefaultTreeModel.getChildCount(Object),;0.46;0.46;0.41
getCipherSuite,3,0.523357611,Returns the cipher suite in use on the original connection that retrieved the network resource.,;java.net.SecureCacheResponse.getCipherSuite();javax.net.ssl.HandshakeCompletedEvent.getCipherSuite();javax.net.ssl.HttpsURLConnection.getCipherSuite(),;0.52;0.45;0.49
getClipBounds,3,0.571645562,"Returns the bounding rectangle of the current clipping area. The coordinates in the rectangle are relative to the coordinate system origin of this graphics context. This method differs from getClipBounds in that an existing rectangle is used instead of allocating a new one. This method refers to the user clip, which is independent of the clipping associated with device bounds and window visibility. If no clip has previously been set, or if the clip has been cleared using setClip(null), this method returns the specified Rectangle.",;java.awt.Graphics.getClipBounds();java.awt.Graphics.getClipBounds(Rectangle);javax.swing.DebugGraphics.getClipBounds(),;0.56;0.57;0.00
getColorSpace,3,0.333333333,Returns the ColorSpace associated with this ColorModel.,;java.awt.Color.getColorSpace();java.awt.MultipleGradientPaint.getColorSpace();java.awt.image.ColorModel.getColorSpace(),;0.33;0.33;0.33
getComment,3,0.333333333,"Returns the zip file comment, or null if none.",;java.net.HttpCookie.getComment();java.util.zip.ZipEntry.getComment();java.util.zip.ZipFile.getComment(),;0.33;0.33;0.33
getComparator,3,0.388392901,"Returns the Comparator for the specified column. If a Comparator has not been specified using the setComparator method a Comparator will be returned based on the column class (TableModel.getColumnClass) of the specified column. If the column class is String, Collator.getInstance is returned. If the column class implements Comparable a private Comparator is returned that invokes the compareTo method. Otherwise Collator.getInstance is returned.",;javax.swing.DefaultRowSorter.getComparator(int);javax.swing.SortingFocusTraversalPolicy.getComparator();javax.swing.table.TableRowSorter.getComparator(int),;0.36;0.33;0.39
getComponentAtIndex,3,0.333333333,Returns the component at the specified index.,;javax.swing.JMenuBar.getComponentAtIndex(int);javax.swing.JPopupMenu.getComponentAtIndex(int);javax.swing.JToolBar.getComponentAtIndex(int),;0.33;0.33;0.33
getComponentIndex,3,0.82984722,Returns the index of the specified component.,;javax.swing.JMenuBar.getComponentIndex(Component);javax.swing.JPopupMenu.getComponentIndex(Component);javax.swing.JToolBar.getComponentIndex(Component),;0.83;0.83;0.68
getComponentSize,3,0.61582503,"Returns an array of the number of bits per color/alpha component. The array contains the color components in the order specified by the ColorSpace, followed by the alpha component, if present.",;java.awt.image.ColorModel.getComponentSize(int);java.awt.image.ColorModel.getComponentSize();java.awt.image.IndexColorModel.getComponentSize(),;0.43;0.62;0.60
getConnection,3,0.727744554,"Attempts to establish a connection to the given database URL. The DriverManager attempts to select an appropriate driver from the set of registered JDBC drivers.Note: If the user or password property are also specified as part of the url, it is implementation-defined as to which value will take precedence. For maximum portability, an application should only specify a property once.",";java.sql.DriverManager.getConnection(String,Properties);java.sql.DriverManager.getConnection(String,String,String);java.sql.DriverManager.getConnection(String)",;0.72;0.73;0.47
getConstraints,3,0.458563646,Gets the constraints for the specified component. A copy of the actual GridBagConstraints object is returned.,;java.awt.BorderLayout.getConstraints(Component);java.awt.GridBagLayout.getConstraints(Component);javax.swing.SpringLayout.getConstraints(Component),;0.43;0.46;0.37
getConstructors,3,0.349915201,"Returns an array containing Constructor objects reflecting all the public constructors of the class represented by this Class object. An array of length 0 is returned if the class has no public constructors, or if the class is an array class, or if the class reflects a primitive type or void. Note that while this method returns an array of Constructor&lt;T&gt; objects (that is an array of constructors from this class), the return type of this method is Constructor&lt;?&gt;[] and not Constructor&lt;T&gt;[] as might be expected. This less informative return type is necessary since after being returned from this method, the array could be modified to hold Constructor objects for different classes, which would violate the type guarantees of Constructor&lt;T&gt;[].",";java.lang.Class.getConstructors();javax.management.MBeanInfo.getConstructors();javax.management.StandardMBean.getConstructors(MBeanConstructorInfo[],Object)",;0.35;0.35;0.33
getContentHandler,3,0.333333333,Get the content event handler.,;javax.xml.validation.ValidatorHandler.getContentHandler();org.xml.sax.helpers.ParserAdapter.getContentHandler();org.xml.sax.helpers.XMLFilterImpl.getContentHandler(),;0.33;0.33;0.33
getContents,3,0.333333333,"Returns an array in which each item is a pair of objects in an Object array. The first element of each pair is the key, which must be a String, and the second element is the value associated with that key. See the class description for details.",;java.awt.datatransfer.Clipboard.getContents(Object);java.util.ListResourceBundle.getContents();javax.accessibility.AccessibleResourceBundle.getContents(),;0.33;0.33;0.00
getControl,3,0.392030942,Returns the control color of the current theme. This is a cover method for getCurrentTheme().getControl().,;java.util.ResourceBundle.Control.getControl(List&lt;String&gt;);javax.swing.plaf.metal.MetalLookAndFeel.getControl();javax.swing.plaf.metal.MetalTheme.getControl(),;0.33;0.39;0.39
getControlTextColor,3,0.551334887,Returns the control text color. This returns a color with an rgb hex value of 0x333333.,;javax.swing.plaf.metal.MetalLookAndFeel.getControlTextColor();javax.swing.plaf.metal.MetalTheme.getControlTextColor();javax.swing.plaf.metal.OceanTheme.getControlTextColor(),;0.49;0.54;0.55
getControlTextFont,3,0.439922115,Returns the control text font of the current theme. This is a cover method for getCurrentTheme().getControlTextColor().,;javax.swing.plaf.metal.DefaultMetalTheme.getControlTextFont();javax.swing.plaf.metal.MetalLookAndFeel.getControlTextFont();javax.swing.plaf.metal.MetalTheme.getControlTextFont(),;0.41;0.44;0.37
getCrtCoefficient,3,0.333333333,Returns the prime's crtCoefficient.,;java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getCrtCoefficient();java.security.spec.RSAOtherPrimeInfo.getCrtCoefficient();java.security.spec.RSAPrivateCrtKeySpec.getCrtCoefficient(),;0.00;0.33;0.00
getCtrlP1,3,1,Returns the first control point.,;java.awt.geom.CubicCurve2D.getCtrlP1();java.awt.geom.CubicCurve2D.Double.getCtrlP1();java.awt.geom.CubicCurve2D.Float.getCtrlP1(),;1.00;1.00;1.00
getCtrlP2,3,1,Returns the second control point.,;java.awt.geom.CubicCurve2D.getCtrlP2();java.awt.geom.CubicCurve2D.Double.getCtrlP2();java.awt.geom.CubicCurve2D.Float.getCtrlP2(),;1.00;1.00;1.00
getCtrlPt,3,1,Returns the control point.,;java.awt.geom.QuadCurve2D.getCtrlPt();java.awt.geom.QuadCurve2D.Double.getCtrlPt();java.awt.geom.QuadCurve2D.Float.getCtrlPt(),;1.00;1.00;1.00
getCtrlX,3,1,Returns the X coordinate of the control point in double precision.,;java.awt.geom.QuadCurve2D.getCtrlX();java.awt.geom.QuadCurve2D.Double.getCtrlX();java.awt.geom.QuadCurve2D.Float.getCtrlX(),;1.00;1.00;1.00
getCtrlX1,3,1,Returns the X coordinate of the first control point in double precision.,;java.awt.geom.CubicCurve2D.getCtrlX1();java.awt.geom.CubicCurve2D.Double.getCtrlX1();java.awt.geom.CubicCurve2D.Float.getCtrlX1(),;1.00;1.00;1.00
getCtrlX2,3,1,Returns the X coordinate of the second control point in double precision.,;java.awt.geom.CubicCurve2D.getCtrlX2();java.awt.geom.CubicCurve2D.Double.getCtrlX2();java.awt.geom.CubicCurve2D.Float.getCtrlX2(),;1.00;1.00;1.00
getCtrlY,3,1,Returns the Y coordinate of the control point in double precision.,;java.awt.geom.QuadCurve2D.getCtrlY();java.awt.geom.QuadCurve2D.Double.getCtrlY();java.awt.geom.QuadCurve2D.Float.getCtrlY(),;1.00;1.00;1.00
getCtrlY1,3,1,Returns the Y coordinate of the first control point in double precision.,;java.awt.geom.CubicCurve2D.getCtrlY1();java.awt.geom.CubicCurve2D.Double.getCtrlY1();java.awt.geom.CubicCurve2D.Float.getCtrlY1(),;1.00;1.00;1.00
getCtrlY2,3,1,Returns the Y coordinate of the second control point in double precision.,;java.awt.geom.CubicCurve2D.getCtrlY2();java.awt.geom.CubicCurve2D.Double.getCtrlY2();java.awt.geom.CubicCurve2D.Float.getCtrlY2(),;1.00;1.00;1.00
getCurrency,3,0.404531359,Gets the currency used by this number format when formatting currency values. The initial value is derived in a locale dependent way. The returned value may be null if no valid currency could be determined and no currency has been set using setCurrency. The default implementation throws UnsupportedOperationException.,;java.text.DecimalFormat.getCurrency();java.text.DecimalFormatSymbols.getCurrency();java.text.NumberFormat.getCurrency(),;0.39;0.33;0.40
getCurrencyInstance,3,0.453100516,Returns a currency format for the specified locale.,;java.text.NumberFormat.getCurrencyInstance();java.text.NumberFormat.getCurrencyInstance(Locale);java.text.spi.NumberFormatProvider.getCurrencyInstance(Locale),;0.41;0.45;0.41
getCurrentDataFlavors,3,0.53551022,This method returns the current DataFlavors.,;java.awt.dnd.DropTargetContext.getCurrentDataFlavors();java.awt.dnd.DropTargetDragEvent.getCurrentDataFlavors();java.awt.dnd.DropTargetDropEvent.getCurrentDataFlavors(),;0.33;0.53;0.54
getCurrentDataFlavorsAsList,3,0.684445355,This method returns the currently available DataFlavors as a java.util.List.,;java.awt.dnd.DropTargetContext.getCurrentDataFlavorsAsList();java.awt.dnd.DropTargetDragEvent.getCurrentDataFlavorsAsList();java.awt.dnd.DropTargetDropEvent.getCurrentDataFlavorsAsList(),;0.58;0.64;0.68
getDay,3,0.333333333,Return day in month or DatatypeConstants.FIELD_UNDEFINED.Value constraints for this value are summarized in day field of date/time field mapping table.,;java.sql.Time.getDay();java.util.Date.getDay();javax.xml.datatype.XMLGregorianCalendar.getDay(),;0.00;0.33;0.33
getDefaultButton,3,0.333333333,Description copied from class:FileChooserUI,;javax.swing.JRootPane.getDefaultButton();javax.swing.plaf.FileChooserUI.getDefaultButton(JFileChooser);javax.swing.plaf.basic.BasicFileChooserUI.getDefaultButton(JFileChooser),;0.33;0.33;0.33
getDefaultCloseOperation,3,0.804754951,Returns the operation that occurs when the user initiates a "close" on this frame.,;javax.swing.JDialog.getDefaultCloseOperation();javax.swing.JFrame.getDefaultCloseOperation();javax.swing.JInternalFrame.getDefaultCloseOperation(),;0.76;0.80;0.76
getDefaultComponent,3,0.893215969,Returns the default Component to focus. This Component will be the first to receive focus when traversing down into a new focus traversal cycle rooted at aContainer. The default implementation of this method returns the same Component as getFirstComponent.,;java.awt.ContainerOrderFocusTraversalPolicy.getDefaultComponent(Container);java.awt.FocusTraversalPolicy.getDefaultComponent(Container);javax.swing.SortingFocusTraversalPolicy.getDefaultComponent(Container),;0.89;0.76;0.89
getDefaultRootElement,3,0.483109655,Gets the default root element.,;javax.swing.text.AbstractDocument.getDefaultRootElement();javax.swing.text.DefaultStyledDocument.getDefaultRootElement();javax.swing.text.PlainDocument.getDefaultRootElement(),;0.33;0.48;0.48
getDerivedColor,3,0.600106773,"Decodes and returns a color, which is derived from a offset between two other colors.",";javax.swing.plaf.nimbus.NimbusLookAndFeel.getDerivedColor(String,float,float,float,int,boolean);javax.swing.plaf.nimbus.NimbusLookAndFeel.getDerivedColor(Color,Color,float,boolean);javax.swing.plaf.nimbus.NimbusLookAndFeel.getDerivedColor(Color,Color,float)",;0.33;0.60;0.60
getDesktopColor,3,0.513720494,Returns the desktop color. This returns a color with an rgb hex value of 0xFFFFFF.,;javax.swing.plaf.metal.MetalLookAndFeel.getDesktopColor();javax.swing.plaf.metal.MetalTheme.getDesktopColor();javax.swing.plaf.metal.OceanTheme.getDesktopColor(),;0.45;0.51;0.51
getDestination,3,0.333333333,"Returns the BufferedImage currently set by the setDestination method, or null if none is set.",";java.awt.JobAttributes.getDestination();javax.imageio.ImageReader.getDestination(ImageReadParam,Iterator&lt;ImageTypeSpecifier&gt;,int,int);javax.imageio.ImageReadParam.getDestination()",;0.33;0.33;0.33
getDevice,3,0.333333333,Obtains an instance of the device represented by the info object.,;java.awt.GraphicsConfiguration.getDevice();java.awt.PointerInfo.getDevice();javax.sound.midi.spi.MidiDeviceProvider.getDevice(MidiDevice.Info),;0.33;0.33;0.33
getDialogTitle,3,0.333333333,Invokes the getDialogTitle method on each UI handled by this object.,;javax.swing.JFileChooser.getDialogTitle();javax.swing.plaf.basic.BasicFileChooserUI.getDialogTitle(JFileChooser);javax.swing.plaf.multi.MultiFileChooserUI.getDialogTitle(JFileChooser),;0.33;0.33;0.33
getDigestAlgorithm,3,0.666666667,Returns the message digest algorithm name.,;java.security.spec.MGF1ParameterSpec.getDigestAlgorithm();java.security.spec.PSSParameterSpec.getDigestAlgorithm();javax.crypto.spec.OAEPParameterSpec.getDigestAlgorithm(),;0.33;0.67;0.67
getDisabledSelectedIcon,3,0.723853544,"Returns an Icon for use by disabled components that are also selected. This method is used to generate an Icon for components that are in both the disabled and selected states but do not have a specific Icon for this state. For example, if you create a JButton and only specify an Icon via setIcon this method will be called to generate the disabled and selected Icon. If null is passed as icon this method returns null. Some look and feels might not render the disabled and selected Icon, in which case they will ignore this.",";javax.swing.AbstractButton.getDisabledSelectedIcon();javax.swing.LookAndFeel.getDisabledSelectedIcon(JComponent,Icon);javax.swing.plaf.metal.MetalLookAndFeel.getDisabledSelectedIcon(JComponent,Icon)",;0.46;0.72;0.72
getDisplayCountry,3,0.710125988,"Returns a name for the locale's country that is appropriate for display to the user. If possible, the name returned will be localized according to inLocale. For example, if the locale is fr_FR and inLocale is en_US, getDisplayCountry() will return ""France""; if the locale is en_US and inLocale is fr_FR, getDisplayCountry() will return ""Etats-Unis"". If the name returned cannot be localized according to inLocale. (say, we don't have a Japanese name for Croatia), this function falls back on the English name, and finally on the ISO code as a last-resort value. If the locale doesn't specify a country, this function returns the empty string.",";java.util.Locale.getDisplayCountry();java.util.Locale.getDisplayCountry(Locale);java.util.spi.LocaleNameProvider.getDisplayCountry(String,Locale)",;0.70;0.71;0.55
getDisplayedMnemonicIndex,3,0.667444571,"Returns the character, as an index, that the look and feel should provide decoration for as representing the mnemonic character.",;javax.swing.AbstractButton.getDisplayedMnemonicIndex();javax.swing.JLabel.getDisplayedMnemonicIndex();javax.swing.colorchooser.AbstractColorChooserPanel.getDisplayedMnemonicIndex(),;0.67;0.67;0.36
getDisplayLanguage,3,0.706804906,"Returns a name for the locale's language that is appropriate for display to the user. If possible, the name returned will be localized according to inLocale. For example, if the locale is fr_FR and inLocale is en_US, getDisplayLanguage() will return ""French""; if the locale is en_US and inLocale is fr_FR, getDisplayLanguage() will return ""anglais"". If the name returned cannot be localized according to inLocale, (say, we don't have a Japanese name for Croatian), this function falls back on the English name, and finally on the ISO code as a last-resort value. If the locale doesn't specify a language, this function returns the empty string.",";java.util.Locale.getDisplayLanguage();java.util.Locale.getDisplayLanguage(Locale);java.util.spi.LocaleNameProvider.getDisplayLanguage(String,Locale)",;0.70;0.71;0.54
getDisplayScript,3,0.661970918,"Returns a name for the locale's script that is appropriate for display to the user. If possible, the name will be localized for the given locale. Returns the empty string if this locale doesn't specify a script code.",";java.util.Locale.getDisplayScript();java.util.Locale.getDisplayScript(Locale);java.util.spi.LocaleNameProvider.getDisplayScript(String,Locale)",;0.66;0.66;0.43
getDisplayVariant,3,0.720909328,"Returns a name for the locale's variant code that is appropriate for display to the user. If possible, the name will be localized for inLocale. If the locale doesn't specify a variant code, this function returns the empty string.",";java.util.Locale.getDisplayVariant();java.util.Locale.getDisplayVariant(Locale);java.util.spi.LocaleNameProvider.getDisplayVariant(String,Locale)",;0.71;0.72;0.52
getDocumentFilter,3,0.333333333,Returns the DocumentFilter used to restrict the characters that can be input into the JFormattedTextField.,;javax.swing.JFormattedTextField.AbstractFormatter.getDocumentFilter();javax.swing.text.AbstractDocument.getDocumentFilter();javax.swing.text.DefaultFormatter.getDocumentFilter(),;0.33;0.33;0.33
getDragSource,3,0.333333333,Returns the DragSource that instantiated this DragSourceContext.,;java.awt.dnd.DragGestureEvent.getDragSource();java.awt.dnd.DragGestureRecognizer.getDragSource();java.awt.dnd.DragSourceContext.getDragSource(),;0.00;0.33;0.33
getEditor,3,0.333333333,Gets the target editor for an action.,;javax.swing.JComboBox.getEditor();javax.swing.JSpinner.getEditor();javax.swing.text.StyledEditorKit.StyledTextAction.getEditor(ActionEvent),;0.33;0.33;0.33
getElementAt,3,0.666666667,Description copied from interface:ListModel,;javax.swing.DefaultComboBoxModel.getElementAt(int);javax.swing.DefaultListModel.getElementAt(int);javax.swing.plaf.basic.BasicDirectoryModel.getElementAt(int),;0.67;0.33;0.67
getEnableSessionCreation,3,0.791656773,Returns true if new SSL sessions may be established by this socket.,;javax.net.ssl.SSLEngine.getEnableSessionCreation();javax.net.ssl.SSLServerSocket.getEnableSessionCreation();javax.net.ssl.SSLSocket.getEnableSessionCreation(),;0.79;0.67;0.79
getEncodedValue,3,0.622506038,"Retrieves the StartTLS response's ASN.1 BER encoded value. Since the response has no defined value, null is always returned.",;javax.naming.ldap.BasicControl.getEncodedValue();javax.naming.ldap.StartTlsRequest.getEncodedValue();javax.naming.ldap.StartTlsResponse.getEncodedValue(),;0.44;0.62;0.62
getEntry,3,0.482015934,Returns the ZipEntry for the given entry name or null if not found.,";java.security.KeyStore.getEntry(String,KeyStore.ProtectionParameter);java.util.jar.JarFile.getEntry(String);java.util.zip.ZipFile.getEntry(String)",;0.33;0.48;0.48
getEventHandler,3,0.666666667,Return the current event handler or the default event handler if one hasn't been set.,;javax.xml.bind.Binder.getEventHandler();javax.xml.bind.helpers.AbstractMarshallerImpl.getEventHandler();javax.xml.bind.helpers.AbstractUnmarshallerImpl.getEventHandler(),;0.67;0.33;0.67
getExceptionTypes,3,1,Returns an array of Class objects that represent the types of exceptions declared to be thrown by the underlying executable represented by this object. Returns an array of length 0 if the executable declares no exceptions in its throws clause.,;java.lang.reflect.Constructor.getExceptionTypes();java.lang.reflect.Executable.getExceptionTypes();java.lang.reflect.Method.getExceptionTypes(),;1.00;1.00;1.00
getExecutor,3,0.772945353,Returns the executor for this Serviceinstance. The executor is used for all asynchronous invocations that require callbacks.,;javax.xml.ws.Endpoint.getExecutor();javax.xml.ws.Service.getExecutor();javax.xml.ws.spi.ServiceDelegate.getExecutor(),;0.54;0.77;0.77
getExpandedState,3,1,"Returns true if the path is expanded, and visible.",;javax.swing.tree.AbstractLayoutCache.getExpandedState(TreePath);javax.swing.tree.FixedHeightLayoutCache.getExpandedState(TreePath);javax.swing.tree.VariableHeightLayoutCache.getExpandedState(TreePath),;1.00;1.00;1.00
getFD,3,0.454602474,Returns the file descriptor associated with this stream.,;java.io.FileInputStream.getFD();java.io.FileOutputStream.getFD();java.io.RandomAccessFile.getFD(),;0.33;0.45;0.45
getFile,3,0.333333333,Return the File object that corresponds to this FileDataSource.,;java.awt.FileDialog.getFile();java.net.URL.getFile();javax.activation.FileDataSource.getFile(),;0.33;0.33;0.33
getFilter,3,0.333333333,Returns the filter operation.,;java.util.logging.Handler.getFilter();java.util.logging.Logger.getFilter();javax.xml.crypto.dsig.spec.XPathType.getFilter(),;0.33;0.33;0.33
getFirstDayOfWeek,3,0.397406218,Returns the first day of a week in the given locale. This information is required by Calendar to support operations on the week-related calendar fields.,;java.time.temporal.WeekFields.getFirstDayOfWeek();java.util.Calendar.getFirstDayOfWeek();java.util.spi.CalendarDataProvider.getFirstDayOfWeek(Locale),;0.38;0.39;0.40
getFocusCycleRootAncestor,3,0.38765282,Always returns null because JInternalFrames must always be roots of a focus traversal cycle.,;java.awt.Component.getFocusCycleRootAncestor();java.awt.Window.getFocusCycleRootAncestor();javax.swing.JInternalFrame.getFocusCycleRootAncestor(),;0.33;0.39;0.39
getFocusOwner,3,0.333333333,"If this JInternalFrame is active, returns the child that has focus. Otherwise, returns null.",;java.awt.KeyboardFocusManager.getFocusOwner();java.awt.Window.getFocusOwner();javax.swing.JInternalFrame.getFocusOwner(),;0.33;0.33;0.33
getFocusTraversalKeys,3,0.743392396,"Returns the Set of focus traversal keys for a given traversal operation for this Container. (See setFocusTraversalKeys for a full description of each key.) If a Set of traversal keys has not been explicitly defined for this Container, then this Container's parent's Set is returned. If no Set has been explicitly defined for any of this Container's ancestors, then the current KeyboardFocusManager's default Set is returned.",;java.awt.Component.getFocusTraversalKeys(int);java.awt.Container.getFocusTraversalKeys(int);java.awt.Window.getFocusTraversalKeys(int),;0.74;0.74;0.58
getFontRenderContext,3,0.333333333,Returns the FontRenderContext associated with this GlyphVector.,;java.awt.FontMetrics.getFontRenderContext();java.awt.Graphics2D.getFontRenderContext();java.awt.font.GlyphVector.getFontRenderContext(),;0.33;0.33;0.33
getGenericExceptionTypes,3,1,"Returns an array of Type objects that represent the exceptions declared to be thrown by this executable object. Returns an array of length 0 if the underlying executable declares no exceptions in its throws clause. If an exception type is a type variable or a parameterized type, it is created. Otherwise, it is resolved.",;java.lang.reflect.Constructor.getGenericExceptionTypes();java.lang.reflect.Executable.getGenericExceptionTypes();java.lang.reflect.Method.getGenericExceptionTypes(),;1.00;1.00;1.00
getGenericParameterTypes,3,1,"Returns an array of Type objects that represent the formal parameter types, in declaration order, of the executable represented by this object. Returns an array of length 0 if the underlying executable takes no parameters. If a formal parameter type is a parameterized type, the Type object returned for it must accurately reflect the actual type parameters used in the source code. If a formal parameter type is a type variable or a parameterized type, it is created. Otherwise, it is resolved.",;java.lang.reflect.Constructor.getGenericParameterTypes();java.lang.reflect.Executable.getGenericParameterTypes();java.lang.reflect.Method.getGenericParameterTypes(),;1.00;1.00;1.00
getHeaderField,3,0.508115379,"Returns the value for the nth header field. Some implementations may treat the 0th header field as special, i.e. as the status line returned by the HTTP server. This method can be used in conjunction with the getHeaderFieldKey method to iterate through all the headers in the message.",;java.net.HttpURLConnection.getHeaderField(int);java.net.URLConnection.getHeaderField(String);java.net.URLConnection.getHeaderField(int),;0.51;0.33;0.50
getHours,3,0.333333333,"Obtains the value of the HOURS field as an integer value, or 0 if not present. This method works just like getYears() except that this method works on the HOURS field.",;java.sql.Date.getHours();java.util.Date.getHours();javax.xml.datatype.Duration.getHours(),;0.00;0.33;0.33
getIdentifier,3,0.333333333,"Returns the identifier object for this column. Note identifiers are not used by JTable, they are purely a convenience for external use. If the identifier is null, getIdentifier() returns getHeaderValue as a default.",;javax.swing.DefaultRowSorter.ModelWrapper.getIdentifier(int);javax.swing.RowFilter.Entry.getIdentifier();javax.swing.table.TableColumn.getIdentifier(),;0.33;0.33;0.33
getIdentity,3,1.82E-231,Deprecated.,;java.security.IdentityScope.getIdentity(String);java.security.IdentityScope.getIdentity(Principal);java.security.IdentityScope.getIdentity(PublicKey),;0.00;0.00;0.00
getInactiveControlTextColor,3,0.582250715,Returns the inactive control text color. This returns a color with an rgb hex value of 0x999999.,;javax.swing.plaf.metal.MetalLookAndFeel.getInactiveControlTextColor();javax.swing.plaf.metal.MetalTheme.getInactiveControlTextColor();javax.swing.plaf.metal.OceanTheme.getInactiveControlTextColor(),;0.53;0.57;0.58
getInputAttributes,3,0.441726721,Gets the input attributes used for the styled editing actions.,;javax.swing.JTextPane.getInputAttributes();javax.swing.text.StyledEditorKit.getInputAttributes();javax.swing.text.html.HTMLEditorKit.getInputAttributes(),;0.44;0.40;0.44
getInputMethodRequests,3,0.666666667,Description copied from class:Component,;java.awt.Component.getInputMethodRequests();java.awt.TextComponent.getInputMethodRequests();javax.swing.text.JTextComponent.getInputMethodRequests(),;0.33;0.67;0.67
getIntegerInstance,3,0.832670213,"Returns an integer number format for the specified locale. The returned number format is configured to round floating point numbers to the nearest integer using half-even rounding (see RoundingMode.HALF_EVEN) for formatting, and to parse only the integer part of an input string (see isParseIntegerOnly).",;java.text.NumberFormat.getIntegerInstance();java.text.NumberFormat.getIntegerInstance(Locale);java.text.spi.NumberFormatProvider.getIntegerInstance(Locale),;0.78;0.83;0.80
getIssuerDN,3,0.926383163,"Denigrated, replaced by getIssuerX500Principal(). This method returns the issuer as an implementation specific Principal object, which should not be relied upon by portable code. Gets the issuer (issuer distinguished name) value from the certificate. The issuer name identifies the entity that signed (and issued) the certificate. The issuer name field contains an X.500 distinguished name (DN). The ASN.1 definition for this is: issuer Name Name ::= CHOICE { RDNSequence } RDNSequence ::= SEQUENCE OF RelativeDistinguishedName RelativeDistinguishedName ::= SET OF AttributeValueAssertion AttributeValueAssertion ::= SEQUENCE { AttributeType, AttributeValue } AttributeType ::= OBJECT IDENTIFIER AttributeValue ::= ANY The Name describes a hierarchical name composed of attributes, such as country name, and corresponding values, such as US. The type of the AttributeValue component is determined by the AttributeType; in general it will be a directoryString. A directoryString is usually one of PrintableString, TeletexString or UniversalString.",;java.security.cert.X509Certificate.getIssuerDN();java.security.cert.X509CRL.getIssuerDN();javax.security.cert.X509Certificate.getIssuerDN(),;0.93;0.91;0.86
getKeyStroke,3,0.333333333,"Parses a string and returns a KeyStroke. The string must have the following syntax: &lt;modifiers&gt;* (&lt;typedID&gt; | &lt;pressedReleasedID&gt;) modifiers := shift | control | ctrl | meta | alt | altGraph typedID := typed &lt;typedKey&gt; typedKey := string of length 1 giving Unicode character. pressedReleasedID := (pressed | released) key key := KeyEvent key code name, i.e. the name following ""VK_"". If typed, pressed or released is not specified, pressed is assumed. Here are some examples: ""INSERT"" =&gt; getKeyStroke(KeyEvent.VK_INSERT, 0); ""control DELETE"" =&gt; getKeyStroke(KeyEvent.VK_DELETE, InputEvent.CTRL_MASK); ""alt shift X"" =&gt; getKeyStroke(KeyEvent.VK_X, InputEvent.ALT_MASK | InputEvent.SHIFT_MASK); ""alt shift released X"" =&gt; getKeyStroke(KeyEvent.VK_X, InputEvent.ALT_MASK | InputEvent.SHIFT_MASK, true); ""typed a"" =&gt; getKeyStroke('a'); In order to maintain backward-compatibility, specifying a null String, or a String which is formatted incorrectly, returns null.",";javax.swing.KeyStroke.getKeyStroke(char);javax.swing.KeyStroke.getKeyStroke(char,boolean);javax.swing.KeyStroke.getKeyStroke(String)",;0.33;0.33;0.33
getLastModified,3,0.333333333,This implementation returns 0L. Subclasses can change this behavior as long as the contract of FileObject is obeyed.,;java.net.URLConnection.getLastModified();javax.tools.ForwardingFileObject.getLastModified();javax.tools.SimpleJavaFileObject.getLastModified(),;0.33;0.33;0.33
getLayer,3,0.333333333,Returns the layer attribute for the specified Component.,;javax.swing.JInternalFrame.getLayer();javax.swing.JLayeredPane.getLayer(JComponent);javax.swing.JLayeredPane.getLayer(Component),;0.33;0.33;0.33
getLayoutStyle,3,0.333333333,Returns a LayoutStyle implementing the Java look and feel design guidelines as specified at http://www.oracle.com/technetwork/java/hig-136467.html.,;javax.swing.GroupLayout.getLayoutStyle();javax.swing.LookAndFeel.getLayoutStyle();javax.swing.plaf.metal.MetalLookAndFeel.getLayoutStyle(),;0.33;0.33;0.33
getLeading,3,0.367591359,Returns the leading of the text. The leading is the recommended distance from the bottom of the descender line to the top of the next line.,;java.awt.FontMetrics.getLeading();java.awt.font.LineMetrics.getLeading();java.awt.font.TextLayout.getLeading(),;0.36;0.37;0.36
getLeadSelectionRow,3,0.333333333,Returns the lead selection index. That is the last index that was added.,;javax.swing.JTree.getLeadSelectionRow();javax.swing.plaf.basic.BasicTreeUI.getLeadSelectionRow();javax.swing.tree.DefaultTreeSelectionModel.getLeadSelectionRow(),;0.33;0.33;0.33
getLineInstance,3,0.942172273,Returns a new BreakIterator instance for line breaks for the given locale.,;java.text.BreakIterator.getLineInstance();java.text.BreakIterator.getLineInstance(Locale);java.text.spi.BreakIteratorProvider.getLineInstance(Locale),;0.88;0.94;0.94
getListener,3,0.556246768,Description copied from interface:Unmarshaller,;java.util.EventListenerProxy.getListener();javax.xml.bind.helpers.AbstractMarshallerImpl.getListener();javax.xml.bind.helpers.AbstractUnmarshallerImpl.getListener(),;0.33;0.56;0.56
getLocalName,3,0.333333333,Return an attribute's local name.,;javax.imageio.metadata.IIOMetadataNode.getLocalName();javax.xml.stream.util.StreamReaderDelegate.getLocalName();org.xml.sax.helpers.AttributesImpl.getLocalName(int),;0.00;0.33;0.33
getLocalPrincipal,3,0.494413684,Returns the principal that was sent to the server during handshaking in the original connection that retrieved the network resource.,;java.net.SecureCacheResponse.getLocalPrincipal();javax.net.ssl.HandshakeCompletedEvent.getLocalPrincipal();javax.net.ssl.HttpsURLConnection.getLocalPrincipal(),;0.49;0.45;0.44
getLocalSocketAddress,3,0.571958179,"Returns the address of the endpoint this socket is bound to. If the socket was bound prior to being closed, then this method will continue to return the address of the endpoint after the socket is closed. If there is a security manager set, its checkConnect method is called with the local address and -1 as its arguments to see if the operation is allowed. If the operation is not allowed, a SocketAddress representing the loopback address and the local port to which the socket is bound is returned.",;java.net.DatagramSocket.getLocalSocketAddress();java.net.ServerSocket.getLocalSocketAddress();java.net.Socket.getLocalSocketAddress(),;0.33;0.57;0.57
getManifest,3,0.635936833,"Returns the Manifest for this connection, or null if none.",;java.net.JarURLConnection.getManifest();java.util.jar.JarFile.getManifest();java.util.jar.JarInputStream.getManifest(),;0.64;0.54;0.63
getMBeanServer,3,0.374042885,"The MBeanServer to which this connector server is attached. This is the last value passed to setMBeanServer(javax.management.MBeanServer) on this object, or null if that method has never been called.",;javax.management.QueryEval.getMBeanServer();javax.management.remote.JMXConnectorServer.getMBeanServer();javax.management.remote.rmi.RMIServerImpl.getMBeanServer(),;0.35;0.35;0.37
getMBeanServerConnection,3,0.666666667,Description copied from interface:JMXConnector,;javax.management.MBeanServerInvocationHandler.getMBeanServerConnection();javax.management.remote.rmi.RMIConnector.getMBeanServerConnection();javax.management.remote.rmi.RMIConnector.getMBeanServerConnection(Subject),;0.33;0.67;0.67
getMechanismType,3,0.612372337,Returns the type of the XML processing mechanism and representation supported by this KeyInfoFactory (ex: "DOM"),;javax.xml.crypto.dsig.TransformService.getMechanismType();javax.xml.crypto.dsig.XMLSignatureFactory.getMechanismType();javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.getMechanismType(),;0.33;0.61;0.61
getMenuBar,3,0.666666667,Deprecated.As of Swing version 1.0.3 replaced by getJMenuBar().,;java.awt.Frame.getMenuBar();javax.swing.JInternalFrame.getMenuBar();javax.swing.JRootPane.getMenuBar(),;0.33;0.67;0.67
getMenuDisabledForeground,3,0.582250715,Returns the menu disabled foreground color. This returns a color with an rgb hex value of 0x999999.,;javax.swing.plaf.metal.MetalLookAndFeel.getMenuDisabledForeground();javax.swing.plaf.metal.MetalTheme.getMenuDisabledForeground();javax.swing.plaf.metal.OceanTheme.getMenuDisabledForeground(),;0.53;0.57;0.58
getMenuTextFont,3,0.439922115,Returns the menu text font of the current theme. This is a cover method for getCurrentTheme().getMenuTextFont().,;javax.swing.plaf.metal.DefaultMetalTheme.getMenuTextFont();javax.swing.plaf.metal.MetalLookAndFeel.getMenuTextFont();javax.swing.plaf.metal.MetalTheme.getMenuTextFont(),;0.41;0.44;0.37
getMessageType,3,0.666666667,Get the message type.,;javax.security.auth.callback.ConfirmationCallback.getMessageType();javax.security.auth.callback.TextOutputCallback.getMessageType();javax.swing.JOptionPane.getMessageType(),;0.67;0.67;0.33
getMethod,3,0.333333333,Gets the form method type.,;java.beans.MethodDescriptor.getMethod();java.util.zip.ZipEntry.getMethod();javax.swing.text.html.FormSubmitEvent.getMethod(),;0.33;0.33;0.33
getMin,3,0.594180763,"Returns the minimum value recorded, or Long.MAX_VALUE if no values have been recorded.",;java.util.DoubleSummaryStatistics.getMin();java.util.IntSummaryStatistics.getMin();java.util.LongSummaryStatistics.getMin(),;0.33;0.59;0.59
getMinimalDaysInFirstWeek,3,0.465605087,Returns the minimal number of days required in the first week of a year. This information is required by Calendar to determine the first week of a year. Refer to the description of how Calendar determines the first week.,;java.time.temporal.WeekFields.getMinimalDaysInFirstWeek();java.util.Calendar.getMinimalDaysInFirstWeek();java.util.spi.CalendarDataProvider.getMinimalDaysInFirstWeek(Locale),;0.45;0.43;0.47
getMinimumThumbSize,3,0.666666667,"Returns the smallest acceptable size for the thumb. If the scrollbar becomes so small that this size isn't available, the thumb will be hidden. Warning : the value returned by this method should not be be modified, it's a shared static constant.",;javax.swing.plaf.basic.BasicScrollBarUI.getMinimumThumbSize();javax.swing.plaf.metal.MetalScrollBarUI.getMinimumThumbSize();javax.swing.plaf.synth.SynthScrollBarUI.getMinimumThumbSize(),;0.67;0.33;0.67
getMinutes,3,0.333333333,"Obtains the value of the MINUTES field as an integer value, or 0 if not present. This method works just like getYears() except that this method works on the MINUTES field.",;java.sql.Date.getMinutes();java.util.Date.getMinutes();javax.xml.datatype.Duration.getMinutes(),;0.00;0.33;0.33
getMnemonic,3,0.333333333,"Provides a hint to the look and feel as to the KeyEvent.VK constant that can be used as a mnemonic to access the panel. A return value &lt;= 0 indicates there is no mnemonic. The return value here is a hint, it is ultimately up to the look and feel to honor the return value in some meaningful way. This implementation returns 0, indicating the AbstractColorChooserPanel does not support a mnemonic, subclasses wishing a mnemonic will need to override this.",;javax.swing.AbstractButton.getMnemonic();javax.swing.DefaultButtonModel.getMnemonic();javax.swing.colorchooser.AbstractColorChooserPanel.getMnemonic(),;0.33;0.33;0.33
getModulus,3,0.333333333,Gets the modulus value common to all observed MBeans.,;java.security.spec.RSAPrivateKeySpec.getModulus();java.security.spec.RSAPublicKeySpec.getModulus();javax.management.monitor.CounterMonitor.getModulus(),;0.00;0.00;0.33
getMonths,3,0.333333333,"Obtains the value of the MONTHS field as an integer value, or 0 if not present. This method works just like getYears() except that this method works on the MONTHS field.",;java.text.DateFormatSymbols.getMonths();java.time.Period.getMonths();javax.xml.datatype.Duration.getMonths(),;0.33;0.33;0.33
getNavigationFilter,3,0.365383647,Subclass and override if you wish to provide a filter to restrict where the user can navigate to. install will install the returned value onto the JFormattedTextField.,;javax.swing.JFormattedTextField.AbstractFormatter.getNavigationFilter();javax.swing.text.DefaultFormatter.getNavigationFilter();javax.swing.text.JTextComponent.getNavigationFilter(),;0.37;0.36;0.33
getNewValue,3,0.53297604,"Gets the new value for the property, expressed as an Object.",;java.beans.PropertyChangeEvent.getNewValue();java.util.prefs.PreferenceChangeEvent.getNewValue();javax.management.AttributeChangeNotification.getNewValue(),;0.53;0.45;0.42
getNextLeftHit,3,0.744029892,"Returns the hit for the next caret to the left (top); if no such hit, returns null. The hit is to the left of the strong caret at the specified offset, as determined by the default policy. The returned hit is the stronger of the two possible hits, as determined by the default policy.",";java.awt.font.TextLayout.getNextLeftHit(TextHitInfo);java.awt.font.TextLayout.getNextLeftHit(int,TextLayout.CaretPolicy);java.awt.font.TextLayout.getNextLeftHit(int)",;0.51;0.74;0.74
getNextRightHit,3,0.732915993,"Returns the hit for the next caret to the right (bottom); if no such hit, returns null. The hit is to the right of the strong caret at the specified offset, as determined by the default policy. The returned hit is the stronger of the two possible hits, as determined by the default policy.",";java.awt.font.TextLayout.getNextRightHit(TextHitInfo);java.awt.font.TextLayout.getNextRightHit(int,TextLayout.CaretPolicy);java.awt.font.TextLayout.getNextRightHit(int)",;0.50;0.73;0.73
getNodeDimensions,3,0.477592036,"Returns, by reference in bounds, the size and x origin to place value at. The calling method is responsible for determining the Y location. If bounds is null, a newly created Rectangle should be returned, otherwise the value should be placed in bounds and returned.",";javax.swing.tree.AbstractLayoutCache.getNodeDimensions();javax.swing.tree.AbstractLayoutCache.getNodeDimensions(Object,int,int,boolean,Rectangle);javax.swing.tree.AbstractLayoutCache.NodeDimensions.getNodeDimensions(Object,int,int,boolean,Rectangle)",;0.33;0.48;0.48
getNotification,3,0.333333333,Returns the unsolicited notification.,;javax.management.modelmbean.ModelMBeanInfoSupport.getNotification(String);javax.management.remote.TargetedNotification.getNotification();javax.naming.ldap.UnsolicitedNotificationEvent.getNotification(),;0.33;0.00;0.33
getNumBands,3,0.378002753,Return the number of bands specified by this object. This is the same value as returned by SampleModel.getNumBands,;java.awt.image.Raster.getNumBands();java.awt.image.SampleModel.getNumBands();javax.imageio.ImageTypeSpecifier.getNumBands(),;0.37;0.33;0.38
getNumberInstance,3,0.511479327,Returns a general-purpose number format for the specified locale.,;java.text.NumberFormat.getNumberInstance();java.text.NumberFormat.getNumberInstance(Locale);java.text.spi.NumberFormatProvider.getNumberInstance(Locale),;0.44;0.51;0.44
getObjectName,3,0.333333333,Returns the ObjectName of the created/removed/updated relation.,;javax.management.MBeanServerInvocationHandler.getObjectName();javax.management.ObjectInstance.getObjectName();javax.management.relation.RelationNotification.getObjectName(),;0.33;0.33;0.33
getPackage,3,0.465485923,"Gets the package for this class. The class loader of this class is used to find the package. If the class was loaded by the bootstrap class loader the set of packages loaded from CLASSPATH is searched to find the package of the class. Null is returned if no package object was created by the class loader of this class. Packages have attributes for versions and specifications only if the information was defined in the manifests that accompany the classes, and if the class loader created the package instance with the attributes from the manifest.",;java.lang.Class.getPackage();java.lang.ClassLoader.getPackage(String);java.lang.Package.getPackage(String),;0.47;0.33;0.46
getPainter,3,0.467300325,"Returns the SynthPainter that will be used for painting. This may return null. Returns the SynthPainter for this style, which ends up delegating to the Painters installed in this style.",";javax.swing.plaf.nimbus.NimbusStyle.getPainter(SynthContext);javax.swing.plaf.synth.SynthStyle.getPainter(SynthContext);javax.swing.text.GlyphView.GlyphPainter.getPainter(GlyphView,int,int)",;0.47;0.42;0.33
getParameterAnnotations,3,1,"Returns an array of arrays of Annotations that represent the annotations on the formal parameters, in declaration order, of the Executable represented by this object. Synthetic and mandated parameters (see explanation below), such as the outer ""this"" parameter to an inner class constructor will be represented in the returned array. If the executable has no parameters (meaning no formal, no synthetic, and no mandated parameters), a zero-length array will be returned. If the Executable has one or more parameters, a nested array of length zero is returned for each parameter with no annotations. The annotation objects contained in the returned arrays are serializable. The caller of this method is free to modify the returned arrays; it will have no effect on the arrays returned to other callers. A compiler may add extra parameters that are implicitly declared in source (""mandated""), as well as parameters that are neither implicitly nor explicitly declared in source (""synthetic"") to the parameter list for a method. See Parameter for more information.",;java.lang.reflect.Constructor.getParameterAnnotations();java.lang.reflect.Executable.getParameterAnnotations();java.lang.reflect.Method.getParameterAnnotations(),;1.00;1.00;1.00
getParameterCount,3,1,Returns the number of formal parameters (whether explicitly declared or implicitly declared or neither) for the executable represented by this object.,;java.lang.reflect.Constructor.getParameterCount();java.lang.reflect.Executable.getParameterCount();java.lang.reflect.Method.getParameterCount(),;1.00;1.00;1.00
getParser,3,0.333333333,Returns the SAX parser that is encapsultated by the implementation of this class.,;javax.swing.text.html.HTMLDocument.getParser();javax.swing.text.html.HTMLEditorKit.getParser();javax.xml.parsers.SAXParser.getParser(),;0.33;0.33;0.33
getPathClosestTo,3,0.98530374,"Returns the path to the node that is closest to x,y. If there is nothing currently visible this will return null, otherwise it'll always return a valid path. If you need to test if the returned object is exactly at x, y you should get the bounds for the returned path and test x, y against that.",";javax.swing.tree.AbstractLayoutCache.getPathClosestTo(int,int);javax.swing.tree.FixedHeightLayoutCache.getPathClosestTo(int,int);javax.swing.tree.VariableHeightLayoutCache.getPathClosestTo(int,int)",;0.99;0.99;0.97
getPathToRoot,3,1,"Builds the parents of node up to and including the root node, where the original node is the last element in the returned array. The length of the returned array gives the node's depth in the tree.",";javax.swing.tree.DefaultMutableTreeNode.getPathToRoot(TreeNode,int);javax.swing.tree.DefaultTreeModel.getPathToRoot(TreeNode);javax.swing.tree.DefaultTreeModel.getPathToRoot(TreeNode,int)",;1.00;1.00;1.00
getPeer,3,0.580113934,"Deprecated.As of JDK version 1.1, programs should not directly manipulate peers; replaced by boolean isDisplayable().",;java.awt.Component.getPeer();java.awt.Font.getPeer();java.awt.MenuComponent.getPeer(),;0.58;0.33;0.58
getPeerPrincipal,3,0.514968621,Returns the server's principal which was established as part of defining the session during the original connection that retrieved the network resource.,;java.net.SecureCacheResponse.getPeerPrincipal();javax.net.ssl.HandshakeCompletedEvent.getPeerPrincipal();javax.net.ssl.HttpsURLConnection.getPeerPrincipal(),;0.51;0.47;0.47
getPercentInstance,3,0.455982611,Returns a percentage format for the specified locale.,;java.text.NumberFormat.getPercentInstance();java.text.NumberFormat.getPercentInstance(Locale);java.text.spi.NumberFormatProvider.getPercentInstance(Locale),;0.41;0.46;0.41
getPolicy,3,0.333333333,"Returns the policy criterion. The X509Certificate must include at least one of the specified policies in its certificate policies extension. If the Set returned is empty, then the X509Certificate must include at least some specified policy in its certificate policies extension. If the Set returned is null, no policy check will be performed.",;java.security.Policy.getPolicy();java.security.cert.X509CertSelector.getPolicy();javax.security.auth.Policy.getPolicy(),;0.33;0.33;0.00
getPopup,3,0.333333333,Invokes the getPopup method on each UI handled by this object.,";javax.swing.PopupFactory.getPopup(Component,Component,int,int);javax.swing.plaf.PopupMenuUI.getPopup(JPopupMenu,int,int);javax.swing.plaf.multi.MultiPopupMenuUI.getPopup(JPopupMenu,int,int)",;0.33;0.33;0.33
getPrecision,3,0.333333333,Retrieves the total number of digits for values stored in the designated column.,;java.math.MathContext.getPrecision();javax.sound.sampled.FloatControl.getPrecision();javax.sql.rowset.RowSetMetaDataImpl.getPrecision(int),;0.33;0.33;0.33
getPreferredWidth,3,0.406054844,Returns the preferred width of the TableColumn. The default preferred width is 75.,;javax.swing.table.TableColumn.getPreferredWidth();javax.swing.tree.AbstractLayoutCache.getPreferredWidth(Rectangle);javax.swing.tree.VariableHeightLayoutCache.getPreferredWidth(Rectangle),;0.41;0.37;0.41
getPresentationName,3,0.333333333,Gets the presentation name for this edit,;javax.swing.undo.AbstractUndoableEdit.getPresentationName();javax.swing.undo.CompoundEdit.getPresentationName();javax.swing.undo.StateEdit.getPresentationName(),;0.33;0.33;0.33
getPrimary1,3,0.58908924,Returns the primary 1 color. This returns a color with an rgb hex value of 0x6382BF.,;javax.swing.plaf.metal.DefaultMetalTheme.getPrimary1();javax.swing.plaf.metal.MetalTheme.getPrimary1();javax.swing.plaf.metal.OceanTheme.getPrimary1(),;0.58;0.40;0.59
getPrimary2,3,0.600662258,Returns the primary 2 color. This returns a color with an rgb hex value of 0xA3B8CC.,;javax.swing.plaf.metal.DefaultMetalTheme.getPrimary2();javax.swing.plaf.metal.MetalTheme.getPrimary2();javax.swing.plaf.metal.OceanTheme.getPrimary2(),;0.59;0.40;0.60
getPrimary3,3,0.608606329,Returns the primary 3 color. This returns a color with an rgb hex value of 0xB8CFE5.,;javax.swing.plaf.metal.DefaultMetalTheme.getPrimary3();javax.swing.plaf.metal.MetalTheme.getPrimary3();javax.swing.plaf.metal.OceanTheme.getPrimary3(),;0.61;0.41;0.61
getPrintService,3,0.333333333,Returns the print service.,;java.awt.print.PrinterJob.getPrintService();javax.print.StreamPrintServiceFactory.getPrintService(OutputStream);javax.print.event.PrintServiceAttributeEvent.getPrintService(),;0.33;0.33;0.33
getPrivateKey,3,0.333333333,Gets the PrivateKey from this entry.,;java.security.KeyStore.PrivateKeyEntry.getPrivateKey();java.security.Signer.getPrivateKey();javax.security.auth.x500.X500PrivateCredential.getPrivateKey(),;0.33;0.00;0.00
getPropertyName,3,0.666666667,Returns the name of the named property associated with the listener.,;java.beans.PropertyChangeEvent.getPropertyName();java.beans.PropertyChangeListenerProxy.getPropertyName();java.beans.VetoableChangeListenerProxy.getPropertyName(),;0.33;0.67;0.67
getPublicId,3,0.435032507,Get the public identifier for this input source.,;javax.xml.transform.stream.StreamSource.getPublicId();org.xml.sax.InputSource.getPublicId();org.xml.sax.helpers.LocatorImpl.getPublicId(),;0.43;0.44;0.33
getQ,3,1,Returns the sub-prime q.,;java.security.spec.DSAParameterSpec.getQ();java.security.spec.DSAPrivateKeySpec.getQ();java.security.spec.DSAPublicKeySpec.getQ(),;1.00;1.00;1.00
getReceiveBufferSize,3,0.65734353,"Gets the value of the SO_RCVBUF option for this Socket, that is the buffer size used by the platform for input on this Socket.",;java.net.DatagramSocket.getReceiveBufferSize();java.net.ServerSocket.getReceiveBufferSize();java.net.Socket.getReceiveBufferSize(),;0.64;0.48;0.66
getRedoPresentationName,3,0.35068626,"Returns a description of the redoable form of this edit. If end has been invoked this calls into super. Otherwise if there are edits to be redone, this returns the value from the next significant edit that will be redone. If there are no edits to be redone and end has not been invoked this returns the value from the UIManager property ""AbstractUndoableEdit.redoText"".",;javax.swing.undo.AbstractUndoableEdit.getRedoPresentationName();javax.swing.undo.CompoundEdit.getRedoPresentationName();javax.swing.undo.UndoManager.getRedoPresentationName(),;0.35;0.33;0.35
getResolution,3,0.596034091,"Obtains the timing resolution for the MIDI file. If the division type is PPQ, the resolution is specified in ticks per beat. For SMTPE timing, the resolution is specified in ticks per frame.",;javax.print.attribute.ResolutionSyntax.getResolution(int);javax.sound.midi.MidiFileFormat.getResolution();javax.sound.midi.Sequence.getResolution(),;0.33;0.60;0.60
getResourceAsStream,3,0.482779557,"Returns an input stream for reading the specified resource. If this loader is closed, then any resources opened by this method will be closed. The search order is described in the documentation for ClassLoader.getResource(String).",";java.beans.beancontext.BeanContextSupport.getResourceAsStream(String,BeanContextChild);java.lang.ClassLoader.getResourceAsStream(String);java.net.URLClassLoader.getResourceAsStream(String)",;0.33;0.46;0.48
getResourceBundleName,3,0.393859403,Get the localization resource bundle name This is the name for the ResourceBundle that should be used to localize the message string before formatting it. The result may be null if the message is not localizable.,;java.util.logging.Level.getResourceBundleName();java.util.logging.Logger.getResourceBundleName();java.util.logging.LogRecord.getResourceBundleName(),;0.36;0.39;0.39
getResourceResolver,3,0.893930944,Gets the current LSResourceResolver set to this ValidatorHandler.,;javax.xml.validation.SchemaFactory.getResourceResolver();javax.xml.validation.Validator.getResourceResolver();javax.xml.validation.ValidatorHandler.getResourceResolver(),;0.89;0.89;0.89
getReuseAddress,3,1,Tests if SO_REUSEADDR is enabled.,;java.net.DatagramSocket.getReuseAddress();java.net.ServerSocket.getReuseAddress();java.net.Socket.getReuseAddress(),;1.00;1.00;1.00
getRoleName,3,0.333333333,Returns name of updated role of updated relation (only for role update).,;javax.management.relation.RelationNotification.getRoleName();javax.management.relation.Role.getRoleName();javax.management.relation.RoleUnresolved.getRoleName(),;0.33;0.00;0.00
getRoles,3,0.423977563,Retrieves values of roles with given names. Checks for each role if it exists and is readable according to the relation type.,";javax.management.relation.RelationService.getRoles(String,String[]);javax.management.relation.RelationSupport.getRoles(String[]);javax.management.relation.RoleResult.getRoles()",;0.40;0.42;0.33
getRootView,3,0.453912354,"Fetches a View with the allocation of the associated text component (i.e. the root of the hierarchy) that can be traversed to determine how the model is being represented spatially. NOTE:The View hierarchy can be traversed from the root view, and other things can be done as well. Things done in this way cannot be protected like simple method calls through the TextUI. Therefore, proper operation in the presence of concurrency must be arranged by any logic that calls this method!",;javax.swing.plaf.TextUI.getRootView(JTextComponent);javax.swing.plaf.basic.BasicTextUI.getRootView(JTextComponent);javax.swing.plaf.multi.MultiTextUI.getRootView(JTextComponent),;0.40;0.45;0.33
getRoundingMode,3,0.388173098,Gets the RoundingMode used in this NumberFormat. The default implementation of this method in NumberFormat always throws UnsupportedOperationException. Subclasses which handle different rounding modes should override this method.,;java.math.MathContext.getRoundingMode();java.text.DecimalFormat.getRoundingMode();java.text.NumberFormat.getRoundingMode(),;0.33;0.35;0.39
getRule,3,0.333333333,"Fetches the rule that best matches the selector given in string form. Where selector is a space separated String of the element names. For example, selector might be 'html body tr td'' The attributes of the returned Style will change as rules are added and removed. That is if you to ask for a rule with a selector ""table p"" and a new rule was added with a selector of ""p"" the returned Style would include the new attributes from the rule ""p"".",";java.awt.AlphaComposite.getRule();javax.swing.text.html.StyleSheet.getRule(HTML.Tag,Element);javax.swing.text.html.StyleSheet.getRule(String)",;0.33;0.33;0.33
getScanlineStride,3,0.740080109,Returns the scanline stride of this SinglePixelPackedSampleModel.,;java.awt.image.ComponentSampleModel.getScanlineStride();java.awt.image.MultiPixelPackedSampleModel.getScanlineStride();java.awt.image.SinglePixelPackedSampleModel.getScanlineStride(),;0.74;0.65;0.74
getScheme,3,0.333333333,"Returns the name of the scheme used to make this request, for example: http, or https.",;java.net.URI.getScheme();java.nio.file.spi.FileSystemProvider.getScheme();javax.xml.ws.spi.http.HttpExchange.getScheme(),;0.33;0.33;0.33
getSecondary1,3,0.596552004,Returns the secondary 1 color. This returns a color with an rgb hex value of 0x7A8A99.,;javax.swing.plaf.metal.DefaultMetalTheme.getSecondary1();javax.swing.plaf.metal.MetalTheme.getSecondary1();javax.swing.plaf.metal.OceanTheme.getSecondary1(),;0.59;0.40;0.60
getSecondary2,3,0.596552004,Returns the secondary 2 color. This returns a color with an rgb hex value of 0xB8CFE5.,;javax.swing.plaf.metal.DefaultMetalTheme.getSecondary2();javax.swing.plaf.metal.MetalTheme.getSecondary2();javax.swing.plaf.metal.OceanTheme.getSecondary2(),;0.59;0.40;0.60
getSecondary3,3,0.596552004,Returns the secondary 3 color. This returns a color with an rgb hex value of 0xEEEEEE.,;javax.swing.plaf.metal.DefaultMetalTheme.getSecondary3();javax.swing.plaf.metal.MetalTheme.getSecondary3();javax.swing.plaf.metal.OceanTheme.getSecondary3(),;0.59;0.40;0.60
getSelectionBackground,3,0.333333333,The "selectionBackground" is the color of the text when it is painted over an unfilled area of the progress bar.,;javax.swing.JList.getSelectionBackground();javax.swing.JTable.getSelectionBackground();javax.swing.plaf.basic.BasicProgressBarUI.getSelectionBackground(),;0.33;0.33;0.33
getSelectionForeground,3,0.333333333,The "selectionForeground" is the color of the text when it is painted over a filled area of the progress bar.,;javax.swing.JList.getSelectionForeground();javax.swing.JTable.getSelectionForeground();javax.swing.plaf.basic.BasicProgressBarUI.getSelectionForeground(),;0.33;0.33;0.33
getSelectionMode,3,0.375002544,Returns the current selection mode for the list. This is a cover method that delegates to the method of the same name on the list's selection model.,;javax.swing.DefaultListSelectionModel.getSelectionMode();javax.swing.JList.getSelectionMode();javax.swing.tree.DefaultTreeSelectionModel.getSelectionMode(),;0.34;0.38;0.33
getSentenceInstance,3,0.942172273,Returns a new BreakIterator instance for sentence breaks for the given locale.,;java.text.BreakIterator.getSentenceInstance();java.text.BreakIterator.getSentenceInstance(Locale);java.text.spi.BreakIteratorProvider.getSentenceInstance(Locale),;0.88;0.94;0.94
getSigAlgName,3,0.961315772,"Gets the signature algorithm name for the certificate signature algorithm. An example is the string ""SHA256withRSA"". The ASN.1 definition for this is: signatureAlgorithm AlgorithmIdentifier AlgorithmIdentifier ::= SEQUENCE { algorithm OBJECT IDENTIFIER, parameters ANY DEFINED BY algorithm OPTIONAL } -- contains a value of the type -- registered for use with the -- algorithm object identifier value The algorithm name is determined from the algorithm OID string.",;java.security.cert.X509Certificate.getSigAlgName();java.security.cert.X509CRL.getSigAlgName();javax.security.cert.X509Certificate.getSigAlgName(),;0.96;0.95;0.94
getSigAlgOID,3,0.870567051,"Gets the signature algorithm OID string from the certificate. An OID is represented by a set of nonnegative whole numbers separated by periods. For example, the string ""1.2.840.10040.4.3"" identifies the SHA-1 with DSA signature algorithm defined in RFC 3279: Algorithms and Identifiers for the Internet X.509 Public Key Infrastructure Certificate and CRL Profile. See getSigAlgName for relevant ASN.1 definitions.",;java.security.cert.X509Certificate.getSigAlgOID();java.security.cert.X509CRL.getSigAlgOID();javax.security.cert.X509Certificate.getSigAlgOID(),;0.87;0.86;0.75
getSigAlgParams,3,0.845446409,"Gets the DER-encoded signature algorithm parameters from this certificate's signature algorithm. In most cases, the signature algorithm parameters are null; the parameters are usually supplied with the certificate's public key. If access to individual parameter values is needed then use AlgorithmParameters and instantiate with the name returned by getSigAlgName. See getSigAlgName for relevant ASN.1 definitions.",;java.security.cert.X509Certificate.getSigAlgParams();java.security.cert.X509CRL.getSigAlgParams();javax.security.cert.X509Certificate.getSigAlgParams(),;0.85;0.82;0.71
getSoTimeout,3,0.978377828,"Retrieve setting for SO_TIMEOUT. 0 returns implies that the option is disabled (i.e., timeout of infinity).",;java.net.DatagramSocket.getSoTimeout();java.net.ServerSocket.getSoTimeout();java.net.Socket.getSoTimeout(),;0.98;0.98;0.96
getSources,3,0.390411703,"Returns a Vector of RenderedImage objects that are the immediate sources, not the sources of these immediate sources, of image data for this BufferedImage. This method returns null if the BufferedImage has no information about its immediate sources. It returns an empty Vector if the BufferedImage has no immediate sources.",;java.awt.image.BufferedImage.getSources();java.awt.image.renderable.ParameterBlock.getSources();java.awt.image.renderable.RenderableImageOp.getSources(),;0.39;0.33;0.39
getSSLParameters,3,0.873959053,Returns the SSLParameters in effect for this SSLSocket. The ciphersuites and protocols of the returned SSLParameters are always non-null.,;javax.net.ssl.SSLEngine.getSSLParameters();javax.net.ssl.SSLServerSocket.getSSLParameters();javax.net.ssl.SSLSocket.getSSLParameters(),;0.87;0.84;0.87
getStackTrace,3,0.675178384,"Returns an array of stack trace elements representing the stack dump of this thread. This method will return a zero-length array if this thread has not started, has started but has not yet been scheduled to run by the system, or has terminated. If the returned array is of non-zero length then the first element of the array represents the top of the stack, which is the most recent method invocation in the sequence. The last element of the array represents the bottom of the stack, which is the least recent method invocation in the sequence. If there is a security manager, and this thread is not the current thread, then the security manager's checkPermission method is called with a RuntimePermission(""getStackTrace"") permission to see if it's ok to get the stack trace. Some virtual machines may, under some circumstances, omit one or more stack frames from the stack trace. In the extreme case, a virtual machine that has no stack trace information concerning this thread is permitted to return a zero-length array from this method.",;java.lang.Thread.getStackTrace();java.lang.Throwable.getStackTrace();java.lang.management.ThreadInfo.getStackTrace(),;0.68;0.64;0.66
getStatus,3,0.333333333,Obtains the status byte for the MIDI message. The status "byte" is represented as an integer; see the discussion in the MidiMessage class description.,;java.awt.image.PixelGrabber.getStatus();javax.net.ssl.SSLEngineResult.getStatus();javax.sound.midi.MidiMessage.getStatus(),;0.33;0.33;0.33
getStyleSheet,3,0.333333333,Convenience method to get the StyleSheet.,;javax.swing.text.html.HTMLDocument.getStyleSheet();javax.swing.text.html.HTMLEditorKit.getStyleSheet();javax.swing.text.html.ImageView.getStyleSheet(),;0.33;0.33;0.33
getSubTextFont,3,0.532325854,"Returns the sub-text font. This returns Dialog, 10pt, plain.",;javax.swing.plaf.metal.DefaultMetalTheme.getSubTextFont();javax.swing.plaf.metal.MetalLookAndFeel.getSubTextFont();javax.swing.plaf.metal.MetalTheme.getSubTextFont(),;0.53;0.48;0.49
getSuffix,3,0.724707365,Creates a composite name whose components consist of a suffix of the components in this composite name. Subsequent changes to this composite name does not affect the name that is returned.,;javax.naming.CompositeName.getSuffix(int);javax.naming.CompoundName.getSuffix(int);javax.naming.ldap.LdapName.getSuffix(int),;0.72;0.67;0.71
getSum,3,0.666895086,"Returns the sum of values recorded, or zero if no values have been recorded.",;java.util.DoubleSummaryStatistics.getSum();java.util.IntSummaryStatistics.getSum();java.util.LongSummaryStatistics.getSum(),;0.41;0.67;0.67
getSupportedProtocols,3,0.833991869,Returns the names of the protocols which could be enabled for use with this SSLEngine.,;javax.net.ssl.SSLEngine.getSupportedProtocols();javax.net.ssl.SSLServerSocket.getSupportedProtocols();javax.net.ssl.SSLSocket.getSupportedProtocols(),;0.83;0.83;0.81
getSymbol,3,0.807275032,"Gets the symbol of this currency for the specified locale. For example, for the US Dollar, the symbol is ""$"" if the specified locale is the US, while for other locales it may be ""US$"". If no symbol can be determined, the ISO 4217 currency code is returned.",";java.util.Currency.getSymbol();java.util.Currency.getSymbol(Locale);java.util.spi.CurrencyNameProvider.getSymbol(String,Locale)",;0.73;0.81;0.74
getSystemTextFont,3,0.532325854,"Returns the system text font. This returns Dialog, 12pt, plain.",;javax.swing.plaf.metal.DefaultMetalTheme.getSystemTextFont();javax.swing.plaf.metal.MetalLookAndFeel.getSystemTextFont();javax.swing.plaf.metal.MetalTheme.getSystemTextFont(),;0.53;0.48;0.49
getTabBounds,3,0.355123239,"Returns the bounds of the specified tab in the coordinate space of the JTabbedPane component. This is required because the tab rects are by default defined in the coordinate space of the component where they are rendered, which could be the JTabbedPane (for WRAP_TAB_LAYOUT) or a ScrollableTabPanel (SCROLL_TAB_LAYOUT). This method should be used whenever the tab rectangle must be relative to the JTabbedPane itself and the result should be placed in a designated Rectangle object (rather than instantiating and returning a new Rectangle each time). The tab index parameter must be a valid tabbed pane tab index (0 to tab count - 1, inclusive). The destination rectangle parameter must be a valid Rectangle instance. The handling of invalid parameters is unspecified.",";javax.swing.plaf.basic.BasicTabbedPaneUI.getTabBounds(JTabbedPane,int);javax.swing.plaf.basic.BasicTabbedPaneUI.getTabBounds(int,Rectangle);javax.swing.plaf.multi.MultiTabbedPaneUI.getTabBounds(JTabbedPane,int)",;0.33;0.36;0.33
getTabSize,3,0.666666667,"Returns the tab size set for the document, defaulting to 8.",;javax.swing.JTextArea.getTabSize();javax.swing.text.PlainView.getTabSize();javax.swing.text.WrappedPlainView.getTabSize(),;0.33;0.67;0.67
getThreshold,3,0.333333333,Gets the threshold value used to determine when binary data should be sent as an attachment.,;javax.management.monitor.CounterMonitor.getThreshold(ObjectName);javax.management.monitor.CounterMonitor.getThreshold();javax.xml.ws.soap.MTOMFeature.getThreshold(),;0.33;0.33;0.33
getTickLength,3,0.513669736,"Gets the height of the tick area for horizontal sliders and the width of the tick area for vertical sliders. BasicSliderUI uses the returned value to determine the tick area rectangle. If you want to give your ticks some room, make this larger than you need and paint your ticks away from the sides in paintTicks().",;javax.sound.midi.Sequence.getTickLength();javax.swing.plaf.basic.BasicSliderUI.getTickLength();javax.swing.plaf.metal.MetalSliderUI.getTickLength(),;0.33;0.51;0.48
getTileGridXOffset,3,0.349969719,"Returns the X coordinate of the upper-left corner of tile (0, 0) in the given image. A reader for which the tile grid X offset always has the same value (usually 0), may return the value without accessing any image data. In such cases, it is not necessary to throw an exception even if no input source has been set or the image index is out of bounds. The default implementation simply returns 0, which is correct for non-tiled images and tiled images in most formats. Readers that support tiling with non-(0, 0) offsets should override this method.",;java.awt.image.BufferedImage.getTileGridXOffset();javax.imageio.ImageReader.getTileGridXOffset(int);javax.imageio.ImageWriteParam.getTileGridXOffset(),;0.34;0.35;0.33
getTileGridYOffset,3,0.349969719,"Returns the Y coordinate of the upper-left corner of tile (0, 0) in the given image. A reader for which the tile grid Y offset always has the same value (usually 0), may return the value without accessing any image data. In such cases, it is not necessary to throw an exception even if no input source has been set or the image index is out of bounds. The default implementation simply returns 0, which is correct for non-tiled images and tiled images in most formats. Readers that support tiling with non-(0, 0) offsets should override this method.",;java.awt.image.BufferedImage.getTileGridYOffset();javax.imageio.ImageReader.getTileGridYOffset(int);javax.imageio.ImageWriteParam.getTileGridYOffset(),;0.34;0.35;0.33
getTileHeight,3,0.366048636,"Returns the height of each tile in an image as it will be written to the output stream. If tiling parameters have not been set, an IllegalStateException is thrown.",;java.awt.image.BufferedImage.getTileHeight();javax.imageio.ImageReader.getTileHeight(int);javax.imageio.ImageWriteParam.getTileHeight(),;0.33;0.37;0.37
getTileWidth,3,0.366048636,"Returns the width of each tile in an image as it will be written to the output stream. If tiling parameters have not been set, an IllegalStateException is thrown.",;java.awt.image.BufferedImage.getTileWidth();javax.imageio.ImageReader.getTileWidth(int);javax.imageio.ImageWriteParam.getTileWidth(),;0.33;0.37;0.37
getTimeInMillis,3,0.635466397,"Returns the length of the duration in milli-seconds.If the seconds field carries more digits than milli-second order, those will be simply discarded (or in other words, rounded to zero.) For example, for any Date value x, new Duration(""PT10.00099S"").getTimeInMills(x) == 10000. new Duration(""-PT10.00099S"").getTimeInMills(x) == -10000. Note that this method uses the addTo(Date) method, which may work incorrectly with Duration objects with very large values in its fields. See the addTo(Date) method for details.",;java.util.Calendar.getTimeInMillis();javax.xml.datatype.Duration.getTimeInMillis(Calendar);javax.xml.datatype.Duration.getTimeInMillis(Date),;0.33;0.64;0.64
getTimeToLive,3,0.333333333,"Returns the time-to-live (TTL) value for resource bundles that are loaded under this ResourceBundle.Control. Positive time-to-live values specify the number of milliseconds a bundle can remain in the cache without being validated against the source data from which it was constructed. The value 0 indicates that a bundle must be validated each time it is retrieved from the cache. TTL_DONT_CACHE specifies that loaded resource bundles are not put in the cache. TTL_NO_EXPIRATION_CONTROL specifies that loaded resource bundles are put in the cache with no expiration control. The expiration affects only the bundle loading process by the ResourceBundle.getBundle factory method. That is, if the factory method finds a resource bundle in the cache that has expired, the factory method calls the needsReload method to determine whether the resource bundle needs to be reloaded. If needsReload returns true, the cached resource bundle instance is removed from the cache. Otherwise, the instance stays in the cache, updated with the new TTL value returned by this method. All cached resource bundles are subject to removal from the cache due to memory constraints of the runtime environment. Returning a large positive value doesn't mean to lock loaded resource bundles in the cache. The default implementation returns TTL_NO_EXPIRATION_CONTROL.",";java.net.DatagramSocketImpl.getTimeToLive();java.net.MulticastSocket.getTimeToLive();java.util.ResourceBundle.Control.getTimeToLive(String,Locale)",;0.33;0.33;0.33
getUndoPresentationName,3,0.35068626,"Returns a description of the undoable form of this edit. If end has been invoked this calls into super. Otherwise if there are edits to be undone, this returns the value from the next significant edit that will be undone. If there are no edits to be undone and end has not been invoked this returns the value from the UIManager property ""AbstractUndoableEdit.undoText"".",;javax.swing.undo.AbstractUndoableEdit.getUndoPresentationName();javax.swing.undo.CompoundEdit.getUndoPresentationName();javax.swing.undo.UndoManager.getUndoPresentationName(),;0.35;0.33;0.35
getUnits,3,0.559848647,"Gets the set of units supported by this duration. The supported units are SECONDS, and NANOS. They are returned in the order seconds, nanos. This set can be used in conjunction with get(TemporalUnit) to access the entire state of the duration.",;java.time.Duration.getUnits();java.time.Period.getUnits();javax.sound.sampled.FloatControl.getUnits(),;0.56;0.56;0.33
getURIDereferencer,3,0.628131548,Returns a reference to the URIDereferencer that is used by default to dereference URIs in RetrievalMethod objects.,;javax.xml.crypto.dom.DOMCryptoContext.getURIDereferencer();javax.xml.crypto.dsig.XMLSignatureFactory.getURIDereferencer();javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.getURIDereferencer(),;0.33;0.63;0.63
getUseClientMode,3,0.587053533,Returns true if the socket is set to use client mode when handshaking.,;javax.net.ssl.SSLEngine.getUseClientMode();javax.net.ssl.SSLServerSocket.getUseClientMode();javax.net.ssl.SSLSocket.getUseClientMode(),;0.59;0.33;0.59
getUserTextFont,3,0.532325854,"Returns the user text font. This returns Dialog, 12pt, plain.",;javax.swing.plaf.metal.DefaultMetalTheme.getUserTextFont();javax.swing.plaf.metal.MetalLookAndFeel.getUserTextFont();javax.swing.plaf.metal.MetalTheme.getUserTextFont(),;0.53;0.48;0.49
getValueAt,3,0.348389604,"Returns the cell value at row and column. Note: The column is specified in the table view's display order, and not in the TableModel's column order. This is an important distinction because as the user rearranges the columns in the table, the column at a given index in the view will change. Meanwhile the user's actions never affect the model's column ordering.",";javax.swing.DefaultRowSorter.ModelWrapper.getValueAt(int,int);javax.swing.JTable.getValueAt(int,int);javax.swing.table.DefaultTableModel.getValueAt(int,int)",;0.33;0.35;0.33
getVendor,3,0.333333333,Returns the vendor name of this SyncProvider instance,;javax.sound.midi.MidiDevice.Info.getVendor();javax.sound.sampled.Mixer.Info.getVendor();javax.sql.rowset.spi.SyncProvider.getVendor(),;0.33;0.33;0.33
getViewCount,3,0.71350559,Returns the number of views in this view. Since the default is to not be a composite view this returns 0.,;javax.swing.text.AsyncBoxView.getViewCount();javax.swing.text.CompositeView.getViewCount();javax.swing.text.View.getViewCount(),;0.71;0.40;0.71
getVisibleAmount,3,0.340548669,"Gets the visible amount of this scroll bar. When a scroll bar is used to select a range of values, the visible amount is used to represent the range of values that are currently visible. The size of the scroll bar's bubble (also called a thumb or scroll box), usually gives a visual representation of the relationship of the visible amount to the range of the scroll bar. Note that depending on platform, the value of the visible amount property may not be visually indicated by the size of the bubble. The scroll bar's bubble may not be displayed when it is not moveable (e.g. when it takes up the entire length of the scroll bar's track, or when the scroll bar is disabled). Whether the bubble is displayed or not will not affect the value returned by getVisibleAmount.",;java.awt.Scrollbar.getVisibleAmount();java.awt.ScrollPaneAdjustable.getVisibleAmount();javax.swing.JScrollBar.getVisibleAmount(),;0.34;0.33;0.33
getVisibleChildCount,3,0.946965472,Returns the number of visible children for row.,;javax.swing.tree.AbstractLayoutCache.getVisibleChildCount(TreePath);javax.swing.tree.FixedHeightLayoutCache.getVisibleChildCount(TreePath);javax.swing.tree.VariableHeightLayoutCache.getVisibleChildCount(TreePath),;0.95;0.95;0.89
getVisiblePathsFrom,3,0.818598006,Returns an Enumerator that increments over the visible paths starting at the passed in location. The ordering of the enumeration is based on how the paths are displayed.,;javax.swing.tree.AbstractLayoutCache.getVisiblePathsFrom(TreePath);javax.swing.tree.FixedHeightLayoutCache.getVisiblePathsFrom(TreePath);javax.swing.tree.VariableHeightLayoutCache.getVisiblePathsFrom(TreePath),;0.70;0.82;0.82
getWindowTitleFont,3,0.532325854,"Returns the window title font. This returns Dialog, 12pt, bold.",;javax.swing.plaf.metal.DefaultMetalTheme.getWindowTitleFont();javax.swing.plaf.metal.MetalLookAndFeel.getWindowTitleFont();javax.swing.plaf.metal.MetalTheme.getWindowTitleFont(),;0.53;0.48;0.49
getWordInstance,3,0.942172273,Returns a new BreakIterator instance for word breaks for the given locale.,;java.text.BreakIterator.getWordInstance();java.text.BreakIterator.getWordInstance(Locale);java.text.spi.BreakIteratorProvider.getWordInstance(Locale),;0.88;0.94;0.94
getWriter,3,0.333333333,Get the character stream that was set with setWriter.,;javax.script.SimpleScriptContext.getWriter();javax.swing.text.AbstractWriter.getWriter();javax.xml.transform.stream.StreamResult.getWriter(),;0.33;0.33;0.33
getXMLReader,3,0.333333333,Get the XMLReader to be used for the Source.,;javax.xml.bind.helpers.AbstractUnmarshallerImpl.getXMLReader();javax.xml.parsers.SAXParser.getXMLReader();javax.xml.transform.sax.SAXSource.getXMLReader(),;0.33;0.33;0.33
getZone,3,0.356154582,"Gets the time-zone, such as 'Europe/Paris'. This returns the zone ID. This identifies the time-zone rules that determine when and how the offset from UTC/Greenwich changes. The zone ID may be same as the offset. If this is true, then any future calculations, such as addition or subtraction, have no complex edge cases due to time-zone rules. See also withFixedOffsetZone().",;java.time.Clock.getZone();java.time.ZonedDateTime.getZone();java.time.format.DateTimeFormatter.getZone(),;0.35;0.36;0.33
groupingBy,3,0.735208643,"Returns a Collector implementing a cascaded ""group by"" operation on input elements of type T, grouping elements according to a classification function, and then performing a reduction operation on the values associated with a given key using the specified downstream Collector. The classification function maps elements to some key type K. The downstream collector operates on elements of type T and produces a result of type D. The resulting collector produces a Map&lt;K, D&gt;. There are no guarantees on the type, mutability, serializability, or thread-safety of the Map returned. For example, to compute the set of last names of people in each city: Map&lt;City, Set&lt;String&gt;&gt; namesByCity = people.stream().collect(groupingBy(Person::getCity, mapping(Person::getLastName, toSet())));",";java.util.stream.Collectors.groupingBy(Function&lt;?,?);java.util.stream.Collectors.groupingBy(Function&lt;?,?,Collector&lt;?,A,D&gt;);java.util.stream.Collectors.groupingBy(Function&lt;?,?,Supplier&lt;M&gt;,Collector&lt;?,A,D&gt;)",;0.56;0.74;0.70
groupingByConcurrent,3,0.731372057,"Returns a concurrent Collector implementing a cascaded ""group by"" operation on input elements of type T, grouping elements according to a classification function, and then performing a reduction operation on the values associated with a given key using the specified downstream Collector. This is a concurrent and unordered Collector. The classification function maps elements to some key type K. The downstream collector operates on elements of type T and produces a result of type D. The resulting collector produces a Map&lt;K, D&gt;. For example, to compute the set of last names of people in each city, where the city names are sorted: ConcurrentMap&lt;City, Set&lt;String&gt;&gt; namesByCity = people.stream().collect(groupingByConcurrent(Person::getCity, mapping(Person::getLastName, toSet())));",";java.util.stream.Collectors.groupingByConcurrent(Function&lt;?,?);java.util.stream.Collectors.groupingByConcurrent(Function&lt;?,?,Collector&lt;?,A,D&gt;);java.util.stream.Collectors.groupingByConcurrent(Function&lt;?,?,Supplier&lt;M&gt;,Collector&lt;?,A,D&gt;)",;0.55;0.73;0.72
handleEvent,3,0.666666667,Description copied from interface:ValidationEventHandler,;java.awt.Component.handleEvent(Event);javax.xml.bind.helpers.DefaultValidationEventHandler.handleEvent(ValidationEvent);javax.xml.bind.util.ValidationEventCollector.handleEvent(ValidationEvent),;0.33;0.67;0.67
handleGetObject,3,0.666666667,Description copied from class:ResourceBundle,;java.util.ListResourceBundle.handleGetObject(String);java.util.PropertyResourceBundle.handleGetObject(String);java.util.ResourceBundle.handleGetObject(String),;0.67;0.67;0.33
handleKeySet,3,0.668539261,Returns a Set of the keys contained only in this ResourceBundle.,;java.util.ListResourceBundle.handleKeySet();java.util.PropertyResourceBundle.handleKeySet();java.util.ResourceBundle.handleKeySet(),;0.67;0.67;0.43
imageComplete,3,0.8453784,Filters the information provided in the imageComplete method of the ImageConsumer interface. Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being filtered. Developers using this class to retrieve pixels from an image should avoid calling this method directly since that operation could result in problems with retrieving the requested pixels.,;java.awt.image.BufferedImageFilter.imageComplete(int);java.awt.image.ImageFilter.imageComplete(int);java.awt.image.PixelGrabber.imageComplete(int),;0.85;0.79;0.76
insertElementAt,3,0.361742916,"Inserts the specified object as a component in this vector at the specified index. Each component in this vector with an index greater or equal to the specified index is shifted upward to have an index one greater than the value it had previously. The index must be a value greater than or equal to 0 and less than or equal to the current size of the vector. (If the index is equal to the current size of the vector, the new element is appended to the Vector.) This method is identical in functionality to the add(int, E) method (which is part of the List interface). Note that the add method reverses the order of the parameters, to more closely match array usage.",";java.util.Vector.insertElementAt(E,int);javax.swing.DefaultComboBoxModel.insertElementAt(E,int);javax.swing.DefaultListModel.insertElementAt(E,int)",;0.36;0.33;0.35
inside,3,1,"Deprecated.As of JDK version 1.1, replaced by contains(int, int).",";java.awt.Component.inside(int,int);java.awt.Polygon.inside(int,int);java.awt.Rectangle.inside(int,int)",;1.00;1.00;1.00
invalidatePathBounds,3,0.666666667,"Instructs the LayoutCache that the bounds for path are invalid, and need to be updated.",;javax.swing.tree.AbstractLayoutCache.invalidatePathBounds(TreePath);javax.swing.tree.FixedHeightLayoutCache.invalidatePathBounds(TreePath);javax.swing.tree.VariableHeightLayoutCache.invalidatePathBounds(TreePath),;0.67;0.33;0.67
invalidateSizes,3,1,Informs the TreeState that it needs to recalculate all the sizes it is referencing.,;javax.swing.tree.AbstractLayoutCache.invalidateSizes();javax.swing.tree.FixedHeightLayoutCache.invalidateSizes();javax.swing.tree.VariableHeightLayoutCache.invalidateSizes(),;1.00;1.00;1.00
isAddedPath,3,0.691522028,"Returns whether the path identified by getPath was added to the selection. A return value of true indicates the path identified by getPath was added to the selection. A return value of false indicates getPath was selected, but is no longer selected.",;javax.swing.event.TreeSelectionEvent.isAddedPath();javax.swing.event.TreeSelectionEvent.isAddedPath(TreePath);javax.swing.event.TreeSelectionEvent.isAddedPath(int),;0.69;0.65;0.68
isAnnotationPresent,3,1,"Returns true if an annotation for the specified type is present on this element, else false. This method is designed primarily for convenient access to marker annotations. The truth value returned by this method is equivalent to: getAnnotation(annotationClass) != nullThe body of the default method is specified to be the code above.",;java.lang.Class.isAnnotationPresent(Class&lt;?);java.lang.Package.isAnnotationPresent(Class&lt;?);java.lang.reflect.AccessibleObject.isAnnotationPresent(Class&lt;?),;1.00;1.00;1.00
isAnyLocalAddress,3,1,Utility routine to check if the InetAddress in a wildcard address.,;java.net.Inet4Address.isAnyLocalAddress();java.net.Inet6Address.isAnyLocalAddress();java.net.InetAddress.isAnyLocalAddress(),;1.00;1.00;1.00
isConsumed,3,0.837781683,Returns whether or not this event has been consumed.,;java.awt.AWTEvent.isConsumed();java.awt.event.InputEvent.isConsumed();java.awt.event.InputMethodEvent.isConsumed(),;0.69;0.84;0.84
isConsumer,3,0.688004552,Determines if an ImageConsumer is on the list of consumers currently interested in data for this image.,;java.awt.image.FilteredImageSource.isConsumer(ImageConsumer);java.awt.image.MemoryImageSource.isConsumer(ImageConsumer);java.awt.image.renderable.RenderableImageProducer.isConsumer(ImageConsumer),;0.52;0.69;0.69
isDeclared,3,1,Returns the current value of the attribute's "declared" flag.,";org.xml.sax.ext.Attributes2Impl.isDeclared(int);org.xml.sax.ext.Attributes2Impl.isDeclared(String,String);org.xml.sax.ext.Attributes2Impl.isDeclared(String)",;1.00;1.00;1.00
isDirectory,3,0.415730788,"Tests whether a file is a directory. The options array may be used to indicate how symbolic links are handled for the case that the file is a symbolic link. By default, symbolic links are followed and the file attribute of the final target of the link is read. If the option NOFOLLOW_LINKS is present then symbolic links are not followed. Where it is required to distinguish an I/O exception from the case that the file is not a directory then the file attributes can be read with the readAttributes method and the file type tested with the BasicFileAttributes.isDirectory() method.",";java.io.File.isDirectory();java.nio.file.Files.isDirectory(Path,LinkOption...);java.util.zip.ZipEntry.isDirectory()",;0.40;0.42;0.33
isFair,3,0.865649726,Returns true if this lock has fairness set true.,;java.util.concurrent.Semaphore.isFair();java.util.concurrent.locks.ReentrantLock.isFair();java.util.concurrent.locks.ReentrantReadWriteLock.isFair(),;0.73;0.87;0.87
isFeatureSupported,3,0.666666667,Indicates whether a specified feature is supported.,;javax.xml.crypto.dom.DOMStructure.isFeatureSupported(String);javax.xml.crypto.dsig.XMLSignatureFactory.isFeatureSupported(String);javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.isFeatureSupported(String),;0.33;0.67;0.67
isLeaf,3,0.367154865,"Returns true if this node has no children. To distinguish between nodes that have no children and nodes that cannot have children (e.g. to distinguish files from empty directories), use this method in conjunction with getAllowsChildren",;javax.swing.JTree.DynamicUtilTreeNode.isLeaf();javax.swing.tree.DefaultMutableTreeNode.isLeaf();javax.swing.tree.DefaultTreeModel.isLeaf(Object),;0.36;0.37;0.33
isLeftToRight,3,0.346597418,"Returns true if this TextLayout has a left-to-right base direction or false if it has a right-to-left base direction. The TextLayout has a base direction of either left-to-right (LTR) or right-to-left (RTL). The base direction is independent of the actual direction of text on the line, which may be either LTR, RTL, or mixed. Left-to-right layouts by default should position flush left. If the layout is on a tabbed line, the tabs run left to right, so that logically successive layouts position left to right. The opposite is true for RTL layouts. By default they should position flush left, and tabs run right-to-left.",;java.awt.ComponentOrientation.isLeftToRight();java.awt.font.TextLayout.isLeftToRight();java.text.Bidi.isLeftToRight(),;0.34;0.35;0.33
isLightWeightPopupEnabled,3,0.333333333,"Returns true if lightweight (all-Java) Tooltips are in use, or false if heavyweight (native peer) Tooltips are being used.",;javax.swing.JComboBox.isLightWeightPopupEnabled();javax.swing.JPopupMenu.isLightWeightPopupEnabled();javax.swing.ToolTipManager.isLightWeightPopupEnabled(),;0.33;0.33;0.33
isLinkLocalAddress,3,1,Utility routine to check if the InetAddress is an link local address.,;java.net.Inet4Address.isLinkLocalAddress();java.net.Inet6Address.isLinkLocalAddress();java.net.InetAddress.isLinkLocalAddress(),;1.00;1.00;1.00
isLoopbackAddress,3,1,Utility routine to check if the InetAddress is a loopback address.,;java.net.Inet4Address.isLoopbackAddress();java.net.Inet6Address.isLoopbackAddress();java.net.InetAddress.isLoopbackAddress(),;1.00;1.00;1.00
isMCGlobal,3,1,Utility routine to check if the multicast address has global scope.,;java.net.Inet4Address.isMCGlobal();java.net.Inet6Address.isMCGlobal();java.net.InetAddress.isMCGlobal(),;1.00;1.00;1.00
isMCLinkLocal,3,1,Utility routine to check if the multicast address has link scope.,;java.net.Inet4Address.isMCLinkLocal();java.net.Inet6Address.isMCLinkLocal();java.net.InetAddress.isMCLinkLocal(),;1.00;1.00;1.00
isMCNodeLocal,3,1,Utility routine to check if the multicast address has node scope.,;java.net.Inet4Address.isMCNodeLocal();java.net.Inet6Address.isMCNodeLocal();java.net.InetAddress.isMCNodeLocal(),;1.00;1.00;1.00
isMCOrgLocal,3,1,Utility routine to check if the multicast address has organization scope.,;java.net.Inet4Address.isMCOrgLocal();java.net.Inet6Address.isMCOrgLocal();java.net.InetAddress.isMCOrgLocal(),;1.00;1.00;1.00
isMCSiteLocal,3,1,Utility routine to check if the multicast address has site scope.,;java.net.Inet4Address.isMCSiteLocal();java.net.Inet6Address.isMCSiteLocal();java.net.InetAddress.isMCSiteLocal(),;1.00;1.00;1.00
isMimeTypeEqual,3,0.435765482,Is the string representation of the MIME type passed in equivalent to the MIME type of this DataFlavor. ActivationDataFlavor delegates the comparison of MIME types to the MimeType class included as part of the JavaBeans Activation Framework. This provides a more robust comparison than is normally available in the DataFlavor class.,;java.awt.datatransfer.DataFlavor.isMimeTypeEqual(String);java.awt.datatransfer.DataFlavor.isMimeTypeEqual(DataFlavor);javax.activation.ActivationDataFlavor.isMimeTypeEqual(String),;0.42;0.33;0.44
isMulticastAddress,3,0.619089131,Utility routine to check if the InetAddress is an IP multicast address. 11111111 at the start of the address identifies the address as being a multicast address.,;java.net.Inet4Address.isMulticastAddress();java.net.Inet6Address.isMulticastAddress();java.net.InetAddress.isMulticastAddress(),;0.60;0.62;0.50
isNotificationEnabled,3,0.624546736,"Invoked before sending the specified notification to the listener. This filter compares the type of the specified notification with each enabled type. If the notification type matches one of the enabled types, the notification should be sent to the listener and this method returns true.",;javax.management.AttributeChangeNotificationFilter.isNotificationEnabled(Notification);javax.management.NotificationFilterSupport.isNotificationEnabled(Notification);javax.management.relation.MBeanServerNotificationFilter.isNotificationEnabled(Notification),;0.60;0.62;0.52
isPaintingOrigin,3,0.466479085,"Returns true if scroll mode is a BACKINGSTORE_SCROLL_MODE to cause painting to originate from JViewport, or one of its ancestors. Otherwise returns false.",;javax.swing.JComponent.isPaintingOrigin();javax.swing.JLayer.isPaintingOrigin();javax.swing.JViewport.isPaintingOrigin(),;0.40;0.45;0.47
isPopupTrigger,3,0.333333333,Invokes the isPopupTrigger method on each UI handled by this object.,;java.awt.event.MouseEvent.isPopupTrigger();javax.swing.JPopupMenu.isPopupTrigger(MouseEvent);javax.swing.plaf.multi.MultiPopupMenuUI.isPopupTrigger(MouseEvent),;0.33;0.33;0.33
isResizable,3,0.537602711,"Indicates whether this frame is resizable by the user. By default, all frames are initially resizable.",;java.awt.Dialog.isResizable();java.awt.Frame.isResizable();javax.swing.JInternalFrame.isResizable(),;0.54;0.54;0.33
isRowSelected,3,0.590769942,Returns true if the row identified by row is selected.,;javax.swing.JTable.isRowSelected(int);javax.swing.JTree.isRowSelected(int);javax.swing.tree.DefaultTreeSelectionModel.isRowSelected(int),;0.43;0.59;0.59
isShutdown,3,0.333333333,Description copied from interface:ExecutorService,;java.nio.channels.AsynchronousChannelGroup.isShutdown();java.util.concurrent.ForkJoinPool.isShutdown();java.util.concurrent.ThreadPoolExecutor.isShutdown(),;0.33;0.33;0.33
isSiteLocalAddress,3,1,Utility routine to check if the InetAddress is a site local address.,;java.net.Inet4Address.isSiteLocalAddress();java.net.Inet6Address.isSiteLocalAddress();java.net.InetAddress.isSiteLocalAddress(),;1.00;1.00;1.00
isStrikeThrough,3,0.43717869,"Determines if the glyphs should have a strikethrough line. If true, a line should be drawn through the center of the glyphs. This is implemented to return the cached strikeThrough property. When you request this property, LabelView re-syncs its state with the properties of the Element's AttributeSet. If Element's AttributeSet does not have this property set, it will revert to false.",;javax.swing.text.GlyphView.isStrikeThrough();javax.swing.text.LabelView.isStrikeThrough();javax.swing.text.StyleConstants.isStrikeThrough(AttributeSet),;0.38;0.44;0.33
isSubscript,3,0.62111334,Determines if the glyphs should be rendered as superscript.,;javax.swing.text.GlyphView.isSubscript();javax.swing.text.LabelView.isSubscript();javax.swing.text.StyleConstants.isSubscript(AttributeSet),;0.62;0.62;0.33
isSuperscript,3,0.386046199,"Determines if the glyphs should be rendered as subscript. When you request this property, LabelView re-syncs its state with the properties of the Element's AttributeSet. If Element's AttributeSet does not have this property set, it will revert to false.",;javax.swing.text.GlyphView.isSuperscript();javax.swing.text.LabelView.isSuperscript();javax.swing.text.StyleConstants.isSuperscript(AttributeSet),;0.34;0.39;0.33
isTraversable,3,0.666666667,Returns true if the file (directory) can be visited. Returns false if the directory cannot be traversed.,;javax.swing.JFileChooser.isTraversable(File);javax.swing.filechooser.FileSystemView.isTraversable(File);javax.swing.filechooser.FileView.isTraversable(File),;0.67;0.67;0.33
isUnderline,3,0.417156426,"Determines if the glyphs should be underlined. If true, an underline should be drawn through the baseline. This is implemented to return the cached underline property. When you request this property, LabelView re-syncs its state with the properties of the Element's AttributeSet. If Element's AttributeSet does not have this property set, it will revert to false.",;javax.swing.text.GlyphView.isUnderline();javax.swing.text.LabelView.isUnderline();javax.swing.text.StyleConstants.isUnderline(AttributeSet),;0.36;0.42;0.33
joinGroup,3,0.538431531,"Joins a multicast group. Its behavior may be affected by setInterface or setNetworkInterface. If there is a security manager, this method first calls its checkMulticast method with the mcastaddr argument as its argument.",";java.net.DatagramSocketImpl.joinGroup(SocketAddress,NetworkInterface);java.net.MulticastSocket.joinGroup(InetAddress);java.net.MulticastSocket.joinGroup(SocketAddress,NetworkInterface)",;0.33;0.54;0.54
joining,3,0.713146515,"Returns a Collector that concatenates the input elements, separated by the specified delimiter, in encounter order.",";java.util.stream.Collectors.joining();java.util.stream.Collectors.joining(CharSequence);java.util.stream.Collectors.joining(CharSequence,CharSequence,CharSequence)",;0.63;0.71;0.67
layoutMinorAxis,3,0.79513578,Performs layout for the minor axis of the box (i.e. the axis orthogonal to the axis that it represents). The results of the layout (the offset and span for each children) are placed in the given arrays which represent the allocations to the children along the minor axis.,";javax.swing.text.BoxView.layoutMinorAxis(int,int,int[],int[]);javax.swing.text.TableView.layoutMinorAxis(int,int,int[],int[]);javax.swing.text.html.BlockView.layoutMinorAxis(int,int,int[],int[])",;0.80;0.64;0.80
leaveGroup,3,0.554426915,"Leave a multicast group. Its behavior may be affected by setInterface or setNetworkInterface. If there is a security manager, this method first calls its checkMulticast method with the mcastaddr argument as its argument.",";java.net.DatagramSocketImpl.leaveGroup(SocketAddress,NetworkInterface);java.net.MulticastSocket.leaveGroup(InetAddress);java.net.MulticastSocket.leaveGroup(SocketAddress,NetworkInterface)",;0.33;0.55;0.55
lines,3,0.429605281,"Read all lines from a file as a Stream. Unlike readAllLines, this method does not read all lines into a List, but instead populates lazily as the stream is consumed. Bytes from the file are decoded into characters using the specified charset and the same line terminators as specified by readAllLines are supported. After this method returns, then any subsequent I/O exception that occurs while reading from the file or when a malformed or unmappable byte sequence is read, is wrapped in an UncheckedIOException that will be thrown from the Stream method that caused the read to take place. In case an IOException is thrown when closing the file, it is also wrapped as an UncheckedIOException. The returned stream encapsulates a Reader. If timely disposal of file system resources is required, the try-with-resources construct should be used to ensure that the stream's close method is invoked after the stream operations are completed.",";java.io.BufferedReader.lines();java.nio.file.Files.lines(Path,Charset);java.nio.file.Files.lines(Path)",;0.39;0.43;0.34
listFiles,3,0.643264912,"Returns an array of abstract pathnames denoting the files and directories in the directory denoted by this abstract pathname that satisfy the specified filter. The behavior of this method is the same as that of the listFiles() method, except that the pathnames in the returned array must satisfy the filter. If the given filter is null then all pathnames are accepted. Otherwise, a pathname satisfies the filter if and only if the value true results when the FilenameFilter.accept(File,String) method of the filter is invoked on this abstract pathname and the name of a file or directory in the directory that it denotes.",;java.io.File.listFiles();java.io.File.listFiles(FilenameFilter);java.io.File.listFiles(FileFilter),;0.42;0.64;0.62
makeBounds,3,1,Constructs a Rectangle2D of the appropriate precision to hold the parameters calculated to be the framing rectangle of this arc.,";java.awt.geom.Arc2D.makeBounds(double,double,double,double);java.awt.geom.Arc2D.Double.makeBounds(double,double,double,double);java.awt.geom.Arc2D.Float.makeBounds(double,double,double,double)",;1.00;1.00;1.00
makeClient,3,0.484300886,Creates a new client connection as an RMI object exported through JRMP. The port and socket factories for the new RMIConnection object are the ones supplied to the RMIJRMPServerImpl constructor.,";javax.management.remote.rmi.RMIIIOPServerImpl.makeClient(String,Subject);javax.management.remote.rmi.RMIJRMPServerImpl.makeClient(String,Subject);javax.management.remote.rmi.RMIServerImpl.makeClient(String,Subject)",;0.48;0.48;0.45
minusMonths,3,0.458214743,"Returns a copy of this period with the specified months subtracted. This subtracts the amount from the months unit in a copy of this period. The years and days units are unaffected. For example, ""1 year, 6 months and 3 days"" minus 2 months returns ""1 year, 4 months and 3 days"". This instance is immutable and unaffected by this method call.",;java.time.Period.minusMonths(long);java.time.YearMonth.minusMonths(long);java.time.ZonedDateTime.minusMonths(long),;0.46;0.38;0.45
newByteChannel,3,0.570858129,"Opens or creates a file, returning a seekable byte channel to access the file. This method works in exactly the manner specified by the Files.newByteChannel(Path,Set,FileAttribute[]) method.",";java.nio.file.Files.newByteChannel(Path,Set&lt;?,FileAttribute&lt;?&gt;...);java.nio.file.Files.newByteChannel(Path,OpenOption...);java.nio.file.spi.FileSystemProvider.newByteChannel(Path,Set&lt;?,FileAttribute&lt;?&gt;...)",;0.35;0.57;0.57
newDuration,3,0.514626448,"Obtain a new instance of a Duration specifying the Duration as isPositive, years, months, days, hours, minutes, seconds.The XML Schema specification states that values can be of an arbitrary size. Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values. An UnsupportedOperationException will be thrown with a message indicating implementation limits if implementation capacities are exceeded.A null value indicates that field is not set.",";javax.xml.datatype.DatatypeFactory.newDuration(String);javax.xml.datatype.DatatypeFactory.newDuration(boolean,BigInteger,BigInteger,BigInteger,BigInteger,BigInteger,BigDecimal);javax.xml.datatype.DatatypeFactory.newDuration(boolean,int,int,int,int,int,int)",;0.47;0.51;0.39
newDurationDayTime,3,0.795005531,"Create a Duration of type xdt:dayTimeDuration using the specified day, hour, minute and second as defined in XQuery 1.0 and XPath 2.0 Data Model, xdt:dayTimeDuration.The datatype xdt:dayTimeDuration is a subtype of xs:duration whose lexical representation contains only day, hour, minute, and second components. This datatype resides in the namespace http://www.w3.org/2003/11/xpath-datatypes.The XML Schema specification states that values can be of an arbitrary size. Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values. An UnsupportedOperationException will be thrown with a message indicating implementation limits if implementation capacities are exceeded.A null value indicates that field is not set.",";javax.xml.datatype.DatatypeFactory.newDurationDayTime(String);javax.xml.datatype.DatatypeFactory.newDurationDayTime(boolean,BigInteger,BigInteger,BigInteger,BigInteger);javax.xml.datatype.DatatypeFactory.newDurationDayTime(boolean,int,int,int,int)",;0.75;0.80;0.64
newDurationYearMonth,3,0.653251698,"Create a Duration of type xdt:yearMonthDuration using the specified year and month as defined in XQuery 1.0 and XPath 2.0 Data Model, xdt:yearMonthDuration.The XML Schema specification states that values can be of an arbitrary size. Implementations may chose not to or be incapable of supporting arbitrarily large and/or small values. An UnsupportedOperationException will be thrown with a message indicating implementation limits if implementation capacities are exceeded.A null value indicates that field is not set.",";javax.xml.datatype.DatatypeFactory.newDurationYearMonth(String);javax.xml.datatype.DatatypeFactory.newDurationYearMonth(boolean,BigInteger,BigInteger);javax.xml.datatype.DatatypeFactory.newDurationYearMonth(boolean,int,int)",;0.58;0.65;0.45
newMBeanServer,3,0.591168046,"Return a new object implementing the MBeanServer interface with a standard default domain name, without keeping an internal reference to this new object. The default domain name is used as the domain part in the ObjectName of MBeans when the domain is specified by the user is null.The standard default domain name is DefaultDomain.No reference is kept. findMBeanServer will not be able to return a reference to this MBeanServer object, but the garbage collector will be able to remove the MBeanServer object when it is no longer referenced.This method is equivalent to newMBeanServer(null).",";javax.management.MBeanServerBuilder.newMBeanServer(String,MBeanServer,MBeanServerDelegate);javax.management.MBeanServerFactory.newMBeanServer();javax.management.MBeanServerFactory.newMBeanServer(String)",;0.33;0.59;0.59
newPGPData,3,0.671257048,"Creates a PGPData from the specified PGP public key identifier, and optional key material packet and list of external elements.",";javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.newPGPData(byte[]);javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.newPGPData(byte[],byte[],List);javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.newPGPData(byte[],List)",;0.58;0.67;0.65
newTransformerHandler,3,0.668363135,"Get a TransformerHandler object that can process SAX ContentHandler events into a Result, based on the transformation instructions specified by the argument.",;javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler(Source);javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler(Templates);javax.xml.transform.sax.SAXTransformerFactory.newTransformerHandler(),;0.67;0.65;0.55
newUpdater,3,0.94888857,Creates and returns an updater for objects with the given field. The Class argument is needed to check that reflective types and generic types match.,";java.util.concurrent.atomic.AtomicIntegerFieldUpdater.newUpdater(Class&lt;U&gt;,String);java.util.concurrent.atomic.AtomicLongFieldUpdater.newUpdater(Class&lt;U&gt;,String);java.util.concurrent.atomic.AtomicReferenceFieldUpdater.newUpdater(Class&lt;U&gt;,Class&lt;W&gt;,String)",;0.95;0.95;0.90
newXMLGregorianCalendarTime,3,0.869739074,Create a Java instance of XML Schema builtin datatype time.A DatatypeConstants.FIELD_UNDEFINED value indicates that field is not set.,";javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendarTime(int,int,int,int);javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendarTime(int,int,int,BigDecimal,int);javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendarTime(int,int,int,int,int)",;0.87;0.76;0.87
nextFloat,3,0.333333333,Returns a pseudorandom float value between zero (inclusive) and one (exclusive).,;java.util.Random.nextFloat();java.util.Scanner.nextFloat();java.util.concurrent.ThreadLocalRandom.nextFloat(),;0.33;0.33;0.33
nextTabStop,3,0.667791903,Returns the next tab stop position after a given reference position. This implementation does not support things like centering so it ignores the tabOffset argument.,";javax.swing.text.ParagraphView.nextTabStop(float,int);javax.swing.text.PlainView.nextTabStop(float,int);javax.swing.text.WrappedPlainView.nextTabStop(float,int)",;0.36;0.67;0.67
nextToken,3,0.350139539,"Returns the next token in this string tokenizer's string. First, the set of characters considered to be delimiters by this StringTokenizer object is changed to be the characters in the string delim. Then the next token in the string after the current position is returned. The current position is advanced beyond the recognized token. The new delimiter set remains the default after this call.",;java.io.StreamTokenizer.nextToken();java.util.StringTokenizer.nextToken();java.util.StringTokenizer.nextToken(String),;0.35;0.33;0.35
node,3,0.333333333,"Returns the named preference node in the same tree as this node, creating it and any of its ancestors if they do not already exist. Accepts a relative or absolute path name. Relative path names (which do not begin with the slash character ('/')) are interpreted relative to this preference node. If the returned node did not exist prior to this call, this node and any ancestors that were created by this call are not guaranteed to become permanent until the flush method is called on the returned node (or one of its ancestors or descendants).",;java.util.UUID.node();java.util.prefs.AbstractPreferences.node(String);java.util.prefs.Preferences.node(String),;0.33;0.33;0.33
normalize,3,0.333333333,"Normalize this instance to UTC.2000-03-04T23:00:00+03:00 normalizes to 2000-03-04T20:00:00ZImplements W3C XML Schema Part 2, Section 3.2.7.3 (A).",";java.text.Normalizer.normalize(CharSequence,Normalizer.Form);javax.imageio.metadata.IIOMetadataNode.normalize();javax.xml.datatype.XMLGregorianCalendar.normalize()",;0.33;0.33;0.33
notationDecl,3,0.333333333,Filter a notation declaration event.,";org.xml.sax.HandlerBase.notationDecl(String,String,String);org.xml.sax.helpers.DefaultHandler.notationDecl(String,String,String);org.xml.sax.helpers.XMLFilterImpl.notationDecl(String,String,String)",;0.00;0.33;0.33
ofEpochSecond,3,0.472888955,Obtains an instance of LocalDateTime using seconds from the epoch of 1970-01-01T00:00:00Z. This allows the epoch-second field to be converted to a local date-time. This is primarily intended for low-level conversions rather than general application usage.,";java.time.Instant.ofEpochSecond(long);java.time.Instant.ofEpochSecond(long,long);java.time.LocalDateTime.ofEpochSecond(long,int,ZoneOffset)",;0.43;0.45;0.47
or,3,0.352565445,Performs a logical OR of this bit set with the bit set argument. This bit set is modified so that a bit in it has the value true if and only if it either already had the value true or the corresponding bit in the bit set argument has the value true.,";java.math.BigInteger.or(BigInteger);java.util.BitSet.or(BitSet);javax.management.Query.or(QueryExp,QueryExp)",;0.35;0.35;0.33
orb,3,0.603035571,Returns the ORB that created this OutputStream.,;org.omg.CORBA.portable.Delegate.orb(Object);org.omg.CORBA.portable.InputStream.orb();org.omg.CORBA.portable.OutputStream.orb(),;0.33;0.60;0.60
pack,3,0.333333333,Lays out the container so that it uses the minimum space needed to display its contents.,;java.awt.Window.pack();javax.swing.JInternalFrame.pack();javax.swing.JPopupMenu.pack(),;0.33;0.33;0.33
paintCurrentValue,3,0.816090011,Paints the currently selected item.,";javax.swing.plaf.basic.BasicComboBoxUI.paintCurrentValue(Graphics,Rectangle,boolean);javax.swing.plaf.metal.MetalComboBoxUI.paintCurrentValue(Graphics,Rectangle,boolean);javax.swing.plaf.synth.SynthComboBoxUI.paintCurrentValue(Graphics,Rectangle,boolean)",;0.82;0.61;0.82
paintHorizontalPartOfLeg,3,0.666666667,"Paints the horizontal part of the leg. The receiver should NOT modify clipBounds, or insets. NOTE: parentRow can be -1 if the root is not visible.",";javax.swing.plaf.basic.BasicTreeUI.paintHorizontalPartOfLeg(Graphics,Rectangle,Insets,Rectangle,TreePath,int,boolean,boolean,boolean);javax.swing.plaf.metal.MetalTreeUI.paintHorizontalPartOfLeg(Graphics,Rectangle,Insets,Rectangle,TreePath,int,boolean,boolean,boolean);javax.swing.plaf.synth.SynthTreeUI.paintHorizontalPartOfLeg(Graphics,Rectangle,Insets,Rectangle,TreePath,int,boolean,boolean,boolean)",;0.67;0.33;0.67
paintVerticalPartOfLeg,3,0.666666667,"Paints the vertical part of the leg. The receiver should NOT modify clipBounds, insets.",";javax.swing.plaf.basic.BasicTreeUI.paintVerticalPartOfLeg(Graphics,Rectangle,Insets,TreePath);javax.swing.plaf.metal.MetalTreeUI.paintVerticalPartOfLeg(Graphics,Rectangle,Insets,TreePath);javax.swing.plaf.synth.SynthTreeUI.paintVerticalPartOfLeg(Graphics,Rectangle,Insets,TreePath)",;0.67;0.33;0.67
parent,3,0.392594504,"Returns the parent of this preference node, or null if this is the root.",;java.util.prefs.AbstractPreferences.parent();java.util.prefs.Preferences.parent();org.omg.CORBA.Context.parent(),;0.33;0.39;0.38
plusMonths,3,0.459268929,"Returns a copy of this period with the specified months added. This adds the amount to the months unit in a copy of this period. The years and days units are unaffected. For example, ""1 year, 6 months and 3 days"" plus 2 months returns ""1 year, 8 months and 3 days"". This instance is immutable and unaffected by this method call.",;java.time.Period.plusMonths(long);java.time.YearMonth.plusMonths(long);java.time.ZonedDateTime.plusMonths(long),;0.46;0.38;0.45
preferenceChanged,3,0.502820048,Child views can call this on the parent to indicate that the preference has changed and should be reconsidered for layout. By default this just propagates upward to the next parent. The root view will call revalidate on the associated text component.,";javax.swing.text.AsyncBoxView.preferenceChanged(View,boolean,boolean);javax.swing.text.BoxView.preferenceChanged(View,boolean,boolean);javax.swing.text.View.preferenceChanged(View,boolean,boolean)",;0.50;0.33;0.50
prepareImage,3,0.597203837,"Prepares an image for rendering on this component at the specified width and height. The image data is downloaded asynchronously in another thread, and an appropriately scaled screen representation of the image is generated.",";java.awt.Component.prepareImage(Image,ImageObserver);java.awt.Component.prepareImage(Image,int,int,ImageObserver);java.awt.Toolkit.prepareImage(Image,int,int,ImageObserver)",;0.56;0.60;0.51
printDialog,3,0.384387766,"A convenience method which displays a cross-platform print dialog for all services which are capable of printing 2D graphics using the Pageable interface. The selected printer when the dialog is initially displayed will reflect the print service currently attached to this print job. If the user changes the print service, the PrinterJob will be updated to reflect this, unless the user cancels the dialog. As well as allowing the user to select the destination printer, the user can also select values of various print request attributes. The attributes parameter on input will reflect the applications required initial selections in the user dialog. Attributes not specified display using the default for the service. On return it will reflect the user's choices. Selections may be updated by the implementation to be consistent with the supported values for the currently selected print service. As the user scrolls to a new print service selection, the values copied are based on the settings for the previous service, together with any user changes. The values are not based on the original settings supplied by the client. With the exception of selected printer, the PrinterJob state is not updated to reflect the user's changes. For the selections to affect a printer job, the attributes must be specified in the call to the print(PrintRequestAttributeSet) method. If using the Pageable interface, clients which intend to use media selected by the user must create a PageFormat derived from the user's selections. If the user cancels the dialog, the attributes will not reflect any changes made by the user.",";java.awt.print.PrinterJob.printDialog();java.awt.print.PrinterJob.printDialog(PrintRequestAttributeSet);javax.print.ServiceUI.printDialog(GraphicsConfiguration,int,int,PrintService[],PrintService,DocFlavor,PrintRequestAttributeSet)",;0.34;0.38;0.38
printStackTrace,3,0.631051327,Prints this throwable and its backtrace to the specified print writer.,;java.lang.Throwable.printStackTrace();java.lang.Throwable.printStackTrace(PrintStream);java.lang.Throwable.printStackTrace(PrintWriter),;0.34;0.63;0.63
processFocusEvent,3,0.333333333,"Processes focus events occurring on the JLayer or any of its subcomponents. This method is not called unless focus events are enabled for the JLayer objects, this LayerUI is set to. Focus events are enabled in the overridden installUI(javax.swing.JComponent) method and should be disabled in the uninstallUI(javax.swing.JComponent) method after that. public void installUI(JComponent c) { super.installUI(c); JLayer l = (JLayer) c; l.setLayerEventMask(AWTEvent.FOCUS_EVENT_MASK); } public void uninstallUI(JComponent c) { super.uninstallUI(c); JLayer l = (JLayer) c; l.setLayerEventMask(0); }",";javax.swing.JFormattedTextField.processFocusEvent(FocusEvent);javax.swing.JPopupMenu.processFocusEvent(FocusEvent);javax.swing.plaf.LayerUI.processFocusEvent(FocusEvent,JLayer&lt;?)",;0.33;0.33;0.33
processInputMethodEvent,3,0.333333333,Description copied from class:Component,";javax.swing.JFormattedTextField.processInputMethodEvent(InputMethodEvent);javax.swing.plaf.LayerUI.processInputMethodEvent(InputMethodEvent,JLayer&lt;?);javax.swing.text.JTextComponent.processInputMethodEvent(InputMethodEvent)",;0.33;0.33;0.33
properties,3,1,Obtain an unmodifiable map of properties. The concept of properties is further explained in the class description.,;javax.sound.midi.MidiFileFormat.properties();javax.sound.sampled.AudioFileFormat.properties();javax.sound.sampled.AudioFormat.properties(),;1.00;1.00;1.00
ptLineDist,3,0.925427077,"Returns the distance from a point to this line. The distance measured is the distance between the specified point and the closest point on the infinitely-extended line defined by this Line2D. If the specified point intersects the line, this method returns 0.0.",";java.awt.geom.Line2D.ptLineDist(double,double,double,double,double,double);java.awt.geom.Line2D.ptLineDist(double,double);java.awt.geom.Line2D.ptLineDist(Point2D)",;0.88;0.93;0.91
ptLineDistSq,3,0.923740461,"Returns the square of the distance from a point to this line. The distance measured is the distance between the specified point and the closest point on the infinitely-extended line defined by this Line2D. If the specified point intersects the line, this method returns 0.0.",";java.awt.geom.Line2D.ptLineDistSq(double,double,double,double,double,double);java.awt.geom.Line2D.ptLineDistSq(double,double);java.awt.geom.Line2D.ptLineDistSq(Point2D)",;0.89;0.92;0.91
ptSegDist,3,0.932130347,"Returns the distance from a point to this line segment. The distance measured is the distance between the specified point and the closest point between the current line's end points. If the specified point intersects the line segment in between the end points, this method returns 0.0.",";java.awt.geom.Line2D.ptSegDist(double,double,double,double,double,double);java.awt.geom.Line2D.ptSegDist(double,double);java.awt.geom.Line2D.ptSegDist(Point2D)",;0.89;0.93;0.92
ptSegDistSq,3,0.936240873,"Returns the square of the distance from a point to this line segment. The distance measured is the distance between the specified point and the closest point between the current line's end points. If the specified point intersects the line segment in between the end points, this method returns 0.0.",";java.awt.geom.Line2D.ptSegDistSq(double,double,double,double,double,double);java.awt.geom.Line2D.ptSegDistSq(double,double);java.awt.geom.Line2D.ptSegDistSq(Point2D)",;0.89;0.94;0.92
readExternal,3,0.333333333,"Restore this MLet's contents from the given ObjectInput. Not all implementations support this method. Those that do not throw UnsupportedOperationException. A subclass may override this method to support it or to change the format of the read data.The format of the read data is not specified, but if an implementation supports readExternal(java.io.ObjectInput) it must also support writeExternal(java.io.ObjectOutput) in such a way that what is written by the latter can be read by the former.",;java.awt.datatransfer.DataFlavor.readExternal(ObjectInput);javax.activation.MimeType.readExternal(ObjectInput);javax.management.loading.MLet.readExternal(ObjectInput),;0.33;0.33;0.33
readLock,3,0.333333333,Acquires a lock to begin reading some state from the document. There can be multiple readers at the same time. Writing blocks the readers until notification of the change to the listeners has been completed. This method should be used very carefully to avoid unintended compromise of the document. It should always be balanced with a readUnlock.,;java.util.concurrent.locks.ReentrantReadWriteLock.readLock();java.util.concurrent.locks.StampedLock.readLock();javax.swing.text.AbstractDocument.readLock(),;0.33;0.33;0.33
readObject,3,0.333333333,"Retrieves the value at the head of this SQLInputImpl object as an Object in the Java programming language. The actual type of the object returned is determined by the default mapping of SQL types to types in the Java programming language unless there is a custom mapping, in which case the type of the object returned is determined by this stream's type map. The JDBC technology-enabled driver registers a type map with the stream before passing the stream to the application. When the datum at the head of the stream is an SQL NULL, this method returns null. If the datum is an SQL structured or distinct type with a custom mapping, this method determines the SQL type of the datum at the head of the stream, constructs an object of the appropriate class, and calls the method SQLData.readSQL on that object. The readSQL method then calls the appropriate SQLInputImpl.readXXX methods to retrieve the attribute values from the stream.",;java.beans.XMLDecoder.readObject();java.io.ObjectInputStream.readObject();javax.sql.rowset.serial.SQLInputImpl.readObject(),;0.33;0.33;0.33
redirectError,3,0.445593315,"Sets this process builder's standard error destination. Subprocesses subsequently started by this object's start() method send their standard error to this destination. If the destination is Redirect.PIPE (the initial value), then the error output of a subprocess can be read using the input stream returned by Process.getErrorStream(). If the destination is set to any other value, then Process.getErrorStream() will return a null input stream. If the redirectErrorStream attribute has been set true, then the redirection set by this method has no effect.",;java.lang.ProcessBuilder.redirectError(ProcessBuilder.Redirect);java.lang.ProcessBuilder.redirectError(File);java.lang.ProcessBuilder.redirectError(),;0.45;0.41;0.43
redirectInput,3,0.486666131,"Sets this process builder's standard input source. Subprocesses subsequently started by this object's start() method obtain their standard input from this source. If the source is Redirect.PIPE (the initial value), then the standard input of a subprocess can be written to using the output stream returned by Process.getOutputStream(). If the source is set to any other value, then Process.getOutputStream() will return a null output stream.",;java.lang.ProcessBuilder.redirectInput(ProcessBuilder.Redirect);java.lang.ProcessBuilder.redirectInput(File);java.lang.ProcessBuilder.redirectInput(),;0.49;0.42;0.46
redirectOutput,3,0.475536662,"Sets this process builder's standard output destination. Subprocesses subsequently started by this object's start() method send their standard output to this destination. If the destination is Redirect.PIPE (the initial value), then the standard output of a subprocess can be read using the input stream returned by Process.getInputStream(). If the destination is set to any other value, then Process.getInputStream() will return a null input stream.",;java.lang.ProcessBuilder.redirectOutput(ProcessBuilder.Redirect);java.lang.ProcessBuilder.redirectOutput(File);java.lang.ProcessBuilder.redirectOutput(),;0.48;0.42;0.46
reducing,3,0.646910593,Returns a Collector which performs a reduction of its input elements under a specified BinaryOperator. The result is described as an Optional&lt;T&gt;.,";java.util.stream.Collectors.reducing(T,BinaryOperator&lt;T&gt;);java.util.stream.Collectors.reducing(BinaryOperator&lt;T&gt;);java.util.stream.Collectors.reducing(U,Function&lt;?,?,BinaryOperator&lt;U&gt;)",;0.63;0.65;0.59
registerServiceProvider,3,0.528038867,"Adds a service provider object to the registry. The provider is associated within each category present in the registry whose Class it implements. If provider implements the RegisterableService interface, its onRegistration method will be called once for each category it is registered under. Its onDeregistration method will be called each time it is deregistered from a category or when the registry is finalized.",";javax.imageio.spi.ServiceRegistry.registerServiceProvider(T,Class&lt;T&gt;);javax.imageio.spi.ServiceRegistry.registerServiceProvider(Object);javax.print.PrintServiceLookup.registerServiceProvider(PrintServiceLookup)",;0.53;0.53;0.33
relativeCCW,3,0.62068814,"Returns an indicator of where the specified point (px,py) lies with respect to this line segment. See the method comments of relativeCCW(double, double, double, double, double, double) to interpret the return value.",";java.awt.geom.Line2D.relativeCCW(double,double,double,double,double,double);java.awt.geom.Line2D.relativeCCW(double,double);java.awt.geom.Line2D.relativeCCW(Point2D)",;0.37;0.62;0.62
reload,3,0.621398729,Invoke this method if you've modified the TreeNodes upon which this model depends. The model will notify all of its listeners that the model has changed below the given node.,;java.util.ServiceLoader.reload();javax.swing.tree.DefaultTreeModel.reload();javax.swing.tree.DefaultTreeModel.reload(TreeNode),;0.33;0.62;0.62
remainder,3,0.481713198,"Returns a BigDecimal whose value is (this % divisor), with rounding according to the context settings. The MathContext settings affect the implicit divide used to compute the remainder. The remainder computation itself is by definition exact. Therefore, the remainder may contain more than mc.getPrecision() digits. The remainder is given by this.subtract(this.divideToIntegralValue(divisor, mc).multiply(divisor)). Note that this is not the modulo operation (the result can be negative).",";java.math.BigDecimal.remainder(BigDecimal);java.math.BigDecimal.remainder(BigDecimal,MathContext);java.math.BigInteger.remainder(BigInteger)",;0.46;0.48;0.34
removeAdjustmentListener,3,0.603605519,"Removes the specified adjustment listener so that it no longer receives adjustment events from this ScrollPaneAdjustable. If l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Scrollbar.removeAdjustmentListener(AdjustmentListener);java.awt.ScrollPaneAdjustable.removeAdjustmentListener(AdjustmentListener);javax.swing.JScrollBar.removeAdjustmentListener(AdjustmentListener),;0.60;0.60;0.33
removeAllElements,3,0.426988566,"Removes all components from this list and sets its size to zero. Note: Although this method is not deprecated, the preferred method to use is clear, which implements the List interface defined in the 1.2 Collections framework.",;java.util.Vector.removeAllElements();javax.swing.DefaultComboBoxModel.removeAllElements();javax.swing.DefaultListModel.removeAllElements(),;0.42;0.00;0.43
removeConsumer,3,0.671337699,Removes an ImageConsumer from the list of consumers interested in data for this image.,;java.awt.image.FilteredImageSource.removeConsumer(ImageConsumer);java.awt.image.MemoryImageSource.removeConsumer(ImageConsumer);java.awt.image.renderable.RenderableImageProducer.removeConsumer(ImageConsumer),;0.51;0.67;0.67
removeElementAt,3,0.364398492,Deletes the component at the specified index. Each component in this vector with an index greater or equal to the specified index is shifted downward to have an index one smaller than the value it had previously. The size of this vector is decreased by 1. The index must be a value greater than or equal to 0 and less than the current size of the vector. This method is identical in functionality to the remove(int) method (which is part of the List interface). Note that the remove method returns the old value that was stored at the specified position.,;java.util.Vector.removeElementAt(int);javax.swing.DefaultComboBoxModel.removeElementAt(int);javax.swing.DefaultListModel.removeElementAt(int),;0.36;0.33;0.35
removeSelectionInterval,3,0.418962145,"Changes the selection to be the set difference of the current selection and the indices between index0 and index1 inclusive. index0 doesn't have to be less than or equal to index1. In SINGLE_INTERVAL_SELECTION selection mode, if the removal would produce two disjoint selections, the removal is extended through the greater end of the selection. For example, if the selection is 0-10 and you supply indices 5,6 (in any order) the resulting selection is 0-4. If this represents a change to the current selection, then each ListSelectionListener is notified of the change. If either index is -1, this method does nothing and returns without exception. Otherwise, if either index is less than -1, an IndexOutOfBoundsException is thrown.",";javax.swing.DefaultListSelectionModel.removeSelectionInterval(int,int);javax.swing.JList.removeSelectionInterval(int,int);javax.swing.JTree.removeSelectionInterval(int,int)",;0.42;0.40;0.35
removeSelectionPaths,3,0.333333333,Removes paths from the selection. If any of the paths in paths are in the selection the TreeSelectionListeners are notified. This has no effect if paths is null.,;javax.swing.JTree.removeSelectionPaths(TreePath[]);javax.swing.JTree.EmptySelectionModel.removeSelectionPaths(TreePath[]);javax.swing.tree.DefaultTreeSelectionModel.removeSelectionPaths(TreePath[]),;0.33;0.33;0.33
removeTreeSelectionListener,3,0.333333333,Removes x from the list of listeners that are notified each time the set of selected TreePaths changes.,;javax.swing.JTree.removeTreeSelectionListener(TreeSelectionListener);javax.swing.JTree.EmptySelectionModel.removeTreeSelectionListener(TreeSelectionListener);javax.swing.tree.DefaultTreeSelectionModel.removeTreeSelectionListener(TreeSelectionListener),;0.33;0.33;0.33
replaceSelection,3,0.811633775,"Replaces the currently selected content with new content represented by the given string. If there is no selection this amounts to an insert of the given text. If there is no replacement text this amounts to a removal of the current selection. The replacement text will have the attributes currently defined for input at the point of insertion. If the document is not editable, beep and return.",;javax.swing.JEditorPane.replaceSelection(String);javax.swing.JTextPane.replaceSelection(String);javax.swing.text.JTextComponent.replaceSelection(String),;0.79;0.81;0.74
requestPasswordAuthentication,3,0.840889903,"Ask the authenticator that has been registered with the system for a password. First, if there is a security manager, its checkPermission method is called with a NetPermission(""requestPasswordAuthentication"") permission. This may result in a java.lang.SecurityException.",";java.net.Authenticator.requestPasswordAuthentication(InetAddress,int,String,String,String);java.net.Authenticator.requestPasswordAuthentication(String,InetAddress,int,String,String,String);java.net.Authenticator.requestPasswordAuthentication(String,InetAddress,int,String,String,String,URL,Authenticator.RequestorType)",;0.84;0.72;0.84
requestTopDownLeftRightResend,3,0.685104526,"Requests that a given ImageConsumer have the image data delivered one more time in top-down, left-right order.",;java.awt.image.FilteredImageSource.requestTopDownLeftRightResend(ImageConsumer);java.awt.image.MemoryImageSource.requestTopDownLeftRightResend(ImageConsumer);java.awt.image.renderable.RenderableImageProducer.requestTopDownLeftRightResend(ImageConsumer),;0.49;0.69;0.69
requireNonNull,3,0.554899483,"Checks that the specified object reference is not null and throws a customized NullPointerException if it is. This method is designed primarily for doing parameter validation in methods and constructors with multiple parameters, as demonstrated below: public Foo(Bar bar, Baz baz) { this.bar = Objects.requireNonNull(bar, ""bar must not be null""); this.baz = Objects.requireNonNull(baz, ""baz must not be null""); }",";java.util.Objects.requireNonNull(T);java.util.Objects.requireNonNull(T,String);java.util.Objects.requireNonNull(T,Supplier&lt;String&gt;)",;0.48;0.55;0.44
resolve,3,0.666666667,"The resolve operation is the process of retrieving an object bound to a name in a given context. The given name must exactly match the bound name. The naming service does not return the type of the object. Clients are responsible for ""narrowing"" the object to the appropriate type. That is, clients typically cast the returned object from Object to a more specialized interface.",;java.net.URI.resolve(String);org.omg.CosNaming._NamingContextExtStub.resolve(NameComponent[]);org.omg.CosNaming._NamingContextStub.resolve(NameComponent[]),;0.33;0.67;0.67
scan,3,0.333333333,"Convenience method equivalent to v.scan(e, null).",";javax.lang.model.util.ElementScanner6.scan(Iterable&lt;?,P);javax.lang.model.util.ElementScanner6.scan(Element,P);javax.lang.model.util.ElementScanner6.scan(Element)",;0.33;0.33;0.33
scheduleAtFixedRate,3,0.614683655,"Schedules the specified task for repeated fixed-rate execution, beginning at the specified time. Subsequent executions take place at approximately regular intervals, separated by the specified period. In fixed-rate execution, each execution is scheduled relative to the scheduled execution time of the initial execution. If an execution is delayed for any reason (such as garbage collection or other background activity), two or more executions will occur in rapid succession to ""catch up."" In the long run, the frequency of execution will be exactly the reciprocal of the specified period (assuming the system clock underlying Object.wait(long) is accurate). As a consequence of the above, if the scheduled first time is in the past, then any ""missed"" executions will be scheduled for immediate ""catch up"" execution. Fixed-rate execution is appropriate for recurring activities that are sensitive to absolute time, such as ringing a chime every hour on the hour, or running scheduled maintenance every day at a particular time. It is also appropriate for recurring activities where the total time to perform a fixed number of executions is important, such as a countdown timer that ticks once every second for ten seconds. Finally, fixed-rate execution is appropriate for scheduling multiple repeating timer tasks that must remain synchronized with respect to one another.",";java.util.Timer.scheduleAtFixedRate(TimerTask,long,long);java.util.Timer.scheduleAtFixedRate(TimerTask,Date,long);java.util.concurrent.ScheduledThreadPoolExecutor.scheduleAtFixedRate(Runnable,long,long,TimeUnit)",;0.61;0.61;0.33
scrollRectToVisible,3,0.333333333,"Scrolls the view so that Rectangle within the view becomes visible. This attempts to validate the view before scrolling if the view is currently not valid - isValid returns false. To avoid excessive validation when the containment hierarchy is being created this will not validate if one of the ancestors does not have a peer, or there is no validate root ancestor, or one of the ancestors is not a Window or Applet. Note that this method will not scroll outside of the valid viewport; for example, if contentRect is larger than the viewport, scrolling will be confined to the viewport's bounds.",;javax.swing.JComponent.scrollRectToVisible(Rectangle);javax.swing.JTextField.scrollRectToVisible(Rectangle);javax.swing.JViewport.scrollRectToVisible(Rectangle),;0.33;0.33;0.33
setAction,3,0.950264041,"Sets the Action for the ActionEvent source. The new Action replaces any previously set Action but does not affect ActionListeners independently added with addActionListener. If the Action is already a registered ActionListener for the ActionEvent source, it is not re-registered. Setting the Action results in immediately changing all the properties described in Swing Components Supporting Action. Subsequently, the textfield's properties are automatically updated as the Action's properties change. This method uses three other methods to set and help track the Action's property values. It uses the configurePropertiesFromAction method to immediately change the textfield's properties. To track changes in the Action's property values, this method registers the PropertyChangeListener returned by createActionPropertyChangeListener. The default PropertyChangeListener invokes the actionPropertyChanged method when a property in the Action changes.",;javax.swing.AbstractButton.setAction(Action);javax.swing.JComboBox.setAction(Action);javax.swing.JTextField.setAction(Action),;0.93;0.95;0.95
setAngleExtent,3,1,Sets the angular extent of this arc to the specified double value.,;java.awt.geom.Arc2D.setAngleExtent(double);java.awt.geom.Arc2D.Double.setAngleExtent(double);java.awt.geom.Arc2D.Float.setAngleExtent(double),;1.00;1.00;1.00
setBindings,3,0.333333333,Sets a Bindings of attributes for the given scope. If the value of scope is ENGINE_SCOPE the given Bindings replaces the engineScope field. If the value of scope is GLOBAL_SCOPE the given Bindings replaces the globalScope field.,";javax.script.AbstractScriptEngine.setBindings(Bindings,int);javax.script.ScriptEngineManager.setBindings(Bindings);javax.script.SimpleScriptContext.setBindings(Bindings,int)",;0.33;0.33;0.33
setBlockIncrement,3,0.333333333,"Sets the blockIncrement property. Note, that if the argument is equal to the value of Integer.MIN_VALUE, the most look and feels will not provide the scrolling to the right/down. Some look and feels implement custom scrolling behavior and ignore this property.",;java.awt.Scrollbar.setBlockIncrement(int);java.awt.ScrollPaneAdjustable.setBlockIncrement(int);javax.swing.JScrollBar.setBlockIncrement(int),;0.33;0.33;0.33
setBorderToNonRollover,3,0.333333333,"This implementation does nothing, because the rollover property of the JToolBar class is not used in the Synth Look and Feel.",;javax.swing.plaf.basic.BasicToolBarUI.setBorderToNonRollover(Component);javax.swing.plaf.metal.MetalToolBarUI.setBorderToNonRollover(Component);javax.swing.plaf.synth.SynthToolBarUI.setBorderToNonRollover(Component),;0.33;0.33;0.33
setCharacterAttributes,3,0.666666667,"Applies the given attributes to character content. If there is a selection, the attributes are applied to the selection range. If there is no selection, the attributes are applied to the input attribute set which defines the attributes for any new text that gets inserted.",";javax.swing.JTextPane.setCharacterAttributes(AttributeSet,boolean);javax.swing.text.DefaultStyledDocument.setCharacterAttributes(int,int,AttributeSet,boolean);javax.swing.text.StyledEditorKit.StyledTextAction.setCharacterAttributes(JEditorPane,AttributeSet,boolean)",;0.67;0.33;0.67
setComment,3,0.333333333,Sets the ZIP file comment.,;java.net.HttpCookie.setComment(String);java.util.zip.ZipEntry.setComment(String);java.util.zip.ZipOutputStream.setComment(String),;0.33;0.33;0.33
setDTDHandler,3,0.556246768,Register the DTD event handler.,;org.xml.sax.helpers.ParserAdapter.setDTDHandler(DTDHandler);org.xml.sax.helpers.XMLFilterImpl.setDTDHandler(DTDHandler);org.xml.sax.helpers.XMLReaderAdapter.setDTDHandler(DTDHandler),;0.33;0.56;0.56
setEnabledProtocols,3,0.846089786,"Sets the protocol versions enabled for use on this connection. The protocols must have been listed by getSupportedProtocols() as being supported. Following a successful call to this method, only protocols listed in the protocols parameter are enabled for use.",;javax.net.ssl.SSLEngine.setEnabledProtocols(String[]);javax.net.ssl.SSLServerSocket.setEnabledProtocols(String[]);javax.net.ssl.SSLSocket.setEnabledProtocols(String[]),;0.85;0.76;0.85
setEnableSessionCreation,3,0.727691454,"Controls whether new SSL sessions may be established by this socket. If session creations are not allowed, and there are no existing sessions to resume, there will be no successful handshaking.",;javax.net.ssl.SSLEngine.setEnableSessionCreation(boolean);javax.net.ssl.SSLServerSocket.setEnableSessionCreation(boolean);javax.net.ssl.SSLSocket.setEnableSessionCreation(boolean),;0.73;0.51;0.73
setEndRule,3,0.492645162,"Sets the daylight saving time end rule to a weekday before or after the given date within a month, e.g., the first Monday on or after the 8th.",";java.util.SimpleTimeZone.setEndRule(int,int,int,int);java.util.SimpleTimeZone.setEndRule(int,int,int);java.util.SimpleTimeZone.setEndRule(int,int,int,int,boolean)",;0.42;0.49;0.49
setEventHandler,3,0.46167902,"Allow an application to register a validation event handler. The validation event handler will be called by the JAXB Provider if any validation errors are encountered during calls to any of the unmarshal methods. If the client application does not register a validation event handler before invoking the unmarshal methods, then all validation events will be silently ignored and may result in unexpected behaviour.",;javax.xml.bind.Binder.setEventHandler(ValidationEventHandler);javax.xml.bind.helpers.AbstractMarshallerImpl.setEventHandler(ValidationEventHandler);javax.xml.bind.helpers.AbstractUnmarshallerImpl.setEventHandler(ValidationEventHandler),;0.46;0.33;0.46
setExecutor,3,0.696574101,Sets the executor for this Service instance. The executor is used for all asynchronous invocations that require callbacks.,;javax.xml.ws.Endpoint.setExecutor(Executor);javax.xml.ws.Service.setExecutor(Executor);javax.xml.ws.spi.ServiceDelegate.setExecutor(Executor),;0.43;0.70;0.70
setFields,3,0.333333333,Description copied from interface:Descriptor,";java.util.Calendar.Builder.setFields(int...);javax.management.ImmutableDescriptor.setFields(String[],Object[]);javax.management.modelmbean.DescriptorSupport.setFields(String[],Object[])",;0.33;0.33;0.33
setFocusCycleRoot,3,0.500611854,Does nothing because Windows must always be roots of a focus traversal cycle. The passed-in value is ignored.,;java.awt.Container.setFocusCycleRoot(boolean);java.awt.Window.setFocusCycleRoot(boolean);javax.swing.JInternalFrame.setFocusCycleRoot(boolean),;0.36;0.50;0.49
setFocusTraversalKeys,3,0.679123627,"Sets the focus traversal keys for a given traversal operation for this Component. The default values for a Component's focus traversal keys are implementation-dependent. Sun recommends that all implementations for a particular native platform use the same default values. The recommendations for Windows and Unix are listed below. These recommendations are used in the Sun AWT implementations. IdentifierMeaningDefaultKeyboardFocusManager.FORWARD_TRAVERSAL_KEYSNormal forward keyboard traversalTAB on KEY_PRESSED, CTRL-TAB on KEY_PRESSEDKeyboardFocusManager.BACKWARD_TRAVERSAL_KEYSNormal reverse keyboard traversalSHIFT-TAB on KEY_PRESSED, CTRL-SHIFT-TAB on KEY_PRESSEDKeyboardFocusManager.UP_CYCLE_TRAVERSAL_KEYSGo up one focus traversal cyclenone To disable a traversal key, use an empty Set; Collections.EMPTY_SET is recommended. Using the AWTKeyStroke API, client code can specify on which of two specific KeyEvents, KEY_PRESSED or KEY_RELEASED, the focus traversal operation will occur. Regardless of which KeyEvent is specified, however, all KeyEvents related to the focus traversal key, including the associated KEY_TYPED event, will be consumed, and will not be dispatched to any Component. It is a runtime error to specify a KEY_TYPED event as mapping to a focus traversal operation, or to map the same event to multiple default focus traversal operations. If a value of null is specified for the Set, this Component inherits the Set from its parent. If all ancestors of this Component have null specified for the Set, then the current KeyboardFocusManager's default Set is used. This method may throw a ClassCastException if any Object in keystrokes is not an AWTKeyStroke.",";java.awt.Component.setFocusTraversalKeys(int,Set&lt;?);java.awt.Container.setFocusTraversalKeys(int,Set&lt;?);javax.swing.JComponent.setFocusTraversalKeys(int,Set&lt;?)",;0.68;0.68;0.34
setHints,3,0.745443845,Filters the information provided in the setHints method of the ImageConsumer interface. Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being filtered. Developers using this class to filter pixels from an image should avoid calling this method directly since that operation could interfere with the filtering operation.,;java.awt.image.AreaAveragingScaleFilter.setHints(int);java.awt.image.ImageFilter.setHints(int);java.awt.image.PixelGrabber.setHints(int),;0.74;0.75;0.69
setIconImage,3,1,"Sets the image to be displayed as the icon for this window. This method can be used instead of setIconImages() to specify a single image as a window's icon. The following statement: setIconImage(image); is equivalent to: ArrayList&lt;Image&gt; imageList = new ArrayList&lt;Image&gt;(); imageList.add(image); setIconImages(imageList); Note : Native windowing systems may use different images of differing dimensions to represent a window, depending on the context (e.g. window decoration, window list, taskbar, etc.). They could also use just a single image for all contexts or no image at all.",;java.awt.Frame.setIconImage(Image);java.awt.Window.setIconImage(Image);javax.swing.JFrame.setIconImage(Image),;1.00;1.00;1.00
setIndex,3,0.333333333,Sets the position to the specified position in the text and returns that character.,;java.text.ParsePosition.setIndex(int);java.text.StringCharacterIterator.setIndex(int);javax.swing.text.Segment.setIndex(int),;0.33;0.33;0.33
setIssuer,3,0.506314795,"Denigrated, use setIssuer(X500Principal) or setIssuer(byte[]) instead. This method should not be relied on as it can fail to match some certificates because of a loss of encoding information in the RFC 2253 String form of some distinguished names. Sets the issuer criterion. The specified distinguished name must match the issuer distinguished name in the X509Certificate. If null, any issuer distinguished name will do. If issuerDN is not null, it should contain a distinguished name, in RFC 2253 format.",;java.security.cert.X509CertSelector.setIssuer(X500Principal);java.security.cert.X509CertSelector.setIssuer(String);java.security.cert.X509CertSelector.setIssuer(byte[]),;0.37;0.51;0.47
setLenient,3,0.387879641,"Specify whether or not date/time parsing is to be lenient. With lenient parsing, the parser may use heuristics to interpret inputs that do not precisely match this object's format. With strict parsing, inputs must match this object's format. This method is equivalent to the following call. getCalendar().setLenient(lenient) This leniency value is overwritten by a call to setCalendar().",;java.text.DateFormat.setLenient(boolean);java.util.Calendar.setLenient(boolean);java.util.Calendar.Builder.setLenient(boolean),;0.39;0.39;0.33
setLightWeightPopupEnabled,3,0.46810817,"Sets the value of the lightWeightPopupEnabled property, which by default is true. By default, when a look and feel displays a popup, it can choose to use a lightweight (all-Java) popup. Lightweight popup windows are more efficient than heavyweight (native peer) windows, but lightweight and heavyweight components do not mix well in a GUI. If your application mixes lightweight and heavyweight components, you should disable lightweight popups. Some look and feels might always use heavyweight popups, no matter what the value of this property.",;javax.swing.JComboBox.setLightWeightPopupEnabled(boolean);javax.swing.JPopupMenu.setLightWeightPopupEnabled(boolean);javax.swing.ToolTipManager.setLightWeightPopupEnabled(boolean),;0.46;0.47;0.34
setMenuBar,3,0.637389303,Deprecated.As of Swing version 1.0.3 replaced by setJMenuBar(JMenuBar menu).,;java.awt.Frame.setMenuBar(MenuBar);javax.swing.JInternalFrame.setMenuBar(JMenuBar);javax.swing.JRootPane.setMenuBar(JMenuBar),;0.33;0.64;0.64
setMinimumSize,3,0.582673717,Sets the minimum size of this component to a constant value. Subsequent calls to getMinimumSize will always return this value; the component's UI will not be asked to compute it. Setting the minimum size to null restores the default behavior.,;java.awt.Component.setMinimumSize(Dimension);java.awt.Window.setMinimumSize(Dimension);javax.swing.JComponent.setMinimumSize(Dimension),;0.56;0.44;0.58
setMnemonic,3,0.340280577,"Sets the keyboard mnemonic on the current model. The mnemonic is the key which when combined with the look and feel's mouseless modifier (usually Alt) will activate this button if focus is contained somewhere within this button's ancestor window. A mnemonic must correspond to a single key on the keyboard and should be specified using one of the VK_XXX keycodes defined in java.awt.event.KeyEvent. These codes and the wider array of codes for international keyboards may be obtained through java.awt.event.KeyEvent.getExtendedKeyCodeForChar. Mnemonics are case-insensitive, therefore a key event with the corresponding keycode would cause the button to be activated whether or not the Shift modifier was pressed. If the character defined by the mnemonic is found within the button's label string, the first occurrence of it will be underlined to indicate the mnemonic to the user.",;javax.swing.AbstractButton.setMnemonic(int);javax.swing.AbstractButton.setMnemonic(char);javax.swing.DefaultButtonModel.setMnemonic(int),;0.34;0.33;0.33
setMonth,3,0.333333333,Set month.Unset this field by invoking the setter with a parameter value of DatatypeConstants.FIELD_UNDEFINED.,;java.sql.Time.setMonth(int);java.util.Date.setMonth(int);javax.xml.datatype.XMLGregorianCalendar.setMonth(int),;0.00;0.33;0.33
setOutputStream,3,0.333333333,"Set the ByteStream that is to be written to. Normally, a stream should be used rather than a reader, so that the transformer may use instructions contained in the transformation instructions to control the encoding.",;java.rmi.server.LogStream.setOutputStream(OutputStream);java.util.logging.StreamHandler.setOutputStream(OutputStream);javax.xml.transform.stream.StreamResult.setOutputStream(OutputStream),;0.00;0.33;0.33
setOwner,3,0.531534519,Sets the owner of this encoder to owner.,";java.beans.XMLDecoder.setOwner(Object);java.beans.XMLEncoder.setOwner(Object);java.nio.file.Files.setOwner(Path,UserPrincipal)",;0.53;0.53;0.33
setPage,3,0.336986075,"Sets the current URL being displayed. The content type of the pane is set, and if the editor kit for the pane is non-null, then a new default document is created and the URL is read into it. If the URL contains and reference location, the location will be scrolled to by calling the scrollToReference method. If the desired URL is the one currently being displayed, the document will not be reloaded. To force a document reload it is necessary to clear the stream description property of the document. The following code shows how this can be done: Document doc = jEditorPane.getDocument(); doc.putProperty(Document.StreamDescriptionProperty, null); If the desired URL is not the one currently being displayed, the getStream method is called to give subclasses control over the stream provided. This may load either synchronously or asynchronously depending upon the document returned by the EditorKit. If the Document is of type AbstractDocument and has a value returned by AbstractDocument.getAsynchronousLoadPriority that is greater than or equal to zero, the page will be loaded on a separate thread using that priority. If the document is loaded synchronously, it will be filled in with the stream prior to being installed into the editor with a call to setDocument, which is bound and will fire a property change event. If an IOException is thrown the partially loaded document will be discarded and neither the document or page property change events will be fired. If the document is successfully loaded and installed, a view will be built for it by the UI which will then be scrolled if necessary, and then the page property change event will be fired. If the document is loaded asynchronously, the document will be installed into the editor immediately using a call to setDocument which will fire a document property change event, then a thread will be created which will begin doing the actual loading. In this case, the page property change event will not be fired by the call to this method directly, but rather will be fired when the thread doing the loading has finished. It will also be fired on the event-dispatch thread. Since the calling thread can not throw an IOException in the event of failure on the other thread, the page property change event will be fired when the other thread is done whether the load was successful or not.",";java.awt.print.Book.setPage(int,Printable,PageFormat);javax.swing.JEditorPane.setPage(URL);javax.swing.JEditorPane.setPage(String)",;0.33;0.34;0.33
setPerformancePreferences,3,0.92661336,"Sets performance preferences for this socket. Sockets use the TCP/IP protocol by default. Some implementations may offer alternative protocols which have different performance characteristics than TCP/IP. This method allows the application to express its own preferences as to how these tradeoffs should be made when the implementation chooses from the available protocols. Performance preferences are described by three integers whose values indicate the relative importance of short connection time, low latency, and high bandwidth. The absolute values of the integers are irrelevant; in order to choose a protocol the values are simply compared, with larger values indicating stronger preferences. Negative values represent a lower priority than positive values. If the application prefers short connection time over both low latency and high bandwidth, for example, then it could invoke this method with the values (1, 0, 0). If the application prefers high bandwidth above low latency, and low latency above short connection time, then it could invoke this method with the values (0, 1, 2). Invoking this method after this socket has been connected will have no effect.",";java.net.ServerSocket.setPerformancePreferences(int,int,int);java.net.Socket.setPerformancePreferences(int,int,int);java.net.SocketImpl.setPerformancePreferences(int,int,int)",;0.89;0.93;0.91
setPolicy,3,0.333333333,"Sets the policy constraint. The X509Certificate must include at least one of the specified policies in its certificate policies extension. If certPolicySet is empty, then the X509Certificate must include at least some specified policy in its certificate policies extension. If certPolicySet is null, no policy check will be performed. Note that the Set is cloned to protect against subsequent modifications.",;java.security.Policy.setPolicy(Policy);java.security.cert.X509CertSelector.setPolicy(Set&lt;String&gt;);javax.security.auth.Policy.setPolicy(Policy),;0.33;0.33;0.00
setPublicId,3,0.677999629,"Set the public identifier for this Source. The public identifier is always optional: if the application writer includes one, it will be provided as part of the location information.",;javax.xml.transform.stream.StreamSource.setPublicId(String);org.xml.sax.InputSource.setPublicId(String);org.xml.sax.helpers.LocatorImpl.setPublicId(String),;0.68;0.68;0.36
setResourceResolver,3,0.817684105,"Sets the LSResourceResolver to customize resource resolution while in a validation episode. ValidatorHandler uses a LSResourceResolver when it needs to locate external resources while a validation, although exactly what constitutes ""locating external resources"" is up to each schema language. When the LSResourceResolver is null, the implementation will behave as if the following LSResourceResolver is set: class DumbLSResourceResolver implements LSResourceResolver { public LSInput resolveResource( String publicId, String systemId, String baseURI) { return null; // always return null } } If a LSResourceResolver throws a RuntimeException (or instances of its derived classes), then the ValidatorHandler will abort the parsing and the caller of the validate method will receive the same RuntimeException. When a new ValidatorHandler object is created, initially this field is set to null.",;javax.xml.validation.SchemaFactory.setResourceResolver(LSResourceResolver);javax.xml.validation.Validator.setResourceResolver(LSResourceResolver);javax.xml.validation.ValidatorHandler.setResourceResolver(LSResourceResolver),;0.70;0.82;0.82
setReuseAddress,3,0.74023321,Enable/disable the SO_REUSEADDR socket option. When a TCP connection is closed the connection may remain in a timeout state for a period of time after the connection is closed (typically known as the TIME_WAIT state or 2MSL wait state). For applications using a well known socket address or port it may not be possible to bind a socket to the required SocketAddress if there is a connection in the timeout state involving the socket address or port. Enabling SO_REUSEADDR prior to binding the socket using bind(SocketAddress) allows the socket to be bound even though a previous connection is in a timeout state. When a Socket is created the initial setting of SO_REUSEADDR is disabled. The behaviour when SO_REUSEADDR is enabled or disabled after a socket is bound (See isBound()) is not defined.,;java.net.DatagramSocket.setReuseAddress(boolean);java.net.ServerSocket.setReuseAddress(boolean);java.net.Socket.setReuseAddress(boolean),;0.55;0.73;0.74
setRoles,3,0.477015014,"Sets the given roles. Will check the role according to its corresponding role definition provided in relation's relation type Will send one notification (RelationNotification with type RELATION_BASIC_UPDATE or RELATION_MBEAN_UPDATE, depending if the relation is a MBean or not) per updated role.",";javax.management.relation.RelationService.setRoles(String,RoleList);javax.management.relation.RelationSupport.setRoles(RoleList);javax.management.relation.RoleResult.setRoles(RoleList)",;0.48;0.48;0.33
setRows,3,0.569149769,Sets the number of rows for this text area.,;java.awt.GridLayout.setRows(int);java.awt.TextArea.setRows(int);javax.swing.JTextArea.setRows(int),;0.54;0.57;0.56
setSelectionInterval,3,0.387268071,"Changes the selection to be between index0 and index1 inclusive. index0 doesn't have to be less than or equal to index1. In SINGLE_SELECTION selection mode, only the second index is used. If this represents a change to the current selection, then each ListSelectionListener is notified of the change. If either index is -1, this method does nothing and returns without exception. Otherwise, if either index is less than -1, an IndexOutOfBoundsException is thrown.",";javax.swing.DefaultListSelectionModel.setSelectionInterval(int,int);javax.swing.JList.setSelectionInterval(int,int);javax.swing.JTree.setSelectionInterval(int,int)",;0.39;0.39;0.33
setSelectionMode,3,0.333333333,"Sets the selection model, which must be one of SINGLE_TREE_SELECTION, CONTIGUOUS_TREE_SELECTION or DISCONTIGUOUS_TREE_SELECTION. If mode is not one of the defined value, DISCONTIGUOUS_TREE_SELECTION is assumed. This may change the selection if the current selection is not valid for the new mode. For example, if three TreePaths are selected when the mode is changed to SINGLE_TREE_SELECTION, only one TreePath will remain selected. It is up to the particular implementation to decide what TreePath remains selected. Setting the mode to something other than the defined types will result in the mode becoming DISCONTIGUOUS_TREE_SELECTION.",;javax.swing.JTable.setSelectionMode(int);javax.swing.JTree.EmptySelectionModel.setSelectionMode(int);javax.swing.tree.DefaultTreeSelectionModel.setSelectionMode(int),;0.33;0.33;0.33
setSelectionPaths,3,0.333333333,"Sets the selection. Whether the supplied paths are taken as the new selection depends upon the selection mode. If the supplied array is null, or empty, the selection is cleared. If the selection mode is SINGLE_TREE_SELECTION, only the first path in pPaths is used. If the selection mode is CONTIGUOUS_TREE_SELECTION and the supplied paths are not contiguous, then only the first path in pPaths is used. If the selection mode is DISCONTIGUOUS_TREE_SELECTION, then all paths are used. All null paths in pPaths are ignored. If this represents a change, all registered TreeSelectionListeners are notified. The lead path is set to the last unique path. The paths returned from getSelectionPaths are in the same order as those supplied to this method.",;javax.swing.JTree.setSelectionPaths(TreePath[]);javax.swing.JTree.EmptySelectionModel.setSelectionPaths(TreePath[]);javax.swing.tree.DefaultTreeSelectionModel.setSelectionPaths(TreePath[]),;0.33;0.33;0.33
setSoTimeout,3,0.916097788,"Enable/disable SO_TIMEOUT with the specified timeout, in milliseconds. With this option set to a non-zero timeout, a call to accept() for this ServerSocket will block for only this amount of time. If the timeout expires, a java.net.SocketTimeoutException is raised, though the ServerSocket is still valid. The option must be enabled prior to entering the blocking operation to have effect. The timeout must be &gt; 0. A timeout of zero is interpreted as an infinite timeout.",;java.net.DatagramSocket.setSoTimeout(int);java.net.ServerSocket.setSoTimeout(int);java.net.Socket.setSoTimeout(int),;0.92;0.92;0.90
setStartRule,3,0.493807921,"Sets the daylight saving time start rule to a weekday before or after the given date within a month, e.g., the first Monday on or after the 8th.",";java.util.SimpleTimeZone.setStartRule(int,int,int,int);java.util.SimpleTimeZone.setStartRule(int,int,int);java.util.SimpleTimeZone.setStartRule(int,int,int,int,boolean)",;0.42;0.48;0.49
setSubject,3,0.612750433,"Sets the subject criterion. The specified distinguished name must match the subject distinguished name in the X509Certificate. If null, any subject distinguished name will do. If subjectDN is not null, it should contain a single DER encoded distinguished name, as defined in X.501. For the ASN.1 notation for this structure, see setIssuer(byte [] issuerDN).",;java.security.cert.X509CertSelector.setSubject(X500Principal);java.security.cert.X509CertSelector.setSubject(String);java.security.cert.X509CertSelector.setSubject(byte[]),;0.47;0.58;0.61
setUnitIncrement,3,0.333333333,"Sets the unitIncrement property. Note, that if the argument is equal to the value of Integer.MIN_VALUE, the most look and feels will not provide the scrolling to the right/down. Some look and feels implement custom scrolling behavior and ignore this property.",;java.awt.Scrollbar.setUnitIncrement(int);java.awt.ScrollPaneAdjustable.setUnitIncrement(int);javax.swing.JScrollBar.setUnitIncrement(int),;0.33;0.33;0.33
setUseClientMode,3,0.658253378,"Configures the socket to use client (or server) mode when handshaking. This method must be called before any handshaking occurs. Once handshaking has begun, the mode can not be reset for the life of this socket. Servers normally authenticate themselves, and clients are not required to do so.",;javax.net.ssl.SSLEngine.setUseClientMode(boolean);javax.net.ssl.SSLServerSocket.setUseClientMode(boolean);javax.net.ssl.SSLSocket.setUseClientMode(boolean),;0.66;0.41;0.66
setValidating,3,0.666666667,"Specifies that the parser produced by this code will validate documents as they are parsed. By default the value of this is set to false. Note that ""the validation"" here means a validating parser as defined in the XML recommendation. In other words, it essentially just controls the DTD validation. (except the legacy two properties defined in JAXP 1.2.) To use modern schema languages such as W3C XML Schema or RELAX NG instead of DTD, you can configure your parser to be a non-validating parser by leaving the setValidating(boolean) method false, then use the setSchema(Schema) method to associate a schema to a parser.",;javax.xml.bind.helpers.AbstractUnmarshallerImpl.setValidating(boolean);javax.xml.parsers.DocumentBuilderFactory.setValidating(boolean);javax.xml.parsers.SAXParserFactory.setValidating(boolean),;0.33;0.67;0.67
setValueAt,3,0.363435161,"Sets the value for the cell in the table model at row and column. Note: The column is specified in the table view's display order, and not in the TableModel's column order. This is an important distinction because as the user rearranges the columns in the table, the column at a given index in the view will change. Meanwhile the user's actions never affect the model's column ordering. aValue is the new value.",";javax.swing.JTable.setValueAt(Object,int,int);javax.swing.table.AbstractTableModel.setValueAt(Object,int,int);javax.swing.table.DefaultTableModel.setValueAt(Object,int,int)",;0.36;0.33;0.34
setView,3,0.403664206,"Sets the JViewport's one lightweight child (view), which can be null.",;javax.swing.JLayer.setView(V);javax.swing.JViewport.setView(Component);javax.swing.plaf.basic.BasicTextUI.setView(View),;0.40;0.40;0.33
setVisibleAmount,3,0.333333333,Set the model's extent property.,;java.awt.Scrollbar.setVisibleAmount(int);java.awt.ScrollPaneAdjustable.setVisibleAmount(int);javax.swing.JScrollBar.setVisibleAmount(int),;0.33;0.33;0.33
setWeekDate,3,0.526165895,"Sets the date of this Calendar with the the given date specifiers - week year, week of year, and day of week. Unlike the set method, all of the calendar fields and time values are calculated upon return. If weekOfYear is out of the valid week-of-year range in weekYear, the weekYear and weekOfYear values are adjusted in lenient mode, or an IllegalArgumentException is thrown in non-lenient mode. The default implementation of this method throws an UnsupportedOperationException.",";java.util.Calendar.setWeekDate(int,int,int);java.util.Calendar.Builder.setWeekDate(int,int,int);java.util.GregorianCalendar.setWeekDate(int,int,int)",;0.53;0.38;0.47
shape,3,0.810761788,"Converts the digits in the text that occur between start and start + count, using the provided context. Context is ignored if the shaper is not a contextual shaper.",";java.awt.font.NumericShaper.shape(char[],int,int);java.awt.font.NumericShaper.shape(char[],int,int,int);java.awt.font.NumericShaper.shape(char[],int,int,NumericShaper.Range)",;0.54;0.81;0.81
shouldSelectCell,3,0.333333333,Messages the realEditor for the return value.,;javax.swing.AbstractCellEditor.shouldSelectCell(EventObject);javax.swing.DefaultCellEditor.shouldSelectCell(EventObject);javax.swing.tree.DefaultTreeCellEditor.shouldSelectCell(EventObject),;0.00;0.33;0.33
showInternalInputDialog,3,0.444581029,"Shows an internal question-message dialog requesting input from the user parented to parentComponent. The dialog is displayed in the Component's frame, and is usually positioned below the Component.",";javax.swing.JOptionPane.showInternalInputDialog(Component,Object);javax.swing.JOptionPane.showInternalInputDialog(Component,Object,String,int);javax.swing.JOptionPane.showInternalInputDialog(Component,Object,String,int,Icon,Object[],Object)",;0.44;0.44;0.33
showInternalMessageDialog,3,0.485326301,"Brings up an internal dialog panel displaying a message, specifying all parameters.",";javax.swing.JOptionPane.showInternalMessageDialog(Component,Object);javax.swing.JOptionPane.showInternalMessageDialog(Component,Object,String,int);javax.swing.JOptionPane.showInternalMessageDialog(Component,Object,String,int,Icon)",;0.45;0.48;0.49
showMessageDialog,3,0.390086749,Brings up a dialog that displays a message using a default icon determined by the messageType parameter.,";javax.swing.JOptionPane.showMessageDialog(Component,Object);javax.swing.JOptionPane.showMessageDialog(Component,Object,String,int);javax.swing.JOptionPane.showMessageDialog(Component,Object,String,int,Icon)",;0.33;0.39;0.39
skippedEntity,3,0.333333333,Adapt a SAX2 skipped entity event.,;org.xml.sax.helpers.DefaultHandler.skippedEntity(String);org.xml.sax.helpers.XMLFilterImpl.skippedEntity(String);org.xml.sax.helpers.XMLReaderAdapter.skippedEntity(String),;0.33;0.33;0.33
socket,3,0.884506021,Retrieves a socket associated with this channel. The returned object will not declare any public methods that are not declared in the Socket class.,;java.nio.channels.DatagramChannel.socket();java.nio.channels.ServerSocketChannel.socket();java.nio.channels.SocketChannel.socket(),;0.88;0.88;0.88
startPrefixMapping,3,0.333333333,Adapt a SAX2 start prefix mapping event.,";org.xml.sax.helpers.DefaultHandler.startPrefixMapping(String,String);org.xml.sax.helpers.XMLFilterImpl.startPrefixMapping(String,String);org.xml.sax.helpers.XMLReaderAdapter.startPrefixMapping(String,String)",;0.33;0.33;0.33
startProduction,3,0.666666667,"Adds an ImageConsumer to the list of consumers interested in data for this image, and immediately starts delivery of the image data through the ImageConsumer interface.",;java.awt.image.FilteredImageSource.startProduction(ImageConsumer);java.awt.image.MemoryImageSource.startProduction(ImageConsumer);java.awt.image.renderable.RenderableImageProducer.startProduction(ImageConsumer),;0.33;0.67;0.67
stopCellEditing,3,0.333333333,"If the realEditor will allow editing to stop, the realEditor is removed and true is returned, otherwise false is returned.",;javax.swing.AbstractCellEditor.stopCellEditing();javax.swing.DefaultCellEditor.stopCellEditing();javax.swing.tree.DefaultTreeCellEditor.stopCellEditing(),;0.33;0.33;0.33
text,3,0.666666667,"Writes out text. If a range is specified when the constructor is invoked, then only the appropriate range of text is written out.",;javax.swing.text.AbstractWriter.text(Element);javax.swing.text.html.HTMLWriter.text(Element);javax.swing.text.html.MinimalHTMLWriter.text(Element),;0.67;0.67;0.00
toBack,3,0.642879085,"If this Window is visible, sends this Window to the back and may cause it to lose focus or activation if it is the focused or active Window. Places this Window at the bottom of the stacking order and shows it behind any other Windows in this VM. No action will take place is this Window is not visible. Some platforms do not allow Windows which are owned by other Windows to appear below their owners. Every attempt will be made to move this Window as low as possible in the stacking order; however, developers should not assume that this method will move this Window below all other windows in every situation. Because of variations in native windowing systems, no guarantees about changes to the focused and active Windows can be made. Developers must never assume that this Window is no longer the focused or active Window until this Window receives a WINDOW_LOST_FOCUS or WINDOW_DEACTIVATED event. On platforms where the top-most window is the focused window, this method will probably cause this Window to lose focus. In that case, the next highest, focusable Window in this VM will receive focus. On platforms where the stacking order does not typically affect the focused window, this method will probably leave the focused and active Windows unchanged. If this dialog is modal and blocks some windows, then all of them are also sent to the back to keep them below the blocking dialog.",;java.awt.Dialog.toBack();java.awt.Window.toBack();javax.swing.JInternalFrame.toBack(),;0.64;0.64;0.33
toConcurrentMap,3,0.794654607,"Returns a concurrent Collector that accumulates elements into a ConcurrentMap whose keys and values are the result of applying the provided mapping functions to the input elements. If the mapped keys contains duplicates (according to Object.equals(Object)), the value mapping function is applied to each equal element, and the results are merged using the provided merging function.",";java.util.stream.Collectors.toConcurrentMap(Function&lt;?,?,Function&lt;?,?);java.util.stream.Collectors.toConcurrentMap(Function&lt;?,?,Function&lt;?,?,BinaryOperator&lt;U&gt;);java.util.stream.Collectors.toConcurrentMap(Function&lt;?,?,Function&lt;?,?,BinaryOperator&lt;U&gt;,Supplier&lt;M&gt;)",;0.71;0.79;0.77
toDisplayString,3,0.501475541,"Obtains the key as a localized string. If a localized string cannot be found for the key, the locale independent key stored in the role will be returned. This method is intended to be used only by subclasses so that they can specify their own resource bundles which contain localized strings for their keys.",";javax.accessibility.AccessibleBundle.toDisplayString(String,Locale);javax.accessibility.AccessibleBundle.toDisplayString(Locale);javax.accessibility.AccessibleBundle.toDisplayString()",;0.50;0.47;0.33
toLocalDateTime,3,0.711274917,"Gets the LocalDateTime part of this date-time. This returns a LocalDateTime with the same year, month, day and time as this date-time.",;java.sql.Timestamp.toLocalDateTime();java.time.OffsetDateTime.toLocalDateTime();java.time.ZonedDateTime.toLocalDateTime(),;0.43;0.71;0.71
toMap,3,0.824182267,"Returns a Collector that accumulates elements into a Map whose keys and values are the result of applying the provided mapping functions to the input elements. If the mapped keys contains duplicates (according to Object.equals(Object)), the value mapping function is applied to each equal element, and the results are merged using the provided merging function.",";java.util.stream.Collectors.toMap(Function&lt;?,?,Function&lt;?,?);java.util.stream.Collectors.toMap(Function&lt;?,?,Function&lt;?,?,BinaryOperator&lt;U&gt;);java.util.stream.Collectors.toMap(Function&lt;?,?,Function&lt;?,?,BinaryOperator&lt;U&gt;,Supplier&lt;M&gt;)",;0.73;0.82;0.81
toUnsignedLong,3,0.868645104,"Converts the argument to a long by an unsigned conversion. In an unsigned conversion to a long, the high-order 48 bits of the long are zero and the low-order 16 bits are equal to the bits of the short argument. Consequently, zero and positive short values are mapped to a numerically equal long value and negative short values are mapped to a long value equal to the input plus 216.",;java.lang.Byte.toUnsignedLong(byte);java.lang.Integer.toUnsignedLong(int);java.lang.Short.toUnsignedLong(short),;0.87;0.87;0.87
treeNodesChanged,3,1,"Invoked after a node (or a set of siblings) has changed in some way. The node(s) have not changed locations in the tree or altered their children arrays, but other attributes have changed and may affect presentation. Example: the name of a file has changed, but it is in the same location in the file system. e.path returns the path the parent of the changed node(s). e.childIndices returns the index(es) of the changed node(s).",;javax.swing.tree.AbstractLayoutCache.treeNodesChanged(TreeModelEvent);javax.swing.tree.FixedHeightLayoutCache.treeNodesChanged(TreeModelEvent);javax.swing.tree.VariableHeightLayoutCache.treeNodesChanged(TreeModelEvent),;1.00;1.00;1.00
treeNodesInserted,3,0.958113814,Invoked after nodes have been inserted into the tree. e.path returns the parent of the new nodes. e.childIndices returns the indices of the new nodes in ascending order.,;javax.swing.tree.AbstractLayoutCache.treeNodesInserted(TreeModelEvent);javax.swing.tree.FixedHeightLayoutCache.treeNodesInserted(TreeModelEvent);javax.swing.tree.VariableHeightLayoutCache.treeNodesInserted(TreeModelEvent),;0.92;0.96;0.96
treeNodesRemoved,3,1,"Invoked after nodes have been removed from the tree. Note that if a subtree is removed from the tree, this method may only be invoked once for the root of the removed subtree, not once for each individual set of siblings removed. e.path returns the former parent of the deleted nodes. e.childIndices returns the indices the nodes had before they were deleted in ascending order.",;javax.swing.tree.AbstractLayoutCache.treeNodesRemoved(TreeModelEvent);javax.swing.tree.FixedHeightLayoutCache.treeNodesRemoved(TreeModelEvent);javax.swing.tree.VariableHeightLayoutCache.treeNodesRemoved(TreeModelEvent),;1.00;1.00;1.00
treeStructureChanged,3,1,Invoked after the tree has drastically changed structure from a given node down. If the path returned by e.getPath is of length one and the first element does not identify the current root node the first element should become the new root of the tree. e.path holds the path to the node. e.childIndices returns null.,;javax.swing.tree.AbstractLayoutCache.treeStructureChanged(TreeModelEvent);javax.swing.tree.FixedHeightLayoutCache.treeStructureChanged(TreeModelEvent);javax.swing.tree.VariableHeightLayoutCache.treeStructureChanged(TreeModelEvent),;1.00;1.00;1.00
union,3,0.350657211,"Computes the union of this Rectangle with the specified Rectangle. Returns a new Rectangle that represents the union of the two rectangles. If either Rectangle has any dimension less than zero the rules for non-existant rectangles apply. If only one has a dimension less than zero, then the result will be a copy of the other Rectangle. If both have dimension less than zero, then the result will have at least one dimension less than zero. If the resulting Rectangle would have a dimension too large to be expressed as an int, the result will have a dimension of Integer.MAX_VALUE along that dimension.",";java.awt.Rectangle.union(Rectangle);java.awt.geom.Rectangle2D.union(Rectangle2D,Rectangle2D,Rectangle2D);javax.management.ImmutableDescriptor.union(Descriptor...)",;0.35;0.33;0.35
unparsedEntityDecl,3,0.358361084,"Receive notification of an unparsed entity declaration. By default, do nothing. Application writers may override this method in a subclass to keep track of the unparsed entities declared in a document.",";org.xml.sax.HandlerBase.unparsedEntityDecl(String,String,String,String);org.xml.sax.helpers.DefaultHandler.unparsedEntityDecl(String,String,String,String);org.xml.sax.helpers.XMLFilterImpl.unparsedEntityDecl(String,String,String,String)",;0.00;0.36;0.34
updateAAD,3,0.826979305,"Continues a multi-part update of the Additional Authentication Data (AAD), using a subset of the provided buffer. Calls to this method provide AAD to the cipher when operating in modes such as AEAD (GCM/CCM). If this cipher is operating in either GCM or CCM mode, all AAD must be supplied before beginning operations on the ciphertext (via the update and doFinal methods).",";javax.crypto.Cipher.updateAAD(byte[]);javax.crypto.Cipher.updateAAD(byte[],int,int);javax.crypto.Cipher.updateAAD(ByteBuffer)",;0.82;0.83;0.77
upFocusCycle,3,0.876806658,"Moves the focus up one focus traversal cycle. Typically, the focus owner is set to aComponent's focus cycle root, and the current focus cycle root is set to the new focus owner's focus cycle root. If, however, aComponent's focus cycle root is a Window, then the focus owner is set to the focus cycle root's default Component to focus, and the current focus cycle root is unchanged.",;java.awt.DefaultKeyboardFocusManager.upFocusCycle(Component);java.awt.KeyboardFocusManager.upFocusCycle(Component);java.awt.KeyboardFocusManager.upFocusCycle(),;0.88;0.87;0.81
valueChanged,3,0.333333333,A ListSelectionListener that forwards ListSelectionEvents when there is a column selection change.,;javax.swing.JTable.valueChanged(ListSelectionEvent);javax.swing.table.DefaultTableColumnModel.valueChanged(ListSelectionEvent);javax.swing.tree.DefaultTreeCellEditor.valueChanged(TreeSelectionEvent),;0.33;0.33;0.00
visitPackage,3,0.667414361,Visits a package element. This implementation calls defaultAction.,";javax.lang.model.util.ElementKindVisitor6.visitPackage(PackageElement,P);javax.lang.model.util.ElementScanner6.visitPackage(PackageElement,P);javax.lang.model.util.SimpleElementVisitor6.visitPackage(PackageElement,P)",;0.62;0.62;0.67
visitTypeParameter,3,0.698245361,Visits a type parameter element. This implementation calls defaultAction.,";javax.lang.model.util.ElementKindVisitor6.visitTypeParameter(TypeParameterElement,P);javax.lang.model.util.ElementScanner6.visitTypeParameter(TypeParameterElement,P);javax.lang.model.util.SimpleElementVisitor6.visitTypeParameter(TypeParameterElement,P)",;0.65;0.66;0.70
visitUnknown,3,0.761247813,Visits an unknown kind of type. This can occur if the language evolves and new kinds of types are added to the TypeMirror hierarchy. The default implementation of this method in AbstractTypeVisitor6 will always throw UnknownTypeException. This behavior is not required of a subclass.,";javax.lang.model.util.AbstractAnnotationValueVisitor6.visitUnknown(AnnotationValue,P);javax.lang.model.util.AbstractElementVisitor6.visitUnknown(Element,P);javax.lang.model.util.AbstractTypeVisitor6.visitUnknown(TypeMirror,P)",;0.73;0.76;0.76
writeExternal,3,0.333333333,"Save this MLet's contents to the given ObjectOutput. Not all implementations support this method. Those that do not throw UnsupportedOperationException. A subclass may override this method to support it or to change the format of the written data.The format of the written data is not specified, but if an implementation supports writeExternal(java.io.ObjectOutput) it must also support readExternal(java.io.ObjectInput) in such a way that what is written by the former can be read by the latter.",;java.awt.datatransfer.DataFlavor.writeExternal(ObjectOutput);javax.activation.MimeType.writeExternal(ObjectOutput);javax.management.loading.MLet.writeExternal(ObjectOutput),;0.00;0.33;0.33
writeLock,3,0.333333333,"Acquires a lock to begin mutating the document this lock protects. There can be no writing, notification of changes, or reading going on in order to gain the lock. Additionally a thread is allowed to gain more than one writeLock, as long as it doesn't attempt to gain additional writeLocks from within document notification. Attempting to gain a writeLock from within a DocumentListener notification will result in an IllegalStateException. The ability to obtain more than one writeLock per thread allows subclasses to gain a writeLock, perform a number of operations, then release the lock. Calls to writeLock must be balanced with calls to writeUnlock, else the Document will be left in a locked state so that no reading or writing can be done.",;java.util.concurrent.locks.ReentrantReadWriteLock.writeLock();java.util.concurrent.locks.StampedLock.writeLock();javax.swing.text.AbstractDocument.writeLock(),;0.33;0.33;0.33
_create_request,4,0.5,Throws an org.omg.CORBA.NO_IMPLEMENT exception with the message "This is a locally constrained object." This method is the default implementation of the org.omg.CORBA.Object method.,";org.omg.CORBA.LocalObject._create_request(Context,String,NVList,NamedValue);org.omg.CORBA.LocalObject._create_request(Context,String,NVList,NamedValue,ExceptionList,ContextList);org.omg.CORBA.portable.ObjectImpl._create_request(Context,String,NVList,NamedValue);org.omg.CORBA.portable.ObjectImpl._create_request(Context,String,NVList,NamedValue,ExceptionList,ContextList)",;0.50;0.50;0.30;0.33
_request,4,0.401733341,"Throws an org.omg.CORBA.NO_IMPLEMENT exception with the message ""This is a locally constrained object."" This method is the default implementation of the org.omg.CORBA.Object method. Called by a stub to obtain an OutputStream for marshaling arguments. The stub must supply the operation name, and indicate if a response is expected (i.e is this a oneway call).",";org.omg.CORBA.LocalObject._request(String);org.omg.CORBA.LocalObject._request(String,boolean);org.omg.CORBA.portable.ObjectImpl._request(String);org.omg.CORBA.portable.ObjectImpl._request(String,boolean)",;0.33;0.40;0.25;0.28
actionPropertyChanged,4,0.95946375,Updates the button's state in response to property changes in the associated action. This method is invoked from the PropertyChangeListener returned from createActionPropertyChangeListener. Subclasses do not normally need to invoke this. Subclasses that support additional Action properties should override this and configurePropertiesFromAction. Refer to the table at Swing Components Supporting Action for a list of the properties this method sets.,";javax.swing.AbstractButton.actionPropertyChanged(Action,String);javax.swing.JComboBox.actionPropertyChanged(Action,String);javax.swing.JMenuItem.actionPropertyChanged(Action,String);javax.swing.JTextField.actionPropertyChanged(Action,String)",;0.96;0.95;0.96;0.95
addAttributes,4,0.422132563,Adds a set of attributes to a subrange of the string.,";java.text.AttributedString.addAttributes(Map&lt;?,?&gt;,int,int);javax.swing.text.SimpleAttributeSet.addAttributes(AttributeSet);javax.swing.text.StyleContext.addAttributes(AttributeSet,AttributeSet);javax.swing.text.html.StyleSheet.addAttributes(AttributeSet,AttributeSet)",;0.42;0.41;0.41;0.40
addExact,4,0.925366567,"Returns the sum of its arguments, throwing an exception if the result overflows a long.",";java.lang.Math.addExact(int,int);java.lang.Math.addExact(long,long);java.lang.StrictMath.addExact(int,int);java.lang.StrictMath.addExact(long,long)",;0.93;0.93;0.93;0.93
addFirst,4,0.478575455,Inserts the specified element at the front of this deque.,;java.util.ArrayDeque.addFirst(E);java.util.LinkedList.addFirst(E);java.util.concurrent.ConcurrentLinkedDeque.addFirst(E);java.util.concurrent.LinkedBlockingDeque.addFirst(E),;0.48;0.44;0.42;0.25
addItem,4,0.454682688,Deprecated.replaced by add(String).,";java.awt.Choice.addItem(String);java.awt.List.addItem(String);java.awt.List.addItem(String,int);javax.swing.JComboBox.addItem(E)",;0.25;0.45;0.44;0.26
addLast,4,0.510267604,Inserts the specified element at the end of this deque. This method is equivalent to add(E).,;java.util.ArrayDeque.addLast(E);java.util.LinkedList.addLast(E);java.util.concurrent.ConcurrentLinkedDeque.addLast(E);java.util.concurrent.LinkedBlockingDeque.addLast(E),;0.51;0.47;0.46;0.25
addNotification,4,0.720187415,"Creates a new timer notification with the specified type, message and userData and inserts it into the list of notifications with a given date, period and number of occurrences. If the timer notification to be inserted has a date that is before the current date, the method behaves as if the specified date were the current date. For once-off notifications, the notification is delivered immediately. For periodic notifications, the first notification is delivered immediately and the subsequent ones are spaced as specified by the period parameter. Note that once the timer notification has been added into the list of notifications, its associated date, period and number of occurrences cannot be updated. In the case of a periodic notification, uses a fixed-delay execution scheme, as specified in Timer. In order to use a fixed-rate execution scheme, use addNotification(String, String, Object, Date, long, long, boolean) instead.",";javax.management.timer.Timer.addNotification(String,String,Object,Date,long,long,boolean);javax.management.timer.Timer.addNotification(String,String,Object,Date,long,long);javax.management.timer.Timer.addNotification(String,String,Object,Date,long);javax.management.timer.Timer.addNotification(String,String,Object,Date)",;0.70;0.72;0.67;0.54
addObjectValue,4,0.757546432,"Allows an Object reference of a given class type to be stored in nodes implementing the named element. The value of the Object must be one of the values given by enumeratedValues. If an Object reference was previously allowed, the previous settings are overwritten.",";javax.imageio.metadata.IIOMetadataFormatImpl.addObjectValue(String,Class&lt;T&gt;,boolean,T);javax.imageio.metadata.IIOMetadataFormatImpl.addObjectValue(String,Class&lt;T&gt;,boolean,T,List&lt;?);javax.imageio.metadata.IIOMetadataFormatImpl.addObjectValue(String,Class&lt;T&gt;,T,Comparable&lt;?,Comparable&lt;?,boolean,boolean);javax.imageio.metadata.IIOMetadataFormatImpl.addObjectValue(String,Class&lt;?&gt;,int,int)",;0.74;0.76;0.73;0.72
addTo,4,0.33065437,"Adds this period to the specified temporal object. This returns a temporal object of the same observable type as the input with this period added. If the temporal has a chronology, it must be the ISO chronology. In most cases, it is clearer to reverse the calling pattern by using Temporal.plus(TemporalAmount). // these two lines are equivalent, but the second approach is recommended dateTime = thisPeriod.addTo(dateTime); dateTime = dateTime.plus(thisPeriod); The calculation operates as follows. First, the chronology of the temporal is checked to ensure it is ISO chronology or null. Second, if the months are zero, the years are added if non-zero, otherwise the combination of years and months is added if non-zero. Finally, any days are added. This approach ensures that a partial period can be added to a partial date. For example, a period of years and/or months can be added to a YearMonth, but a period including days cannot. The approach also adds years and months together when necessary, which ensures correct behaviour at the end of the month. This instance is immutable and unaffected by this method call.",;java.time.Duration.addTo(Temporal);java.time.Period.addTo(Temporal);javax.xml.datatype.Duration.addTo(Calendar);javax.xml.datatype.Duration.addTo(Date),;0.32;0.33;0.27;0.26
addVetoableChangeListener,4,0.528435861,"Add a VetoableChangeListener for a specific property. The same listener object may be added more than once. For each property, the listener will be invoked the number of times it was added for that property. If name or vcl is null, no exception is thrown and no action is taken.",";java.beans.VetoableChangeSupport.addVetoableChangeListener(VetoableChangeListener);java.beans.VetoableChangeSupport.addVetoableChangeListener(String,VetoableChangeListener);java.beans.beancontext.BeanContextChildSupport.addVetoableChangeListener(String,VetoableChangeListener);javax.swing.JComponent.addVetoableChangeListener(VetoableChangeListener)",;0.51;0.51;0.53;0.27
appendText,4,0.492224892,"Appends the text of a date-time field to the formatter using the full text style. The text of the field will be output during a format. The value must be within the valid range of the field. If the value cannot be obtained then an exception will be thrown. If the field has no textual representation, then the numeric value will be used. The value will be printed as per the normal format of an integer value. Only negative numbers will be signed. No padding will be added.",";java.awt.TextArea.appendText(String);java.time.format.DateTimeFormatterBuilder.appendText(TemporalField);java.time.format.DateTimeFormatterBuilder.appendText(TemporalField,TextStyle);java.time.format.DateTimeFormatterBuilder.appendText(TemporalField,Map&lt;Long,String&gt;)",;0.25;0.49;0.49;0.29
applyPattern,4,0.25,Applies the given pattern string to this date format.,;java.text.ChoiceFormat.applyPattern(String);java.text.DecimalFormat.applyPattern(String);java.text.MessageFormat.applyPattern(String);java.text.SimpleDateFormat.applyPattern(String),;0.00;0.25;0.25;0.25
asList,4,0.657635118,Return a view of this list as a List&lt;RoleUnresolved&gt;. Changes to the returned value are reflected by changes to the original RoleUnresolvedList and vice versa.,;java.util.Arrays.asList(T...);javax.management.AttributeList.asList();javax.management.relation.RoleList.asList();javax.management.relation.RoleUnresolvedList.asList(),;0.29;0.66;0.66;0.66
breakView,4,0.351191997,"Breaks this view on the given axis at the given length. This is implemented to attempt to break on a whitespace location, and returns a fragment with the whitespace at the end. If a whitespace location can't be found, the nearest character is used.",";javax.swing.text.GlyphView.breakView(int,int,float,float);javax.swing.text.ParagraphView.breakView(int,float,Shape);javax.swing.text.View.breakView(int,int,float,float);javax.swing.text.html.InlineView.breakView(int,int,float,float)",;0.35;0.33;0.31;0.32
callable,4,0.678303826,"Returns a Callable object that, when called, runs the given privileged action and returns its result.",";java.util.concurrent.Executors.callable(Runnable,T);java.util.concurrent.Executors.callable(Runnable);java.util.concurrent.Executors.callable(PrivilegedAction&lt;?&gt;);java.util.concurrent.Executors.callable(PrivilegedExceptionAction&lt;?&gt;)",;0.51;0.62;0.68;0.67
cancelEditing,4,0.401405207,Cancels the current editing session. Has no effect if the tree isn't being edited.,;javax.swing.JTree.cancelEditing();javax.swing.plaf.TreeUI.cancelEditing(JTree);javax.swing.plaf.basic.BasicTreeUI.cancelEditing(JTree);javax.swing.plaf.multi.MultiTreeUI.cancelEditing(JTree),;0.40;0.39;0.29;0.25
characteristics,4,1,"Returns a set of characteristics of this Spliterator and its elements. The result is represented as ORed values from Spliterator.ORDERED, Spliterator.DISTINCT, Spliterator.SORTED, Spliterator.SIZED, Spliterator.NONNULL, Spliterator.IMMUTABLE, Spliterator.CONCURRENT, Spliterator.SUBSIZED. Repeated calls to characteristics() on a given spliterator, prior to or in-between calls to trySplit, should always return the same result. If a Spliterator reports an inconsistent set of characteristics (either those returned from a single invocation or across multiple invocations), no guarantees can be made about any computation using this Spliterator.",;java.util.Spliterators.AbstractDoubleSpliterator.characteristics();java.util.Spliterators.AbstractIntSpliterator.characteristics();java.util.Spliterators.AbstractLongSpliterator.characteristics();java.util.Spliterators.AbstractSpliterator.characteristics(),;1.00;1.00;1.00;1.00
checkPermission,4,0.403001578,"Determines whether the access request indicated by the specified permission should be allowed or denied, based on the security policy currently in effect, and the context in this object. The request is allowed only if every ProtectionDomain in the context implies the permission. Otherwise the request is denied. This method quietly returns if the access request is permitted, or throws a suitable AccessControlException otherwise.",";java.lang.SecurityManager.checkPermission(Permission);java.lang.SecurityManager.checkPermission(Permission,Object);java.security.AccessControlContext.checkPermission(Permission);java.security.AccessController.checkPermission(Permission)",;0.29;0.28;0.40;0.36
checkValidity,4,0.5,"Checks that the certificate is currently valid. It is if the current date and time are within the validity period given in the certificate. The validity period consists of two date/time values: the first and last dates (and times) on which the certificate is valid. It is defined in ASN.1 as: validity Validity Validity ::= SEQUENCE { notBefore CertificateValidityDate, notAfter CertificateValidityDate } CertificateValidityDate ::= CHOICE { utcTime UTCTime, generalTime GeneralizedTime }",;java.security.cert.X509Certificate.checkValidity();java.security.cert.X509Certificate.checkValidity(Date);javax.security.cert.X509Certificate.checkValidity();javax.security.cert.X509Certificate.checkValidity(Date),;0.50;0.45;0.50;0.45
coerceData,4,0.705821791,"Forces the raster data to match the state specified in the isAlphaPremultiplied variable, assuming the data is currently correctly described by this ColorModel. It may multiply or divide the color raster data by alpha, or do nothing if the data is in the correct state. If the data needs to be coerced, this method will also return an instance of this ColorModel with the isAlphaPremultiplied flag set appropriately. This method will throw a UnsupportedOperationException if this transferType is not supported by this ColorModel. Since ColorModel can be subclassed, subclasses inherit the implementation of this method and if they don't override it then they throw an exception if they use an unsupported transferType.",";java.awt.image.BufferedImage.coerceData(boolean);java.awt.image.ColorModel.coerceData(WritableRaster,boolean);java.awt.image.ComponentColorModel.coerceData(WritableRaster,boolean);java.awt.image.DirectColorModel.coerceData(WritableRaster,boolean)",;0.33;0.65;0.68;0.71
combine,4,0.54847459,Combines the state of another LongSummaryStatistics into this one.,";java.util.DoubleSummaryStatistics.combine(DoubleSummaryStatistics);java.util.IntSummaryStatistics.combine(IntSummaryStatistics);java.util.LongSummaryStatistics.combine(LongSummaryStatistics);javax.security.auth.SubjectDomainCombiner.combine(ProtectionDomain[],ProtectionDomain[])",;0.55;0.55;0.55;0.25
command,4,0.477373178,Sets this process builder's operating system program and arguments. This method does not make a copy of the command list. Subsequent updates to the list will be reflected in the state of the process builder. It is not checked whether command corresponds to a valid operating system command.,;java.lang.Compiler.command(Object);java.lang.ProcessBuilder.command(List&lt;String&gt;);java.lang.ProcessBuilder.command(String...);java.lang.ProcessBuilder.command(),;0.25;0.48;0.42;0.39
complete,4,0.260053223,"Regardless of pending count, invokes onCompletion(CountedCompleter), marks this task as complete and further triggers tryComplete() on this task's completer, if one exists. The given rawResult is used as an argument to setRawResult(T) before invoking onCompletion(CountedCompleter) or marking this task as complete; its value is meaningful only for classes overriding setRawResult. This method does not modify the pending count. This method may be useful when forcing completion as soon as any one (versus all) of several subtask results are obtained. However, in the common (and recommended) case in which setRawResult is not overridden, this effect can be obtained more simply using quietlyCompleteRoot();.",;java.util.Calendar.complete();java.util.concurrent.CompletableFuture.complete(T);java.util.concurrent.CountedCompleter.complete(T);java.util.concurrent.ForkJoinTask.complete(V),;0.25;0.25;0.26;0.26
configurePropertiesFromAction,4,0.95125699,Sets the properties on this button to match those in the specified Action. Refer to Swing Components Supporting Action for more details as to which properties this sets.,;javax.swing.AbstractButton.configurePropertiesFromAction(Action);javax.swing.JComboBox.configurePropertiesFromAction(Action);javax.swing.JMenuItem.configurePropertiesFromAction(Action);javax.swing.JTextField.configurePropertiesFromAction(Action),;0.95;0.93;0.95;0.93
copySign,4,0.642614593,"Returns the first floating-point argument with the sign of the second floating-point argument. Note that unlike the StrictMath.copySign method, this method does not require NaN sign arguments to be treated as positive values; implementations are permitted to treat some NaN arguments as positive and other NaN arguments as negative to allow greater performance.",";java.lang.Math.copySign(double,double);java.lang.Math.copySign(float,float);java.lang.StrictMath.copySign(double,double);java.lang.StrictMath.copySign(float,float)",;0.64;0.64;0.61;0.61
createBufferStrategy,4,0.662901145,"Creates a new strategy for multi-buffering on this component. Multi-buffering is useful for rendering performance. This method attempts to create the best strategy available with the number of buffers supplied. It will always create a BufferStrategy with that number of buffers. A page-flipping strategy is attempted first, then a blitting strategy using accelerated buffers. Finally, an unaccelerated blitting strategy is used. Each time this method is called, the existing buffer strategy for this component is discarded.",";java.awt.Canvas.createBufferStrategy(int);java.awt.Canvas.createBufferStrategy(int,BufferCapabilities);java.awt.Window.createBufferStrategy(int);java.awt.Window.createBufferStrategy(int,BufferCapabilities)",;0.66;0.65;0.66;0.65
createChangeListener,4,0.579908791,Subclasses that want to handle ChangeEvents from the model differently can override this to return an instance of a custom ChangeListener implementation. The default ChangeListener simply calls the fireStateChanged method to forward ChangeEvents to the ChangeListeners that have been added directly to the slider.,;javax.swing.AbstractButton.createChangeListener();javax.swing.JProgressBar.createChangeListener();javax.swing.JSlider.createChangeListener();javax.swing.JTabbedPane.createChangeListener(),;0.45;0.56;0.58;0.48
createCompatibleVolatileImage,4,0.600341293,"Returns a VolatileImage with a data layout and color model compatible with this GraphicsConfiguration, using the specified image capabilities. If the caps parameter is null, it is effectively ignored and this method will create a VolatileImage without regard to ImageCapabilities constraints. The returned VolatileImage has a layout and color model that is closest to this native device configuration and can therefore be optimally blitted to this device.",";java.awt.GraphicsConfiguration.createCompatibleVolatileImage(int,int);java.awt.GraphicsConfiguration.createCompatibleVolatileImage(int,int,int);java.awt.GraphicsConfiguration.createCompatibleVolatileImage(int,int,ImageCapabilities);java.awt.GraphicsConfiguration.createCompatibleVolatileImage(int,int,ImageCapabilities,int)",;0.59;0.59;0.60;0.60
createComponent,4,0.25,"Create the component. The classid is used as a specification of the classname, which we try to load.",;java.awt.Toolkit.createComponent(Component);javax.swing.text.ComponentView.createComponent();javax.swing.text.html.FormView.createComponent();javax.swing.text.html.ObjectView.createComponent(),;0.25;0.25;0.25;0.25
createDefaultDocument,4,0.931137023,Creates an uninitialized text storage model that is appropriate for this type of editor.,;javax.swing.text.DefaultEditorKit.createDefaultDocument();javax.swing.text.EditorKit.createDefaultDocument();javax.swing.text.StyledEditorKit.createDefaultDocument();javax.swing.text.html.HTMLEditorKit.createDefaultDocument(),;0.83;0.93;0.93;0.89
createEtchedBorder,4,0.764601595,Creates a border with an "etched" look using the component's current background color for highlighting and shading.,";javax.swing.BorderFactory.createEtchedBorder();javax.swing.BorderFactory.createEtchedBorder(Color,Color);javax.swing.BorderFactory.createEtchedBorder(int);javax.swing.BorderFactory.createEtchedBorder(int,Color,Color)",;0.76;0.76;0.76;0.76
createFocusListener,4,0.25,Creates a listener that is responsible for updating the display when focus is lost/gained.,;javax.swing.plaf.basic.BasicComboBoxUI.createFocusListener();javax.swing.plaf.basic.BasicSplitPaneUI.createFocusListener();javax.swing.plaf.basic.BasicTableUI.createFocusListener();javax.swing.plaf.basic.BasicTreeUI.createFocusListener(),;0.25;0.25;0.25;0.25
createGlyphVector,4,0.984702476,"Creates a GlyphVector by mapping characters to glyphs one-to-one based on the Unicode cmap in this Font. This method does no other processing besides the mapping of glyphs to characters. This means that this method is not useful for some scripts, such as Arabic, Hebrew, Thai, and Indic, that require reordering, shaping, or ligature substitution.",";java.awt.Font.createGlyphVector(FontRenderContext,String);java.awt.Font.createGlyphVector(FontRenderContext,char[]);java.awt.Font.createGlyphVector(FontRenderContext,CharacterIterator);java.awt.Font.createGlyphVector(FontRenderContext,int[])",;0.98;0.98;0.95;0.98
createGraphics,4,0.475900501,"Creates a Graphics2D, which can be used to draw into this VolatileImage.",;java.awt.GraphicsEnvironment.createGraphics(BufferedImage);java.awt.SplashScreen.createGraphics();java.awt.image.BufferedImage.createGraphics();java.awt.image.VolatileImage.createGraphics(),;0.25;0.26;0.48;0.48
createIntersection,4,1,Returns a new Rectangle2D object representing the intersection of this Rectangle2D with the specified Rectangle2D.,;java.awt.Rectangle.createIntersection(Rectangle2D);java.awt.geom.Rectangle2D.createIntersection(Rectangle2D);java.awt.geom.Rectangle2D.Double.createIntersection(Rectangle2D);java.awt.geom.Rectangle2D.Float.createIntersection(Rectangle2D),;1.00;1.00;1.00;1.00
createKeyListener,4,0.476085704,Creates the key listener that will be added to the combo box. If this method returns null then it will not be added to the combo box.,;javax.swing.plaf.basic.BasicComboBoxUI.createKeyListener();javax.swing.plaf.basic.BasicComboPopup.createKeyListener();javax.swing.plaf.basic.BasicTableUI.createKeyListener();javax.swing.plaf.basic.BasicTreeUI.createKeyListener(),;0.45;0.48;0.26;0.25
createPackedRaster,4,0.602556452,"Creates a Raster based on a SinglePixelPackedSampleModel with the specified data type, width, height, and band masks. The number of bands is inferred from bandMasks.length. The upper left corner of the Raster is given by the location argument. If location is null, (0, 0) will be used. The dataType parameter should be one of the enumerated values defined in the DataBuffer class. The only dataTypes supported currently are TYPE_BYTE, TYPE_USHORT, and TYPE_INT.",";java.awt.image.Raster.createPackedRaster(int,int,int,int[],Point);java.awt.image.Raster.createPackedRaster(int,int,int,int,int,Point);java.awt.image.Raster.createPackedRaster(DataBuffer,int,int,int,int[],Point);java.awt.image.Raster.createPackedRaster(DataBuffer,int,int,int,Point)",;0.60;0.50;0.58;0.50
createStartDocument,4,1,Creates a new instance of a StartDocument event,";javax.xml.stream.XMLEventFactory.createStartDocument();javax.xml.stream.XMLEventFactory.createStartDocument(String,String,boolean);javax.xml.stream.XMLEventFactory.createStartDocument(String,String);javax.xml.stream.XMLEventFactory.createStartDocument(String)",;1.00;1.00;1.00;1.00
createStartElement,4,0.768022794,Create a new StartElement. Namespaces can be added to this StartElement by passing in an Iterator that walks over a set of Namespace interfaces. Attributes can be added to this StartElement by passing an iterator that walks over a set of Attribute interfaces.,";javax.xml.stream.XMLEventFactory.createStartElement(QName,Iterator,Iterator);javax.xml.stream.XMLEventFactory.createStartElement(String,String,String);javax.xml.stream.XMLEventFactory.createStartElement(String,String,String,Iterator,Iterator);javax.xml.stream.XMLEventFactory.createStartElement(String,String,String,Iterator,Iterator,NamespaceContext)",;0.77;0.30;0.77;0.77
createSubcontext,4,0.834370152,Description copied from interface:DirContext,";javax.naming.InitialContext.createSubcontext(String);javax.naming.InitialContext.createSubcontext(Name);javax.naming.directory.InitialDirContext.createSubcontext(String,Attributes);javax.naming.directory.InitialDirContext.createSubcontext(Name,Attributes)",;0.83;0.83;0.83;0.83
createUnion,4,1,Returns a new Rectangle2D object representing the union of this Rectangle2D with the specified Rectangle2D.,;java.awt.Rectangle.createUnion(Rectangle2D);java.awt.geom.Rectangle2D.createUnion(Rectangle2D);java.awt.geom.Rectangle2D.Double.createUnion(Rectangle2D);java.awt.geom.Rectangle2D.Float.createUnion(Rectangle2D),;1.00;1.00;1.00;1.00
createXMLEventWriter,4,0.839671078,Create a new XMLEventWriter that writes to a stream,";javax.xml.stream.XMLOutputFactory.createXMLEventWriter(Result);javax.xml.stream.XMLOutputFactory.createXMLEventWriter(OutputStream);javax.xml.stream.XMLOutputFactory.createXMLEventWriter(OutputStream,String);javax.xml.stream.XMLOutputFactory.createXMLEventWriter(Writer)",;0.64;0.84;0.84;0.81
createXMLStreamWriter,4,0.839671078,Create a new XMLStreamWriter that writes to a stream,";javax.xml.stream.XMLOutputFactory.createXMLStreamWriter(Writer);javax.xml.stream.XMLOutputFactory.createXMLStreamWriter(OutputStream);javax.xml.stream.XMLOutputFactory.createXMLStreamWriter(OutputStream,String);javax.xml.stream.XMLOutputFactory.createXMLStreamWriter(Result)",;0.81;0.84;0.84;0.64
curveTo,4,0.918488316,"Adds a curved segment, defined by three new points, to the path by drawing a B鑼厇ier curve that intersects both the current coordinates and the specified coordinates (x3,y3), using the specified points (x1,y1) and (x2,y2) as B鑼厇ier control points. All coordinates are specified in double precision.",";java.awt.geom.Path2D.curveTo(double,double,double,double,double,double);java.awt.geom.Path2D.Double.curveTo(double,double,double,double,double,double);java.awt.geom.Path2D.Float.curveTo(double,double,double,double,double,double);java.awt.geom.Path2D.Float.curveTo(float,float,float,float,float,float)",;0.92;0.92;0.92;0.78
disable,4,0.662007785,"Deprecated.As of JDK version 1.1, replaced by setEnabled(boolean).",;java.awt.Component.disable();java.awt.MenuItem.disable();java.lang.Compiler.disable();javax.swing.JComponent.disable(),;0.66;0.66;0.25;0.57
dispatch,4,0.426776695,Invokes the notificationReceived() method on a listener using this event.,;java.awt.event.InvocationEvent.dispatch();javax.naming.event.NamingEvent.dispatch(NamingListener);javax.naming.event.NamingExceptionEvent.dispatch(NamingListener);javax.naming.ldap.UnsolicitedNotificationEvent.dispatch(UnsolicitedNotificationListener),;0.25;0.25;0.43;0.43
doClick,4,0.421382578,Programmatically perform a "click". This does the same thing as if the user had pressed and released the button. The button stays visually "pressed" for pressTime milliseconds.,;javax.swing.AbstractButton.doClick();javax.swing.AbstractButton.doClick(int);javax.swing.JMenu.doClick(int);javax.swing.plaf.basic.BasicMenuItemUI.doClick(MenuSelectionManager),;0.41;0.42;0.25;0.25
doPrivilegedWithCombiner,4,0.695029411,"Performs the specified PrivilegedExceptionAction with privileges enabled and restricted by the specified AccessControlContext and with a privilege scope limited by specified Permission arguments. The action is performed with the intersection of the permissions possessed by the caller's protection domain, and those possessed by the domains represented by the specified AccessControlContext. If the action's run method throws an (unchecked) exception, it will propagate through this method. This method preserves the current AccessControlContext's DomainCombiner (which may be null) while the action is performed. If a security manager is installed and the specified AccessControlContext was not created by system code and the caller's ProtectionDomain has not been granted the ""createAccessControlContext"" SecurityPermission, then the action is performed with no permissions.",";java.security.AccessController.doPrivilegedWithCombiner(PrivilegedAction&lt;T&gt;);java.security.AccessController.doPrivilegedWithCombiner(PrivilegedAction&lt;T&gt;,AccessControlContext,Permission...);java.security.AccessController.doPrivilegedWithCombiner(PrivilegedExceptionAction&lt;T&gt;);java.security.AccessController.doPrivilegedWithCombiner(PrivilegedExceptionAction&lt;T&gt;,AccessControlContext,Permission...)",;0.63;0.70;0.63;0.70
dropActionChanged,4,0.290723869,"Calls dropActionChanged on the DragSourceListeners registered with this DragSourceContext and with the associated DragSource, and passes them the specified DragSourceDragEvent.",;java.awt.dnd.DragSourceAdapter.dropActionChanged(DragSourceDragEvent);java.awt.dnd.DragSourceContext.dropActionChanged(DragSourceDragEvent);java.awt.dnd.DropTarget.dropActionChanged(DropTargetDragEvent);java.awt.dnd.DropTargetAdapter.dropActionChanged(DropTargetDragEvent),;0.27;0.29;0.29;0.25
dynamicInvoker,4,0.75,"Produces a method handle equivalent to an invokedynamic instruction which has been linked to this call site. This method is equivalent to the following code: MethodHandle getTarget, invoker, result; getTarget = MethodHandles.publicLookup().bind(this, ""getTarget"", MethodType.methodType(MethodHandle.class)); invoker = MethodHandles.exactInvoker(this.type()); result = MethodHandles.foldArguments(invoker, getTarget)",;java.lang.invoke.CallSite.dynamicInvoker();java.lang.invoke.ConstantCallSite.dynamicInvoker();java.lang.invoke.MutableCallSite.dynamicInvoker();java.lang.invoke.VolatileCallSite.dynamicInvoker(),;0.75;0.25;0.75;0.75
engineDoFinal,4,0.629802964,"Encrypts or decrypts data in a single-part operation, or finishes a multiple-part operation. The data is encrypted or decrypted, depending on how this cipher was initialized. The first inputLen bytes in the input buffer, starting at inputOffset inclusive, and any input bytes that may have been buffered during a previous update operation, are processed, with padding (if requested) being applied. If an AEAD mode such as GCM/CCM is being used, the authentication tag is appended in the case of encryption, or verified in the case of decryption. The result is stored in the output buffer, starting at outputOffset inclusive. If the output buffer is too small to hold the result, a ShortBufferException is thrown. Upon finishing, this method resets this cipher object to the state it was in when previously initialized via a call to engineInit. That is, the object is reset and available to encrypt or decrypt (depending on the operation mode that was specified in the call to engineInit) more data. Note: if any exception is thrown, this cipher object may need to be reset before it can be used again.",";javax.crypto.CipherSpi.engineDoFinal(byte[],int,int);javax.crypto.CipherSpi.engineDoFinal(byte[],int,int,byte[],int);javax.crypto.CipherSpi.engineDoFinal(ByteBuffer,ByteBuffer);javax.crypto.MacSpi.engineDoFinal()",;0.61;0.63;0.56;0.25
engineGenerateSecret,4,0.568555686,"Creates the shared secret and returns it as a secret key object of the requested algorithm type. This method resets this KeyAgreementSpi object, so that it can be reused for further key agreements. Unless this key agreement is reinitialized with one of the engineInit methods, the same private information and algorithm parameters will be used for subsequent key agreements.",";javax.crypto.KeyAgreementSpi.engineGenerateSecret();javax.crypto.KeyAgreementSpi.engineGenerateSecret(byte[],int);javax.crypto.KeyAgreementSpi.engineGenerateSecret(String);javax.crypto.SecretKeyFactorySpi.engineGenerateSecret(KeySpec)",;0.57;0.52;0.57;0.25
estimateSize,4,1,"Returns an estimate of the number of elements that would be encountered by a Spliterator.forEachRemaining(java.util.function.Consumer&lt;? super T&gt;) traversal, or returns Long.MAX_VALUE if infinite, unknown, or too expensive to compute. If this Spliterator is Spliterator.SIZED and has not yet been partially traversed or split, or this Spliterator is Spliterator.SUBSIZED and has not yet been partially traversed, this estimate must be an accurate count of elements that would be encountered by a complete traversal. Otherwise, this estimate may be arbitrarily inaccurate, but must decrease as specified across invocations of Spliterator.trySplit().",;java.util.Spliterators.AbstractDoubleSpliterator.estimateSize();java.util.Spliterators.AbstractIntSpliterator.estimateSize();java.util.Spliterators.AbstractLongSpliterator.estimateSize();java.util.Spliterators.AbstractSpliterator.estimateSize(),;1.00;1.00;1.00;1.00
finishedPaintingChildren,4,0.5,Called when the specified split pane has finished painting its children.,";javax.swing.plaf.SplitPaneUI.finishedPaintingChildren(JSplitPane,Graphics);javax.swing.plaf.basic.BasicSplitPaneUI.finishedPaintingChildren(JSplitPane,Graphics);javax.swing.plaf.multi.MultiSplitPaneUI.finishedPaintingChildren(JSplitPane,Graphics);javax.swing.plaf.synth.SynthSplitPaneUI.finishedPaintingChildren(JSplitPane,Graphics)",;0.25;0.50;0.25;0.50
fireValueChanged,4,0.311781106,Notifies all listeners that are registered for tree selection events on this object.,";javax.swing.DefaultListSelectionModel.fireValueChanged(boolean);javax.swing.DefaultListSelectionModel.fireValueChanged(int,int);javax.swing.JTree.fireValueChanged(TreeSelectionEvent);javax.swing.tree.DefaultTreeSelectionModel.fireValueChanged(TreeSelectionEvent)",;0.25;0.25;0.31;0.31
flushBefore,4,1,Description copied from interface:ImageInputStream,;javax.imageio.stream.FileCacheImageOutputStream.flushBefore(long);javax.imageio.stream.ImageInputStreamImpl.flushBefore(long);javax.imageio.stream.MemoryCacheImageInputStream.flushBefore(long);javax.imageio.stream.MemoryCacheImageOutputStream.flushBefore(long),;1.00;1.00;1.00;1.00
formatToCharacterIterator,4,0.58006023,"Formats an Object producing an AttributedCharacterIterator. You can use the returned AttributedCharacterIterator to build the resulting String, as well as to determine information about the resulting String. Each attribute key of the AttributedCharacterIterator will be of type DateFormat.Field, with the corresponding attribute value being the same as the attribute key.",;java.text.DecimalFormat.formatToCharacterIterator(Object);java.text.Format.formatToCharacterIterator(Object);java.text.MessageFormat.formatToCharacterIterator(Object);java.text.SimpleDateFormat.formatToCharacterIterator(Object),;0.58;0.51;0.39;0.58
from_int,4,0.437655963,Converts the given int to the corresponding TCKind instance.,;org.omg.CORBA.CompletionStatus.from_int(int);org.omg.CORBA.DefinitionKind.from_int(int);org.omg.CORBA.SetOverrideType.from_int(int);org.omg.CORBA.TCKind.from_int(int),;0.25;0.25;0.44;0.44
generateSecret,4,0.573948806,"Generates the shared secret and returns it in a new buffer. This method resets this KeyAgreement object, so that it can be reused for further key agreements. Unless this key agreement is reinitialized with one of the init methods, the same private information and algorithm parameters will be used for subsequent key agreements.",";javax.crypto.KeyAgreement.generateSecret();javax.crypto.KeyAgreement.generateSecret(byte[],int);javax.crypto.KeyAgreement.generateSecret(String);javax.crypto.SecretKeyFactory.generateSecret(KeySpec)",;0.57;0.52;0.57;0.25
getAction,4,0.75,"Returns the currently set Action for this ActionEvent source, or null if no Action is set.",;java.beans.EventHandler.getAction();javax.swing.AbstractButton.getAction();javax.swing.JComboBox.getAction();javax.swing.JTextField.getAction(),;0.25;0.75;0.75;0.75
getAllCommands,4,0.377397115,"Get all the available commands for this type. This method should return all the possible commands for this MIME type. The DataSource provides extra information, such as the file name, that a CommandMap implementation may use to further refine the list of commands that are returned. The implementation in this class simply calls the getAllCommands method that ignores this argument.",";javax.activation.CommandMap.getAllCommands(String);javax.activation.CommandMap.getAllCommands(String,DataSource);javax.activation.DataHandler.getAllCommands();javax.activation.MailcapCommandMap.getAllCommands(String)",;0.37;0.38;0.29;0.34
getAlphaRaster,4,0.560518372,"Returns a WritableRaster representing the alpha channel of an image, extracted from the input WritableRaster. This method assumes that WritableRaster objects associated with this ColorModel store the alpha band, if present, as the last band of image data. Returns null if there is no separate spatial alpha channel associated with this ColorModel. This method creates a new WritableRaster, but shares the data array.",;java.awt.image.BufferedImage.getAlphaRaster();java.awt.image.ColorModel.getAlphaRaster(WritableRaster);java.awt.image.ComponentColorModel.getAlphaRaster(WritableRaster);java.awt.image.PackedColorModel.getAlphaRaster(WritableRaster),;0.46;0.49;0.56;0.56
getAnnotations,4,0.75,Description copied from interface:AnnotatedElement,;java.lang.Class.getAnnotations();java.lang.Package.getAnnotations();java.lang.reflect.AccessibleObject.getAnnotations();java.lang.reflect.Parameter.getAnnotations(),;0.75;0.75;0.75;0.25
getAttributeNames,4,0.25,Gives all the attribute names that are associated with this HttpExchange.,;javax.imageio.metadata.IIOMetadataFormatImpl.getAttributeNames(String);javax.swing.text.SimpleAttributeSet.getAttributeNames();javax.xml.ws.spi.http.HttpContext.getAttributeNames();javax.xml.ws.spi.http.HttpExchange.getAttributeNames(),;0.25;0.25;0.25;0.25
getAudioFileTypes,4,0.542924766,Obtains the file types for which file writing support is provided by this audio file writer.,;javax.sound.sampled.AudioSystem.getAudioFileTypes();javax.sound.sampled.AudioSystem.getAudioFileTypes(AudioInputStream);javax.sound.sampled.spi.AudioFileWriter.getAudioFileTypes();javax.sound.sampled.spi.AudioFileWriter.getAudioFileTypes(AudioInputStream),;0.52;0.50;0.54;0.52
getBeanInfo,4,0.657911703,"Introspect on a Java bean and learn about all its properties, exposed methods, and events, subject to some control flags. If the BeanInfo class for a Java Bean has been previously Introspected based on the same arguments then the BeanInfo class is retrieved from the BeanInfo cache.",";java.beans.Introspector.getBeanInfo(Class&lt;?&gt;);java.beans.Introspector.getBeanInfo(Class&lt;?&gt;,int);java.beans.Introspector.getBeanInfo(Class&lt;?&gt;,Class&lt;?&gt;);java.beans.Introspector.getBeanInfo(Class&lt;?&gt;,Class&lt;?&gt;,int)",;0.58;0.66;0.62;0.49
getBlockIncrement,4,0.25,For backwards compatibility with java.awt.Scrollbar.,;java.awt.Scrollbar.getBlockIncrement();java.awt.ScrollPaneAdjustable.getBlockIncrement();javax.swing.JScrollBar.getBlockIncrement(int);javax.swing.JScrollBar.getBlockIncrement(),;0.25;0.25;0.25;0.25
getBreakWeight,4,0.607854836,"Determines how attractive a break opportunity in this view is. This can be used for determining which view is the most attractive to call breakView on in the process of formatting. A view that represents text that has whitespace in it might be more attractive than a view that has no whitespace, for example. The higher the weight, the more attractive the break. A value equal to or lower than BadBreakWeight should not be considered for a break. A value greater than or equal to ForcedBreakWeight should be broken. This is implemented to provide the default behavior of returning BadBreakWeight unless the length is greater than the length of the view in which case the entire view represents the fragment. Unless a view has been written to support breaking behavior, it is not attractive to try and break the view. An example of a view that does support breaking is LabelView. An example of a view that uses break weight is ParagraphView.",";javax.swing.text.GlyphView.getBreakWeight(int,float,float);javax.swing.text.ParagraphView.getBreakWeight(int,float);javax.swing.text.View.getBreakWeight(int,float,float);javax.swing.text.html.InlineView.getBreakWeight(int,float,float)",;0.46;0.25;0.61;0.61
getBundle,4,0.797482686,"Gets a resource bundle using the specified base name, the default locale, and the caller's class loader. Calling this method is equivalent to calling getBundle(baseName, Locale.getDefault(), this.getClass().getClassLoader()), except that getClassLoader() is run with the security privileges of ResourceBundle. See getBundle for a complete description of the search and instantiation strategy.",";java.util.ResourceBundle.getBundle(String);java.util.ResourceBundle.getBundle(String,ResourceBundle.Control);java.util.ResourceBundle.getBundle(String,Locale);java.util.ResourceBundle.getBundle(String,Locale,ResourceBundle.Control)",;0.80;0.76;0.76;0.76
getByAddress,4,0.354427231,"Create an Inet6Address in the exact manner of InetAddress.getByAddress(String,byte[]) except that the IPv6 scope_id is set to the value corresponding to the given interface for the address type specified in addr. The call will fail with an UnknownHostException if the given interface does not have a numeric scope_id assigned for the given address type (eg. link-local or site-local). See here for a description of IPv6 scoped addresses.",";java.net.Inet6Address.getByAddress(String,byte[],NetworkInterface);java.net.Inet6Address.getByAddress(String,byte[],int);java.net.InetAddress.getByAddress(String,byte[]);java.net.InetAddress.getByAddress(byte[])",;0.35;0.35;0.31;0.30
getCellBounds,4,0.666006913,"Returns the bounding rectangle, in the given list's coordinate system, for the range of cells specified by the two indices. The indices can be supplied in any order. If the smaller index is outside the list's range of cells, this method returns null. If the smaller index is valid, but the larger index is outside the list's range, the bounds of just the first index is returned. Otherwise, the bounds of the valid range is returned.",";javax.swing.JList.getCellBounds(int,int);javax.swing.plaf.ListUI.getCellBounds(JList,int,int);javax.swing.plaf.basic.BasicListUI.getCellBounds(JList,int,int);javax.swing.plaf.multi.MultiListUI.getCellBounds(JList,int,int)",;0.60;0.67;0.67;0.25
getCellEditor,4,0.265508645,"Returns an appropriate editor for the cell specified by row and column. If the TableColumn for this column has a non-null editor, returns that. If not, finds the class of the data in this column (using getColumnClass) and returns the default editor for this type of data. Note: Throughout the table package, the internal implementations always use this method to provide editors so that this default behavior can be safely overridden by a subclass.",";javax.swing.JTable.getCellEditor();javax.swing.JTable.getCellEditor(int,int);javax.swing.JTree.getCellEditor();javax.swing.table.TableColumn.getCellEditor()",;0.25;0.27;0.25;0.26
getCertificate,4,0.257902402,"Returns the certificate associated with the given alias. If the given alias name identifies an entry created by a call to setCertificateEntry, or created by a call to setEntry with a TrustedCertificateEntry, then the trusted certificate contained in that entry is returned. If the given alias name identifies an entry created by a call to setKeyEntry, or created by a call to setEntry with a PrivateKeyEntry, then the first element of the certificate chain in that entry is returned.",;java.security.KeyStore.getCertificate(String);java.security.KeyStore.PrivateKeyEntry.getCertificate();java.security.cert.X509CertSelector.getCertificate();javax.security.auth.x500.X500PrivateCredential.getCertificate(),;0.26;0.25;0.25;0.25
getChar,4,0.375981156,"Relative get method for reading a char value. Reads the next two bytes at this buffer's current position, composing them into a char value according to the current byte order, and then increments the position by two.",";java.lang.reflect.Array.getChar(Object,int);java.lang.reflect.Field.getChar(Object);java.nio.ByteBuffer.getChar();java.nio.ByteBuffer.getChar(int)",;0.25;0.25;0.38;0.37
getChild,4,0.25,Returns the child of parent at index index in the parent's child array. parent must be a node previously obtained from this data source. This should not return null if index is a valid index for parent (that is index &gt;= 0 &amp;&amp; index &lt; getChildCount(parent)).,";java.awt.event.ContainerEvent.getChild();java.util.prefs.AbstractPreferences.getChild(String);java.util.prefs.NodeChangeEvent.getChild();javax.swing.tree.DefaultTreeModel.getChild(Object,int)",;0.25;0.25;0.25;0.25
getChildAllocation,4,0.698901622,"Fetches the allocation for the given child view. This enables finding out where various views are located, without assuming the views store their location. This returns null since the default is to not have any child views.",";javax.swing.text.AsyncBoxView.getChildAllocation(int,Shape);javax.swing.text.BoxView.getChildAllocation(int,Shape);javax.swing.text.CompositeView.getChildAllocation(int,Shape);javax.swing.text.View.getChildAllocation(int,Shape)",;0.70;0.59;0.50;0.69
getClip,4,0.347575475,"Obtains a clip that can be used for playing back an audio file or an audio stream. The returned clip will be provided by the default system mixer, or, if not possible, by any other mixer installed in the system that supports a Clip object. The returned clip must be opened with the open(AudioFormat) or open(AudioInputStream) method. This is a high-level method that uses getMixer and getLine internally. If the system property javax.sound.sampled.Clip is defined or it is defined in the file ""sound.properties"", it is used to retrieve the default clip. For details, refer to the class description.",;java.awt.Graphics.getClip();javax.sound.sampled.AudioSystem.getClip();javax.sound.sampled.AudioSystem.getClip(Mixer.Info);javax.swing.DebugGraphics.getClip(),;0.25;0.35;0.31;0.00
getClosestPathForLocation,4,0.606916916,"Returns the path to the node that is closest to x,y. If there is nothing currently visible this will return null, otherwise it'll always return a valid path. If you need to test if the returned object is exactly at x, y you should get the bounds for the returned path and test x, y against that.",";javax.swing.JTree.getClosestPathForLocation(int,int);javax.swing.plaf.TreeUI.getClosestPathForLocation(JTree,int,int);javax.swing.plaf.basic.BasicTreeUI.getClosestPathForLocation(JTree,int,int);javax.swing.plaf.multi.MultiTreeUI.getClosestPathForLocation(JTree,int,int)",;0.46;0.61;0.61;0.25
getColumnName,4,0.296995794,Returns the name of the column appearing in the view at column position column.,;javax.sql.rowset.RowSetMetaDataImpl.getColumnName(int);javax.swing.JTable.getColumnName(int);javax.swing.table.AbstractTableModel.getColumnName(int);javax.swing.table.DefaultTableModel.getColumnName(int),;0.29;0.30;0.25;0.25
getComponentAfter,4,0.777277793,"Returns the Component that should receive the focus after aComponent. aContainer must be a focus cycle root of aComponent or a focus traversal policy provider. By default, SortingFocusTraversalPolicy implicitly transfers focus down- cycle. That is, during normal focus traversal, the Component traversed after a focus cycle root will be the focus-cycle-root's default Component to focus. This behavior can be disabled using the setImplicitDownCycleTraversal method. If aContainer is focus traversal policy provider, the focus is always transferred down-cycle.",";java.awt.ContainerOrderFocusTraversalPolicy.getComponentAfter(Container,Component);java.awt.FocusTraversalPolicy.getComponentAfter(Container,Component);javax.swing.LayoutFocusTraversalPolicy.getComponentAfter(Container,Component);javax.swing.SortingFocusTraversalPolicy.getComponentAfter(Container,Component)",;0.77;0.33;0.75;0.78
getComponentBefore,4,0.61680095,"Returns the Component that should receive the focus before aComponent. aContainer must be a focus cycle root of aComponent or a focus traversal policy provider. By default, SortingFocusTraversalPolicy implicitly transfers focus down- cycle. That is, during normal focus traversal, the Component traversed after a focus cycle root will be the focus-cycle-root's default Component to focus. This behavior can be disabled using the setImplicitDownCycleTraversal method. If aContainer is focus traversal policy provider, the focus is always transferred down-cycle.",";java.awt.ContainerOrderFocusTraversalPolicy.getComponentBefore(Container,Component);java.awt.FocusTraversalPolicy.getComponentBefore(Container,Component);javax.swing.LayoutFocusTraversalPolicy.getComponentBefore(Container,Component);javax.swing.SortingFocusTraversalPolicy.getComponentBefore(Container,Component)",;0.56;0.56;0.61;0.62
getConnectionId,4,0.667185076,Description copied from interface:RMIConnection,;javax.management.remote.JMXConnectionNotification.getConnectionId();javax.management.remote.rmi.RMIConnectionImpl.getConnectionId();javax.management.remote.rmi.RMIConnectionImpl_Stub.getConnectionId();javax.management.remote.rmi.RMIConnector.getConnectionId(),;0.25;0.67;0.67;0.58
getContextualShaper,4,0.681708176,"Returns a contextual shaper for the provided Unicode range(s). The Latin-1 (EUROPEAN) digits are converted to the decimal digits corresponding to the range of the preceding text, if the range is one of the provided ranges. The shaper assumes EUROPEAN as the starting context, that is, if EUROPEAN digits are encountered before any strong directional text in the string, the context is presumed to be EUROPEAN, and so the digits will not shape.",";java.awt.font.NumericShaper.getContextualShaper(int);java.awt.font.NumericShaper.getContextualShaper(Set&lt;NumericShaper.Range&gt;);java.awt.font.NumericShaper.getContextualShaper(int,int);java.awt.font.NumericShaper.getContextualShaper(Set&lt;NumericShaper.Range&gt;,NumericShaper.Range)",;0.67;0.68;0.65;0.60
getDateInstance,4,0.603228568,"Gets the date formatter with the given formatting style for the default FORMAT locale. This is equivalent to calling getDateInstance(style, Locale.getDefault(Locale.Category.FORMAT)).",";java.text.DateFormat.getDateInstance();java.text.DateFormat.getDateInstance(int);java.text.DateFormat.getDateInstance(int,Locale);java.text.spi.DateFormatProvider.getDateInstance(int,Locale)",;0.54;0.60;0.47;0.42
getDateTimeInstance,4,0.492612842,"Gets the date/time formatter with the default formatting style for the default FORMAT locale. This is equivalent to calling getDateTimeInstance(DEFAULT, DEFAULT, Locale.getDefault(Locale.Category.FORMAT)).",";java.text.DateFormat.getDateTimeInstance();java.text.DateFormat.getDateTimeInstance(int,int);java.text.DateFormat.getDateTimeInstance(int,int,Locale);java.text.spi.DateFormatProvider.getDateTimeInstance(int,int,Locale)",;0.49;0.48;0.39;0.32
getDayOfYear,4,1,Gets the day-of-year field. This method returns the primitive int value for the day-of-year.,;java.time.LocalDate.getDayOfYear();java.time.LocalDateTime.getDayOfYear();java.time.OffsetDateTime.getDayOfYear();java.time.ZonedDateTime.getDayOfYear(),;1.00;1.00;1.00;1.00
getDeclaredAnnotation,4,1,Description copied from interface:AnnotatedElement,;java.lang.Class.getDeclaredAnnotation(Class&lt;A&gt;);java.lang.Package.getDeclaredAnnotation(Class&lt;A&gt;);java.lang.reflect.AccessibleObject.getDeclaredAnnotation(Class&lt;T&gt;);java.lang.reflect.Parameter.getDeclaredAnnotation(Class&lt;T&gt;),;1.00;1.00;1.00;1.00
getDeclaredAnnotationsByType,4,1,Description copied from interface:AnnotatedElement,;java.lang.Class.getDeclaredAnnotationsByType(Class&lt;A&gt;);java.lang.Package.getDeclaredAnnotationsByType(Class&lt;A&gt;);java.lang.reflect.AccessibleObject.getDeclaredAnnotationsByType(Class&lt;T&gt;);java.lang.reflect.Parameter.getDeclaredAnnotationsByType(Class&lt;T&gt;),;1.00;1.00;1.00;1.00
getDefaultType,4,0.834354168,"Returns the default CertPathValidator type as specified by the certpathvalidator.type security property, or the string ""PKIX"" if no such property exists. The default CertPathValidator type can be used by applications that do not want to use a hard-coded type when calling one of the getInstance methods, and want to provide a default type in case a user does not specify its own. The default CertPathValidator type can be changed by setting the value of the certpathvalidator.type security property to the desired type.",;java.security.KeyStore.getDefaultType();java.security.cert.CertPathBuilder.getDefaultType();java.security.cert.CertPathValidator.getDefaultType();java.security.cert.CertStore.getDefaultType(),;0.78;0.83;0.83;0.82
getDefaultValue,4,0.47449925,"Returns the default value for the attribute described by this OpenMBeanAttributeInfoSupport instance, if specified, or null otherwise.",;java.lang.reflect.Method.getDefaultValue();javax.management.openmbean.OpenMBeanAttributeInfoSupport.getDefaultValue();javax.management.openmbean.OpenMBeanParameterInfoSupport.getDefaultValue();javax.swing.text.html.CSS.Attribute.getDefaultValue(),;0.32;0.47;0.46;0.36
getDividerLocation,4,0.30897112,"Returns the location of the divider, which may differ from what the splitpane thinks the location of the divider is.",;javax.swing.JSplitPane.getDividerLocation();javax.swing.plaf.SplitPaneUI.getDividerLocation(JSplitPane);javax.swing.plaf.basic.BasicSplitPaneUI.getDividerLocation(JSplitPane);javax.swing.plaf.multi.MultiSplitPaneUI.getDividerLocation(JSplitPane),;0.25;0.27;0.31;0.25
getDocument,4,0.27563168,Fetches the model associated with the editor. This is primarily for the UI to get at the minimal amount of state required to be a text editor. Subclasses will return the actual type of the model which will typically be something that extends Document.,;javax.swing.text.AbstractWriter.getDocument();javax.swing.text.DocumentFilter.FilterBypass.getDocument();javax.swing.text.JTextComponent.getDocument();javax.swing.text.View.getDocument(),;0.00;0.25;0.28;0.25
getDropMode,4,1,Returns the drop mode for this component.,;javax.swing.JList.getDropMode();javax.swing.JTable.getDropMode();javax.swing.JTree.getDropMode();javax.swing.text.JTextComponent.getDropMode(),;1.00;1.00;1.00;1.00
getEditingPath,4,0.687912529,Returns the path to the element that is being edited.,;javax.swing.JTree.getEditingPath();javax.swing.plaf.TreeUI.getEditingPath(JTree);javax.swing.plaf.basic.BasicTreeUI.getEditingPath(JTree);javax.swing.plaf.multi.MultiTreeUI.getEditingPath(JTree),;0.62;0.69;0.69;0.25
getEnabledCipherSuites,4,0.547505481,"Returns the names of the SSL cipher suites which are currently enabled for use on this engine. When an SSLEngine is first created, all enabled cipher suites support a minimum quality of service. Thus, in some environments this value might be empty. Even if a suite has been enabled, it might never be used. (For example, the peer does not support it, the requisite certificates/private keys for the suite are not available, or an anonymous suite is enabled but authentication is required.)",;javax.net.ssl.SSLEngine.getEnabledCipherSuites();javax.net.ssl.SSLServerSocket.getEnabledCipherSuites();javax.net.ssl.SSLSocket.getEnabledCipherSuites();javax.rmi.ssl.SslRMIServerSocketFactory.getEnabledCipherSuites(),;0.55;0.36;0.55;0.27
getEnabledProtocols,4,0.612286174,Returns the names of the protocol versions which are currently enabled for use on this connection.,;javax.net.ssl.SSLEngine.getEnabledProtocols();javax.net.ssl.SSLServerSocket.getEnabledProtocols();javax.net.ssl.SSLSocket.getEnabledProtocols();javax.rmi.ssl.SslRMIServerSocketFactory.getEnabledProtocols(),;0.61;0.52;0.61;0.38
getEndIndex,4,0.290423036,Returns the end index of the text. This index is the index of the first character following the end of the text.,;java.text.FieldPosition.getEndIndex();java.text.StringCharacterIterator.getEndIndex();javax.accessibility.AccessibleHyperlink.getEndIndex();javax.swing.text.Segment.getEndIndex(),;0.29;0.25;0.25;0.29
getEndOffset,4,0.412333958,Fetches the portion of the model for which this view is responsible.,;javax.swing.text.AbstractWriter.getEndOffset();javax.swing.text.GlyphView.getEndOffset();javax.swing.text.View.getEndOffset();javax.swing.text.html.HTMLDocument.Iterator.getEndOffset(),;0.25;0.41;0.41;0.25
getException,4,0.25,Retrieves the NamingException appropriate for the result code.,;java.awt.event.InvocationEvent.getException();java.util.concurrent.ForkJoinTask.getException();javax.naming.event.NamingExceptionEvent.getException();javax.naming.ldap.SortResponseControl.getException(),;0.25;0.25;0.25;0.25
getField,4,0.25,"Gets the value of a field. Fields of a duration object may contain arbitrary large value. Therefore this method is designed to return a Number object. In case of YEARS, MONTHS, DAYS, HOURS, and MINUTES, the returned number will be a non-negative integer. In case of seconds, the returned number may be a non-negative decimal value.",;java.io.ObjectStreamClass.getField(String);java.security.spec.EllipticCurve.getField();java.text.FieldPosition.getField();javax.xml.datatype.Duration.getField(DatatypeConstants.Field),;0.25;0.25;0.25;0.25
getFirst,4,0.75,Description copied from interface:Deque,;java.util.ArrayDeque.getFirst();java.util.LinkedList.getFirst();java.util.concurrent.ConcurrentLinkedDeque.getFirst();java.util.concurrent.LinkedBlockingDeque.getFirst(),;0.75;0.25;0.75;0.75
getFirstComponent,4,1,Returns the first Component in the traversal cycle. This method is used to determine the next Component to focus when traversal wraps in the forward direction.,;java.awt.ContainerOrderFocusTraversalPolicy.getFirstComponent(Container);java.awt.FocusTraversalPolicy.getFirstComponent(Container);javax.swing.LayoutFocusTraversalPolicy.getFirstComponent(Container);javax.swing.SortingFocusTraversalPolicy.getFirstComponent(Container),;1.00;1.00;1.00;1.00
getFormats,4,0.26401064,"Returns a List of Strings containing formats to be used to load resource bundles for the given baseName. The ResourceBundle.getBundle factory method tries to load resource bundles with formats in the order specified by the list. The list returned by this method must have at least one String. The predefined formats are ""java.class"" for class-based resource bundles and ""java.properties"" for properties-based ones. Strings starting with ""java."" are reserved for future extensions and must not be used by application-defined formats. It is not a requirement to return an immutable (unmodifiable) List. However, the returned List must not be mutated after it has been returned by getFormats. The default implementation returns FORMAT_DEFAULT so that the ResourceBundle.getBundle factory method looks up first class-based resource bundles, then properties-based ones.",;java.text.ChoiceFormat.getFormats();java.text.MessageFormat.getFormats();java.util.ResourceBundle.Control.getFormats(String);javax.sound.sampled.DataLine.Info.getFormats(),;0.25;0.25;0.26;0.26
getFormatter,4,0.25,"Returns either the default formatter, display formatter, editor formatter or null formatter based on the state of the JFormattedTextField.",;java.util.logging.Handler.getFormatter();javax.swing.JFormattedTextField.getFormatter();javax.swing.JFormattedTextField.AbstractFormatterFactory.getFormatter(JFormattedTextField);javax.swing.text.DefaultFormatterFactory.getFormatter(JFormattedTextField),;0.25;0.25;0.25;0.25
getHgap,4,0.737177822,Gets the horizontal gap between components.,;java.awt.BorderLayout.getHgap();java.awt.CardLayout.getHgap();java.awt.FlowLayout.getHgap();java.awt.GridLayout.getHgap(),;0.67;0.74;0.46;0.74
getHostAddress,4,0.471645919,Returns the IP address string in textual presentation.,;java.net.Inet4Address.getHostAddress();java.net.Inet6Address.getHostAddress();java.net.InetAddress.getHostAddress();java.net.URLStreamHandler.getHostAddress(URL),;0.47;0.31;0.47;0.25
getInetAddress,4,0.492364336,"Returns the address to which this socket is connected. Returns null if the socket is not connected. If the socket was connected prior to being closed, then this method will continue to return the connected address after the socket is closed.",;java.net.DatagramSocket.getInetAddress();java.net.ServerSocket.getInetAddress();java.net.Socket.getInetAddress();java.net.SocketImpl.getInetAddress(),;0.49;0.39;0.48;0.25
getIterator,4,0.549947446,"Creates an AttributedCharacterIterator instance that provides access to selected contents of this string. Information about attributes not listed in attributes that the implementor may have need not be made accessible through the iterator. If the list is null, all available attribute information should be made accessible.",";java.text.AttributedString.getIterator();java.text.AttributedString.getIterator(AttributedCharacterIterator.Attribute[]);java.text.AttributedString.getIterator(AttributedCharacterIterator.Attribute[],int,int);javax.swing.text.html.HTMLDocument.getIterator(HTML.Tag)",;0.29;0.55;0.55;0.25
getLast,4,0.75,Description copied from interface:Deque,;java.util.ArrayDeque.getLast();java.util.LinkedList.getLast();java.util.concurrent.ConcurrentLinkedDeque.getLast();java.util.concurrent.LinkedBlockingDeque.getLast(),;0.75;0.25;0.75;0.75
getLastComponent,4,1,Returns the last Component in the traversal cycle. This method is used to determine the next Component to focus when traversal wraps in the reverse direction.,;java.awt.ContainerOrderFocusTraversalPolicy.getLastComponent(Container);java.awt.FocusTraversalPolicy.getLastComponent(Container);javax.swing.LayoutFocusTraversalPolicy.getLastComponent(Container);javax.swing.SortingFocusTraversalPolicy.getLastComponent(Container),;1.00;1.00;1.00;1.00
getLevel,4,0.25,"Returns the number of levels above this node -- the distance from the root to this node. If this node is the root, returns 0.",;java.util.logging.Handler.getLevel();java.util.logging.Logger.getLevel();java.util.logging.LogRecord.getLevel();javax.swing.tree.DefaultMutableTreeNode.getLevel(),;0.25;0.25;0.25;0.25
getLogger,4,0.474794672,"Find or create a logger for a named subsystem. If a logger has already been created with the given name it is returned. Otherwise a new logger is created. If a new logger is created its log level will be configured based on the LogManager configuration and it will configured to also send logging output to its parent's Handlers. It will be registered in the LogManager global namespace. Note: The LogManager may only retain a weak reference to the newly created Logger. It is important to understand that a previously created Logger with the given name may be garbage collected at any time if there is no strong reference to the Logger. In particular, this means that two back-to-back calls like getLogger(""MyLogger"").log(...) may use different Logger objects named ""MyLogger"" if there is no strong reference to the Logger named ""MyLogger"" elsewhere in the program.",";java.util.logging.Logger.getLogger(String);java.util.logging.Logger.getLogger(String,String);java.util.logging.LogManager.getLogger(String);javax.sql.rowset.spi.SyncFactory.getLogger()",;0.47;0.47;0.30;0.25
getMatrix,4,0.266627908,"Retrieves the 6 specifiable values in the 3x3 affine transformation matrix and places them into an array of double precisions values. The values are stored in the array as {m00m10m01m11m02m12}. An array of 4 doubles can also be specified, in which case only the first four elements representing the non-transform parts of the array are retrieved and the values are stored into the array as {m00m10m01m11}",;java.awt.color.ICC_ProfileRGB.getMatrix();java.awt.geom.AffineTransform.getMatrix(double[]);java.awt.image.BandCombineOp.getMatrix();java.awt.print.PageFormat.getMatrix(),;0.25;0.27;0.25;0.26
getMax,4,0.445635573,"Returns the maximum value recorded, or Long.MIN_VALUE if no values have been recorded",;java.lang.management.MemoryUsage.getMax();java.util.DoubleSummaryStatistics.getMax();java.util.IntSummaryStatistics.getMax();java.util.LongSummaryStatistics.getMax(),;0.25;0.25;0.45;0.45
getMaximumDividerLocation,4,0.44179987,Gets the maximum location of the divider.,;javax.swing.JSplitPane.getMaximumDividerLocation();javax.swing.plaf.SplitPaneUI.getMaximumDividerLocation(JSplitPane);javax.swing.plaf.basic.BasicSplitPaneUI.getMaximumDividerLocation(JSplitPane);javax.swing.plaf.multi.MultiSplitPaneUI.getMaximumDividerLocation(JSplitPane),;0.42;0.42;0.44;0.25
getMaxValue,4,0.410568195,"Returns the maximal value for the parameter described by this OpenMBeanParameterInfoSupport instance, if specified, or null otherwise.",;java.awt.color.ColorSpace.getMaxValue(int);java.awt.color.ICC_ColorSpace.getMaxValue(int);javax.management.openmbean.OpenMBeanAttributeInfoSupport.getMaxValue();javax.management.openmbean.OpenMBeanParameterInfoSupport.getMaxValue(),;0.26;0.29;0.41;0.41
getMBeanInfo,4,0.5,Description copied from interface:RMIConnection,";javax.management.StandardMBean.getMBeanInfo();javax.management.modelmbean.RequiredModelMBean.getMBeanInfo();javax.management.remote.rmi.RMIConnectionImpl.getMBeanInfo(ObjectName,Subject);javax.management.remote.rmi.RMIConnectionImpl_Stub.getMBeanInfo(ObjectName,Subject)",;0.25;0.25;0.50;0.50
getMidiFileTypes,4,0.551477848,Obtains the set of MIDI file types for which file writing support is provided by the system.,;javax.sound.midi.MidiSystem.getMidiFileTypes();javax.sound.midi.MidiSystem.getMidiFileTypes(Sequence);javax.sound.midi.spi.MidiFileWriter.getMidiFileTypes();javax.sound.midi.spi.MidiFileWriter.getMidiFileTypes(Sequence),;0.55;0.53;0.54;0.35
getMimeType,4,0.301120018,Returns the MIME type associated with the data object represented by this OctetStreamData.,;java.awt.datatransfer.DataFlavor.getMimeType();javax.activation.ActivationDataFlavor.getMimeType();javax.print.DocFlavor.getMimeType();javax.xml.crypto.OctetStreamData.getMimeType(),;0.30;0.25;0.25;0.30
getMinimumDividerLocation,4,0.44179987,Gets the minimum location of the divider.,;javax.swing.JSplitPane.getMinimumDividerLocation();javax.swing.plaf.SplitPaneUI.getMinimumDividerLocation(JSplitPane);javax.swing.plaf.basic.BasicSplitPaneUI.getMinimumDividerLocation(JSplitPane);javax.swing.plaf.multi.MultiSplitPaneUI.getMinimumDividerLocation(JSplitPane),;0.42;0.42;0.44;0.25
getMinValue,4,0.410568195,"Returns the minimal value for the parameter described by this OpenMBeanParameterInfoSupport instance, if specified, or null otherwise.",;java.awt.color.ColorSpace.getMinValue(int);java.awt.color.ICC_ColorSpace.getMinValue(int);javax.management.openmbean.OpenMBeanAttributeInfoSupport.getMinValue();javax.management.openmbean.OpenMBeanParameterInfoSupport.getMinValue(),;0.27;0.29;0.41;0.41
getMinX,4,0.366614165,Returns the minimum valid X coordinate of the Raster.,;java.awt.geom.RectangularShape.getMinX();java.awt.image.BufferedImage.getMinX();java.awt.image.Raster.getMinX();java.awt.image.renderable.RenderableImageOp.getMinX(),;0.34;0.25;0.37;0.36
getMinY,4,0.366614165,Returns the minimum valid Y coordinate of the Raster.,;java.awt.geom.RectangularShape.getMinY();java.awt.image.BufferedImage.getMinY();java.awt.image.Raster.getMinY();java.awt.image.renderable.RenderableImageOp.getMinY(),;0.34;0.25;0.37;0.36
getNextSibling,4,0.283410319,"Returns the next sibling of this node in the parent's children array. Returns null if this node has no parent or is the parent's last child. This method performs a linear search that is O(n) where n is the number of children; to traverse the entire array, use the parent's child enumeration instead.",;javax.imageio.metadata.IIOMetadataNode.getNextSibling();javax.swing.tree.DefaultMutableTreeNode.getNextSibling();javax.xml.crypto.dsig.dom.DOMSignContext.getNextSibling();javax.xml.transform.dom.DOMResult.getNextSibling(),;0.26;0.28;0.25;0.25
getNextValue,4,0.303407882,"Returns the next Date in the sequence, or null if the next date is after end.",;javax.swing.JSpinner.getNextValue();javax.swing.SpinnerDateModel.getNextValue();javax.swing.SpinnerListModel.getNextValue();javax.swing.SpinnerNumberModel.getNextValue(),;0.25;0.30;0.30;0.25
getNormalizedComponents,4,0.72881282,"Returns an array of all of the color/alpha components in normalized form, given an unnormalized component array. Unnormalized components are unsigned integral values between 0 and 2n - 1, where n is the number of bits for a particular component. Normalized components are float values between a per component minimum and maximum specified by the ColorSpace object for this ColorModel. An IllegalArgumentException will be thrown if color component values for this ColorModel are not conveniently representable in the unnormalized form. If the normComponents array is null, a new array will be allocated. The normComponents array will be returned. Color/alpha components are stored in the normComponents array starting at normOffset (even if the array is allocated by this method). An ArrayIndexOutOfBoundsException is thrown if the normComponents array is not null and is not large enough to hold all the color and alpha components (starting at normOffset). An IllegalArgumentException is thrown if the components array is not large enough to hold all the color and alpha components starting at offset. Since ColorModel is an abstract class, any instance is an instance of a subclass. The default implementation of this method in this abstract class assumes that component values for this class are conveniently representable in the unnormalized form. Therefore, subclasses which may have instances which do not support the unnormalized form must override this method.",";java.awt.image.ColorModel.getNormalizedComponents(int[],int,float[],int);java.awt.image.ColorModel.getNormalizedComponents(Object,float[],int);java.awt.image.ComponentColorModel.getNormalizedComponents(int[],int,float[],int);java.awt.image.ComponentColorModel.getNormalizedComponents(Object,float[],int)",;0.73;0.72;0.68;0.69
getOptions,4,0.25,Returns the choices the user can make.,;java.security.cert.PKIXRevocationChecker.getOptions();javax.security.auth.callback.ConfirmationCallback.getOptions();javax.security.auth.login.AppConfigurationEntry.getOptions();javax.swing.JOptionPane.getOptions(),;0.25;0.25;0.25;0.25
getParagraphElement,4,0.288798675,Get the paragraph element containing the given position. Sub-classes must define for themselves what exactly constitutes a paragraph. They should keep in mind however that a paragraph should at least be the unit of text over which to run the Unicode bidirectional algorithm.,";javax.swing.text.AbstractDocument.getParagraphElement(int);javax.swing.text.DefaultStyledDocument.getParagraphElement(int);javax.swing.text.PlainDocument.getParagraphElement(int);javax.swing.text.Utilities.getParagraphElement(JTextComponent,int)",;0.29;0.25;0.28;0.25
getParameterTypes,4,0.75,"Returns an array of Class objects that represent the formal parameter types, in declaration order, of the executable represented by this object. Returns an array of length 0 if the underlying executable takes no parameters.",;java.lang.reflect.Constructor.getParameterTypes();java.lang.reflect.Executable.getParameterTypes();java.lang.reflect.Method.getParameterTypes();javax.management.loading.MLetContent.getParameterTypes(),;0.75;0.75;0.75;0.25
getPathBounds,4,0.54648354,Returns the Rectangle enclosing the label portion that the last item in path will be drawn into. Will return null if any component in path is currently valid.,";javax.swing.JTree.getPathBounds(TreePath);javax.swing.plaf.TreeUI.getPathBounds(JTree,TreePath);javax.swing.plaf.basic.BasicTreeUI.getPathBounds(JTree,TreePath);javax.swing.plaf.multi.MultiTreeUI.getPathBounds(JTree,TreePath)",;0.35;0.55;0.55;0.25
getPosition,4,0.25,"Returns the position, as a float, of the tab.",;java.awt.font.LineBreakMeasurer.getPosition();javax.swing.JLayeredPane.getPosition(Component);javax.swing.SizeSequence.getPosition(int);javax.swing.text.TabStop.getPosition(),;0.25;0.25;0.25;0.25
getPreferredCommands,4,0.376555682,"Get the preferred command list from a MIME Type. The actual semantics are determined by the implementation of the CommandMap. The DataSource provides extra information, such as the file name, that a CommandMap implementation may use to further refine the list of commands that are returned. The implementation in this class simply calls the getPreferredCommands method that ignores this argument.",";javax.activation.CommandMap.getPreferredCommands(String);javax.activation.CommandMap.getPreferredCommands(String,DataSource);javax.activation.DataHandler.getPreferredCommands();javax.activation.MailcapCommandMap.getPreferredCommands(String)",;0.30;0.38;0.29;0.33
getPreviousValue,4,0.306852394,"Returns the previous Date in the sequence, or null if the previous date is before start.",;javax.swing.JSpinner.getPreviousValue();javax.swing.SpinnerDateModel.getPreviousValue();javax.swing.SpinnerListModel.getPreviousValue();javax.swing.SpinnerNumberModel.getPreviousValue(),;0.25;0.31;0.31;0.25
getPrincipals,4,0.341237368,Return a Set of Principals associated with this Subject that are instances or subclasses of the specified Class. The returned Set is not backed by this Subject's internal Principal Set. A new Set is created and returned for each method invocation. Modifications to the returned Set will not affect the internal Principal Set.,;java.security.ProtectionDomain.getPrincipals();javax.security.auth.PrivateCredentialPermission.getPrincipals();javax.security.auth.Subject.getPrincipals();javax.security.auth.Subject.getPrincipals(Class&lt;T&gt;),;0.25;0.25;0.34;0.34
getPrintJob,4,0.5,"Gets a PrintJob object which is the result of initiating a print operation on the toolkit's platform. Each actual implementation of this method should first check if there is a security manager installed. If there is, the method should call the security manager's checkPrintJobAccess method to ensure initiation of a print operation is allowed. If the default implementation of checkPrintJobAccess is used (that is, that method is not overriden), then this results in a call to the security manager's checkPermission method with a RuntimePermission(""queuePrintJob"") permission.",";java.awt.Toolkit.getPrintJob(Frame,String,Properties);java.awt.Toolkit.getPrintJob(Frame,String,JobAttributes,PageAttributes);javax.print.event.PrintJobAttributeEvent.getPrintJob();javax.print.event.PrintJobEvent.getPrintJob()",;0.50;0.50;0.40;0.40
getPublicExponent,4,0.944700196,Returns the public exponent.,;java.security.spec.RSAKeyGenParameterSpec.getPublicExponent();java.security.spec.RSAMultiPrimePrivateCrtKeySpec.getPublicExponent();java.security.spec.RSAPrivateCrtKeySpec.getPublicExponent();java.security.spec.RSAPublicKeySpec.getPublicExponent(),;0.75;0.94;0.94;0.94
getPublicKey,4,0.5,Gets the public key from this certificate.,;java.security.Identity.getPublicKey();java.security.cert.Certificate.getPublicKey();java.security.cert.PKIXCertPathValidatorResult.getPublicKey();javax.security.cert.Certificate.getPublicKey(),;0.00;0.50;0.25;0.50
getRawResult,4,0.25,Description copied from class:ForkJoinTask,;java.util.concurrent.CountedCompleter.getRawResult();java.util.concurrent.ForkJoinTask.getRawResult();java.util.concurrent.RecursiveAction.getRawResult();java.util.concurrent.RecursiveTask.getRawResult(),;0.25;0.25;0.00;0.25
getReader,4,0.428660008,"Returns the reader for the parser to use to load the document with HTML. This is implemented to return an instance of HTMLDocument.HTMLReader. Subclasses can reimplement this method to change how the document gets structured if desired. (For example, to handle custom tags, or structurally represent character style elements.) This is a convenience method for getReader(int, int, int, HTML.Tag, TRUE).",";javax.script.SimpleScriptContext.getReader();javax.swing.text.html.HTMLDocument.getReader(int);javax.swing.text.html.HTMLDocument.getReader(int,int,int,HTML.Tag);javax.xml.transform.stream.StreamSource.getReader()",;0.25;0.42;0.43;0.25
getRelationTypeName,4,0.401632665,Returns name of associated relation type.,;javax.management.relation.RelationNotification.getRelationTypeName();javax.management.relation.RelationService.getRelationTypeName(String);javax.management.relation.RelationSupport.getRelationTypeName();javax.management.relation.RelationTypeSupport.getRelationTypeName(),;0.35;0.40;0.40;0.34
getRemoteAddress,4,0.575692573,Returns the remote address to which this channel's socket is connected. Where the channel is bound and connected to an Internet Protocol socket address then the return value from this method is of type InetSocketAddress.,;java.nio.channels.AsynchronousSocketChannel.getRemoteAddress();java.nio.channels.DatagramChannel.getRemoteAddress();java.nio.channels.SocketChannel.getRemoteAddress();javax.xml.ws.spi.http.HttpExchange.getRemoteAddress(),;0.58;0.32;0.58;0.25
getResultSet,4,0.520400453,"Retrieves a result set holding the elements of the subarray that starts at Retrieves a ResultSet object that contains a subarray of the elements in this SerialArray object, starting at index index and containing up to count successive elements. This method uses the specified map for type map customizations unless the base type of the array does not match a user-defined type (UDT) in map, in which case it uses the standard mapping. This version of the method getResultSet uses either the given type map or the standard mapping; it never uses the type map associated with the connection.",";javax.sql.rowset.serial.SerialArray.getResultSet(long,int);javax.sql.rowset.serial.SerialArray.getResultSet(Map&lt;String,Class&lt;?&gt;&gt;);javax.sql.rowset.serial.SerialArray.getResultSet();javax.sql.rowset.serial.SerialArray.getResultSet(long,int,Map&lt;String,Class&lt;?&gt;&gt;)",;0.40;0.50;0.37;0.52
getRotateInstance,4,0.488292395,"Returns a transform that rotates coordinates around an anchor point according to a rotation vector. All coordinates rotate about the specified anchor coordinates by the same amount. The amount of rotation is such that coordinates along the former positive X axis will subsequently align with the vector pointing from the origin to the specified vector coordinates. If both vecx and vecy are 0.0, an identity transform is returned. This operation is equivalent to calling: AffineTransform.getRotateInstance(Math.atan2(vecy, vecx), anchorx, anchory);",";java.awt.geom.AffineTransform.getRotateInstance(double);java.awt.geom.AffineTransform.getRotateInstance(double,double,double);java.awt.geom.AffineTransform.getRotateInstance(double,double);java.awt.geom.AffineTransform.getRotateInstance(double,double,double,double)",;0.29;0.38;0.48;0.49
getRows,4,0.564765409,Returns the number of rows in the TextArea.,;java.awt.GridLayout.getRows();java.awt.List.getRows();java.awt.TextArea.getRows();javax.swing.JTextArea.getRows(),;0.51;0.28;0.54;0.56
getRules,4,0.25,"Gets the rules for the zone ID. This returns the latest available rules for the zone ID. This method relies on time-zone data provider files that are configured. These are loaded using a ServiceLoader. The caching flag is designed to allow provider implementations to prevent the rules being cached in ZoneId. Under normal circumstances, the caching of zone rules is highly desirable as it will provide greater performance. However, there is a use case where the caching would not be desirable, see provideRules(java.lang.String, boolean).",";java.text.RuleBasedCollator.getRules();java.time.ZoneId.getRules();java.time.ZoneOffset.getRules();java.time.zone.ZoneRulesProvider.getRules(String,boolean)",;0.25;0.25;0.25;0.25
getSampleDouble,4,0.887217023,"Returns the sample in a specified band for a pixel located at (x,y) as a double. ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds.",";java.awt.image.BandedSampleModel.getSampleDouble(int,int,int,DataBuffer);java.awt.image.ComponentSampleModel.getSampleDouble(int,int,int,DataBuffer);java.awt.image.Raster.getSampleDouble(int,int,int);java.awt.image.SampleModel.getSampleDouble(int,int,int,DataBuffer)",;0.89;0.85;0.79;0.89
getSampleFloat,4,0.887217023,"Returns the sample in a specified band for the pixel located at (x,y) as a float. ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds.",";java.awt.image.BandedSampleModel.getSampleFloat(int,int,int,DataBuffer);java.awt.image.ComponentSampleModel.getSampleFloat(int,int,int,DataBuffer);java.awt.image.Raster.getSampleFloat(int,int,int);java.awt.image.SampleModel.getSampleFloat(int,int,int,DataBuffer)",;0.89;0.85;0.79;0.89
getSampleModel,4,0.470867504,Returns a SampleModel based on the settings encapsulated within this object. The width and height of the SampleModel will be set to arbitrary values.,";java.awt.image.BufferedImage.getSampleModel();java.awt.image.Raster.getSampleModel();javax.imageio.ImageTypeSpecifier.getSampleModel();javax.imageio.ImageTypeSpecifier.getSampleModel(int,int)",;0.25;0.25;0.47;0.47
getScrollableBlockIncrement,4,0.345631697,"Returns a scroll increment, which is required for components that display logical rows or columns in order to completely expose one block of rows or columns, depending on the value of orientation. If the view component of this layer implements Scrollable, this method delegates its implementation to the view component.",";javax.swing.JLayer.getScrollableBlockIncrement(Rectangle,int,int);javax.swing.JTable.getScrollableBlockIncrement(Rectangle,int,int);javax.swing.JTree.getScrollableBlockIncrement(Rectangle,int,int);javax.swing.text.JTextComponent.getScrollableBlockIncrement(Rectangle,int,int)",;0.35;0.25;0.25;0.35
getSeconds,4,0.25,"Obtains the value of the SECONDS field as an integer value, or 0 if not present. This method works just like getYears() except that this method works on the SECONDS field.",;java.sql.Date.getSeconds();java.time.Duration.getSeconds();java.util.Date.getSeconds();javax.xml.datatype.Duration.getSeconds(),;0.00;0.25;0.25;0.25
getSelectedItem,4,0.25,"Returns the current selected item. If the combo box is editable, then this value may not have been added to the combo box with addItem, insertItemAt or the data constructors.",;java.awt.Choice.getSelectedItem();java.awt.List.getSelectedItem();javax.swing.DefaultComboBoxModel.getSelectedItem();javax.swing.JComboBox.getSelectedItem(),;0.25;0.25;0.25;0.25
getSerialNumber,4,0.5,"Gets the serialNumber value from the certificate. The serial number is an integer assigned by the certification authority to each certificate. It must be unique for each certificate issued by a given CA (i.e., the issuer name and serial number identify a unique certificate). The ASN.1 definition for this is: serialNumber CertificateSerialNumber CertificateSerialNumber ::= INTEGER",;java.security.cert.X509Certificate.getSerialNumber();java.security.cert.X509CertSelector.getSerialNumber();java.security.cert.X509CRLEntry.getSerialNumber();javax.security.cert.X509Certificate.getSerialNumber(),;0.50;0.25;0.25;0.50
getSession,4,0.405343129,"Returns the SSL Session in use by this connection. These can be long lived, and frequently correspond to an entire login session for some user. The session specifies a particular cipher suite which is being actively used by all connections in that session, as well as the identities of the session's client and server. This method will initiate the initial handshake if necessary and then block until the handshake has been established. If an error occurs during the initial handshake, this method returns an invalid session object which reports an invalid cipher suite of ""SSL_NULL_WITH_NULL_NULL"".",;javax.net.ssl.HandshakeCompletedEvent.getSession();javax.net.ssl.SSLEngine.getSession();javax.net.ssl.SSLSessionBindingEvent.getSession();javax.net.ssl.SSLSocket.getSession(),;0.25;0.40;0.25;0.41
getShort,4,0.375981156,"Relative get method for reading a short value. Reads the next two bytes at this buffer's current position, composing them into a short value according to the current byte order, and then increments the position by two.",";java.lang.reflect.Array.getShort(Object,int);java.lang.reflect.Field.getShort(Object);java.nio.ByteBuffer.getShort();java.nio.ByteBuffer.getShort(int)",;0.25;0.25;0.38;0.37
getStartOffset,4,0.412333958,Fetches the portion of the model for which this view is responsible.,;javax.swing.text.AbstractWriter.getStartOffset();javax.swing.text.GlyphView.getStartOffset();javax.swing.text.View.getStartOffset();javax.swing.text.html.HTMLDocument.Iterator.getStartOffset(),;0.25;0.41;0.41;0.25
getSubElements,4,0.430052669,Returns an array of MenuElements containing the submenu for this menu component. It will only return items conforming to the JMenuElement interface. If popup menu is null returns an empty array. This method is required to conform to the MenuElement interface.,;javax.swing.JMenu.getSubElements();javax.swing.JMenuBar.getSubElements();javax.swing.JMenuItem.getSubElements();javax.swing.JPopupMenu.getSubElements(),;0.43;0.25;0.27;0.43
getSubject,4,0.279377909,"Get the Subject associated with the provided AccessControlContext. The AccessControlContext may contain many Subjects (from nested doAs calls). In this situation, the most recent Subject associated with the AccessControlContext is returned.",;java.security.cert.X509CertSelector.getSubject();javax.security.auth.Subject.getSubject(AccessControlContext);javax.security.auth.SubjectDomainCombiner.getSubject();javax.security.auth.login.LoginContext.getSubject(),;0.25;0.28;0.26;0.25
getTargetEncodings,4,0.471096648,Obtains the encodings that the system can obtain from an audio input stream with the specified format using the set of installed format converters.,;javax.sound.sampled.AudioSystem.getTargetEncodings(AudioFormat.Encoding);javax.sound.sampled.AudioSystem.getTargetEncodings(AudioFormat);javax.sound.sampled.spi.FormatConversionProvider.getTargetEncodings();javax.sound.sampled.spi.FormatConversionProvider.getTargetEncodings(AudioFormat),;0.47;0.47;0.28;0.30
getTime,4,0.472899828,"Returns the number of milliseconds since January 1, 1970, 00:00:00 GMT represented by this Date object.",;java.sql.Timestamp.getTime();java.util.Calendar.getTime();java.util.Date.getTime();java.util.zip.ZipEntry.getTime(),;0.47;0.25;0.47;0.25
getTimeInstance,4,0.603228568,"Gets the time formatter with the given formatting style for the default FORMAT locale. This is equivalent to calling getTimeInstance(style, Locale.getDefault(Locale.Category.FORMAT)).",";java.text.DateFormat.getTimeInstance();java.text.DateFormat.getTimeInstance(int);java.text.DateFormat.getTimeInstance(int,Locale);java.text.spi.DateFormatProvider.getTimeInstance(int,Locale)",;0.54;0.60;0.47;0.42
getTitle,4,0.487237713,Gets the title of the frame. The title is displayed in the frame's border.,;java.awt.Dialog.getTitle();java.awt.Frame.getTitle();javax.swing.JInternalFrame.getTitle();javax.swing.border.TitledBorder.getTitle(),;0.49;0.49;0.47;0.47
getTransferType,4,0.534495162,"Returns the TransferType used to transfer pixels via the getDataElements and setDataElements methods. When pixels are transferred via these methods, they may be transferred in a packed or unpacked format, depending on the implementation of the SampleModel. Using these methods, pixels are transferred as an array of getNumDataElements() elements of a primitive type given by getTransferType(). The TransferType may or may not be the same as the storage DataType. The TransferType will be one of the types defined in DataBuffer.",;java.awt.image.ColorModel.getTransferType();java.awt.image.MultiPixelPackedSampleModel.getTransferType();java.awt.image.Raster.getTransferType();java.awt.image.SampleModel.getTransferType(),;0.25;0.33;0.52;0.53
getTypeParameters,4,1,"Returns an array of TypeVariable objects that represent the type variables declared by the generic declaration represented by this GenericDeclaration object, in declaration order. Returns an array of length 0 if the underlying generic declaration declares no type variables.",;java.lang.Class.getTypeParameters();java.lang.reflect.Constructor.getTypeParameters();java.lang.reflect.Executable.getTypeParameters();java.lang.reflect.Method.getTypeParameters(),;1.00;1.00;1.00;1.00
getUnitIncrement,4,0.25,For backwards compatibility with java.awt.Scrollbar.,;java.awt.Scrollbar.getUnitIncrement();java.awt.ScrollPaneAdjustable.getUnitIncrement();javax.swing.JScrollBar.getUnitIncrement(int);javax.swing.JScrollBar.getUnitIncrement(),;0.25;0.25;0.25;0.25
getURL,4,0.25,Description copied from interface:ValidationEventLocator,;java.net.URLConnection.getURL();javax.activation.URLDataSource.getURL();javax.swing.event.HyperlinkEvent.getURL();javax.xml.bind.helpers.ValidationEventLocatorImpl.getURL(),;0.25;0.25;0.25;0.25
getVgap,4,0.737177822,Gets the vertical gap between components.,;java.awt.BorderLayout.getVgap();java.awt.CardLayout.getVgap();java.awt.FlowLayout.getVgap();java.awt.GridLayout.getVgap(),;0.67;0.74;0.46;0.74
getViewFactory,4,0.587554177,Fetches a factory that is suitable for producing views of any models that are produced by this kit.,;javax.swing.text.DefaultEditorKit.getViewFactory();javax.swing.text.EditorKit.getViewFactory();javax.swing.text.View.getViewFactory();javax.swing.text.html.HTMLEditorKit.getViewFactory(),;0.50;0.59;0.25;0.58
getViewIndex,4,0.654999818,Returns the child view index representing the given position in the model. By default a view has no children so this is implemented to return -1 to indicate there is no valid child index for any position.,";javax.swing.text.AsyncBoxView.getViewIndex(int,Position.Bias);javax.swing.text.CompositeView.getViewIndex(int,Position.Bias);javax.swing.text.View.getViewIndex(int,Position.Bias);javax.swing.text.View.getViewIndex(float,float,Shape)",;0.65;0.49;0.65;0.48
getViewIndexAtPosition,4,0.663009359,Fetches the child view index representing the given position in the model. This is implemented to fetch the view in the case where there is a child view for each child element.,";javax.swing.text.AsyncBoxView.getViewIndexAtPosition(int,Position.Bias);javax.swing.text.CompositeView.getViewIndexAtPosition(int);javax.swing.text.FlowView.getViewIndexAtPosition(int);javax.swing.text.ZoneView.getViewIndexAtPosition(int)",;0.66;0.66;0.57;0.56
getWaitingThreads,4,0.845205199,"Returns a collection containing those threads that may be waiting on the given condition associated with this lock. Because the actual set of threads may change dynamically while constructing this result, the returned collection is only a best-effort estimate. The elements of the returned collection are in no particular order. This method is designed to facilitate construction of subclasses that provide more extensive condition monitoring facilities.",;java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getWaitingThreads(AbstractQueuedLongSynchronizer.ConditionObject);java.util.concurrent.locks.AbstractQueuedSynchronizer.getWaitingThreads(AbstractQueuedSynchronizer.ConditionObject);java.util.concurrent.locks.ReentrantLock.getWaitingThreads(Condition);java.util.concurrent.locks.ReentrantReadWriteLock.getWaitingThreads(Condition),;0.84;0.84;0.85;0.83
getWaitQueueLength,4,0.969124112,"Returns an estimate of the number of threads waiting on the given condition associated with this synchronizer. Note that because timeouts and interrupts may occur at any time, the estimate serves only as an upper bound on the actual number of waiters. This method is designed for use in monitoring of the system state, not for synchronization control.",;java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getWaitQueueLength(AbstractQueuedLongSynchronizer.ConditionObject);java.util.concurrent.locks.AbstractQueuedSynchronizer.getWaitQueueLength(AbstractQueuedSynchronizer.ConditionObject);java.util.concurrent.locks.ReentrantLock.getWaitQueueLength(Condition);java.util.concurrent.locks.ReentrantReadWriteLock.getWaitQueueLength(Condition),;0.97;0.97;0.96;0.95
getWantClientAuth,4,0.426913361,Returns true if the socket will request client authentication. This option is only useful for sockets in the server mode.,;javax.net.ssl.SSLEngine.getWantClientAuth();javax.net.ssl.SSLParameters.getWantClientAuth();javax.net.ssl.SSLServerSocket.getWantClientAuth();javax.net.ssl.SSLSocket.getWantClientAuth(),;0.43;0.25;0.25;0.43
getWhen,4,0.461554163,Returns the timestamp of when this event occurred.,;java.awt.event.ActionEvent.getWhen();java.awt.event.InputEvent.getWhen();java.awt.event.InputMethodEvent.getWhen();java.awt.event.InvocationEvent.getWhen(),;0.41;0.44;0.44;0.46
group,4,0.455725942,"Returns the input subsequence captured by the given named-capturing group during the previous match operation. If the match was successful but the group specified failed to match any part of the input sequence, then null is returned. Note that some groups, for example (a*), match the empty string. This method will return the empty string when such a group successfully matches the empty string in the input.",;java.nio.channels.MembershipKey.group();java.util.regex.Matcher.group();java.util.regex.Matcher.group(int);java.util.regex.Matcher.group(String),;0.25;0.40;0.45;0.46
hasWaiters,4,0.965462597,"Queries whether any threads are waiting on the given condition associated with this synchronizer. Note that because timeouts and interrupts may occur at any time, a true return does not guarantee that a future signal will awaken any threads. This method is designed primarily for use in monitoring of the system state.",;java.util.concurrent.locks.AbstractQueuedLongSynchronizer.hasWaiters(AbstractQueuedLongSynchronizer.ConditionObject);java.util.concurrent.locks.AbstractQueuedSynchronizer.hasWaiters(AbstractQueuedSynchronizer.ConditionObject);java.util.concurrent.locks.ReentrantLock.hasWaiters(Condition);java.util.concurrent.locks.ReentrantReadWriteLock.hasWaiters(Condition),;0.97;0.97;0.96;0.94
headMap,4,1,Description copied from interface:NavigableMap,";java.util.TreeMap.headMap(K,boolean);java.util.TreeMap.headMap(K);java.util.concurrent.ConcurrentSkipListMap.headMap(K,boolean);java.util.concurrent.ConcurrentSkipListMap.headMap(K)",;1.00;1.00;1.00;1.00
headSet,4,1,Description copied from interface:NavigableSet,";java.util.TreeSet.headSet(E,boolean);java.util.TreeSet.headSet(E);java.util.concurrent.ConcurrentSkipListSet.headSet(E,boolean);java.util.concurrent.ConcurrentSkipListSet.headSet(E)",;1.00;1.00;1.00;1.00
ifPresent,4,0.832259647,"Have the specified consumer accept the value if a value is present, otherwise do nothing.",;java.util.Optional.ifPresent(Consumer&lt;?);java.util.OptionalDouble.ifPresent(DoubleConsumer);java.util.OptionalInt.ifPresent(IntConsumer);java.util.OptionalLong.ifPresent(LongConsumer),;0.50;0.83;0.83;0.83
imageUpdate,4,0.5,"Repaints the component when the image has changed. This imageUpdate method of an ImageObserver is called when more information about an image which had been previously requested using an asynchronous routine such as the drawImage method of Graphics becomes available. See the definition of imageUpdate for more information on this method and its arguments. The imageUpdate method of Component incrementally draws an image on the component as more of the bits of the image are available. If the system property awt.image.incrementaldraw is missing or has the value true, the image is incrementally drawn. If the system property has any other value, then the image is not drawn until it has been completely loaded. Also, if incremental drawing is in effect, the value of the system property awt.image.redrawrate is interpreted as an integer to give the maximum redraw rate, in milliseconds. If the system property is missing or cannot be interpreted as an integer, the redraw rate is once every 100ms. The interpretation of the x, y, width, and height arguments depends on the value of the infoflags argument.",";java.awt.Component.imageUpdate(Image,int,int,int,int,int);javax.swing.AbstractButton.imageUpdate(Image,int,int,int,int,int);javax.swing.JLabel.imageUpdate(Image,int,int,int,int,int);javax.swing.JSlider.imageUpdate(Image,int,int,int,int,int)",;0.50;0.50;0.50;0.50
indexToLocation,4,0.559156474,"Returns the origin in the given JList, of the specified item, in the list's coordinate system. Returns null if the index isn't valid.",";javax.swing.JList.indexToLocation(int);javax.swing.plaf.ListUI.indexToLocation(JList,int);javax.swing.plaf.basic.BasicListUI.indexToLocation(JList,int);javax.swing.plaf.multi.MultiListUI.indexToLocation(JList,int)",;0.41;0.56;0.56;0.25
installComponents,4,0.25,"Intalls the subcomponents of the tree, which is the renderer pane.",;javax.swing.plaf.basic.BasicComboBoxUI.installComponents();javax.swing.plaf.basic.BasicLabelUI.installComponents(JLabel);javax.swing.plaf.basic.BasicTabbedPaneUI.installComponents();javax.swing.plaf.basic.BasicTreeUI.installComponents(),;0.25;0.00;0.25;0.25
intersectsLine,4,0.633291884,Tests if the specified line segment intersects the interior of this Rectangle2D.,";java.awt.geom.Line2D.intersectsLine(double,double,double,double);java.awt.geom.Line2D.intersectsLine(Line2D);java.awt.geom.Rectangle2D.intersectsLine(double,double,double,double);java.awt.geom.Rectangle2D.intersectsLine(Line2D)",;0.32;0.58;0.63;0.63
isClosed,4,0.452276678,Returns the closed state of the socket.,;java.net.DatagramSocket.isClosed();java.net.ServerSocket.isClosed();java.net.Socket.isClosed();javax.swing.JInternalFrame.isClosed(),;0.25;0.45;0.45;0.25
isCompatibleRaster,4,0.639493378,Returns true if raster is compatible with this ColorModel and false if it is not.,;java.awt.image.ColorModel.isCompatibleRaster(Raster);java.awt.image.ComponentColorModel.isCompatibleRaster(Raster);java.awt.image.DirectColorModel.isCompatibleRaster(Raster);java.awt.image.IndexColorModel.isCompatibleRaster(Raster),;0.46;0.63;0.64;0.60
isCompatibleSampleModel,4,0.630928127,"Checks if the specified SampleModel is compatible with this ColorModel. If sm is null, this method returns false.",;java.awt.image.ColorModel.isCompatibleSampleModel(SampleModel);java.awt.image.ComponentColorModel.isCompatibleSampleModel(SampleModel);java.awt.image.IndexColorModel.isCompatibleSampleModel(SampleModel);java.awt.image.PackedColorModel.isCompatibleSampleModel(SampleModel),;0.37;0.45;0.63;0.63
isConnected,4,0.427716697,Tells whether or not this channel's socket is connected.,;java.net.DatagramSocket.isConnected();java.net.Socket.isConnected();java.nio.channels.DatagramChannel.isConnected();java.nio.channels.SocketChannel.isConnected(),;0.32;0.32;0.43;0.43
isConversionSupported,4,0.39667358,Indicates whether an audio input stream of a specified format can be obtained from an audio input stream of another specified format.,";javax.sound.sampled.AudioSystem.isConversionSupported(AudioFormat.Encoding,AudioFormat);javax.sound.sampled.AudioSystem.isConversionSupported(AudioFormat,AudioFormat);javax.sound.sampled.spi.FormatConversionProvider.isConversionSupported(AudioFormat.Encoding,AudioFormat);javax.sound.sampled.spi.FormatConversionProvider.isConversionSupported(AudioFormat,AudioFormat)",;0.40;0.40;0.38;0.38
isEditable,4,0.298911879,"Returns true if the JComboBox is editable. By default, a combo box is not editable.",;java.awt.TextComponent.isEditable();javax.swing.JComboBox.isEditable();javax.swing.JTree.isEditable();javax.swing.text.JTextComponent.isEditable(),;0.25;0.30;0.29;0.25
isHidden,4,0.361235776,Tells whether or not a file is considered hidden. The exact definition of hidden is platform or provider dependent. On UNIX for example a file is considered to be hidden if its name begins with a period character ('.'). On Windows a file is considered hidden if it isn't a directory and the DOS hidden attribute is set. Depending on the implementation this method may require to access the file system to determine if the file is considered hidden.,;java.beans.FeatureDescriptor.isHidden();java.io.File.isHidden();java.nio.file.Files.isHidden(Path);java.nio.file.spi.FileSystemProvider.isHidden(Path),;0.25;0.34;0.36;0.28
isInfinite,4,0.789178493,"Returns true if the specified number is infinitely large in magnitude, false otherwise.",;java.lang.Double.isInfinite(double);java.lang.Double.isInfinite();java.lang.Float.isInfinite(float);java.lang.Float.isInfinite(),;0.79;0.73;0.79;0.73
isInstanceOf,4,0.5,Description copied from interface:RMIConnection,";java.beans.Beans.isInstanceOf(Object,Class&lt;?&gt;);javax.management.Query.isInstanceOf(StringValueExp);javax.management.remote.rmi.RMIConnectionImpl.isInstanceOf(ObjectName,String,Subject);javax.management.remote.rmi.RMIConnectionImpl_Stub.isInstanceOf(ObjectName,String,Subject)",;0.25;0.25;0.50;0.50
isLoggable,4,0.515418094,Check if this Handler would actually log a given LogRecord. This method checks if the LogRecord has an appropriate Level and whether it satisfies any Filter. It also may make other Handler specific checks that might prevent a handler from logging the LogRecord. It will return false if the LogRecord is null.,;java.util.logging.Handler.isLoggable(LogRecord);java.util.logging.Logger.isLoggable(Level);java.util.logging.MemoryHandler.isLoggable(LogRecord);java.util.logging.StreamHandler.isLoggable(LogRecord),;0.52;0.25;0.51;0.51
isNamespaceAware,4,0.618968327,Indicates whether or not the factory is configured to produce parsers which are namespace aware.,;javax.xml.parsers.DocumentBuilder.isNamespaceAware();javax.xml.parsers.DocumentBuilderFactory.isNamespaceAware();javax.xml.parsers.SAXParser.isNamespaceAware();javax.xml.parsers.SAXParserFactory.isNamespaceAware(),;0.62;0.62;0.62;0.62
isNaN,4,0.728941569,"Returns true if the specified number is a Not-a-Number (NaN) value, false otherwise.",;java.lang.Double.isNaN(double);java.lang.Double.isNaN();java.lang.Float.isNaN(float);java.lang.Float.isNaN(),;0.73;0.68;0.73;0.68
isNativeLookAndFeel,4,0.432432169,"Returns false, SynthLookAndFeel is not a native look and feel.",;javax.swing.LookAndFeel.isNativeLookAndFeel();javax.swing.plaf.metal.MetalLookAndFeel.isNativeLookAndFeel();javax.swing.plaf.multi.MultiLookAndFeel.isNativeLookAndFeel();javax.swing.plaf.synth.SynthLookAndFeel.isNativeLookAndFeel(),;0.30;0.43;0.25;0.43
isOpen,4,0.304493673,Tells whether or not this file system is open. File systems created by the default provider are always open.,;java.nio.channels.Selector.isOpen();java.nio.channels.spi.AbstractInterruptibleChannel.isOpen();java.nio.channels.spi.AbstractSelector.isOpen();java.nio.file.FileSystem.isOpen(),;0.29;0.25;0.25;0.30
isPopupVisible,4,0.439958921,Determine the visibility of the popup,;javax.swing.JComboBox.isPopupVisible();javax.swing.plaf.ComboBoxUI.isPopupVisible(JComboBox);javax.swing.plaf.basic.BasicComboBoxUI.isPopupVisible(JComboBox);javax.swing.plaf.multi.MultiComboBoxUI.isPopupVisible(JComboBox),;0.44;0.44;0.25;0.25
isPresent,4,1,"Return true if there is a value present, otherwise false.",;java.util.Optional.isPresent();java.util.OptionalDouble.isPresent();java.util.OptionalInt.isPresent();java.util.OptionalLong.isPresent(),;1.00;1.00;1.00;1.00
isReadable,4,0.25,Returns read access mode for the role (true if it is readable).,;java.nio.channels.SelectionKey.isReadable();java.nio.file.Files.isReadable(Path);javax.management.MBeanAttributeInfo.isReadable();javax.management.relation.RoleInfo.isReadable(),;0.25;0.25;0.25;0.25
isSelectionEmpty,4,0.5,Returns true if the selection is currently empty.,;javax.swing.DefaultListSelectionModel.isSelectionEmpty();javax.swing.JList.isSelectionEmpty();javax.swing.JTree.isSelectionEmpty();javax.swing.tree.DefaultTreeSelectionModel.isSelectionEmpty(),;0.25;0.25;0.50;0.50
isSpecified,4,0.75,Returns the current value of an attribute's "specified" flag.,";javax.xml.validation.TypeInfoProvider.isSpecified(int);org.xml.sax.ext.Attributes2Impl.isSpecified(int);org.xml.sax.ext.Attributes2Impl.isSpecified(String,String);org.xml.sax.ext.Attributes2Impl.isSpecified(String)",;0.25;0.75;0.75;0.75
isSupportedLookAndFeel,4,0.274670523,Return true if the underlying platform supports and or permits this look and feel. This method returns false if the look and feel depends on special resources or legal agreements that aren't defined for the current platform.,;javax.swing.LookAndFeel.isSupportedLookAndFeel();javax.swing.plaf.metal.MetalLookAndFeel.isSupportedLookAndFeel();javax.swing.plaf.multi.MultiLookAndFeel.isSupportedLookAndFeel();javax.swing.plaf.synth.SynthLookAndFeel.isSupportedLookAndFeel(),;0.27;0.25;0.25;0.25
isTerminated,4,0.25,Description copied from interface:ExecutorService,;java.nio.channels.AsynchronousChannelGroup.isTerminated();java.util.concurrent.ForkJoinPool.isTerminated();java.util.concurrent.Phaser.isTerminated();java.util.concurrent.ThreadPoolExecutor.isTerminated(),;0.25;0.25;0.25;0.25
isVarArgs,4,0.807692813,Returns true if this executable was declared to take a variable number of arguments; returns false otherwise.,;java.lang.reflect.Constructor.isVarArgs();java.lang.reflect.Executable.isVarArgs();java.lang.reflect.Method.isVarArgs();java.lang.reflect.Parameter.isVarArgs(),;0.81;0.81;0.81;0.42
isXIncludeAware,4,0.5,Get state of XInclude processing.,;javax.xml.parsers.DocumentBuilder.isXIncludeAware();javax.xml.parsers.DocumentBuilderFactory.isXIncludeAware();javax.xml.parsers.SAXParser.isXIncludeAware();javax.xml.parsers.SAXParserFactory.isXIncludeAware(),;0.50;0.50;0.50;0.50
item,4,0.447237477,Returns the String object at the given index.,;javax.imageio.metadata.IIOMetadataNode.item(int);org.omg.CORBA.ContextList.item(int);org.omg.CORBA.ExceptionList.item(int);org.omg.CORBA.NVList.item(int),;0.25;0.45;0.39;0.44
lengthOfYear,4,0.560505853,"Returns the length of the year represented by this date. This returns the length of the year in days, either 365 or 366.",;java.time.LocalDate.lengthOfYear();java.time.YearMonth.lengthOfYear();java.time.chrono.HijrahDate.lengthOfYear();java.time.chrono.JapaneseDate.lengthOfYear(),;0.56;0.51;0.48;0.25
lineTo,4,0.861218815,Adds a point to the path by drawing a straight line from the current coordinates to the new specified coordinates specified in double precision.,";java.awt.geom.Path2D.lineTo(double,double);java.awt.geom.Path2D.Double.lineTo(double,double);java.awt.geom.Path2D.Float.lineTo(double,double);java.awt.geom.Path2D.Float.lineTo(float,float)",;0.86;0.86;0.86;0.64
locationToIndex,4,0.641972855,"Returns the cell index in the specified JList closest to the given location in the list's coordinate system. To determine if the cell actually contains the specified location, compare the point against the cell's bounds, as provided by getCellBounds. This method returns -1 if the list's model is empty.",";javax.swing.JList.locationToIndex(Point);javax.swing.plaf.ListUI.locationToIndex(JList,Point);javax.swing.plaf.basic.BasicListUI.locationToIndex(JList,Point);javax.swing.plaf.multi.MultiListUI.locationToIndex(JList,Point)",;0.55;0.64;0.64;0.25
menuSelectionChanged,4,0.382517863,Messaged when the menubar selection changes to activate or deactivate this menu. This implements the javax.swing.MenuElement interface. Overrides MenuElement.menuSelectionChanged.,;javax.swing.JMenu.menuSelectionChanged(boolean);javax.swing.JMenuBar.menuSelectionChanged(boolean);javax.swing.JMenuItem.menuSelectionChanged(boolean);javax.swing.JPopupMenu.menuSelectionChanged(boolean),;0.38;0.25;0.25;0.38
minusWeeks,4,0.761182694,"Returns a copy of this LocalDateTime with the specified number of weeks subtracted. This method subtracts the specified amount in weeks from the days field decrementing the month and year fields as necessary to ensure the result remains valid. The result is only invalid if the maximum/minimum year is exceeded. For example, 2009-01-07 minus one week would result in 2008-12-31. This instance is immutable and unaffected by this method call.",;java.time.LocalDate.minusWeeks(long);java.time.LocalDateTime.minusWeeks(long);java.time.OffsetDateTime.minusWeeks(long);java.time.ZonedDateTime.minusWeeks(long),;0.76;0.76;0.74;0.41
minusYears,4,0.507591736,Returns a copy of this Year with the specified number of years subtracted. This instance is immutable and unaffected by this method call.,;java.time.Period.minusYears(long);java.time.Year.minusYears(long);java.time.YearMonth.minusYears(long);java.time.ZonedDateTime.minusYears(long),;0.40;0.51;0.51;0.38
modifyAttributes,4,1,Description copied from interface:DirContext,";javax.naming.directory.InitialDirContext.modifyAttributes(String,int,Attributes);javax.naming.directory.InitialDirContext.modifyAttributes(Name,int,Attributes);javax.naming.directory.InitialDirContext.modifyAttributes(String,ModificationItem[]);javax.naming.directory.InitialDirContext.modifyAttributes(Name,ModificationItem[])",;1.00;1.00;1.00;1.00
moveDot,4,0.432314293,"Moves the caret position to the specified position, with the specified bias.",";javax.swing.text.DefaultCaret.moveDot(int);javax.swing.text.DefaultCaret.moveDot(int,Position.Bias);javax.swing.text.NavigationFilter.moveDot(NavigationFilter.FilterBypass,int,Position.Bias);javax.swing.text.NavigationFilter.FilterBypass.moveDot(int,Position.Bias)",;0.43;0.43;0.25;0.25
moveTo,4,0.823619616,Adds a point to the path by moving to the specified coordinates specified in double precision.,";java.awt.geom.Path2D.moveTo(double,double);java.awt.geom.Path2D.Double.moveTo(double,double);java.awt.geom.Path2D.Float.moveTo(double,double);java.awt.geom.Path2D.Float.moveTo(float,float)",;0.82;0.82;0.82;0.55
multiplyExact,4,0.925366567,"Returns the product of the arguments, throwing an exception if the result overflows a long.",";java.lang.Math.multiplyExact(int,int);java.lang.Math.multiplyExact(long,long);java.lang.StrictMath.multiplyExact(int,int);java.lang.StrictMath.multiplyExact(long,long)",;0.93;0.93;0.93;0.93
negate,4,0.428093524,"Returns a BigDecimal whose value is (-this), and whose scale is this.scale().",;java.math.BigDecimal.negate();java.math.BigDecimal.negate(MathContext);java.math.BigInteger.negate();javax.xml.datatype.Duration.negate(),;0.43;0.42;0.35;0.31
newDirectoryStream,4,0.575029528,"Opens a directory, returning a DirectoryStream to iterate over the entries in the directory. The elements returned by the directory stream's iterator are of type Path, each one representing an entry in the directory. The Path objects are obtained as if by resolving the name of the directory entry against dir. The entries returned by the iterator are filtered by matching the String representation of their file names against the given globbing pattern. For example, suppose we want to iterate over the files ending with "".java"" in a directory: Path dir = ... try (DirectoryStream&lt;Path&gt; stream = Files.newDirectoryStream(dir, ""*.java"")) { : } The globbing pattern is specified by the getPathMatcher method. When not using the try-with-resources construct, then directory stream's close method should be invoked after iteration is completed so as to free any resources held for the open directory. When an implementation supports operations on entries in the directory that execute in a race-free manner then the returned directory stream is a SecureDirectoryStream.",";java.nio.file.Files.newDirectoryStream(Path);java.nio.file.Files.newDirectoryStream(Path,String);java.nio.file.Files.newDirectoryStream(Path,DirectoryStream.Filter&lt;?);java.nio.file.spi.FileSystemProvider.newDirectoryStream(Path,DirectoryStream.Filter&lt;?)",;0.50;0.58;0.54;0.26
newInputStream,4,0.49132933,"Constructs a stream that reads bytes from the given channel. The read methods of the resulting stream will throw an IllegalBlockingModeException if invoked while the underlying channel is in non-blocking mode. The stream will not be buffered, and it will not support the mark or reset methods. The stream will be safe for access by multiple concurrent threads. Closing the stream will in turn cause the channel to be closed.",";java.nio.channels.Channels.newInputStream(ReadableByteChannel);java.nio.channels.Channels.newInputStream(AsynchronousByteChannel);java.nio.file.Files.newInputStream(Path,OpenOption...);java.nio.file.spi.FileSystemProvider.newInputStream(Path,OpenOption...)",;0.49;0.46;0.39;0.32
newOutputStream,4,0.429186438,Constructs a stream that writes bytes to the given channel. The write methods of the resulting stream will throw an IllegalBlockingModeException if invoked while the underlying channel is in non-blocking mode. The stream will not be buffered. The stream will be safe for access by multiple concurrent threads. Closing the stream will in turn cause the channel to be closed.,";java.nio.channels.Channels.newOutputStream(WritableByteChannel);java.nio.channels.Channels.newOutputStream(AsynchronousByteChannel);java.nio.file.Files.newOutputStream(Path,OpenOption...);java.nio.file.spi.FileSystemProvider.newOutputStream(Path,OpenOption...)",;0.43;0.40;0.33;0.31
newReference,4,0.389167266,Creates a Reference with the specified URI and digest method.,";javax.xml.crypto.dsig.XMLSignatureFactory.newReference(String,DigestMethod);javax.xml.crypto.dsig.XMLSignatureFactory.newReference(String,DigestMethod,List,String,String);javax.xml.crypto.dsig.XMLSignatureFactory.newReference(String,DigestMethod,List,String,String,byte[]);javax.xml.crypto.dsig.XMLSignatureFactory.newReference(String,DigestMethod,List,Data,List,String,String)",;0.39;0.39;0.37;0.35
newTaskFor,4,0.5,Description copied from class:AbstractExecutorService,";java.util.concurrent.AbstractExecutorService.newTaskFor(Runnable,T);java.util.concurrent.AbstractExecutorService.newTaskFor(Callable&lt;T&gt;);java.util.concurrent.ForkJoinPool.newTaskFor(Runnable,T);java.util.concurrent.ForkJoinPool.newTaskFor(Callable&lt;T&gt;)",;0.38;0.38;0.50;0.50
newXMLGregorianCalendar,4,0.296861653,Constructor allowing for complete value spaces allowed by W3C XML Schema 1.0 recommendation for xsd:dateTime and related builtin datatypes. Note that year parameter supports arbitrarily large numbers and fractionalSecond has infinite precision.A null value indicates that field is not set.,";javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendar();javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendar(String);javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendar(BigInteger,int,int,int,int,int,BigDecimal,int);javax.xml.datatype.DatatypeFactory.newXMLGregorianCalendar(int,int,int,int,int,int,int,int)",;0.25;0.26;0.30;0.29
nextBoolean,4,0.5,Returns a pseudorandom boolean value.,;java.util.Random.nextBoolean();java.util.Scanner.nextBoolean();java.util.SplittableRandom.nextBoolean();java.util.concurrent.ThreadLocalRandom.nextBoolean(),;0.25;0.25;0.50;0.50
openConnection,4,0.452017492,"Same as openConnection(), except that the connection will be made through the specified proxy; Protocol handlers that do not support proxing will ignore the proxy parameter and make a normal connection. Invoking this method preempts the system's default ProxySelector settings.",";java.net.URL.openConnection();java.net.URL.openConnection(Proxy);java.net.URLStreamHandler.openConnection(URL);java.net.URLStreamHandler.openConnection(URL,Proxy)",;0.38;0.45;0.36;0.45
orElse,4,1,"Return the value if present, otherwise return other.",;java.util.Optional.orElse(T);java.util.OptionalDouble.orElse(double);java.util.OptionalInt.orElse(int);java.util.OptionalLong.orElse(long),;1.00;1.00;1.00;1.00
orElseGet,4,1,"Return the value if present, otherwise invoke other and return the result of that invocation.",;java.util.Optional.orElseGet(Supplier&lt;?);java.util.OptionalDouble.orElseGet(DoubleSupplier);java.util.OptionalInt.orElseGet(IntSupplier);java.util.OptionalLong.orElseGet(LongSupplier),;1.00;1.00;1.00;1.00
orElseThrow,4,1,"Return the contained value, if present, otherwise throw an exception to be created by the provided supplier.",;java.util.Optional.orElseThrow(Supplier&lt;?);java.util.OptionalDouble.orElseThrow(Supplier&lt;X&gt;);java.util.OptionalInt.orElseThrow(Supplier&lt;X&gt;);java.util.OptionalLong.orElseThrow(Supplier&lt;X&gt;),;1.00;1.00;1.00;1.00
paintImmediately,4,0.3354848,"Paints the specified region in the JLayer this LayerUI is set to, immediately. This method is to be overridden when the dirty region needs to be changed. The default implementation delegates its functionality to JComponent.paintImmediately(int, int, int, int).",";javax.swing.JComponent.paintImmediately(int,int,int,int);javax.swing.JComponent.paintImmediately(Rectangle);javax.swing.JLayer.paintImmediately(int,int,int,int);javax.swing.plaf.LayerUI.paintImmediately(int,int,int,int,JLayer&lt;?)",;0.31;0.25;0.27;0.34
parallelSetAll,4,1,"Set all elements of the specified array, in parallel, using the provided generator function to compute each element. If the generator function throws an exception, an unchecked exception is thrown from parallelSetAll and the array is left in an indeterminate state.",";java.util.Arrays.parallelSetAll(T[],IntFunction&lt;?);java.util.Arrays.parallelSetAll(int[],IntUnaryOperator);java.util.Arrays.parallelSetAll(long[],IntToLongFunction);java.util.Arrays.parallelSetAll(double[],IntToDoubleFunction)",;1.00;1.00;1.00;1.00
peekFirst,4,0.75,Description copied from interface:Deque,;java.util.ArrayDeque.peekFirst();java.util.LinkedList.peekFirst();java.util.concurrent.ConcurrentLinkedDeque.peekFirst();java.util.concurrent.LinkedBlockingDeque.peekFirst(),;0.75;0.25;0.75;0.75
peekLast,4,0.75,Description copied from interface:Deque,;java.util.ArrayDeque.peekLast();java.util.LinkedList.peekLast();java.util.concurrent.ConcurrentLinkedDeque.peekLast();java.util.concurrent.LinkedBlockingDeque.peekLast(),;0.75;0.25;0.75;0.75
plusWeeks,4,0.784904367,"Returns a copy of this OffsetDateTime with the specified number of weeks added. This method adds the specified amount in weeks to the days field incrementing the month and year fields as necessary to ensure the result remains valid. The result is only invalid if the maximum/minimum year is exceeded. For example, 2008-12-31 plus one week would result in 2009-01-07. This instance is immutable and unaffected by this method call.",;java.time.LocalDate.plusWeeks(long);java.time.LocalDateTime.plusWeeks(long);java.time.OffsetDateTime.plusWeeks(long);java.time.ZonedDateTime.plusWeeks(long),;0.78;0.78;0.78;0.41
plusYears,4,0.507591736,Returns a copy of this Year with the specified number of years added. This instance is immutable and unaffected by this method call.,;java.time.Period.plusYears(long);java.time.Year.plusYears(long);java.time.YearMonth.plusYears(long);java.time.ZonedDateTime.plusYears(long),;0.40;0.51;0.51;0.38
postEvent,4,0.723288495,Deprecated.As of JDK version 1.1 replaced by dispatchEvent(AWTEvent).,;java.awt.Component.postEvent(Event);java.awt.EventQueue.postEvent(AWTEvent);java.awt.MenuComponent.postEvent(Event);java.awt.Window.postEvent(Event),;0.72;0.25;0.70;0.72
processKeyBinding,4,0.5,"Invoked to process the key bindings for ks as the result of the KeyEvent e. This obtains the appropriate InputMap, gets the binding, gets the action from the ActionMap, and then (if the action is found and the component is enabled) invokes notifyAction to notify the action.",";javax.swing.JComboBox.processKeyBinding(KeyStroke,KeyEvent,int,boolean);javax.swing.JComponent.processKeyBinding(KeyStroke,KeyEvent,int,boolean);javax.swing.JMenuBar.processKeyBinding(KeyStroke,KeyEvent,int,boolean);javax.swing.JTable.processKeyBinding(KeyStroke,KeyEvent,int,boolean)",;0.50;0.50;0.25;0.25
processWarningOccurred,4,0.750516802,Broadcasts a localized warning message to all registered IIOWriteWarningListeners by calling their warningOccurred method with a string taken from a ResourceBundle. Subclasses may use this method as a convenience.,";javax.imageio.ImageReader.processWarningOccurred(String);javax.imageio.ImageReader.processWarningOccurred(String,String);javax.imageio.ImageWriter.processWarningOccurred(int,String);javax.imageio.ImageWriter.processWarningOccurred(int,String,String)",;0.73;0.75;0.73;0.75
putDouble,4,0.429493738,"Relative put method for writing a double value(optional operation). Writes eight bytes containing the given double value, in the current byte order, into this buffer at the current position, and then increments the position by eight.",";java.nio.ByteBuffer.putDouble(double);java.nio.ByteBuffer.putDouble(int,double);java.util.prefs.AbstractPreferences.putDouble(String,double);java.util.prefs.Preferences.putDouble(String,double)",;0.43;0.43;0.25;0.25
putFloat,4,0.429493738,"Relative put method for writing a float value(optional operation). Writes four bytes containing the given float value, in the current byte order, into this buffer at the current position, and then increments the position by four.",";java.nio.ByteBuffer.putFloat(float);java.nio.ByteBuffer.putFloat(int,float);java.util.prefs.AbstractPreferences.putFloat(String,float);java.util.prefs.Preferences.putFloat(String,float)",;0.43;0.43;0.25;0.25
putInt,4,0.429493738,"Relative put method for writing an int value(optional operation). Writes four bytes containing the given int value, in the current byte order, into this buffer at the current position, and then increments the position by four.",";java.nio.ByteBuffer.putInt(int);java.nio.ByteBuffer.putInt(int,int);java.util.prefs.AbstractPreferences.putInt(String,int);java.util.prefs.Preferences.putInt(String,int)",;0.43;0.43;0.25;0.25
putLong,4,0.429493738,"Relative put method for writing a long value(optional operation). Writes eight bytes containing the given long value, in the current byte order, into this buffer at the current position, and then increments the position by eight.",";java.nio.ByteBuffer.putLong(long);java.nio.ByteBuffer.putLong(int,long);java.util.prefs.AbstractPreferences.putLong(String,long);java.util.prefs.Preferences.putLong(String,long)",;0.43;0.43;0.25;0.25
quadTo,4,0.917102239,"Adds a curved segment, defined by two new points, to the path by drawing a Quadratic curve that intersects both the current coordinates and the specified coordinates (x2,y2), using the specified point (x1,y1) as a quadratic parametric control point. All coordinates are specified in double precision.",";java.awt.geom.Path2D.quadTo(double,double,double,double);java.awt.geom.Path2D.Double.quadTo(double,double,double,double);java.awt.geom.Path2D.Float.quadTo(double,double,double,double);java.awt.geom.Path2D.Float.quadTo(float,float,float,float)",;0.92;0.92;0.92;0.78
readChar,4,0.25,Description copied from interface:ImageInputStream,;java.io.DataInputStream.readChar();java.io.ObjectInputStream.readChar();java.io.RandomAccessFile.readChar();javax.imageio.stream.ImageInputStreamImpl.readChar(),;0.25;0.25;0.25;0.25
readUnsignedByte,4,0.25,Description copied from interface:ImageInputStream,;java.io.DataInputStream.readUnsignedByte();java.io.ObjectInputStream.readUnsignedByte();java.io.RandomAccessFile.readUnsignedByte();javax.imageio.stream.ImageInputStreamImpl.readUnsignedByte(),;0.25;0.25;0.25;0.25
readUnsignedShort,4,0.261738182,"Reads an unsigned 16-bit number from this file. This method reads two bytes from the file, starting at the current file pointer. If the bytes read, in order, are b1 and b2, where 0&lt;=b1, b2&lt;=255, then the result is equal to: (b1 &lt;&lt; 8) | b2 This method blocks until the two bytes are read, the end of the stream is detected, or an exception is thrown.",;java.io.DataInputStream.readUnsignedShort();java.io.ObjectInputStream.readUnsignedShort();java.io.RandomAccessFile.readUnsignedShort();javax.imageio.stream.ImageInputStreamImpl.readUnsignedShort(),;0.25;0.25;0.26;0.25
receive,4,0.262856033,"Receives a datagram via this channel. If a datagram is immediately available, or if this channel is in blocking mode and one eventually becomes available, then the datagram is copied into the given byte buffer and its source address is returned. If this channel is in non-blocking mode and a datagram is not immediately available then this method immediately returns null. The datagram is transferred into the given byte buffer starting at its current position, as if by a regular read operation. If there are fewer bytes remaining in the buffer than are required to hold the datagram then the remainder of the datagram is silently discarded. This method performs exactly the same security checks as the receive method of the DatagramSocket class. That is, if the socket is not connected to a specific remote address and a security manager has been installed then for each datagram received this method verifies that the source's address and port number are permitted by the security manager's checkAccept method. The overhead of this security check can be avoided by first connecting the socket via the connect method. This method may be invoked at any time. If another thread has already initiated a read operation upon this channel, however, then an invocation of this method will block until the first operation is complete. If this channel's socket is not bound then this method will first cause the socket to be bound to an address that is assigned automatically, as if invoking the bind method with a parameter of null.",;java.io.PipedInputStream.receive(int);java.net.DatagramSocket.receive(DatagramPacket);java.net.DatagramSocketImpl.receive(DatagramPacket);java.nio.channels.DatagramChannel.receive(ByteBuffer),;0.25;0.26;0.25;0.26
rejectedExecution,4,0.286891037,"Obtains and ignores the next task that the executor would otherwise execute, if one is immediately available, and then retries execution of task r, unless the executor is shut down, in which case task r is instead discarded.",";java.util.concurrent.ThreadPoolExecutor.AbortPolicy.rejectedExecution(Runnable,ThreadPoolExecutor);java.util.concurrent.ThreadPoolExecutor.CallerRunsPolicy.rejectedExecution(Runnable,ThreadPoolExecutor);java.util.concurrent.ThreadPoolExecutor.DiscardOldestPolicy.rejectedExecution(Runnable,ThreadPoolExecutor);java.util.concurrent.ThreadPoolExecutor.DiscardPolicy.rejectedExecution(Runnable,ThreadPoolExecutor)",;0.00;0.28;0.29;0.25
removeFirst,4,0.75,Description copied from interface:Deque,;java.util.ArrayDeque.removeFirst();java.util.LinkedList.removeFirst();java.util.concurrent.ConcurrentLinkedDeque.removeFirst();java.util.concurrent.LinkedBlockingDeque.removeFirst(),;0.75;0.25;0.75;0.75
removeFirstOccurrence,4,0.417202464,"Removes the first occurrence of the specified element in this deque (when traversing the deque from head to tail). If the deque does not contain the element, it is unchanged. More formally, removes the first element e such that o.equals(e) (if such an element exists). Returns true if this deque contained the specified element (or equivalently, if this deque changed as a result of the call).",;java.util.ArrayDeque.removeFirstOccurrence(Object);java.util.LinkedList.removeFirstOccurrence(Object);java.util.concurrent.ConcurrentLinkedDeque.removeFirstOccurrence(Object);java.util.concurrent.LinkedBlockingDeque.removeFirstOccurrence(Object),;0.42;0.38;0.38;0.25
removeIf,4,1,Description copied from interface:Collection,;java.util.ArrayList.removeIf(Predicate&lt;?);java.util.Vector.removeIf(Predicate&lt;?);java.util.concurrent.CopyOnWriteArrayList.removeIf(Predicate&lt;?);java.util.concurrent.CopyOnWriteArraySet.removeIf(Predicate&lt;?),;1.00;1.00;1.00;1.00
removeImage,4,0.414164739,"Removes the specified image from this media tracker. All instances of the specified image are removed, regardless of scale or ID.",";java.awt.MediaTracker.removeImage(Image);java.awt.MediaTracker.removeImage(Image,int);java.awt.MediaTracker.removeImage(Image,int,int,int);javax.imageio.ImageWriter.removeImage(int)",;0.41;0.40;0.35;0.25
removeLast,4,0.75,Description copied from interface:Deque,;java.util.ArrayDeque.removeLast();java.util.LinkedList.removeLast();java.util.concurrent.ConcurrentLinkedDeque.removeLast();java.util.concurrent.LinkedBlockingDeque.removeLast(),;0.75;0.25;0.75;0.75
removeLastOccurrence,4,0.417202464,"Removes the last occurrence of the specified element in this deque (when traversing the deque from head to tail). If the deque does not contain the element, it is unchanged. More formally, removes the last element e such that o.equals(e) (if such an element exists). Returns true if this deque contained the specified element (or equivalently, if this deque changed as a result of the call).",;java.util.ArrayDeque.removeLastOccurrence(Object);java.util.LinkedList.removeLastOccurrence(Object);java.util.concurrent.ConcurrentLinkedDeque.removeLastOccurrence(Object);java.util.concurrent.LinkedBlockingDeque.removeLastOccurrence(Object),;0.42;0.38;0.38;0.25
removeRange,4,0.541512989,"Removes from this list all of the elements whose index is between fromIndex, inclusive, and toIndex, exclusive. Shifts any succeeding elements to the left (reduces their index). This call shortens the list by (toIndex - fromIndex) elements. (If toIndex==fromIndex, this operation has no effect.)",";java.util.AbstractList.removeRange(int,int);java.util.ArrayList.removeRange(int,int);java.util.Vector.removeRange(int,int);javax.swing.DefaultListModel.removeRange(int,int)",;0.42;0.54;0.54;0.25
removeStyle,4,0.899672712,Removes a named style previously added to the document.,;javax.swing.JTextPane.removeStyle(String);javax.swing.text.DefaultStyledDocument.removeStyle(String);javax.swing.text.StyleContext.removeStyle(String);javax.swing.text.html.StyleSheet.removeStyle(String),;0.69;0.90;0.90;0.90
requestFocus,4,0.484815585,"Requests that this Component gets the input focus. Refer to Component.requestFocus(boolean) for a complete description of this method. Note that the use of this method is discouraged because its behavior is platform dependent. Instead we recommend the use of requestFocusInWindow(boolean). If you would like more information on focus, see How to Use the Focus Subsystem, a section in The Java Tutorial.",;java.awt.Component.requestFocus();java.awt.Component.requestFocus(boolean);javax.swing.JComponent.requestFocus();javax.swing.JComponent.requestFocus(boolean),;0.37;0.39;0.48;0.48
requestFocusInWindow,4,0.484154016,"Requests that this Component gets the input focus. Refer to Component.requestFocusInWindow() for a complete description of this method. If you would like more information on focus, see How to Use the Focus Subsystem, a section in The Java Tutorial.",;java.awt.Component.requestFocusInWindow();java.awt.Component.requestFocusInWindow(boolean);javax.swing.JComponent.requestFocusInWindow();javax.swing.JComponent.requestFocusInWindow(boolean),;0.44;0.44;0.48;0.48
resetToPreferredSizes,4,0.343499907,Lays out the JSplitPane layout based on the preferred size of the children components. This will likely result in changing the divider location.,;javax.swing.JSplitPane.resetToPreferredSizes();javax.swing.plaf.SplitPaneUI.resetToPreferredSizes(JSplitPane);javax.swing.plaf.basic.BasicSplitPaneUI.resetToPreferredSizes(JSplitPane);javax.swing.plaf.multi.MultiSplitPaneUI.resetToPreferredSizes(JSplitPane),;0.34;0.33;0.25;0.25
resolveDate,4,1,Description copied from class:AbstractChronology,";java.time.chrono.HijrahChronology.resolveDate(Map&lt;TemporalField,Long&gt;,ResolverStyle);java.time.chrono.JapaneseChronology.resolveDate(Map&lt;TemporalField,Long&gt;,ResolverStyle);java.time.chrono.MinguoChronology.resolveDate(Map&lt;TemporalField,Long&gt;,ResolverStyle);java.time.chrono.ThaiBuddhistChronology.resolveDate(Map&lt;TemporalField,Long&gt;,ResolverStyle)",;1.00;1.00;1.00;1.00
reverseBytes,4,0.854406798,Returns the value obtained by reversing the order of the bytes in the two's complement representation of the specified short value.,;java.lang.Character.reverseBytes(char);java.lang.Integer.reverseBytes(int);java.lang.Long.reverseBytes(long);java.lang.Short.reverseBytes(short),;0.68;0.85;0.85;0.85
roll,4,0.306954007,"Adds or subtracts (up/down) a single unit of time on the given time field without changing larger fields. For example, to roll the current date up by one day, you can achieve it by calling: roll(Calendar.DATE, true). When rolling on the year or Calendar.YEAR field, it will roll the year value in the range between 1 and the value returned by calling getMaximum(Calendar.YEAR). When rolling on the month or Calendar.MONTH field, other fields like date might conflict and, need to be changed. For instance, rolling the month on the date 01/31/96 will result in 02/29/96. When rolling on the hour-in-day or Calendar.HOUR_OF_DAY field, it will roll the hour value in the range between 0 and 23, which is zero-based.",";java.util.Calendar.roll(int,boolean);java.util.Calendar.roll(int,int);java.util.GregorianCalendar.roll(int,boolean);java.util.GregorianCalendar.roll(int,int)",;0.31;0.28;0.29;0.30
rowsUpdated,4,0.861262426,Invoked when rows have been changed in the underlying model between the specified range (inclusive). You normally do not call this method. This method is public to allow view classes to call it.,";javax.swing.DefaultRowSorter.rowsUpdated(int,int);javax.swing.DefaultRowSorter.rowsUpdated(int,int,int);javax.swing.RowSorter.rowsUpdated(int,int);javax.swing.RowSorter.rowsUpdated(int,int,int)",;0.86;0.86;0.86;0.86
scale,4,0.37990922,"Concatenates the current Graphics2DTransform with a scaling transformation Subsequent rendering is resized according to the specified scaling factors relative to the previous scaling. This is equivalent to calling transform(S), where S is an AffineTransform represented by the following matrix: [ sx 0 0 ] [ 0 sy 0 ] [ 0 0 1 ]",";java.awt.Graphics2D.scale(double,double);java.awt.geom.AffineTransform.scale(double,double);java.math.BigDecimal.scale();javax.swing.Spring.scale(Spring,float)",;0.38;0.37;0.25;0.25
selectAll,4,0.311503431,Selects all the text in the TextComponent. Does nothing on a null or empty document.,;java.awt.TextComponent.selectAll();javax.swing.JTable.selectAll();javax.swing.plaf.basic.BasicComboBoxEditor.selectAll();javax.swing.text.JTextComponent.selectAll(),;0.30;0.25;0.25;0.31
selectInitialValue,4,0.25,Invokes the selectInitialValue method on each UI handled by this object.,;javax.swing.JOptionPane.selectInitialValue();javax.swing.plaf.OptionPaneUI.selectInitialValue(JOptionPane);javax.swing.plaf.basic.BasicOptionPaneUI.selectInitialValue(JOptionPane);javax.swing.plaf.multi.MultiOptionPaneUI.selectInitialValue(JOptionPane),;0.25;0.25;0.25;0.25
send,4,0.272156843,"Sends a datagram packet from this socket. The DatagramPacket includes information indicating the data to be sent, its length, the IP address of the remote host, and the port number on the remote host. If there is a security manager, and the socket is not currently connected to a remote address, this method first performs some security checks. First, if p.getAddress().isMulticastAddress() is true, this method calls the security manager's checkMulticast method with p.getAddress() as its argument. If the evaluation of that expression is false, this method instead calls the security manager's checkConnect method with arguments p.getAddress().getHostAddress() and p.getPort(). Each call to a security manager method could result in a SecurityException if the operation is not allowed.",";java.net.DatagramSocket.send(DatagramPacket);java.net.DatagramSocketImpl.send(DatagramPacket);java.net.MulticastSocket.send(DatagramPacket,byte);java.nio.channels.DatagramChannel.send(ByteBuffer,SocketAddress)",;0.27;0.25;0.25;0.27
setAdapter,4,0.834370152,Description copied from interface:Unmarshaller,";javax.xml.bind.helpers.AbstractMarshallerImpl.setAdapter(XmlAdapter);javax.xml.bind.helpers.AbstractMarshallerImpl.setAdapter(Class&lt;A&gt;,A);javax.xml.bind.helpers.AbstractUnmarshallerImpl.setAdapter(XmlAdapter);javax.xml.bind.helpers.AbstractUnmarshallerImpl.setAdapter(Class&lt;A&gt;,A)",;0.83;0.83;0.83;0.83
setAll,4,1,"Set all elements of the specified array, using the provided generator function to compute each element. If the generator function throws an exception, it is relayed to the caller and the array is left in an indeterminate state.",";java.util.Arrays.setAll(T[],IntFunction&lt;?);java.util.Arrays.setAll(int[],IntUnaryOperator);java.util.Arrays.setAll(long[],IntToLongFunction);java.util.Arrays.setAll(double[],IntToDoubleFunction)",;1.00;1.00;1.00;1.00
setAngleStart,4,0.785463755,Sets the starting angle of this arc to the specified double value.,;java.awt.geom.Arc2D.setAngleStart(double);java.awt.geom.Arc2D.setAngleStart(Point2D);java.awt.geom.Arc2D.Double.setAngleStart(double);java.awt.geom.Arc2D.Float.setAngleStart(double),;0.79;0.44;0.79;0.79
setBoolean,4,0.297575902,"Sets the designated parameter to the given boolean in the Java programming language. The driver converts this to an SQL BIT value when it sends it to the database. The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this RowSet object's command when the method execute is called. Methods such as execute, populate must be provided in any class that extends this class and implements one or more of the standard JSR-114 RowSet interfaces. NOTE: JdbcRowSet does not require the populate method as it is undefined in this class.",";java.lang.reflect.Array.setBoolean(Object,int,boolean);java.lang.reflect.Field.setBoolean(Object,boolean);javax.sql.rowset.BaseRowSet.setBoolean(int,boolean);javax.sql.rowset.BaseRowSet.setBoolean(String,boolean)",;0.27;0.27;0.30;0.26
setByte,4,0.300979975,Sets the designated parameter to the given byte in the Java programming language. The driver converts this to an SQL TINYINT value when it sends it to the database. The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this RowSet object's command when the method execute is called. Methods such as execute and populate must be provided in any class that extends this class and implements one or more of the standard JSR-114 RowSet interfaces. NOTE: JdbcRowSet does not require the populate method as it is undefined in this class.,";java.lang.reflect.Array.setByte(Object,int,byte);java.lang.reflect.Field.setByte(Object,byte);javax.sql.rowset.BaseRowSet.setByte(int,byte);javax.sql.rowset.BaseRowSet.setByte(String,byte)",;0.27;0.27;0.30;0.26
setBytes,4,0.342391641,Writes all or part of the given byte array to the BLOB value that this Blob object represents and returns the number of bytes written. Writing starts at position pos in the BLOB value; len bytes from the given byte array are written.,";javax.sql.rowset.BaseRowSet.setBytes(int,byte[]);javax.sql.rowset.BaseRowSet.setBytes(String,byte[]);javax.sql.rowset.serial.SerialBlob.setBytes(long,byte[]);javax.sql.rowset.serial.SerialBlob.setBytes(long,byte[],int,int)",;0.34;0.29;0.33;0.34
setCellEditor,4,0.266526851,"Sets the cell editor. A null value implies that the tree cannot be edited. If this represents a change in the cellEditor, the propertyChange method is invoked on all listeners. This is a bound property.",;javax.swing.JTable.setCellEditor(TableCellEditor);javax.swing.JTree.setCellEditor(TreeCellEditor);javax.swing.plaf.basic.BasicTreeUI.setCellEditor(TreeCellEditor);javax.swing.table.TableColumn.setCellEditor(TableCellEditor),;0.25;0.27;0.25;0.25
setCellRenderer,4,0.25,Sets the TableCellRenderer used by JTable to draw individual values for this column.,;javax.swing.JList.setCellRenderer(ListCellRenderer&lt;?);javax.swing.JTree.setCellRenderer(TreeCellRenderer);javax.swing.plaf.basic.BasicTreeUI.setCellRenderer(TreeCellRenderer);javax.swing.table.TableColumn.setCellRenderer(TableCellRenderer),;0.25;0.25;0.25;0.25
setClip,4,0.326945319,"Sets the current clipping area to an arbitrary clip shape. Not all objects that implement the Shape interface can be used to set the clip. The only Shape objects that are guaranteed to be supported are Shape objects that are obtained via the getClip method and via Rectangle objects. This method sets the user clip, which is independent of the clipping associated with device bounds and window visibility.",";java.awt.Graphics.setClip(int,int,int,int);java.awt.Graphics.setClip(Shape);javax.swing.DebugGraphics.setClip(int,int,int,int);javax.swing.DebugGraphics.setClip(Shape)",;0.32;0.33;0.00;0.00
setColorModel,4,0.657287431,"Filters the information provided in the setColorModel method of the ImageConsumer interface. If model is null, this method clears the current ColorModel of this BufferedImageFilter. Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being filtered. Developers using this class to retrieve pixels from an image should avoid calling this method directly since that operation could result in problems with retrieving the requested pixels.",;java.awt.image.BufferedImageFilter.setColorModel(ColorModel);java.awt.image.ImageFilter.setColorModel(ColorModel);java.awt.image.PixelGrabber.setColorModel(ColorModel);java.awt.image.RGBImageFilter.setColorModel(ColorModel),;0.66;0.62;0.62;0.53
setComponent,4,0.25,Sets the component attribute.,";java.awt.dnd.DragGestureRecognizer.setComponent(Component);java.awt.dnd.DropTarget.setComponent(Component);javax.swing.JToolTip.setComponent(JComponent);javax.swing.text.StyleConstants.setComponent(MutableAttributeSet,Component)",;0.25;0.25;0.25;0.25
setComponentOrientation,4,0.5,Description copied from class:Component,;java.awt.Component.setComponentOrientation(ComponentOrientation);javax.swing.JMenu.setComponentOrientation(ComponentOrientation);javax.swing.JScrollPane.setComponentOrientation(ComponentOrientation);javax.swing.text.JTextComponent.setComponentOrientation(ComponentOrientation),;0.25;0.50;0.25;0.50
setCurrency,4,0.421616829,Sets the currency used by this number format when formatting currency values. This does not update the minimum or maximum number of fraction digits used by the number format. The currency is set by calling DecimalFormatSymbols.setCurrency on this number format's symbols.,";java.text.DecimalFormat.setCurrency(Currency);java.text.DecimalFormatSymbols.setCurrency(Currency);java.text.NumberFormat.setCurrency(Currency);javax.sql.rowset.RowSetMetaDataImpl.setCurrency(int,boolean)",;0.42;0.25;0.42;0.25
setDictionary,4,0.636218123,Sets the preset dictionary to the given array of bytes. Should be called when inflate() returns 0 and needsDictionary() returns true indicating that a preset dictionary is required. The method getAdler() can be used to get the Adler-32 value of the dictionary needed.,";java.util.zip.Deflater.setDictionary(byte[],int,int);java.util.zip.Deflater.setDictionary(byte[]);java.util.zip.Inflater.setDictionary(byte[],int,int);java.util.zip.Inflater.setDictionary(byte[])",;0.64;0.64;0.64;0.64
setDocument,4,0.789218865,"Associates the editor with a text document. The currently registered factory is used to build a view for the document, which gets displayed by the editor after revalidation. A PropertyChange event (""document"") is propagated to each listener.",;javax.swing.JFormattedTextField.setDocument(Document);javax.swing.JTextField.setDocument(Document);javax.swing.JTextPane.setDocument(Document);javax.swing.text.JTextComponent.setDocument(Document),;0.79;0.79;0.30;0.79
setDot,4,0.455812262,"Sets the caret position and mark to the specified position, with the specified bias. This implicitly sets the selection range to zero.",";javax.swing.text.DefaultCaret.setDot(int);javax.swing.text.DefaultCaret.setDot(int,Position.Bias);javax.swing.text.NavigationFilter.setDot(NavigationFilter.FilterBypass,int,Position.Bias);javax.swing.text.NavigationFilter.FilterBypass.setDot(int,Position.Bias)",;0.46;0.46;0.25;0.25
setDouble,4,0.300477648,Sets the designated parameter to the given double in the Java programming language. The driver converts this to an SQL DOUBLE value when it sends it to the database. The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this RowSet object's command when the method execute is called. Methods such as execute and populate must be provided in any class that extends this class and implements one or more of the standard JSR-114 RowSet interfaces. NOTE: JdbcRowSet does not require the populate method as it is undefined in this class. S,";java.lang.reflect.Array.setDouble(Object,int,double);java.lang.reflect.Field.setDouble(Object,double);javax.sql.rowset.BaseRowSet.setDouble(int,double);javax.sql.rowset.BaseRowSet.setDouble(String,double)",;0.27;0.27;0.30;0.26
setEnabledCipherSuites,4,0.598869275,"Sets the cipher suites enabled for use on this connection. Each cipher suite in the suites parameter must have been listed by getSupportedCipherSuites(), or the method will fail. Following a successful call to this method, only suites listed in the suites parameter are enabled for use. See getEnabledCipherSuites() for more information on why a specific ciphersuite may never be used on a connection.",;javax.naming.ldap.StartTlsResponse.setEnabledCipherSuites(String[]);javax.net.ssl.SSLEngine.setEnabledCipherSuites(String[]);javax.net.ssl.SSLServerSocket.setEnabledCipherSuites(String[]);javax.net.ssl.SSLSocket.setEnabledCipherSuites(String[]),;0.35;0.60;0.49;0.60
setEntityResolver,4,0.5,Set the entity resolver.,;javax.xml.parsers.DocumentBuilder.setEntityResolver(EntityResolver);org.xml.sax.helpers.ParserAdapter.setEntityResolver(EntityResolver);org.xml.sax.helpers.XMLFilterImpl.setEntityResolver(EntityResolver);org.xml.sax.helpers.XMLReaderAdapter.setEntityResolver(EntityResolver),;0.25;0.50;0.50;0.25
setExpandedState,4,0.75,Marks the path path expanded state to isExpanded.,";javax.swing.JTree.setExpandedState(TreePath,boolean);javax.swing.tree.AbstractLayoutCache.setExpandedState(TreePath,boolean);javax.swing.tree.FixedHeightLayoutCache.setExpandedState(TreePath,boolean);javax.swing.tree.VariableHeightLayoutCache.setExpandedState(TreePath,boolean)",;0.25;0.75;0.75;0.75
setFeature,4,0.295823179,"Set the value of a feature flag. Feature can be used to control the way a Validator parses schemas, although Validators are not required to recognize any specific feature names.The feature name is any fully-qualified URI. It is possible for a Validator to expose a feature value but to be unable to change the current value. Some feature values may be immutable or mutable only in specific contexts, such as before, during, or after a validation.",";javax.xml.validation.Validator.setFeature(String,boolean);javax.xml.xpath.XPathFactory.setFeature(String,boolean);org.xml.sax.helpers.ParserAdapter.setFeature(String,boolean);org.xml.sax.helpers.XMLFilterImpl.setFeature(String,boolean)",;0.30;0.28;0.25;0.25
setFloat,4,0.300979975,Sets the designated parameter to the given float in the Java programming language. The driver converts this to an SQL FLOAT value when it sends it to the database. The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this RowSet object's command when the method execute is called. Methods such as execute and populate must be provided in any class that extends this class and implements one or more of the standard JSR-114 RowSet interfaces. NOTE: JdbcRowSet does not require the populate method as it is undefined in this class.,";java.lang.reflect.Array.setFloat(Object,int,float);java.lang.reflect.Field.setFloat(Object,float);javax.sql.rowset.BaseRowSet.setFloat(int,float);javax.sql.rowset.BaseRowSet.setFloat(String,float)",;0.27;0.27;0.30;0.26
setForeground,4,0.371889976,Sets the foreground color of this component.,";java.awt.Component.setForeground(Color);javax.swing.JComponent.setForeground(Color);javax.swing.table.DefaultTableCellRenderer.setForeground(Color);javax.swing.text.StyleConstants.setForeground(MutableAttributeSet,Color)",;0.37;0.33;0.25;0.37
setFormat,4,0.562921022,Sets the format that dictates the legal values that can be edited and displayed. If you have used the nullary constructor the value of this property will be determined for the current locale by way of the NumberFormat.getNumberInstance() method.,";java.text.MessageFormat.setFormat(int,Format);javax.swing.text.DateFormatter.setFormat(DateFormat);javax.swing.text.InternationalFormatter.setFormat(Format);javax.swing.text.NumberFormatter.setFormat(Format)",;0.25;0.56;0.33;0.56
setHgap,4,0.67557318,Sets the horizontal gap between components.,;java.awt.BorderLayout.setHgap(int);java.awt.CardLayout.setHgap(int);java.awt.FlowLayout.setHgap(int);java.awt.GridLayout.setHgap(int),;0.68;0.68;0.48;0.58
setInt,4,0.296876243,Sets the designated parameter to an int in the Java programming language. The driver converts this to an SQL INTEGER value when it sends it to the database. The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this RowSet object's command when the method execute is called. Methods such as execute and populate must be provided in any class that extends this class and implements one or more of the standard JSR-114 RowSet interfaces. NOTE: JdbcRowSet does not require the populate method as it is undefined in this class.,";java.lang.reflect.Array.setInt(Object,int,int);java.lang.reflect.Field.setInt(Object,int);javax.sql.rowset.BaseRowSet.setInt(int,int);javax.sql.rowset.BaseRowSet.setInt(String,int)",;0.27;0.27;0.30;0.26
setLayer,4,0.307737593,"Convenience method for setting the layer attribute of this component. The method setLayer(Integer) should be used for layer values predefined in JLayeredPane. When using setLayer(int), care must be taken not to accidentally clash with those values.",";javax.swing.JInternalFrame.setLayer(Integer);javax.swing.JInternalFrame.setLayer(int);javax.swing.JLayeredPane.setLayer(Component,int);javax.swing.JLayeredPane.setLayer(Component,int,int)",;0.27;0.31;0.29;0.29
setLineNumber,4,0.25,Set the line number for this locator (1-based).,;java.io.LineNumberInputStream.setLineNumber(int);java.io.LineNumberReader.setLineNumber(int);javax.xml.bind.helpers.ValidationEventLocatorImpl.setLineNumber(int);org.xml.sax.helpers.LocatorImpl.setLineNumber(int),;0.00;0.25;0.25;0.25
setLong,4,0.300979975,Sets the designated parameter to the given long in the Java programming language. The driver converts this to an SQL BIGINT value when it sends it to the database. The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this RowSet object's command when the method execute is called. Methods such as execute and populate must be provided in any class that extends this class and implements one or more of the standard JSR-114 RowSet interfaces. NOTE: JdbcRowSet does not require the populate method as it is undefined in this class.,";java.lang.reflect.Array.setLong(Object,int,long);java.lang.reflect.Field.setLong(Object,long);javax.sql.rowset.BaseRowSet.setLong(int,long);javax.sql.rowset.BaseRowSet.setLong(String,long)",;0.27;0.27;0.30;0.26
setMargin,4,0.575592655,"Sets space for margin between the button's border and the label. Setting to null will cause the button to use the default margin. The button's default Border object will use this value to create the proper margin. However, if a non-default border is set on the button, it is that Border object's responsibility to create the appropriate margin space (else this property will effectively be ignored).",;javax.swing.AbstractButton.setMargin(Insets);javax.swing.JMenuBar.setMargin(Insets);javax.swing.JToolBar.setMargin(Insets);javax.swing.text.JTextComponent.setMargin(Insets),;0.58;0.28;0.56;0.53
setNCharacterStream,4,0.69592121,Sets the designated parameter to a Reader object. The Reader reads the data till end-of-file is reached. The driver does the necessary conversion from Java character format to the national character set in the database. Note: This stream object can either be a standard Java stream object or your own subclass that implements the standard interface. Note: Consult your JDBC driver documentation to determine if it might be more efficient to use a version of setNCharacterStream which takes a length parameter.,";javax.sql.rowset.BaseRowSet.setNCharacterStream(int,Reader);javax.sql.rowset.BaseRowSet.setNCharacterStream(int,Reader,long);javax.sql.rowset.BaseRowSet.setNCharacterStream(String,Reader,long);javax.sql.rowset.BaseRowSet.setNCharacterStream(String,Reader)",;0.67;0.63;0.63;0.70
setNode,4,0.265746437,"Set the node that will contain the result DOM tree.In practice, the node should be a Document node, a DocumentFragment node, or a Element node. In other words, a node that accepts children.An IllegalStateException is thrown if nextSibling is not null and node is not a parent of nextSibling. An IllegalStateException is thrown if node is null and nextSibling is not null.",;javax.xml.bind.helpers.ValidationEventLocatorImpl.setNode(Node);javax.xml.crypto.dsig.dom.DOMValidateContext.setNode(Node);javax.xml.transform.dom.DOMResult.setNode(Node);javax.xml.transform.dom.DOMSource.setNode(Node),;0.25;0.00;0.27;0.25
setNull,4,0.490333271,"Sets the designated parameter to SQL NULL. Although this version of the method setNull is intended for user-defined and REF parameters, this method may be used to set a null parameter for any JDBC type. The following are user-defined types: STRUCT, DISTINCT, and JAVA_OBJECT, and named array types. Note: To be portable, applications must give the SQL type code and the fully qualified SQL type name when specifying a NULL user-defined or REF parameter. In the case of a user-defined type, the name is the type name of the parameter itself. For a REF parameter, the name is the type name of the referenced type. If a JDBC technology-enabled driver does not need the type code or type name information, it may ignore it. If the parameter does not have a user-defined or REF type, the given typeName parameter is ignored. The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this RowSet object's command when the method execute is called. Methods such as execute and populate must be provided in any class that extends this class and implements one or more of the standard JSR-114 RowSet interfaces. NOTE: JdbcRowSet does not require the populate method as it is undefined in this class. Calls made to the method getParams after this version of setNull has been called will return an Object array containing the parameter values that have been set. In that array, the element that represents the values set with this method will itself be an array. The first element of that array is null. The second element is the value set for sqlType, and the third element is the value set for typeName. The parameter number is indicated by an element's position in the array returned by the method getParams, with the first element being the value for the first placeholder parameter, the second element being the value for the second placeholder parameter, and so on. In other words, if the second placeholder parameter is being set to null, the array containing it will be the second element in the array returned by getParams. Note that because the numbering of elements in an array starts at zero, the array element that corresponds to placeholder parameter number parameterIndex is parameterIndex -1.",";javax.sql.rowset.BaseRowSet.setNull(int,int);javax.sql.rowset.BaseRowSet.setNull(int,int,String);javax.sql.rowset.BaseRowSet.setNull(String,int);javax.sql.rowset.BaseRowSet.setNull(String,int,String)",;0.42;0.49;0.25;0.31
setParagraphAttributes,4,0.5,"Sets attributes for a paragraph. This method is thread safe, although most Swing methods are not. Please see Concurrency in Swing for more information.",";javax.swing.JTextPane.setParagraphAttributes(AttributeSet,boolean);javax.swing.text.DefaultStyledDocument.setParagraphAttributes(int,int,AttributeSet,boolean);javax.swing.text.StyledEditorKit.StyledTextAction.setParagraphAttributes(JEditorPane,AttributeSet,boolean);javax.swing.text.html.HTMLDocument.setParagraphAttributes(int,int,AttributeSet,boolean)",;0.48;0.50;0.48;0.50
setParameter,4,0.25,"Add a parameter for the transformation. Pass a qualified name as a two-part string, the namespace URI enclosed in curly braces ({}), followed by the local name. If the name has a null URL, the String only contain the local name. An application can safely check for a non-null URI by testing to see if the first character of the name is a '{' character.For example, if a URI and local name were obtained from an element defined with &lt;xyz:foo xmlns:xyz=""http://xyz.foo.com/yada/baz.html""/&gt;, then the qualified name would be ""{http://xyz.foo.com/yada/baz.html}foo"". Note that no prefix is used.",";java.security.Signature.setParameter(String,Object);java.security.Signature.setParameter(AlgorithmParameterSpec);javax.activation.MimeType.setParameter(String,String);javax.xml.transform.Transformer.setParameter(String,Object)",;0.00;0.25;0.25;0.25
setPopupVisible,4,0.439958921,Set the visibility of the popup,";javax.swing.JComboBox.setPopupVisible(boolean);javax.swing.plaf.ComboBoxUI.setPopupVisible(JComboBox,boolean);javax.swing.plaf.basic.BasicComboBoxUI.setPopupVisible(JComboBox,boolean);javax.swing.plaf.multi.MultiComboBoxUI.setPopupVisible(JComboBox,boolean)",;0.44;0.44;0.00;0.25
setRawResult,4,0.25,Description copied from class:ForkJoinTask,;java.util.concurrent.CountedCompleter.setRawResult(T);java.util.concurrent.ForkJoinTask.setRawResult(V);java.util.concurrent.RecursiveAction.setRawResult(Void);java.util.concurrent.RecursiveTask.setRawResult(V),;0.25;0.25;0.25;0.25
setReadOnly,4,0.25,Sets this RowSet object's readOnly property to the given boolean.,;java.io.File.setReadOnly();java.security.PermissionCollection.setReadOnly();javax.security.auth.Subject.setReadOnly();javax.sql.rowset.BaseRowSet.setReadOnly(boolean),;0.25;0.25;0.25;0.25
setResizable,4,0.399237295,Sets whether this frame is resizable by the user.,;java.awt.Dialog.setResizable(boolean);java.awt.Frame.setResizable(boolean);javax.swing.JInternalFrame.setResizable(boolean);javax.swing.table.TableColumn.setResizable(boolean),;0.40;0.40;0.25;0.25
setScale,4,0.56490228,"Returns a BigDecimal whose scale is the specified value, and whose unscaled value is determined by multiplying or dividing this BigDecimal's unscaled value by the appropriate power of ten to maintain its overall value. If the scale is reduced by the operation, the unscaled value must be divided (rather than multiplied), and the value may be changed; in this case, the specified rounding mode is applied to the division. Note that since BigDecimal objects are immutable, calls of this method do not result in the original object being modified, contrary to the usual convention of having methods named setX mutate field X. Instead, setScale returns an object with the proper scale; the returned object may or may not be newly allocated. The new setScale(int, RoundingMode) method should be used in preference to this legacy method.",";java.math.BigDecimal.setScale(int,RoundingMode);java.math.BigDecimal.setScale(int,int);java.math.BigDecimal.setScale(int);javax.sql.rowset.RowSetMetaDataImpl.setScale(int,int)",;0.56;0.56;0.44;0.25
setSeed,4,0.369766959,"Reseeds this random object, using the eight bytes contained in the given long seed. The given seed supplements, rather than replaces, the existing seed. Thus, repeated calls are guaranteed never to reduce randomness. This method is defined for compatibility with java.util.Random.",;java.security.SecureRandom.setSeed(byte[]);java.security.SecureRandom.setSeed(long);java.util.Random.setSeed(long);java.util.concurrent.ThreadLocalRandom.setSeed(long),;0.35;0.37;0.25;0.25
setShort,4,0.300979975,Sets the designated parameter to the given short in the Java programming language. The driver converts this to an SQL SMALLINT value when it sends it to the database. The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this RowSet object's command when the method execute is called. Methods such as execute and populate must be provided in any class that extends this class and implements one or more of the standard JSR-114 RowSet interfaces. NOTE: JdbcRowSet does not require the populate method as it is undefined in this class.,";java.lang.reflect.Array.setShort(Object,int,short);java.lang.reflect.Field.setShort(Object,short);javax.sql.rowset.BaseRowSet.setShort(int,short);javax.sql.rowset.BaseRowSet.setShort(String,short)",;0.27;0.27;0.30;0.26
setSource,4,0.25,Sets the source bean. The source bean is used as the source of events for the property changes. This source should be used for information purposes only and should not be modified by the PropertyEditor.,";java.awt.AWTEvent.setSource(Object);java.awt.image.renderable.ParameterBlock.setSource(Object,int);java.beans.PropertyEditorSupport.setSource(Object);javax.management.Notification.setSource(Object)",;0.25;0.25;0.25;0.00
setTimestamp,4,0.40835445,"Sets the designated parameter to the given java.sql.Timestamp object. The driver converts this to an SQL TIMESTAMP value when it sends it to the database. When the DBMS does not store time zone information, the driver will use the given Calendar object to construct the SQL TIMESTAMP value to send to the database. With a Calendar object, the driver can calculate the timestamp taking into account a custom time zone. If no Calendar object is specified, the driver uses the time zone of the Virtual Machine that is running the application. The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this RowSet object's command when the method execute is called. Methods such as execute and populate must be provided in any class that extends this class and implements one or more of the standard JSR-114 RowSet interfaces. NOTE: JdbcRowSet does not require the populate method as it is undefined in this class. Calls made to the method getParams after this version of setTimestamp has been called will return an array containing the parameter values that have been set. In that array, the element that represents the values set with this method will itself be an array. The first element of that array is the given java.sql.Timestamp object. The second element is the value set for cal. The parameter number is indicated by an element's position in the array returned by the method getParams, with the first element being the value for the first placeholder parameter, the second element being the value for the second placeholder parameter, and so on. In other words, if the timestamp being set is the value for the second placeholder parameter, the array containing it will be the second element in the array returned by getParams. Note that because the numbering of elements in an array starts at zero, the array element that corresponds to placeholder parameter number parameterIndex is parameterIndex -1.",";javax.sql.rowset.BaseRowSet.setTimestamp(int,Timestamp);javax.sql.rowset.BaseRowSet.setTimestamp(int,Timestamp,Calendar);javax.sql.rowset.BaseRowSet.setTimestamp(String,Timestamp);javax.sql.rowset.BaseRowSet.setTimestamp(String,Timestamp,Calendar)",;0.39;0.41;0.27;0.32
setTimeZone,4,0.289752301,"Sets the time zone parameter to the given zone. If no time zone parameter is given to this Caledar.Builder, the default TimeZone will be used in the build method.",;java.text.DateFormat.setTimeZone(TimeZone);java.util.Calendar.setTimeZone(TimeZone);java.util.Calendar.Builder.setTimeZone(TimeZone);java.util.GregorianCalendar.setTimeZone(TimeZone),;0.28;0.26;0.29;0.25
setTitle,4,0.410796755,Sets the title of the Dialog.,;java.awt.Dialog.setTitle(String);java.awt.Frame.setTitle(String);javax.swing.JInternalFrame.setTitle(String);javax.swing.border.TitledBorder.setTitle(String),;0.41;0.25;0.25;0.40
setToRotation,4,0.502110523,"Sets this transform to a rotation transformation that rotates coordinates around an anchor point according to a rotation vector. All coordinates rotate about the specified anchor coordinates by the same amount. The amount of rotation is such that coordinates along the former positive X axis will subsequently align with the vector pointing from the origin to the specified vector coordinates. If both vecx and vecy are 0.0, the transform is set to an identity transform. This operation is equivalent to calling: setToTranslation(Math.atan2(vecy, vecx), anchorx, anchory);",";java.awt.geom.AffineTransform.setToRotation(double);java.awt.geom.AffineTransform.setToRotation(double,double,double);java.awt.geom.AffineTransform.setToRotation(double,double);java.awt.geom.AffineTransform.setToRotation(double,double,double,double)",;0.34;0.38;0.50;0.50
setTransform,4,0.301489152,Sets this transform to the matrix specified by the 6 double precision values.,";java.awt.Graphics2D.setTransform(AffineTransform);java.awt.geom.AffineTransform.setTransform(AffineTransform);java.awt.geom.AffineTransform.setTransform(double,double,double,double,double,double);java.awt.image.renderable.RenderContext.setTransform(AffineTransform)",;0.25;0.30;0.30;0.25
setURL,4,0.25,Set the URL field on this event locator. Null values are allowed.,";java.net.URLStreamHandler.setURL(URL,String,String,int,String,String,String,String,String);java.net.URLStreamHandler.setURL(URL,String,String,int,String,String);javax.sql.rowset.BaseRowSet.setURL(int,URL);javax.xml.bind.helpers.ValidationEventLocatorImpl.setURL(URL)",;0.25;0.25;0.25;0.25
setVgap,4,0.67557318,Sets the vertical gap between components.,;java.awt.BorderLayout.setVgap(int);java.awt.CardLayout.setVgap(int);java.awt.FlowLayout.setVgap(int);java.awt.GridLayout.setVgap(int),;0.68;0.68;0.48;0.58
setVisible,4,0.335353347,"Shows or hides this component depending on the value of parameter b. This method changes layout-related information, and therefore, invalidates the component hierarchy.",;java.awt.Component.setVisible(boolean);java.awt.Dialog.setVisible(boolean);javax.swing.JComponent.setVisible(boolean);javax.swing.JPopupMenu.setVisible(boolean),;0.34;0.32;0.25;0.25
setYear,4,0.334282666,"Set year of XSD dateTime year field.Unset this field by invoking the setter with a parameter value of DatatypeConstants.FIELD_UNDEFINED.Note: if the absolute value of the year parameter is less than 10^9, the eon component of the XSD year field is set to null by this method.",;java.sql.Time.setYear(int);java.util.Date.setYear(int);javax.xml.datatype.XMLGregorianCalendar.setYear(BigInteger);javax.xml.datatype.XMLGregorianCalendar.setYear(int),;0.00;0.25;0.31;0.33
showConfirmDialog,4,0.518972605,"Brings up a dialog with a specified icon, where the number of choices is determined by the optionType parameter. The messageType parameter is primarily used to supply a default icon from the look and feel.",";javax.swing.JOptionPane.showConfirmDialog(Component,Object);javax.swing.JOptionPane.showConfirmDialog(Component,Object,String,int);javax.swing.JOptionPane.showConfirmDialog(Component,Object,String,int,int);javax.swing.JOptionPane.showConfirmDialog(Component,Object,String,int,int,Icon)",;0.32;0.39;0.51;0.52
showInternalConfirmDialog,4,0.530829756,"Brings up an internal dialog panel with a specified icon, where the number of choices is determined by the optionType parameter. The messageType parameter is primarily used to supply a default icon from the look and feel.",";javax.swing.JOptionPane.showInternalConfirmDialog(Component,Object);javax.swing.JOptionPane.showInternalConfirmDialog(Component,Object,String,int);javax.swing.JOptionPane.showInternalConfirmDialog(Component,Object,String,int,int);javax.swing.JOptionPane.showInternalConfirmDialog(Component,Object,String,int,int,Icon)",;0.30;0.36;0.52;0.53
shutdownInput,4,0.468323729,"Places the input stream for this socket at ""end of stream"". Any data sent to the input stream side of the socket is acknowledged and then silently discarded. If you read from a socket input stream after invoking this method on the socket, the stream's available method will return 0, and its read methods will return -1 (end of stream).",;java.net.Socket.shutdownInput();java.net.SocketImpl.shutdownInput();java.nio.channels.AsynchronousSocketChannel.shutdownInput();java.nio.channels.SocketChannel.shutdownInput(),;0.47;0.47;0.38;0.35
shutdownNow,4,0.46623747,"Attempts to stop all actively executing tasks, halts the processing of waiting tasks, and returns a list of the tasks that were awaiting execution. These tasks are drained (removed) from the task queue upon return from this method. This method does not wait for actively executing tasks to terminate. Use awaitTermination to do that. There are no guarantees beyond best-effort attempts to stop processing actively executing tasks. This implementation cancels tasks via Thread.interrupt(), so any task that fails to respond to interrupts may never terminate.",;java.nio.channels.AsynchronousChannelGroup.shutdownNow();java.util.concurrent.ForkJoinPool.shutdownNow();java.util.concurrent.ScheduledThreadPoolExecutor.shutdownNow();java.util.concurrent.ThreadPoolExecutor.shutdownNow(),;0.27;0.25;0.46;0.47
shutdownOutput,4,0.5,"Disables the output stream for this socket. For a TCP socket, any previously written data will be sent followed by TCP's normal connection termination sequence. If you write to a socket output stream after invoking shutdownOutput() on the socket, the stream will throw an IOException.",;java.net.Socket.shutdownOutput();java.net.SocketImpl.shutdownOutput();java.nio.channels.AsynchronousSocketChannel.shutdownOutput();java.nio.channels.SocketChannel.shutdownOutput(),;0.50;0.50;0.43;0.43
signum,4,0.530295127,Returns the signum function of the specified long value. (The return value is -1 if the specified value is negative; 0 if the specified value is zero; and 1 if the specified value is positive.),;java.lang.Integer.signum(int);java.lang.Long.signum(long);java.math.BigDecimal.signum();java.math.BigInteger.signum(),;0.53;0.53;0.46;0.46
spliteratorUnknownSize,4,0.931542027,"Creates a Spliterator using a given Iterator as the source of elements, with no initial size estimate. The spliterator is not late-binding, inherits the fail-fast properties of the iterator, and implements trySplit to permit limited parallelism. Traversal of elements should be accomplished through the spliterator. The behaviour of splitting and traversal is undefined if the iterator is operated on after the spliterator is returned.",";java.util.Spliterators.spliteratorUnknownSize(Iterator&lt;?,int);java.util.Spliterators.spliteratorUnknownSize(PrimitiveIterator.OfInt,int);java.util.Spliterators.spliteratorUnknownSize(PrimitiveIterator.OfLong,int);java.util.Spliterators.spliteratorUnknownSize(PrimitiveIterator.OfDouble,int)",;0.93;0.93;0.93;0.93
startEditingAtPath,4,0.5,Selects the last item in path and tries to edit it. Editing will fail if the CellEditor won't allow it for the selected item.,";javax.swing.JTree.startEditingAtPath(TreePath);javax.swing.plaf.TreeUI.startEditingAtPath(JTree,TreePath);javax.swing.plaf.basic.BasicTreeUI.startEditingAtPath(JTree,TreePath);javax.swing.plaf.multi.MultiTreeUI.startEditingAtPath(JTree,TreePath)",;0.25;0.50;0.50;0.25
stopEditing,4,0.53925541,Stops the current editing session. This has no effect if the tree isn't being edited. Returns true if the editor allows the editing session to stop.,;javax.swing.JTree.stopEditing();javax.swing.plaf.TreeUI.stopEditing(JTree);javax.swing.plaf.basic.BasicTreeUI.stopEditing(JTree);javax.swing.plaf.multi.MultiTreeUI.stopEditing(JTree),;0.35;0.54;0.54;0.25
store,4,0.25,"Captures the current state of this MBean instance and writes it out to the persistent store. The state stored could include attribute and operation values.If the implementation of this class does not support persistence, an MBeanException wrapping a ServiceNotFoundException is thrown.Persistence policy from the MBean and attribute descriptor is used to guide execution of this method. The MBean should be stored if 'persistPolicy' field is: != ""never"" = ""always"" = ""onTimer"" and now &gt; 'lastPersistTime' + 'persistPeriod' = ""NoMoreOftenThan"" and now &gt; 'lastPersistTime' + 'persistPeriod' = ""onUnregister"" Do not store the MBean if 'persistPolicy' field is: = ""never"" = ""onUpdate"" = ""onTimer"" &amp;&amp; now &lt; 'lastPersistTime' + 'persistPeriod'",";java.security.KeyStore.store(OutputStream,char[]);java.security.KeyStore.store(KeyStore.LoadStoreParameter);java.util.Properties.store(Writer,String);javax.management.modelmbean.RequiredModelMBean.store()",;0.25;0.25;0.25;0.25
stringToValue,4,0.264176236,"Parses the text, returning the appropriate Object representation of the String value. This strips the literal characters as necessary and invokes supers stringToValue, so that if you have specified a value class (setValueClass) an instance of it will be created. This will throw a ParseException if the value does not match the current mask. Refer to setValueContainsLiteralCharacters(boolean) for details on how literals are treated.",;javax.swing.JFormattedTextField.AbstractFormatter.stringToValue(String);javax.swing.text.DefaultFormatter.stringToValue(String);javax.swing.text.InternationalFormatter.stringToValue(String);javax.swing.text.MaskFormatter.stringToValue(String),;0.25;0.25;0.25;0.26
subList,4,0.593050845,"Returns a view of the portion of this list between the specified fromIndex, inclusive, and toIndex, exclusive. (If fromIndex and toIndex are equal, the returned list is empty.) The returned list is backed by this list, so non-structural changes in the returned list are reflected in this list, and vice-versa. The returned list supports all of the optional list operations. This method eliminates the need for explicit range operations (of the sort that commonly exist for arrays). Any operation that expects a list can be used as a range operation by passing a subList view instead of a whole list. For example, the following idiom removes a range of elements from a list: list.subList(from, to).clear(); Similar idioms may be constructed for indexOf(Object) and lastIndexOf(Object), and all of the algorithms in the Collections class can be applied to a subList. The semantics of the list returned by this method become undefined if the backing list (i.e., this list) is structurally modified in any way other than via the returned list. (Structural modifications are those that change the size of this list, or otherwise perturb it in such a fashion that iterations in progress may yield incorrect results.)",";java.util.AbstractList.subList(int,int);java.util.ArrayList.subList(int,int);java.util.Vector.subList(int,int);java.util.concurrent.CopyOnWriteArrayList.subList(int,int)",;0.50;0.59;0.56;0.29
subMap,4,1,Description copied from interface:NavigableMap,";java.util.TreeMap.subMap(K,boolean,K,boolean);java.util.TreeMap.subMap(K,K);java.util.concurrent.ConcurrentSkipListMap.subMap(K,boolean,K,boolean);java.util.concurrent.ConcurrentSkipListMap.subMap(K,K)",;1.00;1.00;1.00;1.00
subSet,4,1,Description copied from interface:NavigableSet,";java.util.TreeSet.subSet(E,boolean,E,boolean);java.util.TreeSet.subSet(E,E);java.util.concurrent.ConcurrentSkipListSet.subSet(E,boolean,E,boolean);java.util.concurrent.ConcurrentSkipListSet.subSet(E,E)",;1.00;1.00;1.00;1.00
subtractExact,4,0.925366567,"Returns the difference of the arguments, throwing an exception if the result overflows a long.",";java.lang.Math.subtractExact(int,int);java.lang.Math.subtractExact(long,long);java.lang.StrictMath.subtractExact(int,int);java.lang.StrictMath.subtractExact(long,long)",;0.93;0.93;0.93;0.93
sync,4,0.25,"Ensures that future reads from this preference node and its descendants reflect any changes that were committed to the persistent store (from any VM) prior to the sync invocation. As a side-effect, forces any changes in the contents of this preference node and its descendants to the persistent store, as if the flush method had been invoked on this node.",;java.awt.Toolkit.sync();java.io.FileDescriptor.sync();java.util.prefs.AbstractPreferences.sync();java.util.prefs.Preferences.sync(),;0.25;0.25;0.25;0.25
tailMap,4,1,Description copied from interface:NavigableMap,";java.util.TreeMap.tailMap(K,boolean);java.util.TreeMap.tailMap(K);java.util.concurrent.ConcurrentSkipListMap.tailMap(K,boolean);java.util.concurrent.ConcurrentSkipListMap.tailMap(K)",;1.00;1.00;1.00;1.00
tailSet,4,1,Description copied from interface:NavigableSet,";java.util.TreeSet.tailSet(E,boolean);java.util.TreeSet.tailSet(E);java.util.concurrent.ConcurrentSkipListSet.tailSet(E,boolean);java.util.concurrent.ConcurrentSkipListSet.tailSet(E)",;1.00;1.00;1.00;1.00
toByteArray,4,0.25,"Returns a new byte array containing all the bits in this bit set. More precisely, if byte[] bytes = s.toByteArray();then bytes.length == (s.length()+7)/8 and s.get(n) == ((bytes[n/8] &amp; (1&lt;&lt;(n%8))) != 0)for all n &lt; 8 * bytes.length.",;java.io.ByteArrayOutputStream.toByteArray();java.math.BigInteger.toByteArray();java.text.CollationKey.toByteArray();java.util.BitSet.toByteArray(),;0.25;0.25;0.25;0.25
toLocalDate,4,0.75,"Gets the LocalDate part of this date-time. This returns a LocalDate with the same year, month and day as this date-time.",;java.sql.Date.toLocalDate();java.time.LocalDateTime.toLocalDate();java.time.OffsetDateTime.toLocalDate();java.time.ZonedDateTime.toLocalDate(),;0.25;0.75;0.75;0.75
toLowerCase,4,0.442990896,"Converts the character argument to lowercase using case mapping information from the UnicodeData file. Note that Character.isLowerCase(Character.toLowerCase(ch)) does not always return true for some ranges of characters, particularly those that are symbols or ideographs. In general, String.toLowerCase() should be used to map characters to lowercase. String case mapping methods have several benefits over Character case mapping methods. String case mapping methods can perform locale-sensitive mappings, context-sensitive mappings, and 1:M character mappings, whereas the Character case mapping methods cannot. Note: This method cannot handle supplementary characters. To support all Unicode characters, including supplementary characters, use the toLowerCase(int) method.",;java.lang.Character.toLowerCase(char);java.lang.Character.toLowerCase(int);java.lang.String.toLowerCase(Locale);java.lang.String.toLowerCase(),;0.44;0.44;0.29;0.29
toPattern,4,0.275830227,Returns a pattern representing the current state of the message format. The string is constructed from internal information and therefore does not necessarily equal the previously applied pattern.,;java.text.ChoiceFormat.toPattern();java.text.DecimalFormat.toPattern();java.text.MessageFormat.toPattern();java.text.SimpleDateFormat.toPattern(),;0.00;0.27;0.28;0.25
toUnsignedString,4,0.542938923,"Returns a string representation of the first argument as an unsigned integer value in the radix specified by the second argument. If the radix is smaller than Character.MIN_RADIX or larger than Character.MAX_RADIX, then the radix 10 is used instead. Note that since the first argument is treated as an unsigned value, no leading sign character is printed. If the magnitude is zero, it is represented by a single zero character '0' ('\u0030'); otherwise, the first character of the representation of the magnitude will not be the zero character. The behavior of radixes and the characters used as digits are the same as toString.",";java.lang.Integer.toUnsignedString(int,int);java.lang.Integer.toUnsignedString(int);java.lang.Long.toUnsignedString(long,int);java.lang.Long.toUnsignedString(long)",;0.54;0.51;0.54;0.51
toUpperCase,4,0.442990896,"Converts the character argument to uppercase using case mapping information from the UnicodeData file. Note that Character.isUpperCase(Character.toUpperCase(ch)) does not always return true for some ranges of characters, particularly those that are symbols or ideographs. In general, String.toUpperCase() should be used to map characters to uppercase. String case mapping methods have several benefits over Character case mapping methods. String case mapping methods can perform locale-sensitive mappings, context-sensitive mappings, and 1:M character mappings, whereas the Character case mapping methods cannot. Note: This method cannot handle supplementary characters. To support all Unicode characters, including supplementary characters, use the toUpperCase(int) method.",;java.lang.Character.toUpperCase(char);java.lang.Character.toUpperCase(int);java.lang.String.toUpperCase(Locale);java.lang.String.toUpperCase(),;0.44;0.44;0.29;0.29
truncate,4,0.429014553,"Truncates this channel's file to the given size. If the given size is less than the file's current size then the file is truncated, discarding any bytes beyond the new end of the file. If the given size is greater than or equal to the file's current size then the file is not modified. In either case, if this channel's file position is greater than the given size then it is set to that size.",;java.nio.channels.AsynchronousFileChannel.truncate(long);java.nio.channels.FileChannel.truncate(long);javax.sql.rowset.serial.SerialBlob.truncate(long);javax.sql.rowset.serial.SerialClob.truncate(long),;0.42;0.43;0.25;0.25
tryAcquire,4,0.5,"Attempts to acquire in exclusive mode. This method should query if the state of the object permits it to be acquired in the exclusive mode, and if so to acquire it. This method is always invoked by the thread performing acquire. If this method reports failure, the acquire method may queue the thread, if it is not already queued, until it is signalled by a release from some other thread. This can be used to implement method Lock.tryLock(). The default implementation throws UnsupportedOperationException.",;java.util.concurrent.Semaphore.tryAcquire();java.util.concurrent.Semaphore.tryAcquire(int);java.util.concurrent.locks.AbstractQueuedLongSynchronizer.tryAcquire(long);java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquire(int),;0.43;0.43;0.50;0.50
unexportObject,4,0.496502635,"Removes the remote object, obj, from the RMI runtime. If successful, the object can no longer accept incoming RMI calls. If the force parameter is true, the object is forcibly unexported even if there are pending calls to the remote object or the remote object still has calls in progress. If the force parameter is false, the object is only unexported if there are no pending or in progress calls to the object.",";java.rmi.activation.Activatable.unexportObject(Remote,boolean);java.rmi.server.UnicastRemoteObject.unexportObject(Remote,boolean);javax.rmi.PortableRemoteObject.unexportObject(Remote);javax.rmi.CORBA.Util.unexportObject(Remote)",;0.50;0.50;0.25;0.25
uninitialize,4,0.544558517,"Uninitializes the look and feel. While this method is public, it should only be invoked by the UIManager when the look and feel is uninstalled. For example, UIManager.setLookAndFeel invokes this when the look and feel is changed. Subclasses may choose to free up some resources here.",;javax.swing.LookAndFeel.uninitialize();javax.swing.plaf.basic.BasicLookAndFeel.uninitialize();javax.swing.plaf.nimbus.NimbusLookAndFeel.uninitialize();javax.swing.plaf.synth.SynthLookAndFeel.uninitialize(),;0.54;0.54;0.51;0.51
uninstallComponents,4,0.25,Uninstalls the renderer pane.,;javax.swing.plaf.basic.BasicComboBoxUI.uninstallComponents();javax.swing.plaf.basic.BasicLabelUI.uninstallComponents(JLabel);javax.swing.plaf.basic.BasicTabbedPaneUI.uninstallComponents();javax.swing.plaf.basic.BasicTreeUI.uninstallComponents(),;0.25;0.00;0.25;0.25
unlock,4,0.559870165,Attempts to release this lock. If the current thread is the holder of this lock then the hold count is decremented. If the hold count is now zero then the lock is released. If the current thread is not the holder of this lock then IllegalMonitorStateException is thrown.,;java.util.concurrent.locks.ReentrantLock.unlock();java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.unlock();java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.unlock();java.util.concurrent.locks.StampedLock.unlock(long),;0.56;0.34;0.56;0.25
valueToString,4,0.331497234,Returns a String representation of the Object value based on the mask. Refer to setValueContainsLiteralCharacters(boolean) for details on how literals are treated.,;javax.swing.JFormattedTextField.AbstractFormatter.valueToString(Object);javax.swing.text.DefaultFormatter.valueToString(Object);javax.swing.text.InternationalFormatter.valueToString(Object);javax.swing.text.MaskFormatter.valueToString(Object),;0.25;0.25;0.33;0.33
visitExecutable,4,0.544392376,Visits an executable element. This implementation calls defaultAction.,";javax.lang.model.util.ElementKindVisitor6.visitExecutable(ExecutableElement,P);javax.lang.model.util.ElementScanner6.visitExecutable(ExecutableElement,P);javax.lang.model.util.SimpleElementVisitor6.visitExecutable(ExecutableElement,P);javax.lang.model.util.SimpleTypeVisitor6.visitExecutable(ExecutableType,P)",;0.31;0.42;0.54;0.38
visitIntersection,4,0.5,This implementation visits an IntersectionType by calling defaultAction.,";javax.lang.model.util.AbstractTypeVisitor6.visitIntersection(IntersectionType,P);javax.lang.model.util.AbstractTypeVisitor8.visitIntersection(IntersectionType,P);javax.lang.model.util.SimpleTypeVisitor8.visitIntersection(IntersectionType,P);javax.lang.model.util.TypeKindVisitor8.visitIntersection(IntersectionType,P)",;0.25;0.25;0.50;0.50
visitType,4,0.487665476,Visits a type element. This implementation calls defaultAction.,";javax.lang.model.util.ElementKindVisitor6.visitType(TypeElement,P);javax.lang.model.util.ElementScanner6.visitType(TypeElement,P);javax.lang.model.util.SimpleAnnotationValueVisitor6.visitType(TypeMirror,P);javax.lang.model.util.SimpleElementVisitor6.visitType(TypeElement,P)",;0.31;0.40;0.33;0.49
visitUnion,4,0.5,This implementation visits a UnionType by calling defaultAction.,";javax.lang.model.util.AbstractTypeVisitor6.visitUnion(UnionType,P);javax.lang.model.util.AbstractTypeVisitor7.visitUnion(UnionType,P);javax.lang.model.util.SimpleTypeVisitor7.visitUnion(UnionType,P);javax.lang.model.util.TypeKindVisitor7.visitUnion(UnionType,P)",;0.25;0.25;0.50;0.50
withDayOfYear,4,0.592756337,"Returns a copy of this LocalDateTime with the day-of-year altered. If the resulting date-time is invalid, an exception is thrown. This instance is immutable and unaffected by this method call.",;java.time.LocalDate.withDayOfYear(int);java.time.LocalDateTime.withDayOfYear(int);java.time.OffsetDateTime.withDayOfYear(int);java.time.ZonedDateTime.withDayOfYear(int),;0.59;0.59;0.53;0.38
writeAttributes,4,0.25,"Writes out all the attributes for the following types: StyleConstants.ParagraphConstants, StyleConstants.CharacterConstants, StyleConstants.FontConstants, StyleConstants.ColorConstants. The attribute name and value are separated by a colon. Each pair is separated by a semicolon.",";javax.swing.text.AbstractWriter.writeAttributes(AttributeSet);javax.swing.text.StyleContext.writeAttributes(ObjectOutputStream,AttributeSet);javax.swing.text.html.HTMLWriter.writeAttributes(AttributeSet);javax.swing.text.html.MinimalHTMLWriter.writeAttributes(AttributeSet)",;0.25;0.25;0.25;0.25
writeChar,4,0.318762001,"Writes a char to the file as a two-byte value, high byte first. The write starts at the current position of the file pointer.",;java.io.DataOutputStream.writeChar(int);java.io.ObjectOutputStream.writeChar(int);java.io.RandomAccessFile.writeChar(int);javax.imageio.stream.ImageOutputStreamImpl.writeChar(int),;0.32;0.25;0.32;0.25
writeUTF,4,0.390652894,"Writes a string to the underlying output stream using modified UTF-8 encoding in a machine-independent manner. First, two bytes are written to the output stream as if by the writeShort method giving the number of bytes to follow. This value is the number of bytes actually written out, not the length of the string. Following the length, each character of the string is output, in sequence, using the modified UTF-8 encoding for the character. If no exception is thrown, the counter written is incremented by the total number of bytes written to the output stream. This will be at least two plus the length of str, and at most two plus thrice the length of str.",;java.io.DataOutputStream.writeUTF(String);java.io.ObjectOutputStream.writeUTF(String);java.io.RandomAccessFile.writeUTF(String);javax.imageio.stream.ImageOutputStreamImpl.writeUTF(String),;0.39;0.25;0.38;0.25
_all_interfaces,5,0.8,Description copied from class:Servant,";org.omg.CosNaming.NamingContextExtPOA._all_interfaces(POA,byte[]);org.omg.CosNaming.NamingContextPOA._all_interfaces(POA,byte[]);org.omg.PortableServer.Servant._all_interfaces(POA,byte[]);org.omg.PortableServer.ServantActivatorPOA._all_interfaces(POA,byte[]);org.omg.PortableServer.ServantLocatorPOA._all_interfaces(POA,byte[])",;0.80;0.80;0.20;0.80;0.80
addColumn,5,0.458629251,"Adds a column to the model. The new column will have the identifier columnName, which may be null. columnData is the optional vector of data for the column. If it is null the column is filled with null values. Otherwise, the new data will be added to model starting with the first element going to row 0, etc. This method will send a tableChanged notification message to all the listeners.",";javax.swing.JTable.addColumn(TableColumn);javax.swing.table.DefaultTableColumnModel.addColumn(TableColumn);javax.swing.table.DefaultTableModel.addColumn(Object);javax.swing.table.DefaultTableModel.addColumn(Object,Vector);javax.swing.table.DefaultTableModel.addColumn(Object,Object[])",;0.21;0.20;0.35;0.46;0.45
addElement,5,0.364614493,Adds a new element type to this metadata document format with a child policy of CHILD_POLICY_REPEAT.,";java.util.Vector.addElement(E);javax.imageio.metadata.IIOMetadataFormatImpl.addElement(String,String,int);javax.imageio.metadata.IIOMetadataFormatImpl.addElement(String,String,int,int);javax.swing.DefaultComboBoxModel.addElement(E);javax.swing.DefaultListModel.addElement(E)",;0.23;0.36;0.36;0.20;0.20
addSeparator,5,0.417272753,Appends a new separator to the end of the menu.,;java.awt.Menu.addSeparator();javax.swing.JMenu.addSeparator();javax.swing.JPopupMenu.addSeparator();javax.swing.JToolBar.addSeparator();javax.swing.JToolBar.addSeparator(Dimension),;0.20;0.42;0.39;0.34;0.38
build,5,0.2,"Builds a W3CEndpointReference from the accumulated properties set on this W3CEndpointReferenceBuilder instance. This method can be used to create a W3CEndpointReference for any endpoint by specifying the address property along with any other desired properties. This method can also be used to create a W3CEndpointReference for an endpoint that is published by the same Java EE application. This method can automatically determine the address of an endpoint published by the same Java EE application that is identified by the serviceName and endpointName properties. If the address is null and the serviceName and endpointName do not identify an endpoint published by the same Java EE application, a java.lang.IllegalStateException MUST be thrown.",;java.nio.file.attribute.AclEntry.Builder.build();java.security.cert.CertPathBuilder.build(CertPathParameters);java.util.Calendar.Builder.build();java.util.Locale.Builder.build();javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder.build(),;0.20;0.20;0.20;0.20;0.20
capacity,5,0.445733444,"Returns the current capacity. The capacity is the amount of storage available for newly inserted characters, beyond which an allocation will occur.",;java.lang.StringBuffer.capacity();java.lang.StringBuilder.capacity();java.nio.Buffer.capacity();java.util.Vector.capacity();javax.swing.DefaultListModel.capacity(),;0.45;0.45;0.20;0.38;0.38
characters,5,0.2,Adapt a SAX2 characters event.,";org.xml.sax.HandlerBase.characters(char[],int,int);org.xml.sax.helpers.DefaultHandler.characters(char[],int,int);org.xml.sax.helpers.ParserAdapter.characters(char[],int,int);org.xml.sax.helpers.XMLFilterImpl.characters(char[],int,int);org.xml.sax.helpers.XMLReaderAdapter.characters(char[],int,int)",;0.00;0.20;0.20;0.20;0.20
charAt,5,0.598481717,"Returns the char value in this sequence at the specified index. The first char value is at index 0, the next at index 1, and so on, as in array indexing. The index argument must be greater than or equal to 0, and less than the length of this sequence. If the char value specified by the index is a surrogate, the surrogate value is returned.",;java.lang.String.charAt(int);java.lang.StringBuffer.charAt(int);java.lang.StringBuilder.charAt(int);java.nio.CharBuffer.charAt(int);javax.swing.text.Segment.charAt(int),;0.59;0.60;0.60;0.20;0.55
codePointCount,5,0.793165574,Returns the number of Unicode code points in the specified text range of this sequence. The text range begins at the specified beginIndex and extends to the char at index endIndex - 1. Thus the length (in chars) of the text range is endIndex-beginIndex. Unpaired surrogates within this sequence count as one code point each.,";java.lang.Character.codePointCount(CharSequence,int,int);java.lang.Character.codePointCount(char[],int,int);java.lang.String.codePointCount(int,int);java.lang.StringBuffer.codePointCount(int,int);java.lang.StringBuilder.codePointCount(int,int)",;0.76;0.43;0.78;0.79;0.79
computeIfAbsent,5,0.4,Description copied from interface:Map,";java.security.Provider.computeIfAbsent(Object,Function&lt;?,?);java.util.HashMap.computeIfAbsent(K,Function&lt;?,?);java.util.Hashtable.computeIfAbsent(K,Function&lt;?,?);java.util.concurrent.ConcurrentHashMap.computeIfAbsent(K,Function&lt;?,?);java.util.concurrent.ConcurrentSkipListMap.computeIfAbsent(K,Function&lt;?,?)",;0.34;0.40;0.40;0.34;0.32
computeIfPresent,5,0.4,Description copied from interface:Map,";java.security.Provider.computeIfPresent(Object,BiFunction&lt;?,?,?);java.util.HashMap.computeIfPresent(K,BiFunction&lt;?,?,?);java.util.Hashtable.computeIfPresent(K,BiFunction&lt;?,?,?);java.util.concurrent.ConcurrentHashMap.computeIfPresent(K,BiFunction&lt;?,?,?);java.util.concurrent.ConcurrentSkipListMap.computeIfPresent(K,BiFunction&lt;?,?,?)",;0.32;0.40;0.40;0.33;0.29
createCompatibleDestImage,5,0.660809451,"Creates a zeroed destination image with the correct size and number of bands. If destCM is null, an appropriate ColorModel will be used.",";java.awt.image.AffineTransformOp.createCompatibleDestImage(BufferedImage,ColorModel);java.awt.image.ColorConvertOp.createCompatibleDestImage(BufferedImage,ColorModel);java.awt.image.ConvolveOp.createCompatibleDestImage(BufferedImage,ColorModel);java.awt.image.LookupOp.createCompatibleDestImage(BufferedImage,ColorModel);java.awt.image.RescaleOp.createCompatibleDestImage(BufferedImage,ColorModel)",;0.43;0.58;0.66;0.66;0.55
createDataBuffer,5,0.562704232,"Creates a DataBuffer that corresponds to this BandedSampleModel, The DataBuffer's data type, number of banks, and size will be consistent with this BandedSampleModel.",;java.awt.image.BandedSampleModel.createDataBuffer();java.awt.image.ComponentSampleModel.createDataBuffer();java.awt.image.MultiPixelPackedSampleModel.createDataBuffer();java.awt.image.SampleModel.createDataBuffer();java.awt.image.SinglePixelPackedSampleModel.createDataBuffer(),;0.56;0.54;0.50;0.41;0.53
createDialog,5,0.402271342,"Creates and returns a new JDialog wrapping this centered on the parentComponent in the parentComponent's frame. title is the title of the returned dialog. The returned JDialog will not be resizable by the user, however programs can invoke setResizable on the JDialog instance to change this property. The returned JDialog will be set up such that once it is closed, or the user clicks on one of the buttons, the optionpane's value property will be set accordingly and the dialog will be closed. Each time the dialog is made visible, it will reset the option pane's value property to JOptionPane.UNINITIALIZED_VALUE to ensure the user's subsequent action closes the dialog properly.",";java.awt.Toolkit.createDialog(Dialog);javax.swing.JColorChooser.createDialog(Component,String,boolean,JColorChooser,ActionListener,ActionListener);javax.swing.JFileChooser.createDialog(Component);javax.swing.JOptionPane.createDialog(Component,String);javax.swing.JOptionPane.createDialog(String)",;0.20;0.25;0.24;0.40;0.39
createEditor,5,0.4,"This method is called by installUI to get the editor component of the JSpinner. By default it just returns JSpinner.getEditor(). Subclasses can override createEditor to return a component that contains the spinner's editor or null, if they're going to handle adding the editor to the JSpinner in an installUI override. Typically this method would be overridden to wrap the editor with a container with a custom border, since one can't assume that the editors border can be set directly. The replaceEditor method is called when the spinners editor is changed with JSpinner.setEditor. If you've overriden this method, then you'll probably want to override replaceEditor as well.",;javax.swing.plaf.basic.BasicComboBoxUI.createEditor();javax.swing.plaf.basic.BasicSpinnerUI.createEditor();javax.swing.plaf.metal.MetalComboBoxUI.createEditor();javax.swing.plaf.synth.SynthComboBoxUI.createEditor();javax.swing.plaf.synth.SynthSpinnerUI.createEditor(),;0.40;0.40;0.20;0.40;0.40
createElement,5,0.614825125,"Creates a SOAPElement object initialized with the given QName object. The concrete type of the return value will depend on the name given to the new SOAPElement. For instance, a new SOAPElement with the name ""{http://www.w3.org/2003/05/soap-envelope}Envelope"" would cause a SOAPEnvelope that supports SOAP 1.2 behavior to be created.",";javax.xml.soap.SOAPFactory.createElement(Element);javax.xml.soap.SOAPFactory.createElement(Name);javax.xml.soap.SOAPFactory.createElement(QName);javax.xml.soap.SOAPFactory.createElement(String);javax.xml.soap.SOAPFactory.createElement(String,String,String)",;0.32;0.61;0.61;0.20;0.58
createRootPane,5,0.858143074,Called by the constructor methods to create the default rootPane.,;javax.swing.JApplet.createRootPane();javax.swing.JDialog.createRootPane();javax.swing.JFrame.createRootPane();javax.swing.JInternalFrame.createRootPane();javax.swing.JWindow.createRootPane(),;0.86;0.86;0.86;0.44;0.86
current,5,0.2,Gets the character at the current position (as returned by getIndex()).,;java.text.BreakIterator.current();java.text.StringCharacterIterator.current();java.util.concurrent.ThreadLocalRandom.current();javax.swing.text.ElementIterator.current();javax.swing.text.Segment.current(),;0.20;0.20;0.20;0.20;0.20
dateEpochDay,5,0.68337649,Obtains a local date in the Minguo calendar system from the epoch-day.,;java.time.chrono.HijrahChronology.dateEpochDay(long);java.time.chrono.IsoChronology.dateEpochDay(long);java.time.chrono.JapaneseChronology.dateEpochDay(long);java.time.chrono.MinguoChronology.dateEpochDay(long);java.time.chrono.ThaiBuddhistChronology.dateEpochDay(long),;0.68;0.35;0.68;0.68;0.66
deinstall,5,0.769760844,Called when the kit is being removed from the JEditorPane. This is used to unregister any listeners that were attached.,;javax.swing.text.DefaultCaret.deinstall(JTextComponent);javax.swing.text.DefaultHighlighter.deinstall(JTextComponent);javax.swing.text.EditorKit.deinstall(JEditorPane);javax.swing.text.StyledEditorKit.deinstall(JEditorPane);javax.swing.text.html.HTMLEditorKit.deinstall(JEditorPane),;0.67;0.43;0.77;0.77;0.77
disconnect,5,0.212092764,"Disconnects this channel's socket. The channel's socket is configured so that it can receive datagrams from, and sends datagrams to, any remote address so long as the security manager, if installed, permits it. This method may be invoked at any time. It will not have any effect on read or write operations that are already in progress at the moment that it is invoked. If this channel's socket is not connected, or if the channel is closed, then invoking this method has no effect.",;java.net.DatagramSocket.disconnect();java.net.DatagramSocketImpl.disconnect();java.net.HttpURLConnection.disconnect();java.nio.channels.DatagramChannel.disconnect();org.omg.CORBA.ORB.disconnect(Object),;0.20;0.20;0.20;0.21;0.20
doLayout,5,0.233535699,"Causes this container to lay out its components. Most programs should not call this method directly, but should invoke the validate method instead.",;java.awt.Component.doLayout();java.awt.Container.doLayout();java.awt.ScrollPane.doLayout();javax.swing.JLayer.doLayout();javax.swing.plaf.LayerUI.doLayout(JLayer&lt;?),;0.20;0.23;0.20;0.20;0.23
draw,5,0.600495124,Renders this GraphicAttribute at the specified location.,";java.awt.Graphics2D.draw(Shape);java.awt.font.GraphicAttribute.draw(Graphics2D,float,float);java.awt.font.ImageGraphicAttribute.draw(Graphics2D,float,float);java.awt.font.ShapeGraphicAttribute.draw(Graphics2D,float,float);java.awt.font.TextLayout.draw(Graphics2D,float,float)",;0.20;0.60;0.60;0.60;0.24
endDocument,5,0.2,Filter an end document event.,;org.xml.sax.HandlerBase.endDocument();org.xml.sax.helpers.DefaultHandler.endDocument();org.xml.sax.helpers.ParserAdapter.endDocument();org.xml.sax.helpers.XMLFilterImpl.endDocument();org.xml.sax.helpers.XMLReaderAdapter.endDocument(),;0.00;0.20;0.20;0.20;0.00
endElement,5,0.2,Adapt a SAX2 end element event.,";org.xml.sax.HandlerBase.endElement(String);org.xml.sax.helpers.DefaultHandler.endElement(String,String,String);org.xml.sax.helpers.ParserAdapter.endElement(String);org.xml.sax.helpers.XMLFilterImpl.endElement(String,String,String);org.xml.sax.helpers.XMLReaderAdapter.endElement(String,String,String)",;0.00;0.20;0.20;0.20;0.20
endsWith,5,0.419195508,"Determines whether a composite name is a suffix of this composite name. A composite name 'n' is a suffix if it it is equal to getSuffix(size()-n.size())--in other words, this composite name ends with 'n'. If n is null or not a composite name, false is returned.",;java.lang.String.endsWith(String);javax.naming.CompositeName.endsWith(Name);javax.naming.CompoundName.endsWith(Name);javax.naming.ldap.LdapName.endsWith(Name);javax.naming.ldap.LdapName.endsWith(List&lt;Rdn&gt;),;0.20;0.42;0.40;0.39;0.23
enumerate,5,0.514687495,"Copies into the specified array every active thread in this thread group. If recurse is true, this method recursively enumerates all subgroups of this thread group and references to every active thread in these subgroups are also included. If the array is too short to hold all the threads, the extra threads are silently ignored. An application might use the activeCount method to get an estimate of how big the array should be, however if the array is too short to hold all the threads, the extra threads are silently ignored. If it is critical to obtain every active thread in this thread group, the caller should verify that the returned int value is strictly less than the length of list. Due to the inherent race condition in this method, it is recommended that the method only be used for debugging and monitoring purposes.",";java.lang.Thread.enumerate(Thread[]);java.lang.ThreadGroup.enumerate(Thread[]);java.lang.ThreadGroup.enumerate(Thread[],boolean);java.lang.ThreadGroup.enumerate(ThreadGroup[]);java.lang.ThreadGroup.enumerate(ThreadGroup[],boolean)",;0.48;0.37;0.51;0.37;0.51
eraOf,5,0.8,Description copied from interface:Chronology,;java.time.chrono.HijrahChronology.eraOf(int);java.time.chrono.IsoChronology.eraOf(int);java.time.chrono.JapaneseChronology.eraOf(int);java.time.chrono.MinguoChronology.eraOf(int);java.time.chrono.ThaiBuddhistChronology.eraOf(int),;0.80;0.80;0.20;0.80;0.80
eras,5,1,Description copied from interface:Chronology,;java.time.chrono.HijrahChronology.eras();java.time.chrono.IsoChronology.eras();java.time.chrono.JapaneseChronology.eras();java.time.chrono.MinguoChronology.eras();java.time.chrono.ThaiBuddhistChronology.eras(),;1.00;1.00;1.00;1.00;1.00
error,5,0.2,Filter an error event.,";java.util.logging.ErrorManager.error(String,Exception,int);javax.swing.text.html.parser.Parser.error(String,String,String,String);org.xml.sax.HandlerBase.error(SAXParseException);org.xml.sax.helpers.DefaultHandler.error(SAXParseException);org.xml.sax.helpers.XMLFilterImpl.error(SAXParseException)",;0.20;0.20;0.00;0.20;0.20
execute,5,0.2,Schedules this SwingWorker for execution on a worker thread. There are a number of worker threads available. In the event all worker threads are busy handling other SwingWorkers this SwingWorker is placed in a waiting queue. Note: SwingWorker is only designed to be executed once. Executing a SwingWorker more than once will not result in invoking the doInBackground method twice.,;java.util.concurrent.ForkJoinPool.execute(ForkJoinTask&lt;?&gt;);java.util.concurrent.ForkJoinPool.execute(Runnable);java.util.concurrent.ScheduledThreadPoolExecutor.execute(Runnable);java.util.concurrent.ThreadPoolExecutor.execute(Runnable);javax.swing.SwingWorker.execute(),;0.20;0.20;0.20;0.20;0.20
finish,5,0.736061052,Finishes writing compressed data to the output stream without closing the underlying stream. Use this method when applying multiple filters in succession to the same output stream.,;java.util.zip.Deflater.finish();java.util.zip.DeflaterOutputStream.finish();java.util.zip.GZIPOutputStream.finish();java.util.zip.InflaterOutputStream.finish();java.util.zip.ZipOutputStream.finish(),;0.20;0.74;0.74;0.72;0.66
fireActionPerformed,5,0.722013232,Notifies all listeners that have registered interest for notification on this event type. The event instance is lazily created using the command parameter.,;javax.swing.AbstractButton.fireActionPerformed(ActionEvent);javax.swing.DefaultButtonModel.fireActionPerformed(ActionEvent);javax.swing.JFileChooser.fireActionPerformed(String);javax.swing.JTextField.fireActionPerformed();javax.swing.Timer.fireActionPerformed(ActionEvent),;0.72;0.64;0.72;0.62;0.64
focusGained,5,0.4,Description copied from interface:FocusListener,;java.awt.AWTEventMulticaster.focusGained(FocusEvent);java.awt.event.FocusAdapter.focusGained(FocusEvent);javax.swing.plaf.basic.BasicButtonListener.focusGained(FocusEvent);javax.swing.plaf.basic.BasicComboBoxEditor.focusGained(FocusEvent);javax.swing.text.DefaultCaret.focusGained(FocusEvent),;0.20;0.20;0.40;0.40;0.20
focusLost,5,0.4,Description copied from interface:FocusListener,;java.awt.AWTEventMulticaster.focusLost(FocusEvent);java.awt.event.FocusAdapter.focusLost(FocusEvent);javax.swing.plaf.basic.BasicButtonListener.focusLost(FocusEvent);javax.swing.plaf.basic.BasicComboBoxEditor.focusLost(FocusEvent);javax.swing.text.DefaultCaret.focusLost(FocusEvent),;0.20;0.20;0.40;0.40;0.20
getAdvance,5,0.415936015,Returns the advance of this TextLayout. The advance is the distance from the origin to the advance of the rightmost (bottommost) character. This is in baseline-relative coordinates.,;java.awt.font.GlyphMetrics.getAdvance();java.awt.font.GraphicAttribute.getAdvance();java.awt.font.ImageGraphicAttribute.getAdvance();java.awt.font.ShapeGraphicAttribute.getAdvance();java.awt.font.TextLayout.getAdvance(),;0.26;0.33;0.41;0.39;0.42
getBytes,5,0.507340772,"Encodes this String into a sequence of bytes using the platform's default charset, storing the result into a new byte array. The behavior of this method when this string cannot be encoded in the default charset is unspecified. The CharsetEncoder class should be used when more control over the encoding process is required.",";java.lang.String.getBytes(int,int,byte[],int);java.lang.String.getBytes(String);java.lang.String.getBytes(Charset);java.lang.String.getBytes();javax.sql.rowset.serial.SerialBlob.getBytes(long,int)",;0.21;0.49;0.44;0.51;0.20
getCellRenderer,5,0.213451099,"Returns an appropriate renderer for the cell specified by this row and column. If the TableColumn for this column has a non-null renderer, returns that. If not, finds the class of the data in this column (using getColumnClass) and returns the default renderer for this type of data. Note: Throughout the table package, the internal implementations always use this method to provide renderers so that this default behavior can be safely overridden by a subclass.",";javax.swing.JList.getCellRenderer();javax.swing.JTable.getCellRenderer(int,int);javax.swing.JTree.getCellRenderer();javax.swing.plaf.basic.BasicTreeUI.getCellRenderer();javax.swing.table.TableColumn.getCellRenderer()",;0.20;0.21;0.20;0.20;0.21
getCertificates,5,0.33952369,"Returns the Certificate objects for this entry, or null if none. This method can only be called once the JarEntry has been completely verified by reading from the entry input stream until the end of the stream has been reached. Otherwise, this method will return null. The returned certificate array comprises all the signer certificates that were used to verify this entry. Each signer certificate is followed by its supporting certificate chain (which may be empty). Each signer certificate and its supporting certificate chain are ordered bottom-to-top (i.e., with the signer certificate first and the (root) certificate authority last).",;java.net.JarURLConnection.getCertificates();java.security.CodeSource.getCertificates();java.security.cert.CertPath.getCertificates();java.security.cert.CertStore.getCertificates(CertSelector);java.util.jar.JarEntry.getCertificates(),;0.25;0.28;0.20;0.20;0.34
getChars,5,0.559009491,Characters are copied from this sequence into the destination character array dst. The first character to be copied is at index srcBegin; the last character to be copied is at index srcEnd-1. The total number of characters to be copied is srcEnd-srcBegin. The characters are copied into the subarray of dst starting at index dstBegin and ending at index: dstbegin + (srcEnd-srcBegin) - 1,";java.lang.String.getChars(int,int,char[],int);java.lang.StringBuffer.getChars(int,int,char[],int);java.lang.StringBuilder.getChars(int,int,char[],int);javax.swing.text.GapContent.getChars(int,int,Segment);javax.swing.text.StringContent.getChars(int,int,Segment)",;0.52;0.56;0.56;0.22;0.21
getClassLoader,5,0.332728842,"Returns a class loader that loads classes from the given codebase URL path. The class loader returned is the class loader that the loadClass(String,String) method would use to load classes for the same codebase argument. This method delegates to the RMIClassLoaderSpi.getClassLoader(String) method of the provider instance, passing codebase as the argument. If there is a security manger, its checkPermission method will be invoked with a RuntimePermission(""getClassLoader"") permission; this could result in a SecurityException. The provider implementation of this method may also perform further security checks to verify that the calling context has permission to connect to all of the URLs in the codebase URL path.",;java.lang.Class.getClassLoader();java.rmi.server.RMIClassLoader.getClassLoader(String);java.rmi.server.RMIClassLoaderSpi.getClassLoader(String);java.security.ProtectionDomain.getClassLoader();javax.tools.ForwardingJavaFileManager.getClassLoader(JavaFileManager.Location),;0.23;0.33;0.32;0.20;0.20
getColumn,5,0.258307385,"Returns the TableColumn object for the column in the table whose identifier is equal to identifier, when compared using equals.",;javax.swing.JTable.getColumn(Object);javax.swing.JTable.DropLocation.getColumn();javax.swing.RowSorter.SortKey.getColumn();javax.swing.event.TableModelEvent.getColumn();javax.swing.table.DefaultTableColumnModel.getColumn(int),;0.26;0.20;0.20;0.20;0.24
getColumnCount,5,0.54407173,Returns the number of columns in the tableColumns array.,;javax.sql.rowset.RowSetMetaDataImpl.getColumnCount();javax.swing.DefaultRowSorter.ModelWrapper.getColumnCount();javax.swing.JTable.getColumnCount();javax.swing.table.DefaultTableColumnModel.getColumnCount();javax.swing.table.DefaultTableModel.getColumnCount(),;0.41;0.54;0.38;0.54;0.50
getComponentAt,5,0.292692396,Gets the component that contains the specified point.,";java.awt.Component.getComponentAt(int,int);java.awt.Component.getComponentAt(Point);java.awt.Container.getComponentAt(int,int);java.awt.Container.getComponentAt(Point);javax.swing.JTabbedPane.getComponentAt(int)",;0.21;0.29;0.22;0.29;0.20
getCount,5,0.551967137,Returns the count of values recorded.,;java.lang.management.MemoryNotificationInfo.getCount();java.util.DoubleSummaryStatistics.getCount();java.util.IntSummaryStatistics.getCount();java.util.LongSummaryStatistics.getCount();java.util.concurrent.CountDownLatch.getCount(),;0.20;0.50;0.55;0.55;0.20
getDayOfMonth,5,1,Gets the day-of-month field. This method returns the primitive int value for the day-of-month.,;java.time.LocalDate.getDayOfMonth();java.time.LocalDateTime.getDayOfMonth();java.time.MonthDay.getDayOfMonth();java.time.OffsetDateTime.getDayOfMonth();java.time.ZonedDateTime.getDayOfMonth(),;1.00;1.00;1.00;1.00;1.00
getDayOfWeek,5,0.825736466,"Gets the day-of-week field, which is an enum DayOfWeek. This method returns the enum DayOfWeek for the day-of-week. This avoids confusion as to what int values mean. If you need access to the primitive int value then the enum provides the int value. Additional information can be obtained from the DayOfWeek. This includes textual names of the values.",;java.time.LocalDate.getDayOfWeek();java.time.LocalDateTime.getDayOfWeek();java.time.OffsetDateTime.getDayOfWeek();java.time.ZonedDateTime.getDayOfWeek();java.time.zone.ZoneOffsetTransitionRule.getDayOfWeek(),;0.83;0.83;0.83;0.83;0.30
getDimension,5,0.32636593,"Returns a dimension from the defaults that is appropriate for the given locale. If the value for key is not a Dimension, null is returned.",";javax.management.openmbean.ArrayType.getDimension();javax.swing.UIDefaults.getDimension(Object);javax.swing.UIDefaults.getDimension(Object,Locale);javax.swing.UIManager.getDimension(Object);javax.swing.UIManager.getDimension(Object,Locale)",;0.20;0.33;0.33;0.32;0.33
getDisabledIcon,5,0.505194036,"Returns an Icon with a disabled appearance. This method is used to generate a disabled Icon when one has not been specified. For example, if you create a JButton and only specify an Icon via setIcon this method will be called to generate the disabled Icon. If null is passed as icon this method returns null. Some look and feels might not render the disabled Icon, in which case they will ignore this.",";javax.swing.AbstractButton.getDisabledIcon();javax.swing.JLabel.getDisabledIcon();javax.swing.LookAndFeel.getDisabledIcon(JComponent,Icon);javax.swing.plaf.metal.MetalLookAndFeel.getDisabledIcon(JComponent,Icon);javax.swing.plaf.nimbus.NimbusLookAndFeel.getDisabledIcon(JComponent,Icon)",;0.49;0.49;0.51;0.51;0.20
getDropAction,5,0.411495233,This method returns the user drop action.,;java.awt.dnd.DragSourceDragEvent.getDropAction();java.awt.dnd.DragSourceDropEvent.getDropAction();java.awt.dnd.DropTargetDragEvent.getDropAction();java.awt.dnd.DropTargetDropEvent.getDropAction();javax.swing.TransferHandler.TransferSupport.getDropAction(),;0.25;0.20;0.41;0.41;0.22
getDropLocation,5,0.699802718,"Returns the location that this component should visually indicate as the drop location during a DnD operation over the component, or null if no location is to currently be shown. This method is not meant for querying the drop location from a TransferHandler, as the drop location is only set after the TransferHandler's canImport has returned and has allowed for the location to be shown. When this property changes, a property change event with name ""dropLocation"" is fired by the component.",;javax.swing.JList.getDropLocation();javax.swing.JTable.getDropLocation();javax.swing.JTree.getDropLocation();javax.swing.TransferHandler.TransferSupport.getDropLocation();javax.swing.text.JTextComponent.getDropLocation(),;0.55;0.70;0.70;0.20;0.70
getEditorKit,5,0.26026081,Fetches the EditorKit for the UI. This is whatever is currently set in the associated JEditorPane.,;javax.swing.JEditorPane.getEditorKit();javax.swing.plaf.TextUI.getEditorKit(JTextComponent);javax.swing.plaf.basic.BasicEditorPaneUI.getEditorKit(JTextComponent);javax.swing.plaf.basic.BasicTextUI.getEditorKit(JTextComponent);javax.swing.plaf.multi.MultiTextUI.getEditorKit(JTextComponent),;0.20;0.20;0.26;0.24;0.20
getEra,5,0.488297505,"Gets the era applicable at this date. The Minguo calendar system has two eras, 'ROC' and 'BEFORE_ROC', defined by MinguoEra.",;java.time.LocalDate.getEra();java.time.chrono.HijrahDate.getEra();java.time.chrono.JapaneseDate.getEra();java.time.chrono.MinguoDate.getEra();java.time.chrono.ThaiBuddhistDate.getEra(),;0.25;0.47;0.48;0.49;0.48
getErrorHandler,5,0.536358566,Gets the current ErrorHandler set to this ValidatorHandler.,;javax.xml.validation.SchemaFactory.getErrorHandler();javax.xml.validation.Validator.getErrorHandler();javax.xml.validation.ValidatorHandler.getErrorHandler();org.xml.sax.helpers.ParserAdapter.getErrorHandler();org.xml.sax.helpers.XMLFilterImpl.getErrorHandler(),;0.54;0.54;0.54;0.20;0.20
getItemCount,5,0.626792407,Returns the number of items in the list.,;java.awt.Choice.getItemCount();java.awt.List.getItemCount();java.awt.Menu.getItemCount();javax.swing.JComboBox.getItemCount();javax.swing.JMenu.getItemCount(),;0.57;0.59;0.56;0.63;0.35
getIV,5,0.4,Returns the IV or null if this parameter set does not contain an IV.,;javax.crypto.Cipher.getIV();javax.crypto.spec.GCMParameterSpec.getIV();javax.crypto.spec.IvParameterSpec.getIV();javax.crypto.spec.RC2ParameterSpec.getIV();javax.crypto.spec.RC5ParameterSpec.getIV(),;0.22;0.20;0.20;0.40;0.40
getJMenuBar,5,0.523642685,Returns the menubar set on this frame.,;javax.swing.JApplet.getJMenuBar();javax.swing.JDialog.getJMenuBar();javax.swing.JFrame.getJMenuBar();javax.swing.JInternalFrame.getJMenuBar();javax.swing.JRootPane.getJMenuBar(),;0.52;0.52;0.52;0.20;0.20
getKeys,5,0.4,Returns an Enumeration of the keys contained in this ResourceBundle and its parent bundles.,;java.util.ListResourceBundle.getKeys();java.util.PropertyResourceBundle.getKeys();java.util.ResourceBundle.getKeys();javax.security.auth.kerberos.KeyTab.getKeys(KerberosPrincipal);javax.swing.AbstractAction.getKeys(),;0.40;0.40;0.20;0.20;0.20
getLineNumber,5,0.2,Return the saved line number (1-based).,;java.io.LineNumberInputStream.getLineNumber();java.io.LineNumberReader.getLineNumber();java.lang.StackTraceElement.getLineNumber();javax.xml.bind.helpers.ValidationEventLocatorImpl.getLineNumber();org.xml.sax.helpers.LocatorImpl.getLineNumber(),;0.00;0.20;0.20;0.20;0.20
getLocalPort,5,0.379010163,"Returns the port number on which this socket is listening. If the socket was bound prior to being closed, then this method will continue to return the port number after the socket is closed.",;java.net.DatagramSocket.getLocalPort();java.net.DatagramSocketImpl.getLocalPort();java.net.ServerSocket.getLocalPort();java.net.Socket.getLocalPort();java.net.SocketImpl.getLocalPort(),;0.24;0.20;0.38;0.38;0.20
getMargin,5,0.481945067,Returns the margin between the text component's border and its text.,;javax.swing.AbstractButton.getMargin();javax.swing.JMenuBar.getMargin();javax.swing.JPopupMenu.getMargin();javax.swing.JToolBar.getMargin();javax.swing.text.JTextComponent.getMargin(),;0.40;0.36;0.34;0.48;0.48
getNamespaceURI,5,0.6,Description copied from interface:XMLStreamReader,;javax.imageio.metadata.IIOMetadataNode.getNamespaceURI();javax.xml.namespace.QName.getNamespaceURI();javax.xml.stream.util.StreamReaderDelegate.getNamespaceURI(String);javax.xml.stream.util.StreamReaderDelegate.getNamespaceURI(int);javax.xml.stream.util.StreamReaderDelegate.getNamespaceURI(),;0.20;0.20;0.60;0.60;0.60
getNeedClientAuth,5,0.341530689,Returns true if the socket will require client authentication. This option is only useful to sockets in the server mode.,;javax.net.ssl.SSLEngine.getNeedClientAuth();javax.net.ssl.SSLParameters.getNeedClientAuth();javax.net.ssl.SSLServerSocket.getNeedClientAuth();javax.net.ssl.SSLSocket.getNeedClientAuth();javax.rmi.ssl.SslRMIServerSocketFactory.getNeedClientAuth(),;0.34;0.20;0.23;0.34;0.23
getNumComponents,5,0.319749441,"Returns the number of components, including alpha, in this ColorModel. This is equal to the number of color components, optionally plus one, if there is an alpha component.",;java.awt.color.ColorSpace.getNumComponents();java.awt.color.ICC_Profile.getNumComponents();java.awt.image.ColorModel.getNumComponents();java.awt.image.LookupTable.getNumComponents();javax.imageio.ImageTypeSpecifier.getNumComponents(),;0.30;0.30;0.32;0.31;0.25
getNumDataElements,5,0.475479299,"Returns the number of data elements needed to transfer one pixel via the getDataElements and setDataElements methods. When pixels are transferred via these methods, they may be transferred in a packed or unpacked format, depending on the implementation of the underlying SampleModel. Using these methods, pixels are transferred as an array of getNumDataElements() elements of a primitive type given by getTransferType(). The TransferType may or may not be the same as the storage data type of the DataBuffer.",;java.awt.image.ComponentSampleModel.getNumDataElements();java.awt.image.MultiPixelPackedSampleModel.getNumDataElements();java.awt.image.Raster.getNumDataElements();java.awt.image.SampleModel.getNumDataElements();java.awt.image.SinglePixelPackedSampleModel.getNumDataElements(),;0.38;0.42;0.48;0.47;0.35
getOutline,5,0.339051651,"Returns a Shape whose interior corresponds to the visual representation of this GlyphVector when rendered at x,y.",";java.awt.font.GlyphVector.getOutline();java.awt.font.GlyphVector.getOutline(float,float);java.awt.font.GraphicAttribute.getOutline(AffineTransform);java.awt.font.ShapeGraphicAttribute.getOutline(AffineTransform);java.awt.font.TextLayout.getOutline(AffineTransform)",;0.34;0.34;0.33;0.32;0.20
getParams,5,0.4,"Returns the parameters associated with this key, may be null if not present.",;java.security.spec.ECPrivateKeySpec.getParams();java.security.spec.ECPublicKeySpec.getParams();java.security.spec.RSAPrivateKeySpec.getParams();java.security.spec.RSAPublicKeySpec.getParams();javax.sql.rowset.BaseRowSet.getParams(),;0.40;0.40;0.40;0.40;0.20
getPrompt,5,1.22E-77,Get the prompt.,;javax.security.auth.callback.ChoiceCallback.getPrompt();javax.security.auth.callback.ConfirmationCallback.getPrompt();javax.security.auth.callback.NameCallback.getPrompt();javax.security.auth.callback.PasswordCallback.getPrompt();javax.security.auth.callback.TextInputCallback.getPrompt(),;0.00;0.00;0.00;0.00;0.00
getQueuedThreads,5,0.964016783,"Returns a collection containing threads that may be waiting to acquire. Because the actual set of threads may change dynamically while constructing this result, the returned collection is only a best-effort estimate. The elements of the returned collection are in no particular order. This method is designed to facilitate construction of subclasses that provide more extensive monitoring facilities.",;java.util.concurrent.Semaphore.getQueuedThreads();java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getQueuedThreads();java.util.concurrent.locks.AbstractQueuedSynchronizer.getQueuedThreads();java.util.concurrent.locks.ReentrantLock.getQueuedThreads();java.util.concurrent.locks.ReentrantReadWriteLock.getQueuedThreads(),;0.96;0.96;0.96;0.94;0.91
getQueueLength,5,0.925616119,"Returns an estimate of the number of threads waiting to acquire. The value is only an estimate because the number of threads may change dynamically while this method traverses internal data structures. This method is designed for use in monitoring of the system state, not for synchronization control.",;java.util.concurrent.Semaphore.getQueueLength();java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getQueueLength();java.util.concurrent.locks.AbstractQueuedSynchronizer.getQueueLength();java.util.concurrent.locks.ReentrantLock.getQueueLength();java.util.concurrent.locks.ReentrantReadWriteLock.getQueueLength(),;0.93;0.91;0.91;0.90;0.86
getRegistry,5,0.546183362,"Returns a reference to the remote object Registry on the specified host on the default registry port of 1099. If host is null, the local host is used.",";java.rmi.registry.LocateRegistry.getRegistry();java.rmi.registry.LocateRegistry.getRegistry(int);java.rmi.registry.LocateRegistry.getRegistry(String);java.rmi.registry.LocateRegistry.getRegistry(String,int);java.rmi.registry.LocateRegistry.getRegistry(String,int,RMIClientSocketFactory)",;0.52;0.49;0.55;0.52;0.36
getResizeWeight,5,0.487189876,Determines the resizability of the view along the given axis. A value of 0 or less is not resizable.,;javax.swing.JSplitPane.getResizeWeight();javax.swing.text.BoxView.getResizeWeight(int);javax.swing.text.FieldView.getResizeWeight(int);javax.swing.text.View.getResizeWeight(int);javax.swing.text.html.BlockView.getResizeWeight(int),;0.20;0.41;0.49;0.49;0.22
getRoot,5,0.313374603,"Returns the root of the current computation; i.e., this task if it has no completer, else its completer's root.",;java.util.concurrent.CountedCompleter.getRoot();java.util.concurrent.Phaser.getRoot();javax.swing.SwingUtilities.getRoot(Component);javax.swing.tree.DefaultMutableTreeNode.getRoot();javax.swing.tree.DefaultTreeModel.getRoot(),;0.31;0.24;0.20;0.29;0.29
getSignature,5,0.390137707,"Returns the list of parameters for this operation. Each parameter is described by an MBeanParameterInfo object.The returned array is a shallow copy of the internal array, which means that it is a copy of the internal array of references to the MBeanParameterInfo objects but that each referenced MBeanParameterInfo object is not copied.",;java.security.SignedObject.getSignature();java.security.cert.X509Certificate.getSignature();java.security.cert.X509CRL.getSignature();javax.management.MBeanConstructorInfo.getSignature();javax.management.MBeanOperationInfo.getSignature(),;0.20;0.37;0.37;0.39;0.39
getSourceActions,5,0.4,This method returns the source drop actions.,;java.awt.dnd.DragGestureRecognizer.getSourceActions();java.awt.dnd.DragSourceContext.getSourceActions();java.awt.dnd.DropTargetDragEvent.getSourceActions();java.awt.dnd.DropTargetDropEvent.getSourceActions();javax.swing.TransferHandler.getSourceActions(JComponent),;0.20;0.21;0.40;0.40;0.21
getSupportedCipherSuites,5,0.931209813,"Returns the names of the cipher suites which could be enabled for use on an SSL connection. Normally, only a subset of these will actually be enabled by default, since this list may include cipher suites which do not meet quality of service requirements for those defaults. Such cipher suites are useful in specialized applications.",;javax.net.ssl.SSLEngine.getSupportedCipherSuites();javax.net.ssl.SSLServerSocket.getSupportedCipherSuites();javax.net.ssl.SSLServerSocketFactory.getSupportedCipherSuites();javax.net.ssl.SSLSocket.getSupportedCipherSuites();javax.net.ssl.SSLSocketFactory.getSupportedCipherSuites(),;0.90;0.93;0.89;0.91;0.93
getTable,5,0.354984494,"Returns the lookup table data by reference. If this ShortLookupTable was constructed using a single short array, the length of the returned array is one.",;java.awt.image.ByteLookupTable.getTable();java.awt.image.LookupOp.getTable();java.awt.image.ShortLookupTable.getTable();javax.imageio.plugins.jpeg.JPEGQTable.getTable();javax.swing.table.JTableHeader.getTable(),;0.35;0.00;0.35;0.20;0.20
getTransferable,5,0.276703872,This method returns the Transferable object that represents the data associated with the current drag operation.,;java.awt.dnd.DragSourceContext.getTransferable();java.awt.dnd.DropTargetContext.getTransferable();java.awt.dnd.DropTargetDragEvent.getTransferable();java.awt.dnd.DropTargetDropEvent.getTransferable();javax.swing.TransferHandler.TransferSupport.getTransferable(),;0.20;0.20;0.28;0.27;0.22
getTransferHandler,5,1,Gets the transferHandler property.,;javax.swing.JApplet.getTransferHandler();javax.swing.JComponent.getTransferHandler();javax.swing.JDialog.getTransferHandler();javax.swing.JFrame.getTransferHandler();javax.swing.JWindow.getTransferHandler(),;1.00;1.00;1.00;1.00;1.00
getURI,5,0.2,Look up a prefix and get the currently-mapped Namespace URI. This method looks up the prefix in the current context. Use the empty string ("") for the default Namespace.,;java.security.URIParameter.getURI();javax.print.attribute.URISyntax.getURI();javax.xml.crypto.OctetStreamData.getURI();org.xml.sax.helpers.AttributesImpl.getURI(int);org.xml.sax.helpers.NamespaceSupport.getURI(String),;0.00;0.20;0.20;0.20;0.20
getVetoableChangeListeners,5,0.500414711,Returns an array of all the vetoable change listeners registered on this component.,;java.awt.KeyboardFocusManager.getVetoableChangeListeners();java.awt.KeyboardFocusManager.getVetoableChangeListeners(String);java.beans.VetoableChangeSupport.getVetoableChangeListeners();java.beans.VetoableChangeSupport.getVetoableChangeListeners(String);javax.swing.JComponent.getVetoableChangeListeners(),;0.49;0.46;0.24;0.45;0.50
getView,5,0.4,"Gets the nth child view. Since there are no children by default, this returns null.",;javax.swing.JLayer.getView();javax.swing.JViewport.getView();javax.swing.text.AsyncBoxView.getView(int);javax.swing.text.CompositeView.getView(int);javax.swing.text.View.getView(int),;0.20;0.20;0.40;0.20;0.40
hasQueuedThreads,5,0.781163489,"Queries whether any threads are waiting to acquire. Note that because cancellations may occur at any time, a true return does not guarantee that any other thread will ever acquire. This method is designed primarily for use in monitoring of the system state.",;java.util.concurrent.Semaphore.hasQueuedThreads();java.util.concurrent.locks.AbstractQueuedLongSynchronizer.hasQueuedThreads();java.util.concurrent.locks.AbstractQueuedSynchronizer.hasQueuedThreads();java.util.concurrent.locks.ReentrantLock.hasQueuedThreads();java.util.concurrent.locks.ReentrantReadWriteLock.hasQueuedThreads(),;0.78;0.75;0.75;0.76;0.73
ignorableWhitespace,5,0.2,Adapt a SAX2 ignorable whitespace event.,";org.xml.sax.HandlerBase.ignorableWhitespace(char[],int,int);org.xml.sax.helpers.DefaultHandler.ignorableWhitespace(char[],int,int);org.xml.sax.helpers.ParserAdapter.ignorableWhitespace(char[],int,int);org.xml.sax.helpers.XMLFilterImpl.ignorableWhitespace(char[],int,int);org.xml.sax.helpers.XMLReaderAdapter.ignorableWhitespace(char[],int,int)",;0.00;0.20;0.20;0.20;0.20
instantiate,5,0.2,"Returns an expression whose value is oldInstance. This method is used to characterize the constructor or factory method that should be used to create the given object. For example, the instantiate method of the persistence delegate for the Field class could be defined as follows: Field f = (Field)oldInstance; return new Expression(f, f.getDeclaringClass(), ""getField"", new Object[]{f.getName()}); Note that we declare the value of the returned expression so that the value of the expression (as returned by getValue) will be identical to oldInstance.",";java.beans.Beans.instantiate(ClassLoader,String);java.beans.Beans.instantiate(ClassLoader,String,BeanContext);java.beans.Beans.instantiate(ClassLoader,String,BeanContext,AppletInitializer);java.beans.DefaultPersistenceDelegate.instantiate(Object,Encoder);java.beans.PersistenceDelegate.instantiate(Object,Encoder)",;0.00;0.00;0.20;0.20;0.20
intersects,5,0.394847101,"Tests if the interior of the specified PathIterator intersects the interior of a specified Rectangle2D. This method provides a basic facility for implementors of the Shape interface to implement support for the Shape.intersects(Rectangle2D) method. This method object may conservatively return true in cases where the specified rectangular area intersects a segment of the path, but that segment does not represent a boundary between the interior and exterior of the path. Such a case may occur if some set of segments of the path are retraced in the reverse direction such that the two sets of segments cancel each other out without any interior area between them. To determine whether segments represent true boundaries of the interior of the path would require extensive calculations involving all of the segments of the path and the winding rule and are thus beyond the scope of this implementation.",";java.awt.Rectangle.intersects(Rectangle);java.awt.geom.Arc2D.intersects(double,double,double,double);java.awt.geom.Path2D.intersects(PathIterator,double,double,double,double);java.awt.geom.Path2D.intersects(PathIterator,Rectangle2D);java.util.BitSet.intersects(BitSet)",;0.23;0.23;0.39;0.39;0.20
isBorderPainted,5,0.4,Gets the borderPainted property.,;javax.swing.AbstractButton.isBorderPainted();javax.swing.JMenuBar.isBorderPainted();javax.swing.JPopupMenu.isBorderPainted();javax.swing.JProgressBar.isBorderPainted();javax.swing.JToolBar.isBorderPainted(),;0.40;0.26;0.26;0.20;0.40
isBound,5,0.288517205,"Returns the binding state of the socket. If the socket was bound prior to being closed, then this method will continue to return true after the socket is closed.",;java.beans.PropertyDescriptor.isBound();java.net.DatagramSocket.isBound();java.net.ServerSocket.isBound();java.net.Socket.isBound();javax.security.auth.kerberos.KeyTab.isBound(),;0.20;0.29;0.21;0.28;0.20
isCached,5,0.70446424,Returns true since this ImageOutputStream caches data in order to allow seeking backwards.,;javax.imageio.stream.FileCacheImageInputStream.isCached();javax.imageio.stream.FileCacheImageOutputStream.isCached();javax.imageio.stream.ImageInputStreamImpl.isCached();javax.imageio.stream.MemoryCacheImageInputStream.isCached();javax.imageio.stream.MemoryCacheImageOutputStream.isCached(),;0.70;0.70;0.20;0.70;0.70
isCachedFile,5,0.340337588,Returns false since this ImageOutputStream does not maintain a file cache.,;javax.imageio.stream.FileCacheImageInputStream.isCachedFile();javax.imageio.stream.FileCacheImageOutputStream.isCachedFile();javax.imageio.stream.ImageInputStreamImpl.isCachedFile();javax.imageio.stream.MemoryCacheImageInputStream.isCachedFile();javax.imageio.stream.MemoryCacheImageOutputStream.isCachedFile(),;0.32;0.32;0.20;0.34;0.34
isCachedMemory,5,0.462787467,Returns false since this ImageOutputStream does not maintain a main memory cache.,;javax.imageio.stream.FileCacheImageInputStream.isCachedMemory();javax.imageio.stream.FileCacheImageOutputStream.isCachedMemory();javax.imageio.stream.ImageInputStreamImpl.isCachedMemory();javax.imageio.stream.MemoryCacheImageInputStream.isCachedMemory();javax.imageio.stream.MemoryCacheImageOutputStream.isCachedMemory(),;0.46;0.46;0.20;0.45;0.45
isCancelled,5,0.4,Description copied from interface:Future,;java.awt.print.PrinterJob.isCancelled();java.util.concurrent.CompletableFuture.isCancelled();java.util.concurrent.ForkJoinTask.isCancelled();java.util.concurrent.FutureTask.isCancelled();javax.swing.SwingWorker.isCancelled(),;0.20;0.34;0.40;0.40;0.34
isDestroyed,5,0.2,Determines if the references to the X.509 certificate and private key in this object have been cleared.,;java.lang.ThreadGroup.isDestroyed();java.security.KeyStore.PasswordProtection.isDestroyed();javax.security.auth.kerberos.KerberosKey.isDestroyed();javax.security.auth.kerberos.KerberosTicket.isDestroyed();javax.security.auth.x500.X500PrivateCredential.isDestroyed(),;0.20;0.20;0.20;0.20;0.20
isDone,5,0.4,Description copied from interface:Future,;java.awt.geom.FlatteningPathIterator.isDone();java.util.concurrent.CompletableFuture.isDone();java.util.concurrent.ForkJoinTask.isDone();java.util.concurrent.FutureTask.isDone();javax.swing.SwingWorker.isDone(),;0.20;0.20;0.40;0.40;0.20
isEditing,5,0.565558659,Returns true if the tree is being edited. The item that is being edited can be returned by getEditingPath().,;javax.swing.JTable.isEditing();javax.swing.JTree.isEditing();javax.swing.plaf.TreeUI.isEditing(JTree);javax.swing.plaf.basic.BasicTreeUI.isEditing(JTree);javax.swing.plaf.multi.MultiTreeUI.isEditing(JTree),;0.20;0.53;0.57;0.57;0.20
isExpanded,5,0.687647911,Returns true if the value identified by row is currently expanded.,;javax.swing.JTree.isExpanded(TreePath);javax.swing.JTree.isExpanded(int);javax.swing.tree.AbstractLayoutCache.isExpanded(TreePath);javax.swing.tree.FixedHeightLayoutCache.isExpanded(TreePath);javax.swing.tree.VariableHeightLayoutCache.isExpanded(TreePath),;0.51;0.49;0.69;0.69;0.63
isFocusCycleRoot,5,0.357150955,Always returns true because all JInternalFrames must be roots of a focus traversal cycle.,;java.awt.Component.isFocusCycleRoot(Container);java.awt.Container.isFocusCycleRoot(Container);java.awt.Container.isFocusCycleRoot();java.awt.Window.isFocusCycleRoot();javax.swing.JInternalFrame.isFocusCycleRoot(),;0.26;0.30;0.24;0.36;0.36
isOptimizedDrawingEnabled,5,0.358268669,The JViewport overrides the default implementation of this method (in JComponent) to return false. This ensures that the drawing machinery will call the Viewport's paint implementation rather than messaging the JViewport's children directly.,;javax.swing.JComponent.isOptimizedDrawingEnabled();javax.swing.JLayer.isOptimizedDrawingEnabled();javax.swing.JLayeredPane.isOptimizedDrawingEnabled();javax.swing.JRootPane.isOptimizedDrawingEnabled();javax.swing.JViewport.isOptimizedDrawingEnabled(),;0.20;0.36;0.20;0.20;0.36
isRegistered,5,0.4,Description copied from interface:RMIConnection,";java.nio.channels.SelectableChannel.isRegistered();java.nio.channels.spi.AbstractSelectableChannel.isRegistered();java.nio.charset.Charset.isRegistered();javax.management.remote.rmi.RMIConnectionImpl.isRegistered(ObjectName,Subject);javax.management.remote.rmi.RMIConnectionImpl_Stub.isRegistered(ObjectName,Subject)",;0.21;0.20;0.20;0.40;0.40
isRootPaneCheckingEnabled,5,1,Returns whether calls to add and setLayout are forwarded to the contentPane.,;javax.swing.JApplet.isRootPaneCheckingEnabled();javax.swing.JDialog.isRootPaneCheckingEnabled();javax.swing.JFrame.isRootPaneCheckingEnabled();javax.swing.JInternalFrame.isRootPaneCheckingEnabled();javax.swing.JWindow.isRootPaneCheckingEnabled(),;1.00;1.00;1.00;1.00;1.00
isSupported,5,0.212439655,"Returns whether the system tray is supported on the current platform. In addition to displaying the tray icon, minimal system tray support includes either a popup menu (see TrayIcon.setPopupMenu(PopupMenu)) or an action event (see TrayIcon.addActionListener(ActionListener)). Developers should not assume that all of the system tray functionality is supported. To guarantee that the tray icon's default action is always accessible, add the default action to both the action listener and the popup menu. See the example for an example of how to do this. Note: When implementing SystemTray and TrayIcon it is strongly recommended that you assign different gestures to the popup menu and an action event. Overloading a gesture for both purposes is confusing and may prevent the user from accessing one or the other.",";java.awt.Desktop.isSupported(Desktop.Action);java.awt.SystemTray.isSupported();java.nio.charset.Charset.isSupported(String);java.time.ZoneOffset.isSupported(TemporalField);javax.imageio.metadata.IIOMetadataNode.isSupported(String,String)",;0.21;0.21;0.20;0.20;0.20
isValidating,5,0.510443271,Indicates whether or not the factory is configured to produce parsers which validate the XML content during parse.,;javax.xml.bind.helpers.AbstractUnmarshallerImpl.isValidating();javax.xml.parsers.DocumentBuilder.isValidating();javax.xml.parsers.DocumentBuilderFactory.isValidating();javax.xml.parsers.SAXParser.isValidating();javax.xml.parsers.SAXParserFactory.isValidating(),;0.33;0.50;0.51;0.50;0.51
isValue,5,0.401207315,Tests whether obj is a valid value for the parameter described by this OpenMBeanParameterInfo instance.,;javax.management.openmbean.OpenMBeanAttributeInfoSupport.isValue(Object);javax.management.openmbean.OpenMBeanParameterInfoSupport.isValue(Object);javax.management.openmbean.OpenType.isValue(Object);javax.management.openmbean.SimpleType.isValue(Object);javax.management.openmbean.TabularType.isValue(Object),;0.40;0.40;0.32;0.29;0.27
isWritable,5,0.2,Indicates whether it is possible for a write operation on the designated column to succeed. A return value of true means that a write operation may or may not succeed.,;java.nio.channels.SelectionKey.isWritable();java.nio.file.Files.isWritable(Path);javax.management.MBeanAttributeInfo.isWritable();javax.management.relation.RoleInfo.isWritable();javax.sql.rowset.RowSetMetaDataImpl.isWritable(int),;0.20;0.20;0.20;0.20;0.20
localDateTime,5,0.8,Description copied from interface:Chronology,;java.time.chrono.HijrahChronology.localDateTime(TemporalAccessor);java.time.chrono.IsoChronology.localDateTime(TemporalAccessor);java.time.chrono.JapaneseChronology.localDateTime(TemporalAccessor);java.time.chrono.MinguoChronology.localDateTime(TemporalAccessor);java.time.chrono.ThaiBuddhistChronology.localDateTime(TemporalAccessor),;0.80;0.20;0.80;0.80;0.80
lookupPixel,5,0.822926913,"Returns an array of samples of a pixel, translated with the lookup table. The source and destination array can be the same array. Array dst is returned.",";java.awt.image.ByteLookupTable.lookupPixel(int[],int[]);java.awt.image.ByteLookupTable.lookupPixel(byte[],byte[]);java.awt.image.LookupTable.lookupPixel(int[],int[]);java.awt.image.ShortLookupTable.lookupPixel(int[],int[]);java.awt.image.ShortLookupTable.lookupPixel(short[],short[])",;0.82;0.82;0.30;0.82;0.82
minusHours,5,0.642461643,"Returns a copy of this OffsetTime with the specified number of hours subtracted. This subtracts the specified number of hours from this time, returning a new time. The calculation wraps around midnight. This instance is immutable and unaffected by this method call.",;java.time.Duration.minusHours(long);java.time.LocalDateTime.minusHours(long);java.time.LocalTime.minusHours(long);java.time.OffsetDateTime.minusHours(long);java.time.OffsetTime.minusHours(long),;0.51;0.59;0.64;0.59;0.64
mouseReleased,5,0.4,Invoked when a mouse button has been released on a component.,;java.awt.AWTEventMulticaster.mouseReleased(MouseEvent);java.awt.dnd.MouseDragGestureRecognizer.mouseReleased(MouseEvent);java.awt.event.MouseAdapter.mouseReleased(MouseEvent);javax.swing.plaf.basic.BasicButtonListener.mouseReleased(MouseEvent);javax.swing.text.DefaultCaret.mouseReleased(MouseEvent),;0.20;0.40;0.40;0.20;0.20
move,5,0.4,"Deprecated.As of JDK version 1.1, replaced by setLocation(int, int).",";java.awt.Component.move(int,int);java.awt.Point.move(int,int);java.awt.Rectangle.move(int,int);java.nio.file.Files.move(Path,Path,CopyOption...);java.nio.file.spi.FileSystemProvider.move(Path,Path,CopyOption...)",;0.40;0.20;0.40;0.21;0.20
multiply,5,0.332788437,"Returns a BigDecimal whose value is (this 鑴 multiplicand), with rounding according to the context settings.",";java.math.BigDecimal.multiply(BigDecimal);java.math.BigDecimal.multiply(BigDecimal,MathContext);java.math.BigInteger.multiply(BigInteger);javax.xml.datatype.Duration.multiply(int);javax.xml.datatype.Duration.multiply(BigDecimal)",;0.33;0.33;0.26;0.20;0.22
newFileSystem,5,0.370459924,"Constructs a new FileSystem object identified by a URI. This method is invoked by the FileSystems.newFileSystem(URI,Map) method to open a new file system identified by a URI. The uri parameter is an absolute, hierarchical URI, with a scheme equal (without regard to case) to the scheme supported by this provider. The exact form of the URI is highly provider dependent. The env parameter is a map of provider specific properties to configure the file system. This method throws FileSystemAlreadyExistsException if the file system already exists because it was previously created by an invocation of this method. Once a file system is closed it is provider-dependent if the provider allows a new file system to be created with the same URI as a file system it previously created.",";java.nio.file.FileSystems.newFileSystem(URI,Map&lt;String,?&gt;);java.nio.file.FileSystems.newFileSystem(URI,Map&lt;String,?&gt;,ClassLoader);java.nio.file.FileSystems.newFileSystem(Path,ClassLoader);java.nio.file.spi.FileSystemProvider.newFileSystem(URI,Map&lt;String,?&gt;);java.nio.file.spi.FileSystemProvider.newFileSystem(Path,Map&lt;String,?&gt;)",;0.36;0.29;0.36;0.37;0.31
newPixels,5,0.604659904,Sends a rectangular region of the buffer of pixels to any ImageConsumers that are currently interested in the data for this image and notify them that an animation frame is complete. This method only has effect if the animation flag has been turned on through the setAnimated() method. If the full buffer update flag was turned on with the setFullBufferUpdates() method then the rectangle parameters will be ignored and the entire buffer will always be sent.,";java.awt.image.MemoryImageSource.newPixels();java.awt.image.MemoryImageSource.newPixels(int,int,int,int);java.awt.image.MemoryImageSource.newPixels(int,int,int,int,boolean);java.awt.image.MemoryImageSource.newPixels(byte[],ColorModel,int,int);java.awt.image.MemoryImageSource.newPixels(int[],ColorModel,int,int)",;0.56;0.60;0.58;0.59;0.59
newSchema,5,0.514042341,Parses the specified URL as a schema and returns it as a Schema.This is a convenience method for newSchema(Source schema).,;javax.xml.validation.SchemaFactory.newSchema(Source);javax.xml.validation.SchemaFactory.newSchema(File);javax.xml.validation.SchemaFactory.newSchema(URL);javax.xml.validation.SchemaFactory.newSchema(Source[]);javax.xml.validation.SchemaFactory.newSchema(),;0.48;0.51;0.51;0.23;0.21
offerFirst,5,0.442596564,Inserts the specified element at the front of this deque.,";java.util.ArrayDeque.offerFirst(E);java.util.LinkedList.offerFirst(E);java.util.concurrent.ConcurrentLinkedDeque.offerFirst(E);java.util.concurrent.LinkedBlockingDeque.offerFirst(E);java.util.concurrent.LinkedBlockingDeque.offerFirst(E,long,TimeUnit)",;0.44;0.43;0.36;0.40;0.40
offerLast,5,0.409082125,Inserts the specified element at the end of this deque.,";java.util.ArrayDeque.offerLast(E);java.util.LinkedList.offerLast(E);java.util.concurrent.ConcurrentLinkedDeque.offerLast(E);java.util.concurrent.LinkedBlockingDeque.offerLast(E);java.util.concurrent.LinkedBlockingDeque.offerLast(E,long,TimeUnit)",;0.41;0.41;0.32;0.40;0.40
offsetByCodePoints,5,0.869233541,Returns the index within this sequence that is offset from the given index by codePointOffset code points. Unpaired surrogates within the text range given by index and codePointOffset count as one code point each.,";java.lang.Character.offsetByCodePoints(CharSequence,int,int);java.lang.Character.offsetByCodePoints(char[],int,int,int,int);java.lang.String.offsetByCodePoints(int,int);java.lang.StringBuffer.offsetByCodePoints(int,int);java.lang.StringBuilder.offsetByCodePoints(int,int)",;0.84;0.68;0.85;0.87;0.87
ofInstant,5,0.472407735,Obtains an instance of OffsetTime from an Instant and zone ID. This creates an offset time with the same instant as that specified. Finding the offset from UTC/Greenwich is simple as there is only one valid offset for each instant. The date component of the instant is dropped during the conversion. This means that the conversion can never fail due to the instant being out of the valid range of dates.,";java.time.LocalDateTime.ofInstant(Instant,ZoneId);java.time.OffsetDateTime.ofInstant(Instant,ZoneId);java.time.OffsetTime.ofInstant(Instant,ZoneId);java.time.ZonedDateTime.ofInstant(Instant,ZoneId);java.time.ZonedDateTime.ofInstant(LocalDateTime,ZoneOffset,ZoneId)",;0.45;0.47;0.47;0.45;0.37
outcode,5,0.96998632,"Determines where the specified coordinates lie with respect to this Rectangle2D. This method computes a binary OR of the appropriate mask values indicating, for each side of this Rectangle2D, whether or not the specified coordinates are on the same side of the edge as the rest of this Rectangle2D.",";java.awt.Rectangle.outcode(double,double);java.awt.geom.Rectangle2D.outcode(double,double);java.awt.geom.Rectangle2D.outcode(Point2D);java.awt.geom.Rectangle2D.Double.outcode(double,double);java.awt.geom.Rectangle2D.Float.outcode(double,double)",;0.97;0.97;0.88;0.97;0.97
paintBackground,5,0.750706747,Paints a background for the view. This will only be called if isOpaque() on the associated component is true. The default is to paint the background color of the component. Overridden to do nothing.,";javax.swing.plaf.basic.BasicMenuItemUI.paintBackground(Graphics,JMenuItem,Color);javax.swing.plaf.basic.BasicTextUI.paintBackground(Graphics);javax.swing.plaf.synth.SynthEditorPaneUI.paintBackground(Graphics);javax.swing.plaf.synth.SynthTextAreaUI.paintBackground(Graphics);javax.swing.plaf.synth.SynthTextFieldUI.paintBackground(Graphics)",;0.20;0.75;0.75;0.75;0.75
parseObject,5,0.750731761,"Parses text from a string to produce an object array. The method attempts to parse text starting at the index given by pos. If parsing succeeds, then the index of pos is updated to the index after the last character used (parsing does not necessarily use all characters up to the end of the string), and the parsed object array is returned. The updated pos can be used to indicate the starting point for the next call to this method. If an error occurs, then the index of pos is not changed, the error index of pos is set to the index of the character where the error occurred, and null is returned. See the parse(String, ParsePosition) method for more information on message parsing.",";java.text.DateFormat.parseObject(String,ParsePosition);java.text.Format.parseObject(String,ParsePosition);java.text.Format.parseObject(String);java.text.MessageFormat.parseObject(String,ParsePosition);java.text.NumberFormat.parseObject(String,ParsePosition)",;0.74;0.73;0.20;0.75;0.74
plusHours,5,0.663362075,Returns a copy of this OffsetDateTime with the specified number of hours added. This instance is immutable and unaffected by this method call.,;java.time.Duration.plusHours(long);java.time.LocalDateTime.plusHours(long);java.time.LocalTime.plusHours(long);java.time.OffsetDateTime.plusHours(long);java.time.OffsetTime.plusHours(long),;0.60;0.66;0.63;0.66;0.63
printf,5,0.78603572,"A convenience method to write a formatted string to this output stream using the specified format string and arguments. An invocation of this method of the form out.printf(l, format, args) behaves in exactly the same way as the invocation out.format(l, format, args)",";java.io.Console.printf(String,Object...);java.io.PrintStream.printf(String,Object...);java.io.PrintStream.printf(Locale,String,Object...);java.io.PrintWriter.printf(String,Object...);java.io.PrintWriter.printf(Locale,String,Object...)",;0.73;0.78;0.79;0.76;0.75
processingInstruction,5,0.2,Adapt a SAX2 processing instruction event.,";org.xml.sax.HandlerBase.processingInstruction(String,String);org.xml.sax.helpers.DefaultHandler.processingInstruction(String,String);org.xml.sax.helpers.ParserAdapter.processingInstruction(String,String);org.xml.sax.helpers.XMLFilterImpl.processingInstruction(String,String);org.xml.sax.helpers.XMLReaderAdapter.processingInstruction(String,String)",;0.00;0.20;0.20;0.20;0.20
prolepticYear,5,1,Description copied from interface:Chronology,";java.time.chrono.HijrahChronology.prolepticYear(Era,int);java.time.chrono.IsoChronology.prolepticYear(Era,int);java.time.chrono.JapaneseChronology.prolepticYear(Era,int);java.time.chrono.MinguoChronology.prolepticYear(Era,int);java.time.chrono.ThaiBuddhistChronology.prolepticYear(Era,int)",;1.00;1.00;1.00;1.00;1.00
putIfAbsent,5,0.440056399,"If the specified key is not already associated with a value, associate it with the given value. This is equivalent to if (!map.containsKey(key)) return map.put(key, value); else return map.get(key); except that the action is performed atomically.",";java.security.Provider.putIfAbsent(Object,Object);java.util.HashMap.putIfAbsent(K,V);java.util.Hashtable.putIfAbsent(K,V);java.util.concurrent.ConcurrentHashMap.putIfAbsent(K,V);java.util.concurrent.ConcurrentSkipListMap.putIfAbsent(K,V)",;0.29;0.40;0.40;0.44;0.44
readAttributes,5,0.347519254,"Reads a file's attributes as a bulk operation. This method works in exactly the manner specified by the Files.readAttributes(Path,Class,LinkOption[]) method.",";java.nio.file.Files.readAttributes(Path,Class&lt;A&gt;,LinkOption...);java.nio.file.Files.readAttributes(Path,String,LinkOption...);java.nio.file.spi.FileSystemProvider.readAttributes(Path,Class&lt;A&gt;,LinkOption...);java.nio.file.spi.FileSystemProvider.readAttributes(Path,String,LinkOption...);javax.swing.text.StyleContext.readAttributes(ObjectInputStream,MutableAttributeSet)",;0.28;0.28;0.35;0.35;0.20
readBoolean,5,0.2,Retrieves the next attribute in this SQLInputImpl object as a boolean in the Java programming language. This method does not perform type-safe checking to determine if the returned type is the expected type; this responsibility is delegated to the UDT mapping as defined by a SQLData implementation.,;java.io.DataInputStream.readBoolean();java.io.ObjectInputStream.readBoolean();java.io.RandomAccessFile.readBoolean();javax.imageio.stream.ImageInputStreamImpl.readBoolean();javax.sql.rowset.serial.SQLInputImpl.readBoolean(),;0.20;0.20;0.20;0.20;0.20
readByte,5,0.2,Retrieves the next attribute in this SQLInputImpl object as a byte in the Java programming language. This method does not perform type-safe checking to determine if the returned type is the expected type; this responsibility is delegated to the UDT mapping as defined by a SQLData implementation.,;java.io.DataInputStream.readByte();java.io.ObjectInputStream.readByte();java.io.RandomAccessFile.readByte();javax.imageio.stream.ImageInputStreamImpl.readByte();javax.sql.rowset.serial.SQLInputImpl.readByte(),;0.20;0.20;0.20;0.20;0.20
readDouble,5,0.2,Retrieves the next attribute in this SQLInputImpl object as a double in the Java programming language. This method does not perform type-safe checking to determine if the returned type is the expected type; this responsibility is delegated to the UDT mapping as defined by a SQLData implementation.,;java.io.DataInputStream.readDouble();java.io.ObjectInputStream.readDouble();java.io.RandomAccessFile.readDouble();javax.imageio.stream.ImageInputStreamImpl.readDouble();javax.sql.rowset.serial.SQLInputImpl.readDouble(),;0.20;0.20;0.20;0.20;0.20
readFloat,5,0.2,Retrieves the next attribute in this SQLInputImpl object as a float in the Java programming language. This method does not perform type-safe checking to determine if the returned type is the expected type; this responsibility is delegated to the UDT mapping as defined by a SQLData implementation.,;java.io.DataInputStream.readFloat();java.io.ObjectInputStream.readFloat();java.io.RandomAccessFile.readFloat();javax.imageio.stream.ImageInputStreamImpl.readFloat();javax.sql.rowset.serial.SQLInputImpl.readFloat(),;0.20;0.20;0.20;0.20;0.20
readInt,5,0.2,Retrieves the next attribute in this SQLInputImpl object as an int in the Java programming language. This method does not perform type-safe checking to determine if the returned type is the expected type; this responsibility is delegated to the UDT mapping as defined by a SQLData implementation.,;java.io.DataInputStream.readInt();java.io.ObjectInputStream.readInt();java.io.RandomAccessFile.readInt();javax.imageio.stream.ImageInputStreamImpl.readInt();javax.sql.rowset.serial.SQLInputImpl.readInt(),;0.20;0.20;0.20;0.20;0.20
readLong,5,0.2,Retrieves the next attribute in this SQLInputImpl object as a long in the Java programming language. This method does not perform type-safe checking to determine if the returned type is the expected type; this responsibility is delegated to the UDT mapping as defined by a SQLData implementation.,;java.io.DataInputStream.readLong();java.io.ObjectInputStream.readLong();java.io.RandomAccessFile.readLong();javax.imageio.stream.ImageInputStreamImpl.readLong();javax.sql.rowset.serial.SQLInputImpl.readLong(),;0.20;0.20;0.20;0.20;0.20
readShort,5,0.2,Retrieves the next attribute in this SQLInputImpl object as a short in the Java programming language. This method does not perform type-safe checking to determine if the returned type is the expected type; this responsibility is delegated to the UDT mapping as defined by a SQLData implementation.,;java.io.DataInputStream.readShort();java.io.ObjectInputStream.readShort();java.io.RandomAccessFile.readShort();javax.imageio.stream.ImageInputStreamImpl.readShort();javax.sql.rowset.serial.SQLInputImpl.readShort(),;0.20;0.20;0.20;0.20;0.20
readUTF,5,0.248634735,Reads from the stream in a representation of a Unicode character string encoded in modified UTF-8 format; this string of characters is then returned as a String. The details of the modified UTF-8 representation are exactly the same as for the readUTF method of DataInput.,;java.io.DataInputStream.readUTF();java.io.DataInputStream.readUTF(DataInput);java.io.ObjectInputStream.readUTF();java.io.RandomAccessFile.readUTF();javax.imageio.stream.ImageInputStreamImpl.readUTF(),;0.21;0.25;0.20;0.22;0.20
refresh,5,0.293790428,"Refresh and reload the Configuration. This method causes this Configuration object to refresh/reload its contents in an implementation-dependent manner. For example, if this Configuration object stores its entries in a file, calling refresh may cause the file to be re-read. The default implementation of this method does nothing. This method should be overridden if a refresh operation is supported by the implementation.",;java.security.Policy.refresh();java.time.zone.ZoneRulesProvider.refresh();javax.security.auth.Policy.refresh();javax.security.auth.kerberos.KerberosTicket.refresh();javax.security.auth.login.Configuration.refresh(),;0.29;0.20;0.00;0.20;0.29
removeElement,5,0.22795549,"Removes the first (lowest-indexed) occurrence of the argument from this vector. If the object is found in this vector, each component in the vector with an index greater or equal to the object's index is shifted downward to have an index one smaller than the value it had previously. This method is identical in functionality to the remove(Object) method (which is part of the List interface).",;java.util.Vector.removeElement(Object);javax.imageio.metadata.IIOMetadataFormatImpl.removeElement(String);javax.swing.DefaultComboBoxModel.removeElement(Object);javax.swing.DefaultListModel.removeElement(Object);javax.swing.text.DefaultStyledDocument.removeElement(Element),;0.23;0.20;0.20;0.20;0.20
resize,5,0.561411145,"Deprecated.As of JDK version 1.1, replaced by setSize(int, int).",";java.applet.Applet.resize(int,int);java.applet.Applet.resize(Dimension);java.awt.Component.resize(int,int);java.awt.Component.resize(Dimension);java.awt.Rectangle.resize(int,int)",;0.40;0.40;0.56;0.53;0.56
resolveEntity,5,0.2,Filter an external entity resolution.,";org.xml.sax.HandlerBase.resolveEntity(String,String);org.xml.sax.ext.DefaultHandler2.resolveEntity(String,String,String,String);org.xml.sax.ext.DefaultHandler2.resolveEntity(String,String);org.xml.sax.helpers.DefaultHandler.resolveEntity(String,String);org.xml.sax.helpers.XMLFilterImpl.resolveEntity(String,String)",;0.00;0.20;0.20;0.20;0.20
revalidate,5,0.6,Overridden for performance reasons. See the Implementation Note for more information.,;java.awt.Component.revalidate();javax.swing.DefaultListCellRenderer.revalidate();javax.swing.JComponent.revalidate();javax.swing.table.DefaultTableCellRenderer.revalidate();javax.swing.tree.DefaultTreeCellRenderer.revalidate(),;0.20;0.60;0.20;0.60;0.60
reverse,5,0.414483802,"Causes this character sequence to be replaced by the reverse of the sequence. If there are any surrogate pairs included in the sequence, these are treated as single characters for the reverse operation. Thus, the order of the high-low surrogates is never reversed. Let n be the character length of this character sequence (not the length in char values) just prior to execution of the reverse method. Then the character at index k in the new character sequence is equal to the character at index n-k-1 in the old character sequence. Note that the reverse operation may result in producing surrogate pairs that were unpaired low-surrogates and high-surrogates before the operation. For example, reversing ""\uDC00\uD800"" produces ""\uD800\uDC00"" which is a valid surrogate pair.",;java.lang.Integer.reverse(int);java.lang.Long.reverse(long);java.lang.StringBuffer.reverse();java.lang.StringBuilder.reverse();java.util.Collections.reverse(List&lt;?&gt;),;0.41;0.41;0.41;0.41;0.25
sendNotification,5,0.4,Description copied from interface:ModelMBeanNotificationBroadcaster,;javax.management.MBeanServerDelegate.sendNotification(Notification);javax.management.NotificationBroadcasterSupport.sendNotification(Notification);javax.management.StandardEmitterMBean.sendNotification(Notification);javax.management.modelmbean.RequiredModelMBean.sendNotification(Notification);javax.management.modelmbean.RequiredModelMBean.sendNotification(String),;0.22;0.22;0.24;0.40;0.40
setAsciiStream,5,0.547893226,"Sets the designated parameter to the given input stream. When a very large ASCII value is input to a LONGVARCHAR parameter, it may be more practical to send it via a java.io.InputStream. Data will be read from the stream as needed until end-of-file is reached. The JDBC driver will do any necessary conversion from ASCII to the database char format. Note: This stream object can either be a standard Java stream object or your own subclass that implements the standard interface. Note: Consult your JDBC driver documentation to determine if it might be more efficient to use a version of setAsciiStream which takes a length parameter.",";javax.sql.rowset.BaseRowSet.setAsciiStream(int,InputStream,int);javax.sql.rowset.BaseRowSet.setAsciiStream(int,InputStream);javax.sql.rowset.BaseRowSet.setAsciiStream(String,InputStream,int);javax.sql.rowset.BaseRowSet.setAsciiStream(String,InputStream);javax.sql.rowset.serial.SerialClob.setAsciiStream(long)",;0.31;0.54;0.49;0.55;0.20
setBinaryStream,5,0.536950812,"Sets the designated parameter to the given input stream. When a very large binary value is input to a LONGVARBINARY parameter, it may be more practical to send it via a java.io.InputStream object. The data will be read from the stream as needed until end-of-file is reached. Note: This stream object can either be a standard Java stream object or your own subclass that implements the standard interface. Note: Consult your JDBC driver documentation to determine if it might be more efficient to use a version of setBinaryStream which takes a length parameter.",";javax.sql.rowset.BaseRowSet.setBinaryStream(int,InputStream,int);javax.sql.rowset.BaseRowSet.setBinaryStream(int,InputStream);javax.sql.rowset.BaseRowSet.setBinaryStream(String,InputStream,int);javax.sql.rowset.BaseRowSet.setBinaryStream(String,InputStream);javax.sql.rowset.serial.SerialBlob.setBinaryStream(long)",;0.30;0.53;0.48;0.54;0.20
setBorder,5,0.327790128,"The viewport ""scrolls"" its child (called the ""view"") by the normal parent/child clipping (typically the view is moved in the opposite direction of the scroll). A non-null border, or non-zero insets, isn't supported, to prevent the geometry of this component from becoming complex enough to inhibit subclassing. To create a JViewport with a border, add it to a JPanel that has a border. Note: If border is non-null, this method will throw an exception as borders are not supported on a JViewPort.",;javax.swing.JComponent.setBorder(Border);javax.swing.JLayer.setBorder(Border);javax.swing.JViewport.setBorder(Border);javax.swing.border.TitledBorder.setBorder(Border);javax.swing.plaf.basic.BasicSplitPaneDivider.setBorder(Border),;0.21;0.32;0.33;0.28;0.29
setBorderPainted,5,0.47641881,"Sets the borderPainted property, which is true if the border should be painted. The default value for this property is true. Some look and feels might not implement painted borders; they will ignore this property.",;javax.swing.AbstractButton.setBorderPainted(boolean);javax.swing.JMenuBar.setBorderPainted(boolean);javax.swing.JPopupMenu.setBorderPainted(boolean);javax.swing.JProgressBar.setBorderPainted(boolean);javax.swing.JToolBar.setBorderPainted(boolean),;0.35;0.40;0.40;0.43;0.48
setColumns,5,0.364973545,"Sets the number of columns in this TextField, and then invalidate the layout.",;java.awt.GridLayout.setColumns(int);java.awt.TextArea.setColumns(int);java.awt.TextField.setColumns(int);javax.swing.JTextArea.setColumns(int);javax.swing.JTextField.setColumns(int),;0.26;0.35;0.34;0.36;0.36
setCursor,5,0.463787167,"Sets the cursor image to the specified cursor. This cursor image is displayed when the contains method for this component returns true for the current cursor location, and this Component is visible, displayable, and enabled. Setting the cursor of a Container causes that cursor to be displayed within all of the container's subcomponents, except for those that have a non-null cursor. The method may have no visual effect if the Java platform implementation and/or the native system do not support changing the mouse cursor shape.",;java.awt.Component.setCursor(Cursor);java.awt.Frame.setCursor(int);java.awt.Window.setCursor(Cursor);java.awt.dnd.DragSourceContext.setCursor(Cursor);javax.swing.JInternalFrame.setCursor(Cursor),;0.46;0.20;0.27;0.20;0.46
setData,5,0.255650927,"Set the data buffer for this packet. With the offset of this DatagramPacket set to 0, and the length set to the length of buf.",";java.awt.color.ICC_Profile.setData(int,byte[]);java.awt.image.BufferedImage.setData(Raster);java.net.DatagramPacket.setData(byte[],int,int);java.net.DatagramPacket.setData(byte[]);javax.imageio.stream.IIOByteBuffer.setData(byte[])",;0.20;0.20;0.25;0.26;0.20
setDescriptor,5,0.755648508,"Sets associated Descriptor (full replace) for the ModelMBeanOperationInfo If the new Descriptor is null, then the associated Descriptor reverts to a default descriptor. The Descriptor is validated before it is assigned. If the new Descriptor is invalid, then a RuntimeOperationsException wrapping an IllegalArgumentException is thrown.",";javax.management.modelmbean.ModelMBeanAttributeInfo.setDescriptor(Descriptor);javax.management.modelmbean.ModelMBeanConstructorInfo.setDescriptor(Descriptor);javax.management.modelmbean.ModelMBeanInfoSupport.setDescriptor(Descriptor,String);javax.management.modelmbean.ModelMBeanNotificationInfo.setDescriptor(Descriptor);javax.management.modelmbean.ModelMBeanOperationInfo.setDescriptor(Descriptor)",;0.76;0.74;0.20;0.76;0.76
setDimensions,5,0.763326358,Filters the information provided in the setDimensions method of the ImageConsumer interface. Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being filtered. Developers using this class to filter pixels from an image should avoid calling this method directly since that operation could interfere with the filtering operation.,";java.awt.image.BufferedImageFilter.setDimensions(int,int);java.awt.image.CropImageFilter.setDimensions(int,int);java.awt.image.ImageFilter.setDimensions(int,int);java.awt.image.PixelGrabber.setDimensions(int,int);java.awt.image.ReplicateScaleFilter.setDimensions(int,int)",;0.75;0.75;0.76;0.67;0.74
setDividerLocation,5,0.400249107,Sets the location of the divider to location.,";javax.swing.JSplitPane.setDividerLocation(double);javax.swing.JSplitPane.setDividerLocation(int);javax.swing.plaf.SplitPaneUI.setDividerLocation(JSplitPane,int);javax.swing.plaf.basic.BasicSplitPaneUI.setDividerLocation(JSplitPane,int);javax.swing.plaf.multi.MultiSplitPaneUI.setDividerLocation(JSplitPane,int)",;0.20;0.23;0.40;0.40;0.20
setDocumentLocator,5,0.2,Set a document locator.,;org.xml.sax.HandlerBase.setDocumentLocator(Locator);org.xml.sax.helpers.DefaultHandler.setDocumentLocator(Locator);org.xml.sax.helpers.ParserAdapter.setDocumentLocator(Locator);org.xml.sax.helpers.XMLFilterImpl.setDocumentLocator(Locator);org.xml.sax.helpers.XMLReaderAdapter.setDocumentLocator(Locator),;0.00;0.20;0.20;0.20;0.20
setEditable,5,0.210220634,"Sets the flag that determines whether or not this text component is editable. If the flag is set to true, this text component becomes user editable. If the flag is set to false, the user cannot change the text of this text component. By default, non-editable text components have a background color of SystemColor.control. This default can be overridden by calling setBackground.",;java.awt.TextComponent.setEditable(boolean);javax.swing.JComboBox.setEditable(boolean);javax.swing.JTree.setEditable(boolean);javax.swing.plaf.basic.BasicTreeUI.setEditable(boolean);javax.swing.text.JTextComponent.setEditable(boolean),;0.21;0.20;0.20;0.20;0.21
setEncoding,5,0.385802549,Set the character encoding used by this Handler. The encoding should be set before any LogRecords are written to the Handler.,;java.util.logging.Handler.setEncoding(String);java.util.logging.StreamHandler.setEncoding(String);javax.xml.bind.helpers.AbstractMarshallerImpl.setEncoding(String);org.xml.sax.InputSource.setEncoding(String);org.xml.sax.ext.Locator2Impl.setEncoding(String),;0.39;0.37;0.20;0.21;0.20
setIcon,5,0.213332675,"Iconifies or de-iconifies this internal frame, if the look and feel supports iconification. If the internal frame's state changes to iconified, this method fires an INTERNAL_FRAME_ICONIFIED event. If the state changes to de-iconified, an INTERNAL_FRAME_DEICONIFIED event is fired.",";javax.swing.AbstractButton.setIcon(Icon);javax.swing.JInternalFrame.setIcon(boolean);javax.swing.JLabel.setIcon(Icon);javax.swing.JOptionPane.setIcon(Icon);javax.swing.text.StyleConstants.setIcon(MutableAttributeSet,Icon)",;0.20;0.21;0.20;0.21;0.20
setJMenuBar,5,0.503934274,Sets the menubar for this frame.,;javax.swing.JApplet.setJMenuBar(JMenuBar);javax.swing.JDialog.setJMenuBar(JMenuBar);javax.swing.JFrame.setJMenuBar(JMenuBar);javax.swing.JInternalFrame.setJMenuBar(JMenuBar);javax.swing.JRootPane.setJMenuBar(JMenuBar),;0.50;0.50;0.50;0.20;0.20
setLength,5,0.425505108,"Sets the length of the character sequence. The sequence is changed to a new character sequence whose length is specified by the argument. For every nonnegative index k less than newLength, the character at index k in the new character sequence is the same as the character at index k in the old sequence if k is less than the length of the old character sequence; otherwise, it is the null character '\u0000'. In other words, if the newLength argument is less than the current length, the length is changed to the specified length. If the newLength argument is greater than or equal to the current length, sufficient null characters ('\u0000') are appended so that length becomes the newLength argument. The newLength argument must be greater than or equal to 0.",;java.io.RandomAccessFile.setLength(long);java.lang.StringBuffer.setLength(int);java.lang.StringBuilder.setLength(int);java.net.DatagramPacket.setLength(int);javax.imageio.stream.IIOByteBuffer.setLength(int),;0.23;0.43;0.43;0.22;0.20
setLevel,5,0.271630094,"Set the log level specifying which message levels will be logged by this logger. Message levels lower than this value will be discarded. The level value Level.OFF can be used to turn off logging. If the new level is null, it means that this node should inherit its level from its nearest ancestor with a specific (non-null) level value.",;java.util.logging.Handler.setLevel(Level);java.util.logging.Logger.setLevel(Level);java.util.logging.LogRecord.setLevel(Level);java.util.zip.Deflater.setLevel(int);java.util.zip.ZipOutputStream.setLevel(int),;0.27;0.27;0.20;0.21;0.21
setMBeanServer,5,0.2,Sets the MBeanServer to which this connector server is attached. New client connections will interact with this MBeanServer. Existing client connections are unaffected.,;javax.management.AttributeValueExp.setMBeanServer(MBeanServer);javax.management.ObjectName.setMBeanServer(MBeanServer);javax.management.QueryEval.setMBeanServer(MBeanServer);javax.management.StringValueExp.setMBeanServer(MBeanServer);javax.management.remote.rmi.RMIServerImpl.setMBeanServer(MBeanServer),;0.20;0.20;0.20;0.00;0.20
setOffset,5,0.2,Set the offset field on this event locator.,;java.io.ObjectStreamField.setOffset(int);java.text.CollationElementIterator.setOffset(int);javax.imageio.stream.IIOByteBuffer.setOffset(int);javax.management.monitor.CounterMonitor.setOffset(Number);javax.xml.bind.helpers.ValidationEventLocatorImpl.setOffset(int),;0.20;0.20;0.20;0.20;0.20
setOption,5,1,Description copied from interface:NetworkChannel,";java.nio.channels.AsynchronousServerSocketChannel.setOption(SocketOption&lt;T&gt;,T);java.nio.channels.AsynchronousSocketChannel.setOption(SocketOption&lt;T&gt;,T);java.nio.channels.DatagramChannel.setOption(SocketOption&lt;T&gt;,T);java.nio.channels.ServerSocketChannel.setOption(SocketOption&lt;T&gt;,T);java.nio.channels.SocketChannel.setOption(SocketOption&lt;T&gt;,T)",;1.00;1.00;1.00;1.00;1.00
setRootPane,5,0.813979201,Sets the rootPane property. This method is called by the constructor.,;javax.swing.JApplet.setRootPane(JRootPane);javax.swing.JDialog.setRootPane(JRootPane);javax.swing.JFrame.setRootPane(JRootPane);javax.swing.JInternalFrame.setRootPane(JRootPane);javax.swing.JWindow.setRootPane(JRootPane),;0.81;0.81;0.81;0.67;0.57
setRootPaneCheckingEnabled,5,1,Sets whether calls to add and setLayout are forwarded to the contentPane.,;javax.swing.JApplet.setRootPaneCheckingEnabled(boolean);javax.swing.JDialog.setRootPaneCheckingEnabled(boolean);javax.swing.JFrame.setRootPaneCheckingEnabled(boolean);javax.swing.JInternalFrame.setRootPaneCheckingEnabled(boolean);javax.swing.JWindow.setRootPaneCheckingEnabled(boolean),;1.00;1.00;1.00;1.00;1.00
setRootVisible,5,0.731848126,Determines whether or not the root node from the TreeModel is visible.,;javax.swing.JTree.setRootVisible(boolean);javax.swing.plaf.basic.BasicTreeUI.setRootVisible(boolean);javax.swing.tree.AbstractLayoutCache.setRootVisible(boolean);javax.swing.tree.FixedHeightLayoutCache.setRootVisible(boolean);javax.swing.tree.VariableHeightLayoutCache.setRootVisible(boolean),;0.61;0.20;0.73;0.73;0.73
setSchema,5,0.358517461,"Set the Schema to be used by parsers created from this factory. When a Schema is non-null, a parser will use a validator created from it to validate documents before it passes information down to the application. When errors are found by the validator, the parser is responsible to report them to the user-specified ErrorHandler (or if the error handler is not set, ignore them or throw them), just like any other errors found by the parser itself. In other words, if the user-specified ErrorHandler is set, it must receive those errors, and if not, they must be treated according to the implementation specific default error handling rules. A validator may modify the outcome of a parse (for example by adding default values that were missing in documents), and a parser is responsible to make sure that the application will receive modified DOM trees. Initialy, null is set as the Schema. This processing will take effect even if the isValidating() method returns false. It is an error to use the http://java.sun.com/xml/jaxp/properties/schemaSource property and/or the http://java.sun.com/xml/jaxp/properties/schemaLanguage property in conjunction with a Schema object. Such configuration will cause a ParserConfigurationException exception when the newDocumentBuilder() is invoked.Note for implmentors A parser must be able to work with any Schema implementation. However, parsers and schemas are allowed to use implementation-specific custom mechanisms as long as they yield the result described in the specification.",;javax.xml.bind.Binder.setSchema(Schema);javax.xml.bind.helpers.AbstractMarshallerImpl.setSchema(Schema);javax.xml.bind.helpers.AbstractUnmarshallerImpl.setSchema(Schema);javax.xml.parsers.DocumentBuilderFactory.setSchema(Schema);javax.xml.parsers.SAXParserFactory.setSchema(Schema),;0.20;0.33;0.33;0.36;0.36
setString,5,0.268612628,Sets the designated parameter to the given String value. The driver converts this to an SQL VARCHAR or LONGVARCHAR value (depending on the argument's size relative to the driver's limits on VARCHAR values) when it sends it to the database. The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this RowSet object's command when the method execute is called. Methods such as execute and populate must be provided in any class that extends this class and implements one or more of the standard JSR-114 RowSet interfaces. NOTE: JdbcRowSet does not require the populate method as it is undefined in this class.,";javax.sql.rowset.BaseRowSet.setString(int,String);javax.sql.rowset.BaseRowSet.setString(String,String);javax.sql.rowset.serial.SerialClob.setString(long,String);javax.sql.rowset.serial.SerialClob.setString(long,String,int,int);javax.swing.JProgressBar.setString(String)",;0.27;0.25;0.27;0.26;0.20
setTransferHandler,5,0.834473451,"Sets the transferHandler property, which is a mechanism to support transfer of data into this component. Use null if the component does not support data transfer operations. If the system property suppressSwingDropSupport is false (the default) and the current drop target on this component is either null or not a user-set drop target, this method will change the drop target as follows: If newHandler is null it will clear the drop target. If not null it will install a new DropTarget. Note: When used with JWindow, TransferHandler only provides data import capability, as the data export related methods are currently typed to JComponent. Please see How to Use Drag and Drop and Data Transfer, a section in The Java Tutorial, for more information.",;javax.swing.JApplet.setTransferHandler(TransferHandler);javax.swing.JComponent.setTransferHandler(TransferHandler);javax.swing.JDialog.setTransferHandler(TransferHandler);javax.swing.JFrame.setTransferHandler(TransferHandler);javax.swing.JWindow.setTransferHandler(TransferHandler),;0.83;0.41;0.83;0.83;0.83
setType,5,0.2,Set the type of a specific attribute.,";java.awt.Window.setType(Window.Type);java.nio.file.attribute.AclEntry.Builder.setType(AclEntryType);javax.sql.rowset.BaseRowSet.setType(int);javax.swing.text.DefaultStyledDocument.ElementSpec.setType(short);org.xml.sax.helpers.AttributesImpl.setType(int,String)",;0.20;0.20;0.20;0.20;0.20
shutdown,5,0.386324845,"Initiates an orderly shutdown in which previously submitted tasks are executed, but no new tasks will be accepted. Invocation has no additional effect if already shut down. This method does not wait for previously submitted tasks to complete execution. Use awaitTermination to do that. If the ExecuteExistingDelayedTasksAfterShutdownPolicy has been set false, existing delayed tasks whose delays have not yet elapsed are cancelled. And unless the ContinueExistingPeriodicTasksAfterShutdownPolicy has been set true, future executions of existing periodic tasks will be cancelled.",;java.nio.channels.AsynchronousChannelGroup.shutdown();java.util.concurrent.ForkJoinPool.shutdown();java.util.concurrent.ScheduledThreadPoolExecutor.shutdown();java.util.concurrent.ThreadPoolExecutor.shutdown();org.omg.CORBA.ORB.shutdown(boolean),;0.22;0.35;0.39;0.38;0.20
skipBytes,5,0.4,Advances the current stream position by calling seek(getStreamPosition() + n). The bit offset is reset to zero.,;java.io.DataInputStream.skipBytes(int);java.io.ObjectInputStream.skipBytes(int);java.io.RandomAccessFile.skipBytes(int);javax.imageio.stream.ImageInputStreamImpl.skipBytes(int);javax.imageio.stream.ImageInputStreamImpl.skipBytes(long),;0.20;0.00;0.20;0.40;0.40
split,5,0.391553652,"Splits the given input sequence around matches of this pattern. The array returned by this method contains each substring of the input sequence that is terminated by another subsequence that matches this pattern or is terminated by the end of the input sequence. The substrings in the array are in the order in which they occur in the input. If this pattern does not match any subsequence of the input then the resulting array has just one element, namely the input sequence in string form. When there is a positive-width match at the beginning of the input sequence then an empty leading substring is included at the beginning of the resulting array. A zero-width match at the beginning however never produces such empty leading substring. The limit parameter controls the number of times the pattern is applied and therefore affects the length of the resulting array. If the limit n is greater than zero then the pattern will be applied at most n-1 times, the array's length will be no greater than n, and the array's last entry will contain all input beyond the last matched delimiter. If n is non-positive then the pattern will be applied as many times as possible and the array can have any length. If n is zero then the pattern will be applied as many times as possible, the array can have any length, and trailing empty strings will be discarded. The input ""boo:and:foo"", for example, yields the following results with these parameters: RegexLimitResult:2{ ""boo"", ""and:foo"" }:5{ ""boo"", ""and"", ""foo"" }:-2{ ""boo"", ""and"", ""foo"" }o5{ ""b"", """", "":and:f"", """", """" }o-2{ ""b"", """", "":and:f"", """", """" }o0{ ""b"", """", "":and:f"" }",";java.lang.String.split(String,int);java.lang.String.split(String);java.util.SplittableRandom.split();java.util.regex.Pattern.split(CharSequence,int);java.util.regex.Pattern.split(CharSequence)",;0.39;0.36;0.20;0.39;0.36
startDocument,5,0.2,Filter a start document event.,;org.xml.sax.HandlerBase.startDocument();org.xml.sax.helpers.DefaultHandler.startDocument();org.xml.sax.helpers.ParserAdapter.startDocument();org.xml.sax.helpers.XMLFilterImpl.startDocument();org.xml.sax.helpers.XMLReaderAdapter.startDocument(),;0.00;0.20;0.20;0.20;0.00
startElement,5,0.2,Adapt a SAX2 start element event.,";org.xml.sax.HandlerBase.startElement(String,AttributeList);org.xml.sax.helpers.DefaultHandler.startElement(String,String,String,Attributes);org.xml.sax.helpers.ParserAdapter.startElement(String,AttributeList);org.xml.sax.helpers.XMLFilterImpl.startElement(String,String,String,Attributes);org.xml.sax.helpers.XMLReaderAdapter.startElement(String,String,String,Attributes)",;0.00;0.20;0.20;0.20;0.20
subSequence,5,0.528234077,"Returns a new character sequence that is a subsequence of this sequence. An invocation of this method of the form sb.subSequence(begin,&amp;nbsp;end) behaves in exactly the same way as the invocation sb.substring(begin,&amp;nbsp;end) This method is provided so that this class can implement the CharSequence interface.",";java.lang.String.subSequence(int,int);java.lang.StringBuffer.subSequence(int,int);java.lang.StringBuilder.subSequence(int,int);java.nio.CharBuffer.subSequence(int,int);javax.swing.text.Segment.subSequence(int,int)",;0.41;0.53;0.53;0.20;0.29
subtract,5,0.257235472,"Returns a BigDecimal whose value is (this - subtrahend), and whose scale is max(this.scale(), subtrahend.scale()).",";java.awt.geom.Area.subtract(Area);java.math.BigDecimal.subtract(BigDecimal);java.math.BigDecimal.subtract(BigDecimal,MathContext);java.math.BigInteger.subtract(BigInteger);javax.xml.datatype.Duration.subtract(Duration)",;0.20;0.26;0.25;0.23;0.21
synchronizedView,5,0.74939996,Creates a synchronized view of the given print service attribute set.,;javax.print.attribute.AttributeSetUtilities.synchronizedView(AttributeSet);javax.print.attribute.AttributeSetUtilities.synchronizedView(DocAttributeSet);javax.print.attribute.AttributeSetUtilities.synchronizedView(PrintRequestAttributeSet);javax.print.attribute.AttributeSetUtilities.synchronizedView(PrintJobAttributeSet);javax.print.attribute.AttributeSetUtilities.synchronizedView(PrintServiceAttributeSet),;0.73;0.73;0.75;0.75;0.75
toEpochDay,5,1,Description copied from interface:ChronoLocalDate,;java.time.LocalDate.toEpochDay();java.time.chrono.HijrahDate.toEpochDay();java.time.chrono.JapaneseDate.toEpochDay();java.time.chrono.MinguoDate.toEpochDay();java.time.chrono.ThaiBuddhistDate.toEpochDay(),;1.00;1.00;1.00;1.00;1.00
toGenericString,5,0.429932162,"Returns a string describing this Method, including type parameters. The string is formatted as the method access modifiers, if any, followed by an angle-bracketed comma-separated list of the method's type parameters, if any, followed by the method's generic return type, followed by a space, followed by the class declaring the method, followed by a period, followed by the method name, followed by a parenthesized, comma-separated list of the method's generic formal parameter types. If this method was declared to take a variable number of arguments, instead of denoting the last parameter as ""Type[]"", it is denoted as ""Type..."". A space is used to separate access modifiers from one another and from the type parameters or return type. If there are no type parameters, the type parameter list is elided; if the type parameter list is present, a space separates the list from the class name. If the method is declared to throw exceptions, the parameter list is followed by a space, followed by the word throws followed by a comma-separated list of the generic thrown exception types. The access modifiers are placed in canonical order as specified by ""The Java Language Specification"". This is public, protected or private first, and then other modifiers in the following order: abstract, default, static, final, synchronized, native, strictfp.",;java.lang.Class.toGenericString();java.lang.reflect.Constructor.toGenericString();java.lang.reflect.Executable.toGenericString();java.lang.reflect.Field.toGenericString();java.lang.reflect.Method.toGenericString(),;0.31;0.41;0.20;0.27;0.43
toLocalTime,5,0.828825375,"Gets the LocalTime part of this date-time. This returns a LocalTime with the same hour, minute, second and nanosecond as this date-time.",;java.sql.Time.toLocalTime();java.time.LocalDateTime.toLocalTime();java.time.OffsetDateTime.toLocalTime();java.time.OffsetTime.toLocalTime();java.time.ZonedDateTime.toLocalTime(),;0.32;0.83;0.83;0.83;0.83
toStub,5,0.2,Returns a stub for the given server object.,;java.rmi.server.RemoteObject.toStub(Remote);javax.management.remote.rmi.RMIIIOPServerImpl.toStub();javax.management.remote.rmi.RMIJRMPServerImpl.toStub();javax.management.remote.rmi.RMIServerImpl.toStub();javax.rmi.PortableRemoteObject.toStub(Remote),;0.20;0.20;0.20;0.20;0.20
trimToSize,5,0.4,"Attempts to reduce storage used for the character sequence. If the buffer is larger than necessary to hold its current sequence of characters, then it may be resized to become more space efficient. Calling this method may, but is not required to, affect the value returned by a subsequent call to the capacity() method.",;java.lang.StringBuffer.trimToSize();java.lang.StringBuilder.trimToSize();java.util.ArrayList.trimToSize();java.util.Vector.trimToSize();javax.swing.DefaultListModel.trimToSize(),;0.40;0.40;0.30;0.27;0.25
unbind,5,0.4,The unbind operation removes a name binding from a context.,;java.rmi.Naming.unbind(String);javax.naming.InitialContext.unbind(String);javax.naming.InitialContext.unbind(Name);org.omg.CosNaming._NamingContextExtStub.unbind(NameComponent[]);org.omg.CosNaming._NamingContextStub.unbind(NameComponent[]),;0.20;0.40;0.40;0.40;0.40
unmodifiableView,5,0.74939996,Creates an unmodifiable view of the given print service attribute set.,;javax.print.attribute.AttributeSetUtilities.unmodifiableView(AttributeSet);javax.print.attribute.AttributeSetUtilities.unmodifiableView(DocAttributeSet);javax.print.attribute.AttributeSetUtilities.unmodifiableView(PrintRequestAttributeSet);javax.print.attribute.AttributeSetUtilities.unmodifiableView(PrintJobAttributeSet);javax.print.attribute.AttributeSetUtilities.unmodifiableView(PrintServiceAttributeSet),;0.73;0.73;0.75;0.75;0.75
visitVariable,5,0.41234344,"Visits a variable element. This implementation scans the enclosed elements, unless the element is a RESOURCE_VARIABLE in which case visitUnknown is called.",";javax.lang.model.util.ElementKindVisitor6.visitVariable(VariableElement,P);javax.lang.model.util.ElementScanner6.visitVariable(VariableElement,P);javax.lang.model.util.ElementScanner7.visitVariable(VariableElement,P);javax.lang.model.util.SimpleElementVisitor6.visitVariable(VariableElement,P);javax.lang.model.util.SimpleElementVisitor7.visitVariable(VariableElement,P)",;0.25;0.41;0.21;0.39;0.20
warning,5,0.2794256,"Log a WARNING message, which is only to be constructed if the logging level is such that the message will actually be logged. If the logger is currently enabled for the WARNING message level then the message is constructed by invoking the provided supplier function and forwarded to all the registered output Handler objects.",;java.util.logging.Logger.warning(String);java.util.logging.Logger.warning(Supplier&lt;String&gt;);org.xml.sax.HandlerBase.warning(SAXParseException);org.xml.sax.helpers.DefaultHandler.warning(SAXParseException);org.xml.sax.helpers.XMLFilterImpl.warning(SAXParseException),;0.26;0.28;0.00;0.20;0.20
withDayOfMonth,5,0.577594279,"Returns a copy of this LocalDateTime with the day-of-month altered. If the resulting date-time is invalid, an exception is thrown. The time does not affect the calculation and will be the same in the result. This instance is immutable and unaffected by this method call.",;java.time.LocalDate.withDayOfMonth(int);java.time.LocalDateTime.withDayOfMonth(int);java.time.MonthDay.withDayOfMonth(int);java.time.OffsetDateTime.withDayOfMonth(int);java.time.ZonedDateTime.withDayOfMonth(int),;0.49;0.58;0.49;0.57;0.35
withHour,5,0.55777765,Returns a copy of this OffsetTime with the hour-of-day altered. The offset does not affect the calculation and will be the same in the result. This instance is immutable and unaffected by this method call.,;java.time.LocalDateTime.withHour(int);java.time.LocalTime.withHour(int);java.time.OffsetDateTime.withHour(int);java.time.OffsetTime.withHour(int);java.time.ZonedDateTime.withHour(int),;0.53;0.53;0.55;0.56;0.34
withMinute,5,0.55777765,Returns a copy of this OffsetTime with the minute-of-hour altered. The offset does not affect the calculation and will be the same in the result. This instance is immutable and unaffected by this method call.,;java.time.LocalDateTime.withMinute(int);java.time.LocalTime.withMinute(int);java.time.OffsetDateTime.withMinute(int);java.time.OffsetTime.withMinute(int);java.time.ZonedDateTime.withMinute(int),;0.53;0.53;0.55;0.56;0.34
withNano,5,0.55777765,Returns a copy of this OffsetTime with the nano-of-second altered. The offset does not affect the calculation and will be the same in the result. This instance is immutable and unaffected by this method call.,;java.time.LocalDateTime.withNano(int);java.time.LocalTime.withNano(int);java.time.OffsetDateTime.withNano(int);java.time.OffsetTime.withNano(int);java.time.ZonedDateTime.withNano(int),;0.53;0.53;0.55;0.56;0.34
withSecond,5,0.55777765,Returns a copy of this OffsetTime with the second-of-minute altered. The offset does not affect the calculation and will be the same in the result. This instance is immutable and unaffected by this method call.,;java.time.LocalDateTime.withSecond(int);java.time.LocalTime.withSecond(int);java.time.OffsetDateTime.withSecond(int);java.time.OffsetTime.withSecond(int);java.time.ZonedDateTime.withSecond(int),;0.53;0.53;0.55;0.56;0.34
withYear,5,0.588300161,"Returns a copy of this LocalDateTime with the year altered. The time does not affect the calculation and will be the same in the result. If the day-of-month is invalid for the year, it will be changed to the last valid day of the month. This instance is immutable and unaffected by this method call.",;java.time.LocalDate.withYear(int);java.time.LocalDateTime.withYear(int);java.time.OffsetDateTime.withYear(int);java.time.YearMonth.withYear(int);java.time.ZonedDateTime.withYear(int),;0.54;0.59;0.58;0.30;0.34
write_value,5,0.8,Marshals a value type to the output stream.,";org.omg.CORBA.Any.write_value(OutputStream);org.omg.CORBA_2_3.portable.OutputStream.write_value(Serializable);org.omg.CORBA_2_3.portable.OutputStream.write_value(Serializable,Class);org.omg.CORBA_2_3.portable.OutputStream.write_value(Serializable,String);org.omg.CORBA_2_3.portable.OutputStream.write_value(Serializable,BoxedValueHelper)",;0.20;0.80;0.80;0.80;0.80
writeBoolean,5,0.317807897,Writes a boolean to the file as a one-byte value. The value true is written out as the value (byte)1; the value false is written out as the value (byte)0. The write starts at the current position of the file pointer.,;java.io.DataOutputStream.writeBoolean(boolean);java.io.ObjectOutputStream.writeBoolean(boolean);java.io.RandomAccessFile.writeBoolean(boolean);javax.imageio.stream.ImageOutputStreamImpl.writeBoolean(boolean);javax.sql.rowset.serial.SQLOutputImpl.writeBoolean(boolean),;0.32;0.00;0.32;0.20;0.20
writeByte,5,0.22584145,"Writes out a byte to the underlying output stream as a 1-byte value. If no exception is thrown, the counter written is incremented by 1.",;java.io.DataOutputStream.writeByte(int);java.io.ObjectOutputStream.writeByte(int);java.io.RandomAccessFile.writeByte(int);javax.imageio.stream.ImageOutputStreamImpl.writeByte(int);javax.sql.rowset.serial.SQLOutputImpl.writeByte(byte),;0.23;0.20;0.23;0.20;0.20
writeBytes,5,0.322555552,"Writes the string to the file as a sequence of bytes. Each character in the string is written out, in sequence, by discarding its high eight bits. The write starts at the current position of the file pointer.",;java.io.DataOutputStream.writeBytes(String);java.io.ObjectOutputStream.writeBytes(String);java.io.RandomAccessFile.writeBytes(String);javax.imageio.stream.ImageOutputStreamImpl.writeBytes(String);javax.sql.rowset.serial.SQLOutputImpl.writeBytes(byte[]),;0.32;0.20;0.32;0.20;0.20
writeChars,5,0.4,Description copied from interface:ImageOutputStream,";java.io.DataOutputStream.writeChars(String);java.io.ObjectOutputStream.writeChars(String);java.io.RandomAccessFile.writeChars(String);javax.imageio.stream.ImageOutputStreamImpl.writeChars(String);javax.imageio.stream.ImageOutputStreamImpl.writeChars(char[],int,int)",;0.32;0.20;0.32;0.40;0.40
writeDouble,5,0.313954101,"Converts the double argument to a long using the doubleToLongBits method in class Double, and then writes that long value to the file as an eight-byte quantity, high byte first. The write starts at the current position of the file pointer.",;java.io.DataOutputStream.writeDouble(double);java.io.ObjectOutputStream.writeDouble(double);java.io.RandomAccessFile.writeDouble(double);javax.imageio.stream.ImageOutputStreamImpl.writeDouble(double);javax.sql.rowset.serial.SQLOutputImpl.writeDouble(double),;0.31;0.20;0.31;0.20;0.20
writeFloat,5,0.313954101,"Converts the float argument to an int using the floatToIntBits method in class Float, and then writes that int value to the file as a four-byte quantity, high byte first. The write starts at the current position of the file pointer.",;java.io.DataOutputStream.writeFloat(float);java.io.ObjectOutputStream.writeFloat(float);java.io.RandomAccessFile.writeFloat(float);javax.imageio.stream.ImageOutputStreamImpl.writeFloat(float);javax.sql.rowset.serial.SQLOutputImpl.writeFloat(float),;0.31;0.20;0.31;0.20;0.20
writeInt,5,0.264107064,"Writes an int to the file as four bytes, high byte first. The write starts at the current position of the file pointer.",;java.io.DataOutputStream.writeInt(int);java.io.ObjectOutputStream.writeInt(int);java.io.RandomAccessFile.writeInt(int);javax.imageio.stream.ImageOutputStreamImpl.writeInt(int);javax.sql.rowset.serial.SQLOutputImpl.writeInt(int),;0.26;0.20;0.26;0.20;0.20
writeLong,5,0.264107064,"Writes a long to the file as eight bytes, high byte first. The write starts at the current position of the file pointer.",;java.io.DataOutputStream.writeLong(long);java.io.ObjectOutputStream.writeLong(long);java.io.RandomAccessFile.writeLong(long);javax.imageio.stream.ImageOutputStreamImpl.writeLong(long);javax.sql.rowset.serial.SQLOutputImpl.writeLong(long),;0.26;0.20;0.26;0.20;0.20
writeObject,5,0.224960656,"Write the specified object to the output stream. The serialized form will denote a series of expressions, the combined effect of which will create an equivalent object when the input stream is read. By default, the object is assumed to be a JavaBean with a nullary constructor, whose state is defined by the matching pairs of ""setter"" and ""getter"" methods returned by the Introspector.",";java.beans.Encoder.writeObject(Object);java.beans.PersistenceDelegate.writeObject(Object,Encoder);java.beans.XMLEncoder.writeObject(Object);java.io.ObjectOutputStream.writeObject(Object);javax.sql.rowset.serial.SQLOutputImpl.writeObject(SQLData)",;0.22;0.20;0.20;0.22;0.20
writeShort,5,0.264107064,"Writes a short to the file as two bytes, high byte first. The write starts at the current position of the file pointer.",;java.io.DataOutputStream.writeShort(int);java.io.ObjectOutputStream.writeShort(int);java.io.RandomAccessFile.writeShort(int);javax.imageio.stream.ImageOutputStreamImpl.writeShort(int);javax.sql.rowset.serial.SQLOutputImpl.writeShort(short),;0.26;0.20;0.26;0.20;0.20
addAndGet,6,0.62529793,Atomically adds the given value to the current value.,";java.util.concurrent.atomic.AtomicInteger.addAndGet(int);java.util.concurrent.atomic.AtomicIntegerArray.addAndGet(int,int);java.util.concurrent.atomic.AtomicIntegerFieldUpdater.addAndGet(T,int);java.util.concurrent.atomic.AtomicLong.addAndGet(long);java.util.concurrent.atomic.AtomicLongArray.addAndGet(int,long);java.util.concurrent.atomic.AtomicLongFieldUpdater.addAndGet(T,long)",;0.63;0.61;0.56;0.63;0.61;0.56
addNotificationListener,6,0.556246768,Description copied from interface:RMIConnection,";javax.management.MBeanServerDelegate.addNotificationListener(NotificationListener,NotificationFilter,Object);javax.management.NotificationBroadcasterSupport.addNotificationListener(NotificationListener,NotificationFilter,Object);javax.management.StandardEmitterMBean.addNotificationListener(NotificationListener,NotificationFilter,Object);javax.management.modelmbean.RequiredModelMBean.addNotificationListener(NotificationListener,NotificationFilter,Object);javax.management.remote.rmi.RMIConnectionImpl.addNotificationListener(ObjectName,ObjectName,MarshalledObject,MarshalledObject,Subject);javax.management.remote.rmi.RMIConnectionImpl_Stub.addNotificationListener(ObjectName,ObjectName,MarshalledObject,MarshalledObject,Subject)",;0.56;0.00;0.56;0.17;0.56;0.56
calculateMinorAxisRequirements,6,0.290787214,"Calculate the needs for the paragraph along the minor axis. If size requirements are explicitly specified for the paragraph, use that requirements. Otherwise, use the requirements of the superclass ParagraphView.If the axis parameter is neither View.X_AXIS nor View.Y_AXIS, IllegalArgumentException is thrown. If the r parameter is null, a new SizeRequirements object is created, otherwise the supplied SizeRequirements object is returned.",";javax.swing.text.BoxView.calculateMinorAxisRequirements(int,SizeRequirements);javax.swing.text.FlowView.calculateMinorAxisRequirements(int,SizeRequirements);javax.swing.text.ParagraphView.calculateMinorAxisRequirements(int,SizeRequirements);javax.swing.text.TableView.calculateMinorAxisRequirements(int,SizeRequirements);javax.swing.text.html.BlockView.calculateMinorAxisRequirements(int,SizeRequirements);javax.swing.text.html.ParagraphView.calculateMinorAxisRequirements(int,SizeRequirements)",;0.17;0.21;0.29;0.25;0.24;0.29
checkAccess,6,0.309870879,"Determines if the currently running thread has permission to modify this thread. If there is a security manager, its checkAccess method is called with this thread as its argument. This may result in throwing a SecurityException.",";java.lang.SecurityManager.checkAccess(Thread);java.lang.SecurityManager.checkAccess(ThreadGroup);java.lang.Thread.checkAccess();java.lang.ThreadGroup.checkAccess();java.nio.file.spi.FileSystemProvider.checkAccess(Path,AccessMode...);java.util.logging.LogManager.checkAccess()",;0.29;0.29;0.31;0.31;0.17;0.17
codePointAt,6,0.817180798,"Returns the character (Unicode code point) at the specified index. The index refers to char values (Unicode code units) and ranges from 0 to length()- 1. If the char value specified at the given index is in the high-surrogate range, the following index is less than the length of this sequence, and the char value at the following index is in the low-surrogate range, then the supplementary code point corresponding to this surrogate pair is returned. Otherwise, the char value at the given index is returned.",";java.lang.Character.codePointAt(CharSequence,int);java.lang.Character.codePointAt(char[],int);java.lang.Character.codePointAt(char[],int,int);java.lang.String.codePointAt(int);java.lang.StringBuffer.codePointAt(int);java.lang.StringBuilder.codePointAt(int)",;0.75;0.77;0.74;0.81;0.82;0.82
codePointBefore,6,0.737121295,"Returns the character (Unicode code point) before the specified index. The index refers to char values (Unicode code units) and ranges from 1 to length(). If the char value at (index - 1) is in the low-surrogate range, (index - 2) is not negative, and the char value at (index - 2) is in the high-surrogate range, then the supplementary code point value of the surrogate pair is returned. If the char value at index - 1 is an unpaired low-surrogate or a high-surrogate, the surrogate value is returned.",";java.lang.Character.codePointBefore(CharSequence,int);java.lang.Character.codePointBefore(char[],int);java.lang.Character.codePointBefore(char[],int,int);java.lang.String.codePointBefore(int);java.lang.StringBuffer.codePointBefore(int);java.lang.StringBuilder.codePointBefore(int)",;0.65;0.67;0.63;0.74;0.74;0.74
comparator,6,0.556246768,Description copied from interface:SortedSet,;java.util.PriorityQueue.comparator();java.util.TreeMap.comparator();java.util.TreeSet.comparator();java.util.concurrent.ConcurrentSkipListMap.comparator();java.util.concurrent.ConcurrentSkipListSet.comparator();java.util.concurrent.PriorityBlockingQueue.comparator(),;0.30;0.56;0.56;0.56;0.56;0.30
createCompatibleDestRaster,6,0.762981041,"Creates a zeroed-destination Raster with the correct size and number of bands, given this source.",;java.awt.image.AffineTransformOp.createCompatibleDestRaster(Raster);java.awt.image.BandCombineOp.createCompatibleDestRaster(Raster);java.awt.image.ColorConvertOp.createCompatibleDestRaster(Raster);java.awt.image.ConvolveOp.createCompatibleDestRaster(Raster);java.awt.image.LookupOp.createCompatibleDestRaster(Raster);java.awt.image.RescaleOp.createCompatibleDestRaster(Raster),;0.52;0.45;0.76;0.76;0.76;0.76
createLayoutManager,6,0.278123384,Description copied from class:BasicTabbedPaneUI,;javax.swing.JViewport.createLayoutManager();javax.swing.plaf.basic.BasicComboBoxUI.createLayoutManager();javax.swing.plaf.basic.BasicTabbedPaneUI.createLayoutManager();javax.swing.plaf.metal.MetalComboBoxUI.createLayoutManager();javax.swing.plaf.metal.MetalTabbedPaneUI.createLayoutManager();javax.swing.plaf.synth.SynthTabbedPaneUI.createLayoutManager(),;0.17;0.17;0.24;0.28;0.28;0.25
createName,6,0.353644226,"Factory method to convert a byte array containing a name from the specified namespace to a GSSName object and canonicalize it at the same time for a mechanism. In other words, this method is a utility that does the equivalent of two steps: the createName and then also GSSName.canonicalize.",";javax.xml.soap.SOAPFactory.createName(String,String,String);javax.xml.soap.SOAPFactory.createName(String);org.ietf.jgss.GSSManager.createName(String,Oid);org.ietf.jgss.GSSManager.createName(byte[],Oid);org.ietf.jgss.GSSManager.createName(String,Oid,Oid);org.ietf.jgss.GSSManager.createName(byte[],Oid,Oid)",;0.30;0.30;0.30;0.31;0.35;0.35
createServerSocket,6,0.391029119,"Returns a server socket bound to the specified port, and uses the specified connection backlog. The socket is configured with the socket options (such as accept timeout) given to this factory. The backlog argument must be a positive value greater than 0. If the value passed if equal or less than 0, then the default value will be assumed. If there is a security manager, its checkListen method is called with the port argument as its argument to ensure the operation is allowed. This could result in a SecurityException.",";java.rmi.server.RMISocketFactory.createServerSocket(int);javax.net.ServerSocketFactory.createServerSocket();javax.net.ServerSocketFactory.createServerSocket(int);javax.net.ServerSocketFactory.createServerSocket(int,int);javax.net.ServerSocketFactory.createServerSocket(int,int,InetAddress);javax.rmi.ssl.SslRMIServerSocketFactory.createServerSocket(int)",;0.17;0.20;0.34;0.39;0.36;0.17
createSubsetSampleModel,6,0.563290409,Creates a new PixelInterleavedSampleModel with a subset of the bands of this PixelInterleavedSampleModel. The new PixelInterleavedSampleModel can be used with any DataBuffer that the existing PixelInterleavedSampleModel can be used with. The new PixelInterleavedSampleModel/DataBuffer combination will represent an image with a subset of the bands of the original PixelInterleavedSampleModel/DataBuffer combination.,;java.awt.image.BandedSampleModel.createSubsetSampleModel(int[]);java.awt.image.ComponentSampleModel.createSubsetSampleModel(int[]);java.awt.image.MultiPixelPackedSampleModel.createSubsetSampleModel(int[]);java.awt.image.PixelInterleavedSampleModel.createSubsetSampleModel(int[]);java.awt.image.SampleModel.createSubsetSampleModel(int[]);java.awt.image.SinglePixelPackedSampleModel.createSubsetSampleModel(int[]),;0.56;0.56;0.31;0.56;0.21;0.55
createTitledBorder,6,0.559421806,"Adds a title to an existing border, with the specified positioning and using the default font and text color (determined by the current look and feel).",";javax.swing.BorderFactory.createTitledBorder(String);javax.swing.BorderFactory.createTitledBorder(Border);javax.swing.BorderFactory.createTitledBorder(Border,String);javax.swing.BorderFactory.createTitledBorder(Border,String,int,int);javax.swing.BorderFactory.createTitledBorder(Border,String,int,int,Font);javax.swing.BorderFactory.createTitledBorder(Border,String,int,int,Font,Color)",;0.46;0.47;0.54;0.56;0.53;0.31
createXMLStreamReader,6,0.834713626,Create a new XMLStreamReader from a java.io.InputStream,";javax.xml.stream.XMLInputFactory.createXMLStreamReader(Reader);javax.xml.stream.XMLInputFactory.createXMLStreamReader(Source);javax.xml.stream.XMLInputFactory.createXMLStreamReader(InputStream);javax.xml.stream.XMLInputFactory.createXMLStreamReader(InputStream,String);javax.xml.stream.XMLInputFactory.createXMLStreamReader(String,InputStream);javax.xml.stream.XMLInputFactory.createXMLStreamReader(String,Reader)",;0.64;0.51;0.83;0.83;0.83;0.83
damageRange,6,0.598158552,Causes the portion of the view responsible for the given part of the model to be repainted.,";javax.swing.plaf.TextUI.damageRange(JTextComponent,int,int);javax.swing.plaf.TextUI.damageRange(JTextComponent,int,int,Position.Bias,Position.Bias);javax.swing.plaf.basic.BasicTextUI.damageRange(JTextComponent,int,int);javax.swing.plaf.basic.BasicTextUI.damageRange(JTextComponent,int,int,Position.Bias,Position.Bias);javax.swing.plaf.multi.MultiTextUI.damageRange(JTextComponent,int,int);javax.swing.plaf.multi.MultiTextUI.damageRange(JTextComponent,int,int,Position.Bias,Position.Bias)",;0.60;0.60;0.48;0.60;0.33;0.33
decrementAndGet,6,0.556582508,Atomically decrements by one the current value.,;java.util.concurrent.atomic.AtomicInteger.decrementAndGet();java.util.concurrent.atomic.AtomicIntegerArray.decrementAndGet(int);java.util.concurrent.atomic.AtomicIntegerFieldUpdater.decrementAndGet(T);java.util.concurrent.atomic.AtomicLong.decrementAndGet();java.util.concurrent.atomic.AtomicLongArray.decrementAndGet(int);java.util.concurrent.atomic.AtomicLongFieldUpdater.decrementAndGet(T),;0.56;0.54;0.51;0.56;0.54;0.51
defineClass,6,0.350385993,"Converts an array of bytes into an instance of class Class, with an optional CodeSource. Before the class can be used it must be resolved. If a non-null CodeSource is supplied a ProtectionDomain is constructed and associated with the class being defined.",";java.lang.ClassLoader.defineClass(byte[],int,int);java.lang.ClassLoader.defineClass(String,byte[],int,int);java.lang.ClassLoader.defineClass(String,byte[],int,int,ProtectionDomain);java.lang.ClassLoader.defineClass(String,ByteBuffer,ProtectionDomain);java.security.SecureClassLoader.defineClass(String,byte[],int,int,CodeSource);java.security.SecureClassLoader.defineClass(String,ByteBuffer,CodeSource)",;0.17;0.26;0.27;0.29;0.35;0.34
deriveFont,6,0.791682229,Creates a new Font object by replicating the current Font object and applying a new style to it.,";java.awt.Font.deriveFont(int,float);java.awt.Font.deriveFont(int,AffineTransform);java.awt.Font.deriveFont(float);java.awt.Font.deriveFont(AffineTransform);java.awt.Font.deriveFont(int);java.awt.Font.deriveFont(Map&lt;?,?&gt;)",;0.71;0.71;0.77;0.77;0.79;0.70
descendingIterator,6,0.407366417,Returns an iterator over the elements in this deque in reverse sequential order. The elements will be returned in order from last (tail) to first (head). The returned iterator is weakly consistent.,;java.util.ArrayDeque.descendingIterator();java.util.LinkedList.descendingIterator();java.util.TreeSet.descendingIterator();java.util.concurrent.ConcurrentLinkedDeque.descendingIterator();java.util.concurrent.ConcurrentSkipListSet.descendingIterator();java.util.concurrent.LinkedBlockingDeque.descendingIterator(),;0.33;0.33;0.37;0.41;0.37;0.41
dispatchEvent,6,0.277031173,"This method is called by the AWT event dispatcher requesting that the current KeyboardFocusManager dispatch the specified event on its behalf. It is expected that all KeyboardFocusManagers will dispatch all FocusEvents, all WindowEvents related to focus, and all KeyEvents. These events should be dispatched based on the KeyboardFocusManager's notion of the focus owner and the focused and active Windows, sometimes overriding the source of the specified AWTEvent. Dispatching must be done using redispatchEvent to prevent the AWT event dispatcher from recursively requesting that the KeyboardFocusManager dispatch the event again. If this method returns false, then the AWT event dispatcher will attempt to dispatch the event itself.",;java.awt.Component.dispatchEvent(AWTEvent);java.awt.DefaultKeyboardFocusManager.dispatchEvent(AWTEvent);java.awt.EventQueue.dispatchEvent(AWTEvent);java.awt.KeyboardFocusManager.dispatchEvent(AWTEvent);java.awt.MenuComponent.dispatchEvent(AWTEvent);java.awt.im.InputContext.dispatchEvent(AWTEvent),;0.24;0.27;0.17;0.28;0.21;0.18
doPrivileged,6,0.740877077,"Performs the specified PrivilegedAction with privileges enabled and restricted by the specified AccessControlContext. The action is performed with the intersection of the permissions possessed by the caller's protection domain, and those possessed by the domains represented by the specified AccessControlContext. If the action's run method throws an (unchecked) exception, it will propagate through this method. If a security manager is installed and the specified AccessControlContext was not created by system code and the caller's ProtectionDomain has not been granted the ""createAccessControlContext"" SecurityPermission, then the action is performed with no permissions.",";java.security.AccessController.doPrivileged(PrivilegedAction&lt;T&gt;);java.security.AccessController.doPrivileged(PrivilegedAction&lt;T&gt;,AccessControlContext);java.security.AccessController.doPrivileged(PrivilegedAction&lt;T&gt;,AccessControlContext,Permission...);java.security.AccessController.doPrivileged(PrivilegedExceptionAction&lt;T&gt;);java.security.AccessController.doPrivileged(PrivilegedExceptionAction&lt;T&gt;,AccessControlContext);java.security.AccessController.doPrivileged(PrivilegedExceptionAction&lt;T&gt;,AccessControlContext,Permission...)",;0.52;0.74;0.73;0.52;0.74;0.73
drawLine,6,0.333333333,"Renders a line of text, suppressing whitespace at the end and expanding any tabs. This is implemented to make calls to the methods drawUnselectedText and drawSelectedText so that the way selected and unselected text are rendered can be customized.",";java.awt.Graphics.drawLine(int,int,int,int);javax.swing.DebugGraphics.drawLine(int,int,int,int);javax.swing.plaf.synth.SynthGraphicsUtils.drawLine(SynthContext,Object,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthGraphicsUtils.drawLine(SynthContext,Object,Graphics,int,int,int,int,Object);javax.swing.text.PlainView.drawLine(int,Graphics,int,int);javax.swing.text.WrappedPlainView.drawLine(int,int,Graphics,int,int)",;0.17;0.00;0.17;0.19;0.33;0.33
element,6,0.454690672,"Retrieves, but does not remove, the head of the queue represented by this deque. This method differs from peek only in that it throws an exception if this deque is empty. This method is equivalent to getFirst.",;java.util.AbstractQueue.element();java.util.ArrayDeque.element();java.util.LinkedList.element();java.util.concurrent.ConcurrentLinkedDeque.element();java.util.concurrent.LinkedBlockingDeque.element();javax.xml.ws.wsaddressing.W3CEndpointReferenceBuilder.element(Element),;0.38;0.45;0.20;0.17;0.45;0.17
empty,6,0.483689981,Returns an empty OptionalLong instance. No value is present for this OptionalLong.,;java.util.Optional.empty();java.util.OptionalDouble.empty();java.util.OptionalInt.empty();java.util.OptionalLong.empty();java.util.Stack.empty();javax.swing.text.html.parser.ContentModel.empty(),;0.48;0.48;0.48;0.48;0.17;0.17
enable,6,0.774671857,"Deprecated.As of JDK version 1.1, replaced by setEnabled(boolean).",;java.awt.Component.enable();java.awt.Component.enable(boolean);java.awt.MenuItem.enable();java.awt.MenuItem.enable(boolean);java.lang.Compiler.enable();javax.swing.JComponent.enable(),;0.77;0.77;0.77;0.77;0.17;0.60
getAndAdd,6,0.62529793,Atomically adds the given value to the current value.,";java.util.concurrent.atomic.AtomicInteger.getAndAdd(int);java.util.concurrent.atomic.AtomicIntegerArray.getAndAdd(int,int);java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndAdd(T,int);java.util.concurrent.atomic.AtomicLong.getAndAdd(long);java.util.concurrent.atomic.AtomicLongArray.getAndAdd(int,long);java.util.concurrent.atomic.AtomicLongFieldUpdater.getAndAdd(T,long)",;0.63;0.61;0.56;0.63;0.61;0.56
getAndDecrement,6,0.556582508,Atomically decrements by one the current value.,;java.util.concurrent.atomic.AtomicInteger.getAndDecrement();java.util.concurrent.atomic.AtomicIntegerArray.getAndDecrement(int);java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndDecrement(T);java.util.concurrent.atomic.AtomicLong.getAndDecrement();java.util.concurrent.atomic.AtomicLongArray.getAndDecrement(int);java.util.concurrent.atomic.AtomicLongFieldUpdater.getAndDecrement(T),;0.56;0.54;0.51;0.56;0.54;0.51
getAndIncrement,6,0.556582508,Atomically increments by one the current value.,;java.util.concurrent.atomic.AtomicInteger.getAndIncrement();java.util.concurrent.atomic.AtomicIntegerArray.getAndIncrement(int);java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndIncrement(T);java.util.concurrent.atomic.AtomicLong.getAndIncrement();java.util.concurrent.atomic.AtomicLongArray.getAndIncrement(int);java.util.concurrent.atomic.AtomicLongFieldUpdater.getAndIncrement(T),;0.56;0.54;0.51;0.56;0.54;0.51
getAnnotationsByType,6,0.5,"Returns annotations that are associated with this element. If there are no annotations associated with this element, the return value is an array of length 0. The difference between this method and AnnotatedElement.getAnnotation(Class) is that this method detects if its argument is a repeatable annotation type (JLS 9.6), and if so, attempts to find one or more annotations of that type by ""looking through"" a container annotation. The caller of this method is free to modify the returned array; it will have no effect on the arrays returned to other callers.",;java.lang.Class.getAnnotationsByType(Class&lt;A&gt;);java.lang.Package.getAnnotationsByType(Class&lt;A&gt;);java.lang.reflect.AccessibleObject.getAnnotationsByType(Class&lt;T&gt;);java.lang.reflect.Executable.getAnnotationsByType(Class&lt;T&gt;);java.lang.reflect.Field.getAnnotationsByType(Class&lt;T&gt;);java.lang.reflect.Parameter.getAnnotationsByType(Class&lt;T&gt;),;0.50;0.50;0.50;0.50;0.50;0.50
getArray,6,0.365512661,"Returns a new array that is a copy of a slice of this SerialArray object, starting with the element at the given index and containing the given number of consecutive elements. This method does custom mapping if the array elements are a UDT and the given type map has an entry for that UDT. Custom mapping is recursive, meaning that if, for instance, an element of an SQL structured type is an SQL structured type that itself has an element that is an SQL structured type, each structured type that has a custom mapping will be mapped according to the given type map.",";javax.sql.rowset.serial.SerialArray.getArray();javax.sql.rowset.serial.SerialArray.getArray(Map&lt;String,Class&lt;?&gt;&gt;);javax.sql.rowset.serial.SerialArray.getArray(long,int);javax.sql.rowset.serial.SerialArray.getArray(long,int,Map&lt;String,Class&lt;?&gt;&gt;);javax.swing.text.DefaultStyledDocument.ElementSpec.getArray();javax.swing.text.GapContent.getArray()",;0.20;0.34;0.24;0.37;0.17;0.17
getAscent,6,0.290711707,Returns the ascent of this ImageGraphicAttribute. The ascent of an ImageGraphicAttribute is the distance from the top of the image to the origin.,;java.awt.FontMetrics.getAscent();java.awt.font.GraphicAttribute.getAscent();java.awt.font.ImageGraphicAttribute.getAscent();java.awt.font.LineMetrics.getAscent();java.awt.font.ShapeGraphicAttribute.getAscent();java.awt.font.TextLayout.getAscent(),;0.26;0.21;0.29;0.28;0.28;0.25
getAudioFileFormat,6,0.535541796,Obtains the audio file format of the specified File. The File must point to valid audio file data.,;javax.sound.sampled.AudioSystem.getAudioFileFormat(InputStream);javax.sound.sampled.AudioSystem.getAudioFileFormat(URL);javax.sound.sampled.AudioSystem.getAudioFileFormat(File);javax.sound.sampled.spi.AudioFileReader.getAudioFileFormat(InputStream);javax.sound.sampled.spi.AudioFileReader.getAudioFileFormat(URL);javax.sound.sampled.spi.AudioFileReader.getAudioFileFormat(File),;0.38;0.54;0.54;0.38;0.53;0.53
getBankData,6,0.975250602,Returns the data arrays for all banks. Note that calling this method may cause this DataBuffer object to be incompatible with performance optimizations used by some implementations (such as caching an associated image in video memory).,;java.awt.image.DataBufferByte.getBankData();java.awt.image.DataBufferDouble.getBankData();java.awt.image.DataBufferFloat.getBankData();java.awt.image.DataBufferInt.getBankData();java.awt.image.DataBufferShort.getBankData();java.awt.image.DataBufferUShort.getBankData(),;0.98;0.95;0.95;0.98;0.98;0.98
getColumns,6,0.539468686,Returns the number of columns in this TextField.,;java.awt.GridLayout.getColumns();java.awt.TextArea.getColumns();java.awt.TextField.getColumns();javax.swing.JTextArea.getColumns();javax.swing.JTextField.getColumns();javax.swing.table.DefaultTableColumnModel.getColumns(),;0.49;0.52;0.32;0.48;0.54;0.17
getCommand,6,0.193838189,"Get the default command corresponding to the MIME type. The DataSource provides extra information, such as the file name, that a CommandMap implementation may use to further refine the command that is chosen. The implementation in this class simply calls the getCommand method that ignores this argument.",";javax.activation.CommandMap.getCommand(String,String);javax.activation.CommandMap.getCommand(String,String,DataSource);javax.activation.DataHandler.getCommand(String);javax.activation.MailcapCommandMap.getCommand(String,String);javax.sound.midi.ShortMessage.getCommand();javax.sql.rowset.BaseRowSet.getCommand()",;0.17;0.19;0.17;0.17;0.17;0.17
getContentPane,6,0.436368904,Returns the contentPane object for this frame.,;javax.swing.JApplet.getContentPane();javax.swing.JDialog.getContentPane();javax.swing.JFrame.getContentPane();javax.swing.JInternalFrame.getContentPane();javax.swing.JRootPane.getContentPane();javax.swing.JWindow.getContentPane(),;0.44;0.44;0.44;0.19;0.19;0.17
getDataElement,6,0.506735167,"Returns a pixel value represented as an int in this ColorModel, given an array of normalized color/alpha components. This method will throw an IllegalArgumentException if pixel values for this ColorModel are not conveniently representable as a single int. An ArrayIndexOutOfBoundsException is thrown if the normComponents array is not large enough to hold all the color and alpha components (starting at normOffset).",";java.awt.image.ColorModel.getDataElement(int[],int);java.awt.image.ColorModel.getDataElement(float[],int);java.awt.image.ComponentColorModel.getDataElement(int[],int);java.awt.image.ComponentColorModel.getDataElement(float[],int);java.awt.image.DirectColorModel.getDataElement(int[],int);java.awt.image.IndexColorModel.getDataElement(int[],int)",;0.50;0.47;0.24;0.51;0.46;0.48
getDate,6,0.166666667,Returns the current element in this sequence of Dates. This method is equivalent to (Date)getValue.,;java.net.URLConnection.getDate();java.security.cert.PKIXParameters.getDate();java.sql.Time.getDate();java.util.Date.getDate();javax.management.timer.Timer.getDate(Integer);javax.swing.SpinnerDateModel.getDate(),;0.17;0.17;0.00;0.17;0.17;0.17
getDeclaringClass,6,0.630202439,Returns the Class object representing the class or interface that declares the executable represented by this object.,;java.lang.Class.getDeclaringClass();java.lang.Enum.getDeclaringClass();java.lang.reflect.Constructor.getDeclaringClass();java.lang.reflect.Executable.getDeclaringClass();java.lang.reflect.Field.getDeclaringClass();java.lang.reflect.Method.getDeclaringClass(),;0.25;0.20;0.63;0.63;0.54;0.63
getDerivedGaugeTimeStamp,6,0.5,"Deprecated.As of JMX 1.2, replaced by getDerivedGaugeTimeStamp(ObjectName)",;javax.management.monitor.CounterMonitor.getDerivedGaugeTimeStamp(ObjectName);javax.management.monitor.CounterMonitor.getDerivedGaugeTimeStamp();javax.management.monitor.GaugeMonitor.getDerivedGaugeTimeStamp(ObjectName);javax.management.monitor.GaugeMonitor.getDerivedGaugeTimeStamp();javax.management.monitor.StringMonitor.getDerivedGaugeTimeStamp(ObjectName);javax.management.monitor.StringMonitor.getDerivedGaugeTimeStamp(),;0.50;0.50;0.50;0.50;0.50;0.50
getDescent,6,0.333365314,Returns the descent of this ShapeGraphicAttribute. The descent of a ShapeGraphicAttribute is the distance from the origin of its Shape to the bottom of the bounds of its Shape.,;java.awt.FontMetrics.getDescent();java.awt.font.GraphicAttribute.getDescent();java.awt.font.ImageGraphicAttribute.getDescent();java.awt.font.LineMetrics.getDescent();java.awt.font.ShapeGraphicAttribute.getDescent();java.awt.font.TextLayout.getDescent(),;0.28;0.21;0.33;0.32;0.33;0.27
getDouble,6,0.250654104,"Relative get method for reading a double value. Reads the next eight bytes at this buffer's current position, composing them into a double value according to the current byte order, and then increments the position by eight.",";java.lang.reflect.Array.getDouble(Object,int);java.lang.reflect.Field.getDouble(Object);java.nio.ByteBuffer.getDouble();java.nio.ByteBuffer.getDouble(int);java.util.prefs.AbstractPreferences.getDouble(String,double);java.util.prefs.Preferences.getDouble(String,double)",;0.17;0.17;0.25;0.25;0.17;0.18
getDragEnabled,6,0.666666667,Returns whether or not automatic drag handling is enabled.,;javax.swing.JColorChooser.getDragEnabled();javax.swing.JFileChooser.getDragEnabled();javax.swing.JList.getDragEnabled();javax.swing.JTable.getDragEnabled();javax.swing.JTree.getDragEnabled();javax.swing.text.JTextComponent.getDragEnabled(),;0.33;0.33;0.67;0.67;0.67;0.67
getElemDouble,6,0.621380294,Returns the requested data array element from the first (default) bank as a double.,";java.awt.image.DataBuffer.getElemDouble(int);java.awt.image.DataBuffer.getElemDouble(int,int);java.awt.image.DataBufferDouble.getElemDouble(int);java.awt.image.DataBufferDouble.getElemDouble(int,int);java.awt.image.DataBufferFloat.getElemDouble(int);java.awt.image.DataBufferFloat.getElemDouble(int,int)",;0.49;0.48;0.62;0.61;0.62;0.61
getElemFloat,6,0.621380294,Returns the requested data array element from the first (default) bank as a float.,";java.awt.image.DataBuffer.getElemFloat(int);java.awt.image.DataBuffer.getElemFloat(int,int);java.awt.image.DataBufferDouble.getElemFloat(int);java.awt.image.DataBufferDouble.getElemFloat(int,int);java.awt.image.DataBufferFloat.getElemFloat(int);java.awt.image.DataBufferFloat.getElemFloat(int,int)",;0.49;0.48;0.62;0.61;0.62;0.61
getFields,6,0.333333333,Description copied from interface:Descriptor,;java.io.ObjectStreamClass.getFields();java.lang.Class.getFields();javax.management.ImmutableDescriptor.getFields();javax.management.modelmbean.DescriptorSupport.getFields();javax.sql.rowset.serial.SerialJavaObject.getFields();javax.swing.text.InternationalFormatter.getFields(int),;0.17;0.17;0.33;0.33;0.17;0.17
getFlatnessSq,6,0.692243048,"Returns the square of the flatness, or maximum distance of a control point from the line connecting the end points, of the quadratic curve specified by the indicated control points.",";java.awt.geom.CubicCurve2D.getFlatnessSq(double,double,double,double,double,double,double,double);java.awt.geom.CubicCurve2D.getFlatnessSq(double[],int);java.awt.geom.CubicCurve2D.getFlatnessSq();java.awt.geom.QuadCurve2D.getFlatnessSq(double,double,double,double,double,double);java.awt.geom.QuadCurve2D.getFlatnessSq(double[],int);java.awt.geom.QuadCurve2D.getFlatnessSq()",;0.69;0.65;0.64;0.69;0.67;0.61
getFloat,6,0.250654104,"Relative get method for reading a float value. Reads the next four bytes at this buffer's current position, composing them into a float value according to the current byte order, and then increments the position by four.",";java.lang.reflect.Array.getFloat(Object,int);java.lang.reflect.Field.getFloat(Object);java.nio.ByteBuffer.getFloat();java.nio.ByteBuffer.getFloat(int);java.util.prefs.AbstractPreferences.getFloat(String,float);java.util.prefs.Preferences.getFloat(String,float)",;0.17;0.17;0.25;0.25;0.17;0.18
getG,6,0.5,Returns the base generator g.,;java.security.spec.DSAParameterSpec.getG();java.security.spec.DSAPrivateKeySpec.getG();java.security.spec.DSAPublicKeySpec.getG();javax.crypto.spec.DHParameterSpec.getG();javax.crypto.spec.DHPrivateKeySpec.getG();javax.crypto.spec.DHPublicKeySpec.getG(),;0.50;0.50;0.50;0.50;0.50;0.50
getHour,6,0.833333333,Gets the hour-of-day field.,;java.time.LocalDateTime.getHour();java.time.LocalTime.getHour();java.time.OffsetDateTime.getHour();java.time.OffsetTime.getHour();java.time.ZonedDateTime.getHour();javax.xml.datatype.XMLGregorianCalendar.getHour(),;0.83;0.83;0.83;0.83;0.83;0.17
getItem,6,0.216637023,Gets the item located at the specified index of this menu.,;java.awt.Choice.getItem(int);java.awt.List.getItem(int);java.awt.Menu.getItem(int);java.awt.event.ItemEvent.getItem();javax.swing.JMenu.getItem(int);javax.swing.plaf.basic.BasicComboBoxEditor.getItem(),;0.22;0.17;0.22;0.17;0.17;0.17
getKeySpec,6,0.509802745,Extract the enclosed PKCS8EncodedKeySpec object from the encrypted data and return it.,";java.security.KeyFactory.getKeySpec(Key,Class&lt;T&gt;);javax.crypto.EncryptedPrivateKeyInfo.getKeySpec(Cipher);javax.crypto.EncryptedPrivateKeyInfo.getKeySpec(Key);javax.crypto.EncryptedPrivateKeyInfo.getKeySpec(Key,String);javax.crypto.EncryptedPrivateKeyInfo.getKeySpec(Key,Provider);javax.crypto.SecretKeyFactory.getKeySpec(SecretKey,Class&lt;?&gt;)",;0.20;0.28;0.51;0.51;0.51;0.18
getLabel,6,0.273864504,Gets the label of this button.,;java.awt.Button.getLabel();java.awt.Checkbox.getLabel();java.awt.MenuItem.getLabel();javax.swing.AbstractButton.getLabel();javax.swing.JPopupMenu.getLabel();javax.swing.text.html.Option.getLabel(),;0.27;0.27;0.17;0.17;0.17;0.17
getLayeredPane,6,0.571220022,Returns the layeredPane object for this window.,;javax.swing.JApplet.getLayeredPane();javax.swing.JDialog.getLayeredPane();javax.swing.JFrame.getLayeredPane();javax.swing.JInternalFrame.getLayeredPane();javax.swing.JRootPane.getLayeredPane();javax.swing.JWindow.getLayeredPane(),;0.57;0.57;0.57;0.17;0.17;0.57
getMidiFileFormat,6,0.4584726,"Obtains the MIDI file format of the data in the specified URL. The URL must point to valid MIDI file data for a file type recognized by the system. This operation can only succeed for files of a type which can be parsed by an installed file reader. It may fail with an InvalidMidiDataException even for valid files if no compatible file reader is installed. It will also fail with an InvalidMidiDataException if a compatible file reader is installed, but encounters errors while determining the file format.",;javax.sound.midi.MidiSystem.getMidiFileFormat(InputStream);javax.sound.midi.MidiSystem.getMidiFileFormat(URL);javax.sound.midi.MidiSystem.getMidiFileFormat(File);javax.sound.midi.spi.MidiFileReader.getMidiFileFormat(InputStream);javax.sound.midi.spi.MidiFileReader.getMidiFileFormat(URL);javax.sound.midi.spi.MidiFileReader.getMidiFileFormat(File),;0.40;0.46;0.46;0.31;0.29;0.29
getMinute,6,0.833333333,Gets the minute-of-hour field.,;java.time.LocalDateTime.getMinute();java.time.LocalTime.getMinute();java.time.OffsetDateTime.getMinute();java.time.OffsetTime.getMinute();java.time.ZonedDateTime.getMinute();javax.xml.datatype.XMLGregorianCalendar.getMinute(),;0.83;0.83;0.83;0.83;0.83;0.17
getMonthValue,6,1,Gets the month-of-year field from 1 to 12. This method returns the month as an int from 1 to 12. Application code is frequently clearer if the enum Month is used by calling getMonth().,;java.time.LocalDate.getMonthValue();java.time.LocalDateTime.getMonthValue();java.time.MonthDay.getMonthValue();java.time.OffsetDateTime.getMonthValue();java.time.YearMonth.getMonthValue();java.time.ZonedDateTime.getMonthValue(),;1.00;1.00;1.00;1.00;1.00;1.00
getOrDefault,6,0.5,Description copied from interface:Map,";java.security.Provider.getOrDefault(Object,Object);java.util.HashMap.getOrDefault(Object,V);java.util.Hashtable.getOrDefault(Object,V);java.util.LinkedHashMap.getOrDefault(Object,V);java.util.concurrent.ConcurrentHashMap.getOrDefault(Object,V);java.util.concurrent.ConcurrentSkipListMap.getOrDefault(Object,V)",;0.50;0.50;0.50;0.43;0.43;0.45
getOwner,6,0.377994739,Gets the owner of this encoder.,";java.awt.Window.getOwner();java.beans.XMLDecoder.getOwner();java.beans.XMLEncoder.getOwner();java.nio.file.Files.getOwner(Path,LinkOption...);java.util.concurrent.locks.ReentrantLock.getOwner();java.util.concurrent.locks.ReentrantReadWriteLock.getOwner()",;0.34;0.38;0.38;0.18;0.33;0.33
getParameter,6,0.177176196,"Returns the value of the named parameter in the HTML tag. For example, if this applet is specified as &lt;applet code=""Clock"" width=50 height=50&gt; &lt;param name=Color value=""blue""&gt; &lt;/applet&gt; then a call to getParameter(""Color"") returns the value ""blue"". The name argument is case insensitive.",;java.applet.Applet.getParameter(String);java.awt.datatransfer.DataFlavor.getParameter(String);java.security.Signature.getParameter(String);javax.activation.MimeType.getParameter(String);javax.print.DocFlavor.getParameter(String);javax.xml.transform.Transformer.getParameter(String),;0.18;0.17;0.00;0.17;0.18;0.17
getPassword,6,0.398501274,Returns a copy of the password. Note: this method returns a copy of the password. It is the caller's responsibility to zero out the password information after it is no longer needed.,;java.net.PasswordAuthentication.getPassword();java.security.KeyStore.PasswordProtection.getPassword();javax.crypto.spec.PBEKeySpec.getPassword();javax.security.auth.callback.PasswordCallback.getPassword();javax.sql.rowset.BaseRowSet.getPassword();javax.swing.JPasswordField.getPassword(),;0.39;0.37;0.40;0.18;0.17;0.17
getPermissions,6,0.249819217,"Return a PermissionCollection object containing the set of permissions granted to the specified ProtectionDomain. Applications are discouraged from calling this method since this operation may not be supported by all policy implementations. Applications should rely on the implies method to perform policy checks. The default implementation of this method first retrieves the permissions returned via getPermissions(CodeSource) (the CodeSource is taken from the specified ProtectionDomain), as well as the permissions located inside the specified ProtectionDomain. All of these permissions are then combined and returned in a new PermissionCollection object. If getPermissions(CodeSource) returns Policy.UNSUPPORTED_EMPTY_COLLECTION, then this method returns the permissions contained inside the specified ProtectionDomain in a new PermissionCollection object. This method can be overridden if the policy implementation supports returning a set of permissions granted to a ProtectionDomain.",";java.net.URLClassLoader.getPermissions(CodeSource);java.security.Policy.getPermissions(CodeSource);java.security.Policy.getPermissions(ProtectionDomain);java.security.ProtectionDomain.getPermissions();java.security.SecureClassLoader.getPermissions(CodeSource);javax.security.auth.Policy.getPermissions(Subject,CodeSource)",;0.19;0.24;0.25;0.17;0.17;0.00
getPoint2D,6,0.765509337,"Returns the location of the destination point given a point in the source. If dstPt is non-null, it will be used to hold the return value. Since this is not a geometric operation, the srcPt will equal the dstPt.",";java.awt.image.AffineTransformOp.getPoint2D(Point2D,Point2D);java.awt.image.BandCombineOp.getPoint2D(Point2D,Point2D);java.awt.image.ColorConvertOp.getPoint2D(Point2D,Point2D);java.awt.image.ConvolveOp.getPoint2D(Point2D,Point2D);java.awt.image.LookupOp.getPoint2D(Point2D,Point2D);java.awt.image.RescaleOp.getPoint2D(Point2D,Point2D)",;0.52;0.61;0.62;0.77;0.74;0.77
getPreferredScrollableViewportSize,6,0.303809315,Returns the preferred size of the viewport for a view component. This is implemented to do the default behavior of returning the preferred size of the component.,;javax.swing.JLayer.getPreferredScrollableViewportSize();javax.swing.JList.getPreferredScrollableViewportSize();javax.swing.JTable.getPreferredScrollableViewportSize();javax.swing.JTextArea.getPreferredScrollableViewportSize();javax.swing.JTree.getPreferredScrollableViewportSize();javax.swing.text.JTextComponent.getPreferredScrollableViewportSize(),;0.30;0.17;0.22;0.26;0.17;0.30
getRowHeight,6,0.365299237,Returns the height of each row. If the returned value is less than or equal to 0 the height for each row is determined by the renderer.,;javax.swing.JTable.getRowHeight();javax.swing.JTable.getRowHeight(int);javax.swing.JTextArea.getRowHeight();javax.swing.JTree.getRowHeight();javax.swing.plaf.basic.BasicListUI.getRowHeight(int);javax.swing.tree.AbstractLayoutCache.getRowHeight(),;0.24;0.17;0.22;0.37;0.25;0.37
getSample,6,0.847048295,"Returns as int the sample in a specified band for the pixel located at (x,y). ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds.",";java.awt.image.BandedSampleModel.getSample(int,int,int,DataBuffer);java.awt.image.ComponentSampleModel.getSample(int,int,int,DataBuffer);java.awt.image.MultiPixelPackedSampleModel.getSample(int,int,int,DataBuffer);java.awt.image.Raster.getSample(int,int,int);java.awt.image.SampleModel.getSample(int,int,int,DataBuffer);java.awt.image.SinglePixelPackedSampleModel.getSample(int,int,int,DataBuffer)",;0.85;0.81;0.79;0.69;0.80;0.85
getScrollableTracksViewportHeight,6,0.377272321,"Returns false to indicate that the height of the viewport does not determine the height of the table, unless getFillsViewportHeight is true and the preferred height of the table is smaller than the viewport's height.",;javax.swing.JEditorPane.getScrollableTracksViewportHeight();javax.swing.JLayer.getScrollableTracksViewportHeight();javax.swing.JList.getScrollableTracksViewportHeight();javax.swing.JTable.getScrollableTracksViewportHeight();javax.swing.JTree.getScrollableTracksViewportHeight();javax.swing.text.JTextComponent.getScrollableTracksViewportHeight(),;0.24;0.35;0.18;0.38;0.37;0.27
getScrollableUnitIncrement,6,0.338312944,"Returns a scroll increment, which is required for components that display logical rows or columns in order to completely expose one new row or column, depending on the value of orientation. Ideally, components should handle a partially exposed row or column by returning the distance required to completely expose the item. Scrolling containers, like JScrollPane, will use this method each time the user requests a unit scroll. If the view component of this layer implements Scrollable, this method delegates its implementation to the view component.",";javax.swing.JLayer.getScrollableUnitIncrement(Rectangle,int,int);javax.swing.JList.getScrollableUnitIncrement(Rectangle,int,int);javax.swing.JTable.getScrollableUnitIncrement(Rectangle,int,int);javax.swing.JTextArea.getScrollableUnitIncrement(Rectangle,int,int);javax.swing.JTree.getScrollableUnitIncrement(Rectangle,int,int);javax.swing.text.JTextComponent.getScrollableUnitIncrement(Rectangle,int,int)",;0.34;0.17;0.23;0.33;0.17;0.33
getSecond,6,0.833333333,Gets the second-of-minute field.,;java.time.LocalDateTime.getSecond();java.time.LocalTime.getSecond();java.time.OffsetDateTime.getSecond();java.time.OffsetTime.getSecond();java.time.ZonedDateTime.getSecond();javax.xml.datatype.XMLGregorianCalendar.getSecond(),;0.83;0.83;0.83;0.83;0.83;0.17
getSequence,6,0.45967445,"Obtains a MIDI sequence from the specified File. The File must point to valid MIDI file data for a file type recognized by the system. This operation can only succeed for files of a type which can be parsed by an installed file reader. It may fail with an InvalidMidiDataException even for valid files if no compatible file reader is installed. It will also fail with an InvalidMidiDataException if a compatible file reader is installed, but encounters errors while constructing the Sequence object from the file data.",;javax.sound.midi.MidiSystem.getSequence(InputStream);javax.sound.midi.MidiSystem.getSequence(URL);javax.sound.midi.MidiSystem.getSequence(File);javax.sound.midi.spi.MidiFileReader.getSequence(InputStream);javax.sound.midi.spi.MidiFileReader.getSequence(URL);javax.sound.midi.spi.MidiFileReader.getSequence(File),;0.40;0.46;0.46;0.30;0.28;0.28
getTimeZone,6,0.301517785,Gets the TimeZone for the given zoneId.,;java.text.DateFormat.getTimeZone();java.util.Calendar.getTimeZone();java.util.GregorianCalendar.getTimeZone();java.util.TimeZone.getTimeZone(String);java.util.TimeZone.getTimeZone(ZoneId);javax.xml.datatype.XMLGregorianCalendar.getTimeZone(int),;0.20;0.18;0.17;0.30;0.30;0.17
hasNext,6,0.389580102,Description copied from interface:XMLStreamReader,;java.beans.beancontext.BeanContextSupport.BCSIterator.hasNext();java.util.Scanner.hasNext();java.util.Scanner.hasNext(String);java.util.Scanner.hasNext(Pattern);javax.xml.stream.util.EventReaderDelegate.hasNext();javax.xml.stream.util.StreamReaderDelegate.hasNext(),;0.39;0.25;0.24;0.27;0.39;0.39
incrementAndGet,6,0.556582508,Atomically increments by one the current value.,;java.util.concurrent.atomic.AtomicInteger.incrementAndGet();java.util.concurrent.atomic.AtomicIntegerArray.incrementAndGet(int);java.util.concurrent.atomic.AtomicIntegerFieldUpdater.incrementAndGet(T);java.util.concurrent.atomic.AtomicLong.incrementAndGet();java.util.concurrent.atomic.AtomicLongArray.incrementAndGet(int);java.util.concurrent.atomic.AtomicLongFieldUpdater.incrementAndGet(T),;0.56;0.54;0.51;0.56;0.54;0.51
insertString,6,0.333333333,Inserts a string into the content.,";javax.swing.text.AbstractDocument.insertString(int,String,AttributeSet);javax.swing.text.DocumentFilter.insertString(DocumentFilter.FilterBypass,int,String,AttributeSet);javax.swing.text.DocumentFilter.FilterBypass.insertString(int,String,AttributeSet);javax.swing.text.GapContent.insertString(int,String);javax.swing.text.PlainDocument.insertString(int,String,AttributeSet);javax.swing.text.StringContent.insertString(int,String)",;0.33;0.17;0.17;0.33;0.33;0.33
invokeAll,6,0.5,Description copied from interface:ExecutorService,";java.util.concurrent.AbstractExecutorService.invokeAll(Collection&lt;?);java.util.concurrent.AbstractExecutorService.invokeAll(Collection&lt;?,long,TimeUnit);java.util.concurrent.ForkJoinPool.invokeAll(Collection&lt;?);java.util.concurrent.ForkJoinTask.invokeAll(ForkJoinTask&lt;?&gt;,ForkJoinTask&lt;?&gt;);java.util.concurrent.ForkJoinTask.invokeAll(ForkJoinTask&lt;?&gt;...);java.util.concurrent.ForkJoinTask.invokeAll(Collection&lt;T&gt;)",;0.50;0.50;0.50;0.48;0.48;0.47
isCellEditable,6,0.166666667,"If the realEditor returns true to this message, prepareForEditing is messaged and true is returned.",";javax.swing.AbstractCellEditor.isCellEditable(EventObject);javax.swing.DefaultCellEditor.isCellEditable(EventObject);javax.swing.JTable.isCellEditable(int,int);javax.swing.table.AbstractTableModel.isCellEditable(int,int);javax.swing.table.DefaultTableModel.isCellEditable(int,int);javax.swing.tree.DefaultTreeCellEditor.isCellEditable(EventObject)",;0.00;0.17;0.17;0.17;0.17;0.17
isDataFlavorSupported,6,0.379343002,This method returns a boolean indicating if the specified DataFlavor is supported.,;java.awt.datatransfer.StringSelection.isDataFlavorSupported(DataFlavor);java.awt.dnd.DropTargetContext.isDataFlavorSupported(DataFlavor);java.awt.dnd.DropTargetDragEvent.isDataFlavorSupported(DataFlavor);java.awt.dnd.DropTargetDropEvent.isDataFlavorSupported(DataFlavor);javax.activation.DataHandler.isDataFlavorSupported(DataFlavor);javax.swing.TransferHandler.TransferSupport.isDataFlavorSupported(DataFlavor),;0.19;0.38;0.38;0.37;0.19;0.18
isEnabled,6,0.248153837,Returns true if this feature is enabled.,;java.awt.Component.isEnabled();java.awt.MenuItem.isEnabled();javax.swing.AbstractAction.isEnabled();javax.swing.DefaultButtonModel.isEnabled();javax.swing.ToolTipManager.isEnabled();javax.xml.ws.WebServiceFeature.isEnabled(),;0.17;0.17;0.17;0.17;0.25;0.25
isEqual,6,0.320445739,"Checks if this date-time is equal to the specified date-time. This checks to see if this date-time represents the same point on the local time-line as the other date-time. LocalDate a = LocalDateTime.of(2012, 6, 30, 12, 00); LocalDate b = LocalDateTime.of(2012, 7, 1, 12, 00); a.isEqual(b) == false a.isEqual(a) == true b.isEqual(a) == false This method only considers the position of the two date-times on the local time-line. It does not take into account the chronology, or calendar system. This is different from the comparison in compareTo(ChronoLocalDateTime), but is the same approach as ChronoLocalDateTime.timeLineOrder().",";java.security.MessageDigest.isEqual(byte[],byte[]);java.time.LocalDate.isEqual(ChronoLocalDate);java.time.LocalDateTime.isEqual(ChronoLocalDateTime&lt;?&gt;);java.time.OffsetDateTime.isEqual(OffsetDateTime);java.time.OffsetTime.isEqual(OffsetTime);javax.swing.text.SimpleAttributeSet.isEqual(AttributeSet)",;0.17;0.31;0.32;0.28;0.28;0.17
isSynthetic,6,0.665438747,Returns true if this executable is a synthetic construct; returns false otherwise.,;java.lang.Class.isSynthetic();java.lang.reflect.Constructor.isSynthetic();java.lang.reflect.Executable.isSynthetic();java.lang.reflect.Field.isSynthetic();java.lang.reflect.Method.isSynthetic();java.lang.reflect.Parameter.isSynthetic(),;0.46;0.67;0.67;0.46;0.67;0.35
last,6,0.333333333,Description copied from interface:SortedSet,;java.awt.CardLayout.last(Container);java.text.BreakIterator.last();java.text.StringCharacterIterator.last();java.util.TreeSet.last();java.util.concurrent.ConcurrentSkipListSet.last();javax.swing.text.Segment.last(),;0.17;0.17;0.17;0.33;0.33;0.17
lengthOfMonth,6,0.797462329,Returns the length of the month represented by this date. This returns the length of the month in days. Month lengths match those of the ISO calendar system.,;java.time.LocalDate.lengthOfMonth();java.time.YearMonth.lengthOfMonth();java.time.chrono.HijrahDate.lengthOfMonth();java.time.chrono.JapaneseDate.lengthOfMonth();java.time.chrono.MinguoDate.lengthOfMonth();java.time.chrono.ThaiBuddhistDate.lengthOfMonth(),;0.72;0.59;0.67;0.80;0.80;0.80
loadChildren,6,0.437224618,Loads all of the children to initialize the view. This is called by the setParent(javax.swing.text.View) method. Subclasses can reimplement this to initialize their child views in a different manner. The default implementation creates a child view for each child element.,;javax.swing.JTree.DynamicUtilTreeNode.loadChildren();javax.swing.text.AsyncBoxView.loadChildren(ViewFactory);javax.swing.text.CompositeView.loadChildren(ViewFactory);javax.swing.text.FlowView.loadChildren(ViewFactory);javax.swing.text.WrappedPlainView.loadChildren(ViewFactory);javax.swing.text.ZoneView.loadChildren(ViewFactory),;0.17;0.37;0.44;0.36;0.44;0.36
logp,6,0.559709682,"Log a message, specifying source class and method, with an array of object arguments. If the logger is currently enabled for the given message level then a corresponding LogRecord is created and forwarded to all the registered output Handler objects.",";java.util.logging.Logger.logp(Level,String,String,String);java.util.logging.Logger.logp(Level,String,String,Supplier&lt;String&gt;);java.util.logging.Logger.logp(Level,String,String,String,Object);java.util.logging.Logger.logp(Level,String,String,String,Object[]);java.util.logging.Logger.logp(Level,String,String,String,Throwable);java.util.logging.Logger.logp(Level,String,String,Throwable,Supplier&lt;String&gt;)",;0.54;0.55;0.56;0.56;0.48;0.46
logrb,6,0.652886273,"Deprecated.Use logrb(java.util.logging.Level, java.lang.String, java.lang.String, java.util.ResourceBundle, java.lang.String, java.lang.Object...) instead.",";java.util.logging.Logger.logrb(Level,String,String,String,String);java.util.logging.Logger.logrb(Level,String,String,String,String,Object);java.util.logging.Logger.logrb(Level,String,String,String,String,Object[]);java.util.logging.Logger.logrb(Level,String,String,ResourceBundle,String,Object...);java.util.logging.Logger.logrb(Level,String,String,String,String,Throwable);java.util.logging.Logger.logrb(Level,String,String,ResourceBundle,String,Throwable)",;0.65;0.65;0.65;0.23;0.63;0.24
lookup,6,0.333333333,Description copied from interface:Context,";java.io.ObjectStreamClass.lookup(Class&lt;?&gt;);java.lang.invoke.MethodHandles.lookup();java.rmi.Naming.lookup(String);java.util.Locale.lookup(List&lt;Locale.LanguageRange&gt;,Collection&lt;Locale&gt;);javax.naming.InitialContext.lookup(String);javax.naming.InitialContext.lookup(Name)",;0.17;0.17;0.17;0.17;0.33;0.33
merge,6,0.333333333,Description copied from interface:Map,";java.security.Provider.merge(Object,Object,BiFunction&lt;?,?,?);java.util.HashMap.merge(K,V,BiFunction&lt;?,?,?);java.util.Hashtable.merge(K,V,BiFunction&lt;?,?,?);java.util.StringJoiner.merge(StringJoiner);java.util.concurrent.ConcurrentHashMap.merge(K,V,BiFunction&lt;?,?,?);java.util.concurrent.ConcurrentSkipListMap.merge(K,V,BiFunction&lt;?,?,?)",;0.27;0.33;0.33;0.17;0.29;0.25
methodType,6,0.606387546,Finds or creates a method type with the given components. Convenience method for methodType. The resulting method has the single given parameter type.,";java.lang.invoke.MethodType.methodType(Class&lt;?&gt;,Class&lt;?&gt;[]);java.lang.invoke.MethodType.methodType(Class&lt;?&gt;,List&lt;Class&lt;?&gt;&gt;);java.lang.invoke.MethodType.methodType(Class&lt;?&gt;,Class&lt;?&gt;,Class&lt;?&gt;...);java.lang.invoke.MethodType.methodType(Class&lt;?&gt;);java.lang.invoke.MethodType.methodType(Class&lt;?&gt;,Class&lt;?&gt;);java.lang.invoke.MethodType.methodType(Class&lt;?&gt;,MethodType)",;0.17;0.49;0.55;0.60;0.61;0.54
minusDays,6,0.587603836,"Returns a copy of this LocalDateTime with the specified number of days subtracted. This method subtracts the specified amount from the days field decrementing the month and year fields as necessary to ensure the result remains valid. The result is only invalid if the maximum/minimum year is exceeded. For example, 2009-01-01 minus one day would result in 2008-12-31. This instance is immutable and unaffected by this method call.",;java.time.Duration.minusDays(long);java.time.LocalDate.minusDays(long);java.time.LocalDateTime.minusDays(long);java.time.OffsetDateTime.minusDays(long);java.time.Period.minusDays(long);java.time.ZonedDateTime.minusDays(long),;0.34;0.59;0.59;0.57;0.36;0.33
minusMinutes,6,0.56884334,"Returns a copy of this OffsetTime with the specified number of minutes subtracted. This subtracts the specified number of minutes from this time, returning a new time. The calculation wraps around midnight. This instance is immutable and unaffected by this method call.",;java.time.Duration.minusMinutes(long);java.time.LocalDateTime.minusMinutes(long);java.time.LocalTime.minusMinutes(long);java.time.OffsetDateTime.minusMinutes(long);java.time.OffsetTime.minusMinutes(long);java.time.ZonedDateTime.minusMinutes(long),;0.44;0.50;0.57;0.50;0.57;0.37
mouseClicked,6,0.221428367,Invoked when the mouse button has been clicked (pressed and released) on a component.,;java.awt.AWTEventMulticaster.mouseClicked(MouseEvent);java.awt.dnd.MouseDragGestureRecognizer.mouseClicked(MouseEvent);java.awt.event.MouseAdapter.mouseClicked(MouseEvent);javax.swing.plaf.basic.BasicButtonListener.mouseClicked(MouseEvent);javax.swing.text.DefaultCaret.mouseClicked(MouseEvent);javax.swing.text.html.HTMLEditorKit.LinkController.mouseClicked(MouseEvent),;0.17;0.22;0.22;0.17;0.17;0.17
mouseEntered,6,0.450473238,Invoked when the mouse enters a component.,;java.awt.AWTEventMulticaster.mouseEntered(MouseEvent);java.awt.dnd.MouseDragGestureRecognizer.mouseEntered(MouseEvent);java.awt.event.MouseAdapter.mouseEntered(MouseEvent);javax.swing.ToolTipManager.mouseEntered(MouseEvent);javax.swing.plaf.basic.BasicButtonListener.mouseEntered(MouseEvent);javax.swing.text.DefaultCaret.mouseEntered(MouseEvent),;0.17;0.45;0.45;0.25;0.17;0.39
mouseExited,6,0.45532651,Invoked when the mouse exits a component.,;java.awt.AWTEventMulticaster.mouseExited(MouseEvent);java.awt.dnd.MouseDragGestureRecognizer.mouseExited(MouseEvent);java.awt.event.MouseAdapter.mouseExited(MouseEvent);javax.swing.ToolTipManager.mouseExited(MouseEvent);javax.swing.plaf.basic.BasicButtonListener.mouseExited(MouseEvent);javax.swing.text.DefaultCaret.mouseExited(MouseEvent),;0.17;0.46;0.46;0.26;0.17;0.40
mousePressed,6,0.315525664,Invoked when a mouse button has been pressed on a component.,;java.awt.AWTEventMulticaster.mousePressed(MouseEvent);java.awt.dnd.MouseDragGestureRecognizer.mousePressed(MouseEvent);java.awt.event.MouseAdapter.mousePressed(MouseEvent);javax.swing.ToolTipManager.mousePressed(MouseEvent);javax.swing.plaf.basic.BasicButtonListener.mousePressed(MouseEvent);javax.swing.text.DefaultCaret.mousePressed(MouseEvent),;0.17;0.32;0.32;0.17;0.17;0.17
plusDays,6,0.602954283,"Returns a copy of this OffsetDateTime with the specified number of days added. This method adds the specified amount to the days field incrementing the month and year fields as necessary to ensure the result remains valid. The result is only invalid if the maximum/minimum year is exceeded. For example, 2008-12-31 plus one day would result in 2009-01-01. This instance is immutable and unaffected by this method call.",;java.time.Duration.plusDays(long);java.time.LocalDate.plusDays(long);java.time.LocalDateTime.plusDays(long);java.time.OffsetDateTime.plusDays(long);java.time.Period.plusDays(long);java.time.ZonedDateTime.plusDays(long),;0.34;0.60;0.60;0.60;0.36;0.33
plusMinutes,6,0.567360444,Returns a copy of this OffsetDateTime with the specified number of minutes added. This instance is immutable and unaffected by this method call.,;java.time.Duration.plusMinutes(long);java.time.LocalDateTime.plusMinutes(long);java.time.LocalTime.plusMinutes(long);java.time.OffsetDateTime.plusMinutes(long);java.time.OffsetTime.plusMinutes(long);java.time.ZonedDateTime.plusMinutes(long),;0.51;0.57;0.57;0.57;0.57;0.37
pop,6,0.333333333,Description copied from interface:Deque,;java.awt.EventQueue.pop();java.util.ArrayDeque.pop();java.util.LinkedList.pop();java.util.Stack.pop();java.util.concurrent.ConcurrentLinkedDeque.pop();java.util.concurrent.LinkedBlockingDeque.pop(),;0.17;0.30;0.30;0.17;0.33;0.33
processMouseEvent,6,0.174697635,"Processes mouse events occurring on the JLayer or any of its subcomponents. This method is not called unless mouse events are enabled for the JLayer objects, this LayerUI is set to. Mouse events are enabled in the overridden installUI(javax.swing.JComponent) method and should be disabled in the uninstallUI(javax.swing.JComponent) method after that. public void installUI(JComponent c) { super.installUI(c); JLayer l = (JLayer) c; l.setLayerEventMask(AWTEvent.MOUSE_EVENT_MASK); } public void uninstallUI(JComponent c) { super.uninstallUI(c); JLayer l = (JLayer) c; l.setLayerEventMask(0); }",";javax.swing.JComponent.processMouseEvent(MouseEvent);javax.swing.JMenuBar.processMouseEvent(MouseEvent,MenuElement[],MenuSelectionManager);javax.swing.JMenuItem.processMouseEvent(MouseEvent,MenuElement[],MenuSelectionManager);javax.swing.JPopupMenu.processMouseEvent(MouseEvent,MenuElement[],MenuSelectionManager);javax.swing.MenuSelectionManager.processMouseEvent(MouseEvent);javax.swing.plaf.LayerUI.processMouseEvent(MouseEvent,JLayer&lt;?)",;0.17;0.17;0.17;0.17;0.17;0.17
read_value,6,0.833333333,Unmarshalls a value type from the input stream.,";org.omg.CORBA.Any.read_value(InputStream,TypeCode);org.omg.CORBA_2_3.portable.InputStream.read_value();org.omg.CORBA_2_3.portable.InputStream.read_value(Class);org.omg.CORBA_2_3.portable.InputStream.read_value(BoxedValueHelper);org.omg.CORBA_2_3.portable.InputStream.read_value(String);org.omg.CORBA_2_3.portable.InputStream.read_value(Serializable)",;0.17;0.83;0.83;0.83;0.83;0.83
redo,6,0.166666667,"Redoes the appropriate edits. If end has been invoked this calls through to the superclass. Otherwise this invokes redo on all edits between the index of the next edit and the next significant edit, updating the index of the next edit appropriately.",;javax.swing.text.AbstractDocument.ElementEdit.redo();javax.swing.text.DefaultStyledDocument.AttributeUndoableEdit.redo();javax.swing.undo.AbstractUndoableEdit.redo();javax.swing.undo.CompoundEdit.redo();javax.swing.undo.StateEdit.redo();javax.swing.undo.UndoManager.redo(),;0.00;0.00;0.17;0.17;0.17;0.17
release,6,0.315704259,Releases in exclusive mode. Implemented by unblocking one or more threads if tryRelease(int) returns true. This method can be used to implement method Lock.unlock().,;java.nio.channels.FileLock.release();java.util.concurrent.Semaphore.release();java.util.concurrent.Semaphore.release(int);java.util.concurrent.locks.AbstractQueuedLongSynchronizer.release(long);java.util.concurrent.locks.AbstractQueuedSynchronizer.release(int);org.omg.CORBA.portable.Delegate.release(Object),;0.17;0.23;0.24;0.32;0.32;0.17
removeAttributes,6,0.434276634,"Removes a set of attributes for the element. This method is thread safe, although most Swing methods are not. Please see Concurrency in Swing for more information.",";javax.swing.text.SimpleAttributeSet.removeAttributes(Enumeration&lt;?&gt;);javax.swing.text.SimpleAttributeSet.removeAttributes(AttributeSet);javax.swing.text.StyleContext.removeAttributes(AttributeSet,Enumeration&lt;?&gt;);javax.swing.text.StyleContext.removeAttributes(AttributeSet,AttributeSet);javax.swing.text.html.StyleSheet.removeAttributes(AttributeSet,Enumeration&lt;?&gt;);javax.swing.text.html.StyleSheet.removeAttributes(AttributeSet,AttributeSet)",;0.36;0.36;0.43;0.43;0.42;0.39
removeVetoableChangeListener,6,0.476843282,"Remove a VetoableChangeListener from the listener list. This removes a VetoableChangeListener that was registered for all properties. If listener was added more than once to the same event source, it will be notified one less time after being removed. If listener is null, or was never added, no exception is thrown and no action is taken.",";java.awt.KeyboardFocusManager.removeVetoableChangeListener(VetoableChangeListener);java.awt.KeyboardFocusManager.removeVetoableChangeListener(String,VetoableChangeListener);java.beans.VetoableChangeSupport.removeVetoableChangeListener(VetoableChangeListener);java.beans.VetoableChangeSupport.removeVetoableChangeListener(String,VetoableChangeListener);java.beans.beancontext.BeanContextChildSupport.removeVetoableChangeListener(String,VetoableChangeListener);javax.swing.JComponent.removeVetoableChangeListener(VetoableChangeListener)",;0.41;0.41;0.48;0.46;0.44;0.22
reshape,6,0.560638265,"Deprecated.As of JDK version 1.1, replaced by setBounds(int, int, int, int).",";java.awt.Component.reshape(int,int,int,int);java.awt.Rectangle.reshape(int,int,int,int);java.awt.Window.reshape(int,int,int,int);javax.swing.JComponent.reshape(int,int,int,int);javax.swing.JInternalFrame.reshape(int,int,int,int);javax.swing.JViewport.reshape(int,int,int,int)",;0.56;0.56;0.56;0.37;0.19;0.17
schedule,6,0.333333333,Description copied from interface:ScheduledExecutorService,";java.util.Timer.schedule(TimerTask,long);java.util.Timer.schedule(TimerTask,Date);java.util.Timer.schedule(TimerTask,long,long);java.util.Timer.schedule(TimerTask,Date,long);java.util.concurrent.ScheduledThreadPoolExecutor.schedule(Runnable,long,TimeUnit);java.util.concurrent.ScheduledThreadPoolExecutor.schedule(Callable&lt;V&gt;,long,TimeUnit)",;0.19;0.20;0.32;0.32;0.33;0.33
setArc,6,0.794798215,"Sets the location, size, angular extents, and closure type of this arc to the specified double values.",";java.awt.geom.Arc2D.setArc(double,double,double,double,double,double,int);java.awt.geom.Arc2D.setArc(Point2D,Dimension2D,double,double,int);java.awt.geom.Arc2D.setArc(Rectangle2D,double,double,int);java.awt.geom.Arc2D.setArc(Arc2D);java.awt.geom.Arc2D.Double.setArc(double,double,double,double,double,double,int);java.awt.geom.Arc2D.Float.setArc(double,double,double,double,double,double,int)",;0.79;0.78;0.78;0.17;0.79;0.79
setBlob,6,0.574810894,"Sets the designated parameter to a InputStream object. This method differs from the setBinaryStream (int, InputStream) method because it informs the driver that the parameter value should be sent to the server as a BLOB. When the setBinaryStream method is used, the driver may have to do extra work to determine whether the parameter data should be sent to the server as a LONGVARBINARY or a BLOBNote: Consult your JDBC driver documentation to determine if it might be more efficient to use a version of setBlob which takes a length parameter.",";javax.sql.rowset.BaseRowSet.setBlob(int,Blob);javax.sql.rowset.BaseRowSet.setBlob(int,InputStream,long);javax.sql.rowset.BaseRowSet.setBlob(int,InputStream);javax.sql.rowset.BaseRowSet.setBlob(String,InputStream,long);javax.sql.rowset.BaseRowSet.setBlob(String,Blob);javax.sql.rowset.BaseRowSet.setBlob(String,InputStream)",;0.21;0.57;0.57;0.57;0.18;0.57
setBounds,6,0.390005909,"Moves and resizes this component. The new location of the top-left corner is specified by x and y, and the new size is specified by width and height. This method changes layout-related information, and therefore, invalidates the component hierarchy. The width or height values are automatically enlarged if either is less than the minimum size as specified by previous call to setMinimumSize. The method changes the geometry-related data. Therefore, the native windowing system may ignore such requests, or it may modify the requested data, so that the Window object is placed and sized in a way that corresponds closely to the desktop settings.",";java.awt.Component.setBounds(int,int,int,int);java.awt.Component.setBounds(Rectangle);java.awt.Rectangle.setBounds(Rectangle);java.awt.Rectangle.setBounds(int,int,int,int);java.awt.Window.setBounds(int,int,int,int);java.awt.Window.setBounds(Rectangle)",;0.31;0.31;0.28;0.30;0.39;0.39
setCharacterStream,6,0.457366124,"Sets the designated parameter to the given Reader object. When a very large UNICODE value is input to a LONGVARCHAR parameter, it may be more practical to send it via a java.io.Reader object. The data will be read from the stream as needed until end-of-file is reached. The JDBC driver will do any necessary conversion from UNICODE to the database char format. Note: This stream object can either be a standard Java stream object or your own subclass that implements the standard interface. Note: Consult your JDBC driver documentation to determine if it might be more efficient to use a version of setCharacterStream which takes a length parameter.",";javax.sql.rowset.BaseRowSet.setCharacterStream(int,Reader,int);javax.sql.rowset.BaseRowSet.setCharacterStream(int,Reader);javax.sql.rowset.BaseRowSet.setCharacterStream(String,Reader,int);javax.sql.rowset.BaseRowSet.setCharacterStream(String,Reader);javax.sql.rowset.serial.SerialClob.setCharacterStream(long);org.xml.sax.InputSource.setCharacterStream(Reader)",;0.25;0.45;0.41;0.46;0.17;0.17
setClob,6,0.569962241,"Sets the designated parameter to a Reader object. This method differs from the setCharacterStream (int, Reader) method because it informs the driver that the parameter value should be sent to the server as a CLOB. When the setCharacterStream method is used, the driver may have to do extra work to determine whether the parameter data should be send to the server as a LONGVARCHAR or a CLOBNote: Consult your JDBC driver documentation to determine if it might be more efficient to use a version of setClob which takes a length parameter.",";javax.sql.rowset.BaseRowSet.setClob(int,Clob);javax.sql.rowset.BaseRowSet.setClob(int,Reader,long);javax.sql.rowset.BaseRowSet.setClob(int,Reader);javax.sql.rowset.BaseRowSet.setClob(String,Reader,long);javax.sql.rowset.BaseRowSet.setClob(String,Clob);javax.sql.rowset.BaseRowSet.setClob(String,Reader)",;0.21;0.57;0.57;0.57;0.18;0.57
setColor,6,0.341462451,Sets the current color of the color chooser to the specified color. The ColorSelectionModel will fire a ChangeEvent,";java.awt.Graphics.setColor(Color);java.awt.PageAttributes.setColor(PageAttributes.ColorType);javax.swing.DebugGraphics.setColor(Color);javax.swing.JColorChooser.setColor(Color);javax.swing.JColorChooser.setColor(int,int,int);javax.swing.JColorChooser.setColor(int)",;0.21;0.17;0.17;0.34;0.28;0.32
setContentPane,6,0.516812671,Sets the contentPane property. This method is called by the constructor. Swing's painting architecture requires an opaque JComponent in the containment hierarchy. This is typically provided by the content pane. If you replace the content pane it is recommended you replace it with an opaque JComponent.,;javax.swing.JApplet.setContentPane(Container);javax.swing.JDialog.setContentPane(Container);javax.swing.JFrame.setContentPane(Container);javax.swing.JInternalFrame.setContentPane(Container);javax.swing.JRootPane.setContentPane(Container);javax.swing.JWindow.setContentPane(Container),;0.28;0.52;0.52;0.17;0.41;0.29
setDragEnabled,6,0.739531946,"Turns on or off automatic drag handling. In order to enable automatic drag handling, this property should be set to true, and the tree's TransferHandler needs to be non-null. The default value of the dragEnabled property is false. The job of honoring this property, and recognizing a user drag gesture, lies with the look and feel implementation, and in particular, the tree's TreeUI. When automatic drag handling is enabled, most look and feels (including those that subclass BasicLookAndFeel) begin a drag and drop operation whenever the user presses the mouse button over an item and then moves the mouse a few pixels. Setting this property to true can therefore have a subtle effect on how selections behave. If a look and feel is used that ignores this property, you can still begin a drag and drop operation by calling exportAsDrag on the tree's TransferHandler.",;javax.swing.JColorChooser.setDragEnabled(boolean);javax.swing.JFileChooser.setDragEnabled(boolean);javax.swing.JList.setDragEnabled(boolean);javax.swing.JTable.setDragEnabled(boolean);javax.swing.JTree.setDragEnabled(boolean);javax.swing.text.JTextComponent.setDragEnabled(boolean),;0.46;0.59;0.74;0.71;0.74;0.73
setElemDouble,6,0.614662045,Sets the requested data array element in the first (default) bank to the given double.,";java.awt.image.DataBuffer.setElemDouble(int,double);java.awt.image.DataBuffer.setElemDouble(int,int,double);java.awt.image.DataBufferDouble.setElemDouble(int,double);java.awt.image.DataBufferDouble.setElemDouble(int,int,double);java.awt.image.DataBufferFloat.setElemDouble(int,double);java.awt.image.DataBufferFloat.setElemDouble(int,int,double)",;0.47;0.47;0.61;0.61;0.61;0.61
setElemFloat,6,0.614662045,Sets the requested data array element in the first (default) bank to the given float.,";java.awt.image.DataBuffer.setElemFloat(int,float);java.awt.image.DataBuffer.setElemFloat(int,int,float);java.awt.image.DataBufferDouble.setElemFloat(int,float);java.awt.image.DataBufferDouble.setElemFloat(int,int,float);java.awt.image.DataBufferFloat.setElemFloat(int,float);java.awt.image.DataBufferFloat.setElemFloat(int,int,float)",;0.47;0.47;0.61;0.61;0.61;0.61
setLabel,6,0.231104212,Sets the button's label to be the specified string.,;java.awt.Button.setLabel(String);java.awt.Checkbox.setLabel(String);java.awt.MenuItem.setLabel(String);javax.swing.AbstractButton.setLabel(String);javax.swing.JPopupMenu.setLabel(String);javax.swing.text.html.Option.setLabel(String),;0.23;0.23;0.17;0.17;0.17;0.17
setLayeredPane,6,0.666666667,Sets the layeredPane property. This method is called by the constructor.,;javax.swing.JApplet.setLayeredPane(JLayeredPane);javax.swing.JDialog.setLayeredPane(JLayeredPane);javax.swing.JFrame.setLayeredPane(JLayeredPane);javax.swing.JInternalFrame.setLayeredPane(JLayeredPane);javax.swing.JRootPane.setLayeredPane(JLayeredPane);javax.swing.JWindow.setLayeredPane(JLayeredPane),;0.67;0.67;0.67;0.17;0.17;0.67
setLine,6,0.879273932,Sets the location of the end points of this Line2D to the specified double coordinates.,";java.awt.geom.Line2D.setLine(double,double,double,double);java.awt.geom.Line2D.setLine(Point2D,Point2D);java.awt.geom.Line2D.setLine(Line2D);java.awt.geom.Line2D.Double.setLine(double,double,double,double);java.awt.geom.Line2D.Float.setLine(double,double,double,double);java.awt.geom.Line2D.Float.setLine(float,float,float,float)",;0.88;0.83;0.63;0.88;0.88;0.83
setName,6,0.377115165,Sets the name of the component to the specified string.,;java.awt.Component.setName(String);java.awt.MenuComponent.setName(String);java.beans.FeatureDescriptor.setName(String);java.lang.Thread.setName(String);javax.naming.NameClassPair.setName(String);javax.security.auth.callback.NameCallback.setName(String),;0.38;0.38;0.17;0.18;0.25;0.17
setNClob,6,0.576045282,"Sets the designated parameter to a Reader object. This method differs from the setCharacterStream (int, Reader) method because it informs the driver that the parameter value should be sent to the server as a NCLOB. When the setCharacterStream method is used, the driver may have to do extra work to determine whether the parameter data should be sent to the server as a LONGNVARCHAR or a NCLOBNote: Consult your JDBC driver documentation to determine if it might be more efficient to use a version of setNClob which takes a length parameter.",";javax.sql.rowset.BaseRowSet.setNClob(String,NClob);javax.sql.rowset.BaseRowSet.setNClob(String,Reader,long);javax.sql.rowset.BaseRowSet.setNClob(String,Reader);javax.sql.rowset.BaseRowSet.setNClob(int,Reader,long);javax.sql.rowset.BaseRowSet.setNClob(int,NClob);javax.sql.rowset.BaseRowSet.setNClob(int,Reader)",;0.25;0.57;0.58;0.57;0.25;0.58
setProperties,6,0.526125454,"Passes along the properties from the source object after adding a property indicating the scale applied. This method invokes super.setProperties, which might result in additional properties being added. Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being filtered. Developers using this class to filter pixels from an image should avoid calling this method directly since that operation could interfere with the filtering operation.",";java.awt.image.CropImageFilter.setProperties(Hashtable&lt;?,?&gt;);java.awt.image.ImageFilter.setProperties(Hashtable&lt;?,?&gt;);java.awt.image.PixelGrabber.setProperties(Hashtable&lt;?,?&gt;);java.awt.image.ReplicateScaleFilter.setProperties(Hashtable&lt;?,?&gt;);java.lang.System.setProperties(Properties);javax.xml.ws.Endpoint.setProperties(Map&lt;String,Object&gt;)",;0.53;0.49;0.41;0.53;0.17;0.17
setSelectedIndex,6,0.166666667,"Sets the selected index for this tabbedpane. The index must be a valid tab index or -1, which indicates that no tab should be selected (can also be used when there are no tabs in the tabbedpane). If a -1 value is specified when the tabbedpane contains one or more tabs, then the results will be implementation defined.",;javax.security.auth.callback.ChoiceCallback.setSelectedIndex(int);javax.security.auth.callback.ConfirmationCallback.setSelectedIndex(int);javax.swing.DefaultSingleSelectionModel.setSelectedIndex(int);javax.swing.JComboBox.setSelectedIndex(int);javax.swing.JList.setSelectedIndex(int);javax.swing.JTabbedPane.setSelectedIndex(int),;0.17;0.17;0.17;0.17;0.17;0.17
setState,6,0.333333333,Sets the value of synchronization state. This operation has memory semantics of a volatile write.,;java.awt.Checkbox.setState(boolean);java.awt.CheckboxMenuItem.setState(boolean);java.awt.Frame.setState(int);java.util.concurrent.locks.AbstractQueuedLongSynchronizer.setState(long);java.util.concurrent.locks.AbstractQueuedSynchronizer.setState(int);javax.swing.JCheckBoxMenuItem.setState(boolean),;0.28;0.28;0.17;0.33;0.33;0.17
setTarget,6,0.279683426,"Updates the target method of this call site, as a volatile variable. The type of the new target must agree with the type of the old target. The interactions with memory are the same as of a write to a volatile field. In particular, any threads is guaranteed to see the updated target the next time it calls getTarget.",;java.lang.invoke.CallSite.setTarget(MethodHandle);java.lang.invoke.ConstantCallSite.setTarget(MethodHandle);java.lang.invoke.MutableCallSite.setTarget(MethodHandle);java.lang.invoke.VolatileCallSite.setTarget(MethodHandle);javax.accessibility.AccessibleRelation.setTarget(Object);javax.accessibility.AccessibleRelation.setTarget(Object[]),;0.24;0.17;0.27;0.28;0.17;0.17
showInputDialog,6,0.443291443,"Shows a question-message dialog requesting input from the user parented to parentComponent. The dialog is displayed on top of the Component's frame, and is usually positioned below the Component.",";javax.swing.JOptionPane.showInputDialog(Object);javax.swing.JOptionPane.showInputDialog(Object,Object);javax.swing.JOptionPane.showInputDialog(Component,Object);javax.swing.JOptionPane.showInputDialog(Component,Object,Object);javax.swing.JOptionPane.showInputDialog(Component,Object,String,int);javax.swing.JOptionPane.showInputDialog(Component,Object,String,int,Icon,Object[],Object)",;0.42;0.43;0.44;0.41;0.31;0.17
startsWith,6,0.347935448,"Determines whether a composite name is a prefix of this composite name. A composite name 'n' is a prefix if it is equal to getPrefix(n.size())--in other words, this composite name starts with 'n'. If 'n' is null or not a composite name, false is returned.",";java.lang.String.startsWith(String,int);java.lang.String.startsWith(String);javax.naming.CompositeName.startsWith(Name);javax.naming.CompoundName.startsWith(Name);javax.naming.ldap.LdapName.startsWith(Name);javax.naming.ldap.LdapName.startsWith(List&lt;Rdn&gt;)",;0.21;0.21;0.35;0.33;0.33;0.19
subdivide,6,0.567899979,Subdivides the cubic curve specified by the src parameter and stores the resulting two subdivided curves into the left and right curve parameters. Either or both of the left and right objects may be the same as the src object or null.,";java.awt.geom.CubicCurve2D.subdivide(CubicCurve2D,CubicCurve2D);java.awt.geom.CubicCurve2D.subdivide(CubicCurve2D,CubicCurve2D,CubicCurve2D);java.awt.geom.CubicCurve2D.subdivide(double[],int,double[],int,double[],int);java.awt.geom.QuadCurve2D.subdivide(QuadCurve2D,QuadCurve2D);java.awt.geom.QuadCurve2D.subdivide(QuadCurve2D,QuadCurve2D,QuadCurve2D);java.awt.geom.QuadCurve2D.subdivide(double[],int,double[],int,double[],int)",;0.54;0.57;0.43;0.52;0.57;0.43
substring,6,0.640400119,Returns a new String that contains a subsequence of characters currently contained in this character sequence. The substring begins at the specified index and extends to the end of this sequence.,";java.lang.String.substring(int);java.lang.String.substring(int,int);java.lang.StringBuffer.substring(int);java.lang.StringBuffer.substring(int,int);java.lang.StringBuilder.substring(int);java.lang.StringBuilder.substring(int,int)",;0.36;0.37;0.64;0.63;0.64;0.63
truncatedTo,6,0.770818619,"Returns a copy of this OffsetDateTime with the time truncated. Truncation returns a copy of the original date-time with fields smaller than the specified unit set to zero. For example, truncating with the minutes unit will set the second-of-minute and nano-of-second field to zero. The unit must have a duration that divides into the length of a standard day without remainder. This includes all supplied time units on ChronoUnit and DAYS. Other units throw an exception. The offset does not affect the calculation and will be the same in the result. This instance is immutable and unaffected by this method call.",;java.time.Instant.truncatedTo(TemporalUnit);java.time.LocalDateTime.truncatedTo(TemporalUnit);java.time.LocalTime.truncatedTo(TemporalUnit);java.time.OffsetDateTime.truncatedTo(TemporalUnit);java.time.OffsetTime.truncatedTo(TemporalUnit);java.time.ZonedDateTime.truncatedTo(TemporalUnit),;0.62;0.76;0.75;0.77;0.77;0.58
undo,6,0.166666667,"Undoes the appropriate edits. If end has been invoked this calls through to the superclass, otherwise this invokes undo on all edits between the index of the next edit and the last significant edit, updating the index of the next edit appropriately.",;javax.swing.text.AbstractDocument.ElementEdit.undo();javax.swing.text.DefaultStyledDocument.AttributeUndoableEdit.undo();javax.swing.undo.AbstractUndoableEdit.undo();javax.swing.undo.CompoundEdit.undo();javax.swing.undo.StateEdit.undo();javax.swing.undo.UndoManager.undo(),;0.00;0.00;0.17;0.17;0.17;0.17
uninstallKeyboardActions,6,0.166666667,Unregisters default key actions.,;javax.swing.plaf.basic.BasicButtonListener.uninstallKeyboardActions(JComponent);javax.swing.plaf.basic.BasicComboBoxUI.uninstallKeyboardActions();javax.swing.plaf.basic.BasicLabelUI.uninstallKeyboardActions(JLabel);javax.swing.plaf.basic.BasicListUI.uninstallKeyboardActions();javax.swing.plaf.basic.BasicSplitPaneUI.uninstallKeyboardActions();javax.swing.plaf.basic.BasicTableHeaderUI.uninstallKeyboardActions(),;0.17;0.17;0.00;0.17;0.17;0.17
unread,6,0.687169133,"Pushes back an array of bytes by copying it to the front of the pushback buffer. After this method returns, the next byte to be read will have the value b[0], the byte after that will have the value b[1], and so forth.",";java.io.PushbackInputStream.unread(int);java.io.PushbackInputStream.unread(byte[],int,int);java.io.PushbackInputStream.unread(byte[]);java.io.PushbackReader.unread(int);java.io.PushbackReader.unread(char[],int,int);java.io.PushbackReader.unread(char[])",;0.59;0.68;0.69;0.59;0.68;0.69
unwrap,6,0.285096169,"Attempts to decode SSL/TLS network data into a plaintext application data buffer. An invocation of this method behaves in exactly the same manner as the invocation: engine.unwrap(src, new ByteBuffer [] { dst }, 0, 1);",";java.lang.invoke.MethodType.unwrap();javax.crypto.Cipher.unwrap(byte[],String,int);javax.net.ssl.SSLEngine.unwrap(ByteBuffer,ByteBuffer);javax.net.ssl.SSLEngine.unwrap(ByteBuffer,ByteBuffer[]);javax.net.ssl.SSLEngine.unwrap(ByteBuffer,ByteBuffer[],int,int);javax.sql.rowset.RowSetMetaDataImpl.unwrap(Class&lt;T&gt;)",;0.17;0.17;0.29;0.29;0.18;0.17
validOps,6,0.598002873,"Returns an operation set identifying this channel's supported operations. Datagram channels support reading and writing, so this method returns (SelectionKey.OP_READ |SelectionKey.OP_WRITE).",;java.nio.channels.DatagramChannel.validOps();java.nio.channels.Pipe.SinkChannel.validOps();java.nio.channels.Pipe.SourceChannel.validOps();java.nio.channels.SelectableChannel.validOps();java.nio.channels.ServerSocketChannel.validOps();java.nio.channels.SocketChannel.validOps(),;0.60;0.59;0.58;0.35;0.54;0.57
visit,6,0.587622578,"Visits any program element as if by passing itself to that element's accept method and passing null for the additional parameter. The invocation v.visit(elem) is equivalent to elem.accept(v, null).",";javax.lang.model.util.AbstractAnnotationValueVisitor6.visit(AnnotationValue,P);javax.lang.model.util.AbstractAnnotationValueVisitor6.visit(AnnotationValue);javax.lang.model.util.AbstractElementVisitor6.visit(Element,P);javax.lang.model.util.AbstractElementVisitor6.visit(Element);javax.lang.model.util.AbstractTypeVisitor6.visit(TypeMirror,P);javax.lang.model.util.AbstractTypeVisitor6.visit(TypeMirror)",;0.51;0.57;0.54;0.59;0.54;0.57
withMonth,6,0.587177807,"Returns a copy of this LocalDateTime with the month-of-year altered. The time does not affect the calculation and will be the same in the result. If the day-of-month is invalid for the year, it will be changed to the last valid day of the month. This instance is immutable and unaffected by this method call.",;java.time.LocalDate.withMonth(int);java.time.LocalDateTime.withMonth(int);java.time.MonthDay.withMonth(int);java.time.OffsetDateTime.withMonth(int);java.time.YearMonth.withMonth(int);java.time.ZonedDateTime.withMonth(int),;0.55;0.59;0.51;0.58;0.30;0.33
writeTo,6,0.333333333,write this EndpointReference to the specified infoset format,;java.io.ByteArrayOutputStream.writeTo(OutputStream);java.io.CharArrayWriter.writeTo(Writer);javax.activation.DataHandler.writeTo(OutputStream);javax.xml.soap.SOAPMessage.writeTo(OutputStream);javax.xml.ws.EndpointReference.writeTo(Result);javax.xml.ws.wsaddressing.W3CEndpointReference.writeTo(Result),;0.17;0.17;0.17;0.17;0.33;0.33
_invoke,7,0.714285714,Description copied from interface:InvokeHandler,";org.omg.CORBA.LocalObject._invoke(OutputStream);org.omg.CORBA.portable.ObjectImpl._invoke(OutputStream);org.omg.CosNaming.BindingIteratorPOA._invoke(String,InputStream,ResponseHandler);org.omg.CosNaming.NamingContextExtPOA._invoke(String,InputStream,ResponseHandler);org.omg.CosNaming.NamingContextPOA._invoke(String,InputStream,ResponseHandler);org.omg.PortableServer.ServantActivatorPOA._invoke(String,InputStream,ResponseHandler);org.omg.PortableServer.ServantLocatorPOA._invoke(String,InputStream,ResponseHandler)",;0.19;0.19;0.71;0.71;0.71;0.71;0.71
addItemListener,7,0.499599975,"Adds the specified item listener to receive item events from this check box. Item events are sent to listeners in response to user input, but not in response to calls to setState(). If l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Checkbox.addItemListener(ItemListener);java.awt.CheckboxMenuItem.addItemListener(ItemListener);java.awt.Choice.addItemListener(ItemListener);java.awt.List.addItemListener(ItemListener);javax.swing.AbstractButton.addItemListener(ItemListener);javax.swing.DefaultButtonModel.addItemListener(ItemListener);javax.swing.JComboBox.addItemListener(ItemListener),;0.50;0.49;0.50;0.49;0.25;0.25;0.14
allocate,7,0.952051672,"Allocates a new short buffer. The new buffer's position will be zero, its limit will be its capacity, its mark will be undefined, and each of its elements will be initialized to zero. It will have a backing array, and its array offset will be zero.",;java.nio.ByteBuffer.allocate(int);java.nio.CharBuffer.allocate(int);java.nio.DoubleBuffer.allocate(int);java.nio.FloatBuffer.allocate(int);java.nio.IntBuffer.allocate(int);java.nio.LongBuffer.allocate(int);java.nio.ShortBuffer.allocate(int),;0.95;0.95;0.95;0.95;0.95;0.95;0.95
asReadOnlyBuffer,7,0.979340975,"Creates a new, read-only short buffer that shares this buffer's content. The content of the new buffer will be that of this buffer. Changes to this buffer's content will be visible in the new buffer; the new buffer itself, however, will be read-only and will not allow the shared content to be modified. The two buffers' position, limit, and mark values will be independent. The new buffer's capacity, limit, position, and mark values will be identical to those of this buffer. If this buffer is itself read-only then this method behaves in exactly the same way as the duplicate method.",;java.nio.ByteBuffer.asReadOnlyBuffer();java.nio.CharBuffer.asReadOnlyBuffer();java.nio.DoubleBuffer.asReadOnlyBuffer();java.nio.FloatBuffer.asReadOnlyBuffer();java.nio.IntBuffer.asReadOnlyBuffer();java.nio.LongBuffer.asReadOnlyBuffer();java.nio.ShortBuffer.asReadOnlyBuffer(),;0.98;0.98;0.98;0.98;0.98;0.98;0.98
byteValue,7,0.65582537,Returns the value of this Short as a byte after a narrowing primitive conversion.,;java.lang.Byte.byteValue();java.lang.Double.byteValue();java.lang.Float.byteValue();java.lang.Integer.byteValue();java.lang.Long.byteValue();java.lang.Number.byteValue();java.lang.Short.byteValue(),;0.40;0.66;0.66;0.66;0.66;0.25;0.66
clearSelection,7,0.181543606,"Empties the current selection. If this represents a change in the current selection, the selection listeners are notified.",;javax.swing.ButtonGroup.clearSelection();javax.swing.DefaultListSelectionModel.clearSelection();javax.swing.DefaultSingleSelectionModel.clearSelection();javax.swing.JList.clearSelection();javax.swing.JTable.clearSelection();javax.swing.JTree.clearSelection();javax.swing.tree.DefaultTreeSelectionModel.clearSelection(),;0.14;0.18;0.14;0.14;0.14;0.00;0.18
compact,7,0.866218122,"Compacts this buffer(optional operation). The shorts between the buffer's current position and its limit, if any, are copied to the beginning of the buffer. That is, the short at index p=position() is copied to index zero, the short at index p+1 is copied to index one, and so forth until the short at index limit()-1 is copied to index n=limit()-1-p. The buffer's position is then set to n+1 and its limit is set to its capacity. The mark, if defined, is discarded. The buffer's position is set to the number of shorts copied, rather than to zero, so that an invocation of this method can be followed immediately by an invocation of another relative put method.",;java.nio.ByteBuffer.compact();java.nio.CharBuffer.compact();java.nio.DoubleBuffer.compact();java.nio.FloatBuffer.compact();java.nio.IntBuffer.compact();java.nio.LongBuffer.compact();java.nio.ShortBuffer.compact(),;0.67;0.87;0.87;0.87;0.87;0.87;0.87
containsAll,7,0.264358027,Returns true if this Vector contains all of the elements in the specified Collection.,;java.beans.beancontext.BeanContextSupport.containsAll(Collection);java.util.AbstractCollection.containsAll(Collection&lt;?&gt;);java.util.Vector.containsAll(Collection&lt;?&gt;);java.util.concurrent.ConcurrentHashMap.KeySetView.containsAll(Collection&lt;?&gt;);java.util.concurrent.CopyOnWriteArrayList.containsAll(Collection&lt;?&gt;);java.util.concurrent.CopyOnWriteArraySet.containsAll(Collection&lt;?&gt;);java.util.concurrent.SynchronousQueue.containsAll(Collection&lt;?&gt;),;0.17;0.21;0.26;0.14;0.24;0.24;0.14
createImage,7,0.253052807,"Creates an image which decodes the image stored in the specified byte array, and at the specified offset and length. The data must be in some image format, such as GIF or JPEG, that is supported by this toolkit.",";java.awt.Component.createImage(ImageProducer);java.awt.Component.createImage(int,int);java.awt.Toolkit.createImage(String);java.awt.Toolkit.createImage(URL);java.awt.Toolkit.createImage(ImageProducer);java.awt.Toolkit.createImage(byte[]);java.awt.Toolkit.createImage(byte[],int,int)",;0.21;0.14;0.22;0.22;0.21;0.25;0.25
createXMLEventReader,7,0.655320613,Create a new XMLEventReader from a java.io.InputStream,";javax.xml.stream.XMLInputFactory.createXMLEventReader(Reader);javax.xml.stream.XMLInputFactory.createXMLEventReader(String,Reader);javax.xml.stream.XMLInputFactory.createXMLEventReader(XMLStreamReader);javax.xml.stream.XMLInputFactory.createXMLEventReader(Source);javax.xml.stream.XMLInputFactory.createXMLEventReader(InputStream);javax.xml.stream.XMLInputFactory.createXMLEventReader(InputStream,String);javax.xml.stream.XMLInputFactory.createXMLEventReader(String,InputStream)",;0.60;0.60;0.27;0.41;0.66;0.66;0.66
delete,7,0.285714286,"Removes the characters in a substring of this sequence. The substring begins at the specified start and extends to the character at index end - 1 or to the end of the sequence if no such character exists. If start is equal to end, no changes are made.",";java.io.File.delete();java.lang.StringBuffer.delete(int,int);java.lang.StringBuilder.delete(int,int);java.nio.file.Files.delete(Path);java.nio.file.spi.FileSystemProvider.delete(Path);javax.tools.ForwardingFileObject.delete();javax.tools.SimpleJavaFileObject.delete()",;0.15;0.29;0.29;0.15;0.14;0.14;0.14
divide,7,0.511711584,"Returns a BigDecimal whose value is (this / divisor), and whose scale is this.scale(). If rounding must be performed to generate a result with the given scale, the specified rounding mode is applied.",";java.math.BigDecimal.divide(BigDecimal,int,int);java.math.BigDecimal.divide(BigDecimal,int,RoundingMode);java.math.BigDecimal.divide(BigDecimal,int);java.math.BigDecimal.divide(BigDecimal,RoundingMode);java.math.BigDecimal.divide(BigDecimal);java.math.BigDecimal.divide(BigDecimal,MathContext);java.math.BigInteger.divide(BigInteger)",;0.49;0.50;0.50;0.51;0.33;0.25;0.18
eval,7,0.255456139,"Same as eval(Reader) except that the abstract eval(String, ScriptContext) is used.",";javax.script.AbstractScriptEngine.eval(Reader,Bindings);javax.script.AbstractScriptEngine.eval(String,Bindings);javax.script.AbstractScriptEngine.eval(Reader);javax.script.AbstractScriptEngine.eval(String);javax.script.CompiledScript.eval(ScriptContext);javax.script.CompiledScript.eval(Bindings);javax.script.CompiledScript.eval()",;0.17;0.25;0.15;0.26;0.15;0.21;0.21
fireVetoableChange,7,0.550109021,"Reports a constrained property update to listeners that have been registered to track updates of all properties or a property with the specified name. Any listener can throw a PropertyVetoException to veto the update. If one of the listeners vetoes the update, this method passes a new ""undo"" PropertyChangeEvent that reverts to the old value to all listeners that already confirmed this update and throws the PropertyVetoException again. No event is fired if old and new values are equal and non-null. This is merely a convenience wrapper around the more general fireVetoableChange(PropertyChangeEvent) method.",";java.awt.KeyboardFocusManager.fireVetoableChange(String,Object,Object);java.beans.VetoableChangeSupport.fireVetoableChange(String,Object,Object);java.beans.VetoableChangeSupport.fireVetoableChange(String,int,int);java.beans.VetoableChangeSupport.fireVetoableChange(String,boolean,boolean);java.beans.VetoableChangeSupport.fireVetoableChange(PropertyChangeEvent);java.beans.beancontext.BeanContextChildSupport.fireVetoableChange(String,Object,Object);javax.swing.JComponent.fireVetoableChange(String,Object,Object)",;0.19;0.55;0.55;0.55;0.50;0.22;0.14
getAll,7,0.274818553,Retrieves the components of this compound name as an enumeration of strings. The effects of updates to this compound name on this enumeration is undefined.,;javax.management.openmbean.CompositeDataSupport.getAll(String[]);javax.naming.CompositeName.getAll();javax.naming.CompoundName.getAll();javax.naming.Reference.getAll();javax.naming.directory.BasicAttribute.getAll();javax.naming.directory.BasicAttributes.getAll();javax.naming.ldap.LdapName.getAll(),;0.14;0.27;0.27;0.15;0.15;0.14;0.22
getBorder,7,0.312569025,Returns the border of this component or null if no border is currently set.,";javax.swing.JComponent.getBorder();javax.swing.UIDefaults.getBorder(Object);javax.swing.UIDefaults.getBorder(Object,Locale);javax.swing.UIManager.getBorder(Object);javax.swing.UIManager.getBorder(Object,Locale);javax.swing.border.TitledBorder.getBorder();javax.swing.plaf.basic.BasicSplitPaneDivider.getBorder()",;0.31;0.23;0.23;0.23;0.23;0.19;0.31
getCalendarType,7,0.662700424,"Gets the calendar type of the underlying calendar system - 'buddhist'. The calendar type is an identifier defined by the Unicode Locale Data Markup Language (LDML) specification. It can be used to lookup the Chronology using Chronology.of(String). It can also be used as part of a locale, accessible via Locale.getUnicodeLocaleType(String) with the key 'ca'.",;java.time.chrono.HijrahChronology.getCalendarType();java.time.chrono.IsoChronology.getCalendarType();java.time.chrono.JapaneseChronology.getCalendarType();java.time.chrono.MinguoChronology.getCalendarType();java.time.chrono.ThaiBuddhistChronology.getCalendarType();java.util.Calendar.getCalendarType();java.util.GregorianCalendar.getCalendarType(),;0.46;0.66;0.66;0.66;0.66;0.30;0.14
getChannel,7,0.354661578,"Returns the unique ServerSocketChannel object associated with this socket, if any. A server socket will have a channel if, and only if, the channel itself was created via the ServerSocketChannel.open method.",;java.io.FileInputStream.getChannel();java.io.FileOutputStream.getChannel();java.io.RandomAccessFile.getChannel();java.net.DatagramSocket.getChannel();java.net.ServerSocket.getChannel();java.net.Socket.getChannel();javax.sound.midi.ShortMessage.getChannel(),;0.28;0.28;0.24;0.35;0.35;0.35;0.14
getChronology,7,0.593951729,"Gets the chronology of this date, which is the Minguo calendar system. The Chronology represents the calendar system in use. The era and other fields in ChronoField are defined by the chronology.",;java.time.LocalDate.getChronology();java.time.Period.getChronology();java.time.chrono.HijrahDate.getChronology();java.time.chrono.JapaneseDate.getChronology();java.time.chrono.MinguoDate.getChronology();java.time.chrono.ThaiBuddhistDate.getChronology();java.time.format.DateTimeFormatter.getChronology(),;0.45;0.42;0.59;0.59;0.59;0.59;0.14
getColorModel,7,0.216523242,Returns the ColorModel associated with this GraphicsConfiguration that supports the specified transparency.,;java.awt.Component.getColorModel();java.awt.GraphicsConfiguration.getColorModel();java.awt.GraphicsConfiguration.getColorModel(int);java.awt.Toolkit.getColorModel();java.awt.image.BufferedImage.getColorModel();java.awt.image.PixelGrabber.getColorModel();javax.imageio.ImageTypeSpecifier.getColorModel(),;0.14;0.21;0.22;0.14;0.00;0.14;0.14
getDefaults,7,0.362468862,"Returns the look and feel defaults. This invokes, in order, createDefaultTheme(), super.getDefaults() and getCurrentTheme().addCustomEntriesToTable(table). While this method is public, it should only be invoked by the UIManager when the look and feel is set as the current look and feel and after initialize has been invoked.",;javax.swing.LookAndFeel.getDefaults();javax.swing.UIManager.getDefaults();javax.swing.plaf.basic.BasicLookAndFeel.getDefaults();javax.swing.plaf.metal.MetalLookAndFeel.getDefaults();javax.swing.plaf.multi.MultiLookAndFeel.getDefaults();javax.swing.plaf.nimbus.NimbusLookAndFeel.getDefaults();javax.swing.plaf.synth.SynthLookAndFeel.getDefaults(),;0.36;0.14;0.36;0.36;0.18;0.29;0.29
getDerivedGauge,7,0.452747526,"Gets the derived gauge of the specified object, if this object is contained in the set of observed MBeans, or null otherwise.",;javax.management.monitor.CounterMonitor.getDerivedGauge(ObjectName);javax.management.monitor.CounterMonitor.getDerivedGauge();javax.management.monitor.GaugeMonitor.getDerivedGauge(ObjectName);javax.management.monitor.GaugeMonitor.getDerivedGauge();javax.management.monitor.MonitorNotification.getDerivedGauge();javax.management.monitor.StringMonitor.getDerivedGauge(ObjectName);javax.management.monitor.StringMonitor.getDerivedGauge(),;0.45;0.43;0.45;0.43;0.18;0.45;0.43
getElement,7,0.164728922,Gets an element by name. A new element is created if the element doesn't exist.,";javax.swing.text.AbstractDocument.ElementEdit.getElement();javax.swing.text.View.getElement();javax.swing.text.html.HTMLDocument.getElement(String);javax.swing.text.html.HTMLDocument.getElement(Element,Object,Object);javax.swing.text.html.parser.DTD.getElement(String);javax.swing.text.html.parser.DTD.getElement(int);javax.xml.bind.annotation.W3CDomHandler.getElement(DOMResult)",;0.14;0.14;0.15;0.15;0.16;0.15;0.14
getFlatness,7,0.571650643,Returns the flatness of the cubic curve specified by the indicated control points. The flatness is the maximum distance of a control point from the line connecting the end points.,";java.awt.geom.CubicCurve2D.getFlatness(double,double,double,double,double,double,double,double);java.awt.geom.CubicCurve2D.getFlatness(double[],int);java.awt.geom.CubicCurve2D.getFlatness();java.awt.geom.FlatteningPathIterator.getFlatness();java.awt.geom.QuadCurve2D.getFlatness(double,double,double,double,double,double);java.awt.geom.QuadCurve2D.getFlatness(double[],int);java.awt.geom.QuadCurve2D.getFlatness()",;0.57;0.54;0.53;0.15;0.57;0.55;0.48
getForeground,7,0.240480957,Gets the foreground color from an attribute set.,;java.awt.Component.getForeground();javax.swing.text.DefaultStyledDocument.getForeground(AttributeSet);javax.swing.text.GlyphView.getForeground();javax.swing.text.LabelView.getForeground();javax.swing.text.StyleConstants.getForeground(AttributeSet);javax.swing.text.StyleContext.getForeground(AttributeSet);javax.swing.text.html.StyleSheet.getForeground(AttributeSet),;0.24;0.24;0.17;0.16;0.23;0.23;0.23
getGlassPane,7,0.374030489,Returns the glassPane object for this frame.,;javax.swing.JApplet.getGlassPane();javax.swing.JDialog.getGlassPane();javax.swing.JFrame.getGlassPane();javax.swing.JInternalFrame.getGlassPane();javax.swing.JLayer.getGlassPane();javax.swing.JRootPane.getGlassPane();javax.swing.JWindow.getGlassPane(),;0.37;0.37;0.37;0.20;0.14;0.20;0.14
getItemListeners,7,0.775535391,Returns an array of all the item listeners registered on this checkbox.,;java.awt.Checkbox.getItemListeners();java.awt.CheckboxMenuItem.getItemListeners();java.awt.Choice.getItemListeners();java.awt.List.getItemListeners();javax.swing.AbstractButton.getItemListeners();javax.swing.DefaultButtonModel.getItemListeners();javax.swing.JComboBox.getItemListeners(),;0.78;0.74;0.76;0.76;0.54;0.76;0.54
getLayoutAlignmentX,7,0.600422978,"Returns the alignment along the x axis. This specifies how the component would like to be aligned relative to other components. The value should be a number between 0 and 1 where 0 represents alignment along the origin, 1 is aligned the furthest away from the origin, 0.5 is centered, etc.",;java.awt.BorderLayout.getLayoutAlignmentX(Container);java.awt.CardLayout.getLayoutAlignmentX(Container);java.awt.GridBagLayout.getLayoutAlignmentX(Container);javax.swing.BoxLayout.getLayoutAlignmentX(Container);javax.swing.GroupLayout.getLayoutAlignmentX(Container);javax.swing.OverlayLayout.getLayoutAlignmentX(Container);javax.swing.SpringLayout.getLayoutAlignmentX(Container),;0.60;0.60;0.60;0.22;0.60;0.16;0.14
getLayoutAlignmentY,7,0.600422978,"Returns the alignment along the y axis. This specifies how the component would like to be aligned relative to other components. The value should be a number between 0 and 1 where 0 represents alignment along the origin, 1 is aligned the furthest away from the origin, 0.5 is centered, etc.",;java.awt.BorderLayout.getLayoutAlignmentY(Container);java.awt.CardLayout.getLayoutAlignmentY(Container);java.awt.GridBagLayout.getLayoutAlignmentY(Container);javax.swing.BoxLayout.getLayoutAlignmentY(Container);javax.swing.GroupLayout.getLayoutAlignmentY(Container);javax.swing.OverlayLayout.getLayoutAlignmentY(Container);javax.swing.SpringLayout.getLayoutAlignmentY(Container),;0.60;0.60;0.60;0.22;0.60;0.16;0.14
getNano,7,0.714285714,Gets the nano-of-second field.,;java.time.Duration.getNano();java.time.Instant.getNano();java.time.LocalDateTime.getNano();java.time.LocalTime.getNano();java.time.OffsetDateTime.getNano();java.time.OffsetTime.getNano();java.time.ZonedDateTime.getNano(),;0.15;0.15;0.71;0.71;0.71;0.71;0.71
getNode,7,0.148347234,"Get the node that will contain the result DOM tree.If no node was set via DOMResult(Node node), DOMResult(Node node, String systeId), DOMResult(Node node, Node nextSibling), DOMResult(Node node, Node nextSibling, String systemId) or setNode(Node node), then the node will be set by the transformation, and may be obtained from this method once the transformation is complete. Calling this method before the transformation will return null.",;java.util.prefs.PreferenceChangeEvent.getNode();javax.xml.bind.helpers.AbstractMarshallerImpl.getNode(Object);javax.xml.bind.helpers.ValidationEventLocatorImpl.getNode();javax.xml.crypto.dom.DOMStructure.getNode();javax.xml.crypto.dsig.dom.DOMValidateContext.getNode();javax.xml.transform.dom.DOMResult.getNode();javax.xml.transform.dom.DOMSource.getNode(),;0.14;0.14;0.14;0.14;0.00;0.15;0.14
getP,7,0.469500685,Returns the prime p.,;java.security.spec.DSAParameterSpec.getP();java.security.spec.DSAPrivateKeySpec.getP();java.security.spec.DSAPublicKeySpec.getP();java.security.spec.ECFieldFp.getP();javax.crypto.spec.DHParameterSpec.getP();javax.crypto.spec.DHPrivateKeySpec.getP();javax.crypto.spec.DHPublicKeySpec.getP(),;0.47;0.47;0.47;0.27;0.43;0.43;0.43
getPathForRow,7,0.726601112,Returns the path for passed in row. If row is not visible null is returned.,";javax.swing.JTree.getPathForRow(int);javax.swing.plaf.TreeUI.getPathForRow(JTree,int);javax.swing.plaf.basic.BasicTreeUI.getPathForRow(JTree,int);javax.swing.plaf.multi.MultiTreeUI.getPathForRow(JTree,int);javax.swing.tree.AbstractLayoutCache.getPathForRow(int);javax.swing.tree.FixedHeightLayoutCache.getPathForRow(int);javax.swing.tree.VariableHeightLayoutCache.getPathForRow(int)",;0.41;0.73;0.73;0.14;0.73;0.73;0.61
getPrefix,7,0.294971873,Creates a composite name whose components consist of a prefix of the components in this composite name. Subsequent changes to this composite name does not affect the name that is returned.,;javax.imageio.metadata.IIOMetadataNode.getPrefix();javax.naming.CompositeName.getPrefix(int);javax.naming.CompoundName.getPrefix(int);javax.naming.ldap.LdapName.getPrefix(int);javax.xml.namespace.QName.getPrefix();javax.xml.stream.util.StreamReaderDelegate.getPrefix();org.xml.sax.helpers.NamespaceSupport.getPrefix(String),;0.14;0.29;0.28;0.29;0.14;0.14;0.14
getProtocol,7,0.285714286,Description copied from class:RMIServerImpl,;java.net.URL.getProtocol();javax.management.remote.JMXServiceURL.getProtocol();javax.management.remote.rmi.RMIIIOPServerImpl.getProtocol();javax.management.remote.rmi.RMIJRMPServerImpl.getProtocol();javax.management.remote.rmi.RMIServerImpl.getProtocol();javax.net.ssl.SSLContext.getProtocol();javax.xml.ws.spi.http.HttpExchange.getProtocol(),;0.15;0.14;0.29;0.29;0.16;0.16;0.16
getRootPane,7,0.593753522,Returns the rootPane object for this frame.,;javax.swing.JApplet.getRootPane();javax.swing.JComponent.getRootPane();javax.swing.JDialog.getRootPane();javax.swing.JFrame.getRootPane();javax.swing.JInternalFrame.getRootPane();javax.swing.JWindow.getRootPane();javax.swing.SwingUtilities.getRootPane(Component),;0.59;0.14;0.59;0.59;0.54;0.59;0.14
getRowForPath,7,0.699582404,Returns the row that the last item identified in path is visible at. Will return -1 if any of the elements in path are not currently visible.,";javax.swing.JTree.getRowForPath(TreePath);javax.swing.plaf.TreeUI.getRowForPath(JTree,TreePath);javax.swing.plaf.basic.BasicTreeUI.getRowForPath(JTree,TreePath);javax.swing.plaf.multi.MultiTreeUI.getRowForPath(JTree,TreePath);javax.swing.tree.AbstractLayoutCache.getRowForPath(TreePath);javax.swing.tree.FixedHeightLayoutCache.getRowForPath(TreePath);javax.swing.tree.VariableHeightLayoutCache.getRowForPath(TreePath)",;0.18;0.70;0.70;0.14;0.70;0.70;0.60
getScrollableTracksViewportWidth,7,0.296373156,"Returns false to indicate that the width of the viewport does not determine the width of the table, unless the preferred width of the tree is smaller than the viewports width. In other words: ensure that the tree is never smaller than its viewport.",;javax.swing.JEditorPane.getScrollableTracksViewportWidth();javax.swing.JLayer.getScrollableTracksViewportWidth();javax.swing.JList.getScrollableTracksViewportWidth();javax.swing.JTable.getScrollableTracksViewportWidth();javax.swing.JTextArea.getScrollableTracksViewportWidth();javax.swing.JTree.getScrollableTracksViewportWidth();javax.swing.text.JTextComponent.getScrollableTracksViewportWidth(),;0.25;0.29;0.14;0.26;0.29;0.30;0.25
getSelectedIndex,7,0.180971264,"Returns the smallest selected cell index; the selection when only a single item is selected in the list. When multiple items are selected, it is simply the smallest selected index. Returns -1 if there is no selection. This method is a cover that delegates to getMinSelectionIndex.",;java.awt.Choice.getSelectedIndex();java.awt.List.getSelectedIndex();javax.security.auth.callback.ConfirmationCallback.getSelectedIndex();javax.swing.DefaultSingleSelectionModel.getSelectedIndex();javax.swing.JComboBox.getSelectedIndex();javax.swing.JList.getSelectedIndex();javax.swing.JTabbedPane.getSelectedIndex(),;0.17;0.17;0.14;0.14;0.18;0.18;0.16
getSoundbank,7,0.344887652,Obtains a soundbank object from the File provided.,;javax.sound.midi.MidiSystem.getSoundbank(InputStream);javax.sound.midi.MidiSystem.getSoundbank(URL);javax.sound.midi.MidiSystem.getSoundbank(File);javax.sound.midi.SoundbankResource.getSoundbank();javax.sound.midi.spi.SoundbankReader.getSoundbank(URL);javax.sound.midi.spi.SoundbankReader.getSoundbank(InputStream);javax.sound.midi.spi.SoundbankReader.getSoundbank(File),;0.18;0.25;0.25;0.14;0.34;0.34;0.34
getSource,7,0.182868992,Gets the object that produces the pixels for the image. This method is called by the image filtering classes and by methods that perform image conversion and scaling.,;java.awt.Image.getSource();java.awt.image.BufferedImage.getSource();java.awt.image.VolatileImage.getSource();java.awt.image.renderable.ParameterBlock.getSource(int);java.beans.PropertyEditorSupport.getSource();java.util.EventObject.getSource();javax.swing.event.RowSorterEvent.getSource(),;0.18;0.16;0.14;0.14;0.14;0.14;0.14
getTransform,7,0.20380043,Returns a copy of the current Transform in the Graphics2D context.,;java.awt.Font.getTransform();java.awt.Graphics2D.getTransform();java.awt.MultipleGradientPaint.getTransform();java.awt.font.FontRenderContext.getTransform();java.awt.font.TransformAttribute.getTransform();java.awt.image.AffineTransformOp.getTransform();java.awt.image.renderable.RenderContext.getTransform(),;0.17;0.20;0.19;0.14;0.20;0.14;0.14
hide,7,0.38595542,"Deprecated.As of JDK version 1.5, replaced by setVisible(boolean).",;java.awt.Component.hide();java.awt.Dialog.hide();java.awt.Window.hide();javax.swing.JComponent.hide();javax.swing.JInternalFrame.hide();javax.swing.Popup.hide();javax.swing.plaf.basic.BasicComboPopup.hide(),;0.34;0.39;0.39;0.00;0.14;0.14;0.14
invalidate,7,0.428571429,Overridden for performance reasons. See the Implementation Note for more information.,;java.awt.Component.invalidate();java.awt.Container.invalidate();java.awt.Polygon.invalidate();javax.swing.CellRendererPane.invalidate();javax.swing.DefaultListCellRenderer.invalidate();javax.swing.table.DefaultTableCellRenderer.invalidate();javax.swing.tree.DefaultTreeCellRenderer.invalidate(),;0.14;0.14;0.14;0.14;0.43;0.43;0.43
invalidateLayout,7,0.571428571,"Invalidates the layout, indicating that if the layout manager has cached information it should be discarded.",;java.awt.BorderLayout.invalidateLayout(Container);java.awt.CardLayout.invalidateLayout(Container);java.awt.GridBagLayout.invalidateLayout(Container);javax.swing.BoxLayout.invalidateLayout(Container);javax.swing.GroupLayout.invalidateLayout(Container);javax.swing.OverlayLayout.invalidateLayout(Container);javax.swing.SpringLayout.invalidateLayout(Container),;0.57;0.57;0.57;0.17;0.57;0.15;0.14
isFocusTraversable,7,0.142857143,Invokes the isFocusTraversable method on each UI handled by this object.,;java.awt.Component.isFocusTraversable();javax.swing.plaf.ComboBoxUI.isFocusTraversable(JComboBox);javax.swing.plaf.basic.BasicArrowButton.isFocusTraversable();javax.swing.plaf.basic.BasicComboBoxUI.isFocusTraversable(JComboBox);javax.swing.plaf.basic.BasicComboPopup.isFocusTraversable();javax.swing.plaf.metal.MetalComboBoxButton.isFocusTraversable();javax.swing.plaf.multi.MultiComboBoxUI.isFocusTraversable(JComboBox),;0.14;0.14;0.14;0.14;0.14;0.14;0.14
isVisible,7,0.15514475,"Returns true if the value identified by path is currently viewable, which means it is either the root or all of its parents are expanded. Otherwise, this method returns false.",;java.awt.Component.isVisible();java.awt.SplashScreen.isVisible();javax.swing.JPopupMenu.isVisible();javax.swing.JTree.isVisible(TreePath);javax.swing.text.DefaultCaret.isVisible();javax.swing.text.View.isVisible();javax.swing.text.html.ParagraphView.isVisible(),;0.14;0.14;0.15;0.16;0.15;0.14;0.15
layout,7,0.428571429,"Deprecated.As of JDK version 1.1, replaced by doLayout().",";java.awt.Component.layout();java.awt.Container.layout();java.awt.ScrollPane.layout();javax.swing.plaf.synth.SynthSliderUI.layout();javax.swing.text.BoxView.layout(int,int);javax.swing.text.FlowView.layout(int,int);javax.swing.text.FlowView.FlowStrategy.layout(FlowView)",;0.43;0.43;0.43;0.14;0.14;0.14;0.14
match,7,0.243960891,Determine if the primary and sub type of this object is the same as the content type described in rawdata.,";java.awt.datatransfer.DataFlavor.match(DataFlavor);java.security.cert.X509CertSelector.match(Certificate);java.security.cert.X509CRLSelector.match(CRL);java.util.Scanner.match();javax.activation.MimeType.match(MimeType);javax.activation.MimeType.match(String);javax.management.Query.match(AttributeValueExp,StringValueExp)",;0.14;0.14;0.14;0.14;0.24;0.24;0.14
maximumLayoutSize,7,0.478869741,Returns the maximum dimensions for this layout given the components in the specified target container.,;java.awt.BorderLayout.maximumLayoutSize(Container);java.awt.CardLayout.maximumLayoutSize(Container);java.awt.GridBagLayout.maximumLayoutSize(Container);javax.swing.BoxLayout.maximumLayoutSize(Container);javax.swing.GroupLayout.maximumLayoutSize(Container);javax.swing.OverlayLayout.maximumLayoutSize(Container);javax.swing.SpringLayout.maximumLayoutSize(Container),;0.48;0.48;0.48;0.26;0.14;0.26;0.14
minusNanos,7,0.586956203,Returns a copy of this OffsetDateTime with the specified number of nanoseconds subtracted. This instance is immutable and unaffected by this method call.,;java.time.Duration.minusNanos(long);java.time.Instant.minusNanos(long);java.time.LocalDateTime.minusNanos(long);java.time.LocalTime.minusNanos(long);java.time.OffsetDateTime.minusNanos(long);java.time.OffsetTime.minusNanos(long);java.time.ZonedDateTime.minusNanos(long),;0.56;0.56;0.59;0.53;0.59;0.53;0.34
minusSeconds,7,0.586956203,Returns a copy of this OffsetDateTime with the specified number of seconds subtracted. This instance is immutable and unaffected by this method call.,;java.time.Duration.minusSeconds(long);java.time.Instant.minusSeconds(long);java.time.LocalDateTime.minusSeconds(long);java.time.LocalTime.minusSeconds(long);java.time.OffsetDateTime.minusSeconds(long);java.time.OffsetTime.minusSeconds(long);java.time.ZonedDateTime.minusSeconds(long),;0.56;0.56;0.59;0.53;0.59;0.53;0.34
plusNanos,7,0.586956203,Returns a copy of this OffsetDateTime with the specified number of nanoseconds added. This instance is immutable and unaffected by this method call.,;java.time.Duration.plusNanos(long);java.time.Instant.plusNanos(long);java.time.LocalDateTime.plusNanos(long);java.time.LocalTime.plusNanos(long);java.time.OffsetDateTime.plusNanos(long);java.time.OffsetTime.plusNanos(long);java.time.ZonedDateTime.plusNanos(long),;0.56;0.56;0.59;0.53;0.59;0.53;0.34
plusSeconds,7,0.586956203,Returns a copy of this OffsetDateTime with the specified number of seconds added. This instance is immutable and unaffected by this method call.,;java.time.Duration.plusSeconds(long);java.time.Instant.plusSeconds(long);java.time.LocalDateTime.plusSeconds(long);java.time.LocalTime.plusSeconds(long);java.time.OffsetDateTime.plusSeconds(long);java.time.OffsetTime.plusSeconds(long);java.time.ZonedDateTime.plusSeconds(long),;0.56;0.56;0.59;0.53;0.59;0.53;0.34
pollFirst,7,0.715174416,Description copied from interface:Deque,";java.util.ArrayDeque.pollFirst();java.util.LinkedList.pollFirst();java.util.TreeSet.pollFirst();java.util.concurrent.ConcurrentLinkedDeque.pollFirst();java.util.concurrent.ConcurrentSkipListSet.pollFirst();java.util.concurrent.LinkedBlockingDeque.pollFirst();java.util.concurrent.LinkedBlockingDeque.pollFirst(long,TimeUnit)",;0.72;0.14;0.67;0.72;0.67;0.72;0.62
pollLast,7,0.715174416,Description copied from interface:Deque,";java.util.ArrayDeque.pollLast();java.util.LinkedList.pollLast();java.util.TreeSet.pollLast();java.util.concurrent.ConcurrentLinkedDeque.pollLast();java.util.concurrent.ConcurrentSkipListSet.pollLast();java.util.concurrent.LinkedBlockingDeque.pollLast();java.util.concurrent.LinkedBlockingDeque.pollLast(long,TimeUnit)",;0.72;0.14;0.67;0.72;0.67;0.72;0.62
previous,7,0.142857143,"Decrements the iterator's index by one and returns the character at the new index. If the current index is getBeginIndex(), the index remains at getBeginIndex() and a value of DONE is returned.",;java.awt.CardLayout.previous(Container);java.text.BreakIterator.previous();java.text.CollationElementIterator.previous();java.text.StringCharacterIterator.previous();java.time.temporal.TemporalAdjusters.previous(DayOfWeek);javax.swing.text.ElementIterator.previous();javax.swing.text.Segment.previous(),;0.14;0.14;0.14;0.14;0.14;0.14;0.14
push,7,0.258520389,"Pushes an element onto the stack represented by this list. In other words, inserts the element at the front of this list. This method is equivalent to addFirst(E).",;java.awt.EventQueue.push(EventQueue);java.util.ArrayDeque.push(E);java.util.LinkedList.push(E);java.util.Stack.push(E);java.util.concurrent.ConcurrentLinkedDeque.push(E);java.util.concurrent.LinkedBlockingDeque.push(E);java.util.logging.MemoryHandler.push(),;0.14;0.26;0.26;0.14;0.24;0.24;0.14
rebind,7,0.476782944,Description copied from interface:DirContext,";java.rmi.Naming.rebind(String,Remote);javax.naming.InitialContext.rebind(String,Object);javax.naming.InitialContext.rebind(Name,Object);javax.naming.directory.InitialDirContext.rebind(String,Object,Attributes);javax.naming.directory.InitialDirContext.rebind(Name,Object,Attributes);org.omg.CosNaming._NamingContextExtStub.rebind(NameComponent[],Object);org.omg.CosNaming._NamingContextStub.rebind(NameComponent[],Object)",;0.14;0.48;0.48;0.48;0.48;0.29;0.29
register,7,0.183598759,"Registers this channel with the given selector, returning a selection key. If this channel is currently registered with the given selector then the selection key representing that registration is returned. The key's interest set will have been changed to ops, as if by invoking the interestOps(int) method. If the att argument is not null then the key's attachment will have been set to that value. A CancelledKeyException will be thrown if the key has already been cancelled. Otherwise this channel has not yet been registered with the given selector, so it is registered and the resulting new key is returned. The key's initial interest set will be ops and its attachment will be att. This method may be invoked at any time. If this method is invoked while another invocation of this method or of the configureBlocking method is in progress then it will first block until the other operation is complete. This method will then synchronize on the selector's key set and therefore may block if invoked concurrently with another registration or selection operation involving the same selector. If this channel is closed while this operation is in progress then the key returned by this method will have been cancelled and will therefore be invalid.",";java.nio.channels.SelectableChannel.register(Selector,int,Object);java.nio.channels.SelectableChannel.register(Selector,int);java.nio.channels.spi.AbstractSelectableChannel.register(Selector,int,Object);java.nio.channels.spi.AbstractSelector.register(AbstractSelectableChannel,int,Object);java.rmi.activation.Activatable.register(ActivationDesc);java.util.concurrent.Phaser.register();javax.swing.plaf.nimbus.NimbusLookAndFeel.register(Region,String)",;0.18;0.15;0.18;0.14;0.14;0.14;0.14
remainingCapacity,7,0.413713715,Returns the number of additional elements that this queue can ideally (in the absence of memory or resource constraints) accept without blocking. This is always equal to the initial capacity of this queue less the current size of this queue. Note that you cannot always tell if an attempt to insert an element will succeed by inspecting remainingCapacity because it may be the case that another thread is about to insert or remove an element.,;java.util.concurrent.ArrayBlockingQueue.remainingCapacity();java.util.concurrent.DelayQueue.remainingCapacity();java.util.concurrent.LinkedBlockingDeque.remainingCapacity();java.util.concurrent.LinkedBlockingQueue.remainingCapacity();java.util.concurrent.LinkedTransferQueue.remainingCapacity();java.util.concurrent.PriorityBlockingQueue.remainingCapacity();java.util.concurrent.SynchronousQueue.remainingCapacity(),;0.41;0.34;0.40;0.41;0.34;0.34;0.14
removeItemListener,7,0.512343996,"Removes the specified item listener so that it no longer receives item events from this check box menu item. If l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Checkbox.removeItemListener(ItemListener);java.awt.CheckboxMenuItem.removeItemListener(ItemListener);java.awt.Choice.removeItemListener(ItemListener);java.awt.List.removeItemListener(ItemListener);javax.swing.AbstractButton.removeItemListener(ItemListener);javax.swing.DefaultButtonModel.removeItemListener(ItemListener);javax.swing.JComboBox.removeItemListener(ItemListener),;0.49;0.51;0.51;0.51;0.25;0.25;0.00
rotate,7,0.316755687,"Concatenates the current Graphics2DTransform with a rotation transform. Subsequent rendering is rotated by the specified radians relative to the previous origin. This is equivalent to calling transform(R), where R is an AffineTransform represented by the following matrix: [ cos(theta) -sin(theta) 0 ] [ sin(theta) cos(theta) 0 ] [ 0 0 1 ] Rotating with a positive angle theta rotates points on the positive x axis toward the positive y axis.",";java.awt.Graphics2D.rotate(double);java.awt.Graphics2D.rotate(double,double,double);java.awt.geom.AffineTransform.rotate(double);java.awt.geom.AffineTransform.rotate(double,double,double);java.awt.geom.AffineTransform.rotate(double,double);java.awt.geom.AffineTransform.rotate(double,double,double,double);java.util.Collections.rotate(List&lt;?&gt;,int)",;0.32;0.28;0.32;0.27;0.30;0.30;0.14
run,7,0.142857143,"This operation blocks the current thread until the ORB has completed the shutdown process, initiated when some thread calls shutdown. It may be used by multiple threads which get all notified when the ORB shuts down.",;java.awt.image.renderable.RenderableImageProducer.run();java.lang.Thread.run();java.util.TimerTask.run();java.util.concurrent.ForkJoinWorkerThread.run();java.util.concurrent.FutureTask.run();javax.swing.SwingWorker.run();org.omg.CORBA.ORB.run(),;0.14;0.14;0.14;0.14;0.14;0.14;0.14
setAttributes,7,0.381248615,Description copied from interface:RMIConnection,";javax.management.StandardMBean.setAttributes(AttributeList);javax.management.modelmbean.RequiredModelMBean.setAttributes(AttributeList);javax.management.remote.rmi.RMIConnectionImpl.setAttributes(ObjectName,MarshalledObject,Subject);javax.management.remote.rmi.RMIConnectionImpl_Stub.setAttributes(ObjectName,MarshalledObject,Subject);javax.naming.directory.SearchResult.setAttributes(Attributes);org.xml.sax.ext.Attributes2Impl.setAttributes(Attributes);org.xml.sax.helpers.AttributesImpl.setAttributes(Attributes)",;0.33;0.14;0.38;0.38;0.14;0.16;0.15
setErrorHandler,7,0.368730451,"Sets the ErrorHandler to receive errors encountered during the validate method invocation. Error handler can be used to customize the error handling process during a validation. When an ErrorHandler is set, errors found during the validation will be first sent to the ErrorHandler. The error handler can abort further validation immediately by throwing SAXException from the handler. Or for example it can print an error to the screen and try to continue the validation by returning normally from the ErrorHandler If any Throwable is thrown from an ErrorHandler, the caller of the validate method will be thrown the same Throwable object. Validator is not allowed to throw SAXException without first reporting it to ErrorHandler. When the ErrorHandler is null, the implementation will behave as if the following ErrorHandler is set: class DraconianErrorHandler implements ErrorHandler { public void fatalError( SAXParseException e ) throws SAXException { throw e; } public void error( SAXParseException e ) throws SAXException { throw e; } public void warning( SAXParseException e ) throws SAXException { // noop } } When a new Validator object is created, initially this field is set to null.",;javax.xml.parsers.DocumentBuilder.setErrorHandler(ErrorHandler);javax.xml.validation.SchemaFactory.setErrorHandler(ErrorHandler);javax.xml.validation.Validator.setErrorHandler(ErrorHandler);javax.xml.validation.ValidatorHandler.setErrorHandler(ErrorHandler);org.xml.sax.helpers.ParserAdapter.setErrorHandler(ErrorHandler);org.xml.sax.helpers.XMLFilterImpl.setErrorHandler(ErrorHandler);org.xml.sax.helpers.XMLReaderAdapter.setErrorHandler(ErrorHandler),;0.14;0.34;0.37;0.36;0.14;0.24;0.24
setGlassPane,7,0.571428571,Sets the glassPane property. This method is called by the constructor.,;javax.swing.JApplet.setGlassPane(Component);javax.swing.JDialog.setGlassPane(Component);javax.swing.JFrame.setGlassPane(Component);javax.swing.JInternalFrame.setGlassPane(Component);javax.swing.JLayer.setGlassPane(JPanel);javax.swing.JRootPane.setGlassPane(Component);javax.swing.JWindow.setGlassPane(Component),;0.57;0.57;0.57;0.14;0.14;0.14;0.57
setInput,7,0.500198164,Sets input data for decompression. Should be called whenever needsInput() returns true indicating that more input data is required.,";java.util.zip.Deflater.setInput(byte[],int,int);java.util.zip.Deflater.setInput(byte[]);java.util.zip.Inflater.setInput(byte[],int,int);java.util.zip.Inflater.setInput(byte[]);javax.imageio.ImageReader.setInput(Object,boolean,boolean);javax.imageio.ImageReader.setInput(Object,boolean);javax.imageio.ImageReader.setInput(Object)",;0.50;0.50;0.50;0.50;0.22;0.24;0.19
setLocale,7,0.195188759,"Sets the current Locale of this ImageWriter to the given value. A value of null removes any previous setting, and indicates that the writer should localize as it sees fit. The default implementation checks locale against the values returned by getAvailableLocales, and sets the locale instance variable if it is found. If locale is null, the instance variable is set to null without any checking.",;java.awt.Component.setLocale(Locale);java.beans.beancontext.BeanContextSupport.setLocale(Locale);java.util.Calendar.Builder.setLocale(Locale);javax.imageio.ImageReader.setLocale(Locale);javax.imageio.ImageWriter.setLocale(Locale);javax.security.auth.callback.LanguageCallback.setLocale(Locale);org.xml.sax.helpers.XMLReaderAdapter.setLocale(Locale),;0.16;0.15;0.14;0.18;0.20;0.14;0.14
setPropertiesFromAttributes,7,0.401300959,Set the cached properties from the attributes.,;javax.swing.text.LabelView.setPropertiesFromAttributes();javax.swing.text.ParagraphView.setPropertiesFromAttributes();javax.swing.text.html.BlockView.setPropertiesFromAttributes();javax.swing.text.html.ImageView.setPropertiesFromAttributes();javax.swing.text.html.InlineView.setPropertiesFromAttributes();javax.swing.text.html.ListView.setPropertiesFromAttributes();javax.swing.text.html.ParagraphView.setPropertiesFromAttributes(),;0.37;0.40;0.29;0.29;0.40;0.14;0.14
setRoundRect,7,0.552377368,"Sets the location, size, and corner radii of this RoundRectangle2D to the specified double values.",";java.awt.geom.RoundRectangle2D.setRoundRect(double,double,double,double,double,double);java.awt.geom.RoundRectangle2D.setRoundRect(RoundRectangle2D);java.awt.geom.RoundRectangle2D.Double.setRoundRect(double,double,double,double,double,double);java.awt.geom.RoundRectangle2D.Double.setRoundRect(RoundRectangle2D);java.awt.geom.RoundRectangle2D.Float.setRoundRect(float,float,float,float,float,float);java.awt.geom.RoundRectangle2D.Float.setRoundRect(double,double,double,double,double,double);java.awt.geom.RoundRectangle2D.Float.setRoundRect(RoundRectangle2D)",;0.55;0.43;0.55;0.43;0.51;0.55;0.43
setRowHeight,7,0.442912301,Sets the height of each cell. If the specified value is less than or equal to zero the current cell renderer is queried for each row's height.,";javax.swing.JTable.setRowHeight(int);javax.swing.JTable.setRowHeight(int,int);javax.swing.JTree.setRowHeight(int);javax.swing.plaf.basic.BasicTreeUI.setRowHeight(int);javax.swing.tree.AbstractLayoutCache.setRowHeight(int);javax.swing.tree.FixedHeightLayoutCache.setRowHeight(int);javax.swing.tree.VariableHeightLayoutCache.setRowHeight(int)",;0.24;0.24;0.39;0.14;0.44;0.28;0.44
setValueIsAdjusting,7,0.428571429,Sets the valueIsAdjusting property.,;java.awt.Scrollbar.setValueIsAdjusting(boolean);java.awt.ScrollPaneAdjustable.setValueIsAdjusting(boolean);javax.swing.DefaultBoundedRangeModel.setValueIsAdjusting(boolean);javax.swing.DefaultListSelectionModel.setValueIsAdjusting(boolean);javax.swing.JList.setValueIsAdjusting(boolean);javax.swing.JScrollBar.setValueIsAdjusting(boolean);javax.swing.JSlider.setValueIsAdjusting(boolean),;0.43;0.43;0.43;0.21;0.21;0.24;0.23
shortValue,7,0.62590825,Returns the value of this Long as a short after a narrowing primitive conversion.,;java.lang.Byte.shortValue();java.lang.Double.shortValue();java.lang.Float.shortValue();java.lang.Integer.shortValue();java.lang.Long.shortValue();java.lang.Number.shortValue();java.lang.Short.shortValue(),;0.54;0.63;0.63;0.63;0.63;0.25;0.40
slice,7,0.961888411,"Creates a new short buffer whose content is a shared subsequence of this buffer's content. The content of the new buffer will start at this buffer's current position. Changes to this buffer's content will be visible in the new buffer, and vice versa; the two buffers' position, limit, and mark values will be independent. The new buffer's position will be zero, its capacity and its limit will be the number of shorts remaining in this buffer, and its mark will be undefined. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.",;java.nio.ByteBuffer.slice();java.nio.CharBuffer.slice();java.nio.DoubleBuffer.slice();java.nio.FloatBuffer.slice();java.nio.IntBuffer.slice();java.nio.LongBuffer.slice();java.nio.ShortBuffer.slice(),;0.96;0.96;0.96;0.96;0.96;0.96;0.96
startDrag,7,0.443514397,"Start a drag, given the DragGestureEvent that initiated the drag, the initial Cursor to use, the Image to drag, the offset of the Image origin from the hotspot of the Cursor at the instant of the trigger, the Transferable subject data of the drag, the DragSourceListener, and the FlavorMap.",";java.awt.dnd.DragGestureEvent.startDrag(Cursor,Transferable);java.awt.dnd.DragGestureEvent.startDrag(Cursor,Transferable,DragSourceListener);java.awt.dnd.DragGestureEvent.startDrag(Cursor,Image,Point,Transferable,DragSourceListener);java.awt.dnd.DragSource.startDrag(DragGestureEvent,Cursor,Image,Point,Transferable,DragSourceListener,FlavorMap);java.awt.dnd.DragSource.startDrag(DragGestureEvent,Cursor,Transferable,DragSourceListener,FlavorMap);java.awt.dnd.DragSource.startDrag(DragGestureEvent,Cursor,Image,Point,Transferable,DragSourceListener);java.awt.dnd.DragSource.startDrag(DragGestureEvent,Cursor,Transferable,DragSourceListener)",;0.14;0.28;0.33;0.44;0.43;0.44;0.43
sum,7,0.404944396,Adds two long values together as per the + operator.,";java.lang.Double.sum(double,double);java.lang.Float.sum(float,float);java.lang.Integer.sum(int,int);java.lang.Long.sum(long,long);java.util.concurrent.atomic.DoubleAdder.sum();java.util.concurrent.atomic.LongAdder.sum();javax.swing.Spring.sum(Spring,Spring)",;0.40;0.40;0.37;0.40;0.22;0.20;0.14
toInstant,7,0.471758064,Converts this object to an Instant. The conversion creates an Instant that represents the same point on the time-line as this Calendar.,;java.nio.file.attribute.FileTime.toInstant();java.sql.Date.toInstant();java.sql.Time.toInstant();java.sql.Timestamp.toInstant();java.time.OffsetDateTime.toInstant();java.util.Calendar.toInstant();java.util.Date.toInstant(),;0.29;0.25;0.25;0.47;0.34;0.47;0.47
tryLock,7,0.383956236,"Acquires the lock only if it is not held by another thread at the time of invocation. Acquires the lock if it is not held by another thread and returns immediately with the value true, setting the lock hold count to one. Even when this lock has been set to use a fair ordering policy, a call to tryLock() will immediately acquire the lock if it is available, whether or not other threads are currently waiting for the lock. This ""barging"" behavior can be useful in certain circumstances, even though it breaks fairness. If you want to honor the fairness setting for this lock, then use tryLock(0, TimeUnit.SECONDS) which is almost equivalent (it also detects interruption). If the current thread already holds this lock then the hold count is incremented by one and the method returns true. If the lock is held by another thread then this method will return immediately with the value false.",";java.nio.channels.AsynchronousFileChannel.tryLock(long,long,boolean);java.nio.channels.AsynchronousFileChannel.tryLock();java.nio.channels.FileChannel.tryLock(long,long,boolean);java.nio.channels.FileChannel.tryLock();java.util.concurrent.locks.ReentrantLock.tryLock();java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.tryLock();java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.tryLock()",;0.18;0.27;0.20;0.27;0.38;0.36;0.38
abs,8,0.479945261,"Returns the absolute value of a long value. If the argument is not negative, the argument is returned. If the argument is negative, the negation of the argument is returned. Note that if the argument is equal to the value of Long.MIN_VALUE, the most negative representable long value, the result is that same value, which is negative.",;java.lang.Math.abs(int);java.lang.Math.abs(long);java.lang.StrictMath.abs(int);java.lang.StrictMath.abs(long);java.math.BigDecimal.abs();java.math.BigDecimal.abs(MathContext);java.math.BigInteger.abs();java.time.Duration.abs(),;0.48;0.48;0.48;0.48;0.26;0.26;0.23;0.12
array,8,0.905250077,"Returns the short array that backs this buffer(optional operation). Modifications to this buffer's content will cause the returned array's content to be modified, and vice versa. Invoke the hasArray method before invoking this method in order to ensure that this buffer has an accessible backing array.",;java.nio.Buffer.array();java.nio.ByteBuffer.array();java.nio.CharBuffer.array();java.nio.DoubleBuffer.array();java.nio.FloatBuffer.array();java.nio.IntBuffer.array();java.nio.LongBuffer.array();java.nio.ShortBuffer.array(),;0.64;0.91;0.91;0.91;0.91;0.91;0.91;0.91
arrayOffset,8,1,Returns the offset within this buffer's backing array of the first element of the buffer(optional operation). If this buffer is backed by an array then buffer position p corresponds to array index p+arrayOffset(). Invoke the hasArray method before invoking this method in order to ensure that this buffer has an accessible backing array.,;java.nio.Buffer.arrayOffset();java.nio.ByteBuffer.arrayOffset();java.nio.CharBuffer.arrayOffset();java.nio.DoubleBuffer.arrayOffset();java.nio.FloatBuffer.arrayOffset();java.nio.IntBuffer.arrayOffset();java.nio.LongBuffer.arrayOffset();java.nio.ShortBuffer.arrayOffset(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
assign,8,1,Initializes the value associated with a DynAny object with the value associated with another DynAny object. The current position of the target DynAny is set to zero for values that have components and to -1 for values that do not have components.,;org.omg.DynamicAny._DynAnyStub.assign(DynAny);org.omg.DynamicAny._DynArrayStub.assign(DynAny);org.omg.DynamicAny._DynEnumStub.assign(DynAny);org.omg.DynamicAny._DynFixedStub.assign(DynAny);org.omg.DynamicAny._DynSequenceStub.assign(DynAny);org.omg.DynamicAny._DynStructStub.assign(DynAny);org.omg.DynamicAny._DynUnionStub.assign(DynAny);org.omg.DynamicAny._DynValueStub.assign(DynAny),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
compute,8,0.375,The main computation performed by this task.,";java.security.Provider.compute(Object,BiFunction&lt;?,?,?);java.util.HashMap.compute(K,BiFunction&lt;?,?,?);java.util.Hashtable.compute(K,BiFunction&lt;?,?,?);java.util.concurrent.ConcurrentHashMap.compute(K,BiFunction&lt;?,?,?);java.util.concurrent.ConcurrentSkipListMap.compute(K,BiFunction&lt;?,?,?);java.util.concurrent.CountedCompleter.compute();java.util.concurrent.RecursiveAction.compute();java.util.concurrent.RecursiveTask.compute()",;0.21;0.25;0.25;0.21;0.19;0.38;0.38;0.38
createCompatibleWritableRaster,8,0.376677189,"Create a compatible WritableRaster with the specified location (minX, minY) and size (width, height), a new SampleModel, and a new initialized DataBuffer.",";java.awt.image.ColorModel.createCompatibleWritableRaster(int,int);java.awt.image.ComponentColorModel.createCompatibleWritableRaster(int,int);java.awt.image.DirectColorModel.createCompatibleWritableRaster(int,int);java.awt.image.IndexColorModel.createCompatibleWritableRaster(int,int);java.awt.image.Raster.createCompatibleWritableRaster();java.awt.image.Raster.createCompatibleWritableRaster(int,int);java.awt.image.Raster.createCompatibleWritableRaster(Rectangle);java.awt.image.Raster.createCompatibleWritableRaster(int,int,int,int)",;0.28;0.34;0.34;0.28;0.26;0.35;0.31;0.38
createMBean,8,1,Description copied from interface:RMIConnection,";javax.management.remote.rmi.RMIConnectionImpl.createMBean(String,ObjectName,Subject);javax.management.remote.rmi.RMIConnectionImpl.createMBean(String,ObjectName,ObjectName,Subject);javax.management.remote.rmi.RMIConnectionImpl.createMBean(String,ObjectName,MarshalledObject,String[],Subject);javax.management.remote.rmi.RMIConnectionImpl.createMBean(String,ObjectName,ObjectName,MarshalledObject,String[],Subject);javax.management.remote.rmi.RMIConnectionImpl_Stub.createMBean(String,ObjectName,MarshalledObject,String[],Subject);javax.management.remote.rmi.RMIConnectionImpl_Stub.createMBean(String,ObjectName,ObjectName,MarshalledObject,String[],Subject);javax.management.remote.rmi.RMIConnectionImpl_Stub.createMBean(String,ObjectName,ObjectName,Subject);javax.management.remote.rmi.RMIConnectionImpl_Stub.createMBean(String,ObjectName,Subject)",;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
current_component,8,1,"Returns the DynAny for the component at the current position. It does not advance the current position, so repeated calls to current_component without an intervening call to rewind, next, or seek return the same component. The returned DynAny object reference can be used to get/set the value of the current component. If the current component represents a complex type, the returned reference can be narrowed based on the TypeCode to get the interface corresponding to the to the complex type. Calling current_component on a DynAny that cannot have components, such as a DynEnum or an empty exception, raises TypeMismatch. Calling current_component on a DynAny whose current position is -1 returns a nil reference. The iteration operations, together with current_component, can be used to dynamically compose an any value. After creating a dynamic any, such as a DynStruct, current_component and next can be used to initialize all the components of the value. Once the dynamic value is completely initialized, to_any creates the corresponding any value.",;org.omg.DynamicAny._DynAnyStub.current_component();org.omg.DynamicAny._DynArrayStub.current_component();org.omg.DynamicAny._DynEnumStub.current_component();org.omg.DynamicAny._DynFixedStub.current_component();org.omg.DynamicAny._DynSequenceStub.current_component();org.omg.DynamicAny._DynStructStub.current_component();org.omg.DynamicAny._DynUnionStub.current_component();org.omg.DynamicAny._DynValueStub.current_component(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
duplicate,8,0.855205354,"Creates a new short buffer that shares this buffer's content. The content of the new buffer will be that of this buffer. Changes to this buffer's content will be visible in the new buffer, and vice versa; the two buffers' position, limit, and mark values will be independent. The new buffer's capacity, limit, position, and mark values will be identical to those of this buffer. The new buffer will be direct if, and only if, this buffer is direct, and it will be read-only if, and only if, this buffer is read-only.",;java.nio.ByteBuffer.duplicate();java.nio.CharBuffer.duplicate();java.nio.DoubleBuffer.duplicate();java.nio.FloatBuffer.duplicate();java.nio.IntBuffer.duplicate();java.nio.LongBuffer.duplicate();java.nio.ShortBuffer.duplicate();org.omg.CORBA.portable.Delegate.duplicate(Object),;0.86;0.86;0.86;0.86;0.86;0.86;0.86;0.12
elements,8,0.27227692,Returns an enumeration of all the Permission objects in the collection.,;java.security.PermissionCollection.elements();java.security.Permissions.elements();java.security.Provider.elements();java.util.Dictionary.elements();java.util.Hashtable.elements();java.util.Vector.elements();java.util.concurrent.ConcurrentHashMap.elements();javax.swing.DefaultListModel.elements(),;0.27;0.27;0.12;0.23;0.26;0.21;0.27;0.26
encode,8,0.171288349,"Encodes all remaining bytes from the specified byte buffer into a newly-allocated ByteBuffer using the Base64 encoding scheme. Upon return, the source buffer's position will be updated to its limit; its limit will not have been changed. The returned output buffer's position will be zero and its limit will be the number of resulting encoded bytes.",";java.net.URLEncoder.encode(String);java.net.URLEncoder.encode(String,String);java.nio.charset.Charset.encode(CharBuffer);java.nio.charset.Charset.encode(String);java.nio.charset.CharsetEncoder.encode(CharBuffer);java.util.Base64.Encoder.encode(byte[]);java.util.Base64.Encoder.encode(byte[],byte[]);java.util.Base64.Encoder.encode(ByteBuffer)",;0.12;0.12;0.17;0.15;0.15;0.16;0.16;0.17
exportObject,8,0.272443583,"Export the activatable remote object to the RMI runtime to make the object available to receive incoming calls. The object is exported on an anonymous port, if port is zero. During activation, this exportObject method should be invoked explicitly by an ""activatable"" object, that does not extend the Activatable class. There is no need for objects that do extend the Activatable class to invoke this method directly because the object is exported during construction.",";java.rmi.activation.Activatable.exportObject(Remote,String,MarshalledObject&lt;?&gt;,boolean,int);java.rmi.activation.Activatable.exportObject(Remote,String,MarshalledObject&lt;?&gt;,boolean,int,RMIClientSocketFactory,RMIServerSocketFactory);java.rmi.activation.Activatable.exportObject(Remote,ActivationID,int);java.rmi.activation.Activatable.exportObject(Remote,ActivationID,int,RMIClientSocketFactory,RMIServerSocketFactory);java.rmi.server.UnicastRemoteObject.exportObject(Remote);java.rmi.server.UnicastRemoteObject.exportObject(Remote,int);java.rmi.server.UnicastRemoteObject.exportObject(Remote,int,RMIClientSocketFactory,RMIServerSocketFactory);javax.rmi.PortableRemoteObject.exportObject(Remote)",;0.15;0.17;0.27;0.27;0.12;0.18;0.18;0.12
from_any,8,1,Initializes the value associated with a DynAny object with the value contained in an any. The current position of the target DynAny is set to zero for values that have components and to -1 for values that do not have components.,;org.omg.DynamicAny._DynAnyStub.from_any(Any);org.omg.DynamicAny._DynArrayStub.from_any(Any);org.omg.DynamicAny._DynEnumStub.from_any(Any);org.omg.DynamicAny._DynFixedStub.from_any(Any);org.omg.DynamicAny._DynSequenceStub.from_any(Any);org.omg.DynamicAny._DynStructStub.from_any(Any);org.omg.DynamicAny._DynUnionStub.from_any(Any);org.omg.DynamicAny._DynValueStub.from_any(Any),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
get_any,8,1,Extracts an Any value contained in the Any represented by this DynAny.,;org.omg.DynamicAny._DynAnyStub.get_any();org.omg.DynamicAny._DynArrayStub.get_any();org.omg.DynamicAny._DynEnumStub.get_any();org.omg.DynamicAny._DynFixedStub.get_any();org.omg.DynamicAny._DynSequenceStub.get_any();org.omg.DynamicAny._DynStructStub.get_any();org.omg.DynamicAny._DynUnionStub.get_any();org.omg.DynamicAny._DynValueStub.get_any(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
get_boolean,8,1,Extracts the boolean value from this DynAny.,;org.omg.DynamicAny._DynAnyStub.get_boolean();org.omg.DynamicAny._DynArrayStub.get_boolean();org.omg.DynamicAny._DynEnumStub.get_boolean();org.omg.DynamicAny._DynFixedStub.get_boolean();org.omg.DynamicAny._DynSequenceStub.get_boolean();org.omg.DynamicAny._DynStructStub.get_boolean();org.omg.DynamicAny._DynUnionStub.get_boolean();org.omg.DynamicAny._DynValueStub.get_boolean(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
get_char,8,1,Extracts the char value from this DynAny.,;org.omg.DynamicAny._DynAnyStub.get_char();org.omg.DynamicAny._DynArrayStub.get_char();org.omg.DynamicAny._DynEnumStub.get_char();org.omg.DynamicAny._DynFixedStub.get_char();org.omg.DynamicAny._DynSequenceStub.get_char();org.omg.DynamicAny._DynStructStub.get_char();org.omg.DynamicAny._DynUnionStub.get_char();org.omg.DynamicAny._DynValueStub.get_char(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
get_double,8,1,Extracts the double value from this DynAny.,;org.omg.DynamicAny._DynAnyStub.get_double();org.omg.DynamicAny._DynArrayStub.get_double();org.omg.DynamicAny._DynEnumStub.get_double();org.omg.DynamicAny._DynFixedStub.get_double();org.omg.DynamicAny._DynSequenceStub.get_double();org.omg.DynamicAny._DynStructStub.get_double();org.omg.DynamicAny._DynUnionStub.get_double();org.omg.DynamicAny._DynValueStub.get_double(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
get_dyn_any,8,1,Extracts the Any value contained in the Any represented by this DynAny and returns it wrapped into a new DynAny.,;org.omg.DynamicAny._DynAnyStub.get_dyn_any();org.omg.DynamicAny._DynArrayStub.get_dyn_any();org.omg.DynamicAny._DynEnumStub.get_dyn_any();org.omg.DynamicAny._DynFixedStub.get_dyn_any();org.omg.DynamicAny._DynSequenceStub.get_dyn_any();org.omg.DynamicAny._DynStructStub.get_dyn_any();org.omg.DynamicAny._DynUnionStub.get_dyn_any();org.omg.DynamicAny._DynValueStub.get_dyn_any(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
get_float,8,1,Extracts the float value from this DynAny.,;org.omg.DynamicAny._DynAnyStub.get_float();org.omg.DynamicAny._DynArrayStub.get_float();org.omg.DynamicAny._DynEnumStub.get_float();org.omg.DynamicAny._DynFixedStub.get_float();org.omg.DynamicAny._DynSequenceStub.get_float();org.omg.DynamicAny._DynStructStub.get_float();org.omg.DynamicAny._DynUnionStub.get_float();org.omg.DynamicAny._DynValueStub.get_float(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
get_long,8,1,Extracts the integer value from this DynAny. The IDL long data type is mapped to the Java int data type.,;org.omg.DynamicAny._DynAnyStub.get_long();org.omg.DynamicAny._DynArrayStub.get_long();org.omg.DynamicAny._DynEnumStub.get_long();org.omg.DynamicAny._DynFixedStub.get_long();org.omg.DynamicAny._DynSequenceStub.get_long();org.omg.DynamicAny._DynStructStub.get_long();org.omg.DynamicAny._DynUnionStub.get_long();org.omg.DynamicAny._DynValueStub.get_long(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
get_longlong,8,1,Extracts the long value from this DynAny. The IDL long long data type is mapped to the Java long data type.,;org.omg.DynamicAny._DynAnyStub.get_longlong();org.omg.DynamicAny._DynArrayStub.get_longlong();org.omg.DynamicAny._DynEnumStub.get_longlong();org.omg.DynamicAny._DynFixedStub.get_longlong();org.omg.DynamicAny._DynSequenceStub.get_longlong();org.omg.DynamicAny._DynStructStub.get_longlong();org.omg.DynamicAny._DynUnionStub.get_longlong();org.omg.DynamicAny._DynValueStub.get_longlong(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
get_octet,8,1,Extracts the byte value from this DynAny. The IDL octet data type is mapped to the Java byte data type.,;org.omg.DynamicAny._DynAnyStub.get_octet();org.omg.DynamicAny._DynArrayStub.get_octet();org.omg.DynamicAny._DynEnumStub.get_octet();org.omg.DynamicAny._DynFixedStub.get_octet();org.omg.DynamicAny._DynSequenceStub.get_octet();org.omg.DynamicAny._DynStructStub.get_octet();org.omg.DynamicAny._DynUnionStub.get_octet();org.omg.DynamicAny._DynValueStub.get_octet(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
get_reference,8,1,Extracts the reference to a CORBA Object from this DynAny.,;org.omg.DynamicAny._DynAnyStub.get_reference();org.omg.DynamicAny._DynArrayStub.get_reference();org.omg.DynamicAny._DynEnumStub.get_reference();org.omg.DynamicAny._DynFixedStub.get_reference();org.omg.DynamicAny._DynSequenceStub.get_reference();org.omg.DynamicAny._DynStructStub.get_reference();org.omg.DynamicAny._DynUnionStub.get_reference();org.omg.DynamicAny._DynValueStub.get_reference(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
get_short,8,1,Extracts the short value from this DynAny.,;org.omg.DynamicAny._DynAnyStub.get_short();org.omg.DynamicAny._DynArrayStub.get_short();org.omg.DynamicAny._DynEnumStub.get_short();org.omg.DynamicAny._DynFixedStub.get_short();org.omg.DynamicAny._DynSequenceStub.get_short();org.omg.DynamicAny._DynStructStub.get_short();org.omg.DynamicAny._DynUnionStub.get_short();org.omg.DynamicAny._DynValueStub.get_short(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
get_string,8,1,Extracts the string value from this DynAny. Both bounded and unbounded strings are extracted using this method.,;org.omg.DynamicAny._DynAnyStub.get_string();org.omg.DynamicAny._DynArrayStub.get_string();org.omg.DynamicAny._DynEnumStub.get_string();org.omg.DynamicAny._DynFixedStub.get_string();org.omg.DynamicAny._DynSequenceStub.get_string();org.omg.DynamicAny._DynStructStub.get_string();org.omg.DynamicAny._DynUnionStub.get_string();org.omg.DynamicAny._DynValueStub.get_string(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
get_typecode,8,1,Extracts the TypeCode object from this DynAny.,;org.omg.DynamicAny._DynAnyStub.get_typecode();org.omg.DynamicAny._DynArrayStub.get_typecode();org.omg.DynamicAny._DynEnumStub.get_typecode();org.omg.DynamicAny._DynFixedStub.get_typecode();org.omg.DynamicAny._DynSequenceStub.get_typecode();org.omg.DynamicAny._DynStructStub.get_typecode();org.omg.DynamicAny._DynUnionStub.get_typecode();org.omg.DynamicAny._DynValueStub.get_typecode(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
get_ulong,8,1,Extracts the integer value from this DynAny. The IDL ulong data type is mapped to the Java int data type.,;org.omg.DynamicAny._DynAnyStub.get_ulong();org.omg.DynamicAny._DynArrayStub.get_ulong();org.omg.DynamicAny._DynEnumStub.get_ulong();org.omg.DynamicAny._DynFixedStub.get_ulong();org.omg.DynamicAny._DynSequenceStub.get_ulong();org.omg.DynamicAny._DynStructStub.get_ulong();org.omg.DynamicAny._DynUnionStub.get_ulong();org.omg.DynamicAny._DynValueStub.get_ulong(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
get_ulonglong,8,1,Extracts the long value from this DynAny. The IDL unsigned long long data type is mapped to the Java long data type.,;org.omg.DynamicAny._DynAnyStub.get_ulonglong();org.omg.DynamicAny._DynArrayStub.get_ulonglong();org.omg.DynamicAny._DynEnumStub.get_ulonglong();org.omg.DynamicAny._DynFixedStub.get_ulonglong();org.omg.DynamicAny._DynSequenceStub.get_ulonglong();org.omg.DynamicAny._DynStructStub.get_ulonglong();org.omg.DynamicAny._DynUnionStub.get_ulonglong();org.omg.DynamicAny._DynValueStub.get_ulonglong(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
get_ushort,8,1,Extracts the short value from this DynAny. The IDL ushort data type is mapped to the Java short data type.,;org.omg.DynamicAny._DynAnyStub.get_ushort();org.omg.DynamicAny._DynArrayStub.get_ushort();org.omg.DynamicAny._DynEnumStub.get_ushort();org.omg.DynamicAny._DynFixedStub.get_ushort();org.omg.DynamicAny._DynSequenceStub.get_ushort();org.omg.DynamicAny._DynStructStub.get_ushort();org.omg.DynamicAny._DynUnionStub.get_ushort();org.omg.DynamicAny._DynValueStub.get_ushort(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
get_val,8,1,Extracts a Serializable object from this DynAny. The IDL ValueBase type is mapped to the Java Serializable type.,;org.omg.DynamicAny._DynAnyStub.get_val();org.omg.DynamicAny._DynArrayStub.get_val();org.omg.DynamicAny._DynEnumStub.get_val();org.omg.DynamicAny._DynFixedStub.get_val();org.omg.DynamicAny._DynSequenceStub.get_val();org.omg.DynamicAny._DynStructStub.get_val();org.omg.DynamicAny._DynUnionStub.get_val();org.omg.DynamicAny._DynValueStub.get_val(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
get_wchar,8,1,Extracts the long value from this DynAny. The IDL wchar data type is mapped to the Java char data type.,;org.omg.DynamicAny._DynAnyStub.get_wchar();org.omg.DynamicAny._DynArrayStub.get_wchar();org.omg.DynamicAny._DynEnumStub.get_wchar();org.omg.DynamicAny._DynFixedStub.get_wchar();org.omg.DynamicAny._DynSequenceStub.get_wchar();org.omg.DynamicAny._DynStructStub.get_wchar();org.omg.DynamicAny._DynUnionStub.get_wchar();org.omg.DynamicAny._DynValueStub.get_wchar(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
get_wstring,8,1,Extracts the string value from this DynAny. Both bounded and unbounded strings are extracted using this method.,;org.omg.DynamicAny._DynAnyStub.get_wstring();org.omg.DynamicAny._DynArrayStub.get_wstring();org.omg.DynamicAny._DynEnumStub.get_wstring();org.omg.DynamicAny._DynFixedStub.get_wstring();org.omg.DynamicAny._DynSequenceStub.get_wstring();org.omg.DynamicAny._DynStructStub.get_wstring();org.omg.DynamicAny._DynUnionStub.get_wstring();org.omg.DynamicAny._DynValueStub.get_wstring(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
getActionCommand,8,0.219483419,Returns the command name of the action event fired by this tray icon.,;java.awt.Button.getActionCommand();java.awt.MenuItem.getActionCommand();java.awt.TrayIcon.getActionCommand();java.awt.event.ActionEvent.getActionCommand();javax.swing.AbstractButton.getActionCommand();javax.swing.DefaultButtonModel.getActionCommand();javax.swing.JComboBox.getActionCommand();javax.swing.Timer.getActionCommand(),;0.20;0.21;0.22;0.12;0.19;0.19;0.17;0.12
getAddress,8,0.375,Returns the raw IP address of this InetAddress object. The result is in network byte order: the highest order byte of the address is in getAddress()[0].,;java.net.DatagramPacket.getAddress();java.net.Inet4Address.getAddress();java.net.Inet6Address.getAddress();java.net.InetAddress.getAddress();java.net.InetSocketAddress.getAddress();java.net.InterfaceAddress.getAddress();javax.management.remote.rmi.RMIConnector.getAddress();javax.management.remote.rmi.RMIConnectorServer.getAddress(),;0.12;0.38;0.38;0.38;0.00;0.12;0.12;0.12
getAnnotation,8,0.5,"Returns this element's annotation for the specified type if such an annotation is present, else null.",;java.lang.Class.getAnnotation(Class&lt;A&gt;);java.lang.Package.getAnnotation(Class&lt;A&gt;);java.lang.reflect.AccessibleObject.getAnnotation(Class&lt;T&gt;);java.lang.reflect.Constructor.getAnnotation(Class&lt;T&gt;);java.lang.reflect.Executable.getAnnotation(Class&lt;T&gt;);java.lang.reflect.Field.getAnnotation(Class&lt;T&gt;);java.lang.reflect.Method.getAnnotation(Class&lt;T&gt;);java.lang.reflect.Parameter.getAnnotation(Class&lt;T&gt;),;0.50;0.50;0.50;0.50;0.50;0.50;0.50;0.50
getBlue,8,0.503415619,"Returns the blue color component for the specified pixel, scaled from 0 to 255 in the default RGB ColorSpace, sRGB. A color conversion is done if necessary. The pixel value is specified as an int. The returned value is a non pre-multiplied value. Thus, if the alpha is premultiplied, this method divides it out before returning the value. If the alpha value is 0, for example, the blue value is 0.",;java.awt.Color.getBlue();java.awt.image.ColorModel.getBlue(int);java.awt.image.ColorModel.getBlue(Object);java.awt.image.ComponentColorModel.getBlue(int);java.awt.image.ComponentColorModel.getBlue(Object);java.awt.image.DirectColorModel.getBlue(int);java.awt.image.DirectColorModel.getBlue(Object);java.awt.image.IndexColorModel.getBlue(int),;0.13;0.50;0.44;0.49;0.50;0.50;0.47;0.34
getDeclaredAnnotations,8,0.625,"Returns annotations that are directly present on this element. This method ignores inherited annotations. If there are no annotations directly present on this element, the return value is an array of length 0. The caller of this method is free to modify the returned array; it will have no effect on the arrays returned to other callers.",;java.lang.Class.getDeclaredAnnotations();java.lang.Package.getDeclaredAnnotations();java.lang.reflect.AccessibleObject.getDeclaredAnnotations();java.lang.reflect.Constructor.getDeclaredAnnotations();java.lang.reflect.Executable.getDeclaredAnnotations();java.lang.reflect.Field.getDeclaredAnnotations();java.lang.reflect.Method.getDeclaredAnnotations();java.lang.reflect.Parameter.getDeclaredAnnotations(),;0.38;0.38;0.38;0.62;0.62;0.62;0.62;0.62
getEncoding,8,0.239221202,"Returns the name of the character encoding being used by this stream. If the encoding has an historical name then that name is returned; otherwise the encoding's canonical name is returned. If this instance was created with the OutputStreamWriter(OutputStream, String) constructor then the returned name, being unique for the encoding, may differ from the name passed to the constructor. This method may return null if the stream has been closed.",;java.io.InputStreamReader.getEncoding();java.io.OutputStreamWriter.getEncoding();java.util.logging.Handler.getEncoding();javax.sound.sampled.AudioFormat.getEncoding();javax.xml.bind.helpers.AbstractMarshallerImpl.getEncoding();javax.xml.stream.util.StreamReaderDelegate.getEncoding();org.xml.sax.InputSource.getEncoding();org.xml.sax.ext.Locator2Impl.getEncoding(),;0.24;0.24;0.13;0.12;0.12;0.12;0.14;0.12
getGreen,8,0.502724789,"Returns the green color component for the specified pixel, scaled from 0 to 255 in the default RGB ColorSpace, sRGB. A color conversion is done if necessary. The pixel value is specified as an int. The returned value is a non pre-multiplied value. Thus, if the alpha is premultiplied, this method divides it out before returning the value. If the alpha value is 0, for example, the green value is 0.",;java.awt.Color.getGreen();java.awt.image.ColorModel.getGreen(int);java.awt.image.ColorModel.getGreen(Object);java.awt.image.ComponentColorModel.getGreen(int);java.awt.image.ComponentColorModel.getGreen(Object);java.awt.image.DirectColorModel.getGreen(int);java.awt.image.DirectColorModel.getGreen(Object);java.awt.image.IndexColorModel.getGreen(int),;0.13;0.50;0.43;0.49;0.50;0.50;0.47;0.34
getIconHeight,8,0.75,Description copied from interface:Icon,;javax.swing.ImageIcon.getIconHeight();javax.swing.plaf.IconUIResource.getIconHeight();javax.swing.plaf.metal.MetalCheckBoxIcon.getIconHeight();javax.swing.plaf.metal.MetalComboBoxIcon.getIconHeight();javax.swing.plaf.metal.MetalIconFactory.FileIcon16.getIconHeight();javax.swing.plaf.metal.MetalIconFactory.FolderIcon16.getIconHeight();javax.swing.plaf.metal.MetalIconFactory.PaletteCloseIcon.getIconHeight();javax.swing.plaf.metal.MetalIconFactory.TreeControlIcon.getIconHeight(),;0.12;0.75;0.75;0.12;0.75;0.75;0.75;0.75
getIconWidth,8,0.75,Description copied from interface:Icon,;javax.swing.ImageIcon.getIconWidth();javax.swing.plaf.IconUIResource.getIconWidth();javax.swing.plaf.metal.MetalCheckBoxIcon.getIconWidth();javax.swing.plaf.metal.MetalComboBoxIcon.getIconWidth();javax.swing.plaf.metal.MetalIconFactory.FileIcon16.getIconWidth();javax.swing.plaf.metal.MetalIconFactory.FolderIcon16.getIconWidth();javax.swing.plaf.metal.MetalIconFactory.PaletteCloseIcon.getIconWidth();javax.swing.plaf.metal.MetalIconFactory.TreeControlIcon.getIconWidth(),;0.12;0.75;0.75;0.12;0.75;0.75;0.75;0.75
getId,8,0.570618532,Gets the ID of the chronology. The ID uniquely identifies the Chronology. It can be used to lookup the Chronology using Chronology.of(String).,;java.lang.Thread.getId();java.time.ZoneId.getId();java.time.chrono.HijrahChronology.getId();java.time.chrono.IsoChronology.getId();java.time.chrono.JapaneseChronology.getId();java.time.chrono.MinguoChronology.getId();java.time.chrono.ThaiBuddhistChronology.getId();javax.xml.datatype.DatatypeConstants.Field.getId(),;0.12;0.12;0.57;0.57;0.57;0.57;0.57;0.12
getImage,8,0.223085087,"Returns an Image object that can then be painted on the screen. The url argument must specify an absolute URL. The name argument is a specifier that is relative to the url argument. This method always returns immediately, whether or not the image exists. When this applet attempts to draw the image on the screen, the data will be loaded. The graphics primitives that draw the image will incrementally paint on the screen.",";java.applet.Applet.getImage(URL);java.applet.Applet.getImage(URL,String);java.awt.TexturePaint.getImage();java.awt.Toolkit.getImage(String);java.awt.Toolkit.getImage(URL);java.awt.TrayIcon.getImage();javax.swing.ImageIcon.getImage();javax.swing.text.html.ImageView.getImage()",;0.22;0.22;0.12;0.20;0.21;0.12;0.12;0.12
getKey,8,0.25,Returns the key corresponding to this entry.,";java.awt.MenuShortcut.getKey();java.security.KeyStore.getKey(String,char[]);java.util.AbstractMap.SimpleEntry.getKey();java.util.AbstractMap.SimpleImmutableEntry.getKey();java.util.prefs.PreferenceChangeEvent.getKey();javax.accessibility.AccessibleRelation.getKey();javax.crypto.spec.DESedeKeySpec.getKey();javax.crypto.spec.DESKeySpec.getKey()",;0.12;0.12;0.25;0.25;0.12;0.12;0.12;0.12
getLineMetrics,8,0.461413581,Returns a LineMetrics object created with the specified arguments.,";java.awt.Font.getLineMetrics(String,FontRenderContext);java.awt.Font.getLineMetrics(String,int,int,FontRenderContext);java.awt.Font.getLineMetrics(char[],int,int,FontRenderContext);java.awt.Font.getLineMetrics(CharacterIterator,int,int,FontRenderContext);java.awt.FontMetrics.getLineMetrics(String,Graphics);java.awt.FontMetrics.getLineMetrics(String,int,int,Graphics);java.awt.FontMetrics.getLineMetrics(char[],int,int,Graphics);java.awt.FontMetrics.getLineMetrics(CharacterIterator,int,int,Graphics)",;0.38;0.46;0.46;0.46;0.43;0.43;0.39;0.40
getLocalAddress,8,0.714881294,"Returns the socket address that this channel's socket is bound to. Where the channel is bound to an Internet Protocol socket address then the return value from this method is of type InetSocketAddress. If there is a security manager set, its checkConnect method is called with the local address and -1 as its arguments to see if the operation is allowed. If the operation is not allowed, a SocketAddress representing the loopback address and the local port of the channel's socket is returned.",;java.net.DatagramSocket.getLocalAddress();java.net.Socket.getLocalAddress();java.nio.channels.AsynchronousServerSocketChannel.getLocalAddress();java.nio.channels.AsynchronousSocketChannel.getLocalAddress();java.nio.channels.DatagramChannel.getLocalAddress();java.nio.channels.ServerSocketChannel.getLocalAddress();java.nio.channels.SocketChannel.getLocalAddress();javax.xml.ws.spi.http.HttpExchange.getLocalAddress(),;0.31;0.44;0.71;0.71;0.71;0.71;0.71;0.12
getMaximumSpan,8,0.555749297,Determines the maximum span for this view along an axis.,;javax.swing.text.AsyncBoxView.getMaximumSpan(int);javax.swing.text.BoxView.getMaximumSpan(int);javax.swing.text.ComponentView.getMaximumSpan(int);javax.swing.text.View.getMaximumSpan(int);javax.swing.text.WrappedPlainView.getMaximumSpan(int);javax.swing.text.html.BlockView.getMaximumSpan(int);javax.swing.text.html.FormView.getMaximumSpan(int);javax.swing.text.html.ParagraphView.getMaximumSpan(int),;0.56;0.56;0.43;0.56;0.31;0.56;0.37;0.38
getMinimumSpan,8,0.568010968,Determines the minimum span for this view along an axis.,;javax.swing.text.AsyncBoxView.getMinimumSpan(int);javax.swing.text.BoxView.getMinimumSpan(int);javax.swing.text.ComponentView.getMinimumSpan(int);javax.swing.text.GlyphView.getMinimumSpan(int);javax.swing.text.View.getMinimumSpan(int);javax.swing.text.WrappedPlainView.getMinimumSpan(int);javax.swing.text.html.BlockView.getMinimumSpan(int);javax.swing.text.html.ParagraphView.getMinimumSpan(int),;0.57;0.57;0.42;0.40;0.57;0.31;0.57;0.39
getRed,8,0.495639836,"Returns the red color component for the specified pixel, scaled from 0 to 255 in the default RGB ColorSpace, sRGB. A color conversion is done if necessary. The pixel value is specified as an int. The returned value is a non pre-multiplied value. Thus, if the alpha is premultiplied, this method divides it out before returning the value. If the alpha value is 0, for example, the red value is 0.",;java.awt.Color.getRed();java.awt.image.ColorModel.getRed(int);java.awt.image.ColorModel.getRed(Object);java.awt.image.ComponentColorModel.getRed(int);java.awt.image.ComponentColorModel.getRed(Object);java.awt.image.DirectColorModel.getRed(int);java.awt.image.DirectColorModel.getRed(Object);java.awt.image.IndexColorModel.getRed(int),;0.13;0.48;0.44;0.49;0.49;0.50;0.47;0.34
getRenderingHints,8,0.569953267,Returns the rendering hints for this op.,;java.awt.Graphics2D.getRenderingHints();java.awt.image.AffineTransformOp.getRenderingHints();java.awt.image.BandCombineOp.getRenderingHints();java.awt.image.ColorConvertOp.getRenderingHints();java.awt.image.ConvolveOp.getRenderingHints();java.awt.image.LookupOp.getRenderingHints();java.awt.image.RescaleOp.getRenderingHints();java.awt.image.renderable.RenderContext.getRenderingHints(),;0.12;0.38;0.52;0.42;0.57;0.57;0.57;0.12
getSampleSize,8,0.666971618,Returns the number of bits per sample for the specified band.,;java.awt.image.ComponentSampleModel.getSampleSize();java.awt.image.ComponentSampleModel.getSampleSize(int);java.awt.image.MultiPixelPackedSampleModel.getSampleSize();java.awt.image.MultiPixelPackedSampleModel.getSampleSize(int);java.awt.image.SampleModel.getSampleSize();java.awt.image.SampleModel.getSampleSize(int);java.awt.image.SinglePixelPackedSampleModel.getSampleSize();java.awt.image.SinglePixelPackedSampleModel.getSampleSize(int),;0.63;0.67;0.63;0.67;0.21;0.32;0.63;0.67
getSelectedObjects,8,0.400547183,Returns an array (length 1) containing the checkbox label or null if the checkbox is not selected.,;java.awt.Checkbox.getSelectedObjects();java.awt.CheckboxMenuItem.getSelectedObjects();java.awt.Choice.getSelectedObjects();java.awt.List.getSelectedObjects();javax.swing.AbstractButton.getSelectedObjects();javax.swing.DefaultButtonModel.getSelectedObjects();javax.swing.JCheckBoxMenuItem.getSelectedObjects();javax.swing.JComboBox.getSelectedObjects(),;0.40;0.38;0.28;0.12;0.37;0.12;0.36;0.12
getSelectionModel,8,0.25,Returns the model object that handles single selections.,;javax.swing.JColorChooser.getSelectionModel();javax.swing.JList.getSelectionModel();javax.swing.JMenuBar.getSelectionModel();javax.swing.JPopupMenu.getSelectionModel();javax.swing.JTable.getSelectionModel();javax.swing.JTree.getSelectionModel();javax.swing.table.DefaultTableColumnModel.getSelectionModel();javax.swing.tree.AbstractLayoutCache.getSelectionModel(),;0.12;0.12;0.25;0.25;0.22;0.12;0.22;0.12
getStringBounds,8,0.581489718,"Returns the logical bounds of the specified String in the specified FontRenderContext. The logical bounds contains the origin, ascent, advance, and height, which includes the leading. The logical bounds does not always enclose all the text. For example, in some languages and in some fonts, accent marks can be positioned above the ascent or below the descent. To obtain a visual bounding box, which encloses all the text, use the getBounds method of TextLayout. Note: The returned bounds is in baseline-relative coordinates (see class notes).",";java.awt.Font.getStringBounds(String,FontRenderContext);java.awt.Font.getStringBounds(String,int,int,FontRenderContext);java.awt.Font.getStringBounds(char[],int,int,FontRenderContext);java.awt.Font.getStringBounds(CharacterIterator,int,int,FontRenderContext);java.awt.FontMetrics.getStringBounds(String,Graphics);java.awt.FontMetrics.getStringBounds(String,int,int,Graphics);java.awt.FontMetrics.getStringBounds(char[],int,int,Graphics);java.awt.FontMetrics.getStringBounds(CharacterIterator,int,int,Graphics)",;0.58;0.58;0.57;0.56;0.44;0.44;0.41;0.35
getTransparency,8,0.5,"Returns the transparency. Returns either OPAQUE, BITMASK, or TRANSLUCENT.",;java.awt.Color.getTransparency();java.awt.GradientPaint.getTransparency();java.awt.MultipleGradientPaint.getTransparency();java.awt.TexturePaint.getTransparency();java.awt.image.BufferedImage.getTransparency();java.awt.image.ColorModel.getTransparency();java.awt.image.IndexColorModel.getTransparency();java.awt.image.VolatileImage.getTransparency(),;0.25;0.35;0.33;0.35;0.50;0.50;0.50;0.50
getYear,8,0.59137353,"Gets the year field. This method returns the primitive int value for the year. The year returned by this method is proleptic as per get(YEAR). To obtain the year-of-era, use get(YEAR_OF_ERA).",;java.sql.Time.getYear();java.time.LocalDate.getYear();java.time.LocalDateTime.getYear();java.time.OffsetDateTime.getYear();java.time.YearMonth.getYear();java.time.ZonedDateTime.getYear();java.util.Date.getYear();javax.xml.datatype.XMLGregorianCalendar.getYear(),;0.00;0.59;0.59;0.59;0.48;0.59;0.12;0.12
hasArray,8,0.915885671,Tells whether or not this buffer is backed by an accessible array. If this method returns true then the array and arrayOffset methods may safely be invoked.,;java.nio.Buffer.hasArray();java.nio.ByteBuffer.hasArray();java.nio.CharBuffer.hasArray();java.nio.DoubleBuffer.hasArray();java.nio.FloatBuffer.hasArray();java.nio.IntBuffer.hasArray();java.nio.LongBuffer.hasArray();java.nio.ShortBuffer.hasArray(),;0.92;0.91;0.91;0.91;0.91;0.91;0.91;0.91
insert_dyn_any,8,1,Inserts the Any value contained in the parameter DynAny into the Any represented by this DynAny.,;org.omg.DynamicAny._DynAnyStub.insert_dyn_any(DynAny);org.omg.DynamicAny._DynArrayStub.insert_dyn_any(DynAny);org.omg.DynamicAny._DynEnumStub.insert_dyn_any(DynAny);org.omg.DynamicAny._DynFixedStub.insert_dyn_any(DynAny);org.omg.DynamicAny._DynSequenceStub.insert_dyn_any(DynAny);org.omg.DynamicAny._DynStructStub.insert_dyn_any(DynAny);org.omg.DynamicAny._DynUnionStub.insert_dyn_any(DynAny);org.omg.DynamicAny._DynValueStub.insert_dyn_any(DynAny),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
insert_reference,8,1,Inserts a reference to a CORBA object into the DynAny.,;org.omg.DynamicAny._DynAnyStub.insert_reference(Object);org.omg.DynamicAny._DynArrayStub.insert_reference(Object);org.omg.DynamicAny._DynEnumStub.insert_reference(Object);org.omg.DynamicAny._DynFixedStub.insert_reference(Object);org.omg.DynamicAny._DynSequenceStub.insert_reference(Object);org.omg.DynamicAny._DynStructStub.insert_reference(Object);org.omg.DynamicAny._DynUnionStub.insert_reference(Object);org.omg.DynamicAny._DynValueStub.insert_reference(Object),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
insert_typecode,8,1,Inserts a TypeCode object into the DynAny.,;org.omg.DynamicAny._DynAnyStub.insert_typecode(TypeCode);org.omg.DynamicAny._DynArrayStub.insert_typecode(TypeCode);org.omg.DynamicAny._DynEnumStub.insert_typecode(TypeCode);org.omg.DynamicAny._DynFixedStub.insert_typecode(TypeCode);org.omg.DynamicAny._DynSequenceStub.insert_typecode(TypeCode);org.omg.DynamicAny._DynStructStub.insert_typecode(TypeCode);org.omg.DynamicAny._DynUnionStub.insert_typecode(TypeCode);org.omg.DynamicAny._DynValueStub.insert_typecode(TypeCode),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
insert_val,8,1,Inserts a reference to a Serializable object into this DynAny. The IDL ValueBase type is mapped to the Java Serializable type.,;org.omg.DynamicAny._DynAnyStub.insert_val(Serializable);org.omg.DynamicAny._DynArrayStub.insert_val(Serializable);org.omg.DynamicAny._DynEnumStub.insert_val(Serializable);org.omg.DynamicAny._DynFixedStub.insert_val(Serializable);org.omg.DynamicAny._DynSequenceStub.insert_val(Serializable);org.omg.DynamicAny._DynStructStub.insert_val(Serializable);org.omg.DynamicAny._DynUnionStub.insert_val(Serializable);org.omg.DynamicAny._DynValueStub.insert_val(Serializable),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
installKeyboardActions,8,0.226138339,Register all keyboard actions on the JTable.,;javax.swing.plaf.basic.BasicButtonListener.installKeyboardActions(JComponent);javax.swing.plaf.basic.BasicComboBoxUI.installKeyboardActions();javax.swing.plaf.basic.BasicLabelUI.installKeyboardActions(JLabel);javax.swing.plaf.basic.BasicListUI.installKeyboardActions();javax.swing.plaf.basic.BasicSpinnerUI.installKeyboardActions();javax.swing.plaf.basic.BasicSplitPaneUI.installKeyboardActions();javax.swing.plaf.basic.BasicTableHeaderUI.installKeyboardActions();javax.swing.plaf.basic.BasicTableUI.installKeyboardActions(),;0.12;0.12;0.00;0.12;0.12;0.12;0.23;0.23
isActive,8,0.236880021,Tests whether the monitor MBean is active. A monitor MBean is marked active when the start method is called. It becomes inactive when the stop method is called.,;java.applet.Applet.isActive();java.awt.Window.isActive();java.awt.dnd.DropTarget.isActive();javax.management.monitor.Monitor.isActive();javax.management.relation.RelationService.isActive();javax.management.remote.rmi.RMIConnectorServer.isActive();javax.management.timer.Timer.isActive();javax.swing.text.DefaultCaret.isActive(),;0.20;0.12;0.12;0.24;0.12;0.12;0.23;0.12
isDirect,8,0.658920663,Tells whether or not this buffer is direct.,;java.nio.Buffer.isDirect();java.nio.ByteBuffer.isDirect();java.nio.CharBuffer.isDirect();java.nio.DoubleBuffer.isDirect();java.nio.FloatBuffer.isDirect();java.nio.IntBuffer.isDirect();java.nio.LongBuffer.isDirect();java.nio.ShortBuffer.isDirect(),;0.66;0.65;0.65;0.65;0.65;0.65;0.65;0.65
isFileTypeSupported,8,0.419872378,Indicates whether file writing support for the specified file type is provided by the system.,";javax.sound.midi.MidiSystem.isFileTypeSupported(int);javax.sound.midi.MidiSystem.isFileTypeSupported(int,Sequence);javax.sound.midi.spi.MidiFileWriter.isFileTypeSupported(int);javax.sound.midi.spi.MidiFileWriter.isFileTypeSupported(int,Sequence);javax.sound.sampled.AudioSystem.isFileTypeSupported(AudioFileFormat.Type);javax.sound.sampled.AudioSystem.isFileTypeSupported(AudioFileFormat.Type,AudioInputStream);javax.sound.sampled.spi.AudioFileWriter.isFileTypeSupported(AudioFileFormat.Type);javax.sound.sampled.spi.AudioFileWriter.isFileTypeSupported(AudioFileFormat.Type,AudioInputStream)",;0.41;0.34;0.40;0.34;0.42;0.32;0.41;0.31
isOpaque,8,0.25,Overridden for performance reasons. See the Implementation Note for more information.,;java.awt.Component.isOpaque();java.awt.Window.isOpaque();java.net.URI.isOpaque();javax.swing.DefaultListCellRenderer.isOpaque();javax.swing.JComponent.isOpaque();javax.swing.plaf.nimbus.NimbusStyle.isOpaque(SynthContext);javax.swing.plaf.synth.SynthStyle.isOpaque(SynthContext);javax.swing.table.DefaultTableCellRenderer.isOpaque(),;0.22;0.12;0.12;0.25;0.22;0.14;0.13;0.25
isReadOnly,8,0.157915024,Tells whether or not this file system allows only read-only access to its file stores.,;java.nio.Buffer.isReadOnly();java.nio.file.FileStore.isReadOnly();java.nio.file.FileSystem.isReadOnly();java.security.PermissionCollection.isReadOnly();javax.imageio.metadata.IIOMetadata.isReadOnly();javax.security.auth.Subject.isReadOnly();javax.sql.rowset.BaseRowSet.isReadOnly();javax.sql.rowset.RowSetMetaDataImpl.isReadOnly(int),;0.15;0.12;0.16;0.13;0.13;0.12;0.12;0.12
isValidateRoot,8,0.235046059,"Indicates if this container is a validate root. Window objects are the validate roots, and, therefore, they override this method to return true.",;java.applet.Applet.isValidateRoot();java.awt.Container.isValidateRoot();java.awt.Window.isValidateRoot();javax.swing.JComponent.isValidateRoot();javax.swing.JRootPane.isValidateRoot();javax.swing.JScrollPane.isValidateRoot();javax.swing.JSplitPane.isValidateRoot();javax.swing.JTextField.isValidateRoot(),;0.24;0.14;0.24;0.16;0.12;0.19;0.15;0.12
join,8,0.234557974,"Waits at most millis milliseconds plus nanos nanoseconds for this thread to die. This implementation uses a loop of this.wait calls conditioned on this.isAlive. As a thread terminates the this.notifyAll method is invoked. It is recommended that applications not use wait, notify, or notifyAll on Thread instances.",";java.lang.String.join(CharSequence,CharSequence...);java.lang.String.join(CharSequence,Iterable&lt;?);java.lang.Thread.join(long);java.lang.Thread.join(long,int);java.lang.Thread.join();java.net.DatagramSocketImpl.join(InetAddress);java.util.concurrent.CompletableFuture.join();java.util.concurrent.ForkJoinTask.join()",;0.16;0.17;0.23;0.23;0.14;0.12;0.12;0.12
log,8,0.376032511,"Log a message, with an array of object arguments. If the logger is currently enabled for the given message level then a corresponding LogRecord is created and forwarded to all the registered output Handler objects.",";java.rmi.server.LogStream.log(String);java.util.logging.Logger.log(LogRecord);java.util.logging.Logger.log(Level,String);java.util.logging.Logger.log(Level,Supplier&lt;String&gt;);java.util.logging.Logger.log(Level,String,Object);java.util.logging.Logger.log(Level,String,Object[]);java.util.logging.Logger.log(Level,String,Throwable);java.util.logging.Logger.log(Level,Throwable,Supplier&lt;String&gt;)",;0.00;0.12;0.35;0.33;0.37;0.38;0.33;0.32
matches,8,0.15841345,"Determines whether the specified info object matches this one. To match, the superclass match requirements must be met. In addition, this object's minimum buffer size must be at least as large as that of the object specified, its maximum buffer size must be at most as large as that of the object specified, and all of its formats must match formats supported by the object specified.",";java.lang.String.matches(String);java.util.regex.Matcher.matches();java.util.regex.Pattern.matches(String,CharSequence);javax.net.ssl.SNIMatcher.matches(SNIServerName);javax.sound.sampled.AudioFormat.matches(AudioFormat);javax.sound.sampled.DataLine.Info.matches(Line.Info);javax.sound.sampled.Line.Info.matches(Line.Info);javax.sound.sampled.Port.Info.matches(Line.Info)",;0.14;0.14;0.15;0.13;0.12;0.16;0.15;0.14
minimumSize,8,0.953550699,"Deprecated.As of JDK version 1.1, replaced by getMinimumSize().",";java.awt.Component.minimumSize();java.awt.Container.minimumSize();java.awt.List.minimumSize(int);java.awt.List.minimumSize();java.awt.TextArea.minimumSize(int,int);java.awt.TextArea.minimumSize();java.awt.TextField.minimumSize(int);java.awt.TextField.minimumSize()",;0.95;0.95;0.92;0.95;0.86;0.95;0.92;0.95
mouseDragged,8,0.219224496,Invoked when a mouse button is pressed on a component and then dragged. Mouse drag events will continue to be delivered to the component where the first originated until the mouse button is released (regardless of whether the mouse position is within the bounds of the component).,;java.awt.AWTEventMulticaster.mouseDragged(MouseEvent);java.awt.dnd.MouseDragGestureRecognizer.mouseDragged(MouseEvent);java.awt.event.MouseAdapter.mouseDragged(MouseEvent);java.awt.event.MouseMotionAdapter.mouseDragged(MouseEvent);javax.swing.ToolTipManager.mouseDragged(MouseEvent);javax.swing.plaf.basic.BasicButtonListener.mouseDragged(MouseEvent);javax.swing.text.DefaultCaret.mouseDragged(MouseEvent);javax.swing.text.html.HTMLEditorKit.LinkController.mouseDragged(MouseEvent),;0.12;0.13;0.22;0.22;0.12;0.12;0.12;0.12
mouseMoved,8,0.281666418,Invoked when the mouse button has been moved on a component (with no buttons no down).,;java.awt.AWTEventMulticaster.mouseMoved(MouseEvent);java.awt.dnd.MouseDragGestureRecognizer.mouseMoved(MouseEvent);java.awt.event.MouseAdapter.mouseMoved(MouseEvent);java.awt.event.MouseMotionAdapter.mouseMoved(MouseEvent);javax.swing.ToolTipManager.mouseMoved(MouseEvent);javax.swing.plaf.basic.BasicButtonListener.mouseMoved(MouseEvent);javax.swing.text.DefaultCaret.mouseMoved(MouseEvent);javax.swing.text.html.HTMLEditorKit.LinkController.mouseMoved(MouseEvent),;0.12;0.28;0.19;0.28;0.17;0.12;0.16;0.12
order,8,0.694739346,Retrieves this buffer's byte order. The byte order of a short buffer created by allocation or by wrapping an existing short array is the native order of the underlying hardware. The byte order of a short buffer created as a view of a byte buffer is that of the byte buffer at the moment that the view is created.,;java.nio.ByteBuffer.order();java.nio.ByteBuffer.order(ByteOrder);java.nio.CharBuffer.order();java.nio.DoubleBuffer.order();java.nio.FloatBuffer.order();java.nio.IntBuffer.order();java.nio.LongBuffer.order();java.nio.ShortBuffer.order(),;0.27;0.13;0.69;0.69;0.69;0.68;0.69;0.69
parallelPrefix,8,0.429197401,"Cumulates, in parallel, each element of the given array in place, using the supplied function. For example if the array initially holds [2, 1, 0, 3] and the operation performs addition, then upon return the array holds [2, 3, 3, 6]. Parallel prefix computation is usually more efficient than sequential loops for large arrays.",";java.util.Arrays.parallelPrefix(T[],BinaryOperator&lt;T&gt;);java.util.Arrays.parallelPrefix(T[],int,int,BinaryOperator&lt;T&gt;);java.util.Arrays.parallelPrefix(long[],LongBinaryOperator);java.util.Arrays.parallelPrefix(long[],int,int,LongBinaryOperator);java.util.Arrays.parallelPrefix(double[],DoubleBinaryOperator);java.util.Arrays.parallelPrefix(double[],int,int,DoubleBinaryOperator);java.util.Arrays.parallelPrefix(int[],IntBinaryOperator);java.util.Arrays.parallelPrefix(int[],int,int,IntBinaryOperator)",;0.43;0.36;0.43;0.36;0.31;0.36;0.43;0.36
postDeregister,8,0.375,Description copied from interface:MBeanRegistration,;javax.management.StandardMBean.postDeregister();javax.management.loading.MLet.postDeregister();javax.management.modelmbean.RequiredModelMBean.postDeregister();javax.management.monitor.Monitor.postDeregister();javax.management.relation.RelationService.postDeregister();javax.management.relation.RelationSupport.postDeregister();javax.management.remote.JMXConnectorServer.postDeregister();javax.management.timer.Timer.postDeregister(),;0.21;0.26;0.25;0.32;0.38;0.38;0.38;0.32
postRegister,8,0.378437474,Allows the timer MBean to perform any operations needed after having been registered in the MBean server or after the registration has failed. Not used in this context.,;javax.management.StandardMBean.postRegister(Boolean);javax.management.loading.MLet.postRegister(Boolean);javax.management.modelmbean.RequiredModelMBean.postRegister(Boolean);javax.management.monitor.Monitor.postRegister(Boolean);javax.management.relation.RelationService.postRegister(Boolean);javax.management.relation.RelationSupport.postRegister(Boolean);javax.management.remote.JMXConnectorServer.postRegister(Boolean);javax.management.timer.Timer.postRegister(Boolean),;0.25;0.33;0.30;0.38;0.38;0.38;0.38;0.38
preDeregister,8,0.364614322,Allows the monitor MBean to perform any operations it needs before being unregistered by the MBean server. Stops the monitor.,;javax.management.StandardMBean.preDeregister();javax.management.loading.MLet.preDeregister();javax.management.modelmbean.RequiredModelMBean.preDeregister();javax.management.monitor.Monitor.preDeregister();javax.management.relation.RelationService.preDeregister();javax.management.relation.RelationSupport.preDeregister();javax.management.remote.JMXConnectorServer.preDeregister();javax.management.timer.Timer.preDeregister(),;0.29;0.33;0.29;0.36;0.25;0.25;0.12;0.36
preferredSize,8,0.953550699,"Deprecated.As of JDK version 1.1, replaced by getPreferredSize().",";java.awt.Component.preferredSize();java.awt.Container.preferredSize();java.awt.List.preferredSize(int);java.awt.List.preferredSize();java.awt.TextArea.preferredSize(int,int);java.awt.TextArea.preferredSize();java.awt.TextField.preferredSize(int);java.awt.TextField.preferredSize()",;0.95;0.95;0.92;0.95;0.86;0.95;0.92;0.95
preRegister,8,0.252114819,Allows the monitor MBean to perform any operations it needs before being registered in the MBean server. Initializes the reference to the MBean server.,";javax.management.StandardMBean.preRegister(MBeanServer,ObjectName);javax.management.loading.MLet.preRegister(MBeanServer,ObjectName);javax.management.modelmbean.RequiredModelMBean.preRegister(MBeanServer,ObjectName);javax.management.monitor.Monitor.preRegister(MBeanServer,ObjectName);javax.management.relation.RelationService.preRegister(MBeanServer,ObjectName);javax.management.relation.RelationSupport.preRegister(MBeanServer,ObjectName);javax.management.remote.JMXConnectorServer.preRegister(MBeanServer,ObjectName);javax.management.timer.Timer.preRegister(MBeanServer,ObjectName)",;0.22;0.24;0.24;0.25;0.25;0.25;0.13;0.24
provider,8,0.946034328,Returns the provider that created this channel.,;java.nio.channels.AsynchronousChannelGroup.provider();java.nio.channels.AsynchronousServerSocketChannel.provider();java.nio.channels.AsynchronousSocketChannel.provider();java.nio.channels.SelectableChannel.provider();java.nio.channels.Selector.provider();java.nio.channels.spi.AbstractSelectableChannel.provider();java.nio.channels.spi.AbstractSelector.provider();java.nio.file.FileSystem.provider(),;0.84;0.95;0.95;0.95;0.95;0.95;0.95;0.72
readLine,8,0.189280748,"Provides a formatted prompt, then reads a single line of text from the console.",";java.io.BufferedReader.readLine();java.io.Console.readLine(String,Object...);java.io.Console.readLine();java.io.DataInputStream.readLine();java.io.LineNumberReader.readLine();java.io.ObjectInputStream.readLine();java.io.RandomAccessFile.readLine();javax.imageio.stream.ImageInputStreamImpl.readLine()",;0.14;0.19;0.19;0.15;0.13;0.13;0.14;0.12
ready,8,0.59367163,Tells whether this stream is ready to be read.,;java.io.BufferedReader.ready();java.io.CharArrayReader.ready();java.io.FilterReader.ready();java.io.InputStreamReader.ready();java.io.PipedReader.ready();java.io.PushbackReader.ready();java.io.Reader.ready();java.io.StringReader.ready(),;0.41;0.45;0.59;0.37;0.42;0.59;0.59;0.59
retainAll,8,0.396881496,"Retains only the elements in this list that are contained in the specified collection. In other words, removes from this list all of its elements that are not contained in the specified collection.",;java.beans.beancontext.BeanContextSupport.retainAll(Collection);java.util.AbstractCollection.retainAll(Collection&lt;?&gt;);java.util.ArrayList.retainAll(Collection&lt;?&gt;);java.util.Vector.retainAll(Collection&lt;?&gt;);java.util.concurrent.ConcurrentHashMap.KeySetView.retainAll(Collection&lt;?&gt;);java.util.concurrent.CopyOnWriteArrayList.retainAll(Collection&lt;?&gt;);java.util.concurrent.CopyOnWriteArraySet.retainAll(Collection&lt;?&gt;);java.util.concurrent.SynchronousQueue.retainAll(Collection&lt;?&gt;),;0.12;0.24;0.40;0.35;0.12;0.40;0.31;0.12
select,8,0.274656544,Sets the selected item in this Choice menu to be the item at the specified position. Note that this method should be primarily used to initially select an item in this component. Programmatically calling this method will not trigger an ItemEvent. The only way to trigger an ItemEvent is by user interaction.,";java.awt.Choice.select(int);java.awt.Choice.select(String);java.awt.List.select(int);java.awt.TextComponent.select(int,int);java.nio.channels.Selector.select(long);java.nio.channels.Selector.select();javax.swing.text.JTextComponent.select(int,int);javax.xml.crypto.KeySelector.select(KeyInfo,KeySelector.Purpose,AlgorithmMethod,XMLCryptoContext)",;0.27;0.26;0.26;0.22;0.20;0.19;0.22;0.12
setActionCommand,8,0.252871951,Sets the command name for the action event fired by this button. By default this action command is set to match the label of the button.,;java.awt.Button.setActionCommand(String);java.awt.MenuItem.setActionCommand(String);java.awt.TrayIcon.setActionCommand(String);javax.swing.AbstractButton.setActionCommand(String);javax.swing.DefaultButtonModel.setActionCommand(String);javax.swing.JComboBox.setActionCommand(String);javax.swing.JTextField.setActionCommand(String);javax.swing.Timer.setActionCommand(String),;0.25;0.21;0.24;0.15;0.16;0.16;0.12;0.12
setAttribute,8,0.417185076,Description copied from interface:RMIConnection,";java.nio.file.Files.setAttribute(Path,String,Object,LinkOption...);java.nio.file.spi.FileSystemProvider.setAttribute(Path,String,Object,LinkOption...);javax.imageio.metadata.IIOMetadataNode.setAttribute(String,String);javax.management.StandardMBean.setAttribute(Attribute);javax.management.remote.rmi.RMIConnectionImpl.setAttribute(ObjectName,MarshalledObject,Subject);javax.management.remote.rmi.RMIConnectionImpl_Stub.setAttribute(ObjectName,MarshalledObject,Subject);javax.script.SimpleScriptContext.setAttribute(String,Object,int);org.xml.sax.helpers.AttributesImpl.setAttribute(int,String,String,String,String,String)",;0.13;0.14;0.38;0.38;0.42;0.42;0.13;0.12
setBackground,8,0.197600129,Sets the background color of this component. The background color affects each component differently and the parts of the component that are affected by the background color may differ between operating systems.,";java.awt.Component.setBackground(Color);java.awt.Graphics2D.setBackground(Color);java.awt.TextComponent.setBackground(Color);javax.swing.JComponent.setBackground(Color);javax.swing.table.DefaultTableCellRenderer.setBackground(Color);javax.swing.text.LabelView.setBackground(Color);javax.swing.text.StyleConstants.setBackground(MutableAttributeSet,Color);javax.swing.tree.DefaultTreeCellRenderer.setBackground(Color)",;0.20;0.19;0.17;0.19;0.12;0.17;0.17;0.16
setDate,8,0.201770852,"Sets the designated parameter to the given java.sql.Date object. When the DBMS does not store time zone information, the driver will use the given Calendar object to construct the SQL DATE value to send to the database. With a Calendar object, the driver can calculate the date taking into account a custom time zone. If no Calendar object is specified, the driver uses the time zone of the Virtual Machine that is running the application. The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this RowSet object's command when the method execute is called. Methods such as execute and populate must be provided in any class that extends this class and implements one or more of the standard JSR-114 RowSet interfaces. NOTE: JdbcRowSet does not require the populate method as it is undefined in this class. Calls made to the method getParams after this version of setDate has been called will return an array containing the parameter values that have been set. In that array, the element that represents the values set with this method will itself be an array. The first element of that array is the given java.sql.Date object. The second element is the value set for cal. The parameter number is indicated by an element's position in the array returned by the method getParams, with the first element being the value for the first placeholder parameter, the second element being the value for the second placeholder parameter, and so on. In other words, if the date being set is the value for the second placeholder parameter, the array containing it will be the second element in the array returned by getParams. Note that because the numbering of elements in an array starts at zero, the array element that corresponds to placeholder parameter number parameterIndex is parameterIndex -1.",";java.security.cert.PKIXParameters.setDate(Date);java.sql.Time.setDate(int);java.util.Calendar.Builder.setDate(int,int,int);java.util.Date.setDate(int);javax.sql.rowset.BaseRowSet.setDate(int,Date);javax.sql.rowset.BaseRowSet.setDate(int,Date,Calendar);javax.sql.rowset.BaseRowSet.setDate(String,Date);javax.sql.rowset.BaseRowSet.setDate(String,Date,Calendar)",;0.12;0.00;0.12;0.12;0.20;0.20;0.16;0.17
setDefault,8,0.272329895,Sets (or unsets) the system-wide proxy selector. Note: non-standard protocol handlers may ignore this setting.,";java.net.Authenticator.setDefault(Authenticator);java.net.CookieHandler.setDefault(CookieHandler);java.net.ProxySelector.setDefault(ProxySelector);java.net.ResponseCache.setDefault(ResponseCache);java.util.Locale.setDefault(Locale);java.util.Locale.setDefault(Locale.Category,Locale);java.util.TimeZone.setDefault(TimeZone);javax.net.ssl.SSLContext.setDefault(SSLContext)",;0.14;0.27;0.27;0.26;0.24;0.24;0.12;0.12
setOrientation,8,0.185600665,Set the slider's orientation to either SwingConstants.VERTICAL or SwingConstants.HORIZONTAL.,;java.awt.Scrollbar.setOrientation(int);java.awt.print.PageFormat.setOrientation(int);javax.swing.JProgressBar.setOrientation(int);javax.swing.JScrollBar.setOrientation(int);javax.swing.JSeparator.setOrientation(int);javax.swing.JSlider.setOrientation(int);javax.swing.JToolBar.setOrientation(int);javax.swing.plaf.basic.BasicSplitPaneUI.setOrientation(int),;0.12;0.12;0.15;0.16;0.14;0.19;0.14;0.12
setSelected,8,0.196844242,"Sets the currently selected component, producing a a change to the selection model.",";javax.swing.AbstractButton.setSelected(boolean);javax.swing.ButtonGroup.setSelected(ButtonModel,boolean);javax.swing.DefaultButtonModel.setSelected(boolean);javax.swing.JInternalFrame.setSelected(boolean);javax.swing.JMenu.setSelected(boolean);javax.swing.JMenuBar.setSelected(Component);javax.swing.JPopupMenu.setSelected(Component);javax.swing.JToggleButton.ToggleButtonModel.setSelected(boolean)",;0.14;0.12;0.13;0.13;0.12;0.20;0.20;0.13
take,8,0.667185076,Description copied from interface:BlockingQueue,;java.util.concurrent.ArrayBlockingQueue.take();java.util.concurrent.DelayQueue.take();java.util.concurrent.ExecutorCompletionService.take();java.util.concurrent.LinkedBlockingDeque.take();java.util.concurrent.LinkedBlockingQueue.take();java.util.concurrent.LinkedTransferQueue.take();java.util.concurrent.PriorityBlockingQueue.take();java.util.concurrent.SynchronousQueue.take(),;0.67;0.18;0.54;0.54;0.67;0.67;0.67;0.18
to_any,8,1,Creates an any value from a DynAny object. A copy of the TypeCode associated with the DynAny object is assigned to the resulting any. The value associated with the DynAny object is copied into the any.,;org.omg.DynamicAny._DynAnyStub.to_any();org.omg.DynamicAny._DynArrayStub.to_any();org.omg.DynamicAny._DynEnumStub.to_any();org.omg.DynamicAny._DynFixedStub.to_any();org.omg.DynamicAny._DynSequenceStub.to_any();org.omg.DynamicAny._DynStructStub.to_any();org.omg.DynamicAny._DynUnionStub.to_any();org.omg.DynamicAny._DynValueStub.to_any(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
accumulateAndGet,9,0.899910977,"Atomically updates the current value with the results of applying the given function to the current and given values, returning the updated value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. The function is applied with the current value as its first argument, and the given update as the second argument.",";java.util.concurrent.atomic.AtomicInteger.accumulateAndGet(int,IntBinaryOperator);java.util.concurrent.atomic.AtomicIntegerArray.accumulateAndGet(int,int,IntBinaryOperator);java.util.concurrent.atomic.AtomicIntegerFieldUpdater.accumulateAndGet(T,int,IntBinaryOperator);java.util.concurrent.atomic.AtomicLong.accumulateAndGet(long,LongBinaryOperator);java.util.concurrent.atomic.AtomicLongArray.accumulateAndGet(int,long,LongBinaryOperator);java.util.concurrent.atomic.AtomicLongFieldUpdater.accumulateAndGet(T,long,LongBinaryOperator);java.util.concurrent.atomic.AtomicReference.accumulateAndGet(V,BinaryOperator&lt;V&gt;);java.util.concurrent.atomic.AtomicReferenceArray.accumulateAndGet(int,E,BinaryOperator&lt;E&gt;);java.util.concurrent.atomic.AtomicReferenceFieldUpdater.accumulateAndGet(T,V,BinaryOperator&lt;V&gt;)",;0.90;0.89;0.89;0.90;0.89;0.89;0.90;0.89;0.89
atTime,9,0.444444444,Description copied from interface:ChronoLocalDate,";java.time.LocalDate.atTime(LocalTime);java.time.LocalDate.atTime(int,int);java.time.LocalDate.atTime(int,int,int);java.time.LocalDate.atTime(int,int,int,int);java.time.LocalDate.atTime(OffsetTime);java.time.chrono.HijrahDate.atTime(LocalTime);java.time.chrono.JapaneseDate.atTime(LocalTime);java.time.chrono.MinguoDate.atTime(LocalTime);java.time.chrono.ThaiBuddhistDate.atTime(LocalTime)",;0.35;0.39;0.39;0.39;0.29;0.44;0.44;0.44;0.44
cancel,9,0.167134521,"Cancels this timer task. If the task has been scheduled for one-time execution and has not yet run, or has not yet been scheduled, it will never run. If the task has been scheduled for repeated execution, it will never run again. (If the task is running when this call occurs, the task will run to completion, but will never run again.) Note that calling this method from within the run method of a repeating timer task absolutely guarantees that the timer task will not run again. This method may be called repeatedly; the second and subsequent calls have no effect.",;java.awt.print.PrinterJob.cancel();java.nio.channels.SelectionKey.cancel();java.nio.channels.spi.AbstractSelectionKey.cancel();java.util.Timer.cancel();java.util.TimerTask.cancel();java.util.concurrent.CompletableFuture.cancel(boolean);java.util.concurrent.ForkJoinTask.cancel(boolean);java.util.concurrent.FutureTask.cancel(boolean);javax.swing.SwingWorker.cancel(boolean),;0.11;0.14;0.11;0.15;0.17;0.11;0.16;0.11;0.16
createContext,9,0.472484423,Creates and returns a PaintContext used to generate a linear color gradient pattern. See the specification of the method in the Paint interface for information on null parameter handling.,";java.awt.AlphaComposite.createContext(ColorModel,ColorModel,RenderingHints);java.awt.Color.createContext(ColorModel,Rectangle,Rectangle2D,AffineTransform,RenderingHints);java.awt.GradientPaint.createContext(ColorModel,Rectangle,Rectangle2D,AffineTransform,RenderingHints);java.awt.LinearGradientPaint.createContext(ColorModel,Rectangle,Rectangle2D,AffineTransform,RenderingHints);java.awt.RadialGradientPaint.createContext(ColorModel,Rectangle,Rectangle2D,AffineTransform,RenderingHints);java.awt.TexturePaint.createContext(ColorModel,Rectangle,Rectangle2D,AffineTransform,RenderingHints);org.ietf.jgss.GSSManager.createContext(GSSName,Oid,GSSCredential,int);org.ietf.jgss.GSSManager.createContext(GSSCredential);org.ietf.jgss.GSSManager.createContext(byte[])",;0.11;0.45;0.47;0.47;0.35;0.45;0.20;0.20;0.19
createSocket,9,0.397102331,"Creates a socket and connects it to the specified remote host on the specified remote port. The socket will also be bound to the local address and port supplied. This socket is configured using the socket options established for this factory. If there is a security manager, its checkConnect method is called with the host address and port as its arguments. This could result in a SecurityException.",";java.rmi.server.RMISocketFactory.createSocket(String,int);javax.net.SocketFactory.createSocket();javax.net.SocketFactory.createSocket(String,int);javax.net.SocketFactory.createSocket(String,int,InetAddress,int);javax.net.SocketFactory.createSocket(InetAddress,int);javax.net.SocketFactory.createSocket(InetAddress,int,InetAddress,int);javax.net.ssl.SSLSocketFactory.createSocket(Socket,String,int,boolean);javax.net.ssl.SSLSocketFactory.createSocket(Socket,InputStream,boolean);javax.rmi.ssl.SslRMIClientSocketFactory.createSocket(String,int)",;0.11;0.11;0.39;0.40;0.38;0.38;0.22;0.16;0.11
dispose,9,0.215674991,"Allows any resources held by this object to be released. The result of calling any other method (other than finalize) subsequent to a call to this method is undefined. It is important for applications to call this method when they know they will no longer be using this ImageWriter. Otherwise, the writer may continue to hold on to resources indefinitely. The default implementation of this method in the superclass does nothing. Subclass implementations should ensure that all resources, especially native resources, are released.",;java.awt.Graphics.dispose();java.awt.Window.dispose();java.awt.im.InputContext.dispose();java.awt.image.BufferStrategy.dispose();javax.imageio.ImageReader.dispose();javax.imageio.ImageWriter.dispose();javax.print.StreamPrintService.dispose();javax.swing.DebugGraphics.dispose();javax.swing.JInternalFrame.dispose(),;0.11;0.11;0.11;0.11;0.22;0.22;0.11;0.00;0.11
drawString,9,0.423425362,"Renders the text of the specified iterator applying its attributes in accordance with the specification of the TextAttribute class. The baseline of the first character is at position (x,y) in User Space. For characters in script systems such as Hebrew and Arabic, the glyphs can be rendered from right to left, in which case the coordinate supplied is the location of the leftmost character on the baseline.",";java.awt.Graphics.drawString(String,int,int);java.awt.Graphics.drawString(AttributedCharacterIterator,int,int);java.awt.Graphics2D.drawString(String,int,int);java.awt.Graphics2D.drawString(String,float,float);java.awt.Graphics2D.drawString(AttributedCharacterIterator,int,int);java.awt.Graphics2D.drawString(AttributedCharacterIterator,float,float);javax.swing.DebugGraphics.drawString(String,int,int);javax.swing.DebugGraphics.drawString(AttributedCharacterIterator,int,int);javax.swing.plaf.basic.BasicGraphicsUtils.drawString(Graphics,String,int,int,int)",;0.21;0.27;0.40;0.38;0.42;0.42;0.00;0.00;0.11
exec,9,0.361534798,"Executes the specified string command in a separate process with the specified environment. This is a convenience method. An invocation of the form exec(command, envp) behaves in exactly the same way as the invocation exec(command, envp, null).",";java.lang.Runtime.exec(String);java.lang.Runtime.exec(String,String[]);java.lang.Runtime.exec(String,String[],File);java.lang.Runtime.exec(String[]);java.lang.Runtime.exec(String[],String[]);java.util.concurrent.CountedCompleter.exec();java.util.concurrent.ForkJoinTask.exec();java.util.concurrent.RecursiveAction.exec();java.util.concurrent.RecursiveTask.exec()",;0.35;0.36;0.23;0.35;0.36;0.26;0.11;0.26;0.26
first,9,0.222222222,Description copied from interface:SortedSet,;java.awt.CardLayout.first(Container);java.text.BreakIterator.first();java.text.StringCharacterIterator.first();java.util.TreeSet.first();java.util.concurrent.ConcurrentSkipListSet.first();javax.swing.text.ElementIterator.first();javax.swing.text.Segment.first();javax.swing.text.html.parser.ContentModel.first(Object);javax.swing.text.html.parser.ContentModel.first(),;0.11;0.11;0.11;0.22;0.22;0.11;0.11;0.11;0.11
getAlpha,9,0.336792921,"Returns the alpha component for the specified pixel, scaled from 0 to 255. The pixel value is specified as an int.",;java.awt.AlphaComposite.getAlpha();java.awt.Color.getAlpha();java.awt.image.ColorModel.getAlpha(int);java.awt.image.ColorModel.getAlpha(Object);java.awt.image.ComponentColorModel.getAlpha(int);java.awt.image.ComponentColorModel.getAlpha(Object);java.awt.image.DirectColorModel.getAlpha(int);java.awt.image.DirectColorModel.getAlpha(Object);java.awt.image.IndexColorModel.getAlpha(int),;0.11;0.13;0.33;0.29;0.34;0.33;0.34;0.33;0.32
getAndAccumulate,9,0.899910977,"Atomically updates the current value with the results of applying the given function to the current and given values, returning the previous value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads. The function is applied with the current value as its first argument, and the given update as the second argument.",";java.util.concurrent.atomic.AtomicInteger.getAndAccumulate(int,IntBinaryOperator);java.util.concurrent.atomic.AtomicIntegerArray.getAndAccumulate(int,int,IntBinaryOperator);java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndAccumulate(T,int,IntBinaryOperator);java.util.concurrent.atomic.AtomicLong.getAndAccumulate(long,LongBinaryOperator);java.util.concurrent.atomic.AtomicLongArray.getAndAccumulate(int,long,LongBinaryOperator);java.util.concurrent.atomic.AtomicLongFieldUpdater.getAndAccumulate(T,long,LongBinaryOperator);java.util.concurrent.atomic.AtomicReference.getAndAccumulate(V,BinaryOperator&lt;V&gt;);java.util.concurrent.atomic.AtomicReferenceArray.getAndAccumulate(int,E,BinaryOperator&lt;E&gt;);java.util.concurrent.atomic.AtomicReferenceFieldUpdater.getAndAccumulate(T,V,BinaryOperator&lt;V&gt;)",;0.90;0.89;0.89;0.90;0.89;0.89;0.90;0.89;0.89
getAndUpdate,9,0.8732759,"Atomically updates the element at index i with the results of applying the given function, returning the previous value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads.",";java.util.concurrent.atomic.AtomicInteger.getAndUpdate(IntUnaryOperator);java.util.concurrent.atomic.AtomicIntegerArray.getAndUpdate(int,IntUnaryOperator);java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndUpdate(T,IntUnaryOperator);java.util.concurrent.atomic.AtomicLong.getAndUpdate(LongUnaryOperator);java.util.concurrent.atomic.AtomicLongArray.getAndUpdate(int,LongUnaryOperator);java.util.concurrent.atomic.AtomicLongFieldUpdater.getAndUpdate(T,LongUnaryOperator);java.util.concurrent.atomic.AtomicReference.getAndUpdate(UnaryOperator&lt;V&gt;);java.util.concurrent.atomic.AtomicReferenceArray.getAndUpdate(int,UnaryOperator&lt;E&gt;);java.util.concurrent.atomic.AtomicReferenceFieldUpdater.getAndUpdate(T,UnaryOperator&lt;V&gt;)",;0.87;0.87;0.84;0.87;0.87;0.84;0.87;0.87;0.84
getDescriptor,9,0.339934628,Returns a copy of the associated Descriptor for the ModelMBeanNotificationInfo.,";javax.management.MBeanFeatureInfo.getDescriptor();javax.management.MBeanInfo.getDescriptor();javax.management.modelmbean.ModelMBeanAttributeInfo.getDescriptor();javax.management.modelmbean.ModelMBeanConstructorInfo.getDescriptor();javax.management.modelmbean.ModelMBeanInfoSupport.getDescriptor(String);javax.management.modelmbean.ModelMBeanInfoSupport.getDescriptor(String,String);javax.management.modelmbean.ModelMBeanInfoSupport.getDescriptor();javax.management.modelmbean.ModelMBeanNotificationInfo.getDescriptor();javax.management.modelmbean.ModelMBeanOperationInfo.getDescriptor()",;0.19;0.19;0.31;0.31;0.11;0.11;0.11;0.34;0.32
getInputStream,9,0.17551445,"Returns an input stream for reading the contents of the specified zip file entry. Closing this ZIP file will, in turn, close all input streams that have been returned by invocations of this method.",;java.lang.Process.getInputStream();java.net.SocketImpl.getInputStream();java.net.URLConnection.getInputStream();java.util.jar.JarFile.getInputStream(ZipEntry);java.util.zip.ZipFile.getInputStream(ZipEntry);javax.activation.DataHandler.getInputStream();javax.activation.FileDataSource.getInputStream();javax.activation.URLDataSource.getInputStream();javax.xml.transform.stream.StreamSource.getInputStream(),;0.12;0.14;0.14;0.17;0.18;0.11;0.11;0.11;0.11
getMessage,9,0.115537298,Obtains the MIDI message data. The first byte of the returned byte array is the status byte of the message. Any subsequent bytes up to the length of the message are data bytes. The byte array may have a length which is greater than that of the actual message; the total length of the message in bytes is reported by the getLength() method.,;java.lang.Throwable.getMessage();java.util.logging.LogRecord.getMessage();javax.management.Notification.getMessage();javax.security.auth.callback.TextOutputCallback.getMessage();javax.sound.midi.MidiEvent.getMessage();javax.sound.midi.MidiMessage.getMessage();javax.swing.JOptionPane.getMessage();javax.swing.plaf.basic.BasicOptionPaneUI.getMessage();javax.xml.bind.helpers.ValidationEventImpl.getMessage(),;0.11;0.11;0.11;0.11;0.11;0.12;0.11;0.11;0.11
getModifiers,9,0.355801626,Returns the Java language modifiers for the executable represented by this object.,;java.awt.AWTKeyStroke.getModifiers();java.awt.event.ActionEvent.getModifiers();java.awt.event.InputEvent.getModifiers();java.lang.Class.getModifiers();java.lang.reflect.Constructor.getModifiers();java.lang.reflect.Executable.getModifiers();java.lang.reflect.Field.getModifiers();java.lang.reflect.Method.getModifiers();java.lang.reflect.Parameter.getModifiers(),;0.14;0.14;0.11;0.13;0.36;0.36;0.20;0.36;0.11
getNextVisualPositionFrom,9,0.591875485,"Provides a way to determine the next visually represented model location that one might place a caret. Some views may not be visible, they might not be in the same order found in the model, or they just might not allow access to some of the locations in the model. This method enables specifying a position to convert within the range of &gt;=0. If the value is -1, a position will be calculated automatically. If the value &lt; -1, the BadLocationException will be thrown.",";javax.swing.plaf.TextUI.getNextVisualPositionFrom(JTextComponent,int,Position.Bias,int,Position.Bias[]);javax.swing.plaf.basic.BasicTextUI.getNextVisualPositionFrom(JTextComponent,int,Position.Bias,int,Position.Bias[]);javax.swing.plaf.multi.MultiTextUI.getNextVisualPositionFrom(JTextComponent,int,Position.Bias,int,Position.Bias[]);javax.swing.text.AsyncBoxView.getNextVisualPositionFrom(int,Position.Bias,Shape,int,Position.Bias[]);javax.swing.text.CompositeView.getNextVisualPositionFrom(int,Position.Bias,Shape,int,Position.Bias[]);javax.swing.text.GlyphView.getNextVisualPositionFrom(int,Position.Bias,Shape,int,Position.Bias[]);javax.swing.text.GlyphView.GlyphPainter.getNextVisualPositionFrom(GlyphView,int,Position.Bias,Shape,int,Position.Bias[]);javax.swing.text.NavigationFilter.getNextVisualPositionFrom(JTextComponent,int,Position.Bias,int,Position.Bias[]);javax.swing.text.View.getNextVisualPositionFrom(int,Position.Bias,Shape,int,Position.Bias[])",;0.52;0.52;0.11;0.59;0.47;0.59;0.52;0.11;0.57
getNotificationInfo,9,0.444444444,Description copied from interface:NotificationBroadcaster,;javax.management.MBeanServerDelegate.getNotificationInfo();javax.management.NotificationBroadcasterSupport.getNotificationInfo();javax.management.StandardEmitterMBean.getNotificationInfo();javax.management.monitor.CounterMonitor.getNotificationInfo();javax.management.monitor.GaugeMonitor.getNotificationInfo();javax.management.monitor.StringMonitor.getNotificationInfo();javax.management.relation.RelationService.getNotificationInfo();javax.management.remote.JMXConnectorServer.getNotificationInfo();javax.management.timer.Timer.getNotificationInfo(),;0.44;0.44;0.44;0.41;0.41;0.41;0.38;0.11;0.44
getP1,9,0.666666667,Returns the start point.,;java.awt.geom.CubicCurve2D.getP1();java.awt.geom.CubicCurve2D.Double.getP1();java.awt.geom.CubicCurve2D.Float.getP1();java.awt.geom.Line2D.getP1();java.awt.geom.Line2D.Double.getP1();java.awt.geom.Line2D.Float.getP1();java.awt.geom.QuadCurve2D.getP1();java.awt.geom.QuadCurve2D.Double.getP1();java.awt.geom.QuadCurve2D.Float.getP1(),;0.67;0.67;0.67;0.33;0.33;0.33;0.67;0.67;0.67
getP2,9,0.666666667,Returns the end point.,;java.awt.geom.CubicCurve2D.getP2();java.awt.geom.CubicCurve2D.Double.getP2();java.awt.geom.CubicCurve2D.Float.getP2();java.awt.geom.Line2D.getP2();java.awt.geom.Line2D.Double.getP2();java.awt.geom.Line2D.Float.getP2();java.awt.geom.QuadCurve2D.getP2();java.awt.geom.QuadCurve2D.Double.getP2();java.awt.geom.QuadCurve2D.Float.getP2(),;0.67;0.67;0.67;0.33;0.33;0.33;0.67;0.67;0.67
getSamples,9,0.804405469,"Returns the samples for a specified band for the specified rectangle of pixels in an int array, one sample per array element. ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds.",";java.awt.image.BandedSampleModel.getSamples(int,int,int,int,int,int[],DataBuffer);java.awt.image.ComponentSampleModel.getSamples(int,int,int,int,int,int[],DataBuffer);java.awt.image.Raster.getSamples(int,int,int,int,int,int[]);java.awt.image.Raster.getSamples(int,int,int,int,int,float[]);java.awt.image.Raster.getSamples(int,int,int,int,int,double[]);java.awt.image.SampleModel.getSamples(int,int,int,int,int,int[],DataBuffer);java.awt.image.SampleModel.getSamples(int,int,int,int,int,float[],DataBuffer);java.awt.image.SampleModel.getSamples(int,int,int,int,int,double[],DataBuffer);java.awt.image.SinglePixelPackedSampleModel.getSamples(int,int,int,int,int,int[],DataBuffer)",;0.74;0.68;0.76;0.73;0.70;0.80;0.77;0.73;0.80
getSchema,9,0.370831179,Description copied from interface:DirContext,;javax.naming.directory.InitialDirContext.getSchema(String);javax.naming.directory.InitialDirContext.getSchema(Name);javax.xml.bind.Binder.getSchema();javax.xml.bind.helpers.AbstractMarshallerImpl.getSchema();javax.xml.bind.helpers.AbstractUnmarshallerImpl.getSchema();javax.xml.parsers.DocumentBuilder.getSchema();javax.xml.parsers.DocumentBuilderFactory.getSchema();javax.xml.parsers.SAXParser.getSchema();javax.xml.parsers.SAXParserFactory.getSchema(),;0.37;0.37;0.11;0.33;0.33;0.22;0.22;0.22;0.22
getState,9,0.222222222,Returns the current value of synchronization state. This operation has memory semantics of a volatile read.,;java.awt.Checkbox.getState();java.awt.CheckboxMenuItem.getState();java.awt.Frame.getState();java.awt.im.InputMethodHighlight.getState();java.lang.Thread.getState();java.util.concurrent.locks.AbstractQueuedLongSynchronizer.getState();java.util.concurrent.locks.AbstractQueuedSynchronizer.getState();javax.swing.JCheckBoxMenuItem.getState();javax.swing.SwingWorker.getState(),;0.11;0.12;0.12;0.11;0.13;0.22;0.22;0.11;0.11
getStyle,9,0.178503407,Fetches a named style previously added.,";java.awt.Font.getStyle();java.awt.im.InputMethodHighlight.getStyle();javax.swing.JTextPane.getStyle(String);javax.swing.plaf.nimbus.NimbusLookAndFeel.getStyle(JComponent,Region);javax.swing.plaf.synth.SynthContext.getStyle();javax.swing.plaf.synth.SynthLookAndFeel.getStyle(JComponent,Region);javax.swing.plaf.synth.SynthStyleFactory.getStyle(JComponent,Region);javax.swing.text.DefaultStyledDocument.getStyle(String);javax.swing.text.StyleContext.getStyle(String)",;0.11;0.11;0.11;0.12;0.11;0.11;0.11;0.18;0.18
getValueIsAdjusting,9,0.347862843,Returns true if the value is in the process of changing as a result of actions being taken by the user.,;java.awt.Scrollbar.getValueIsAdjusting();java.awt.ScrollPaneAdjustable.getValueIsAdjusting();java.awt.event.AdjustmentEvent.getValueIsAdjusting();javax.swing.DefaultBoundedRangeModel.getValueIsAdjusting();javax.swing.DefaultListSelectionModel.getValueIsAdjusting();javax.swing.JList.getValueIsAdjusting();javax.swing.JScrollBar.getValueIsAdjusting();javax.swing.JSlider.getValueIsAdjusting();javax.swing.event.ListSelectionEvent.getValueIsAdjusting(),;0.35;0.35;0.11;0.35;0.15;0.11;0.11;0.12;0.13
getX1,9,0.945068402,Returns the X coordinate of the start point in double precision.,;java.awt.geom.CubicCurve2D.getX1();java.awt.geom.CubicCurve2D.Double.getX1();java.awt.geom.CubicCurve2D.Float.getX1();java.awt.geom.Line2D.getX1();java.awt.geom.Line2D.Double.getX1();java.awt.geom.Line2D.Float.getX1();java.awt.geom.QuadCurve2D.getX1();java.awt.geom.QuadCurve2D.Double.getX1();java.awt.geom.QuadCurve2D.Float.getX1(),;0.95;0.95;0.95;0.95;0.95;0.95;0.88;0.88;0.88
getX2,9,1,Returns the X coordinate of the end point in double precision.,;java.awt.geom.CubicCurve2D.getX2();java.awt.geom.CubicCurve2D.Double.getX2();java.awt.geom.CubicCurve2D.Float.getX2();java.awt.geom.Line2D.getX2();java.awt.geom.Line2D.Double.getX2();java.awt.geom.Line2D.Float.getX2();java.awt.geom.QuadCurve2D.getX2();java.awt.geom.QuadCurve2D.Double.getX2();java.awt.geom.QuadCurve2D.Float.getX2(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
getY1,9,1,Returns the Y coordinate of the start point in double precision.,;java.awt.geom.CubicCurve2D.getY1();java.awt.geom.CubicCurve2D.Double.getY1();java.awt.geom.CubicCurve2D.Float.getY1();java.awt.geom.Line2D.getY1();java.awt.geom.Line2D.Double.getY1();java.awt.geom.Line2D.Float.getY1();java.awt.geom.QuadCurve2D.getY1();java.awt.geom.QuadCurve2D.Double.getY1();java.awt.geom.QuadCurve2D.Float.getY1(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
getY2,9,1,Returns the Y coordinate of the end point in double precision.,;java.awt.geom.CubicCurve2D.getY2();java.awt.geom.CubicCurve2D.Double.getY2();java.awt.geom.CubicCurve2D.Float.getY2();java.awt.geom.Line2D.getY2();java.awt.geom.Line2D.Double.getY2();java.awt.geom.Line2D.Float.getY2();java.awt.geom.QuadCurve2D.getY2();java.awt.geom.QuadCurve2D.Double.getY2();java.awt.geom.QuadCurve2D.Float.getY2(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
implies,9,0.207289228,"Checks if this Kerberos service permission object ""implies"" the specified permission. If none of the above are true, implies returns false.",";java.security.AllPermission.implies(Permission);java.security.Permission.implies(Permission);java.security.PermissionCollection.implies(Permission);java.security.Permissions.implies(Permission);java.security.Policy.implies(ProtectionDomain,Permission);java.security.ProtectionDomain.implies(Permission);java.security.UnresolvedPermission.implies(Permission);javax.security.auth.kerberos.DelegationPermission.implies(Permission);javax.security.auth.kerberos.ServicePermission.implies(Permission)",;0.16;0.14;0.15;0.13;0.11;0.12;0.13;0.21;0.21
insert_any,9,0.888888889,Inserts an Any value into the Any represented by this DynAny.,;org.omg.CORBA.Any.insert_any(Any);org.omg.DynamicAny._DynAnyStub.insert_any(Any);org.omg.DynamicAny._DynArrayStub.insert_any(Any);org.omg.DynamicAny._DynEnumStub.insert_any(Any);org.omg.DynamicAny._DynFixedStub.insert_any(Any);org.omg.DynamicAny._DynSequenceStub.insert_any(Any);org.omg.DynamicAny._DynStructStub.insert_any(Any);org.omg.DynamicAny._DynUnionStub.insert_any(Any);org.omg.DynamicAny._DynValueStub.insert_any(Any),;0.11;0.89;0.89;0.89;0.89;0.89;0.89;0.89;0.89
insert_boolean,9,0.888888889,Inserts a boolean value into the DynAny.,;org.omg.CORBA.Any.insert_boolean(boolean);org.omg.DynamicAny._DynAnyStub.insert_boolean(boolean);org.omg.DynamicAny._DynArrayStub.insert_boolean(boolean);org.omg.DynamicAny._DynEnumStub.insert_boolean(boolean);org.omg.DynamicAny._DynFixedStub.insert_boolean(boolean);org.omg.DynamicAny._DynSequenceStub.insert_boolean(boolean);org.omg.DynamicAny._DynStructStub.insert_boolean(boolean);org.omg.DynamicAny._DynUnionStub.insert_boolean(boolean);org.omg.DynamicAny._DynValueStub.insert_boolean(boolean),;0.11;0.89;0.89;0.89;0.89;0.89;0.89;0.89;0.89
insert_char,9,0.888888889,Inserts a char value into the DynAny.,;org.omg.CORBA.Any.insert_char(char);org.omg.DynamicAny._DynAnyStub.insert_char(char);org.omg.DynamicAny._DynArrayStub.insert_char(char);org.omg.DynamicAny._DynEnumStub.insert_char(char);org.omg.DynamicAny._DynFixedStub.insert_char(char);org.omg.DynamicAny._DynSequenceStub.insert_char(char);org.omg.DynamicAny._DynStructStub.insert_char(char);org.omg.DynamicAny._DynUnionStub.insert_char(char);org.omg.DynamicAny._DynValueStub.insert_char(char),;0.11;0.89;0.89;0.89;0.89;0.89;0.89;0.89;0.89
insert_double,9,0.888888889,Inserts a double value into the DynAny.,;org.omg.CORBA.Any.insert_double(double);org.omg.DynamicAny._DynAnyStub.insert_double(double);org.omg.DynamicAny._DynArrayStub.insert_double(double);org.omg.DynamicAny._DynEnumStub.insert_double(double);org.omg.DynamicAny._DynFixedStub.insert_double(double);org.omg.DynamicAny._DynSequenceStub.insert_double(double);org.omg.DynamicAny._DynStructStub.insert_double(double);org.omg.DynamicAny._DynUnionStub.insert_double(double);org.omg.DynamicAny._DynValueStub.insert_double(double),;0.11;0.89;0.89;0.89;0.89;0.89;0.89;0.89;0.89
insert_float,9,0.888888889,Inserts a float value into the DynAny.,;org.omg.CORBA.Any.insert_float(float);org.omg.DynamicAny._DynAnyStub.insert_float(float);org.omg.DynamicAny._DynArrayStub.insert_float(float);org.omg.DynamicAny._DynEnumStub.insert_float(float);org.omg.DynamicAny._DynFixedStub.insert_float(float);org.omg.DynamicAny._DynSequenceStub.insert_float(float);org.omg.DynamicAny._DynStructStub.insert_float(float);org.omg.DynamicAny._DynUnionStub.insert_float(float);org.omg.DynamicAny._DynValueStub.insert_float(float),;0.11;0.89;0.89;0.89;0.89;0.89;0.89;0.89;0.89
insert_long,9,0.888888889,Inserts an integer value into the DynAny. The IDL long data type is mapped to the Java int data type.,;org.omg.CORBA.Any.insert_long(int);org.omg.DynamicAny._DynAnyStub.insert_long(int);org.omg.DynamicAny._DynArrayStub.insert_long(int);org.omg.DynamicAny._DynEnumStub.insert_long(int);org.omg.DynamicAny._DynFixedStub.insert_long(int);org.omg.DynamicAny._DynSequenceStub.insert_long(int);org.omg.DynamicAny._DynStructStub.insert_long(int);org.omg.DynamicAny._DynUnionStub.insert_long(int);org.omg.DynamicAny._DynValueStub.insert_long(int),;0.11;0.89;0.89;0.89;0.89;0.89;0.89;0.89;0.89
insert_longlong,9,0.888888889,Inserts a long value into the DynAny. The IDL long long data type is mapped to the Java long data type.,;org.omg.CORBA.Any.insert_longlong(long);org.omg.DynamicAny._DynAnyStub.insert_longlong(long);org.omg.DynamicAny._DynArrayStub.insert_longlong(long);org.omg.DynamicAny._DynEnumStub.insert_longlong(long);org.omg.DynamicAny._DynFixedStub.insert_longlong(long);org.omg.DynamicAny._DynSequenceStub.insert_longlong(long);org.omg.DynamicAny._DynStructStub.insert_longlong(long);org.omg.DynamicAny._DynUnionStub.insert_longlong(long);org.omg.DynamicAny._DynValueStub.insert_longlong(long),;0.11;0.89;0.89;0.89;0.89;0.89;0.89;0.89;0.89
insert_octet,9,0.888888889,Inserts a byte value into the DynAny. The IDL octet data type is mapped to the Java byte data type.,;org.omg.CORBA.Any.insert_octet(byte);org.omg.DynamicAny._DynAnyStub.insert_octet(byte);org.omg.DynamicAny._DynArrayStub.insert_octet(byte);org.omg.DynamicAny._DynEnumStub.insert_octet(byte);org.omg.DynamicAny._DynFixedStub.insert_octet(byte);org.omg.DynamicAny._DynSequenceStub.insert_octet(byte);org.omg.DynamicAny._DynStructStub.insert_octet(byte);org.omg.DynamicAny._DynUnionStub.insert_octet(byte);org.omg.DynamicAny._DynValueStub.insert_octet(byte),;0.11;0.89;0.89;0.89;0.89;0.89;0.89;0.89;0.89
insert_short,9,0.888888889,Inserts a short value into the DynAny.,;org.omg.CORBA.Any.insert_short(short);org.omg.DynamicAny._DynAnyStub.insert_short(short);org.omg.DynamicAny._DynArrayStub.insert_short(short);org.omg.DynamicAny._DynEnumStub.insert_short(short);org.omg.DynamicAny._DynFixedStub.insert_short(short);org.omg.DynamicAny._DynSequenceStub.insert_short(short);org.omg.DynamicAny._DynStructStub.insert_short(short);org.omg.DynamicAny._DynUnionStub.insert_short(short);org.omg.DynamicAny._DynValueStub.insert_short(short),;0.11;0.89;0.89;0.89;0.89;0.89;0.89;0.89;0.89
insert_string,9,0.888888889,Inserts a string value into the DynAny. Both bounded and unbounded strings are inserted using this method.,;org.omg.CORBA.Any.insert_string(String);org.omg.DynamicAny._DynAnyStub.insert_string(String);org.omg.DynamicAny._DynArrayStub.insert_string(String);org.omg.DynamicAny._DynEnumStub.insert_string(String);org.omg.DynamicAny._DynFixedStub.insert_string(String);org.omg.DynamicAny._DynSequenceStub.insert_string(String);org.omg.DynamicAny._DynStructStub.insert_string(String);org.omg.DynamicAny._DynUnionStub.insert_string(String);org.omg.DynamicAny._DynValueStub.insert_string(String),;0.11;0.89;0.89;0.89;0.89;0.89;0.89;0.89;0.89
insert_ulong,9,0.888888889,Inserts an integer value into the DynAny. The IDL ulong data type is mapped to the Java int data type.,;org.omg.CORBA.Any.insert_ulong(int);org.omg.DynamicAny._DynAnyStub.insert_ulong(int);org.omg.DynamicAny._DynArrayStub.insert_ulong(int);org.omg.DynamicAny._DynEnumStub.insert_ulong(int);org.omg.DynamicAny._DynFixedStub.insert_ulong(int);org.omg.DynamicAny._DynSequenceStub.insert_ulong(int);org.omg.DynamicAny._DynStructStub.insert_ulong(int);org.omg.DynamicAny._DynUnionStub.insert_ulong(int);org.omg.DynamicAny._DynValueStub.insert_ulong(int),;0.11;0.89;0.89;0.89;0.89;0.89;0.89;0.89;0.89
insert_ulonglong,9,0.888888889,Inserts a long value into the DynAny. The IDL unsigned long long data type is mapped to the Java long data type.,;org.omg.CORBA.Any.insert_ulonglong(long);org.omg.DynamicAny._DynAnyStub.insert_ulonglong(long);org.omg.DynamicAny._DynArrayStub.insert_ulonglong(long);org.omg.DynamicAny._DynEnumStub.insert_ulonglong(long);org.omg.DynamicAny._DynFixedStub.insert_ulonglong(long);org.omg.DynamicAny._DynSequenceStub.insert_ulonglong(long);org.omg.DynamicAny._DynStructStub.insert_ulonglong(long);org.omg.DynamicAny._DynUnionStub.insert_ulonglong(long);org.omg.DynamicAny._DynValueStub.insert_ulonglong(long),;0.11;0.89;0.89;0.89;0.89;0.89;0.89;0.89;0.89
insert_ushort,9,0.888888889,Inserts a short value into the DynAny. The IDL ushort data type is mapped to the Java short data type.,;org.omg.CORBA.Any.insert_ushort(short);org.omg.DynamicAny._DynAnyStub.insert_ushort(short);org.omg.DynamicAny._DynArrayStub.insert_ushort(short);org.omg.DynamicAny._DynEnumStub.insert_ushort(short);org.omg.DynamicAny._DynFixedStub.insert_ushort(short);org.omg.DynamicAny._DynSequenceStub.insert_ushort(short);org.omg.DynamicAny._DynStructStub.insert_ushort(short);org.omg.DynamicAny._DynUnionStub.insert_ushort(short);org.omg.DynamicAny._DynValueStub.insert_ushort(short),;0.11;0.89;0.89;0.89;0.89;0.89;0.89;0.89;0.89
insert_wchar,9,0.888888889,Inserts a char value into the DynAny. The IDL wchar data type is mapped to the Java char data type.,;org.omg.CORBA.Any.insert_wchar(char);org.omg.DynamicAny._DynAnyStub.insert_wchar(char);org.omg.DynamicAny._DynArrayStub.insert_wchar(char);org.omg.DynamicAny._DynEnumStub.insert_wchar(char);org.omg.DynamicAny._DynFixedStub.insert_wchar(char);org.omg.DynamicAny._DynSequenceStub.insert_wchar(char);org.omg.DynamicAny._DynStructStub.insert_wchar(char);org.omg.DynamicAny._DynUnionStub.insert_wchar(char);org.omg.DynamicAny._DynValueStub.insert_wchar(char),;0.11;0.89;0.89;0.89;0.89;0.89;0.89;0.89;0.89
insert_wstring,9,0.888888889,Inserts a string value into the DynAny. Both bounded and unbounded strings are inserted using this method.,;org.omg.CORBA.Any.insert_wstring(String);org.omg.DynamicAny._DynAnyStub.insert_wstring(String);org.omg.DynamicAny._DynArrayStub.insert_wstring(String);org.omg.DynamicAny._DynEnumStub.insert_wstring(String);org.omg.DynamicAny._DynFixedStub.insert_wstring(String);org.omg.DynamicAny._DynSequenceStub.insert_wstring(String);org.omg.DynamicAny._DynStructStub.insert_wstring(String);org.omg.DynamicAny._DynUnionStub.insert_wstring(String);org.omg.DynamicAny._DynValueStub.insert_wstring(String),;0.11;0.89;0.89;0.89;0.89;0.89;0.89;0.89;0.89
install,9,0.423655419,"Installs the DefaultFormatter onto a particular JFormattedTextField. This will invoke valueToString to convert the current value from the JFormattedTextField to a String. This will then install the Actions from getActions, the DocumentFilter returned from getDocumentFilter and the NavigationFilter returned from getNavigationFilter onto the JFormattedTextField. Subclasses will typically only need to override this if they wish to install additional listeners on the JFormattedTextField. If there is a ParseException in converting the current value to a String, this will set the text to an empty String, and mark the JFormattedTextField as being in an invalid state. While this is a public method, this is typically only useful for subclassers of JFormattedTextField. JFormattedTextField will invoke this method at the appropriate times when the value changes, or its internal state changes.",;javax.swing.JFormattedTextField.AbstractFormatter.install(JFormattedTextField);javax.swing.text.DefaultCaret.install(JTextComponent);javax.swing.text.DefaultFormatter.install(JFormattedTextField);javax.swing.text.DefaultHighlighter.install(JTextComponent);javax.swing.text.EditorKit.install(JEditorPane);javax.swing.text.InternationalFormatter.install(JFormattedTextField);javax.swing.text.MaskFormatter.install(JFormattedTextField);javax.swing.text.StyledEditorKit.install(JEditorPane);javax.swing.text.html.HTMLEditorKit.install(JEditorPane),;0.39;0.17;0.42;0.20;0.33;0.42;0.42;0.29;0.33
isLeapYear,9,0.367958774,"Checks if the year is a leap year, according to the ISO proleptic calendar system rules. This method applies the current rules for leap years across the whole time-line. In general, a year is a leap year if it is divisible by four without remainder. However, years divisible by 100, are not leap years, with the exception of years divisible by 400 which are. For example, 1904 is a leap year it is divisible by 4. 1900 was not a leap year as it is divisible by 100, however 2000 was a leap year as it is divisible by 400. The calculation is proleptic - applying the same rules into the far future and far past. This is historically inaccurate, but is correct for the ISO-8601 standard.",;java.time.LocalDate.isLeapYear();java.time.YearMonth.isLeapYear();java.time.chrono.HijrahChronology.isLeapYear(long);java.time.chrono.HijrahDate.isLeapYear();java.time.chrono.IsoChronology.isLeapYear(long);java.time.chrono.JapaneseChronology.isLeapYear(long);java.time.chrono.MinguoChronology.isLeapYear(long);java.time.chrono.ThaiBuddhistChronology.isLeapYear(long);java.util.GregorianCalendar.isLeapYear(int),;0.37;0.37;0.11;0.14;0.37;0.35;0.35;0.35;0.17
keys,9,0.212374948,Returns an enumeration of the keys in this table.,;java.nio.channels.Selector.keys();java.security.Provider.keys();java.util.Dictionary.keys();java.util.Hashtable.keys();java.util.concurrent.ConcurrentHashMap.keys();java.util.prefs.AbstractPreferences.keys();java.util.prefs.Preferences.keys();javax.swing.ActionMap.keys();javax.swing.InputMap.keys(),;0.11;0.11;0.15;0.21;0.21;0.11;0.11;0.16;0.16
loadClass,9,0.233004577,"Loads a class from a codebase URL path, optionally using the supplied loader. This method should be used when the caller would like to make available to the provider implementation an additional contextual class loader to consider, such as the loader of a caller on the stack. Typically, a provider implementation will attempt to resolve the named class using the given defaultLoader, if specified, before attempting to resolve the class from the codebase URL path. This method delegates to the RMIClassLoaderSpi.loadClass(String,String,ClassLoader) method of the provider instance, passing codebase as the first argument, name as the second argument, and defaultLoader as the third argument.",";java.lang.ClassLoader.loadClass(String);java.rmi.server.RMIClassLoader.loadClass(String);java.rmi.server.RMIClassLoader.loadClass(URL,String);java.rmi.server.RMIClassLoader.loadClass(String,String);java.rmi.server.RMIClassLoader.loadClass(String,String,ClassLoader);java.rmi.server.RMIClassLoaderSpi.loadClass(String,String,ClassLoader);javax.management.DefaultLoaderRepository.loadClass(String);javax.management.loading.DefaultLoaderRepository.loadClass(String);javax.management.loading.MLet.loadClass(String,ClassLoaderRepository)",;0.11;0.11;0.21;0.18;0.23;0.19;0.00;0.00;0.12
lock,9,0.254313363,"Acquires an exclusive lock on this channel's file. This method initiates an operation to acquire an exclusive lock on this channel's file. The method returns a Future representing the pending result of the operation. The Future's get method returns the FileLock on successful completion. An invocation of this method behaves in exactly the same way as the invocation ch.lock(0L, Long.MAX_VALUE, false)",";java.nio.channels.AsynchronousFileChannel.lock(long,long,boolean,A,CompletionHandler&lt;FileLock,?);java.nio.channels.AsynchronousFileChannel.lock(A,CompletionHandler&lt;FileLock,?);java.nio.channels.AsynchronousFileChannel.lock(long,long,boolean);java.nio.channels.AsynchronousFileChannel.lock();java.nio.channels.FileChannel.lock(long,long,boolean);java.nio.channels.FileChannel.lock();java.util.concurrent.locks.ReentrantLock.lock();java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.lock();java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.lock()",;0.21;0.24;0.22;0.25;0.20;0.17;0.24;0.18;0.24
name,9,0.222222222,Deprecated.Deprecated by CORBA 2.2.,;java.lang.Enum.name();java.nio.charset.Charset.name();java.nio.file.FileStore.name();java.util.prefs.AbstractPreferences.name();java.util.prefs.Preferences.name();org.omg.CORBA.NamedValue.name();org.omg.CORBA.Principal.name(byte[]);org.omg.CORBA.Principal.name();org.omg.CORBA.TypeCode.name(),;0.12;0.11;0.13;0.11;0.11;0.11;0.22;0.22;0.12
nextLong,9,0.431511239,Returns a pseudorandom long value between zero (inclusive) and the specified bound (exclusive).,";java.util.Random.nextLong();java.util.Scanner.nextLong();java.util.Scanner.nextLong(int);java.util.SplittableRandom.nextLong();java.util.SplittableRandom.nextLong(long);java.util.SplittableRandom.nextLong(long,long);java.util.concurrent.ThreadLocalRandom.nextLong();java.util.concurrent.ThreadLocalRandom.nextLong(long);java.util.concurrent.ThreadLocalRandom.nextLong(long,long)",;0.11;0.12;0.12;0.30;0.43;0.42;0.30;0.43;0.42
paintIcon,9,0.666666667,Description copied from interface:Icon,";javax.swing.ImageIcon.paintIcon(Component,Graphics,int,int);javax.swing.plaf.IconUIResource.paintIcon(Component,Graphics,int,int);javax.swing.plaf.metal.MetalCheckBoxIcon.paintIcon(Component,Graphics,int,int);javax.swing.plaf.metal.MetalComboBoxIcon.paintIcon(Component,Graphics,int,int);javax.swing.plaf.metal.MetalIconFactory.FileIcon16.paintIcon(Component,Graphics,int,int);javax.swing.plaf.metal.MetalIconFactory.FolderIcon16.paintIcon(Component,Graphics,int,int);javax.swing.plaf.metal.MetalIconFactory.PaletteCloseIcon.paintIcon(Component,Graphics,int,int);javax.swing.plaf.metal.MetalIconFactory.TreeControlIcon.paintIcon(Component,Graphics,int,int);javax.swing.plaf.metal.MetalToggleButtonUI.paintIcon(Graphics,AbstractButton,Rectangle)",;0.11;0.67;0.67;0.11;0.67;0.67;0.67;0.67;0.11
paintText,9,0.262668589,Paints text at the specified location. This will not attempt to render the text as html nor will it offset by the insets of the component.,";javax.swing.plaf.basic.BasicButtonUI.paintText(Graphics,JComponent,Rectangle,String);javax.swing.plaf.basic.BasicButtonUI.paintText(Graphics,AbstractButton,Rectangle,String);javax.swing.plaf.basic.BasicMenuItemUI.paintText(Graphics,JMenuItem,Rectangle,String);javax.swing.plaf.metal.MetalButtonUI.paintText(Graphics,JComponent,Rectangle,String);javax.swing.plaf.metal.MetalToggleButtonUI.paintText(Graphics,JComponent,Rectangle,String);javax.swing.plaf.synth.SynthGraphicsUtils.paintText(SynthContext,Graphics,String,Rectangle,int);javax.swing.plaf.synth.SynthGraphicsUtils.paintText(SynthContext,Graphics,String,int,int,int);javax.swing.plaf.synth.SynthGraphicsUtils.paintText(SynthContext,Graphics,String,Icon,int,int,int,int,int,int,int);javax.swing.plaf.synth.SynthProgressBarUI.paintText(SynthContext,Graphics,String)",;0.11;0.16;0.16;0.22;0.22;0.26;0.26;0.19;0.11
position,9,0.306857534,"Returns the position in this SerialClob object where the given String object begins, starting the search at the specified position. This method returns -1 if the pattern is not found.",";java.nio.Buffer.position();java.nio.Buffer.position(int);java.nio.channels.FileChannel.position();java.nio.channels.FileChannel.position(long);java.nio.channels.FileLock.position();javax.sql.rowset.serial.SerialBlob.position(byte[],long);javax.sql.rowset.serial.SerialBlob.position(Blob,long);javax.sql.rowset.serial.SerialClob.position(String,long);javax.sql.rowset.serial.SerialClob.position(Clob,long)",;0.11;0.12;0.11;0.12;0.12;0.29;0.29;0.31;0.30
removeAttribute,9,0.202448084,Removes an attribute from the list.,";javax.imageio.metadata.IIOMetadataFormatImpl.removeAttribute(String,String);javax.imageio.metadata.IIOMetadataNode.removeAttribute(String);javax.script.SimpleScriptContext.removeAttribute(String,int);javax.swing.text.SimpleAttributeSet.removeAttribute(Object);javax.swing.text.StyleContext.removeAttribute(AttributeSet,Object);javax.swing.text.html.StyleSheet.removeAttribute(AttributeSet,Object);org.xml.sax.ext.Attributes2Impl.removeAttribute(int);org.xml.sax.helpers.AttributeListImpl.removeAttribute(String);org.xml.sax.helpers.AttributesImpl.removeAttribute(int)",;0.14;0.11;0.11;0.20;0.17;0.16;0.11;0.00;0.20
rewind,9,0.888888889,Is equivalent to seek(0).,;java.nio.Buffer.rewind();org.omg.DynamicAny._DynAnyStub.rewind();org.omg.DynamicAny._DynArrayStub.rewind();org.omg.DynamicAny._DynEnumStub.rewind();org.omg.DynamicAny._DynFixedStub.rewind();org.omg.DynamicAny._DynSequenceStub.rewind();org.omg.DynamicAny._DynStructStub.rewind();org.omg.DynamicAny._DynUnionStub.rewind();org.omg.DynamicAny._DynValueStub.rewind(),;0.11;0.89;0.89;0.89;0.89;0.89;0.89;0.89;0.89
setDataElements,9,0.607876221,"Sets the data for a single pixel in the specified DataBuffer from a primitive array of type TransferType. For image data supported by the Java 2D API, this will be one of DataBuffer.TYPE_BYTE, DataBuffer.TYPE_USHORT, DataBuffer.TYPE_INT, DataBuffer.TYPE_SHORT, DataBuffer.TYPE_FLOAT, or DataBuffer.TYPE_DOUBLE. Data in the array may be in a packed format, thus increasing efficiency for data transfers. The following code illustrates transferring data for one pixel from DataBuffer db1, whose storage layout is described by SampleModel sm1, to DataBuffer db2, whose storage layout is described by SampleModel sm2. The transfer will generally be more efficient than using getPixel/setPixel. SampleModel sm1, sm2; DataBuffer db1, db2; sm2.setDataElements(x, y, sm1.getDataElements(x, y, null, db1), db2); Using getDataElements/setDataElements to transfer between two DataBuffer/SampleModel pairs is legitimate if the SampleModels have the same number of bands, corresponding bands have the same number of bits per sample, and the TransferTypes are the same. obj must be a primitive array of type TransferType. Otherwise, a ClassCastException is thrown. An ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds, or if obj is not large enough to hold the pixel data.",";java.awt.image.BandedSampleModel.setDataElements(int,int,Object,DataBuffer);java.awt.image.ComponentSampleModel.setDataElements(int,int,Object,DataBuffer);java.awt.image.MultiPixelPackedSampleModel.setDataElements(int,int,Object,DataBuffer);java.awt.image.SampleModel.setDataElements(int,int,Object,DataBuffer);java.awt.image.SampleModel.setDataElements(int,int,int,int,Object,DataBuffer);java.awt.image.SinglePixelPackedSampleModel.setDataElements(int,int,Object,DataBuffer);java.awt.image.WritableRaster.setDataElements(int,int,Object);java.awt.image.WritableRaster.setDataElements(int,int,Raster);java.awt.image.WritableRaster.setDataElements(int,int,int,int,Object)",;0.57;0.52;0.53;0.61;0.57;0.56;0.39;0.23;0.39
setFrame,9,0.742797028,Sets the location and size of the framing rectangle of this Shape to the specified rectangular values.,";java.awt.geom.Arc2D.setFrame(double,double,double,double);java.awt.geom.Ellipse2D.Double.setFrame(double,double,double,double);java.awt.geom.Ellipse2D.Float.setFrame(float,float,float,float);java.awt.geom.Ellipse2D.Float.setFrame(double,double,double,double);java.awt.geom.Rectangle2D.setFrame(double,double,double,double);java.awt.geom.RectangularShape.setFrame(double,double,double,double);java.awt.geom.RectangularShape.setFrame(Point2D,Dimension2D);java.awt.geom.RectangularShape.setFrame(Rectangle2D);java.awt.geom.RoundRectangle2D.setFrame(double,double,double,double)",;0.54;0.74;0.74;0.74;0.50;0.74;0.49;0.36;0.74
setMinimum,9,0.177557242,"Sets the slider's minimum value to minimum. This method forwards the new minimum value to the model. The data model (an instance of BoundedRangeModel) handles any mathematical issues arising from assigning faulty values. See the BoundedRangeModel documentation for details. If the new minimum value is different from the previous minimum value, all change listeners are notified.",;java.awt.Scrollbar.setMinimum(int);java.awt.ScrollPaneAdjustable.setMinimum(int);javax.swing.DefaultBoundedRangeModel.setMinimum(int);javax.swing.JProgressBar.setMinimum(int);javax.swing.JScrollBar.setMinimum(int);javax.swing.JSlider.setMinimum(int);javax.swing.ProgressMonitor.setMinimum(int);javax.swing.SpinnerNumberModel.setMinimum(Comparable);javax.swing.text.InternationalFormatter.setMinimum(Comparable),;0.13;0.11;0.11;0.18;0.11;0.18;0.11;0.12;0.11
setObject,9,0.288435886,"Sets the designated parameter to an Object in the Java programming language. The second parameter must be an Object type. For integral values, the java.lang equivalent objects should be used. For example, use the class Integer for an int. The driver converts this object to the specified target SQL type before sending it to the database. If the object has a custom mapping (is of a class implementing SQLData), the driver should call the method SQLData.writeSQL to write the object to the SQL data stream. If, on the other hand, the object is of a class implementing Ref, Blob, Clob, Struct, or Array, the driver should pass it to the database as a value of the corresponding SQL type. Note that this method may be used to pass database- specific abstract data types. The parameter value set by this method is stored internally and will be supplied as the appropriate parameter in this RowSet object's command when the method execute is called. Methods such as execute and populate must be provided in any class that extends this class and implements one or more of the standard JSR-114 RowSet interfaces. NOTE: JdbcRowSet does not require the populate method as it is undefined in this class. Calls made to the method getParams after this version of setObject has been called will return an array containing the parameter values that have been set. In that array, the element that represents the values set with this method will itself be an array. The first element of that array is the given Object instance, and the second element is the value set for targetSqlType. The third element is the value set for scale, which the driver will ignore if the type of the object being set is not java.sql.Types.NUMERIC or java.sql.Types.DECIMAL. The parameter number is indicated by an element's position in the array returned by the method getParams, with the first element being the value for the first placeholder parameter, the second element being the value for the second placeholder parameter, and so on. In other words, if the object being set is the value for the second placeholder parameter, the array containing it will be the second element in the array returned by getParams. Note that because the numbering of elements in an array starts at zero, the array element that corresponds to placeholder parameter number parameterIndex is element number parameterIndex -1.",";javax.naming.Binding.setObject(Object);javax.sql.rowset.BaseRowSet.setObject(int,Object,int,int);javax.sql.rowset.BaseRowSet.setObject(int,Object,int);javax.sql.rowset.BaseRowSet.setObject(int,Object);javax.sql.rowset.BaseRowSet.setObject(String,Object,int,int);javax.sql.rowset.BaseRowSet.setObject(String,Object,int);javax.sql.rowset.BaseRowSet.setObject(String,Object);javax.sql.rowset.serial.SerialRef.setObject(Object);javax.xml.bind.helpers.ValidationEventLocatorImpl.setObject(Object)",;0.11;0.29;0.24;0.29;0.21;0.11;0.24;0.11;0.11
setSamples,9,0.843580437,Sets the samples in the specified band for the specified rectangle of pixels from an int array containing one sample per array element. ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds.,";java.awt.image.BandedSampleModel.setSamples(int,int,int,int,int,int[],DataBuffer);java.awt.image.ComponentSampleModel.setSamples(int,int,int,int,int,int[],DataBuffer);java.awt.image.SampleModel.setSamples(int,int,int,int,int,int[],DataBuffer);java.awt.image.SampleModel.setSamples(int,int,int,int,int,float[],DataBuffer);java.awt.image.SampleModel.setSamples(int,int,int,int,int,double[],DataBuffer);java.awt.image.SinglePixelPackedSampleModel.setSamples(int,int,int,int,int,int[],DataBuffer);java.awt.image.WritableRaster.setSamples(int,int,int,int,int,int[]);java.awt.image.WritableRaster.setSamples(int,int,int,int,int,float[]);java.awt.image.WritableRaster.setSamples(int,int,int,int,int,double[])",;0.82;0.76;0.84;0.81;0.81;0.84;0.80;0.77;0.77
setSelectionModel,9,0.222222222,Sets the model object to handle single selections.,;javax.swing.JColorChooser.setSelectionModel(ColorSelectionModel);javax.swing.JList.setSelectionModel(ListSelectionModel);javax.swing.JMenuBar.setSelectionModel(SingleSelectionModel);javax.swing.JPopupMenu.setSelectionModel(SingleSelectionModel);javax.swing.JTable.setSelectionModel(ListSelectionModel);javax.swing.JTree.setSelectionModel(TreeSelectionModel);javax.swing.plaf.basic.BasicTreeUI.setSelectionModel(TreeSelectionModel);javax.swing.table.DefaultTableColumnModel.setSelectionModel(ListSelectionModel);javax.swing.tree.AbstractLayoutCache.setSelectionModel(TreeSelectionModel),;0.11;0.12;0.22;0.22;0.17;0.12;0.11;0.17;0.11
translate,9,0.191299873,"Translates the origin of the Graphics2D context to the point (x,y) in the current coordinate system. Modifies the Graphics2D context so that its new origin corresponds to the point (x,y) in the Graphics2D context's former coordinate system. All coordinates used in subsequent rendering operations on this graphics context are relative to this new origin.",";java.awt.Event.translate(int,int);java.awt.Graphics.translate(int,int);java.awt.Graphics2D.translate(int,int);java.awt.Graphics2D.translate(double,double);java.awt.Point.translate(int,int);java.awt.Polygon.translate(int,int);java.awt.Rectangle.translate(int,int);java.awt.geom.AffineTransform.translate(double,double);javax.swing.DebugGraphics.translate(int,int)",;0.11;0.19;0.19;0.17;0.13;0.13;0.11;0.16;0.00
updateAndGet,9,0.8732759,"Atomically updates the element at index i with the results of applying the given function, returning the updated value. The function should be side-effect-free, since it may be re-applied when attempted updates fail due to contention among threads.",";java.util.concurrent.atomic.AtomicInteger.updateAndGet(IntUnaryOperator);java.util.concurrent.atomic.AtomicIntegerArray.updateAndGet(int,IntUnaryOperator);java.util.concurrent.atomic.AtomicIntegerFieldUpdater.updateAndGet(T,IntUnaryOperator);java.util.concurrent.atomic.AtomicLong.updateAndGet(LongUnaryOperator);java.util.concurrent.atomic.AtomicLongArray.updateAndGet(int,LongUnaryOperator);java.util.concurrent.atomic.AtomicLongFieldUpdater.updateAndGet(T,LongUnaryOperator);java.util.concurrent.atomic.AtomicReference.updateAndGet(UnaryOperator&lt;V&gt;);java.util.concurrent.atomic.AtomicReferenceArray.updateAndGet(int,UnaryOperator&lt;E&gt;);java.util.concurrent.atomic.AtomicReferenceFieldUpdater.updateAndGet(T,UnaryOperator&lt;V&gt;)",;0.87;0.87;0.84;0.87;0.87;0.84;0.87;0.87;0.84
adjustInto,10,0.785361756,"Adjusts the specified temporal object to have the same offset and time as this object. This returns a temporal object of the same observable type as the input with the offset and time changed to be the same as this. The adjustment is equivalent to using Temporal.with(TemporalField, long) twice, passing ChronoField.NANO_OF_DAY and ChronoField.OFFSET_SECONDS as the fields. In most cases, it is clearer to reverse the calling pattern by using Temporal.with(TemporalAdjuster): // these two lines are equivalent, but the second approach is recommended temporal = thisOffsetTime.adjustInto(temporal); temporal = temporal.with(thisOffsetTime); This instance is immutable and unaffected by this method call.",;java.time.Instant.adjustInto(Temporal);java.time.LocalDate.adjustInto(Temporal);java.time.LocalDateTime.adjustInto(Temporal);java.time.LocalTime.adjustInto(Temporal);java.time.MonthDay.adjustInto(Temporal);java.time.OffsetDateTime.adjustInto(Temporal);java.time.OffsetTime.adjustInto(Temporal);java.time.Year.adjustInto(Temporal);java.time.YearMonth.adjustInto(Temporal);java.time.ZoneOffset.adjustInto(Temporal),;0.76;0.78;0.78;0.78;0.71;0.76;0.79;0.75;0.74;0.78
changedUpdate,10,0.748567179,Gives notification from the document that attributes were changed in a location that this view is responsible for.,";javax.swing.text.FlowView.changedUpdate(DocumentEvent,Shape,ViewFactory);javax.swing.text.FlowView.FlowStrategy.changedUpdate(FlowView,DocumentEvent,Rectangle);javax.swing.text.GlyphView.changedUpdate(DocumentEvent,Shape,ViewFactory);javax.swing.text.LabelView.changedUpdate(DocumentEvent,Shape,ViewFactory);javax.swing.text.ParagraphView.changedUpdate(DocumentEvent,Shape,ViewFactory);javax.swing.text.PlainView.changedUpdate(DocumentEvent,Shape,ViewFactory);javax.swing.text.WrappedPlainView.changedUpdate(DocumentEvent,Shape,ViewFactory);javax.swing.text.html.BlockView.changedUpdate(DocumentEvent,Shape,ViewFactory);javax.swing.text.html.ImageView.changedUpdate(DocumentEvent,Shape,ViewFactory);javax.swing.text.html.InlineView.changedUpdate(DocumentEvent,Shape,ViewFactory)",;0.75;0.75;0.49;0.75;0.75;0.75;0.75;0.10;0.10;0.75
copyOfRange,10,0.964285267,"Copies the specified range of the specified array into a new array. The initial index of the range (from) must lie between zero and original.length, inclusive. The value at original[from] is placed into the initial element of the copy (unless from == original.length or from == to). Values from subsequent elements in the original array are placed into subsequent elements in the copy. The final index of the range (to), which must be greater than or equal to from, may be greater than original.length, in which case 0 is placed in all elements of the copy whose index is greater than or equal to original.length - from. The length of the returned array will be to - from.",";java.util.Arrays.copyOfRange(T[],int,int);java.util.Arrays.copyOfRange(U[],int,int,Class&lt;?);java.util.Arrays.copyOfRange(byte[],int,int);java.util.Arrays.copyOfRange(short[],int,int);java.util.Arrays.copyOfRange(int[],int,int);java.util.Arrays.copyOfRange(long[],int,int);java.util.Arrays.copyOfRange(char[],int,int);java.util.Arrays.copyOfRange(float[],int,int);java.util.Arrays.copyOfRange(double[],int,int);java.util.Arrays.copyOfRange(boolean[],int,int)",;0.90;0.93;0.96;0.96;0.96;0.96;0.96;0.96;0.96;0.96
createCompatibleSampleModel,10,0.384619627,Creates a SampleModel with the specified width and height that has a data layout compatible with this ColorModel.,";java.awt.image.BandedSampleModel.createCompatibleSampleModel(int,int);java.awt.image.ColorModel.createCompatibleSampleModel(int,int);java.awt.image.ComponentColorModel.createCompatibleSampleModel(int,int);java.awt.image.ComponentSampleModel.createCompatibleSampleModel(int,int);java.awt.image.IndexColorModel.createCompatibleSampleModel(int,int);java.awt.image.MultiPixelPackedSampleModel.createCompatibleSampleModel(int,int);java.awt.image.PackedColorModel.createCompatibleSampleModel(int,int);java.awt.image.PixelInterleavedSampleModel.createCompatibleSampleModel(int,int);java.awt.image.SampleModel.createCompatibleSampleModel(int,int);java.awt.image.SinglePixelPackedSampleModel.createCompatibleSampleModel(int,int)",;0.27;0.27;0.38;0.31;0.38;0.29;0.38;0.30;0.10;0.30
dateYearDay,10,0.525299338,"Obtains a local date in Minguo calendar system from the era, year-of-era and day-of-year fields.",";java.time.chrono.HijrahChronology.dateYearDay(Era,int,int);java.time.chrono.HijrahChronology.dateYearDay(int,int);java.time.chrono.IsoChronology.dateYearDay(Era,int,int);java.time.chrono.IsoChronology.dateYearDay(int,int);java.time.chrono.JapaneseChronology.dateYearDay(Era,int,int);java.time.chrono.JapaneseChronology.dateYearDay(int,int);java.time.chrono.MinguoChronology.dateYearDay(Era,int,int);java.time.chrono.MinguoChronology.dateYearDay(int,int);java.time.chrono.ThaiBuddhistChronology.dateYearDay(Era,int,int);java.time.chrono.ThaiBuddhistChronology.dateYearDay(int,int)",;0.53;0.51;0.40;0.34;0.22;0.26;0.53;0.51;0.51;0.50
doFinal,10,0.563804944,"Encrypts or decrypts data in a single-part operation, or finishes a multiple-part operation. The data is encrypted or decrypted, depending on how this cipher was initialized. The first inputLen bytes in the input buffer, starting at inputOffset inclusive, and any input bytes that may have been buffered during a previous update operation, are processed, with padding (if requested) being applied. If an AEAD mode such as GCM/CCM is being used, the authentication tag is appended in the case of encryption, or verified in the case of decryption. The result is stored in the output buffer. If the output buffer is too small to hold the result, a ShortBufferException is thrown. In this case, repeat this call with a larger output buffer. Use getOutputSize to determine how big the output buffer should be. Upon finishing, this method resets this cipher object to the state it was in when previously initialized via a call to init. That is, the object is reset and available to encrypt or decrypt (depending on the operation mode that was specified in the call to init) more data. Note: if any exception is thrown, this cipher object may need to be reset before it can be used again. Note: this method should be copy-safe, which means the input and output buffers can reference the same byte array and no unprocessed input data is overwritten when the result is copied into the output buffer.",";javax.crypto.Cipher.doFinal();javax.crypto.Cipher.doFinal(byte[],int);javax.crypto.Cipher.doFinal(byte[]);javax.crypto.Cipher.doFinal(byte[],int,int);javax.crypto.Cipher.doFinal(byte[],int,int,byte[]);javax.crypto.Cipher.doFinal(byte[],int,int,byte[],int);javax.crypto.Cipher.doFinal(ByteBuffer,ByteBuffer);javax.crypto.Mac.doFinal();javax.crypto.Mac.doFinal(byte[],int);javax.crypto.Mac.doFinal(byte[])",;0.51;0.55;0.56;0.56;0.56;0.56;0.49;0.34;0.36;0.35
equal,10,0.8,"Compares two DynAny values for equality. Two DynAny values are equal if their TypeCodes are equivalent and, recursively, all component DynAnys have equal values. The current position of the two DynAnys being compared has no effect on the result of equal.",;org.omg.CORBA.Any.equal(Any);org.omg.CORBA.TypeCode.equal(TypeCode);org.omg.DynamicAny._DynAnyStub.equal(DynAny);org.omg.DynamicAny._DynArrayStub.equal(DynAny);org.omg.DynamicAny._DynEnumStub.equal(DynAny);org.omg.DynamicAny._DynFixedStub.equal(DynAny);org.omg.DynamicAny._DynSequenceStub.equal(DynAny);org.omg.DynamicAny._DynStructStub.equal(DynAny);org.omg.DynamicAny._DynUnionStub.equal(DynAny);org.omg.DynamicAny._DynValueStub.equal(DynAny),;0.11;0.11;0.80;0.80;0.80;0.80;0.80;0.80;0.80;0.80
getAndSet,10,0.645678947,Atomically sets to the given value and returns the old value.,";java.util.concurrent.atomic.AtomicBoolean.getAndSet(boolean);java.util.concurrent.atomic.AtomicInteger.getAndSet(int);java.util.concurrent.atomic.AtomicIntegerArray.getAndSet(int,int);java.util.concurrent.atomic.AtomicIntegerFieldUpdater.getAndSet(T,int);java.util.concurrent.atomic.AtomicLong.getAndSet(long);java.util.concurrent.atomic.AtomicLongArray.getAndSet(int,long);java.util.concurrent.atomic.AtomicLongFieldUpdater.getAndSet(T,long);java.util.concurrent.atomic.AtomicReference.getAndSet(V);java.util.concurrent.atomic.AtomicReferenceArray.getAndSet(int,E);java.util.concurrent.atomic.AtomicReferenceFieldUpdater.getAndSet(T,V)",;0.54;0.65;0.64;0.59;0.65;0.64;0.59;0.65;0.64;0.59
getAudioInputStream,10,0.432787357,Obtains an audio input stream from the URL provided. The URL must point to valid audio file data.,";javax.sound.sampled.AudioSystem.getAudioInputStream(AudioFormat.Encoding,AudioInputStream);javax.sound.sampled.AudioSystem.getAudioInputStream(AudioFormat,AudioInputStream);javax.sound.sampled.AudioSystem.getAudioInputStream(InputStream);javax.sound.sampled.AudioSystem.getAudioInputStream(URL);javax.sound.sampled.AudioSystem.getAudioInputStream(File);javax.sound.sampled.spi.AudioFileReader.getAudioInputStream(InputStream);javax.sound.sampled.spi.AudioFileReader.getAudioInputStream(URL);javax.sound.sampled.spi.AudioFileReader.getAudioInputStream(File);javax.sound.sampled.spi.FormatConversionProvider.getAudioInputStream(AudioFormat.Encoding,AudioInputStream);javax.sound.sampled.spi.FormatConversionProvider.getAudioInputStream(AudioFormat,AudioInputStream)",;0.34;0.34;0.25;0.43;0.41;0.25;0.43;0.41;0.34;0.34
getBackground,10,0.173794524,Gets the background color of this component.,;java.awt.Component.getBackground();java.awt.Graphics2D.getBackground();java.awt.TextComponent.getBackground();java.awt.Window.getBackground();javax.swing.text.DefaultStyledDocument.getBackground(AttributeSet);javax.swing.text.GlyphView.getBackground();javax.swing.text.LabelView.getBackground();javax.swing.text.StyleConstants.getBackground(AttributeSet);javax.swing.text.StyleContext.getBackground(AttributeSet);javax.swing.text.html.StyleSheet.getBackground(AttributeSet),;0.17;0.10;0.15;0.15;0.17;0.13;0.12;0.17;0.16;0.16
getBoolean,10,0.179536222,Returns a boolean from the defaults which is associated with the key value. If the key is not found or the key doesn't represent a boolean value then false is returned.,";java.lang.Boolean.getBoolean(String);java.lang.reflect.Array.getBoolean(Object,int);java.lang.reflect.Field.getBoolean(Object);java.util.prefs.AbstractPreferences.getBoolean(String,boolean);java.util.prefs.Preferences.getBoolean(String,boolean);javax.swing.UIDefaults.getBoolean(Object);javax.swing.UIDefaults.getBoolean(Object,Locale);javax.swing.UIManager.getBoolean(Object);javax.swing.UIManager.getBoolean(Object,Locale);javax.swing.plaf.synth.SynthStyle.getBoolean(SynthContext,Object,boolean)",;0.10;0.10;0.10;0.10;0.11;0.16;0.17;0.18;0.18;0.10
getFeature,10,0.306304023,"Look up the value of a feature flag. The feature name is any fully-qualified URI. It is possible for a ValidatorHandler to recognize a feature name but temporarily be unable to return its value. Some feature values may be available only in specific contexts, such as before, during, or after a validation. Implementors are free (and encouraged) to invent their own features, using names built on their own URIs.",";javax.imageio.metadata.IIOMetadataNode.getFeature(String,String);javax.xml.parsers.DocumentBuilderFactory.getFeature(String);javax.xml.parsers.SAXParserFactory.getFeature(String);javax.xml.transform.TransformerFactory.getFeature(String);javax.xml.validation.SchemaFactory.getFeature(String);javax.xml.validation.Validator.getFeature(String);javax.xml.validation.ValidatorHandler.getFeature(String);javax.xml.xpath.XPathFactory.getFeature(String);org.xml.sax.helpers.ParserAdapter.getFeature(String);org.xml.sax.helpers.XMLFilterImpl.getFeature(String)",;0.10;0.27;0.10;0.29;0.29;0.31;0.31;0.27;0.10;0.11
getFontMetrics,10,0.138298307,Gets the font metrics for the specified font.,;java.awt.Component.getFontMetrics(Font);java.awt.Graphics.getFontMetrics();java.awt.Graphics.getFontMetrics(Font);java.awt.Toolkit.getFontMetrics(Font);javax.swing.DebugGraphics.getFontMetrics();javax.swing.DebugGraphics.getFontMetrics(Font);javax.swing.JComponent.getFontMetrics(Font);javax.swing.text.FieldView.getFontMetrics();javax.swing.text.LabelView.getFontMetrics();javax.swing.text.StyleContext.getFontMetrics(Font),;0.11;0.14;0.14;0.10;0.00;0.00;0.10;0.10;0.10;0.10
getFormat,10,0.313102263,Returns the name of the encoding format associated with this key specification.,;java.security.spec.EncodedKeySpec.getFormat();java.security.spec.PKCS8EncodedKeySpec.getFormat();java.security.spec.X509EncodedKeySpec.getFormat();javax.crypto.spec.SecretKeySpec.getFormat();javax.security.auth.kerberos.KerberosKey.getFormat();javax.sound.sampled.AudioFileFormat.getFormat();javax.sound.sampled.AudioInputStream.getFormat();javax.swing.JSpinner.DateEditor.getFormat();javax.swing.JSpinner.NumberEditor.getFormat();javax.swing.text.InternationalFormatter.getFormat(),;0.16;0.31;0.31;0.31;0.31;0.10;0.10;0.18;0.18;0.10
getLength,10,0.184944309,Returns the length of the data of interest within the byte array returned by getData.,;java.lang.reflect.Array.getLength(Object);java.net.DatagramPacket.getLength();java.text.Bidi.getLength();javax.imageio.metadata.IIOMetadataNode.getLength();javax.imageio.stream.IIOByteBuffer.getLength();javax.sound.midi.MidiMessage.getLength();javax.swing.text.AbstractDocument.getLength();javax.swing.text.DefaultStyledDocument.ElementSpec.getLength();org.xml.sax.helpers.AttributeListImpl.getLength();org.xml.sax.helpers.AttributesImpl.getLength(),;0.16;0.18;0.10;0.10;0.18;0.10;0.17;0.00;0.00;0.10
getMonth,10,0.606934662,Gets the month-of-year field using the Month enum. This method returns the enum Month for the month. This avoids confusion as to what int values mean. If you need access to the primitive int value then the enum provides the int value.,;java.sql.Time.getMonth();java.time.LocalDate.getMonth();java.time.LocalDateTime.getMonth();java.time.MonthDay.getMonth();java.time.OffsetDateTime.getMonth();java.time.YearMonth.getMonth();java.time.ZonedDateTime.getMonth();java.time.zone.ZoneOffsetTransitionRule.getMonth();java.util.Date.getMonth();javax.xml.datatype.XMLGregorianCalendar.getMonth(),;0.00;0.61;0.61;0.61;0.61;0.61;0.61;0.14;0.10;0.10
getOutputStream,10,0.132773478,Returns an output stream for this socket.,;java.lang.Process.getOutputStream();java.net.Socket.getOutputStream();java.net.SocketImpl.getOutputStream();java.net.URLConnection.getOutputStream();java.rmi.server.LogStream.getOutputStream();javax.activation.DataHandler.getOutputStream();javax.activation.FileDataSource.getOutputStream();javax.activation.URLDataSource.getOutputStream();javax.print.StreamPrintService.getOutputStream();javax.xml.transform.stream.StreamResult.getOutputStream(),;0.10;0.11;0.13;0.13;0.00;0.10;0.10;0.10;0.10;0.10
getParameters,10,0.171016131,Return Configuration parameters. This Configuration instance will only have parameters if it was obtained via a call to Configuration.getInstance. Otherwise this method returns null.,;java.awt.image.renderable.ParameterBlock.getParameters();java.lang.reflect.Executable.getParameters();java.security.Policy.getParameters();java.security.Signature.getParameters();java.util.logging.LogRecord.getParameters();javax.activation.MimeType.getParameters();javax.crypto.Cipher.getParameters();javax.net.ssl.CertPathTrustManagerParameters.getParameters();javax.net.ssl.KeyStoreBuilderParameters.getParameters();javax.security.auth.login.Configuration.getParameters(),;0.10;0.10;0.17;0.12;0.10;0.10;0.12;0.10;0.10;0.17
getPixel,10,0.624879857,Returns the samples for the specified pixel in an array of double. ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds.,";java.awt.image.BandedSampleModel.getPixel(int,int,int[],DataBuffer);java.awt.image.ComponentSampleModel.getPixel(int,int,int[],DataBuffer);java.awt.image.MultiPixelPackedSampleModel.getPixel(int,int,int[],DataBuffer);java.awt.image.Raster.getPixel(int,int,int[]);java.awt.image.Raster.getPixel(int,int,float[]);java.awt.image.Raster.getPixel(int,int,double[]);java.awt.image.SampleModel.getPixel(int,int,int[],DataBuffer);java.awt.image.SampleModel.getPixel(int,int,float[],DataBuffer);java.awt.image.SampleModel.getPixel(int,int,double[],DataBuffer);java.awt.image.SinglePixelPackedSampleModel.getPixel(int,int,int[],DataBuffer)",;0.62;0.54;0.42;0.59;0.59;0.59;0.56;0.62;0.62;0.61
getPixels,10,0.671302595,"Returns all samples for a rectangle of pixels in an int array, one sample per array element. ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds.",";java.awt.image.BandedSampleModel.getPixels(int,int,int,int,int[],DataBuffer);java.awt.image.ComponentSampleModel.getPixels(int,int,int,int,int[],DataBuffer);java.awt.image.PixelGrabber.getPixels();java.awt.image.Raster.getPixels(int,int,int,int,int[]);java.awt.image.Raster.getPixels(int,int,int,int,float[]);java.awt.image.Raster.getPixels(int,int,int,int,double[]);java.awt.image.SampleModel.getPixels(int,int,int,int,int[],DataBuffer);java.awt.image.SampleModel.getPixels(int,int,int,int,float[],DataBuffer);java.awt.image.SampleModel.getPixels(int,int,int,int,double[],DataBuffer);java.awt.image.SinglePixelPackedSampleModel.getPixels(int,int,int,int,int[],DataBuffer)",;0.60;0.59;0.10;0.59;0.58;0.58;0.67;0.64;0.64;0.65
getPropertyPrefix,10,0.937740914,Fetches the name used as a key to lookup properties through the UIManager. This is used as a prefix to all the standard text properties.,;javax.swing.plaf.basic.BasicEditorPaneUI.getPropertyPrefix();javax.swing.plaf.basic.BasicFormattedTextFieldUI.getPropertyPrefix();javax.swing.plaf.basic.BasicPasswordFieldUI.getPropertyPrefix();javax.swing.plaf.basic.BasicTextAreaUI.getPropertyPrefix();javax.swing.plaf.basic.BasicTextFieldUI.getPropertyPrefix();javax.swing.plaf.basic.BasicTextPaneUI.getPropertyPrefix();javax.swing.plaf.basic.BasicTextUI.getPropertyPrefix();javax.swing.plaf.synth.SynthFormattedTextFieldUI.getPropertyPrefix();javax.swing.plaf.synth.SynthPasswordFieldUI.getPropertyPrefix();javax.swing.plaf.synth.SynthTextPaneUI.getPropertyPrefix(),;0.94;0.94;0.91;0.91;0.94;0.94;0.87;0.94;0.91;0.94
getRGB,10,0.405215854,"Returns the color/alpha components for the specified pixel in the default RGB color model format. A color conversion is done if necessary. The pixel value is specified by an array of data elements of type transferType passed in as an object reference. The returned value is in a non pre-multiplied format. If the alpha is premultiplied, this method divides it out of the color components (if the alpha value is 0, the color values will be 0). Since ComponentColorModel can be subclassed, subclasses inherit the implementation of this method and if they don't override it then they throw an exception if they use an unsupported transferType.",";java.awt.Color.getRGB();java.awt.image.BufferedImage.getRGB(int,int);java.awt.image.BufferedImage.getRGB(int,int,int,int,int[],int,int);java.awt.image.ColorModel.getRGB(int);java.awt.image.ColorModel.getRGB(Object);java.awt.image.ComponentColorModel.getRGB(int);java.awt.image.ComponentColorModel.getRGB(Object);java.awt.image.DirectColorModel.getRGB(int);java.awt.image.DirectColorModel.getRGB(Object);java.awt.image.IndexColorModel.getRGB(int)",;0.10;0.21;0.21;0.40;0.39;0.36;0.41;0.40;0.37;0.27
getRowCount,10,0.356127207,Returns the number of rows that are being displayed.,;javax.swing.DefaultRowSorter.ModelWrapper.getRowCount();javax.swing.JTable.getRowCount();javax.swing.JTree.getRowCount();javax.swing.plaf.TreeUI.getRowCount(JTree);javax.swing.plaf.basic.BasicTreeUI.getRowCount(JTree);javax.swing.plaf.multi.MultiTreeUI.getRowCount(JTree);javax.swing.table.DefaultTableModel.getRowCount();javax.swing.tree.AbstractLayoutCache.getRowCount();javax.swing.tree.FixedHeightLayoutCache.getRowCount();javax.swing.tree.VariableHeightLayoutCache.getRowCount(),;0.33;0.17;0.15;0.36;0.36;0.10;0.31;0.10;0.34;0.34
getString,10,0.163182965,"Returns a string from the defaults that is appropriate for the given locale. If the value for key is not a String, null is returned.",";java.util.ResourceBundle.getString(String);javax.swing.JProgressBar.getString();javax.swing.UIDefaults.getString(Object);javax.swing.UIDefaults.getString(Object,Locale);javax.swing.UIManager.getString(Object);javax.swing.UIManager.getString(Object,Locale);javax.swing.plaf.synth.SynthStyle.getString(SynthContext,Object,String);javax.swing.text.GapContent.getString(int,int);javax.swing.text.StringContent.getString(int,int);javax.swing.text.html.parser.Entity.getString()",;0.10;0.10;0.16;0.16;0.16;0.16;0.10;0.14;0.14;0.10
getSystemId,10,0.302519657,Get the system identifier that was set with setSystemId.,;javax.xml.transform.dom.DOMResult.getSystemId();javax.xml.transform.dom.DOMSource.getSystemId();javax.xml.transform.sax.SAXResult.getSystemId();javax.xml.transform.sax.SAXSource.getSystemId();javax.xml.transform.stax.StAXResult.getSystemId();javax.xml.transform.stax.StAXSource.getSystemId();javax.xml.transform.stream.StreamResult.getSystemId();javax.xml.transform.stream.StreamSource.getSystemId();org.xml.sax.InputSource.getSystemId();org.xml.sax.helpers.LocatorImpl.getSystemId(),;0.10;0.15;0.30;0.15;0.10;0.13;0.30;0.30;0.13;0.10
getTarget,10,0.2,Returns the container that uses this layout manager.,;java.beans.EventHandler.getTarget();java.beans.Statement.getTarget();java.lang.invoke.CallSite.getTarget();java.lang.invoke.ConstantCallSite.getTarget();java.lang.invoke.MutableCallSite.getTarget();java.lang.invoke.VolatileCallSite.getTarget();javax.accessibility.AccessibleRelation.getTarget();javax.swing.BoxLayout.getTarget();javax.swing.OverlayLayout.getTarget();javax.swing.text.html.HTMLFrameHyperlinkEvent.getTarget(),;0.10;0.10;0.14;0.15;0.18;0.19;0.10;0.20;0.20;0.10
lazySet,10,0.47878506,Eventually sets to the given value.,";java.util.concurrent.atomic.AtomicBoolean.lazySet(boolean);java.util.concurrent.atomic.AtomicInteger.lazySet(int);java.util.concurrent.atomic.AtomicIntegerArray.lazySet(int,int);java.util.concurrent.atomic.AtomicIntegerFieldUpdater.lazySet(T,int);java.util.concurrent.atomic.AtomicLong.lazySet(long);java.util.concurrent.atomic.AtomicLongArray.lazySet(int,long);java.util.concurrent.atomic.AtomicLongFieldUpdater.lazySet(T,long);java.util.concurrent.atomic.AtomicReference.lazySet(V);java.util.concurrent.atomic.AtomicReferenceArray.lazySet(int,E);java.util.concurrent.atomic.AtomicReferenceFieldUpdater.lazySet(T,V)",;0.48;0.48;0.41;0.30;0.48;0.41;0.30;0.48;0.41;0.30
listIterator,10,0.414161065,"Returns a list iterator over the elements in this list (in proper sequence), starting at the specified position in the list. The specified index indicates the first element that would be returned by an initial call to next. An initial call to previous would return the element with the specified index minus one. The returned list iterator is fail-fast.",;java.util.AbstractList.listIterator();java.util.AbstractList.listIterator(int);java.util.AbstractSequentialList.listIterator(int);java.util.ArrayList.listIterator(int);java.util.ArrayList.listIterator();java.util.LinkedList.listIterator(int);java.util.Vector.listIterator(int);java.util.Vector.listIterator();java.util.concurrent.CopyOnWriteArrayList.listIterator();java.util.concurrent.CopyOnWriteArrayList.listIterator(int),;0.32;0.26;0.30;0.41;0.37;0.24;0.41;0.37;0.31;0.38
newPermissionCollection,10,0.391649896,"Returns a new PermissionCollection object for storing SocketPermission objects. SocketPermission objects must be stored in a manner that allows them to be inserted into the collection in any order, but that also enables the PermissionCollection implies method to be implemented in an efficient (and consistent) manner.",;java.net.SocketPermission.newPermissionCollection();java.security.AllPermission.newPermissionCollection();java.security.BasicPermission.newPermissionCollection();java.security.Permission.newPermissionCollection();java.security.UnresolvedPermission.newPermissionCollection();java.util.PropertyPermission.newPermissionCollection();javax.management.MBeanServerPermission.newPermissionCollection();javax.security.auth.PrivateCredentialPermission.newPermissionCollection();javax.security.auth.kerberos.DelegationPermission.newPermissionCollection();javax.security.auth.kerberos.ServicePermission.newPermissionCollection(),;0.39;0.25;0.38;0.12;0.25;0.25;0.10;0.10;0.37;0.37
nextDouble,10,0.382430952,Returns a pseudorandom double value between the specified origin (inclusive) and bound (exclusive).,";java.text.ChoiceFormat.nextDouble(double);java.text.ChoiceFormat.nextDouble(double,boolean);java.util.Random.nextDouble();java.util.Scanner.nextDouble();java.util.SplittableRandom.nextDouble();java.util.SplittableRandom.nextDouble(double);java.util.SplittableRandom.nextDouble(double,double);java.util.concurrent.ThreadLocalRandom.nextDouble();java.util.concurrent.ThreadLocalRandom.nextDouble(double);java.util.concurrent.ThreadLocalRandom.nextDouble(double,double)",;0.11;0.12;0.10;0.10;0.37;0.37;0.38;0.37;0.37;0.38
nextInt,10,0.388360115,Returns a pseudorandom int value between zero (inclusive) and the specified bound (exclusive).,";java.util.Random.nextInt();java.util.Random.nextInt(int);java.util.Scanner.nextInt();java.util.Scanner.nextInt(int);java.util.SplittableRandom.nextInt();java.util.SplittableRandom.nextInt(int);java.util.SplittableRandom.nextInt(int,int);java.util.concurrent.ThreadLocalRandom.nextInt();java.util.concurrent.ThreadLocalRandom.nextInt(int);java.util.concurrent.ThreadLocalRandom.nextInt(int,int)",;0.10;0.12;0.10;0.11;0.27;0.39;0.38;0.27;0.39;0.38
search,10,0.8,Description copied from interface:DirContext,";java.util.Stack.search(Object);java.util.concurrent.ConcurrentHashMap.search(long,BiFunction&lt;?,?,?);javax.naming.directory.InitialDirContext.search(String,Attributes);javax.naming.directory.InitialDirContext.search(Name,Attributes);javax.naming.directory.InitialDirContext.search(String,Attributes,String[]);javax.naming.directory.InitialDirContext.search(Name,Attributes,String[]);javax.naming.directory.InitialDirContext.search(String,String,SearchControls);javax.naming.directory.InitialDirContext.search(Name,String,SearchControls);javax.naming.directory.InitialDirContext.search(String,String,Object[],SearchControls);javax.naming.directory.InitialDirContext.search(Name,String,Object[],SearchControls)",;0.10;0.10;0.80;0.80;0.80;0.80;0.80;0.80;0.80;0.80
setMaximum,10,0.1610726,"Sets the slider's maximum value to maximum. This method forwards the new maximum value to the model. The data model (an instance of BoundedRangeModel) handles any mathematical issues arising from assigning faulty values. See the BoundedRangeModel documentation for details. If the new maximum value is different from the previous maximum value, all change listeners are notified.",;java.awt.Scrollbar.setMaximum(int);java.awt.ScrollPaneAdjustable.setMaximum(int);javax.swing.DefaultBoundedRangeModel.setMaximum(int);javax.swing.JInternalFrame.setMaximum(boolean);javax.swing.JProgressBar.setMaximum(int);javax.swing.JScrollBar.setMaximum(int);javax.swing.JSlider.setMaximum(int);javax.swing.ProgressMonitor.setMaximum(int);javax.swing.SpinnerNumberModel.setMaximum(Comparable);javax.swing.text.InternationalFormatter.setMaximum(Comparable),;0.12;0.10;0.10;0.10;0.16;0.10;0.16;0.10;0.11;0.10
setMessage,10,0.188067509,"Sets the parameters for a MIDI message that takes one or two data bytes. If the message takes only one data byte, the second data byte is ignored; if the message does not take any data bytes, both data bytes are ignored.",";java.util.logging.LogRecord.setMessage(String);javax.sound.midi.MetaMessage.setMessage(int,byte[],int);javax.sound.midi.MidiMessage.setMessage(byte[],int);javax.sound.midi.ShortMessage.setMessage(int);javax.sound.midi.ShortMessage.setMessage(int,int,int);javax.sound.midi.ShortMessage.setMessage(int,int,int,int);javax.sound.midi.SysexMessage.setMessage(byte[],int);javax.sound.midi.SysexMessage.setMessage(int,byte[],int);javax.swing.JOptionPane.setMessage(Object);javax.xml.bind.helpers.ValidationEventImpl.setMessage(String)",;0.10;0.10;0.13;0.11;0.19;0.17;0.14;0.11;0.10;0.10
setPixel,10,0.753046367,Sets a pixel in the DataBuffer using an int array of samples for input. ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds.,";java.awt.image.BandedSampleModel.setPixel(int,int,int[],DataBuffer);java.awt.image.ComponentSampleModel.setPixel(int,int,int[],DataBuffer);java.awt.image.MultiPixelPackedSampleModel.setPixel(int,int,int[],DataBuffer);java.awt.image.SampleModel.setPixel(int,int,int[],DataBuffer);java.awt.image.SampleModel.setPixel(int,int,float[],DataBuffer);java.awt.image.SampleModel.setPixel(int,int,double[],DataBuffer);java.awt.image.SinglePixelPackedSampleModel.setPixel(int,int,int[],DataBuffer);java.awt.image.WritableRaster.setPixel(int,int,int[]);java.awt.image.WritableRaster.setPixel(int,int,float[]);java.awt.image.WritableRaster.setPixel(int,int,double[])",;0.75;0.69;0.58;0.75;0.70;0.35;0.75;0.69;0.65;0.65
setRect,10,0.384236267,Sets the location and size of this Rectangle2D to the specified double values.,";java.awt.Rectangle.setRect(double,double,double,double);java.awt.geom.Rectangle2D.setRect(double,double,double,double);java.awt.geom.Rectangle2D.setRect(Rectangle2D);java.awt.geom.Rectangle2D.Double.setRect(double,double,double,double);java.awt.geom.Rectangle2D.Double.setRect(Rectangle2D);java.awt.geom.Rectangle2D.Float.setRect(float,float,float,float);java.awt.geom.Rectangle2D.Float.setRect(double,double,double,double);java.awt.geom.Rectangle2D.Float.setRect(Rectangle2D);java.awt.image.WritableRaster.setRect(Raster);java.awt.image.WritableRaster.setRect(int,int,Raster)",;0.10;0.38;0.30;0.38;0.30;0.35;0.38;0.30;0.12;0.11
validate,10,0.3,Overridden for performance reasons. See the Implementation Note for more information.,";java.awt.Component.validate();java.awt.Container.validate();java.awt.image.VolatileImage.validate(GraphicsConfiguration);java.security.cert.CertPathValidator.validate(CertPath,CertPathParameters);java.util.concurrent.locks.StampedLock.validate(long);javax.swing.DefaultListCellRenderer.validate();javax.swing.table.DefaultTableCellRenderer.validate();javax.swing.tree.DefaultTreeCellRenderer.validate();javax.xml.validation.Validator.validate(Source);javax.xml.validation.Validator.validate(Source,Result)",;0.10;0.10;0.10;0.10;0.10;0.30;0.30;0.30;0.10;0.10
zonedDateTime,10,0.8,Description copied from interface:Chronology,";java.time.chrono.HijrahChronology.zonedDateTime(TemporalAccessor);java.time.chrono.HijrahChronology.zonedDateTime(Instant,ZoneId);java.time.chrono.IsoChronology.zonedDateTime(TemporalAccessor);java.time.chrono.IsoChronology.zonedDateTime(Instant,ZoneId);java.time.chrono.JapaneseChronology.zonedDateTime(TemporalAccessor);java.time.chrono.JapaneseChronology.zonedDateTime(Instant,ZoneId);java.time.chrono.MinguoChronology.zonedDateTime(TemporalAccessor);java.time.chrono.MinguoChronology.zonedDateTime(Instant,ZoneId);java.time.chrono.ThaiBuddhistChronology.zonedDateTime(TemporalAccessor);java.time.chrono.ThaiBuddhistChronology.zonedDateTime(Instant,ZoneId)",;0.80;0.80;0.14;0.14;0.80;0.80;0.80;0.80;0.80;0.80
createPropertyChangeListener,11,0.258377737,Creates a PropertyChangeListener which will be added to the combo box. If this method returns null then it will not be added to the combo box.,;javax.swing.plaf.basic.BasicComboBoxUI.createPropertyChangeListener();javax.swing.plaf.basic.BasicComboPopup.createPropertyChangeListener();javax.swing.plaf.basic.BasicDesktopPaneUI.createPropertyChangeListener();javax.swing.plaf.basic.BasicListUI.createPropertyChangeListener();javax.swing.plaf.basic.BasicMenuItemUI.createPropertyChangeListener(JComponent);javax.swing.plaf.basic.BasicMenuUI.createPropertyChangeListener(JComponent);javax.swing.plaf.basic.BasicScrollPaneUI.createPropertyChangeListener();javax.swing.plaf.basic.BasicSpinnerUI.createPropertyChangeListener();javax.swing.plaf.basic.BasicSplitPaneUI.createPropertyChangeListener();javax.swing.plaf.basic.BasicTreeUI.createPropertyChangeListener();javax.swing.plaf.metal.MetalComboBoxUI.createPropertyChangeListener(),;0.26;0.26;0.09;0.16;0.24;0.15;0.16;0.11;0.09;0.09;0.15
end,11,0.181259738,"Marks the end of an I/O operation that might block indefinitely. This method should be invoked in tandem with the begin method, using a try...finally block as shown above, in order to implement asynchronous closing and interruption for this channel.",;java.awt.PrintJob.end();java.nio.channels.spi.AbstractInterruptibleChannel.end(boolean);java.nio.channels.spi.AbstractSelector.end();java.util.regex.Matcher.end();java.util.regex.Matcher.end(int);java.util.regex.Matcher.end(String);java.util.zip.Deflater.end();java.util.zip.Inflater.end();javax.swing.undo.CompoundEdit.end();javax.swing.undo.StateEdit.end();javax.swing.undo.UndoManager.end(),;0.09;0.18;0.18;0.10;0.13;0.14;0.18;0.18;0.09;0.09;0.09
getActionListeners,11,0.761596722,Returns an array of all the action listeners registered on this timer.,;java.awt.Button.getActionListeners();java.awt.List.getActionListeners();java.awt.MenuItem.getActionListeners();java.awt.TextField.getActionListeners();java.awt.TrayIcon.getActionListeners();javax.swing.AbstractButton.getActionListeners();javax.swing.DefaultButtonModel.getActionListeners();javax.swing.JComboBox.getActionListeners();javax.swing.JFileChooser.getActionListeners();javax.swing.JTextField.getActionListeners();javax.swing.Timer.getActionListeners(),;0.76;0.76;0.72;0.76;0.76;0.52;0.76;0.52;0.72;0.52;0.76
getComponents,11,0.435289811,"Returns an array of unnormalized color/alpha components given a pixel in this ColorModel. The pixel value is specified by an array of data elements of type transferType passed in as an object reference. If pixel is not a primitive array of type transferType, a ClassCastException is thrown. An ArrayIndexOutOfBoundsException is thrown if pixel is not large enough to hold a pixel value for this ColorModel. If the components array is null, a new array is allocated. The components array is returned. Color/alpha components are stored in the components array starting at offset, even if the array is allocated by this method. An ArrayIndexOutOfBoundsException is thrown if the components array is not null and is not large enough to hold all the color and alpha components, starting at offset. Since DirectColorModel can be subclassed, subclasses inherit the implementation of this method and if they don't override it then they throw an exception if they use an unsupported transferType.",";java.awt.Color.getComponents(float[]);java.awt.Color.getComponents(ColorSpace,float[]);java.awt.Container.getComponents();java.awt.image.ColorModel.getComponents(int,int[],int);java.awt.image.ColorModel.getComponents(Object,int[],int);java.awt.image.ComponentColorModel.getComponents(int,int[],int);java.awt.image.ComponentColorModel.getComponents(Object,int[],int);java.awt.image.DirectColorModel.getComponents(int,int[],int);java.awt.image.DirectColorModel.getComponents(Object,int[],int);java.awt.image.IndexColorModel.getComponents(int,int[],int);java.awt.image.IndexColorModel.getComponents(Object,int[],int)",;0.19;0.19;0.09;0.39;0.40;0.21;0.33;0.37;0.44;0.38;0.42
getDefault,11,0.183296863,Gets the system-wide response cache.,;java.net.CookieHandler.getDefault();java.net.ProxySelector.getDefault();java.net.ResponseCache.getDefault();java.nio.file.FileSystems.getDefault();java.util.Locale.getDefault();java.util.Locale.getDefault(Locale.Category);javax.net.ServerSocketFactory.getDefault();javax.net.SocketFactory.getDefault();javax.net.ssl.SSLContext.getDefault();javax.net.ssl.SSLServerSocketFactory.getDefault();javax.net.ssl.SSLSocketFactory.getDefault(),;0.18;0.18;0.18;0.09;0.17;0.17;0.18;0.18;0.11;0.18;0.18
getGraphics,11,0.472381484,Creates a graphics context for this component. This method will return null if this component is currently not displayable.,;java.awt.Component.getGraphics();java.awt.Image.getGraphics();java.awt.PrintJob.getGraphics();java.awt.image.BufferedImage.getGraphics();java.awt.image.VolatileImage.getGraphics();javax.swing.JApplet.getGraphics();javax.swing.JComponent.getGraphics();javax.swing.JDialog.getGraphics();javax.swing.JFrame.getGraphics();javax.swing.JWindow.getGraphics();javax.swing.text.View.getGraphics(),;0.47;0.18;0.09;0.18;0.18;0.47;0.09;0.47;0.47;0.47;0.09
getInt,11,0.153332189,"Returns an integer from the defaults that is appropriate for the given locale. If the value for key is not an Integer, or does not exist, 0 is returned.",";java.lang.reflect.Array.getInt(Object,int);java.lang.reflect.Field.getInt(Object);java.nio.ByteBuffer.getInt();java.nio.ByteBuffer.getInt(int);java.util.prefs.AbstractPreferences.getInt(String,int);java.util.prefs.Preferences.getInt(String,int);javax.swing.UIDefaults.getInt(Object);javax.swing.UIDefaults.getInt(Object,Locale);javax.swing.UIManager.getInt(Object);javax.swing.UIManager.getInt(Object,Locale);javax.swing.plaf.synth.SynthStyle.getInt(SynthContext,Object,int)",;0.09;0.09;0.13;0.13;0.10;0.10;0.15;0.15;0.15;0.15;0.09
isAfter,11,0.199094763,Checks if this year-month is after the specified year-month.,";java.time.Instant.isAfter(Instant);java.time.LocalDate.isAfter(ChronoLocalDate);java.time.LocalDateTime.isAfter(ChronoLocalDateTime&lt;?&gt;);java.time.LocalTime.isAfter(LocalTime);java.time.MonthDay.isAfter(MonthDay);java.time.OffsetDateTime.isAfter(OffsetDateTime);java.time.OffsetTime.isAfter(OffsetTime);java.time.Year.isAfter(Year);java.time.YearMonth.isAfter(YearMonth);javax.swing.text.BoxView.isAfter(int,int,Rectangle);javax.swing.text.CompositeView.isAfter(int,int,Rectangle)",;0.19;0.19;0.19;0.18;0.18;0.15;0.15;0.19;0.20;0.09;0.09
isBefore,11,0.199094763,Checks if this year-month is before the specified year-month.,";java.time.Instant.isBefore(Instant);java.time.LocalDate.isBefore(ChronoLocalDate);java.time.LocalDateTime.isBefore(ChronoLocalDateTime&lt;?&gt;);java.time.LocalTime.isBefore(LocalTime);java.time.MonthDay.isBefore(MonthDay);java.time.OffsetDateTime.isBefore(OffsetDateTime);java.time.OffsetTime.isBefore(OffsetTime);java.time.Year.isBefore(Year);java.time.YearMonth.isBefore(YearMonth);javax.swing.text.BoxView.isBefore(int,int,Rectangle);javax.swing.text.CompositeView.isBefore(int,int,Rectangle)",;0.19;0.19;0.19;0.18;0.18;0.15;0.15;0.19;0.20;0.09;0.09
isBorderOpaque,11,0.656065973,Returns whether or not the border is opaque.,;javax.swing.border.AbstractBorder.isBorderOpaque();javax.swing.border.BevelBorder.isBorderOpaque();javax.swing.border.CompoundBorder.isBorderOpaque();javax.swing.border.EmptyBorder.isBorderOpaque();javax.swing.border.EtchedBorder.isBorderOpaque();javax.swing.border.LineBorder.isBorderOpaque();javax.swing.border.MatteBorder.isBorderOpaque();javax.swing.border.SoftBevelBorder.isBorderOpaque();javax.swing.border.TitledBorder.isBorderOpaque();javax.swing.plaf.BorderUIResource.isBorderOpaque();javax.swing.plaf.basic.BasicBorders.SplitPaneBorder.isBorderOpaque(),;0.09;0.66;0.46;0.46;0.66;0.66;0.66;0.66;0.66;0.18;0.18
isSelected,11,0.126250129,Returns true if the menu is currently selected (highlighted).,;java.awt.List.isSelected(int);java.awt.im.InputMethodHighlight.isSelected();javax.swing.AbstractButton.isSelected();javax.swing.ButtonGroup.isSelected(ButtonModel);javax.swing.DefaultButtonModel.isSelected();javax.swing.DefaultSingleSelectionModel.isSelected();javax.swing.JInternalFrame.isSelected();javax.swing.JMenu.isSelected();javax.swing.JMenuBar.isSelected();javax.swing.JToggleButton.ToggleButtonModel.isSelected();javax.swing.text.html.Option.isSelected(),;0.09;0.09;0.09;0.09;0.09;0.09;0.09;0.13;0.13;0.09;0.09
isValid,11,0.149821504,"Tells whether or not this key is valid. A key is valid upon creation and remains so until it is cancelled, its channel is closed, or its selector is closed.",;java.awt.Component.isValid();java.awt.image.IndexColorModel.isValid(int);java.awt.image.IndexColorModel.isValid();java.nio.channels.FileLock.isValid();java.nio.channels.MembershipKey.isValid();java.nio.channels.SelectionKey.isValid();java.nio.channels.spi.AbstractSelectionKey.isValid();javax.accessibility.AccessibleHyperlink.isValid();javax.management.ImmutableDescriptor.isValid();javax.swing.text.html.HTMLDocument.Iterator.isValid();javax.xml.datatype.XMLGregorianCalendar.isValid(),;0.09;0.12;0.12;0.14;0.15;0.15;0.09;0.12;0.09;0.09;0.09
processKeyEvent,11,0.181818182,"Processes a key event forwarded from the MenuSelectionManager and changes the menu selection, if necessary, by using MenuSelectionManager's API. Note: you do not have to forward the event to sub-components. This is done automatically by the MenuSelectionManager.",";java.awt.DefaultKeyboardFocusManager.processKeyEvent(Component,KeyEvent);java.awt.KeyboardFocusManager.processKeyEvent(Component,KeyEvent);javax.swing.JComboBox.processKeyEvent(KeyEvent);javax.swing.JComponent.processKeyEvent(KeyEvent);javax.swing.JMenu.processKeyEvent(KeyEvent);javax.swing.JMenuBar.processKeyEvent(KeyEvent,MenuElement[],MenuSelectionManager);javax.swing.JMenuItem.processKeyEvent(KeyEvent,MenuElement[],MenuSelectionManager);javax.swing.JPopupMenu.processKeyEvent(KeyEvent);javax.swing.JPopupMenu.processKeyEvent(KeyEvent,MenuElement[],MenuSelectionManager);javax.swing.MenuSelectionManager.processKeyEvent(KeyEvent);javax.swing.plaf.LayerUI.processKeyEvent(KeyEvent,JLayer&lt;?)",;0.18;0.18;0.09;0.09;0.18;0.09;0.18;0.18;0.18;0.09;0.09
query,11,0.937445219,Queries this time using the specified query. This queries this time using the specified query strategy object. The TemporalQuery object defines the logic to be used to obtain the result. Read the documentation of the query to understand what the result of this method will be. The result of this method is obtained by invoking the TemporalQuery.queryFrom(TemporalAccessor) method on the specified query passing this as the argument.,;java.time.Instant.query(TemporalQuery&lt;R&gt;);java.time.LocalDate.query(TemporalQuery&lt;R&gt;);java.time.LocalDateTime.query(TemporalQuery&lt;R&gt;);java.time.LocalTime.query(TemporalQuery&lt;R&gt;);java.time.MonthDay.query(TemporalQuery&lt;R&gt;);java.time.OffsetDateTime.query(TemporalQuery&lt;R&gt;);java.time.OffsetTime.query(TemporalQuery&lt;R&gt;);java.time.Year.query(TemporalQuery&lt;R&gt;);java.time.YearMonth.query(TemporalQuery&lt;R&gt;);java.time.ZonedDateTime.query(TemporalQuery&lt;R&gt;);java.time.ZoneOffset.query(TemporalQuery&lt;R&gt;),;0.92;0.93;0.94;0.94;0.91;0.94;0.94;0.93;0.91;0.94;0.92
readResolve,11,0.482281593,Resolves instances being deserialized to the predefined constants.,;java.awt.AWTKeyStroke.readResolve();java.awt.color.ICC_Profile.readResolve();java.awt.font.TextAttribute.readResolve();java.security.cert.Certificate.CertificateRep.readResolve();java.security.cert.CertPath.CertPathRep.readResolve();java.text.AttributedCharacterIterator.Attribute.readResolve();java.text.DateFormat.Field.readResolve();java.text.MessageFormat.Field.readResolve();java.text.NumberFormat.Field.readResolve();javax.management.openmbean.SimpleType.readResolve();javax.print.attribute.EnumSyntax.readResolve(),;0.09;0.23;0.48;0.09;0.09;0.48;0.48;0.48;0.48;0.09;0.09
removeUpdate,11,0.50828112,Gives notification that something was removed from the document in a location that this view is responsible for.,";javax.swing.text.AbstractDocument.removeUpdate(AbstractDocument.DefaultDocumentEvent);javax.swing.text.DefaultStyledDocument.removeUpdate(AbstractDocument.DefaultDocumentEvent);javax.swing.text.FieldView.removeUpdate(DocumentEvent,Shape,ViewFactory);javax.swing.text.FlowView.removeUpdate(DocumentEvent,Shape,ViewFactory);javax.swing.text.FlowView.FlowStrategy.removeUpdate(FlowView,DocumentEvent,Rectangle);javax.swing.text.GlyphView.removeUpdate(DocumentEvent,Shape,ViewFactory);javax.swing.text.PlainDocument.removeUpdate(AbstractDocument.DefaultDocumentEvent);javax.swing.text.PlainView.removeUpdate(DocumentEvent,Shape,ViewFactory);javax.swing.text.WrappedPlainView.removeUpdate(DocumentEvent,Shape,ViewFactory);javax.swing.text.ZoneView.removeUpdate(DocumentEvent,Shape,ViewFactory);javax.swing.text.html.InlineView.removeUpdate(DocumentEvent,Shape,ViewFactory)",;0.14;0.09;0.51;0.51;0.45;0.44;0.14;0.51;0.48;0.33;0.43
setEnabled,11,0.292387142,Enables or disables the button.,;java.awt.Component.setEnabled(boolean);java.awt.MenuItem.setEnabled(boolean);javax.swing.AbstractAction.setEnabled(boolean);javax.swing.AbstractButton.setEnabled(boolean);javax.swing.DefaultButtonModel.setEnabled(boolean);javax.swing.JComboBox.setEnabled(boolean);javax.swing.JComponent.setEnabled(boolean);javax.swing.JMenuItem.setEnabled(boolean);javax.swing.JScrollBar.setEnabled(boolean);javax.swing.ToolTipManager.setEnabled(boolean);javax.swing.plaf.metal.MetalComboBoxButton.setEnabled(boolean),;0.11;0.09;0.09;0.29;0.29;0.09;0.12;0.23;0.09;0.26;0.09
setFont,11,0.181818182,Sets the font for this component.,;java.awt.Component.setFont(Font);java.awt.Container.setFont(Font);java.awt.Graphics.setFont(Font);java.awt.MenuComponent.setFont(Font);javax.swing.DebugGraphics.setFont(Font);javax.swing.JComponent.setFont(Font);javax.swing.JSlider.setFont(Font);javax.swing.JTextArea.setFont(Font);javax.swing.JTextField.setFont(Font);javax.swing.tree.DefaultTreeCellEditor.setFont(Font);javax.swing.tree.DefaultTreeCellRenderer.setFont(Font),;0.17;0.17;0.09;0.10;0.09;0.18;0.18;0.16;0.16;0.09;0.09
show,11,0.309397807,"Deprecated.As of JDK version 1.5, replaced by setVisible(boolean).",";java.awt.CardLayout.show(Container,String);java.awt.Component.show();java.awt.Component.show(boolean);java.awt.Dialog.show();java.awt.PopupMenu.show(Component,int,int);java.awt.Window.show();java.awt.image.BufferStrategy.show();javax.swing.JInternalFrame.show();javax.swing.JPopupMenu.show(Component,int,int);javax.swing.Popup.show();javax.swing.plaf.basic.BasicComboPopup.show()",;0.09;0.31;0.31;0.31;0.10;0.31;0.09;0.09;0.09;0.09;0.09
start,11,0.137240515,Returns the start index of the subsequence captured by the given named-capturing group during the previous match operation.,;java.applet.Applet.start();java.lang.Thread.start();java.util.regex.Matcher.start();java.util.regex.Matcher.start(int);java.util.regex.Matcher.start(String);javax.management.monitor.CounterMonitor.start();javax.management.monitor.GaugeMonitor.start();javax.management.monitor.Monitor.start();javax.management.monitor.StringMonitor.start();javax.management.timer.Timer.start();javax.swing.Timer.start(),;0.09;0.09;0.11;0.13;0.14;0.09;0.09;0.00;0.09;0.09;0.09
addActionListener,12,0.296695596,"Adds the specified action listener to receive action events from this menu item. If l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Button.addActionListener(ActionListener);java.awt.List.addActionListener(ActionListener);java.awt.MenuItem.addActionListener(ActionListener);java.awt.TextField.addActionListener(ActionListener);java.awt.TrayIcon.addActionListener(ActionListener);javax.swing.AbstractButton.addActionListener(ActionListener);javax.swing.DefaultButtonModel.addActionListener(ActionListener);javax.swing.JComboBox.addActionListener(ActionListener);javax.swing.JFileChooser.addActionListener(ActionListener);javax.swing.JTextField.addActionListener(ActionListener);javax.swing.Timer.addActionListener(ActionListener);javax.swing.plaf.basic.BasicComboBoxEditor.addActionListener(ActionListener),;0.29;0.27;0.30;0.30;0.20;0.20;0.20;0.08;0.19;0.11;0.08;0.08
addAttribute,12,0.26497648,Adds a new attribute to a previously defined element that will be defined by a list of values.,";java.text.AttributedString.addAttribute(AttributedCharacterIterator.Attribute,Object);java.text.AttributedString.addAttribute(AttributedCharacterIterator.Attribute,Object,int,int);javax.imageio.metadata.IIOMetadataFormatImpl.addAttribute(String,String,int,boolean,String);javax.imageio.metadata.IIOMetadataFormatImpl.addAttribute(String,String,int,boolean,String,List&lt;String&gt;);javax.imageio.metadata.IIOMetadataFormatImpl.addAttribute(String,String,int,boolean,String,String,String,boolean,boolean);javax.imageio.metadata.IIOMetadataFormatImpl.addAttribute(String,String,int,boolean,int,int);javax.swing.text.SimpleAttributeSet.addAttribute(Object,Object);javax.swing.text.StyleContext.addAttribute(AttributeSet,Object,Object);javax.swing.text.html.StyleSheet.addAttribute(AttributeSet,Object,Object);org.xml.sax.ext.Attributes2Impl.addAttribute(String,String,String,String,String);org.xml.sax.helpers.AttributeListImpl.addAttribute(String,String,String);org.xml.sax.helpers.AttributesImpl.addAttribute(String,String,String,String,String)",;0.17;0.14;0.21;0.26;0.26;0.26;0.17;0.14;0.13;0.11;0.00;0.12
compareAndSet,12,0.541760054,Atomically sets the value to the given updated value if the current value == the expected value.,";java.util.concurrent.atomic.AtomicBoolean.compareAndSet(boolean,boolean);java.util.concurrent.atomic.AtomicInteger.compareAndSet(int,int);java.util.concurrent.atomic.AtomicIntegerArray.compareAndSet(int,int,int);java.util.concurrent.atomic.AtomicIntegerFieldUpdater.compareAndSet(T,int,int);java.util.concurrent.atomic.AtomicLong.compareAndSet(long,long);java.util.concurrent.atomic.AtomicLongArray.compareAndSet(int,long,long);java.util.concurrent.atomic.AtomicLongFieldUpdater.compareAndSet(T,long,long);java.util.concurrent.atomic.AtomicMarkableReference.compareAndSet(V,V,boolean,boolean);java.util.concurrent.atomic.AtomicReference.compareAndSet(V,V);java.util.concurrent.atomic.AtomicReferenceArray.compareAndSet(int,E,E);java.util.concurrent.atomic.AtomicReferenceFieldUpdater.compareAndSet(T,V,V);java.util.concurrent.atomic.AtomicStampedReference.compareAndSet(V,V,int,int)",;0.54;0.54;0.51;0.39;0.54;0.51;0.39;0.20;0.54;0.51;0.39;0.20
copyOf,12,0.775623853,"Copies the specified array, truncating or padding with zeros (if necessary) so the copy has the specified length. For all indices that are valid in both the original array and the copy, the two arrays will contain identical values. For any indices that are valid in the copy but not the original, the copy will contain 0. Such indices will exist if and only if the specified length is greater than that of the original array.",";java.util.Arrays.copyOf(T[],int);java.util.Arrays.copyOf(U[],int,Class&lt;?);java.util.Arrays.copyOf(byte[],int);java.util.Arrays.copyOf(short[],int);java.util.Arrays.copyOf(int[],int);java.util.Arrays.copyOf(long[],int);java.util.Arrays.copyOf(char[],int);java.util.Arrays.copyOf(float[],int);java.util.Arrays.copyOf(double[],int);java.util.Arrays.copyOf(boolean[],int);java.util.EnumSet.copyOf(EnumSet&lt;E&gt;);java.util.EnumSet.copyOf(Collection&lt;E&gt;)",;0.69;0.72;0.77;0.77;0.78;0.77;0.76;0.77;0.77;0.76;0.09;0.09
createDispatch,12,0.496469628,Creates a Dispatch instance for use with JAXB generated objects.,";javax.xml.ws.Service.createDispatch(QName,Class&lt;T&gt;,Service.Mode);javax.xml.ws.Service.createDispatch(QName,Class&lt;T&gt;,Service.Mode,WebServiceFeature...);javax.xml.ws.Service.createDispatch(EndpointReference,Class&lt;T&gt;,Service.Mode,WebServiceFeature...);javax.xml.ws.Service.createDispatch(QName,JAXBContext,Service.Mode);javax.xml.ws.Service.createDispatch(QName,JAXBContext,Service.Mode,WebServiceFeature...);javax.xml.ws.Service.createDispatch(EndpointReference,JAXBContext,Service.Mode,WebServiceFeature...);javax.xml.ws.spi.ServiceDelegate.createDispatch(QName,Class&lt;T&gt;,Service.Mode);javax.xml.ws.spi.ServiceDelegate.createDispatch(QName,Class&lt;T&gt;,Service.Mode,WebServiceFeature...);javax.xml.ws.spi.ServiceDelegate.createDispatch(EndpointReference,Class&lt;T&gt;,Service.Mode,WebServiceFeature...);javax.xml.ws.spi.ServiceDelegate.createDispatch(QName,JAXBContext,Service.Mode);javax.xml.ws.spi.ServiceDelegate.createDispatch(QName,JAXBContext,Service.Mode,WebServiceFeature...);javax.xml.ws.spi.ServiceDelegate.createDispatch(EndpointReference,JAXBContext,Service.Mode,WebServiceFeature...)",;0.46;0.46;0.35;0.50;0.50;0.35;0.46;0.46;0.35;0.50;0.50;0.35
doubles,12,0.429374355,Returns a stream producing the given streamSize number of pseudorandom double values from this generator and/or one split from it; each value is between zero (inclusive) and one (exclusive).,";java.util.Random.doubles(long);java.util.Random.doubles();java.util.Random.doubles(long,double,double);java.util.Random.doubles(double,double);java.util.SplittableRandom.doubles(long);java.util.SplittableRandom.doubles();java.util.SplittableRandom.doubles(long,double,double);java.util.SplittableRandom.doubles(double,double);java.util.concurrent.ThreadLocalRandom.doubles(long);java.util.concurrent.ThreadLocalRandom.doubles();java.util.concurrent.ThreadLocalRandom.doubles(long,double,double);java.util.concurrent.ThreadLocalRandom.doubles(double,double)",;0.39;0.37;0.32;0.31;0.43;0.40;0.42;0.41;0.36;0.32;0.37;0.34
engineUpdate,12,0.218932962,"Updates the data to be signed or verified using the specified ByteBuffer. Processes the data.remaining() bytes starting at at data.position(). Upon return, the buffer's position will be equal to its limit; its limit will not have changed.",";java.security.MessageDigestSpi.engineUpdate(byte);java.security.MessageDigestSpi.engineUpdate(byte[],int,int);java.security.MessageDigestSpi.engineUpdate(ByteBuffer);java.security.SignatureSpi.engineUpdate(byte);java.security.SignatureSpi.engineUpdate(byte[],int,int);java.security.SignatureSpi.engineUpdate(ByteBuffer);javax.crypto.CipherSpi.engineUpdate(byte[],int,int);javax.crypto.CipherSpi.engineUpdate(byte[],int,int,byte[],int);javax.crypto.CipherSpi.engineUpdate(ByteBuffer,ByteBuffer);javax.crypto.MacSpi.engineUpdate(byte);javax.crypto.MacSpi.engineUpdate(byte[],int,int);javax.crypto.MacSpi.engineUpdate(ByteBuffer)",;0.13;0.17;0.20;0.15;0.19;0.22;0.14;0.16;0.18;0.08;0.08;0.18
getAvailableLocales,12,0.581096296,Returns an array of all locales for which the getInstance methods of this class can return localized instances. The returned array represents the union of locales supported by the Java runtime and by installed DecimalFormatSymbolsProvider implementations. It must contain at least a Locale instance equal to Locale.US.,;java.text.BreakIterator.getAvailableLocales();java.text.Collator.getAvailableLocales();java.text.DateFormat.getAvailableLocales();java.text.DateFormatSymbols.getAvailableLocales();java.text.DecimalFormatSymbols.getAvailableLocales();java.text.NumberFormat.getAvailableLocales();java.time.format.DecimalStyle.getAvailableLocales();java.util.Calendar.getAvailableLocales();java.util.Locale.getAvailableLocales();java.util.spi.LocaleServiceProvider.getAvailableLocales();javax.imageio.ImageReader.getAvailableLocales();javax.imageio.ImageWriter.getAvailableLocales(),;0.57;0.58;0.57;0.58;0.58;0.57;0.08;0.39;0.42;0.19;0.21;0.21
getObject,12,0.162290833,"Retrieves the original (encapsulated) object. This method creates a cipher for the algorithm that had been used in the sealing operation, using an implementation of that algorithm from the given provider. The Cipher object is initialized for decryption, using the given key and the parameters (if any) that had been used in the sealing operation. The encapsulated object is unsealed and de-serialized, before it is returned.",";java.security.GuardedObject.getObject();java.security.SignedObject.getObject();java.util.ResourceBundle.getObject(String);javax.crypto.SealedObject.getObject(Key);javax.crypto.SealedObject.getObject(Cipher);javax.crypto.SealedObject.getObject(Key,String);javax.naming.Binding.getObject();javax.naming.spi.DirStateFactory.Result.getObject();javax.sql.rowset.serial.SerialJavaObject.getObject();javax.sql.rowset.serial.SerialRef.getObject(Map&lt;String,Class&lt;?&gt;&gt;);javax.sql.rowset.serial.SerialRef.getObject();javax.xml.bind.helpers.ValidationEventLocatorImpl.getObject()",;0.08;0.11;0.08;0.16;0.13;0.16;0.08;0.08;0.08;0.12;0.11;0.08
getOrientation,12,0.263571533,Returns the orientation of this scrollbar.,;java.awt.ComponentOrientation.getOrientation(Locale);java.awt.ComponentOrientation.getOrientation(ResourceBundle);java.awt.Scrollbar.getOrientation();java.awt.ScrollPaneAdjustable.getOrientation();java.awt.print.PageFormat.getOrientation();javax.swing.JProgressBar.getOrientation();javax.swing.JScrollBar.getOrientation();javax.swing.JSeparator.getOrientation();javax.swing.JSlider.getOrientation();javax.swing.JSplitPane.getOrientation();javax.swing.JToolBar.getOrientation();javax.swing.plaf.basic.BasicSplitPaneUI.getOrientation(),;0.08;0.08;0.24;0.26;0.26;0.08;0.08;0.26;0.08;0.00;0.08;0.08
getToolTipText,12,0.161552174,Returns the string to be used as the tooltip at the passed in location. This forwards the method onto the root View.,";javax.swing.JComponent.getToolTipText();javax.swing.JComponent.getToolTipText(MouseEvent);javax.swing.JList.getToolTipText(MouseEvent);javax.swing.JTabbedPane.getToolTipText(MouseEvent);javax.swing.JTable.getToolTipText(MouseEvent);javax.swing.JTree.getToolTipText(MouseEvent);javax.swing.plaf.TextUI.getToolTipText(JTextComponent,Point);javax.swing.plaf.basic.BasicTextUI.getToolTipText(JTextComponent,Point);javax.swing.plaf.multi.MultiTextUI.getToolTipText(JTextComponent,Point);javax.swing.table.JTableHeader.getToolTipText(MouseEvent);javax.swing.text.View.getToolTipText(float,float,Shape);javax.swing.text.html.ImageView.getToolTipText(float,float,Shape)",;0.08;0.12;0.12;0.09;0.14;0.14;0.15;0.16;0.08;0.09;0.12;0.08
insertUpdate,12,0.42574659,Gives notification that something was inserted into the document in a location that this view is responsible for.,";javax.swing.text.AbstractDocument.insertUpdate(AbstractDocument.DefaultDocumentEvent,AttributeSet);javax.swing.text.DefaultStyledDocument.insertUpdate(AbstractDocument.DefaultDocumentEvent,AttributeSet);javax.swing.text.FieldView.insertUpdate(DocumentEvent,Shape,ViewFactory);javax.swing.text.FlowView.insertUpdate(DocumentEvent,Shape,ViewFactory);javax.swing.text.FlowView.FlowStrategy.insertUpdate(FlowView,DocumentEvent,Rectangle);javax.swing.text.GlyphView.insertUpdate(DocumentEvent,Shape,ViewFactory);javax.swing.text.PlainDocument.insertUpdate(AbstractDocument.DefaultDocumentEvent,AttributeSet);javax.swing.text.PlainView.insertUpdate(DocumentEvent,Shape,ViewFactory);javax.swing.text.WrappedPlainView.insertUpdate(DocumentEvent,Shape,ViewFactory);javax.swing.text.ZoneView.insertUpdate(DocumentEvent,Shape,ViewFactory);javax.swing.text.html.HTMLDocument.insertUpdate(AbstractDocument.DefaultDocumentEvent,AttributeSet);javax.swing.text.html.InlineView.insertUpdate(DocumentEvent,Shape,ViewFactory)",;0.19;0.24;0.43;0.43;0.31;0.39;0.19;0.43;0.42;0.28;0.24;0.38
ints,12,0.392789574,Returns a stream producing the given streamSize number of pseudorandom int values from this generator and/or one split from it; each value conforms to the given origin (inclusive) and bound (exclusive).,";java.util.Random.ints(long);java.util.Random.ints();java.util.Random.ints(long,int,int);java.util.Random.ints(int,int);java.util.SplittableRandom.ints(long);java.util.SplittableRandom.ints();java.util.SplittableRandom.ints(long,int,int);java.util.SplittableRandom.ints(int,int);java.util.concurrent.ThreadLocalRandom.ints(long);java.util.concurrent.ThreadLocalRandom.ints();java.util.concurrent.ThreadLocalRandom.ints(long,int,int);java.util.concurrent.ThreadLocalRandom.ints(int,int)",;0.32;0.30;0.29;0.28;0.37;0.34;0.39;0.38;0.25;0.20;0.36;0.33
load,12,0.131557253,"Loads the native library specified by the filename argument. The filename argument must be an absolute path name. (for example Runtime.getRuntime().load(""/home/avh/lib/libX11.so"");). If the filename argument, when stripped of any platform-specific library prefix, path, and file extension, indicates a library whose name is, for example, L, and a native library called L is statically linked with the VM, then the JNI_OnLoad_L function exported by the library is invoked rather than attempting to load a dynamic library. A filename matching the argument does not have to exist in the file system. See the JNI Specification for more details. Otherwise, the filename argument is mapped to a native library image in an implementation-dependent manner. First, if there is a security manager, its checkLink method is called with the filename as its argument. This may result in a security exception. This is similar to the method loadLibrary(String), but it accepts a general file name as an argument rather than just a library name, allowing any file of native code to be loaded. The method System.load(String) is the conventional and convenient means of invoking this method.",";java.lang.Runtime.load(String);java.lang.System.load(String);java.nio.MappedByteBuffer.load();java.security.KeyStore.load(InputStream,char[]);java.security.KeyStore.load(KeyStore.LoadStoreParameter);java.security.Provider.load(InputStream);java.util.Properties.load(InputStream);java.util.ServiceLoader.load(Class&lt;S&gt;,ClassLoader);java.util.ServiceLoader.load(Class&lt;S&gt;);javax.management.modelmbean.RequiredModelMBean.load();javax.swing.plaf.synth.SynthLookAndFeel.load(InputStream,Class&lt;?&gt;);javax.swing.plaf.synth.SynthLookAndFeel.load(URL)",;0.13;0.13;0.08;0.10;0.09;0.08;0.09;0.09;0.10;0.08;0.13;0.13
longs,12,0.377679522,Returns a stream producing the given streamSize number of pseudorandom long values from this generator and/or one split from it; each value conforms to the given origin (inclusive) and bound (exclusive).,";java.util.Random.longs(long);java.util.Random.longs();java.util.Random.longs(long,long,long);java.util.Random.longs(long,long);java.util.SplittableRandom.longs(long);java.util.SplittableRandom.longs();java.util.SplittableRandom.longs(long,long,long);java.util.SplittableRandom.longs(long,long);java.util.concurrent.ThreadLocalRandom.longs(long);java.util.concurrent.ThreadLocalRandom.longs();java.util.concurrent.ThreadLocalRandom.longs(long,long,long);java.util.concurrent.ThreadLocalRandom.longs(long,long)",;0.30;0.27;0.24;0.24;0.37;0.33;0.38;0.37;0.25;0.20;0.30;0.32
publish,12,0.207380368,"Creates and publishes an endpoint for the specified implementor object at the given address. The necessary server infrastructure will be created and configured by the JAX-WS implementation using some default configuration. In order to get more control over the server configuration, please use the create(String,Object) and publish(Object) methods instead.",";java.util.logging.ConsoleHandler.publish(LogRecord);java.util.logging.FileHandler.publish(LogRecord);java.util.logging.Handler.publish(LogRecord);java.util.logging.MemoryHandler.publish(LogRecord);java.util.logging.SocketHandler.publish(LogRecord);java.util.logging.StreamHandler.publish(LogRecord);javax.swing.SwingWorker.publish(V...);javax.xml.ws.Endpoint.publish(String);javax.xml.ws.Endpoint.publish(String,Object);javax.xml.ws.Endpoint.publish(String,Object,WebServiceFeature...);javax.xml.ws.Endpoint.publish(Object);javax.xml.ws.Endpoint.publish(HttpContext)",;0.12;0.17;0.13;0.09;0.17;0.09;0.08;0.19;0.21;0.20;0.15;0.15
removeActionListener,12,0.330173456,"Removes the specified action listener so that it no longer receives action events from this text field. If l is null, no exception is thrown and no action is performed. Refer to AWT Threading Issues for details on AWT's threading model.",;java.awt.Button.removeActionListener(ActionListener);java.awt.List.removeActionListener(ActionListener);java.awt.MenuItem.removeActionListener(ActionListener);java.awt.TextField.removeActionListener(ActionListener);java.awt.TrayIcon.removeActionListener(ActionListener);javax.swing.AbstractButton.removeActionListener(ActionListener);javax.swing.DefaultButtonModel.removeActionListener(ActionListener);javax.swing.JComboBox.removeActionListener(ActionListener);javax.swing.JFileChooser.removeActionListener(ActionListener);javax.swing.JTextField.removeActionListener(ActionListener);javax.swing.Timer.removeActionListener(ActionListener);javax.swing.plaf.basic.BasicComboBoxEditor.removeActionListener(ActionListener),;0.31;0.31;0.32;0.33;0.20;0.11;0.14;0.00;0.14;0.15;0.10;0.08
removeNotificationListener,12,0.723431845,Description copied from interface:NotificationEmitter,";javax.management.MBeanServerDelegate.removeNotificationListener(NotificationListener,NotificationFilter,Object);javax.management.MBeanServerDelegate.removeNotificationListener(NotificationListener);javax.management.NotificationBroadcasterSupport.removeNotificationListener(NotificationListener);javax.management.NotificationBroadcasterSupport.removeNotificationListener(NotificationListener,NotificationFilter,Object);javax.management.StandardEmitterMBean.removeNotificationListener(NotificationListener);javax.management.StandardEmitterMBean.removeNotificationListener(NotificationListener,NotificationFilter,Object);javax.management.modelmbean.RequiredModelMBean.removeNotificationListener(NotificationListener);javax.management.modelmbean.RequiredModelMBean.removeNotificationListener(NotificationListener,NotificationFilter,Object);javax.management.remote.rmi.RMIConnectionImpl.removeNotificationListener(ObjectName,ObjectName,Subject);javax.management.remote.rmi.RMIConnectionImpl.removeNotificationListener(ObjectName,ObjectName,MarshalledObject,MarshalledObject,Subject);javax.management.remote.rmi.RMIConnectionImpl_Stub.removeNotificationListener(ObjectName,ObjectName,MarshalledObject,MarshalledObject,Subject);javax.management.remote.rmi.RMIConnectionImpl_Stub.removeNotificationListener(ObjectName,ObjectName,Subject)",;0.72;0.70;0.70;0.72;0.70;0.72;0.08;0.72;0.72;0.72;0.72;0.72
setLayout,12,0.375312276,Sets the LayoutManager. Overridden to conditionally forward the call to the contentPane. Refer to RootPaneContainer for more information.,;java.awt.Container.setLayout(LayoutManager);java.awt.ScrollPane.setLayout(LayoutManager);javax.swing.AbstractButton.setLayout(LayoutManager);javax.swing.Box.setLayout(LayoutManager);javax.swing.JApplet.setLayout(LayoutManager);javax.swing.JDialog.setLayout(LayoutManager);javax.swing.JFrame.setLayout(LayoutManager);javax.swing.JInternalFrame.setLayout(LayoutManager);javax.swing.JLayer.setLayout(LayoutManager);javax.swing.JScrollPane.setLayout(LayoutManager);javax.swing.JToolBar.setLayout(LayoutManager);javax.swing.JWindow.setLayout(LayoutManager),;0.17;0.18;0.15;0.08;0.38;0.38;0.38;0.26;0.16;0.13;0.08;0.38
setProperty,12,0.13832081,"Default implementation of the setProperty method handles the four defined properties in Marshaller. If a provider needs to handle additional properties, it should override this method in a derived class.",";java.lang.System.setProperty(String,String);java.security.Security.setProperty(String,String);java.util.Properties.setProperty(String,String);javax.xml.bind.Binder.setProperty(String,Object);javax.xml.bind.helpers.AbstractMarshallerImpl.setProperty(String,Object);javax.xml.bind.helpers.AbstractUnmarshallerImpl.setProperty(String,Object);javax.xml.crypto.dom.DOMCryptoContext.setProperty(String,Object);javax.xml.soap.SOAPMessage.setProperty(String,Object);javax.xml.stream.XMLOutputFactory.setProperty(String,Object);javax.xml.validation.ValidatorHandler.setProperty(String,Object);org.xml.sax.helpers.ParserAdapter.setProperty(String,Object);org.xml.sax.helpers.XMLFilterImpl.setProperty(String,Object)",;0.10;0.10;0.08;0.08;0.14;0.14;0.08;0.08;0.08;0.09;0.08;0.08
setSystemId,12,0.191086845,"Set the system identifier for this Source. If an input source has already been set, it will set the system ID or that input source, otherwise it will create a new input source. The system identifier is optional if there is a byte stream or a character stream, but it is still useful to provide one, since the application can use it to resolve relative URIs and can include it in error messages and warnings (the parser will attempt to open a connection to the URI only if no byte stream or character stream is specified).",;javax.xml.transform.dom.DOMResult.setSystemId(String);javax.xml.transform.dom.DOMSource.setSystemId(String);javax.xml.transform.sax.SAXResult.setSystemId(String);javax.xml.transform.sax.SAXSource.setSystemId(String);javax.xml.transform.stax.StAXResult.setSystemId(String);javax.xml.transform.stax.StAXSource.setSystemId(String);javax.xml.transform.stream.StreamResult.setSystemId(String);javax.xml.transform.stream.StreamResult.setSystemId(File);javax.xml.transform.stream.StreamSource.setSystemId(String);javax.xml.transform.stream.StreamSource.setSystemId(File);org.xml.sax.InputSource.setSystemId(String);org.xml.sax.helpers.LocatorImpl.setSystemId(String),;0.14;0.08;0.15;0.19;0.14;0.14;0.13;0.17;0.19;0.17;0.18;0.08
setText,12,0.166666667,Set a new string over which to iterate.,;java.awt.Label.setText(String);java.awt.TextComponent.setText(String);java.awt.TextField.setText(String);java.text.BreakIterator.setText(String);java.text.BreakIterator.setText(CharacterIterator);java.text.CollationElementIterator.setText(String);java.text.CollationElementIterator.setText(CharacterIterator);java.text.StringCharacterIterator.setText(String);javax.security.auth.callback.TextInputCallback.setText(String);javax.swing.AbstractButton.setText(String);javax.swing.JLabel.setText(String);javax.swing.text.JTextComponent.setText(String),;0.08;0.17;0.17;0.13;0.13;0.17;0.17;0.08;0.08;0.08;0.09;0.09
submit,12,0.861456717,Description copied from interface:ExecutorService,";java.util.concurrent.AbstractExecutorService.submit(Runnable);java.util.concurrent.AbstractExecutorService.submit(Runnable,T);java.util.concurrent.AbstractExecutorService.submit(Callable&lt;T&gt;);java.util.concurrent.ExecutorCompletionService.submit(Callable&lt;V&gt;);java.util.concurrent.ExecutorCompletionService.submit(Runnable,V);java.util.concurrent.ForkJoinPool.submit(ForkJoinTask&lt;T&gt;);java.util.concurrent.ForkJoinPool.submit(Callable&lt;T&gt;);java.util.concurrent.ForkJoinPool.submit(Runnable,T);java.util.concurrent.ForkJoinPool.submit(Runnable);java.util.concurrent.ScheduledThreadPoolExecutor.submit(Runnable);java.util.concurrent.ScheduledThreadPoolExecutor.submit(Runnable,T);java.util.concurrent.ScheduledThreadPoolExecutor.submit(Callable&lt;T&gt;)",;0.86;0.86;0.86;0.67;0.67;0.08;0.86;0.86;0.86;0.86;0.86;0.86
transform,12,0.312044777,"Transforms the geometry of this path using the specified AffineTransform. The geometry is transformed in place, which permanently changes the boundary defined by this object.",";java.awt.Graphics2D.transform(AffineTransform);java.awt.geom.AffineTransform.transform(Point2D,Point2D);java.awt.geom.AffineTransform.transform(Point2D[],int,Point2D[],int,int);java.awt.geom.AffineTransform.transform(float[],int,float[],int,int);java.awt.geom.AffineTransform.transform(double[],int,double[],int,int);java.awt.geom.AffineTransform.transform(float[],int,double[],int,int);java.awt.geom.AffineTransform.transform(double[],int,float[],int,int);java.awt.geom.Area.transform(AffineTransform);java.awt.geom.Path2D.transform(AffineTransform);java.awt.geom.Path2D.Double.transform(AffineTransform);java.awt.geom.Path2D.Float.transform(AffineTransform);javax.xml.transform.Transformer.transform(Source,Result)",;0.08;0.09;0.11;0.22;0.22;0.20;0.20;0.27;0.31;0.31;0.31;0.08
value,12,0.487351655,Returns a numeric value expression that can be used in any Query call that expects a ValueExp.,;javax.management.Query.value(String);javax.management.Query.value(Number);javax.management.Query.value(int);javax.management.Query.value(long);javax.management.Query.value(float);javax.management.Query.value(double);javax.management.Query.value(boolean);org.omg.CORBA.CompletionStatus.value();org.omg.CORBA.DefinitionKind.value();org.omg.CORBA.NamedValue.value();org.omg.CORBA.SetOverrideType.value();org.omg.CORBA.TCKind.value(),;0.08;0.49;0.49;0.49;0.49;0.49;0.44;0.19;0.08;0.08;0.19;0.19
weakCompareAndSet,12,0.688850494,"Atomically sets the value to the given updated value if the current value == the expected value. May fail spuriously and does not provide ordering guarantees, so is only rarely an appropriate alternative to compareAndSet.",";java.util.concurrent.atomic.AtomicBoolean.weakCompareAndSet(boolean,boolean);java.util.concurrent.atomic.AtomicInteger.weakCompareAndSet(int,int);java.util.concurrent.atomic.AtomicIntegerArray.weakCompareAndSet(int,int,int);java.util.concurrent.atomic.AtomicIntegerFieldUpdater.weakCompareAndSet(T,int,int);java.util.concurrent.atomic.AtomicLong.weakCompareAndSet(long,long);java.util.concurrent.atomic.AtomicLongArray.weakCompareAndSet(int,long,long);java.util.concurrent.atomic.AtomicLongFieldUpdater.weakCompareAndSet(T,long,long);java.util.concurrent.atomic.AtomicMarkableReference.weakCompareAndSet(V,V,boolean,boolean);java.util.concurrent.atomic.AtomicReference.weakCompareAndSet(V,V);java.util.concurrent.atomic.AtomicReferenceArray.weakCompareAndSet(int,E,E);java.util.concurrent.atomic.AtomicReferenceFieldUpdater.weakCompareAndSet(T,V,V);java.util.concurrent.atomic.AtomicStampedReference.weakCompareAndSet(V,V,int,int)",;0.69;0.69;0.68;0.55;0.69;0.68;0.55;0.49;0.69;0.68;0.55;0.49
compare,13,0.336379293,Compares two short values numerically. The value returned is identical to what would be returned by: Short.valueOf(x).compareTo(Short.valueOf(y)),";java.lang.Boolean.compare(boolean,boolean);java.lang.Byte.compare(byte,byte);java.lang.Character.compare(char,char);java.lang.Double.compare(double,double);java.lang.Float.compare(float,float);java.lang.Integer.compare(int,int);java.lang.Long.compare(long,long);java.lang.Short.compare(short,short);java.text.Collator.compare(String,String);java.text.Collator.compare(Object,Object);java.text.RuleBasedCollator.compare(String,String);java.util.Objects.compare(T,T,Comparator&lt;?);javax.xml.datatype.XMLGregorianCalendar.compare(XMLGregorianCalendar)",;0.31;0.34;0.34;0.19;0.19;0.34;0.34;0.34;0.08;0.08;0.08;0.08;0.08
decode,13,0.295579628,"Decodes a String into a Short. Accepts decimal, hexadecimal, and octal numbers given by the following grammar: DecodableString:Signopt DecimalNumeralSignopt 0x HexDigitsSignopt 0X HexDigitsSignopt # HexDigitsSignopt 0 OctalDigitsSign:-+DecimalNumeral, HexDigits, and OctalDigits are as defined in section 3.10.1 of The Java閳 Language Specification, except that underscores are not accepted between digits. The sequence of characters following an optional sign and/or radix specifier (""0x"", ""0X"", ""#"", or leading zero) is parsed as by the Short.parseShort method with the indicated radix (10, 16, or 8). This sequence of characters must represent a positive value or a NumberFormatException will be thrown. The result is negated if first character of the specified String is the minus sign. No whitespace characters are permitted in the String.",";java.awt.Color.decode(String);java.lang.Byte.decode(String);java.lang.Integer.decode(String);java.lang.Long.decode(String);java.lang.Short.decode(String);java.net.URLDecoder.decode(String);java.net.URLDecoder.decode(String,String);java.nio.charset.Charset.decode(ByteBuffer);java.nio.charset.CharsetDecoder.decode(ByteBuffer);java.util.Base64.Decoder.decode(byte[]);java.util.Base64.Decoder.decode(String);java.util.Base64.Decoder.decode(byte[],byte[]);java.util.Base64.Decoder.decode(ByteBuffer)",;0.08;0.30;0.29;0.30;0.30;0.08;0.08;0.08;0.09;0.11;0.11;0.11;0.12
fireStateChanged,13,0.34707761,Notifies all listeners that have registered interest for notification on this event type. The event instance is created lazily.,;javax.swing.AbstractButton.fireStateChanged();javax.swing.AbstractSpinnerModel.fireStateChanged();javax.swing.DefaultBoundedRangeModel.fireStateChanged();javax.swing.DefaultButtonModel.fireStateChanged();javax.swing.DefaultSingleSelectionModel.fireStateChanged();javax.swing.JProgressBar.fireStateChanged();javax.swing.JSlider.fireStateChanged();javax.swing.JSpinner.fireStateChanged();javax.swing.JTabbedPane.fireStateChanged();javax.swing.JViewport.fireStateChanged();javax.swing.MenuSelectionManager.fireStateChanged();javax.swing.colorchooser.DefaultColorSelectionModel.fireStateChanged();javax.swing.text.DefaultCaret.fireStateChanged(),;0.33;0.08;0.15;0.35;0.35;0.23;0.23;0.14;0.09;0.08;0.35;0.15;0.25
getClassName,13,0.156519836,Returns the name of the class that implements this look and feel.,;java.lang.StackTraceElement.getClassName();java.lang.management.LockInfo.getClassName();java.rmi.activation.ActivationDesc.getClassName();java.rmi.activation.ActivationGroupDesc.getClassName();java.security.Provider.Service.getClassName();javax.management.MBeanInfo.getClassName();javax.management.ObjectInstance.getClassName();javax.management.StandardMBean.getClassName(MBeanInfo);javax.management.openmbean.OpenType.getClassName();javax.naming.Binding.getClassName();javax.naming.NameClassPair.getClassName();javax.naming.Reference.getClassName();javax.swing.UIManager.LookAndFeelInfo.getClassName(),;0.13;0.14;0.08;0.08;0.14;0.11;0.08;0.08;0.09;0.12;0.12;0.08;0.16
getColor,13,0.196497817,Finds a color in the system properties. The first argument is treated as the name of a system property to be obtained. The string value of this property is then interpreted as an integer which is then converted to a Color object. If the specified property is not found or cannot be parsed as an integer then the Color specified by the second argument is returned instead.,";java.awt.Color.getColor(String);java.awt.Color.getColor(String,Color);java.awt.Color.getColor(String,int);java.awt.Graphics.getColor();java.awt.PageAttributes.getColor();javax.swing.DebugGraphics.getColor();javax.swing.JColorChooser.getColor();javax.swing.UIDefaults.getColor(Object);javax.swing.UIDefaults.getColor(Object,Locale);javax.swing.UIManager.getColor(Object);javax.swing.UIManager.getColor(Object,Locale);javax.swing.plaf.synth.SynthStyle.getColor(SynthContext,ColorType);javax.swing.text.DefaultHighlighter.DefaultHighlightPainter.getColor()",;0.20;0.20;0.20;0.08;0.08;0.08;0.08;0.13;0.13;0.12;0.13;0.08;0.08
getContent,13,0.200708457,Gets the contents of this URL. This method is a shorthand for: openConnection().getContent(),";java.net.ContentHandler.getContent(URLConnection);java.net.ContentHandler.getContent(URLConnection,Class[]);java.net.URL.getContent();java.net.URL.getContent(Class[]);java.net.URLConnection.getContent(Class[]);javax.activation.DataHandler.getContent();javax.naming.BinaryRefAddr.getContent();javax.naming.RefAddr.getContent();javax.naming.StringRefAddr.getContent();javax.swing.text.AbstractDocument.getContent();javax.swing.text.html.parser.Element.getContent();javax.xml.soap.AttachmentPart.getContent();javax.xml.soap.SOAPPart.getContent()",;0.10;0.11;0.20;0.20;0.18;0.08;0.11;0.18;0.17;0.08;0.00;0.08;0.08
getIndex,13,0.10130909,"Returns the index of the entry that corresponds to the specified position. For example, getIndex(0) is 0, since the first entry always starts at position 0.",";java.beans.IndexedPropertyChangeEvent.getIndex();java.net.NetworkInterface.getIndex();java.text.ParsePosition.getIndex();java.text.StringCharacterIterator.getIndex();javax.swing.JList.DropLocation.getIndex();javax.swing.SizeSequence.getIndex(int);javax.swing.text.AbstractDocument.ElementEdit.getIndex();javax.swing.text.JTextComponent.DropLocation.getIndex();javax.swing.text.Segment.getIndex();javax.swing.text.html.parser.Element.getIndex();javax.swing.tree.DefaultMutableTreeNode.getIndex(TreeNode);org.xml.sax.helpers.AttributesImpl.getIndex(String,String);org.xml.sax.helpers.AttributesImpl.getIndex(String)",;0.08;0.09;0.09;0.08;0.08;0.10;0.08;0.08;0.08;0.00;0.10;0.09;0.08
getLocation,13,0.153537699,This method returns a Point indicating the Cursor's current location in the Component's coordinates.,;java.awt.Component.getLocation();java.awt.Component.getLocation(Point);java.awt.Point.getLocation();java.awt.PointerInfo.getLocation();java.awt.Rectangle.getLocation();java.awt.dnd.DragSourceEvent.getLocation();java.awt.dnd.DropTargetDragEvent.getLocation();java.awt.dnd.DropTargetDropEvent.getLocation();java.rmi.activation.ActivationDesc.getLocation();java.rmi.activation.ActivationGroupDesc.getLocation();java.security.CodeSource.getLocation();javax.swing.JComponent.getLocation(Point);javax.xml.stream.util.StreamReaderDelegate.getLocation(),;0.08;0.15;0.14;0.08;0.14;0.11;0.15;0.15;0.08;0.08;0.08;0.15;0.08
getMaximum,13,0.136463749,Returns the maximum value for the given calendar field of this Calendar instance. The maximum value is defined as the largest value returned by the get method for any possible time value. The maximum value depends on calendar system specific parameters of the instance.,;java.awt.Scrollbar.getMaximum();java.awt.ScrollPaneAdjustable.getMaximum();java.time.temporal.ValueRange.getMaximum();java.util.Calendar.getMaximum(int);java.util.GregorianCalendar.getMaximum(int);javax.sound.sampled.FloatControl.getMaximum();javax.swing.DefaultBoundedRangeModel.getMaximum();javax.swing.JProgressBar.getMaximum();javax.swing.JScrollBar.getMaximum();javax.swing.JSlider.getMaximum();javax.swing.ProgressMonitor.getMaximum();javax.swing.SpinnerNumberModel.getMaximum();javax.swing.text.InternationalFormatter.getMaximum(),;0.08;0.08;0.08;0.14;0.14;0.08;0.08;0.08;0.08;0.10;0.10;0.08;0.08
getMinimum,13,0.142830952,Returns the minimum value supported by the slider from the BoundedRangeModel.,;java.awt.Scrollbar.getMinimum();java.awt.ScrollPaneAdjustable.getMinimum();java.time.temporal.ValueRange.getMinimum();java.util.Calendar.getMinimum(int);java.util.GregorianCalendar.getMinimum(int);javax.sound.sampled.FloatControl.getMinimum();javax.swing.DefaultBoundedRangeModel.getMinimum();javax.swing.JProgressBar.getMinimum();javax.swing.JScrollBar.getMinimum();javax.swing.JSlider.getMinimum();javax.swing.ProgressMonitor.getMinimum();javax.swing.SpinnerNumberModel.getMinimum();javax.swing.text.InternationalFormatter.getMinimum(),;0.08;0.08;0.08;0.14;0.14;0.08;0.08;0.08;0.14;0.14;0.12;0.08;0.08
getPreferredSpan,13,0.796146691,Determines the preferred span for this view along an axis.,;javax.swing.text.AsyncBoxView.getPreferredSpan(int);javax.swing.text.BoxView.getPreferredSpan(int);javax.swing.text.ComponentView.getPreferredSpan(int);javax.swing.text.FieldView.getPreferredSpan(int);javax.swing.text.GlyphView.getPreferredSpan(int);javax.swing.text.IconView.getPreferredSpan(int);javax.swing.text.PasswordView.getPreferredSpan(int);javax.swing.text.PlainView.getPreferredSpan(int);javax.swing.text.View.getPreferredSpan(int);javax.swing.text.WrappedPlainView.getPreferredSpan(int);javax.swing.text.html.BlockView.getPreferredSpan(int);javax.swing.text.html.ImageView.getPreferredSpan(int);javax.swing.text.html.ParagraphView.getPreferredSpan(int),;0.80;0.80;0.38;0.80;0.80;0.80;0.80;0.80;0.80;0.26;0.80;0.80;0.27
layoutContainer,13,0.230769231,Description copied from interface:LayoutManager,;java.awt.BorderLayout.layoutContainer(Container);java.awt.CardLayout.layoutContainer(Container);java.awt.FlowLayout.layoutContainer(Container);java.awt.GridBagLayout.layoutContainer(Container);java.awt.GridLayout.layoutContainer(Container);javax.swing.BoxLayout.layoutContainer(Container);javax.swing.GroupLayout.layoutContainer(Container);javax.swing.JSpinner.DefaultEditor.layoutContainer(Container);javax.swing.OverlayLayout.layoutContainer(Container);javax.swing.SpringLayout.layoutContainer(Container);javax.swing.ViewportLayout.layoutContainer(Container);javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout.layoutContainer(Container);javax.swing.plaf.basic.BasicScrollBarUI.layoutContainer(Container),;0.12;0.10;0.10;0.13;0.13;0.23;0.08;0.08;0.23;0.23;0.23;0.23;0.23
paintComponent,13,0.230769231,Description copied from class:JComponent,";javax.swing.Box.paintComponent(Graphics);javax.swing.Box.Filler.paintComponent(Graphics);javax.swing.CellRendererPane.paintComponent(Graphics,Component,Container,int,int,int,int,boolean);javax.swing.CellRendererPane.paintComponent(Graphics,Component,Container,int,int,int,int);javax.swing.CellRendererPane.paintComponent(Graphics,Component,Container,Rectangle);javax.swing.JComponent.paintComponent(Graphics);javax.swing.JInternalFrame.paintComponent(Graphics);javax.swing.JLayer.paintComponent(Graphics);javax.swing.SwingUtilities.paintComponent(Graphics,Component,Container,int,int,int,int);javax.swing.SwingUtilities.paintComponent(Graphics,Component,Container,Rectangle);javax.swing.plaf.basic.BasicInternalFrameTitlePane.paintComponent(Graphics);javax.swing.plaf.metal.MetalComboBoxButton.paintComponent(Graphics);javax.swing.plaf.metal.MetalInternalFrameTitlePane.paintComponent(Graphics)",;0.13;0.13;0.08;0.08;0.08;0.08;0.08;0.08;0.08;0.08;0.23;0.23;0.23
processEvent,13,0.608505968,"Processes events on this choice. If the event is an instance of ItemEvent, it invokes the processItemEvent method. Otherwise, it calls its superclass's processEvent method. Note that if the event parameter is null the behavior is unspecified and may result in an exception.",;java.awt.Button.processEvent(AWTEvent);java.awt.Checkbox.processEvent(AWTEvent);java.awt.CheckboxMenuItem.processEvent(AWTEvent);java.awt.Choice.processEvent(AWTEvent);java.awt.Component.processEvent(AWTEvent);java.awt.Container.processEvent(AWTEvent);java.awt.List.processEvent(AWTEvent);java.awt.MenuComponent.processEvent(AWTEvent);java.awt.MenuItem.processEvent(AWTEvent);java.awt.Scrollbar.processEvent(AWTEvent);java.awt.TextComponent.processEvent(AWTEvent);java.awt.TextField.processEvent(AWTEvent);java.awt.Window.processEvent(AWTEvent),;0.57;0.59;0.48;0.61;0.46;0.57;0.46;0.38;0.54;0.60;0.57;0.60;0.58
seek,13,0.615384615,"Sets the current position to index. The current position is indexed 0 to n-1, that is, index zero corresponds to the first component. The operation returns true if the resulting current position indicates a component of the DynAny and false if index indicates a position that does not correspond to a component. Calling seek with a negative index is legal. It sets the current position to -1 to indicate no component and returns false. Passing a non-negative index value for a DynAny that does not have a component at the corresponding position sets the current position to -1 and returns false.",;java.io.RandomAccessFile.seek(long);javax.imageio.stream.FileCacheImageOutputStream.seek(long);javax.imageio.stream.FileImageInputStream.seek(long);javax.imageio.stream.FileImageOutputStream.seek(long);javax.imageio.stream.ImageInputStreamImpl.seek(long);org.omg.DynamicAny._DynAnyStub.seek(int);org.omg.DynamicAny._DynArrayStub.seek(int);org.omg.DynamicAny._DynEnumStub.seek(int);org.omg.DynamicAny._DynFixedStub.seek(int);org.omg.DynamicAny._DynSequenceStub.seek(int);org.omg.DynamicAny._DynStructStub.seek(int);org.omg.DynamicAny._DynUnionStub.seek(int);org.omg.DynamicAny._DynValueStub.seek(int),;0.09;0.16;0.15;0.16;0.15;0.62;0.62;0.62;0.62;0.62;0.62;0.62;0.62
setTime,13,0.149681161,"Set time as one unit, including optional milliseconds.",";java.sql.Date.setTime(long);java.sql.Time.setTime(long);java.sql.Timestamp.setTime(long);java.util.Calendar.setTime(Date);java.util.Date.setTime(long);java.util.zip.ZipEntry.setTime(long);javax.sql.rowset.BaseRowSet.setTime(int,Time);javax.sql.rowset.BaseRowSet.setTime(int,Time,Calendar);javax.sql.rowset.BaseRowSet.setTime(String,Time);javax.sql.rowset.BaseRowSet.setTime(String,Time,Calendar);javax.xml.datatype.XMLGregorianCalendar.setTime(int,int,int);javax.xml.datatype.XMLGregorianCalendar.setTime(int,int,int,BigDecimal);javax.xml.datatype.XMLGregorianCalendar.setTime(int,int,int,int)",;0.08;0.08;0.15;0.08;0.15;0.08;0.12;0.13;0.08;0.10;0.14;0.13;0.15
stop,13,0.089744051,"Deprecated.This method is inherently unsafe. Stopping a thread with Thread.stop causes it to unlock all of the monitors that it has locked (as a natural consequence of the unchecked ThreadDeath exception propagating up the stack). If any of the objects previously protected by these monitors were in an inconsistent state, the damaged objects become visible to other threads, potentially resulting in arbitrary behavior. Many uses of stop should be replaced by code that simply modifies some variable to indicate that the target thread should stop running. The target thread should check this variable regularly, and return from its run method in an orderly fashion if the variable indicates that it is to stop running. If the target thread waits for long periods (on a condition variable, for example), the interrupt method should be used to interrupt the wait. For more information, see Why are Thread.stop, Thread.suspend and Thread.resume Deprecated?.",;java.applet.Applet.stop();java.awt.dnd.DropTarget.DropTargetAutoScroller.stop();java.lang.Thread.stop();java.lang.Thread.stop(Throwable);java.lang.ThreadGroup.stop();javax.management.monitor.CounterMonitor.stop();javax.management.monitor.GaugeMonitor.stop();javax.management.monitor.Monitor.stop();javax.management.monitor.StringMonitor.stop();javax.management.remote.rmi.RMIConnectorServer.stop();javax.management.timer.Timer.stop();javax.swing.Timer.stop();javax.xml.ws.Endpoint.stop(),;0.08;0.08;0.09;0.08;0.08;0.08;0.08;0.00;0.08;0.08;0.00;0.08;0.08
stream,13,0.419445696,Returns a sequential DoubleStream with the specified range of the specified array as its source.,";java.util.Arrays.stream(T[]);java.util.Arrays.stream(T[],int,int);java.util.Arrays.stream(int[]);java.util.Arrays.stream(int[],int,int);java.util.Arrays.stream(long[]);java.util.Arrays.stream(long[],int,int);java.util.Arrays.stream(double[]);java.util.Arrays.stream(double[],int,int);java.util.BitSet.stream();java.util.jar.JarFile.stream();java.util.stream.StreamSupport.stream(Spliterator&lt;T&gt;,boolean);java.util.stream.StreamSupport.stream(Supplier&lt;?,int,boolean);java.util.zip.ZipFile.stream()",;0.40;0.42;0.40;0.42;0.40;0.42;0.40;0.42;0.08;0.08;0.10;0.10;0.08
verify,13,0.363020201,Verifies that this certificate was signed using the private key that corresponds to the specified public key. This method uses the signature verification engine supplied by the specified provider.,";java.security.Signature.verify(byte[]);java.security.Signature.verify(byte[],int,int);java.security.SignedObject.verify(PublicKey,Signature);java.security.cert.Certificate.verify(PublicKey);java.security.cert.Certificate.verify(PublicKey,String);java.security.cert.Certificate.verify(PublicKey,Provider);java.security.cert.X509Certificate.verify(PublicKey,Provider);java.security.cert.X509CRL.verify(PublicKey);java.security.cert.X509CRL.verify(PublicKey,String);java.security.cert.X509CRL.verify(PublicKey,Provider);javax.security.cert.Certificate.verify(PublicKey);javax.security.cert.Certificate.verify(PublicKey,String);javax.swing.InputVerifier.verify(JComponent)",;0.14;0.14;0.08;0.31;0.36;0.32;0.33;0.27;0.33;0.31;0.31;0.36;0.08
addChangeListener,14,0.42232255,Adds a ChangeListener to the button.,;javax.swing.AbstractButton.addChangeListener(ChangeListener);javax.swing.AbstractSpinnerModel.addChangeListener(ChangeListener);javax.swing.DefaultBoundedRangeModel.addChangeListener(ChangeListener);javax.swing.DefaultButtonModel.addChangeListener(ChangeListener);javax.swing.DefaultSingleSelectionModel.addChangeListener(ChangeListener);javax.swing.JProgressBar.addChangeListener(ChangeListener);javax.swing.JSlider.addChangeListener(ChangeListener);javax.swing.JSpinner.addChangeListener(ChangeListener);javax.swing.JTabbedPane.addChangeListener(ChangeListener);javax.swing.JViewport.addChangeListener(ChangeListener);javax.swing.MenuSelectionManager.addChangeListener(ChangeListener);javax.swing.colorchooser.DefaultColorSelectionModel.addChangeListener(ChangeListener);javax.swing.text.DefaultCaret.addChangeListener(ChangeListener);javax.swing.text.StyleContext.addChangeListener(ChangeListener),;0.42;0.18;0.07;0.41;0.42;0.07;0.39;0.09;0.30;0.16;0.42;0.41;0.09;0.09
drainTo,14,1,Description copied from interface:BlockingQueue,";java.util.concurrent.ArrayBlockingQueue.drainTo(Collection&lt;?);java.util.concurrent.ArrayBlockingQueue.drainTo(Collection&lt;?,int);java.util.concurrent.DelayQueue.drainTo(Collection&lt;?);java.util.concurrent.DelayQueue.drainTo(Collection&lt;?,int);java.util.concurrent.LinkedBlockingDeque.drainTo(Collection&lt;?);java.util.concurrent.LinkedBlockingDeque.drainTo(Collection&lt;?,int);java.util.concurrent.LinkedBlockingQueue.drainTo(Collection&lt;?);java.util.concurrent.LinkedBlockingQueue.drainTo(Collection&lt;?,int);java.util.concurrent.LinkedTransferQueue.drainTo(Collection&lt;?);java.util.concurrent.LinkedTransferQueue.drainTo(Collection&lt;?,int);java.util.concurrent.PriorityBlockingQueue.drainTo(Collection&lt;?);java.util.concurrent.PriorityBlockingQueue.drainTo(Collection&lt;?,int);java.util.concurrent.SynchronousQueue.drainTo(Collection&lt;?);java.util.concurrent.SynchronousQueue.drainTo(Collection&lt;?,int)",;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
drawImage,14,0.250299961,"Draws as much of the specified image as has already been scaled to fit inside the specified rectangle. The image is drawn inside the specified rectangle of this graphics context's coordinate space, and is scaled if necessary. Transparent pixels are drawn in the specified background color. This operation is equivalent to filling a rectangle of the width and height of the specified image with the given color and then drawing the image on top of it, but possibly more efficient. This method returns immediately in all cases, even if the entire image has not yet been scaled, dithered, and converted for the current output device. If the current output representation is not yet complete then drawImage returns false. As more of the image becomes available, the process that loads the image notifies the specified image observer. A scaled version of an image will not necessarily be available immediately just because an unscaled version of the image has been constructed for this output device. Each size of the image may be cached separately and generated from the original data in a separate image production sequence.",";java.awt.Graphics.drawImage(Image,int,int,ImageObserver);java.awt.Graphics.drawImage(Image,int,int,int,int,ImageObserver);java.awt.Graphics.drawImage(Image,int,int,Color,ImageObserver);java.awt.Graphics.drawImage(Image,int,int,int,int,Color,ImageObserver);java.awt.Graphics.drawImage(Image,int,int,int,int,int,int,int,int,ImageObserver);java.awt.Graphics.drawImage(Image,int,int,int,int,int,int,int,int,Color,ImageObserver);java.awt.Graphics2D.drawImage(Image,AffineTransform,ImageObserver);java.awt.Graphics2D.drawImage(BufferedImage,BufferedImageOp,int,int);javax.swing.DebugGraphics.drawImage(Image,int,int,ImageObserver);javax.swing.DebugGraphics.drawImage(Image,int,int,int,int,ImageObserver);javax.swing.DebugGraphics.drawImage(Image,int,int,Color,ImageObserver);javax.swing.DebugGraphics.drawImage(Image,int,int,int,int,Color,ImageObserver);javax.swing.DebugGraphics.drawImage(Image,int,int,int,int,int,int,int,int,ImageObserver);javax.swing.DebugGraphics.drawImage(Image,int,int,int,int,int,int,int,int,Color,ImageObserver)",;0.20;0.23;0.23;0.25;0.23;0.24;0.08;0.08;0.00;0.00;0.00;0.00;0.00;0.00
filter,14,0.262312732,"Rescales the source BufferedImage. If the color model in the source image is not the same as that in the destination image, the pixels will be converted in the destination. If the destination image is null, a BufferedImage will be created with the source ColorModel. An IllegalArgumentException may be thrown if the number of scaling factors/offsets in this object does not meet the restrictions stated in the class comments above, or if the source image has an IndexColorModel.",";java.awt.image.AffineTransformOp.filter(BufferedImage,BufferedImage);java.awt.image.AffineTransformOp.filter(Raster,WritableRaster);java.awt.image.BandCombineOp.filter(Raster,WritableRaster);java.awt.image.ColorConvertOp.filter(BufferedImage,BufferedImage);java.awt.image.ColorConvertOp.filter(Raster,WritableRaster);java.awt.image.ConvolveOp.filter(BufferedImage,BufferedImage);java.awt.image.ConvolveOp.filter(Raster,WritableRaster);java.awt.image.LookupOp.filter(BufferedImage,BufferedImage);java.awt.image.LookupOp.filter(Raster,WritableRaster);java.awt.image.RescaleOp.filter(BufferedImage,BufferedImage);java.awt.image.RescaleOp.filter(Raster,WritableRaster);java.util.Locale.filter(List&lt;Locale.LanguageRange&gt;,Collection&lt;Locale&gt;,Locale.FilteringMode);java.util.Locale.filter(List&lt;Locale.LanguageRange&gt;,Collection&lt;Locale&gt;);java.util.Optional.filter(Predicate&lt;?)",;0.17;0.19;0.15;0.08;0.16;0.23;0.20;0.25;0.22;0.26;0.19;0.10;0.11;0.07
getAlignment,14,0.304561126,"Determines the desired alignment for this view along an axis. This is implemented to give the alignment to the bottom of the icon along the y axis, and the default along the x axis.",;java.awt.FlowLayout.getAlignment();java.awt.Label.getAlignment();java.awt.font.GraphicAttribute.getAlignment();javax.swing.text.BoxView.getAlignment(int);javax.swing.text.ComponentView.getAlignment(int);javax.swing.text.GlyphView.getAlignment(int);javax.swing.text.IconView.getAlignment(int);javax.swing.text.ParagraphView.getAlignment(int);javax.swing.text.StyleConstants.getAlignment(AttributeSet);javax.swing.text.TabStop.getAlignment();javax.swing.text.View.getAlignment(int);javax.swing.text.html.BlockView.getAlignment(int);javax.swing.text.html.ImageView.getAlignment(int);javax.swing.text.html.ListView.getAlignment(int),;0.07;0.07;0.07;0.19;0.20;0.22;0.30;0.29;0.07;0.07;0.15;0.00;0.30;0.07
getChangeListeners,14,0.688797276,Returns an array of all the ChangeListeners added to this DefaultColorSelectionModel with addChangeListener.,;javax.swing.AbstractButton.getChangeListeners();javax.swing.AbstractSpinnerModel.getChangeListeners();javax.swing.DefaultBoundedRangeModel.getChangeListeners();javax.swing.DefaultButtonModel.getChangeListeners();javax.swing.DefaultSingleSelectionModel.getChangeListeners();javax.swing.JProgressBar.getChangeListeners();javax.swing.JSlider.getChangeListeners();javax.swing.JSpinner.getChangeListeners();javax.swing.JTabbedPane.getChangeListeners();javax.swing.JViewport.getChangeListeners();javax.swing.MenuSelectionManager.getChangeListeners();javax.swing.colorchooser.DefaultColorSelectionModel.getChangeListeners();javax.swing.text.DefaultCaret.getChangeListeners();javax.swing.text.StyleContext.getChangeListeners(),;0.69;0.69;0.55;0.55;0.55;0.64;0.69;0.69;0.69;0.69;0.69;0.69;0.55;0.69
getContentType,14,0.247635846,Get the MIME type of the data that this kit represents support for. This kit supports the type text/rtf.,;java.net.URLConnection.getContentType();javax.activation.DataHandler.getContentType();javax.activation.FileDataSource.getContentType();javax.activation.FileTypeMap.getContentType(File);javax.activation.FileTypeMap.getContentType(String);javax.activation.MimetypesFileTypeMap.getContentType(File);javax.activation.MimetypesFileTypeMap.getContentType(String);javax.activation.URLDataSource.getContentType();javax.swing.JEditorPane.getContentType();javax.swing.text.DefaultEditorKit.getContentType();javax.swing.text.EditorKit.getContentType();javax.swing.text.html.HTMLEditorKit.getContentType();javax.swing.text.rtf.RTFEditorKit.getContentType();javax.xml.soap.AttachmentPart.getContentType(),;0.09;0.13;0.11;0.15;0.14;0.18;0.08;0.08;0.07;0.23;0.22;0.25;0.25;0.09
getElem,14,0.773416493,Returns the requested data array element from the first (default) bank.,";java.awt.image.DataBuffer.getElem(int);java.awt.image.DataBuffer.getElem(int,int);java.awt.image.DataBufferByte.getElem(int);java.awt.image.DataBufferByte.getElem(int,int);java.awt.image.DataBufferDouble.getElem(int);java.awt.image.DataBufferDouble.getElem(int,int);java.awt.image.DataBufferFloat.getElem(int);java.awt.image.DataBufferFloat.getElem(int,int);java.awt.image.DataBufferInt.getElem(int);java.awt.image.DataBufferInt.getElem(int,int);java.awt.image.DataBufferShort.getElem(int);java.awt.image.DataBufferShort.getElem(int,int);java.awt.image.DataBufferUShort.getElem(int);java.awt.image.DataBufferUShort.getElem(int,int)",;0.71;0.72;0.77;0.76;0.72;0.73;0.72;0.73;0.77;0.76;0.77;0.76;0.77;0.76
getIcon,14,0.116559261,"Returns an Icon from the defaults that is appropriate for the given locale. If the value for key is not an Icon, null is returned.",";java.beans.SimpleBeanInfo.getIcon(int);javax.swing.AbstractButton.getIcon();javax.swing.JFileChooser.getIcon(File);javax.swing.JLabel.getIcon();javax.swing.JOptionPane.getIcon();javax.swing.UIDefaults.getIcon(Object);javax.swing.UIDefaults.getIcon(Object,Locale);javax.swing.UIManager.getIcon(Object);javax.swing.UIManager.getIcon(Object,Locale);javax.swing.filechooser.FileView.getIcon(File);javax.swing.plaf.basic.BasicOptionPaneUI.getIcon();javax.swing.plaf.synth.SynthButtonUI.getIcon(AbstractButton);javax.swing.plaf.synth.SynthStyle.getIcon(SynthContext,Object);javax.swing.text.StyleConstants.getIcon(AttributeSet)",;0.07;0.07;0.07;0.07;0.07;0.12;0.12;0.12;0.12;0.07;0.07;0.07;0.07;0.07
getInsets,14,0.131388051,"If a border has been set on this component, returns the border's insets, else calls super.getInsets.",";java.awt.Container.getInsets();javax.swing.JComponent.getInsets();javax.swing.JComponent.getInsets(Insets);javax.swing.JViewport.getInsets();javax.swing.JViewport.getInsets(Insets);javax.swing.UIDefaults.getInsets(Object);javax.swing.UIDefaults.getInsets(Object,Locale);javax.swing.UIManager.getInsets(Object);javax.swing.UIManager.getInsets(Object,Locale);javax.swing.plaf.basic.BasicComboBoxUI.getInsets();javax.swing.plaf.basic.BasicSplitPaneDivider.getInsets();javax.swing.plaf.basic.BasicSplitPaneUI.getInsets(JComponent);javax.swing.plaf.nimbus.NimbusStyle.getInsets(SynthContext,Insets);javax.swing.plaf.synth.SynthStyle.getInsets(SynthContext,Insets)",;0.07;0.13;0.11;0.07;0.10;0.12;0.12;0.13;0.13;0.07;0.13;0.07;0.10;0.09
getLocale,14,0.137066959,"Returns the currently set Locale, or null if none has been set.",;java.applet.Applet.getLocale();java.awt.Component.getLocale();java.awt.Window.getLocale();java.awt.im.InputContext.getLocale();java.beans.beancontext.BeanContextSupport.getLocale();java.text.MessageFormat.getLocale();java.time.format.DateTimeFormatter.getLocale();java.util.ResourceBundle.getLocale();javax.accessibility.AccessibleContext.getLocale();javax.imageio.ImageReader.getLocale();javax.imageio.ImageWriteParam.getLocale();javax.imageio.ImageWriter.getLocale();javax.print.attribute.TextSyntax.getLocale();javax.security.auth.callback.LanguageCallback.getLocale(),;0.09;0.08;0.07;0.08;0.07;0.07;0.07;0.08;0.10;0.14;0.13;0.13;0.07;0.07
getPath,14,0.125998197,Returns the path to the selected menu item.,";java.io.File.getPath();java.net.HttpCookie.getPath();java.net.URI.getPath();java.net.URL.getPath();java.nio.file.FileSystem.getPath(String,String...);java.nio.file.spi.FileSystemProvider.getPath(URI);javax.swing.event.MenuDragMouseEvent.getPath();javax.swing.event.MenuKeyEvent.getPath();javax.swing.event.TreeExpansionEvent.getPath();javax.swing.event.TreeModelEvent.getPath();javax.swing.event.TreeSelectionEvent.getPath();javax.swing.tree.DefaultMutableTreeNode.getPath();javax.swing.tree.TreePath.getPath();javax.xml.ws.spi.http.HttpContext.getPath()",;0.07;0.07;0.07;0.07;0.07;0.07;0.13;0.13;0.12;0.07;0.07;0.07;0.07;0.07
getVersion,14,0.190624307,Description copied from interface:RMIServer,;java.net.HttpCookie.getVersion();java.security.Provider.getVersion();java.security.cert.X509Certificate.getVersion();java.security.cert.X509CRL.getVersion();javax.crypto.spec.RC5ParameterSpec.getVersion();javax.imageio.spi.IIOServiceProvider.getVersion();javax.management.loading.MLetContent.getVersion();javax.management.remote.rmi.RMIServerImpl.getVersion();javax.management.remote.rmi.RMIServerImpl_Stub.getVersion();javax.security.cert.X509Certificate.getVersion();javax.sound.midi.MidiDevice.Info.getVersion();javax.sound.sampled.Mixer.Info.getVersion();javax.sql.rowset.spi.SyncProvider.getVersion();javax.xml.stream.util.StreamReaderDelegate.getVersion(),;0.08;0.07;0.17;0.13;0.00;0.08;0.07;0.19;0.19;0.17;0.13;0.13;0.07;0.17
initialize,14,0.153565943,"Initializes the key pair generator using the specified parameter set and the SecureRandom implementation of the highest-priority installed provider as the source of randomness. (If none of the installed providers supply an implementation of SecureRandom, a system-provided source of randomness is used.). This concrete method has been added to this previously-defined abstract class. This method calls the KeyPairGeneratorSpi initialize method, passing it params and a source of randomness (obtained from the highest-priority installed provider or system-provided if none of the installed providers supply one). That initialize method always throws an UnsupportedOperationException if it is not overridden by the provider.",";java.beans.DefaultPersistenceDelegate.initialize(Class&lt;?&gt;,Object,Object,Encoder);java.beans.PersistenceDelegate.initialize(Class&lt;?&gt;,Object,Object,Encoder);java.beans.beancontext.BeanContextServicesSupport.initialize();java.beans.beancontext.BeanContextSupport.initialize();java.security.KeyPairGenerator.initialize(int);java.security.KeyPairGenerator.initialize(int,SecureRandom);java.security.KeyPairGenerator.initialize(AlgorithmParameterSpec);java.security.KeyPairGenerator.initialize(AlgorithmParameterSpec,SecureRandom);java.security.KeyPairGeneratorSpi.initialize(int,SecureRandom);java.security.KeyPairGeneratorSpi.initialize(AlgorithmParameterSpec,SecureRandom);javax.swing.LookAndFeel.initialize();javax.swing.plaf.basic.BasicLookAndFeel.initialize();javax.swing.plaf.nimbus.NimbusLookAndFeel.initialize();javax.swing.plaf.synth.SynthLookAndFeel.initialize()",;0.07;0.07;0.08;0.08;0.14;0.12;0.15;0.14;0.11;0.13;0.15;0.15;0.14;0.14
minimumLayoutSize,14,0.214285714,Description copied from interface:LayoutManager,;java.awt.BorderLayout.minimumLayoutSize(Container);java.awt.CardLayout.minimumLayoutSize(Container);java.awt.FlowLayout.minimumLayoutSize(Container);java.awt.GridBagLayout.minimumLayoutSize(Container);java.awt.GridLayout.minimumLayoutSize(Container);javax.swing.BoxLayout.minimumLayoutSize(Container);javax.swing.GroupLayout.minimumLayoutSize(Container);javax.swing.JSpinner.DefaultEditor.minimumLayoutSize(Container);javax.swing.OverlayLayout.minimumLayoutSize(Container);javax.swing.ScrollPaneLayout.minimumLayoutSize(Container);javax.swing.SpringLayout.minimumLayoutSize(Container);javax.swing.ViewportLayout.minimumLayoutSize(Container);javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout.minimumLayoutSize(Container);javax.swing.plaf.basic.BasicScrollBarUI.minimumLayoutSize(Container),;0.12;0.12;0.20;0.11;0.09;0.20;0.13;0.10;0.16;0.09;0.21;0.20;0.21;0.21
putAll,14,0.588243394,Copies all of the mappings from the specified map to this map. These mappings will replace any mappings that this map had for any of the keys currently in the specified map.,";java.awt.RenderingHints.putAll(Map&lt;?,?&gt;);java.security.Provider.putAll(Map&lt;?,?&gt;);java.util.AbstractMap.putAll(Map&lt;?,?);java.util.EnumMap.putAll(Map&lt;?,?);java.util.HashMap.putAll(Map&lt;?,?);java.util.Hashtable.putAll(Map&lt;?,?);java.util.IdentityHashMap.putAll(Map&lt;?,?);java.util.TreeMap.putAll(Map&lt;?,?);java.util.WeakHashMap.putAll(Map&lt;?,?);java.util.concurrent.ConcurrentHashMap.putAll(Map&lt;?,?);java.util.jar.Attributes.putAll(Map&lt;?,?&gt;);javax.management.openmbean.TabularDataSupport.putAll(Map&lt;?,?&gt;);javax.management.openmbean.TabularDataSupport.putAll(CompositeData[]);javax.script.SimpleBindings.putAll(Map&lt;?,?)",;0.47;0.45;0.21;0.59;0.59;0.53;0.59;0.57;0.59;0.55;0.17;0.11;0.08;0.07
readFully,14,0.571428571,Description copied from interface:ImageInputStream,";java.io.DataInputStream.readFully(byte[]);java.io.DataInputStream.readFully(byte[],int,int);java.io.ObjectInputStream.readFully(byte[]);java.io.ObjectInputStream.readFully(byte[],int,int);java.io.RandomAccessFile.readFully(byte[]);java.io.RandomAccessFile.readFully(byte[],int,int);javax.imageio.stream.ImageInputStreamImpl.readFully(byte[],int,int);javax.imageio.stream.ImageInputStreamImpl.readFully(byte[]);javax.imageio.stream.ImageInputStreamImpl.readFully(short[],int,int);javax.imageio.stream.ImageInputStreamImpl.readFully(char[],int,int);javax.imageio.stream.ImageInputStreamImpl.readFully(int[],int,int);javax.imageio.stream.ImageInputStreamImpl.readFully(long[],int,int);javax.imageio.stream.ImageInputStreamImpl.readFully(float[],int,int);javax.imageio.stream.ImageInputStreamImpl.readFully(double[],int,int)",;0.14;0.14;0.14;0.14;0.14;0.14;0.57;0.57;0.57;0.57;0.57;0.57;0.57;0.57
removeChangeListener,14,0.532329944,Removes a ChangeListener from the button.,;javax.swing.AbstractButton.removeChangeListener(ChangeListener);javax.swing.AbstractSpinnerModel.removeChangeListener(ChangeListener);javax.swing.DefaultBoundedRangeModel.removeChangeListener(ChangeListener);javax.swing.DefaultButtonModel.removeChangeListener(ChangeListener);javax.swing.DefaultSingleSelectionModel.removeChangeListener(ChangeListener);javax.swing.JProgressBar.removeChangeListener(ChangeListener);javax.swing.JSlider.removeChangeListener(ChangeListener);javax.swing.JSpinner.removeChangeListener(ChangeListener);javax.swing.JTabbedPane.removeChangeListener(ChangeListener);javax.swing.JViewport.removeChangeListener(ChangeListener);javax.swing.MenuSelectionManager.removeChangeListener(ChangeListener);javax.swing.colorchooser.DefaultColorSelectionModel.removeChangeListener(ChangeListener);javax.swing.text.DefaultCaret.removeChangeListener(ChangeListener);javax.swing.text.StyleContext.removeChangeListener(ChangeListener),;0.53;0.37;0.00;0.53;0.53;0.43;0.50;0.40;0.40;0.18;0.53;0.53;0.11;0.10
removeLayoutComponent,14,0.311579782,Removes the specified component from the layout. Not used by this class.,;java.awt.BorderLayout.removeLayoutComponent(Component);java.awt.CardLayout.removeLayoutComponent(Component);java.awt.FlowLayout.removeLayoutComponent(Component);java.awt.GridBagLayout.removeLayoutComponent(Component);java.awt.GridLayout.removeLayoutComponent(Component);javax.swing.BoxLayout.removeLayoutComponent(Component);javax.swing.GroupLayout.removeLayoutComponent(Component);javax.swing.JSpinner.DefaultEditor.removeLayoutComponent(Component);javax.swing.OverlayLayout.removeLayoutComponent(Component);javax.swing.ScrollPaneLayout.removeLayoutComponent(Component);javax.swing.SpringLayout.removeLayoutComponent(Component);javax.swing.ViewportLayout.removeLayoutComponent(Component);javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout.removeLayoutComponent(Component);javax.swing.plaf.basic.BasicScrollBarUI.removeLayoutComponent(Component),;0.16;0.19;0.31;0.20;0.26;0.11;0.07;0.07;0.23;0.26;0.07;0.31;0.14;0.14
setElem,14,0.739751971,Sets the requested data array element in the first (default) bank to the specified value.,";java.awt.image.DataBuffer.setElem(int,int);java.awt.image.DataBuffer.setElem(int,int,int);java.awt.image.DataBufferByte.setElem(int,int);java.awt.image.DataBufferByte.setElem(int,int,int);java.awt.image.DataBufferDouble.setElem(int,int);java.awt.image.DataBufferDouble.setElem(int,int,int);java.awt.image.DataBufferFloat.setElem(int,int);java.awt.image.DataBufferFloat.setElem(int,int,int);java.awt.image.DataBufferInt.setElem(int,int);java.awt.image.DataBufferInt.setElem(int,int,int);java.awt.image.DataBufferShort.setElem(int,int);java.awt.image.DataBufferShort.setElem(int,int,int);java.awt.image.DataBufferUShort.setElem(int,int);java.awt.image.DataBufferUShort.setElem(int,int,int)",;0.70;0.72;0.74;0.72;0.74;0.72;0.74;0.72;0.74;0.66;0.74;0.72;0.74;0.72
setSample,14,0.774325253,"Sets a sample in the specified band for the pixel located at (x,y) in the DataBuffer using an int for input. ArrayIndexOutOfBoundsException may be thrown if the coordinates are not in bounds.",";java.awt.image.BandedSampleModel.setSample(int,int,int,int,DataBuffer);java.awt.image.BandedSampleModel.setSample(int,int,int,float,DataBuffer);java.awt.image.BandedSampleModel.setSample(int,int,int,double,DataBuffer);java.awt.image.ComponentSampleModel.setSample(int,int,int,int,DataBuffer);java.awt.image.ComponentSampleModel.setSample(int,int,int,float,DataBuffer);java.awt.image.ComponentSampleModel.setSample(int,int,int,double,DataBuffer);java.awt.image.MultiPixelPackedSampleModel.setSample(int,int,int,int,DataBuffer);java.awt.image.SampleModel.setSample(int,int,int,int,DataBuffer);java.awt.image.SampleModel.setSample(int,int,int,float,DataBuffer);java.awt.image.SampleModel.setSample(int,int,int,double,DataBuffer);java.awt.image.SinglePixelPackedSampleModel.setSample(int,int,int,int,DataBuffer);java.awt.image.WritableRaster.setSample(int,int,int,int);java.awt.image.WritableRaster.setSample(int,int,int,float);java.awt.image.WritableRaster.setSample(int,int,int,double)",;0.77;0.76;0.76;0.75;0.74;0.74;0.73;0.77;0.53;0.53;0.77;0.72;0.71;0.71
accept,15,0.184098157,Records a new value into the summary information,";java.awt.ContainerOrderFocusTraversalPolicy.accept(Component);java.awt.DefaultFocusTraversalPolicy.accept(Component);java.net.ServerSocket.accept();java.net.SocketImpl.accept(SocketImpl);java.nio.channels.AsynchronousServerSocketChannel.accept(A,CompletionHandler&lt;AsynchronousSocketChannel,?);java.nio.channels.AsynchronousServerSocketChannel.accept();java.nio.channels.ServerSocketChannel.accept();java.util.DoubleSummaryStatistics.accept(double);java.util.IntSummaryStatistics.accept(int);java.util.LongSummaryStatistics.accept(int);java.util.LongSummaryStatistics.accept(long);javax.swing.JFileChooser.accept(File);javax.swing.SortingFocusTraversalPolicy.accept(Component);javax.swing.filechooser.FileFilter.accept(File);javax.swing.filechooser.FileNameExtensionFilter.accept(File)",;0.14;0.10;0.07;0.00;0.10;0.08;0.09;0.17;0.18;0.18;0.18;0.07;0.14;0.07;0.07
addImpl,15,0.333333333,"Adds the specified child Component. This method is overridden to conditionally forward calls to the contentPane. By default, children are added to the contentPane instead of the frame, refer to RootPaneContainer for details.",";java.awt.Container.addImpl(Component,Object,int);java.awt.ScrollPane.addImpl(Component,Object,int);javax.swing.AbstractButton.addImpl(Component,Object,int);javax.swing.CellRendererPane.addImpl(Component,Object,int);javax.swing.JApplet.addImpl(Component,Object,int);javax.swing.JDesktopPane.addImpl(Component,Object,int);javax.swing.JDialog.addImpl(Component,Object,int);javax.swing.JFrame.addImpl(Component,Object,int);javax.swing.JInternalFrame.addImpl(Component,Object,int);javax.swing.JLayer.addImpl(Component,Object,int);javax.swing.JLayeredPane.addImpl(Component,Object,int);javax.swing.JRootPane.addImpl(Component,Object,int);javax.swing.JToolBar.addImpl(Component,Object,int);javax.swing.JViewport.addImpl(Component,Object,int);javax.swing.JWindow.addImpl(Component,Object,int)",;0.14;0.08;0.08;0.07;0.33;0.14;0.33;0.33;0.33;0.07;0.07;0.07;0.07;0.07;0.33
date,15,0.391194808,"Obtains a local date in Minguo calendar system from the era, year-of-era, month-of-year and day-of-month fields.",";java.time.chrono.HijrahChronology.date(Era,int,int,int);java.time.chrono.HijrahChronology.date(int,int,int);java.time.chrono.HijrahChronology.date(TemporalAccessor);java.time.chrono.IsoChronology.date(Era,int,int,int);java.time.chrono.IsoChronology.date(int,int,int);java.time.chrono.IsoChronology.date(TemporalAccessor);java.time.chrono.JapaneseChronology.date(Era,int,int,int);java.time.chrono.JapaneseChronology.date(int,int,int);java.time.chrono.JapaneseChronology.date(TemporalAccessor);java.time.chrono.MinguoChronology.date(Era,int,int,int);java.time.chrono.MinguoChronology.date(int,int,int);java.time.chrono.MinguoChronology.date(TemporalAccessor);java.time.chrono.ThaiBuddhistChronology.date(Era,int,int,int);java.time.chrono.ThaiBuddhistChronology.date(int,int,int);java.time.chrono.ThaiBuddhistChronology.date(TemporalAccessor)",;0.39;0.38;0.27;0.34;0.29;0.10;0.19;0.25;0.27;0.39;0.38;0.27;0.38;0.38;0.27
dateNow,15,0.8,Description copied from interface:Chronology,;java.time.chrono.HijrahChronology.dateNow();java.time.chrono.HijrahChronology.dateNow(ZoneId);java.time.chrono.HijrahChronology.dateNow(Clock);java.time.chrono.IsoChronology.dateNow();java.time.chrono.IsoChronology.dateNow(ZoneId);java.time.chrono.IsoChronology.dateNow(Clock);java.time.chrono.JapaneseChronology.dateNow();java.time.chrono.JapaneseChronology.dateNow(ZoneId);java.time.chrono.JapaneseChronology.dateNow(Clock);java.time.chrono.MinguoChronology.dateNow();java.time.chrono.MinguoChronology.dateNow(ZoneId);java.time.chrono.MinguoChronology.dateNow(Clock);java.time.chrono.ThaiBuddhistChronology.dateNow();java.time.chrono.ThaiBuddhistChronology.dateNow(ZoneId);java.time.chrono.ThaiBuddhistChronology.dateNow(Clock),;0.80;0.80;0.80;0.14;0.14;0.11;0.80;0.80;0.80;0.80;0.80;0.80;0.80;0.80;0.80
doubleValue,15,0.472688814,Returns the value of this AtomicLong as a double after a widening primitive conversion.,;java.lang.Byte.doubleValue();java.lang.Double.doubleValue();java.lang.Float.doubleValue();java.lang.Integer.doubleValue();java.lang.Long.doubleValue();java.lang.Number.doubleValue();java.lang.Short.doubleValue();java.math.BigDecimal.doubleValue();java.math.BigInteger.doubleValue();java.util.concurrent.atomic.AtomicInteger.doubleValue();java.util.concurrent.atomic.AtomicLong.doubleValue();java.util.concurrent.atomic.DoubleAccumulator.doubleValue();java.util.concurrent.atomic.DoubleAdder.doubleValue();java.util.concurrent.atomic.LongAccumulator.doubleValue();java.util.concurrent.atomic.LongAdder.doubleValue(),;0.47;0.07;0.47;0.47;0.47;0.19;0.47;0.13;0.13;0.47;0.47;0.00;0.00;0.38;0.38
entrySet,15,0.493732525,"Returns a Set view of the mappings contained in this map. The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. If the map is modified while an iteration over the set is in progress (except through the iterator's own remove operation, or through the setValue operation on a map entry returned by the iterator) the results of the iteration are undefined. The set supports element removal, which removes the corresponding mapping from the map, via the Iterator.remove, Set.remove, removeAll, retainAll and clear operations. It does not support the add or addAll operations.",;java.awt.RenderingHints.entrySet();java.security.Provider.entrySet();java.util.AbstractMap.entrySet();java.util.EnumMap.entrySet();java.util.HashMap.entrySet();java.util.Hashtable.entrySet();java.util.IdentityHashMap.entrySet();java.util.LinkedHashMap.entrySet();java.util.TreeMap.entrySet();java.util.WeakHashMap.entrySet();java.util.concurrent.ConcurrentHashMap.entrySet();java.util.concurrent.ConcurrentSkipListMap.entrySet();java.util.jar.Attributes.entrySet();javax.management.openmbean.TabularDataSupport.entrySet();javax.script.SimpleBindings.entrySet(),;0.22;0.07;0.07;0.14;0.49;0.49;0.23;0.46;0.43;0.49;0.31;0.37;0.07;0.19;0.49
floatValue,15,0.504771275,Returns the value of this AtomicLong as a float after a widening primitive conversion.,;java.lang.Byte.floatValue();java.lang.Double.floatValue();java.lang.Float.floatValue();java.lang.Integer.floatValue();java.lang.Long.floatValue();java.lang.Number.floatValue();java.lang.Short.floatValue();java.math.BigDecimal.floatValue();java.math.BigInteger.floatValue();java.util.concurrent.atomic.AtomicInteger.floatValue();java.util.concurrent.atomic.AtomicLong.floatValue();java.util.concurrent.atomic.DoubleAccumulator.floatValue();java.util.concurrent.atomic.DoubleAdder.floatValue();java.util.concurrent.atomic.LongAccumulator.floatValue();java.util.concurrent.atomic.LongAdder.floatValue(),;0.50;0.43;0.07;0.50;0.50;0.19;0.50;0.13;0.13;0.50;0.50;0.37;0.36;0.45;0.44
invoke,15,0.267081394,Description copied from interface:RMIConnection,";java.beans.EventHandler.invoke(Object,Method,Object[]);java.lang.invoke.MethodHandle.invoke(Object...);java.lang.reflect.Method.invoke(Object,Object...);java.util.concurrent.ForkJoinPool.invoke(ForkJoinTask&lt;T&gt;);java.util.concurrent.ForkJoinTask.invoke();javax.management.MBeanServerInvocationHandler.invoke(Object,Method,Object[]);javax.management.StandardMBean.invoke(String,Object[],String[]);javax.management.openmbean.CompositeDataInvocationHandler.invoke(Object,Method,Object[]);javax.management.remote.rmi.RMIConnectionImpl.invoke(ObjectName,String,MarshalledObject,String[],Subject);javax.management.remote.rmi.RMIConnectionImpl_Stub.invoke(ObjectName,String,MarshalledObject,String[],Subject);javax.xml.ws.spi.Invoker.invoke(Method,Object...);org.omg.CORBA.DynamicImplementation.invoke(ServerRequest);org.omg.CORBA.Request.invoke();org.omg.CORBA.portable.Delegate.invoke(Object,OutputStream);org.omg.PortableServer.DynamicImplementation.invoke(ServerRequest)",;0.07;0.07;0.07;0.07;0.07;0.27;0.24;0.27;0.27;0.27;0.07;0.07;0.07;0.07;0.07
longValue,15,0.399829307,Returns the value of this Double as a long after a narrowing primitive conversion.,;java.lang.Byte.longValue();java.lang.Double.longValue();java.lang.Float.longValue();java.lang.Integer.longValue();java.lang.Long.longValue();java.lang.Number.longValue();java.lang.Short.longValue();java.math.BigDecimal.longValue();java.math.BigInteger.longValue();java.util.concurrent.atomic.AtomicInteger.longValue();java.util.concurrent.atomic.AtomicLong.longValue();java.util.concurrent.atomic.DoubleAccumulator.longValue();java.util.concurrent.atomic.DoubleAdder.longValue();java.util.concurrent.atomic.LongAccumulator.longValue();java.util.concurrent.atomic.LongAdder.longValue(),;0.40;0.40;0.29;0.40;0.23;0.17;0.40;0.11;0.12;0.40;0.23;0.28;0.28;0.00;0.00
markSupported,15,0.412497424,"Tests if this input stream supports the mark and reset methods, which it does not.",;java.io.BufferedInputStream.markSupported();java.io.BufferedReader.markSupported();java.io.ByteArrayInputStream.markSupported();java.io.CharArrayReader.markSupported();java.io.FilterInputStream.markSupported();java.io.FilterReader.markSupported();java.io.InputStream.markSupported();java.io.PushbackInputStream.markSupported();java.io.PushbackReader.markSupported();java.io.Reader.markSupported();java.io.StringReader.markSupported();java.util.zip.DeflaterInputStream.markSupported();java.util.zip.InflaterInputStream.markSupported();javax.crypto.CipherInputStream.markSupported();javax.sound.sampled.AudioInputStream.markSupported(),;0.37;0.41;0.10;0.41;0.35;0.32;0.23;0.41;0.40;0.25;0.41;0.20;0.38;0.41;0.33
peek,15,0.533748061,Description copied from interface:Queue,;java.net.DatagramSocketImpl.peek(InetAddress);java.util.ArrayDeque.peek();java.util.LinkedList.peek();java.util.PriorityQueue.peek();java.util.Stack.peek();java.util.concurrent.ArrayBlockingQueue.peek();java.util.concurrent.ConcurrentLinkedDeque.peek();java.util.concurrent.ConcurrentLinkedQueue.peek();java.util.concurrent.DelayQueue.peek();java.util.concurrent.LinkedBlockingDeque.peek();java.util.concurrent.LinkedBlockingQueue.peek();java.util.concurrent.LinkedTransferQueue.peek();java.util.concurrent.PriorityBlockingQueue.peek();java.util.concurrent.SynchronousQueue.peek();javax.xml.stream.util.EventReaderDelegate.peek(),;0.07;0.10;0.08;0.53;0.07;0.53;0.42;0.53;0.10;0.42;0.53;0.53;0.53;0.07;0.42
preferredLayoutSize,15,0.213021645,Returns the preferred dimensions for this layout given the components in the specified target container.,;java.awt.BorderLayout.preferredLayoutSize(Container);java.awt.CardLayout.preferredLayoutSize(Container);java.awt.FlowLayout.preferredLayoutSize(Container);java.awt.GridBagLayout.preferredLayoutSize(Container);java.awt.GridLayout.preferredLayoutSize(Container);javax.swing.BoxLayout.preferredLayoutSize(Container);javax.swing.GroupLayout.preferredLayoutSize(Container);javax.swing.JSpinner.DefaultEditor.preferredLayoutSize(Container);javax.swing.OverlayLayout.preferredLayoutSize(Container);javax.swing.ScrollPaneLayout.preferredLayoutSize(Container);javax.swing.SpringLayout.preferredLayoutSize(Container);javax.swing.ViewportLayout.preferredLayoutSize(Container);javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout.preferredLayoutSize(Container);javax.swing.plaf.basic.BasicScrollBarUI.preferredLayoutSize(Container);javax.swing.plaf.basic.DefaultMenuLayout.preferredLayoutSize(Container),;0.13;0.10;0.20;0.11;0.10;0.21;0.08;0.10;0.16;0.09;0.20;0.21;0.20;0.20;0.07
replaceAll,15,0.622913435,Description copied from interface:Map,";java.lang.String.replaceAll(String,String);java.security.Provider.replaceAll(BiFunction&lt;?,?,?);java.util.ArrayList.replaceAll(UnaryOperator&lt;E&gt;);java.util.Collections.replaceAll(List&lt;T&gt;,T,T);java.util.HashMap.replaceAll(BiFunction&lt;?,?,?);java.util.Hashtable.replaceAll(BiFunction&lt;?,?,?);java.util.IdentityHashMap.replaceAll(BiFunction&lt;?,?,?);java.util.LinkedHashMap.replaceAll(BiFunction&lt;?,?,?);java.util.TreeMap.replaceAll(BiFunction&lt;?,?,?);java.util.Vector.replaceAll(UnaryOperator&lt;E&gt;);java.util.WeakHashMap.replaceAll(BiFunction&lt;?,?,?);java.util.concurrent.ConcurrentHashMap.replaceAll(BiFunction&lt;?,?,?);java.util.concurrent.ConcurrentSkipListMap.replaceAll(BiFunction&lt;?,?,?);java.util.concurrent.CopyOnWriteArrayList.replaceAll(UnaryOperator&lt;E&gt;);java.util.regex.Matcher.replaceAll(String)",;0.08;0.07;0.56;0.07;0.62;0.62;0.62;0.62;0.62;0.56;0.62;0.53;0.53;0.56;0.08
copy,16,0.5,"Creates a new DynAny object whose value is a deep copy of the DynAny on which it is invoked. The operation is polymorphic, that is, invoking it on one of the types derived from DynAny, such as DynStruct, creates the derived type but returns its reference as the DynAny base type.",";java.nio.file.Files.copy(Path,Path,CopyOption...);java.nio.file.Files.copy(InputStream,Path,CopyOption...);java.nio.file.Files.copy(Path,OutputStream);java.nio.file.spi.FileSystemProvider.copy(Path,Path,CopyOption...);java.util.Collections.copy(List&lt;?,List&lt;?);javax.swing.JPasswordField.copy();javax.swing.text.JTextComponent.copy();org.omg.CORBA._PolicyStub.copy();org.omg.DynamicAny._DynAnyStub.copy();org.omg.DynamicAny._DynArrayStub.copy();org.omg.DynamicAny._DynEnumStub.copy();org.omg.DynamicAny._DynFixedStub.copy();org.omg.DynamicAny._DynSequenceStub.copy();org.omg.DynamicAny._DynStructStub.copy();org.omg.DynamicAny._DynUnionStub.copy();org.omg.DynamicAny._DynValueStub.copy()",;0.08;0.09;0.08;0.06;0.06;0.08;0.08;0.06;0.50;0.50;0.50;0.50;0.50;0.50;0.50;0.50
forEach,16,0.730073883,Description copied from interface:Map,";java.security.Provider.forEach(BiConsumer&lt;?,?);java.util.ArrayList.forEach(Consumer&lt;?);java.util.HashMap.forEach(BiConsumer&lt;?,?);java.util.Hashtable.forEach(BiConsumer&lt;?,?);java.util.IdentityHashMap.forEach(BiConsumer&lt;?,?);java.util.LinkedHashMap.forEach(BiConsumer&lt;?,?);java.util.TreeMap.forEach(BiConsumer&lt;?,?);java.util.Vector.forEach(Consumer&lt;?);java.util.WeakHashMap.forEach(BiConsumer&lt;?,?);java.util.concurrent.ConcurrentHashMap.forEach(BiConsumer&lt;?,?);java.util.concurrent.ConcurrentHashMap.forEach(long,BiConsumer&lt;?,?);java.util.concurrent.ConcurrentHashMap.forEach(long,BiFunction&lt;?,?,?,Consumer&lt;?);java.util.concurrent.ConcurrentHashMap.KeySetView.forEach(Consumer&lt;?);java.util.concurrent.ConcurrentSkipListMap.forEach(BiConsumer&lt;?,?);java.util.concurrent.CopyOnWriteArrayList.forEach(Consumer&lt;?);java.util.concurrent.CopyOnWriteArraySet.forEach(Consumer&lt;?)",;0.73;0.69;0.73;0.73;0.73;0.73;0.73;0.69;0.73;0.63;0.09;0.09;0.69;0.63;0.69;0.69
getSize,16,0.125,Description copied from interface:ListModel,;java.awt.Component.getSize();java.awt.Component.getSize(Dimension);java.awt.Dimension.getSize();java.awt.Font.getSize();java.awt.Rectangle.getSize();java.awt.SplashScreen.getSize();java.awt.TrayIcon.getSize();java.awt.image.DataBuffer.getSize();java.util.zip.ZipEntry.getSize();javax.print.attribute.Size2DSyntax.getSize(int);javax.swing.DefaultComboBoxModel.getSize();javax.swing.DefaultListModel.getSize();javax.swing.JComponent.getSize(Dimension);javax.swing.SizeSequence.getSize(int);javax.swing.plaf.basic.BasicDirectoryModel.getSize();javax.xml.soap.AttachmentPart.getSize(),;0.08;0.12;0.10;0.06;0.10;0.07;0.07;0.06;0.06;0.06;0.12;0.07;0.12;0.07;0.12;0.06
intValue,16,0.481685435,Returns the value of this Long as an int after a narrowing primitive conversion.,;java.lang.Byte.intValue();java.lang.Double.intValue();java.lang.Float.intValue();java.lang.Integer.intValue();java.lang.Long.intValue();java.lang.Number.intValue();java.lang.Short.intValue();java.math.BigDecimal.intValue();java.math.BigInteger.intValue();java.util.concurrent.atomic.AtomicInteger.intValue();java.util.concurrent.atomic.AtomicLong.intValue();java.util.concurrent.atomic.DoubleAccumulator.intValue();java.util.concurrent.atomic.DoubleAdder.intValue();java.util.concurrent.atomic.LongAccumulator.intValue();java.util.concurrent.atomic.LongAdder.intValue();java.util.logging.Level.intValue(),;0.40;0.48;0.48;0.24;0.48;0.17;0.40;0.10;0.12;0.24;0.48;0.40;0.39;0.40;0.39;0.06
min,16,0.329483791,"Returns the smaller of two double values. That is, the result is the value closer to negative infinity. If the arguments have the same value, the result is that same value. If either value is NaN, then the result is NaN. Unlike the numerical comparison operators, this method considers negative zero to be strictly smaller than positive zero. If one argument is positive zero and the other is negative zero, the result is negative zero.",";java.lang.Double.min(double,double);java.lang.Float.min(float,float);java.lang.Integer.min(int,int);java.lang.Long.min(long,long);java.lang.Math.min(int,int);java.lang.Math.min(long,long);java.lang.Math.min(float,float);java.lang.Math.min(double,double);java.lang.StrictMath.min(int,int);java.lang.StrictMath.min(long,long);java.lang.StrictMath.min(float,float);java.lang.StrictMath.min(double,double);java.math.BigDecimal.min(BigDecimal);java.math.BigInteger.min(BigInteger);java.util.Collections.min(Collection&lt;?);java.util.Collections.min(Collection&lt;?,Comparator&lt;?)",;0.22;0.22;0.23;0.23;0.29;0.30;0.33;0.33;0.29;0.30;0.33;0.33;0.10;0.10;0.11;0.11
open,16,0.199355919,"Opens an asynchronous server-socket channel. The new channel is created by invoking the openAsynchronousServerSocketChannel method on the AsynchronousChannelProvider object that created the given group. If the group parameter is null then the resulting channel is created by the system-wide default provider, and bound to the default group.",";java.awt.Desktop.open(File);java.nio.channels.AsynchronousFileChannel.open(Path,Set&lt;?,ExecutorService,FileAttribute&lt;?&gt;...);java.nio.channels.AsynchronousFileChannel.open(Path,OpenOption...);java.nio.channels.AsynchronousServerSocketChannel.open(AsynchronousChannelGroup);java.nio.channels.AsynchronousServerSocketChannel.open();java.nio.channels.AsynchronousSocketChannel.open(AsynchronousChannelGroup);java.nio.channels.AsynchronousSocketChannel.open();java.nio.channels.DatagramChannel.open();java.nio.channels.DatagramChannel.open(ProtocolFamily);java.nio.channels.FileChannel.open(Path,Set&lt;?,FileAttribute&lt;?&gt;...);java.nio.channels.FileChannel.open(Path,OpenOption...);java.nio.channels.Pipe.open();java.nio.channels.Selector.open();java.nio.channels.ServerSocketChannel.open();java.nio.channels.SocketChannel.open();java.nio.channels.SocketChannel.open(SocketAddress)",;0.06;0.13;0.09;0.20;0.13;0.20;0.13;0.16;0.16;0.13;0.08;0.16;0.16;0.17;0.18;0.07
setCurve,16,0.73203298,Sets the location of the end points and control points of this curve to the specified double coordinates.,";java.awt.geom.CubicCurve2D.setCurve(double,double,double,double,double,double,double,double);java.awt.geom.CubicCurve2D.setCurve(double[],int);java.awt.geom.CubicCurve2D.setCurve(Point2D,Point2D,Point2D,Point2D);java.awt.geom.CubicCurve2D.setCurve(Point2D[],int);java.awt.geom.CubicCurve2D.setCurve(CubicCurve2D);java.awt.geom.CubicCurve2D.Double.setCurve(double,double,double,double,double,double,double,double);java.awt.geom.CubicCurve2D.Float.setCurve(double,double,double,double,double,double,double,double);java.awt.geom.CubicCurve2D.Float.setCurve(float,float,float,float,float,float,float,float);java.awt.geom.QuadCurve2D.setCurve(double,double,double,double,double,double);java.awt.geom.QuadCurve2D.setCurve(double[],int);java.awt.geom.QuadCurve2D.setCurve(Point2D,Point2D,Point2D);java.awt.geom.QuadCurve2D.setCurve(Point2D[],int);java.awt.geom.QuadCurve2D.setCurve(QuadCurve2D);java.awt.geom.QuadCurve2D.Double.setCurve(double,double,double,double,double,double);java.awt.geom.QuadCurve2D.Float.setCurve(double,double,double,double,double,double);java.awt.geom.QuadCurve2D.Float.setCurve(float,float,float,float,float,float)",;0.73;0.61;0.70;0.56;0.62;0.73;0.73;0.70;0.71;0.56;0.60;0.52;0.54;0.71;0.71;0.68
setLocation,16,0.279943762,Sets the location of this Point2D to the specified double coordinates.,";java.awt.Component.setLocation(int,int);java.awt.Component.setLocation(Point);java.awt.Point.setLocation(Point);java.awt.Point.setLocation(int,int);java.awt.Point.setLocation(double,double);java.awt.Rectangle.setLocation(Point);java.awt.Rectangle.setLocation(int,int);java.awt.Window.setLocation(int,int);java.awt.Window.setLocation(Point);java.awt.geom.Point2D.setLocation(double,double);java.awt.geom.Point2D.setLocation(Point2D);java.awt.geom.Point2D.Double.setLocation(double,double);java.awt.geom.Point2D.Float.setLocation(double,double);java.awt.geom.Point2D.Float.setLocation(float,float);javax.swing.JPopupMenu.setLocation(int,int);javax.xml.stream.XMLEventFactory.setLocation(Location)",;0.15;0.15;0.24;0.17;0.12;0.20;0.20;0.20;0.20;0.28;0.20;0.28;0.28;0.26;0.15;0.06
available,17,0.305683209,"Returns an estimate of the number of bytes that can be read (or skipped over) from this input stream without blocking by the next invocation of a method for this input stream. The next invocation might be the same thread or another thread. A single read or skip of this many bytes will not block, but may read or skip fewer bytes. This method returns the sum of the number of bytes remaining to be read in the buffer (count- pos) and the result of calling the in.available().",;java.io.BufferedInputStream.available();java.io.ByteArrayInputStream.available();java.io.FileInputStream.available();java.io.FilterInputStream.available();java.io.InputStream.available();java.io.LineNumberInputStream.available();java.io.ObjectInputStream.available();java.io.PipedInputStream.available();java.io.PushbackInputStream.available();java.io.SequenceInputStream.available();java.io.StringBufferInputStream.available();java.net.SocketImpl.available();java.util.zip.DeflaterInputStream.available();java.util.zip.InflaterInputStream.available();java.util.zip.ZipInputStream.available();javax.crypto.CipherInputStream.available();javax.sound.sampled.AudioInputStream.available(),;0.31;0.16;0.25;0.30;0.22;0.00;0.16;0.19;0.31;0.29;0.00;0.18;0.20;0.20;0.19;0.19;0.18
containsValue,17,0.344446111,"Returns true if this map maps one or more keys to the specified value. More formally, returns true if and only if this map contains at least one mapping to a value v such that (value==null ? v==null : value.equals(v)). This operation will probably require time linear in the map size for most implementations.",;java.awt.RenderingHints.containsValue(Object);java.util.AbstractMap.containsValue(Object);java.util.EnumMap.containsValue(Object);java.util.HashMap.containsValue(Object);java.util.Hashtable.containsValue(Object);java.util.IdentityHashMap.containsValue(Object);java.util.LinkedHashMap.containsValue(Object);java.util.TreeMap.containsValue(Object);java.util.WeakHashMap.containsValue(Object);java.util.concurrent.ConcurrentHashMap.containsValue(Object);java.util.concurrent.ConcurrentSkipListMap.containsValue(Object);java.util.jar.Attributes.containsValue(Object);javax.management.openmbean.CompositeDataSupport.containsValue(Object);javax.management.openmbean.TabularDataSupport.containsValue(CompositeData);javax.management.openmbean.TabularDataSupport.containsValue(Object);javax.print.attribute.HashAttributeSet.containsValue(Attribute);javax.script.SimpleBindings.containsValue(Object),;0.31;0.34;0.32;0.32;0.19;0.06;0.32;0.34;0.32;0.25;0.24;0.23;0.10;0.11;0.10;0.12;0.34
getDisplayName,17,0.141247638,"Returns a name in the specified style of this TimeZone suitable for presentation to the user in the default locale. If the specified daylight is true, a Daylight Saving Time name is returned (even if this TimeZone doesn't observe Daylight Saving Time). Otherwise, a Standard Time name is returned. This method is equivalent to: getDisplayName(daylight, style, Locale.getDefault(Locale.Category.DISPLAY))",";java.beans.FeatureDescriptor.getDisplayName();java.net.NetworkInterface.getDisplayName();java.time.ZoneId.getDisplayName(TextStyle,Locale);java.time.chrono.JapaneseEra.getDisplayName(TextStyle,Locale);java.util.Calendar.getDisplayName(int,int,Locale);java.util.Currency.getDisplayName();java.util.Currency.getDisplayName(Locale);java.util.Locale.getDisplayName();java.util.Locale.getDisplayName(Locale);java.util.TimeZone.getDisplayName();java.util.TimeZone.getDisplayName(Locale);java.util.TimeZone.getDisplayName(boolean,int);java.util.TimeZone.getDisplayName(boolean,int,Locale);java.util.spi.CalendarNameProvider.getDisplayName(String,int,int,int,Locale);java.util.spi.CurrencyNameProvider.getDisplayName(String,Locale);java.util.spi.TimeZoneNameProvider.getDisplayName(String,boolean,int,Locale);javax.swing.colorchooser.AbstractColorChooserPanel.getDisplayName()",;0.06;0.07;0.13;0.13;0.07;0.11;0.09;0.13;0.13;0.14;0.13;0.14;0.12;0.08;0.06;0.10;0.07
getID,17,0.235294118,Get the unique identifier for this WebServiceFeature.,;java.awt.AWTEvent.getID();java.rmi.activation.Activatable.getID();java.util.TimeZone.getID();javax.naming.directory.BasicAttribute.getID();javax.naming.ldap.BasicControl.getID();javax.naming.ldap.StartTlsRequest.getID();javax.naming.ldap.StartTlsResponse.getID();javax.swing.LookAndFeel.getID();javax.swing.plaf.metal.MetalLookAndFeel.getID();javax.swing.plaf.multi.MultiLookAndFeel.getID();javax.swing.plaf.nimbus.NimbusLookAndFeel.getID();javax.swing.plaf.synth.ColorType.getID();javax.swing.plaf.synth.SynthLookAndFeel.getID();javax.xml.ws.RespectBindingFeature.getID();javax.xml.ws.WebServiceFeature.getID();javax.xml.ws.soap.AddressingFeature.getID();javax.xml.ws.soap.MTOMFeature.getID(),;0.06;0.06;0.06;0.06;0.11;0.11;0.11;0.08;0.10;0.11;0.12;0.06;0.12;0.24;0.24;0.24;0.24
getPropertyChangeListeners,17,0.499991601,Returns an array of all the property change listeners registered on this component.,;java.awt.Component.getPropertyChangeListeners();java.awt.Component.getPropertyChangeListeners(String);java.awt.KeyboardFocusManager.getPropertyChangeListeners();java.awt.KeyboardFocusManager.getPropertyChangeListeners(String);java.awt.SystemTray.getPropertyChangeListeners(String);java.awt.Toolkit.getPropertyChangeListeners();java.awt.Toolkit.getPropertyChangeListeners(String);java.beans.PropertyChangeSupport.getPropertyChangeListeners();java.beans.PropertyChangeSupport.getPropertyChangeListeners(String);javax.swing.AbstractAction.getPropertyChangeListeners();javax.swing.UIDefaults.getPropertyChangeListeners();javax.swing.UIManager.getPropertyChangeListeners();javax.swing.plaf.LayerUI.getPropertyChangeListeners();javax.swing.plaf.LayerUI.getPropertyChangeListeners(String);javax.swing.plaf.basic.BasicDirectoryModel.getPropertyChangeListeners();javax.swing.table.TableColumn.getPropertyChangeListeners();javax.swing.tree.DefaultTreeSelectionModel.getPropertyChangeListeners(),;0.50;0.45;0.45;0.43;0.31;0.29;0.29;0.11;0.45;0.43;0.43;0.43;0.50;0.45;0.50;0.43;0.49
getText,17,0.117647059,"Deprecated.As of Java 2 platform v1.2, replaced by getPassword.",";java.awt.Label.getText();java.awt.TextComponent.getText();java.awt.event.InputMethodEvent.getText();java.text.BreakIterator.getText();javax.security.auth.callback.TextInputCallback.getText();javax.swing.AbstractButton.getText();javax.swing.JEditorPane.getText();javax.swing.JLabel.getText();javax.swing.JPasswordField.getText();javax.swing.JPasswordField.getText(int,int);javax.swing.text.AbstractDocument.getText(int,int);javax.swing.text.AbstractDocument.getText(int,int,Segment);javax.swing.text.AbstractWriter.getText(Element);javax.swing.text.GlyphView.getText(int,int);javax.swing.text.JTextComponent.getText(int,int);javax.swing.text.JTextComponent.getText();javax.xml.stream.util.StreamReaderDelegate.getText()",;0.06;0.06;0.06;0.06;0.06;0.06;0.07;0.06;0.12;0.12;0.06;0.06;0.06;0.06;0.06;0.07;0.06
indexOf,17,0.400305122,"Returns the index of the first occurrence of the specified element in this list, or -1 if this list does not contain the element. More formally, returns the lowest index i such that (o==null?get(i)==null:o.equals(get(i))), or -1 if there is no such index.",";java.lang.String.indexOf(int);java.lang.String.indexOf(int,int);java.lang.String.indexOf(String);java.lang.String.indexOf(String,int);java.lang.StringBuffer.indexOf(String);java.lang.StringBuffer.indexOf(String,int);java.lang.StringBuilder.indexOf(String);java.lang.StringBuilder.indexOf(String,int);java.util.AbstractList.indexOf(Object);java.util.ArrayList.indexOf(Object);java.util.LinkedList.indexOf(Object);java.util.Vector.indexOf(Object);java.util.Vector.indexOf(Object,int);java.util.concurrent.CopyOnWriteArrayList.indexOf(Object);java.util.concurrent.CopyOnWriteArrayList.indexOf(E,int);javax.swing.DefaultListModel.indexOf(Object);javax.swing.DefaultListModel.indexOf(Object,int)",;0.19;0.15;0.30;0.31;0.28;0.32;0.28;0.32;0.30;0.40;0.40;0.38;0.35;0.40;0.33;0.09;0.10
lastIndexOf,17,0.392816658,"Returns the index of the last occurrence of the specified element in this list, or -1 if this list does not contain the element. More formally, returns the highest index i such that (o==null?get(i)==null:o.equals(get(i))), or -1 if there is no such index.",";java.lang.String.lastIndexOf(int);java.lang.String.lastIndexOf(int,int);java.lang.String.lastIndexOf(String);java.lang.String.lastIndexOf(String,int);java.lang.StringBuffer.lastIndexOf(String);java.lang.StringBuffer.lastIndexOf(String,int);java.lang.StringBuilder.lastIndexOf(String);java.lang.StringBuilder.lastIndexOf(String,int);java.util.AbstractList.lastIndexOf(Object);java.util.ArrayList.lastIndexOf(Object);java.util.LinkedList.lastIndexOf(Object);java.util.Vector.lastIndexOf(Object);java.util.Vector.lastIndexOf(Object,int);java.util.concurrent.CopyOnWriteArrayList.lastIndexOf(Object);java.util.concurrent.CopyOnWriteArrayList.lastIndexOf(E,int);javax.swing.DefaultListModel.lastIndexOf(Object);javax.swing.DefaultListModel.lastIndexOf(Object,int)",;0.22;0.21;0.31;0.30;0.27;0.33;0.27;0.33;0.28;0.39;0.39;0.38;0.34;0.39;0.33;0.06;0.06
max,17,0.320798299,"Returns the greater of two float values. That is, the result is the argument closer to positive infinity. If the arguments have the same value, the result is that same value. If either value is NaN, then the result is NaN. Unlike the numerical comparison operators, this method considers negative zero to be strictly smaller than positive zero. If one argument is positive zero and the other negative zero, the result is positive zero.",";java.lang.Double.max(double,double);java.lang.Float.max(float,float);java.lang.Integer.max(int,int);java.lang.Long.max(long,long);java.lang.Math.max(int,int);java.lang.Math.max(long,long);java.lang.Math.max(float,float);java.lang.Math.max(double,double);java.lang.StrictMath.max(int,int);java.lang.StrictMath.max(long,long);java.lang.StrictMath.max(float,float);java.lang.StrictMath.max(double,double);java.math.BigDecimal.max(BigDecimal);java.math.BigInteger.max(BigInteger);java.util.Collections.max(Collection&lt;?);java.util.Collections.max(Collection&lt;?,Comparator&lt;?);javax.swing.Spring.max(Spring,Spring)",;0.21;0.21;0.21;0.21;0.30;0.30;0.32;0.32;0.30;0.30;0.32;0.32;0.09;0.09;0.10;0.10;0.06
setModel,17,0.207956555,Sets the TreeModel that will provide the data.,;javax.swing.AbstractButton.setModel(ButtonModel);javax.swing.JComboBox.setModel(ComboBoxModel&lt;E&gt;);javax.swing.JList.setModel(ListModel&lt;E&gt;);javax.swing.JMenu.setModel(ButtonModel);javax.swing.JMenuItem.setModel(ButtonModel);javax.swing.JProgressBar.setModel(BoundedRangeModel);javax.swing.JScrollBar.setModel(BoundedRangeModel);javax.swing.JSlider.setModel(BoundedRangeModel);javax.swing.JSpinner.setModel(SpinnerModel);javax.swing.JTabbedPane.setModel(SingleSelectionModel);javax.swing.JTable.setModel(TableModel);javax.swing.JTree.setModel(TreeModel);javax.swing.plaf.basic.BasicTreeUI.setModel(TreeModel);javax.swing.table.TableRowSorter.setModel(M);javax.swing.tree.AbstractLayoutCache.setModel(TreeModel);javax.swing.tree.FixedHeightLayoutCache.setModel(TreeModel);javax.swing.tree.VariableHeightLayoutCache.setModel(TreeModel),;0.13;0.08;0.08;0.09;0.13;0.08;0.09;0.07;0.06;0.06;0.08;0.16;0.00;0.06;0.21;0.21;0.21
type,17,0.470588235,Returns the TypeCode associated with this DynAny object. A DynAny object is created with a TypeCode value assigned to it. This TypeCode value determines the type of the value handled through the DynAny object. Note that the TypeCode associated with a DynAny object is initialized at the time the DynAny is created and cannot be changed during lifetime of the DynAny object.,;java.lang.ProcessBuilder.Redirect.type();java.lang.invoke.CallSite.type();java.lang.invoke.MethodHandle.type();java.net.Proxy.type();java.nio.file.FileStore.type();java.nio.file.attribute.AclEntry.type();org.omg.CORBA._IDLTypeStub.type();org.omg.CORBA.Any.type();org.omg.CORBA.Any.type(TypeCode);org.omg.DynamicAny._DynAnyStub.type();org.omg.DynamicAny._DynArrayStub.type();org.omg.DynamicAny._DynEnumStub.type();org.omg.DynamicAny._DynFixedStub.type();org.omg.DynamicAny._DynSequenceStub.type();org.omg.DynamicAny._DynStructStub.type();org.omg.DynamicAny._DynUnionStub.type();org.omg.DynamicAny._DynValueStub.type(),;0.06;0.07;0.07;0.06;0.07;0.06;0.06;0.06;0.06;0.47;0.47;0.47;0.47;0.47;0.47;0.47;0.47
values,17,0.559831384,"Returns a Collection view of the values contained in this map. The collection is backed by the map, so changes to the map are reflected in the collection, and vice-versa. If the map is modified while an iteration over the collection is in progress (except through the iterator's own remove operation), the results of the iteration are undefined. The collection supports element removal, which removes the corresponding mapping from the map, via the Iterator.remove, Collection.remove, removeAll, retainAll and clear operations. It does not support the add or addAll operations.",;java.awt.RenderingHints.values();java.security.Provider.values();java.time.chrono.JapaneseEra.values();java.util.AbstractMap.values();java.util.EnumMap.values();java.util.HashMap.values();java.util.Hashtable.values();java.util.IdentityHashMap.values();java.util.LinkedHashMap.values();java.util.TreeMap.values();java.util.WeakHashMap.values();java.util.concurrent.ConcurrentHashMap.values();java.util.concurrent.ConcurrentSkipListMap.values();java.util.jar.Attributes.values();javax.management.openmbean.CompositeDataSupport.values();javax.management.openmbean.TabularDataSupport.values();javax.script.SimpleBindings.values(),;0.41;0.09;0.06;0.56;0.16;0.56;0.56;0.41;0.52;0.47;0.56;0.43;0.43;0.09;0.11;0.25;0.56
addPropertyChangeListener,18,0.32335785,"Add a PropertyChangeListener to the listener list. The listener is registered for all properties. The same listener object may be added more than once, and will be called as many times as it is added. If listener is null, no exception is thrown and no action is taken.",";java.awt.SystemTray.addPropertyChangeListener(String,PropertyChangeListener);java.awt.Toolkit.addPropertyChangeListener(String,PropertyChangeListener);java.beans.PropertyChangeSupport.addPropertyChangeListener(PropertyChangeListener);java.beans.PropertyChangeSupport.addPropertyChangeListener(String,PropertyChangeListener);java.beans.PropertyEditorSupport.addPropertyChangeListener(PropertyChangeListener);java.beans.beancontext.BeanContextChildSupport.addPropertyChangeListener(String,PropertyChangeListener);java.util.logging.LogManager.addPropertyChangeListener(PropertyChangeListener);javax.accessibility.AccessibleContext.addPropertyChangeListener(PropertyChangeListener);javax.swing.AbstractAction.addPropertyChangeListener(PropertyChangeListener);javax.swing.JTree.EmptySelectionModel.addPropertyChangeListener(PropertyChangeListener);javax.swing.SwingWorker.addPropertyChangeListener(PropertyChangeListener);javax.swing.UIDefaults.addPropertyChangeListener(PropertyChangeListener);javax.swing.UIManager.addPropertyChangeListener(PropertyChangeListener);javax.swing.plaf.LayerUI.addPropertyChangeListener(PropertyChangeListener);javax.swing.plaf.LayerUI.addPropertyChangeListener(String,PropertyChangeListener);javax.swing.plaf.basic.BasicDirectoryModel.addPropertyChangeListener(PropertyChangeListener);javax.swing.table.TableColumn.addPropertyChangeListener(PropertyChangeListener);javax.swing.tree.DefaultTreeSelectionModel.addPropertyChangeListener(PropertyChangeListener)",;0.13;0.15;0.32;0.20;0.18;0.21;0.06;0.23;0.21;0.06;0.30;0.25;0.19;0.32;0.24;0.32;0.21;0.25
getDataElements,18,0.397095627,"Returns a data element array representation of a pixel in this ColorModel, given an array of unnormalized color/alpha components. This array can then be passed to the setDataElements method of a WritableRaster object. An ArrayIndexOutOfBoundsException is thrown if the components array is not large enough to hold all the color and alpha components, starting at offset. If the obj variable is null, a new array is allocated. If obj is not null, it must be a primitive array of type transferType; otherwise, a ClassCastException is thrown. An ArrayIndexOutOfBoundsException is thrown if obj is not large enough to hold a pixel value for this ColorModel. Since DirectColorModel can be subclassed, subclasses inherit the implementation of this method and if they don't override it then they throw an exception if they use an unsupported transferType.",";java.awt.image.BandedSampleModel.getDataElements(int,int,Object,DataBuffer);java.awt.image.ColorModel.getDataElements(int,Object);java.awt.image.ColorModel.getDataElements(int[],int,Object);java.awt.image.ColorModel.getDataElements(float[],int,Object);java.awt.image.ComponentColorModel.getDataElements(int,Object);java.awt.image.ComponentColorModel.getDataElements(int[],int,Object);java.awt.image.ComponentColorModel.getDataElements(float[],int,Object);java.awt.image.ComponentSampleModel.getDataElements(int,int,Object,DataBuffer);java.awt.image.DirectColorModel.getDataElements(int,Object);java.awt.image.DirectColorModel.getDataElements(int[],int,Object);java.awt.image.IndexColorModel.getDataElements(int,Object);java.awt.image.IndexColorModel.getDataElements(int[],int,Object);java.awt.image.MultiPixelPackedSampleModel.getDataElements(int,int,Object,DataBuffer);java.awt.image.Raster.getDataElements(int,int,Object);java.awt.image.Raster.getDataElements(int,int,int,int,Object);java.awt.image.SampleModel.getDataElements(int,int,Object,DataBuffer);java.awt.image.SampleModel.getDataElements(int,int,int,int,Object,DataBuffer);java.awt.image.SinglePixelPackedSampleModel.getDataElements(int,int,Object,DataBuffer)",;0.32;0.33;0.35;0.34;0.22;0.09;0.35;0.31;0.38;0.40;0.38;0.39;0.31;0.17;0.17;0.33;0.31;0.32
getModel,18,0.1825836,Returns the underlying model.,;javax.swing.AbstractButton.getModel();javax.swing.DefaultRowSorter.getModel();javax.swing.DefaultRowSorter.ModelWrapper.getModel();javax.swing.JComboBox.getModel();javax.swing.JList.getModel();javax.swing.JProgressBar.getModel();javax.swing.JScrollBar.getModel();javax.swing.JSlider.getModel();javax.swing.JSpinner.getModel();javax.swing.JSpinner.DateEditor.getModel();javax.swing.JSpinner.ListEditor.getModel();javax.swing.JSpinner.NumberEditor.getModel();javax.swing.JTabbedPane.getModel();javax.swing.JTable.getModel();javax.swing.JTree.getModel();javax.swing.RowFilter.Entry.getModel();javax.swing.RowSorter.getModel();javax.swing.tree.AbstractLayoutCache.getModel(),;0.06;0.18;0.11;0.09;0.08;0.08;0.07;0.08;0.06;0.14;0.15;0.15;0.06;0.06;0.11;0.18;0.18;0.11
keySet,18,0.481454154,"Returns a Set view of the keys contained in this map. The set is backed by the map, so changes to the map are reflected in the set, and vice-versa. If the map is modified while an iteration over the set is in progress (except through the iterator's own remove operation), the results of the iteration are undefined. The set supports element removal, which removes the corresponding mapping from the map, via the Iterator.remove, Set.remove, removeAll, retainAll, and clear operations. It does not support the add or addAll operations.",;java.awt.RenderingHints.keySet();java.security.Provider.keySet();java.util.AbstractMap.keySet();java.util.EnumMap.keySet();java.util.HashMap.keySet();java.util.Hashtable.keySet();java.util.IdentityHashMap.keySet();java.util.LinkedHashMap.keySet();java.util.ResourceBundle.keySet();java.util.TreeMap.keySet();java.util.WeakHashMap.keySet();java.util.concurrent.ConcurrentHashMap.keySet();java.util.concurrent.ConcurrentHashMap.keySet(V);java.util.concurrent.ConcurrentSkipListMap.keySet();java.util.jar.Attributes.keySet();javax.management.openmbean.CompositeType.keySet();javax.management.openmbean.TabularDataSupport.keySet();javax.script.SimpleBindings.keySet(),;0.34;0.10;0.48;0.14;0.48;0.48;0.22;0.44;0.08;0.36;0.48;0.37;0.11;0.31;0.10;0.08;0.22;0.48
list,18,0.14826335,Description copied from interface:Context,";java.awt.Component.list();java.awt.Component.list(PrintStream);java.awt.Component.list(PrintStream,int);java.awt.Component.list(PrintWriter);java.awt.Component.list(PrintWriter,int);java.awt.Container.list(PrintStream,int);java.awt.Container.list(PrintWriter,int);java.io.File.list();java.io.File.list(FilenameFilter);java.lang.ThreadGroup.list();java.nio.file.Files.list(Path);java.rmi.Naming.list(String);java.util.Collections.list(Enumeration&lt;T&gt;);java.util.Properties.list(PrintStream);java.util.Properties.list(PrintWriter);javax.naming.InitialContext.list(String);javax.naming.InitialContext.list(Name);javax.tools.ForwardingJavaFileManager.list(JavaFileManager.Location,String,Set&lt;JavaFileObject.Kind&gt;,boolean)",;0.09;0.12;0.13;0.08;0.13;0.13;0.13;0.07;0.07;0.08;0.06;0.06;0.06;0.14;0.14;0.15;0.15;0.13
mark,18,0.248549541,Marks the present position in the stream. Subsequent calls to reset() will attempt to reposition the stream to this point.,;java.io.BufferedInputStream.mark(int);java.io.BufferedReader.mark(int);java.io.ByteArrayInputStream.mark(int);java.io.CharArrayReader.mark(int);java.io.FilterInputStream.mark(int);java.io.FilterReader.mark(int);java.io.InputStream.mark(int);java.io.LineNumberInputStream.mark(int);java.io.LineNumberReader.mark(int);java.io.PushbackInputStream.mark(int);java.io.PushbackReader.mark(int);java.io.Reader.mark(int);java.io.StringReader.mark(int);java.nio.Buffer.mark();java.util.zip.DeflaterInputStream.mark(int);java.util.zip.InflaterInputStream.mark(int);javax.imageio.stream.ImageInputStreamImpl.mark();javax.sound.sampled.AudioInputStream.mark(int),;0.06;0.25;0.07;0.25;0.09;0.11;0.09;0.00;0.21;0.12;0.15;0.21;0.25;0.06;0.06;0.12;0.06;0.09
parallelSort,18,0.344703379,"Sorts the specified range of the array into ascending numerical order. The range to be sorted extends from the index fromIndex, inclusive, to the index toIndex, exclusive. If fromIndex == toIndex, the range to be sorted is empty.",";java.util.Arrays.parallelSort(byte[]);java.util.Arrays.parallelSort(byte[],int,int);java.util.Arrays.parallelSort(char[]);java.util.Arrays.parallelSort(char[],int,int);java.util.Arrays.parallelSort(short[]);java.util.Arrays.parallelSort(short[],int,int);java.util.Arrays.parallelSort(int[]);java.util.Arrays.parallelSort(int[],int,int);java.util.Arrays.parallelSort(long[]);java.util.Arrays.parallelSort(long[],int,int);java.util.Arrays.parallelSort(float[]);java.util.Arrays.parallelSort(float[],int,int);java.util.Arrays.parallelSort(double[]);java.util.Arrays.parallelSort(double[],int,int);java.util.Arrays.parallelSort(T[]);java.util.Arrays.parallelSort(T[],int,int);java.util.Arrays.parallelSort(T[],Comparator&lt;?);java.util.Arrays.parallelSort(T[],int,int,Comparator&lt;?)",;0.28;0.34;0.28;0.34;0.28;0.34;0.28;0.34;0.28;0.34;0.21;0.29;0.21;0.29;0.16;0.25;0.16;0.25
setParent,18,0.166666667,"Sets the parent of the view. This is reimplemented to provide the superclass behavior as well as calling the loadChildren method if this view does not already have children. The children should not be loaded in the constructor because the act of setting the parent may cause them to try to search up the hierarchy (to get the hosting Container for example). If this view has children (the view is being moved from one place in the view hierarchy to another), the loadChildren method will not be called.",;java.util.ResourceBundle.setParent(ResourceBundle);java.util.logging.Logger.setParent(Logger);javax.swing.ActionMap.setParent(ActionMap);javax.swing.ComponentInputMap.setParent(InputMap);javax.swing.InputMap.setParent(InputMap);javax.swing.text.AsyncBoxView.setParent(View);javax.swing.text.ComponentView.setParent(View);javax.swing.text.CompositeView.setParent(View);javax.swing.text.FlowView.setParent(View);javax.swing.text.View.setParent(View);javax.swing.text.html.BlockView.setParent(View);javax.swing.text.html.ImageView.setParent(View);javax.swing.text.html.ParagraphView.setParent(View);javax.swing.tree.DefaultMutableTreeNode.setParent(MutableTreeNode);javax.xml.crypto.dsig.dom.DOMSignContext.setParent(Node);javax.xml.stream.util.EventReaderDelegate.setParent(XMLEventReader);javax.xml.stream.util.StreamReaderDelegate.setParent(XMLStreamReader);org.xml.sax.helpers.XMLFilterImpl.setParent(XMLReader),;0.06;0.06;0.06;0.06;0.06;0.17;0.06;0.17;0.17;0.10;0.14;0.06;0.14;0.06;0.06;0.11;0.11;0.06
uninstallDefaults,18,0.322403468,Sets the component properties that have not been explicitly overridden to null. A property is considered overridden if its current value is not a UIResource.,;javax.swing.plaf.basic.BasicComboBoxUI.uninstallDefaults();javax.swing.plaf.basic.BasicLabelUI.uninstallDefaults(JLabel);javax.swing.plaf.basic.BasicListUI.uninstallDefaults();javax.swing.plaf.basic.BasicSpinnerUI.uninstallDefaults();javax.swing.plaf.basic.BasicSplitPaneUI.uninstallDefaults();javax.swing.plaf.basic.BasicTextUI.uninstallDefaults();javax.swing.plaf.synth.SynthComboBoxUI.uninstallDefaults();javax.swing.plaf.synth.SynthEditorPaneUI.uninstallDefaults();javax.swing.plaf.synth.SynthLabelUI.uninstallDefaults(JLabel);javax.swing.plaf.synth.SynthListUI.uninstallDefaults();javax.swing.plaf.synth.SynthSeparatorUI.uninstallDefaults(JSeparator);javax.swing.plaf.synth.SynthSliderUI.uninstallDefaults(JSlider);javax.swing.plaf.synth.SynthSpinnerUI.uninstallDefaults();javax.swing.plaf.synth.SynthSplitPaneUI.uninstallDefaults();javax.swing.plaf.synth.SynthStyle.uninstallDefaults(SynthContext);javax.swing.plaf.synth.SynthTextAreaUI.uninstallDefaults();javax.swing.plaf.synth.SynthTextFieldUI.uninstallDefaults();javax.swing.plaf.synth.SynthViewportUI.uninstallDefaults(JComponent),;0.11;0.00;0.31;0.13;0.11;0.32;0.11;0.32;0.00;0.31;0.13;0.13;0.13;0.11;0.06;0.32;0.32;0.06
uninstallListeners,18,0.126963128,Removes the PropertyChangeListener added by installListeners. This method is called by uninstallUI.,;javax.swing.plaf.basic.BasicComboBoxUI.uninstallListeners();javax.swing.plaf.basic.BasicDesktopPaneUI.uninstallListeners();javax.swing.plaf.basic.BasicLabelUI.uninstallListeners(JLabel);javax.swing.plaf.basic.BasicListUI.uninstallListeners();javax.swing.plaf.basic.BasicProgressBarUI.uninstallListeners();javax.swing.plaf.basic.BasicSpinnerUI.uninstallListeners();javax.swing.plaf.basic.BasicSplitPaneUI.uninstallListeners();javax.swing.plaf.basic.BasicTextUI.uninstallListeners();javax.swing.plaf.metal.MetalScrollPaneUI.uninstallListeners(JScrollPane);javax.swing.plaf.synth.SynthComboBoxUI.uninstallListeners();javax.swing.plaf.synth.SynthDesktopPaneUI.uninstallListeners();javax.swing.plaf.synth.SynthListUI.uninstallListeners();javax.swing.plaf.synth.SynthPanelUI.uninstallListeners(JPanel);javax.swing.plaf.synth.SynthProgressBarUI.uninstallListeners();javax.swing.plaf.synth.SynthSeparatorUI.uninstallListeners(JSeparator);javax.swing.plaf.synth.SynthSpinnerUI.uninstallListeners();javax.swing.plaf.synth.SynthSplitPaneUI.uninstallListeners();javax.swing.plaf.synth.SynthViewportUI.uninstallListeners(JComponent),;0.11;0.11;0.00;0.12;0.11;0.13;0.11;0.08;0.06;0.11;0.11;0.12;0.09;0.11;0.08;0.13;0.08;0.09
until,18,0.444444444,Description copied from interface:ChronoLocalDate,";java.time.Instant.until(Temporal,TemporalUnit);java.time.LocalDate.until(Temporal,TemporalUnit);java.time.LocalDate.until(ChronoLocalDate);java.time.LocalDateTime.until(Temporal,TemporalUnit);java.time.LocalTime.until(Temporal,TemporalUnit);java.time.OffsetDateTime.until(Temporal,TemporalUnit);java.time.OffsetTime.until(Temporal,TemporalUnit);java.time.Year.until(Temporal,TemporalUnit);java.time.YearMonth.until(Temporal,TemporalUnit);java.time.ZonedDateTime.until(Temporal,TemporalUnit);java.time.chrono.HijrahDate.until(ChronoLocalDate);java.time.chrono.HijrahDate.until(Temporal,TemporalUnit);java.time.chrono.JapaneseDate.until(ChronoLocalDate);java.time.chrono.JapaneseDate.until(Temporal,TemporalUnit);java.time.chrono.MinguoDate.until(ChronoLocalDate);java.time.chrono.MinguoDate.until(Temporal,TemporalUnit);java.time.chrono.ThaiBuddhistDate.until(ChronoLocalDate);java.time.chrono.ThaiBuddhistDate.until(Temporal,TemporalUnit)",;0.38;0.40;0.19;0.41;0.40;0.39;0.39;0.39;0.40;0.31;0.44;0.44;0.44;0.44;0.44;0.44;0.44;0.44
containsKey,19,0.347903814,Returns true if this map contains a mapping for the specified key.,;java.awt.RenderingHints.containsKey(Object);java.beans.beancontext.BeanContextSupport.containsKey(Object);java.util.AbstractMap.containsKey(Object);java.util.EnumMap.containsKey(Object);java.util.HashMap.containsKey(Object);java.util.Hashtable.containsKey(Object);java.util.IdentityHashMap.containsKey(Object);java.util.ResourceBundle.containsKey(String);java.util.TreeMap.containsKey(Object);java.util.WeakHashMap.containsKey(Object);java.util.concurrent.ConcurrentHashMap.containsKey(Object);java.util.concurrent.ConcurrentSkipListMap.containsKey(Object);java.util.jar.Attributes.containsKey(Object);javax.management.openmbean.CompositeDataSupport.containsKey(String);javax.management.openmbean.CompositeType.containsKey(String);javax.management.openmbean.TabularDataSupport.containsKey(Object);javax.management.openmbean.TabularDataSupport.containsKey(Object[]);javax.print.attribute.HashAttributeSet.containsKey(Class&lt;?&gt;);javax.script.SimpleBindings.containsKey(Object),;0.29;0.07;0.21;0.35;0.35;0.13;0.09;0.05;0.35;0.35;0.13;0.35;0.16;0.10;0.14;0.11;0.11;0.17;0.21
getAttribute,19,0.175656874,Description copied from interface:RMIConnection,";java.nio.file.Files.getAttribute(Path,String,LinkOption...);java.nio.file.FileStore.getAttribute(String);java.security.Provider.Service.getAttribute(String);javax.imageio.metadata.IIOMetadataNode.getAttribute(String);javax.management.AttributeValueExp.getAttribute(ObjectName);javax.management.StandardMBean.getAttribute(String);javax.management.modelmbean.ModelMBeanInfoSupport.getAttribute(String);javax.management.remote.rmi.RMIConnectionImpl.getAttribute(ObjectName,String,Subject);javax.management.remote.rmi.RMIConnectionImpl_Stub.getAttribute(ObjectName,String,Subject);javax.naming.directory.ModificationItem.getAttribute();javax.script.SimpleScriptContext.getAttribute(String);javax.script.SimpleScriptContext.getAttribute(String,int);javax.swing.text.SimpleAttributeSet.getAttribute(Object);javax.swing.text.html.CSS.getAttribute(String);javax.swing.text.html.parser.Element.getAttribute(String);javax.xml.parsers.DocumentBuilderFactory.getAttribute(String);javax.xml.transform.TransformerFactory.getAttribute(String);javax.xml.ws.spi.http.HttpContext.getAttribute(String);javax.xml.ws.spi.http.HttpExchange.getAttribute(String)",;0.07;0.06;0.06;0.05;0.06;0.16;0.16;0.18;0.18;0.05;0.06;0.08;0.08;0.05;0.05;0.07;0.07;0.05;0.05
getEncoded,19,0.176598815,Returns the ASN.1 DER-encoded form of this CRL.,;java.security.AlgorithmParameters.getEncoded();java.security.AlgorithmParameters.getEncoded(String);java.security.PKCS12Attribute.getEncoded();java.security.cert.Certificate.getEncoded();java.security.cert.CertPath.getEncoded();java.security.cert.CertPath.getEncoded(String);java.security.cert.PolicyQualifierInfo.getEncoded();java.security.cert.X509CRL.getEncoded();java.security.cert.X509CRLEntry.getEncoded();java.security.spec.EncodedKeySpec.getEncoded();java.security.spec.PKCS8EncodedKeySpec.getEncoded();java.security.spec.X509EncodedKeySpec.getEncoded();javax.crypto.EncryptedPrivateKeyInfo.getEncoded();javax.crypto.spec.SecretKeySpec.getEncoded();javax.net.ssl.SNIServerName.getEncoded();javax.security.auth.kerberos.KerberosKey.getEncoded();javax.security.auth.kerberos.KerberosTicket.getEncoded();javax.security.auth.x500.X500Principal.getEncoded();javax.security.cert.Certificate.getEncoded(),;0.08;0.08;0.05;0.14;0.14;0.14;0.17;0.18;0.15;0.05;0.09;0.09;0.11;0.11;0.05;0.11;0.07;0.07;0.14
getParent,19,0.145989214,Get the parent of this instance.,;java.awt.Component.getParent();java.awt.MenuComponent.getParent();java.awt.PopupMenu.getParent();java.awt.image.Raster.getParent();java.io.File.getParent();java.lang.ClassLoader.getParent();java.lang.ThreadGroup.getParent();java.net.NetworkInterface.getParent();java.util.concurrent.Phaser.getParent();java.util.logging.Logger.getParent();java.util.prefs.NodeChangeEvent.getParent();javax.swing.ActionMap.getParent();javax.swing.InputMap.getParent();javax.swing.text.View.getParent();javax.swing.tree.DefaultMutableTreeNode.getParent();javax.xml.crypto.dsig.dom.DOMSignContext.getParent();javax.xml.stream.util.EventReaderDelegate.getParent();javax.xml.stream.util.StreamReaderDelegate.getParent();org.xml.sax.helpers.XMLFilterImpl.getParent(),;0.12;0.11;0.11;0.05;0.06;0.05;0.08;0.05;0.12;0.05;0.09;0.05;0.05;0.08;0.05;0.05;0.15;0.15;0.05
getPathIterator,19,0.466634456,"Returns an iteration object that defines the boundary of the shape. The iterator for this class is not multi-threaded safe, which means that this CubicCurve2D class does not guarantee that modifications to the geometry of this CubicCurve2D object do not affect any iterations of that geometry that are already in process.",";java.awt.Polygon.getPathIterator(AffineTransform);java.awt.Polygon.getPathIterator(AffineTransform,double);java.awt.geom.Arc2D.getPathIterator(AffineTransform);java.awt.geom.Area.getPathIterator(AffineTransform);java.awt.geom.Area.getPathIterator(AffineTransform,double);java.awt.geom.CubicCurve2D.getPathIterator(AffineTransform);java.awt.geom.CubicCurve2D.getPathIterator(AffineTransform,double);java.awt.geom.Ellipse2D.getPathIterator(AffineTransform);java.awt.geom.Line2D.getPathIterator(AffineTransform);java.awt.geom.Line2D.getPathIterator(AffineTransform,double);java.awt.geom.Path2D.getPathIterator(AffineTransform,double);java.awt.geom.Path2D.Double.getPathIterator(AffineTransform);java.awt.geom.Path2D.Float.getPathIterator(AffineTransform);java.awt.geom.QuadCurve2D.getPathIterator(AffineTransform);java.awt.geom.QuadCurve2D.getPathIterator(AffineTransform,double);java.awt.geom.Rectangle2D.getPathIterator(AffineTransform);java.awt.geom.Rectangle2D.getPathIterator(AffineTransform,double);java.awt.geom.RectangularShape.getPathIterator(AffineTransform,double);java.awt.geom.RoundRectangle2D.getPathIterator(AffineTransform)",;0.16;0.18;0.31;0.07;0.08;0.47;0.46;0.44;0.47;0.46;0.23;0.29;0.29;0.46;0.46;0.44;0.41;0.12;0.44
installListeners,19,0.175656874,Attaches listeners to the JTable.,;javax.swing.plaf.basic.BasicComboBoxUI.installListeners();javax.swing.plaf.basic.BasicDesktopPaneUI.installListeners();javax.swing.plaf.basic.BasicLabelUI.installListeners(JLabel);javax.swing.plaf.basic.BasicListUI.installListeners();javax.swing.plaf.basic.BasicSpinnerUI.installListeners();javax.swing.plaf.basic.BasicSplitPaneUI.installListeners();javax.swing.plaf.basic.BasicTableHeaderUI.installListeners();javax.swing.plaf.basic.BasicTableUI.installListeners();javax.swing.plaf.basic.BasicTextUI.installListeners();javax.swing.plaf.synth.SynthComboBoxUI.installListeners();javax.swing.plaf.synth.SynthDesktopPaneUI.installListeners();javax.swing.plaf.synth.SynthListUI.installListeners();javax.swing.plaf.synth.SynthPanelUI.installListeners(JPanel);javax.swing.plaf.synth.SynthSeparatorUI.installListeners(JSeparator);javax.swing.plaf.synth.SynthSpinnerUI.installListeners();javax.swing.plaf.synth.SynthSplitPaneUI.installListeners();javax.swing.plaf.synth.SynthTableHeaderUI.installListeners();javax.swing.plaf.synth.SynthTableUI.installListeners();javax.swing.plaf.synth.SynthViewportUI.installListeners(JComponent),;0.16;0.11;0.00;0.15;0.14;0.13;0.18;0.18;0.10;0.16;0.11;0.15;0.09;0.10;0.14;0.13;0.18;0.18;0.09
offer,19,0.375745246,"Inserts the specified element at the tail of this queue. As the queue is unbounded, this method will never return false.",";java.util.ArrayDeque.offer(E);java.util.LinkedList.offer(E);java.util.PriorityQueue.offer(E);java.util.concurrent.ArrayBlockingQueue.offer(E);java.util.concurrent.ArrayBlockingQueue.offer(E,long,TimeUnit);java.util.concurrent.ConcurrentLinkedDeque.offer(E);java.util.concurrent.ConcurrentLinkedQueue.offer(E);java.util.concurrent.DelayQueue.offer(E);java.util.concurrent.DelayQueue.offer(E,long,TimeUnit);java.util.concurrent.LinkedBlockingDeque.offer(E);java.util.concurrent.LinkedBlockingDeque.offer(E,long,TimeUnit);java.util.concurrent.LinkedBlockingQueue.offer(E,long,TimeUnit);java.util.concurrent.LinkedBlockingQueue.offer(E);java.util.concurrent.LinkedTransferQueue.offer(E,long,TimeUnit);java.util.concurrent.LinkedTransferQueue.offer(E);java.util.concurrent.PriorityBlockingQueue.offer(E);java.util.concurrent.PriorityBlockingQueue.offer(E,long,TimeUnit);java.util.concurrent.SynchronousQueue.offer(E,long,TimeUnit);java.util.concurrent.SynchronousQueue.offer(E)",;0.19;0.05;0.17;0.18;0.25;0.31;0.38;0.17;0.32;0.11;0.11;0.26;0.17;0.36;0.38;0.34;0.33;0.22;0.20
addLayoutComponent,20,0.192883219,Adds the specified component to the layout. Not used by this class.,";java.awt.BorderLayout.addLayoutComponent(Component,Object);java.awt.BorderLayout.addLayoutComponent(String,Component);java.awt.CardLayout.addLayoutComponent(Component,Object);java.awt.CardLayout.addLayoutComponent(String,Component);java.awt.FlowLayout.addLayoutComponent(String,Component);java.awt.GridBagLayout.addLayoutComponent(String,Component);java.awt.GridBagLayout.addLayoutComponent(Component,Object);java.awt.GridLayout.addLayoutComponent(String,Component);javax.swing.BoxLayout.addLayoutComponent(String,Component);javax.swing.BoxLayout.addLayoutComponent(Component,Object);javax.swing.GroupLayout.addLayoutComponent(String,Component);javax.swing.GroupLayout.addLayoutComponent(Component,Object);javax.swing.JSpinner.DefaultEditor.addLayoutComponent(String,Component);javax.swing.OverlayLayout.addLayoutComponent(String,Component);javax.swing.OverlayLayout.addLayoutComponent(Component,Object);javax.swing.SpringLayout.addLayoutComponent(String,Component);javax.swing.SpringLayout.addLayoutComponent(Component,Object);javax.swing.ViewportLayout.addLayoutComponent(String,Component);javax.swing.plaf.basic.BasicOptionPaneUI.ButtonAreaLayout.addLayoutComponent(String,Component);javax.swing.plaf.basic.BasicScrollBarUI.addLayoutComponent(String,Component)",;0.09;0.10;0.08;0.10;0.19;0.10;0.12;0.10;0.12;0.12;0.10;0.10;0.05;0.15;0.15;0.10;0.05;0.19;0.10;0.10
binarySearch,20,0.686838597,"Searches a range of the specified array of bytes for the specified value using the binary search algorithm. The range must be sorted (as by the sort(byte[], int, int) method) prior to making this call. If it is not sorted, the results are undefined. If the range contains multiple elements with the specified value, there is no guarantee which one will be found.",";java.util.Arrays.binarySearch(long[],long);java.util.Arrays.binarySearch(long[],int,int,long);java.util.Arrays.binarySearch(int[],int);java.util.Arrays.binarySearch(int[],int,int,int);java.util.Arrays.binarySearch(short[],short);java.util.Arrays.binarySearch(short[],int,int,short);java.util.Arrays.binarySearch(char[],char);java.util.Arrays.binarySearch(char[],int,int,char);java.util.Arrays.binarySearch(byte[],byte);java.util.Arrays.binarySearch(byte[],int,int,byte);java.util.Arrays.binarySearch(double[],double);java.util.Arrays.binarySearch(double[],int,int,double);java.util.Arrays.binarySearch(float[],float);java.util.Arrays.binarySearch(float[],int,int,float);java.util.Arrays.binarySearch(Object[],Object);java.util.Arrays.binarySearch(Object[],int,int,Object);java.util.Arrays.binarySearch(T[],T,Comparator&lt;?);java.util.Arrays.binarySearch(T[],int,int,T,Comparator&lt;?);java.util.Collections.binarySearch(List&lt;?,T);java.util.Collections.binarySearch(List&lt;?,T,Comparator&lt;?)",;0.67;0.69;0.67;0.69;0.67;0.69;0.67;0.69;0.67;0.69;0.66;0.65;0.66;0.65;0.47;0.48;0.58;0.59;0.40;0.40
finalize,20,0.280545976,Finalizes this object prior to garbage collection. The close method is called to close any open input source. This method should not be called from application code.,;java.awt.Graphics.finalize();java.awt.PrintJob.finalize();java.awt.color.ICC_Profile.finalize();java.awt.image.ColorModel.finalize();java.awt.image.IndexColorModel.finalize();java.io.FileInputStream.finalize();java.io.FileOutputStream.finalize();java.lang.Enum.finalize();java.lang.Object.finalize();java.util.concurrent.ThreadPoolExecutor.finalize();java.util.zip.Deflater.finalize();java.util.zip.Inflater.finalize();java.util.zip.ZipFile.finalize();javax.crypto.ExemptionMechanism.finalize();javax.imageio.spi.ServiceRegistry.finalize();javax.imageio.stream.FileCacheImageInputStream.finalize();javax.imageio.stream.FileImageInputStream.finalize();javax.imageio.stream.FileImageOutputStream.finalize();javax.imageio.stream.ImageInputStreamImpl.finalize();javax.imageio.stream.MemoryCacheImageInputStream.finalize(),;0.10;0.10;0.05;0.13;0.13;0.10;0.09;0.05;0.05;0.09;0.07;0.07;0.07;0.08;0.20;0.28;0.28;0.28;0.28;0.28
getActions,20,0.199544424,"Fetches the command list for the editor. This is the list of commands supported by the plugged-in UI augmented by the collection of commands that the editor itself supports. These are useful for binding to events, such as in a keymap.",;java.io.FilePermission.getActions();java.net.SocketPermission.getActions();java.net.URLPermission.getActions();java.security.AllPermission.getActions();java.security.BasicPermission.getActions();java.security.Permission.getActions();java.security.UnresolvedPermission.getActions();java.util.PropertyPermission.getActions();javax.management.MBeanPermission.getActions();javax.security.auth.PrivateCredentialPermission.getActions();javax.security.auth.kerberos.ServicePermission.getActions();javax.swing.JFormattedTextField.getActions();javax.swing.JFormattedTextField.AbstractFormatter.getActions();javax.swing.JTextField.getActions();javax.swing.text.DefaultEditorKit.getActions();javax.swing.text.EditorKit.getActions();javax.swing.text.InternationalFormatter.getActions();javax.swing.text.JTextComponent.getActions();javax.swing.text.StyledEditorKit.getActions();javax.swing.text.html.HTMLEditorKit.getActions(),;0.17;0.19;0.06;0.12;0.15;0.05;0.12;0.17;0.18;0.16;0.19;0.20;0.05;0.20;0.10;0.10;0.05;0.20;0.17;0.17
marshal,20,0.383437015,Description copied from interface:Marshaller,";javax.xml.bind.Binder.marshal(Object,XmlNode);javax.xml.bind.JAXB.marshal(Object,File);javax.xml.bind.JAXB.marshal(Object,URL);javax.xml.bind.JAXB.marshal(Object,URI);javax.xml.bind.JAXB.marshal(Object,String);javax.xml.bind.JAXB.marshal(Object,OutputStream);javax.xml.bind.JAXB.marshal(Object,Writer);javax.xml.bind.JAXB.marshal(Object,Result);javax.xml.bind.annotation.W3CDomHandler.marshal(Element,ValidationEventHandler);javax.xml.bind.annotation.adapters.CollapsedStringAdapter.marshal(String);javax.xml.bind.annotation.adapters.HexBinaryAdapter.marshal(byte[]);javax.xml.bind.annotation.adapters.NormalizedStringAdapter.marshal(String);javax.xml.bind.annotation.adapters.XmlAdapter.marshal(BoundType);javax.xml.bind.helpers.AbstractMarshallerImpl.marshal(Object,OutputStream);javax.xml.bind.helpers.AbstractMarshallerImpl.marshal(Object,File);javax.xml.bind.helpers.AbstractMarshallerImpl.marshal(Object,Writer);javax.xml.bind.helpers.AbstractMarshallerImpl.marshal(Object,ContentHandler);javax.xml.bind.helpers.AbstractMarshallerImpl.marshal(Object,Node);javax.xml.bind.helpers.AbstractMarshallerImpl.marshal(Object,XMLEventWriter);javax.xml.bind.helpers.AbstractMarshallerImpl.marshal(Object,XMLStreamWriter)",;0.05;0.35;0.35;0.35;0.35;0.35;0.35;0.35;0.28;0.10;0.05;0.10;0.05;0.38;0.38;0.38;0.38;0.38;0.38;0.38
removeNotify,20,0.270777518,"Notifies this component that it no longer has a parent component. When this method is invoked, any KeyboardActions set up in the the chain of parent components are removed. This method is called by the toolkit internally and should not be called directly by programs.",;java.awt.Component.removeNotify();java.awt.Container.removeNotify();java.awt.Frame.removeNotify();java.awt.List.removeNotify();java.awt.Menu.removeNotify();java.awt.MenuBar.removeNotify();java.awt.MenuComponent.removeNotify();java.awt.TextComponent.removeNotify();java.awt.Window.removeNotify();java.awt.dnd.DropTarget.removeNotify(java.awt.peer.ComponentPeer);java.awt.dnd.DropTargetContext.removeNotify();java.awt.im.InputContext.removeNotify(Component);javax.swing.AbstractButton.removeNotify();javax.swing.JButton.removeNotify();javax.swing.JComponent.removeNotify();javax.swing.JLayer.removeNotify();javax.swing.JMenuBar.removeNotify();javax.swing.JRootPane.removeNotify();javax.swing.JTable.removeNotify();javax.swing.text.JTextComponent.removeNotify(),;0.19;0.23;0.22;0.12;0.16;0.12;0.14;0.15;0.23;0.06;0.05;0.06;0.27;0.05;0.27;0.27;0.05;0.27;0.05;0.05
viewToModel,20,0.558354234,Provides a mapping from the view coordinate space to the logical coordinate space of the model.,";javax.swing.plaf.TextUI.viewToModel(JTextComponent,Point);javax.swing.plaf.TextUI.viewToModel(JTextComponent,Point,Position.Bias[]);javax.swing.plaf.basic.BasicTextUI.viewToModel(JTextComponent,Point);javax.swing.plaf.basic.BasicTextUI.viewToModel(JTextComponent,Point,Position.Bias[]);javax.swing.plaf.multi.MultiTextUI.viewToModel(JTextComponent,Point);javax.swing.plaf.multi.MultiTextUI.viewToModel(JTextComponent,Point,Position.Bias[]);javax.swing.text.AsyncBoxView.viewToModel(float,float,Shape,Position.Bias[]);javax.swing.text.BoxView.viewToModel(float,float,Shape,Position.Bias[]);javax.swing.text.ComponentView.viewToModel(float,float,Shape,Position.Bias[]);javax.swing.text.CompositeView.viewToModel(float,float,Shape,Position.Bias[]);javax.swing.text.FieldView.viewToModel(float,float,Shape,Position.Bias[]);javax.swing.text.GlyphView.viewToModel(float,float,Shape,Position.Bias[]);javax.swing.text.GlyphView.GlyphPainter.viewToModel(GlyphView,float,float,Shape,Position.Bias[]);javax.swing.text.IconView.viewToModel(float,float,Shape,Position.Bias[]);javax.swing.text.JTextComponent.viewToModel(Point);javax.swing.text.PasswordView.viewToModel(float,float,Shape,Position.Bias[]);javax.swing.text.PlainView.viewToModel(float,float,Shape,Position.Bias[]);javax.swing.text.View.viewToModel(float,float,Shape,Position.Bias[]);javax.swing.text.View.viewToModel(float,float,Shape);javax.swing.text.html.ImageView.viewToModel(float,float,Shape,Position.Bias[])",;0.10;0.56;0.15;0.15;0.10;0.10;0.15;0.56;0.56;0.56;0.56;0.56;0.56;0.56;0.12;0.56;0.56;0.25;0.00;0.56
_ids,21,0.857142857,Description copied from class:ObjectImpl,;org.omg.CORBA._IDLTypeStub._ids();org.omg.CORBA._PolicyStub._ids();org.omg.CORBA.DynamicImplementation._ids();org.omg.CORBA.portable.ObjectImpl._ids();org.omg.CosNaming._BindingIteratorImplBase._ids();org.omg.CosNaming._BindingIteratorStub._ids();org.omg.CosNaming._NamingContextExtStub._ids();org.omg.CosNaming._NamingContextImplBase._ids();org.omg.CosNaming._NamingContextStub._ids();org.omg.DynamicAny._DynAnyFactoryStub._ids();org.omg.DynamicAny._DynAnyStub._ids();org.omg.DynamicAny._DynArrayStub._ids();org.omg.DynamicAny._DynEnumStub._ids();org.omg.DynamicAny._DynFixedStub._ids();org.omg.DynamicAny._DynSequenceStub._ids();org.omg.DynamicAny._DynStructStub._ids();org.omg.DynamicAny._DynUnionStub._ids();org.omg.DynamicAny._DynValueStub._ids();org.omg.PortableServer._ServantActivatorStub._ids();org.omg.PortableServer._ServantLocatorStub._ids();org.omg.stub.java.rmi._Remote_Stub._ids(),;0.86;0.86;0.00;0.05;0.86;0.86;0.86;0.86;0.86;0.86;0.86;0.86;0.86;0.86;0.86;0.86;0.86;0.86;0.86;0.86;0.05
actionPerformed,21,0.380952381,The operation to perform when this action is triggered.,;java.awt.AWTEventMulticaster.actionPerformed(ActionEvent);java.awt.dnd.DropTarget.DropTargetAutoScroller.actionPerformed(ActionEvent);javax.swing.JComboBox.actionPerformed(ActionEvent);javax.swing.text.DefaultEditorKit.BeepAction.actionPerformed(ActionEvent);javax.swing.text.DefaultEditorKit.CopyAction.actionPerformed(ActionEvent);javax.swing.text.DefaultEditorKit.CutAction.actionPerformed(ActionEvent);javax.swing.text.DefaultEditorKit.DefaultKeyTypedAction.actionPerformed(ActionEvent);javax.swing.text.DefaultEditorKit.InsertBreakAction.actionPerformed(ActionEvent);javax.swing.text.DefaultEditorKit.InsertContentAction.actionPerformed(ActionEvent);javax.swing.text.DefaultEditorKit.InsertTabAction.actionPerformed(ActionEvent);javax.swing.text.DefaultEditorKit.PasteAction.actionPerformed(ActionEvent);javax.swing.text.StyledEditorKit.AlignmentAction.actionPerformed(ActionEvent);javax.swing.text.StyledEditorKit.BoldAction.actionPerformed(ActionEvent);javax.swing.text.StyledEditorKit.FontFamilyAction.actionPerformed(ActionEvent);javax.swing.text.StyledEditorKit.FontSizeAction.actionPerformed(ActionEvent);javax.swing.text.StyledEditorKit.ForegroundAction.actionPerformed(ActionEvent);javax.swing.text.StyledEditorKit.ItalicAction.actionPerformed(ActionEvent);javax.swing.text.StyledEditorKit.UnderlineAction.actionPerformed(ActionEvent);javax.swing.text.html.FormView.actionPerformed(ActionEvent);javax.swing.text.html.HTMLEditorKit.InsertHTMLTextAction.actionPerformed(ActionEvent);javax.swing.tree.DefaultTreeCellEditor.actionPerformed(ActionEvent),;0.05;0.05;0.05;0.38;0.38;0.38;0.38;0.38;0.38;0.38;0.38;0.00;0.05;0.05;0.05;0.05;0.05;0.05;0.05;0.05;0.05
bind,21,0.270236249,Description copied from interface:NetworkChannel,";java.lang.invoke.MethodHandles.Lookup.bind(Object,String,MethodType);java.net.DatagramSocket.bind(SocketAddress);java.net.DatagramSocketImpl.bind(int,InetAddress);java.net.ServerSocket.bind(SocketAddress);java.net.ServerSocket.bind(SocketAddress,int);java.net.Socket.bind(SocketAddress);java.net.SocketImpl.bind(InetAddress,int);java.nio.channels.AsynchronousServerSocketChannel.bind(SocketAddress);java.nio.channels.AsynchronousServerSocketChannel.bind(SocketAddress,int);java.nio.channels.AsynchronousSocketChannel.bind(SocketAddress);java.nio.channels.DatagramChannel.bind(SocketAddress);java.nio.channels.ServerSocketChannel.bind(SocketAddress);java.nio.channels.ServerSocketChannel.bind(SocketAddress,int);java.nio.channels.SocketChannel.bind(SocketAddress);java.rmi.Naming.bind(String,Remote);javax.naming.InitialContext.bind(String,Object);javax.naming.InitialContext.bind(Name,Object);javax.naming.directory.InitialDirContext.bind(String,Object,Attributes);javax.naming.directory.InitialDirContext.bind(Name,Object,Attributes);org.omg.CosNaming._NamingContextExtStub.bind(NameComponent[],Object);org.omg.CosNaming._NamingContextStub.bind(NameComponent[],Object)",;0.05;0.12;0.05;0.13;0.13;0.14;0.05;0.11;0.13;0.27;0.27;0.11;0.13;0.27;0.05;0.25;0.25;0.25;0.25;0.10;0.10
fill,21,0.474384403,"Assigns the specified float value to each element of the specified range of the specified array of floats. The range to be filled extends from index fromIndex, inclusive, to index toIndex, exclusive. (If fromIndex==toIndex, the range to be filled is empty.)",";java.awt.Graphics2D.fill(Shape);java.util.Arrays.fill(long[],long);java.util.Arrays.fill(long[],int,int,long);java.util.Arrays.fill(int[],int);java.util.Arrays.fill(int[],int,int,int);java.util.Arrays.fill(short[],short);java.util.Arrays.fill(short[],int,int,short);java.util.Arrays.fill(char[],char);java.util.Arrays.fill(char[],int,int,char);java.util.Arrays.fill(byte[],byte);java.util.Arrays.fill(byte[],int,int,byte);java.util.Arrays.fill(boolean[],boolean);java.util.Arrays.fill(boolean[],int,int,boolean);java.util.Arrays.fill(double[],double);java.util.Arrays.fill(double[],int,int,double);java.util.Arrays.fill(float[],float);java.util.Arrays.fill(float[],int,int,float);java.util.Arrays.fill(Object[],Object);java.util.Arrays.fill(Object[],int,int,Object);java.util.Collections.fill(List&lt;?,T);java.util.zip.InflaterInputStream.fill()",;0.05;0.35;0.47;0.35;0.47;0.35;0.47;0.35;0.47;0.35;0.47;0.35;0.47;0.35;0.47;0.35;0.47;0.32;0.46;0.05;0.05
getBaselineResizeBehavior,21,0.760545941,Returns an enum indicating how the baseline of the component changes as the size changes.,;java.awt.Component.getBaselineResizeBehavior();javax.swing.JComponent.getBaselineResizeBehavior();javax.swing.JSpinner.DefaultEditor.getBaselineResizeBehavior();javax.swing.border.AbstractBorder.getBaselineResizeBehavior(Component);javax.swing.border.TitledBorder.getBaselineResizeBehavior(Component);javax.swing.plaf.ComponentUI.getBaselineResizeBehavior(JComponent);javax.swing.plaf.LayerUI.getBaselineResizeBehavior(JComponent);javax.swing.plaf.basic.BasicButtonUI.getBaselineResizeBehavior(JComponent);javax.swing.plaf.basic.BasicComboBoxUI.getBaselineResizeBehavior(JComponent);javax.swing.plaf.basic.BasicLabelUI.getBaselineResizeBehavior(JComponent);javax.swing.plaf.basic.BasicListUI.getBaselineResizeBehavior(JComponent);javax.swing.plaf.basic.BasicPanelUI.getBaselineResizeBehavior(JComponent);javax.swing.plaf.basic.BasicProgressBarUI.getBaselineResizeBehavior(JComponent);javax.swing.plaf.basic.BasicScrollPaneUI.getBaselineResizeBehavior(JComponent);javax.swing.plaf.basic.BasicSliderUI.getBaselineResizeBehavior(JComponent);javax.swing.plaf.basic.BasicSpinnerUI.getBaselineResizeBehavior(JComponent);javax.swing.plaf.basic.BasicTabbedPaneUI.getBaselineResizeBehavior(JComponent);javax.swing.plaf.basic.BasicTableUI.getBaselineResizeBehavior(JComponent);javax.swing.plaf.basic.BasicTextAreaUI.getBaselineResizeBehavior(JComponent);javax.swing.plaf.basic.BasicTextFieldUI.getBaselineResizeBehavior(JComponent);javax.swing.plaf.basic.BasicTreeUI.getBaselineResizeBehavior(JComponent),;0.25;0.23;0.76;0.23;0.63;0.29;0.05;0.76;0.76;0.76;0.76;0.76;0.76;0.76;0.76;0.76;0.76;0.76;0.76;0.76;0.76
getBounds,21,0.239781585,"Returns an integer Rectangle that completely encloses the Shape. Note that there is no guarantee that the returned Rectangle is the smallest bounding box that encloses the Shape, only that the Shape lies entirely within the indicated Rectangle. The returned Rectangle might also fail to completely enclose the Shape if the Shape overflows the limited range of the integer data type. The getBounds2D method generally returns a tighter bounding box due to its greater flexibility in representation. Note that the definition of insideness can lead to situations where points on the defining outline of the shape may not be considered contained in the returned bounds object, but only in cases where those points are also not considered contained in the original shape. If a point is inside the shape according to the contains(point) method, then it must be inside the returned Rectangle bounds object according to the contains(point) method of the bounds. Specifically: shape.contains(x,y) requires bounds.contains(x,y) If a point is not inside the shape, then it might still be contained in the bounds object: bounds.contains(x,y) does not imply shape.contains(x,y)",";java.awt.Component.getBounds();java.awt.Component.getBounds(Rectangle);java.awt.GraphicsConfiguration.getBounds();java.awt.Polygon.getBounds();java.awt.Rectangle.getBounds();java.awt.SplashScreen.getBounds();java.awt.font.GraphicAttribute.getBounds();java.awt.font.ImageGraphicAttribute.getBounds();java.awt.font.ShapeGraphicAttribute.getBounds();java.awt.font.TextLayout.getBounds();java.awt.geom.Area.getBounds();java.awt.geom.CubicCurve2D.getBounds();java.awt.geom.Line2D.getBounds();java.awt.geom.Path2D.getBounds();java.awt.geom.QuadCurve2D.getBounds();java.awt.geom.RectangularShape.getBounds();java.awt.image.Raster.getBounds();javax.swing.JComponent.getBounds(Rectangle);javax.swing.tree.AbstractLayoutCache.getBounds(TreePath,Rectangle);javax.swing.tree.FixedHeightLayoutCache.getBounds(TreePath,Rectangle);javax.swing.tree.VariableHeightLayoutCache.getBounds(TreePath,Rectangle)",;0.06;0.10;0.05;0.05;0.06;0.05;0.11;0.12;0.11;0.06;0.05;0.24;0.24;0.24;0.24;0.24;0.06;0.10;0.10;0.10;0.05
getPort,21,0.262102142,"The getPort method returns a proxy. The parameter serviceEndpointInterface specifies the service endpoint interface that is supported by the returned proxy. In the implementation of this method, the JAX-WS runtime system takes the responsibility of selecting a protocol binding (and a port) and configuring the proxy accordingly. The returned proxy should not be reconfigured by the client.",";java.net.DatagramPacket.getPort();java.net.DatagramSocket.getPort();java.net.InetSocketAddress.getPort();java.net.Socket.getPort();java.net.SocketImpl.getPort();java.net.URI.getPort();java.net.URL.getPort();java.security.cert.LDAPCertStoreParameters.getPort();javax.management.remote.JMXServiceURL.getPort();javax.xml.ws.EndpointReference.getPort(Class&lt;T&gt;,WebServiceFeature...);javax.xml.ws.Service.getPort(QName,Class&lt;T&gt;);javax.xml.ws.Service.getPort(QName,Class&lt;T&gt;,WebServiceFeature...);javax.xml.ws.Service.getPort(Class&lt;T&gt;);javax.xml.ws.Service.getPort(Class&lt;T&gt;,WebServiceFeature...);javax.xml.ws.Service.getPort(EndpointReference,Class&lt;T&gt;,WebServiceFeature...);javax.xml.ws.spi.Provider.getPort(EndpointReference,Class&lt;T&gt;,WebServiceFeature...);javax.xml.ws.spi.ServiceDelegate.getPort(QName,Class&lt;T&gt;);javax.xml.ws.spi.ServiceDelegate.getPort(QName,Class&lt;T&gt;,WebServiceFeature...);javax.xml.ws.spi.ServiceDelegate.getPort(EndpointReference,Class&lt;T&gt;,WebServiceFeature...);javax.xml.ws.spi.ServiceDelegate.getPort(Class&lt;T&gt;);javax.xml.ws.spi.ServiceDelegate.getPort(Class&lt;T&gt;,WebServiceFeature...)",;0.06;0.09;0.07;0.08;0.05;0.07;0.09;0.07;0.05;0.18;0.24;0.24;0.26;0.26;0.19;0.20;0.24;0.24;0.19;0.26;0.26
println,21,0.54305252,Prints a character and then terminate the line. This method behaves as though it invokes print(char) and then println().,;java.io.PrintStream.println();java.io.PrintStream.println(boolean);java.io.PrintStream.println(char);java.io.PrintStream.println(int);java.io.PrintStream.println(long);java.io.PrintStream.println(float);java.io.PrintStream.println(double);java.io.PrintStream.println(char[]);java.io.PrintStream.println(String);java.io.PrintStream.println(Object);java.io.PrintWriter.println();java.io.PrintWriter.println(boolean);java.io.PrintWriter.println(char);java.io.PrintWriter.println(int);java.io.PrintWriter.println(long);java.io.PrintWriter.println(float);java.io.PrintWriter.println(double);java.io.PrintWriter.println(char[]);java.io.PrintWriter.println(String);java.io.PrintWriter.println(Object);java.sql.DriverManager.println(String),;0.10;0.53;0.54;0.52;0.53;0.52;0.52;0.51;0.54;0.33;0.10;0.51;0.54;0.52;0.51;0.50;0.47;0.51;0.54;0.33;0.05
removeAll,21,0.13777708,"Removes from this set all of its elements that are contained in the specified collection. If the specified collection is also a set, this operation effectively modifies this set so that its value is the asymmetric set difference of the two sets.",;java.awt.Choice.removeAll();java.awt.Container.removeAll();java.awt.List.removeAll();java.awt.Menu.removeAll();java.beans.beancontext.BeanContextSupport.removeAll(Collection);java.util.AbstractCollection.removeAll(Collection&lt;?&gt;);java.util.AbstractSet.removeAll(Collection&lt;?&gt;);java.util.ArrayList.removeAll(Collection&lt;?&gt;);java.util.Vector.removeAll(Collection&lt;?&gt;);java.util.concurrent.ConcurrentHashMap.KeySetView.removeAll(Collection&lt;?&gt;);java.util.concurrent.ConcurrentSkipListSet.removeAll(Collection&lt;?&gt;);java.util.concurrent.CopyOnWriteArrayList.removeAll(Collection&lt;?&gt;);java.util.concurrent.CopyOnWriteArraySet.removeAll(Collection&lt;?&gt;);java.util.concurrent.SynchronousQueue.removeAll(Collection&lt;?&gt;);javax.swing.JDesktopPane.removeAll();javax.swing.JLayer.removeAll();javax.swing.JLayeredPane.removeAll();javax.swing.JMenu.removeAll();javax.swing.JSplitPane.removeAll();javax.swing.JTabbedPane.removeAll();javax.swing.text.View.removeAll(),;0.09;0.10;0.10;0.13;0.05;0.08;0.10;0.11;0.10;0.05;0.14;0.11;0.14;0.05;0.10;0.10;0.10;0.07;0.05;0.05;0.05
repaint,21,0.428571429,Overridden for performance reasons. See the Implementation Note for more information.,";java.awt.Component.repaint();java.awt.Component.repaint(long);java.awt.Component.repaint(int,int,int,int);java.awt.Component.repaint(long,int,int,int,int);javax.swing.DefaultListCellRenderer.repaint();javax.swing.DefaultListCellRenderer.repaint(long,int,int,int,int);javax.swing.DefaultListCellRenderer.repaint(Rectangle);javax.swing.JApplet.repaint(long,int,int,int,int);javax.swing.JComponent.repaint(long,int,int,int,int);javax.swing.JComponent.repaint(Rectangle);javax.swing.JDialog.repaint(long,int,int,int,int);javax.swing.JFrame.repaint(long,int,int,int,int);javax.swing.JViewport.repaint(long,int,int,int,int);javax.swing.JWindow.repaint(long,int,int,int,int);javax.swing.table.DefaultTableCellRenderer.repaint(long,int,int,int,int);javax.swing.table.DefaultTableCellRenderer.repaint(Rectangle);javax.swing.table.DefaultTableCellRenderer.repaint();javax.swing.text.DefaultCaret.repaint();javax.swing.tree.DefaultTreeCellRenderer.repaint(long,int,int,int,int);javax.swing.tree.DefaultTreeCellRenderer.repaint(Rectangle);javax.swing.tree.DefaultTreeCellRenderer.repaint()",;0.16;0.12;0.17;0.17;0.43;0.43;0.43;0.19;0.10;0.10;0.19;0.19;0.05;0.19;0.43;0.43;0.43;0.05;0.43;0.43;0.43
destroy,22,0.365358394,"Destroys a DynAny object. This operation frees any resources used to represent the data value associated with a DynAny object. It must be invoked on references obtained from one of the creation operations on the ORB interface or on a reference returned by DynAny.copy() to avoid resource leaks. Invoking destroy on component DynAny objects (for example, on objects returned by the current_component operation) does nothing. Destruction of a DynAny object implies destruction of all DynAny objects obtained from it. That is, references to components of a destroyed DynAny become invalid. Invocations on such references raise OBJECT_NOT_EXIST. It is possible to manipulate a component of a DynAny beyond the life time of the DynAny from which the component was obtained by making a copy of the component with the copy operation before destroying the DynAny from which the component was obtained.",;java.applet.Applet.destroy();java.lang.Process.destroy();java.lang.Thread.destroy();java.lang.ThreadGroup.destroy();java.security.KeyStore.PasswordProtection.destroy();javax.security.auth.kerberos.KerberosKey.destroy();javax.security.auth.kerberos.KerberosTicket.destroy();javax.security.auth.x500.X500PrivateCredential.destroy();org.omg.CORBA._IDLTypeStub.destroy();org.omg.CORBA._PolicyStub.destroy();org.omg.CORBA.ORB.destroy();org.omg.CosNaming._BindingIteratorStub.destroy();org.omg.CosNaming._NamingContextExtStub.destroy();org.omg.CosNaming._NamingContextStub.destroy();org.omg.DynamicAny._DynAnyStub.destroy();org.omg.DynamicAny._DynArrayStub.destroy();org.omg.DynamicAny._DynEnumStub.destroy();org.omg.DynamicAny._DynFixedStub.destroy();org.omg.DynamicAny._DynSequenceStub.destroy();org.omg.DynamicAny._DynStructStub.destroy();org.omg.DynamicAny._DynUnionStub.destroy();org.omg.DynamicAny._DynValueStub.destroy(),;0.05;0.05;0.05;0.05;0.00;0.05;0.05;0.05;0.05;0.05;0.06;0.05;0.09;0.09;0.37;0.37;0.37;0.37;0.37;0.37;0.37;0.37
engineInit,22,0.156149794,"Initializes this cipher with a key, a set of algorithm parameters, and a source of randomness. The cipher is initialized for one of the following four operations: encryption, decryption, key wrapping or key unwrapping, depending on the value of opmode. If this cipher requires any algorithm parameters and params is null, the underlying cipher implementation is supposed to generate the required parameters itself (using provider-specific default or random values) if it is being initialized for encryption or key wrapping, and raise an InvalidAlgorithmParameterException if it is being initialized for decryption or key unwrapping. The generated parameters can be retrieved using engineGetParameters or engineGetIV (if the parameter is an IV). If this cipher requires algorithm parameters that cannot be derived from the input parameters, and there are no reasonable provider-specific default values, initialization will necessarily fail. If this cipher (including its underlying feedback or padding scheme) requires any random bytes (e.g., for parameter generation), it will get them from random. Note that when a Cipher object is initialized, it loses all previously-acquired state. In other words, initializing a Cipher is equivalent to creating a new instance of that Cipher and initializing it.",";java.security.AlgorithmParameterGeneratorSpi.engineInit(int,SecureRandom);java.security.AlgorithmParameterGeneratorSpi.engineInit(AlgorithmParameterSpec,SecureRandom);java.security.AlgorithmParametersSpi.engineInit(AlgorithmParameterSpec);java.security.AlgorithmParametersSpi.engineInit(byte[]);java.security.AlgorithmParametersSpi.engineInit(byte[],String);javax.crypto.CipherSpi.engineInit(int,Key,SecureRandom);javax.crypto.CipherSpi.engineInit(int,Key,AlgorithmParameterSpec,SecureRandom);javax.crypto.CipherSpi.engineInit(int,Key,AlgorithmParameters,SecureRandom);javax.crypto.ExemptionMechanismSpi.engineInit(Key);javax.crypto.ExemptionMechanismSpi.engineInit(Key,AlgorithmParameterSpec);javax.crypto.ExemptionMechanismSpi.engineInit(Key,AlgorithmParameters);javax.crypto.KeyAgreementSpi.engineInit(Key,SecureRandom);javax.crypto.KeyAgreementSpi.engineInit(Key,AlgorithmParameterSpec,SecureRandom);javax.crypto.KeyGeneratorSpi.engineInit(SecureRandom);javax.crypto.KeyGeneratorSpi.engineInit(AlgorithmParameterSpec,SecureRandom);javax.crypto.KeyGeneratorSpi.engineInit(int,SecureRandom);javax.crypto.MacSpi.engineInit(Key,AlgorithmParameterSpec);javax.net.ssl.KeyManagerFactorySpi.engineInit(KeyStore,char[]);javax.net.ssl.KeyManagerFactorySpi.engineInit(ManagerFactoryParameters);javax.net.ssl.SSLContextSpi.engineInit(KeyManager[],TrustManager[],SecureRandom);javax.net.ssl.TrustManagerFactorySpi.engineInit(KeyStore);javax.net.ssl.TrustManagerFactorySpi.engineInit(ManagerFactoryParameters)",;0.08;0.06;0.05;0.07;0.07;0.15;0.16;0.16;0.12;0.14;0.14;0.06;0.06;0.05;0.05;0.06;0.05;0.07;0.10;0.00;0.07;0.10
getComponent,22,0.131177009,Returns the Component associated with this DragSourceContext.,;java.awt.Container.getComponent(int);java.awt.dnd.DragGestureEvent.getComponent();java.awt.dnd.DragGestureRecognizer.getComponent();java.awt.dnd.DragSourceContext.getComponent();java.awt.dnd.DropTarget.getComponent();java.awt.dnd.DropTargetContext.getComponent();java.awt.event.ComponentEvent.getComponent();java.awt.event.HierarchyEvent.getComponent();javax.swing.ComponentInputMap.getComponent();javax.swing.DefaultCellEditor.getComponent();javax.swing.JMenu.getComponent();javax.swing.JMenuBar.getComponent();javax.swing.JMenuItem.getComponent();javax.swing.JPopupMenu.getComponent();javax.swing.JToolTip.getComponent();javax.swing.TransferHandler.TransferSupport.getComponent();javax.swing.event.AncestorEvent.getComponent();javax.swing.plaf.basic.BasicTextUI.getComponent();javax.swing.plaf.synth.SynthContext.getComponent();javax.swing.text.ComponentView.getComponent();javax.swing.text.DefaultCaret.getComponent();javax.swing.text.StyleConstants.getComponent(AttributeSet),;0.05;0.13;0.06;0.13;0.12;0.11;0.09;0.09;0.05;0.05;0.08;0.05;0.08;0.05;0.05;0.05;0.05;0.05;0.05;0.05;0.05;0.05
getFont,22,0.090909091,Gets the font of this component.,";java.awt.Component.getFont();java.awt.Font.getFont(Map&lt;?,?&gt;);java.awt.Font.getFont(String);java.awt.Font.getFont(String,Font);java.awt.FontMetrics.getFont();java.awt.Graphics.getFont();java.awt.MenuComponent.getFont();java.awt.font.GlyphVector.getFont();javax.swing.DebugGraphics.getFont();javax.swing.UIDefaults.getFont(Object);javax.swing.UIDefaults.getFont(Object,Locale);javax.swing.UIManager.getFont(Object);javax.swing.UIManager.getFont(Object,Locale);javax.swing.plaf.synth.SynthStyle.getFont(SynthContext);javax.swing.text.DefaultStyledDocument.getFont(AttributeSet);javax.swing.text.GlyphView.getFont();javax.swing.text.LabelView.getFont();javax.swing.text.StyleContext.getFont(AttributeSet);javax.swing.text.StyleContext.getFont(String,int,int);javax.swing.text.html.StyleSheet.getFont(AttributeSet);javax.swing.tree.DefaultTreeCellEditor.getFont();javax.swing.tree.DefaultTreeCellRenderer.getFont()",;0.09;0.05;0.07;0.07;0.05;0.05;0.07;0.05;0.05;0.07;0.07;0.07;0.07;0.05;0.05;0.06;0.05;0.06;0.05;0.05;0.07;0.09
modelToView,22,0.519285033,Provides a mapping from the document model coordinate space to the coordinate space of the view mapped to it.,";javax.swing.plaf.TextUI.modelToView(JTextComponent,int);javax.swing.plaf.TextUI.modelToView(JTextComponent,int,Position.Bias);javax.swing.plaf.basic.BasicTextUI.modelToView(JTextComponent,int);javax.swing.plaf.basic.BasicTextUI.modelToView(JTextComponent,int,Position.Bias);javax.swing.plaf.multi.MultiTextUI.modelToView(JTextComponent,int);javax.swing.plaf.multi.MultiTextUI.modelToView(JTextComponent,int,Position.Bias);javax.swing.text.AsyncBoxView.modelToView(int,Shape,Position.Bias);javax.swing.text.BoxView.modelToView(int,Shape,Position.Bias);javax.swing.text.ComponentView.modelToView(int,Shape,Position.Bias);javax.swing.text.CompositeView.modelToView(int,Shape,Position.Bias);javax.swing.text.CompositeView.modelToView(int,Position.Bias,int,Position.Bias,Shape);javax.swing.text.FieldView.modelToView(int,Shape,Position.Bias);javax.swing.text.GlyphView.modelToView(int,Shape,Position.Bias);javax.swing.text.GlyphView.GlyphPainter.modelToView(GlyphView,int,Position.Bias,Shape);javax.swing.text.IconView.modelToView(int,Shape,Position.Bias);javax.swing.text.JTextComponent.modelToView(int);javax.swing.text.PasswordView.modelToView(int,Shape,Position.Bias);javax.swing.text.PlainView.modelToView(int,Shape,Position.Bias);javax.swing.text.View.modelToView(int,Shape,Position.Bias);javax.swing.text.View.modelToView(int,Position.Bias,int,Position.Bias,Shape);javax.swing.text.View.modelToView(int,Shape);javax.swing.text.html.ImageView.modelToView(int,Shape,Position.Bias)",;0.13;0.13;0.15;0.15;0.09;0.09;0.52;0.37;0.24;0.52;0.52;0.52;0.52;0.41;0.52;0.12;0.52;0.52;0.29;0.21;0.00;0.52
poll,22,0.546302852,Description copied from interface:Queue,";java.lang.ref.ReferenceQueue.poll();java.util.ArrayDeque.poll();java.util.LinkedList.poll();java.util.PriorityQueue.poll();java.util.concurrent.ArrayBlockingQueue.poll();java.util.concurrent.ArrayBlockingQueue.poll(long,TimeUnit);java.util.concurrent.ConcurrentLinkedDeque.poll();java.util.concurrent.ConcurrentLinkedQueue.poll();java.util.concurrent.DelayQueue.poll();java.util.concurrent.DelayQueue.poll(long,TimeUnit);java.util.concurrent.ExecutorCompletionService.poll();java.util.concurrent.ExecutorCompletionService.poll(long,TimeUnit);java.util.concurrent.LinkedBlockingDeque.poll();java.util.concurrent.LinkedBlockingDeque.poll(long,TimeUnit);java.util.concurrent.LinkedBlockingQueue.poll(long,TimeUnit);java.util.concurrent.LinkedBlockingQueue.poll();java.util.concurrent.LinkedTransferQueue.poll(long,TimeUnit);java.util.concurrent.LinkedTransferQueue.poll();java.util.concurrent.PriorityBlockingQueue.poll();java.util.concurrent.PriorityBlockingQueue.poll(long,TimeUnit);java.util.concurrent.SynchronousQueue.poll(long,TimeUnit);java.util.concurrent.SynchronousQueue.poll()",;0.05;0.09;0.07;0.55;0.55;0.52;0.47;0.55;0.11;0.11;0.49;0.49;0.49;0.49;0.52;0.55;0.52;0.55;0.55;0.52;0.11;0.10
range,22,0.526983449,"Gets the range of valid values for the specified field. The range object expresses the minimum and maximum valid values for a field. This time is used to enhance the accuracy of the returned range. If it is not possible to return the range, because the field is not supported or for some other reason, an exception is thrown. If the field is a ChronoField then the query is implemented here. The supported fields will return appropriate range instances. All other ChronoField instances will throw an UnsupportedTemporalTypeException. If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.rangeRefinedBy(TemporalAccessor) passing this as the argument. Whether the range can be obtained is determined by the field.",";java.time.Instant.range(TemporalField);java.time.LocalDate.range(TemporalField);java.time.LocalDateTime.range(TemporalField);java.time.LocalTime.range(TemporalField);java.time.MonthDay.range(TemporalField);java.time.OffsetDateTime.range(TemporalField);java.time.OffsetTime.range(TemporalField);java.time.Year.range(TemporalField);java.time.YearMonth.range(TemporalField);java.time.ZonedDateTime.range(TemporalField);java.time.ZoneOffset.range(TemporalField);java.time.chrono.HijrahChronology.range(ChronoField);java.time.chrono.HijrahDate.range(TemporalField);java.time.chrono.IsoChronology.range(ChronoField);java.time.chrono.JapaneseChronology.range(ChronoField);java.time.chrono.JapaneseDate.range(TemporalField);java.time.chrono.JapaneseEra.range(TemporalField);java.time.chrono.MinguoChronology.range(ChronoField);java.time.chrono.MinguoDate.range(TemporalField);java.time.chrono.ThaiBuddhistChronology.range(ChronoField);java.time.chrono.ThaiBuddhistDate.range(TemporalField);java.util.EnumSet.range(E,E)",;0.52;0.53;0.53;0.53;0.52;0.53;0.53;0.53;0.52;0.53;0.52;0.35;0.33;0.35;0.35;0.33;0.45;0.35;0.33;0.35;0.33;0.05
removePropertyChangeListener,22,0.376103768,"Removes a PropertyChangeListener from the listener list. This method should be used to remove PropertyChangeListeners that were registered for all bound properties of this class. If listener is null, no exception is thrown and no action is performed.",";java.awt.Component.removePropertyChangeListener(PropertyChangeListener);java.awt.Component.removePropertyChangeListener(String,PropertyChangeListener);java.awt.KeyboardFocusManager.removePropertyChangeListener(PropertyChangeListener);java.awt.KeyboardFocusManager.removePropertyChangeListener(String,PropertyChangeListener);java.awt.SystemTray.removePropertyChangeListener(String,PropertyChangeListener);java.awt.Toolkit.removePropertyChangeListener(String,PropertyChangeListener);java.beans.PropertyChangeSupport.removePropertyChangeListener(PropertyChangeListener);java.beans.PropertyChangeSupport.removePropertyChangeListener(String,PropertyChangeListener);java.beans.PropertyEditorSupport.removePropertyChangeListener(PropertyChangeListener);java.beans.beancontext.BeanContextChildSupport.removePropertyChangeListener(String,PropertyChangeListener);java.util.logging.LogManager.removePropertyChangeListener(PropertyChangeListener);javax.accessibility.AccessibleContext.removePropertyChangeListener(PropertyChangeListener);javax.swing.AbstractAction.removePropertyChangeListener(PropertyChangeListener);javax.swing.JTree.EmptySelectionModel.removePropertyChangeListener(PropertyChangeListener);javax.swing.SwingWorker.removePropertyChangeListener(PropertyChangeListener);javax.swing.UIDefaults.removePropertyChangeListener(PropertyChangeListener);javax.swing.UIManager.removePropertyChangeListener(PropertyChangeListener);javax.swing.plaf.LayerUI.removePropertyChangeListener(PropertyChangeListener);javax.swing.plaf.LayerUI.removePropertyChangeListener(String,PropertyChangeListener);javax.swing.plaf.basic.BasicDirectoryModel.removePropertyChangeListener(PropertyChangeListener);javax.swing.table.TableColumn.removePropertyChangeListener(PropertyChangeListener);javax.swing.tree.DefaultTreeSelectionModel.removePropertyChangeListener(PropertyChangeListener)",;0.38;0.36;0.37;0.37;0.29;0.18;0.33;0.23;0.22;0.22;0.05;0.31;0.31;0.05;0.29;0.31;0.31;0.38;0.36;0.26;0.23;0.31
setSize,22,0.255608739,"Sets the size of this Dimension object to the specified width and height. This method is included for completeness, to parallel the getSize method of Component.",";java.awt.Component.setSize(int,int);java.awt.Component.setSize(Dimension);java.awt.Dimension.setSize(double,double);java.awt.Dimension.setSize(Dimension);java.awt.Dimension.setSize(int,int);java.awt.Rectangle.setSize(Dimension);java.awt.Rectangle.setSize(int,int);java.awt.Window.setSize(Dimension);java.awt.Window.setSize(int,int);java.awt.geom.Dimension2D.setSize(double,double);java.awt.geom.Dimension2D.setSize(Dimension2D);java.awt.print.Paper.setSize(double,double);java.util.Vector.setSize(int);java.util.zip.ZipEntry.setSize(long);javax.swing.DefaultListModel.setSize(int);javax.swing.SizeSequence.setSize(int,int);javax.swing.text.AsyncBoxView.setSize(float,float);javax.swing.text.BoxView.setSize(float,float);javax.swing.text.PlainView.setSize(float,float);javax.swing.text.View.setSize(float,float);javax.swing.text.WrappedPlainView.setSize(float,float);javax.swing.text.html.ImageView.setSize(float,float)",;0.09;0.09;0.15;0.25;0.25;0.23;0.25;0.11;0.11;0.26;0.22;0.05;0.10;0.05;0.06;0.12;0.12;0.17;0.24;0.24;0.24;0.21
with,22,0.343121484,"Returns an adjusted copy of this date. This returns a LocalDate, based on this one, with the date adjusted. The adjustment takes place using the specified adjuster strategy object. Read the documentation of the adjuster to understand what adjustment will be made. A simple adjuster might simply set the one of the fields, such as the year field. A more complex adjuster might set the date to the last day of the month. A selection of common adjustments is provided in TemporalAdjusters. These include finding the ""last day of the month"" and ""next Wednesday"". Key date-time classes also implement the TemporalAdjuster interface, such as Month and MonthDay. The adjuster is responsible for handling special cases, such as the varying lengths of month and leap years. For example this code returns a date on the last day of July: import static java.time.Month.*; import static java.time.temporal.TemporalAdjusters.*; result = localDate.with(JULY).with(lastDayOfMonth()); The result of this method is obtained by invoking the TemporalAdjuster.adjustInto(Temporal) method on the specified adjuster passing this as the argument. This instance is immutable and unaffected by this method call.",";java.time.Instant.with(TemporalAdjuster);java.time.LocalDate.with(TemporalAdjuster);java.time.LocalDateTime.with(TemporalAdjuster);java.time.LocalDateTime.with(TemporalField,long);java.time.LocalTime.with(TemporalAdjuster);java.time.MonthDay.with(Month);java.time.OffsetDateTime.with(TemporalAdjuster);java.time.OffsetDateTime.with(TemporalField,long);java.time.OffsetTime.with(TemporalAdjuster);java.time.OffsetTime.with(TemporalField,long);java.time.Year.with(TemporalAdjuster);java.time.YearMonth.with(TemporalAdjuster);java.time.ZonedDateTime.with(TemporalAdjuster);java.time.ZonedDateTime.with(TemporalField,long);java.time.chrono.HijrahDate.with(TemporalField,long);java.time.chrono.HijrahDate.with(TemporalAdjuster);java.time.chrono.JapaneseDate.with(TemporalField,long);java.time.chrono.JapaneseDate.with(TemporalAdjuster);java.time.chrono.MinguoDate.with(TemporalField,long);java.time.chrono.MinguoDate.with(TemporalAdjuster);java.time.chrono.ThaiBuddhistDate.with(TemporalField,long);java.time.chrono.ThaiBuddhistDate.with(TemporalAdjuster)",;0.19;0.34;0.34;0.20;0.28;0.08;0.33;0.20;0.29;0.18;0.19;0.28;0.28;0.17;0.18;0.27;0.18;0.27;0.18;0.27;0.18;0.27
getAlgorithm,23,0.266919213,Returns the algorithm name of this TrustManagerFactory object. This is the same name that was specified in one of the getInstance calls that created this TrustManagerFactory object.,;java.security.AlgorithmParameterGenerator.getAlgorithm();java.security.AlgorithmParameters.getAlgorithm();java.security.KeyFactory.getAlgorithm();java.security.KeyPairGenerator.getAlgorithm();java.security.MessageDigest.getAlgorithm();java.security.Provider.Service.getAlgorithm();java.security.SecureRandom.getAlgorithm();java.security.Signature.getAlgorithm();java.security.SignedObject.getAlgorithm();java.security.cert.CertPathBuilder.getAlgorithm();java.security.cert.CertPathValidator.getAlgorithm();javax.crypto.Cipher.getAlgorithm();javax.crypto.KeyAgreement.getAlgorithm();javax.crypto.KeyGenerator.getAlgorithm();javax.crypto.Mac.getAlgorithm();javax.crypto.SealedObject.getAlgorithm();javax.crypto.SecretKeyFactory.getAlgorithm();javax.crypto.spec.PSource.getAlgorithm();javax.crypto.spec.SecretKeySpec.getAlgorithm();javax.net.ssl.KeyManagerFactory.getAlgorithm();javax.net.ssl.TrustManagerFactory.getAlgorithm();javax.security.auth.kerberos.KerberosKey.getAlgorithm();javax.xml.crypto.dsig.TransformService.getAlgorithm(),;0.12;0.21;0.19;0.11;0.07;0.15;0.18;0.19;0.12;0.19;0.06;0.27;0.27;0.27;0.27;0.04;0.27;0.04;0.21;0.27;0.27;0.07;0.04
getLong,23,0.453575592,"Gets the value of the specified field from this date-time as a long. This queries this date-time for the value of the specified field. If it is not possible to return the value, because the field is not supported or for some other reason, an exception is thrown. If the field is a ChronoField then the query is implemented here. The supported fields will return valid values based on this date-time. All other ChronoField instances will throw an UnsupportedTemporalTypeException. If the field is not a ChronoField, then the result of this method is obtained by invoking TemporalField.getFrom(TemporalAccessor) passing this as the argument. Whether the value can be obtained, and what the value represents, is determined by the field.",";java.lang.Long.getLong(String);java.lang.Long.getLong(String,long);java.lang.reflect.Array.getLong(Object,int);java.lang.reflect.Field.getLong(Object);java.nio.ByteBuffer.getLong();java.nio.ByteBuffer.getLong(int);java.time.Instant.getLong(TemporalField);java.time.LocalDate.getLong(TemporalField);java.time.LocalDateTime.getLong(TemporalField);java.time.LocalTime.getLong(TemporalField);java.time.MonthDay.getLong(TemporalField);java.time.OffsetDateTime.getLong(TemporalField);java.time.OffsetTime.getLong(TemporalField);java.time.Year.getLong(TemporalField);java.time.YearMonth.getLong(TemporalField);java.time.ZonedDateTime.getLong(TemporalField);java.time.ZoneOffset.getLong(TemporalField);java.time.chrono.HijrahDate.getLong(TemporalField);java.time.chrono.JapaneseDate.getLong(TemporalField);java.time.chrono.MinguoDate.getLong(TemporalField);java.time.chrono.ThaiBuddhistDate.getLong(TemporalField);java.util.prefs.AbstractPreferences.getLong(String,long);java.util.prefs.Preferences.getLong(String,long)",;0.07;0.10;0.04;0.04;0.07;0.06;0.45;0.45;0.45;0.45;0.44;0.45;0.45;0.45;0.44;0.45;0.42;0.17;0.17;0.17;0.17;0.05;0.05
getX,23,0.415350961,Returns the X coordinate of the upper-left corner of the framing rectangle in double precision.,;java.awt.Component.getX();java.awt.Point.getX();java.awt.Rectangle.getX();java.awt.dnd.DragSourceEvent.getX();java.awt.event.MouseEvent.getX();java.awt.geom.Arc2D.Double.getX();java.awt.geom.Arc2D.Float.getX();java.awt.geom.Ellipse2D.Double.getX();java.awt.geom.Ellipse2D.Float.getX();java.awt.geom.Point2D.getX();java.awt.geom.Point2D.Double.getX();java.awt.geom.Point2D.Float.getX();java.awt.geom.Rectangle2D.Double.getX();java.awt.geom.Rectangle2D.Float.getX();java.awt.geom.RectangularShape.getX();java.awt.geom.RoundRectangle2D.Double.getX();java.awt.geom.RoundRectangle2D.Float.getX();java.security.spec.DSAPrivateKeySpec.getX();javax.crypto.spec.DHPrivateKeySpec.getX();javax.print.attribute.Size2DSyntax.getX(int);javax.print.attribute.standard.MediaPrintableArea.getX(int);javax.swing.JComponent.getX();javax.swing.SpringLayout.Constraints.getX(),;0.08;0.29;0.25;0.04;0.04;0.29;0.29;0.42;0.42;0.29;0.29;0.29;0.42;0.42;0.42;0.42;0.42;0.04;0.04;0.04;0.04;0.08;0.04
getY,23,0.415350961,Returns the Y coordinate of the upper-left corner of the framing rectangle in double precision.,;java.awt.Component.getY();java.awt.Point.getY();java.awt.Rectangle.getY();java.awt.dnd.DragSourceEvent.getY();java.awt.event.MouseEvent.getY();java.awt.geom.Arc2D.Double.getY();java.awt.geom.Arc2D.Float.getY();java.awt.geom.Ellipse2D.Double.getY();java.awt.geom.Ellipse2D.Float.getY();java.awt.geom.Point2D.getY();java.awt.geom.Point2D.Double.getY();java.awt.geom.Point2D.Float.getY();java.awt.geom.Rectangle2D.Double.getY();java.awt.geom.Rectangle2D.Float.getY();java.awt.geom.RectangularShape.getY();java.awt.geom.RoundRectangle2D.Double.getY();java.awt.geom.RoundRectangle2D.Float.getY();java.security.spec.DSAPublicKeySpec.getY();javax.crypto.spec.DHPublicKeySpec.getY();javax.print.attribute.Size2DSyntax.getY(int);javax.print.attribute.standard.MediaPrintableArea.getY(int);javax.swing.JComponent.getY();javax.swing.SpringLayout.Constraints.getY(),;0.08;0.29;0.25;0.04;0.04;0.29;0.29;0.42;0.42;0.29;0.29;0.29;0.42;0.42;0.42;0.42;0.42;0.04;0.04;0.04;0.04;0.08;0.04
setPixels,23,0.379506242,Filters the information provided in the setPixels method of the ImageConsumer interface which takes an array of integers. Note: This method is intended to be called by the ImageProducer of the Image whose pixels are being filtered. Developers using this class to filter pixels from an image should avoid calling this method directly since that operation could interfere with the filtering operation.,";java.awt.image.AreaAveragingScaleFilter.setPixels(int,int,int,int,ColorModel,byte[],int,int);java.awt.image.AreaAveragingScaleFilter.setPixels(int,int,int,int,ColorModel,int[],int,int);java.awt.image.BandedSampleModel.setPixels(int,int,int,int,int[],DataBuffer);java.awt.image.BufferedImageFilter.setPixels(int,int,int,int,ColorModel,byte[],int,int);java.awt.image.BufferedImageFilter.setPixels(int,int,int,int,ColorModel,int[],int,int);java.awt.image.ComponentSampleModel.setPixels(int,int,int,int,int[],DataBuffer);java.awt.image.CropImageFilter.setPixels(int,int,int,int,ColorModel,byte[],int,int);java.awt.image.CropImageFilter.setPixels(int,int,int,int,ColorModel,int[],int,int);java.awt.image.ImageFilter.setPixels(int,int,int,int,ColorModel,byte[],int,int);java.awt.image.ImageFilter.setPixels(int,int,int,int,ColorModel,int[],int,int);java.awt.image.PixelGrabber.setPixels(int,int,int,int,ColorModel,byte[],int,int);java.awt.image.PixelGrabber.setPixels(int,int,int,int,ColorModel,int[],int,int);java.awt.image.ReplicateScaleFilter.setPixels(int,int,int,int,ColorModel,byte[],int,int);java.awt.image.ReplicateScaleFilter.setPixels(int,int,int,int,ColorModel,int[],int,int);java.awt.image.RGBImageFilter.setPixels(int,int,int,int,ColorModel,byte[],int,int);java.awt.image.RGBImageFilter.setPixels(int,int,int,int,ColorModel,int[],int,int);java.awt.image.SampleModel.setPixels(int,int,int,int,int[],DataBuffer);java.awt.image.SampleModel.setPixels(int,int,int,int,float[],DataBuffer);java.awt.image.SampleModel.setPixels(int,int,int,int,double[],DataBuffer);java.awt.image.SinglePixelPackedSampleModel.setPixels(int,int,int,int,int[],DataBuffer);java.awt.image.WritableRaster.setPixels(int,int,int,int,int[]);java.awt.image.WritableRaster.setPixels(int,int,int,int,float[]);java.awt.image.WritableRaster.setPixels(int,int,int,int,double[])",;0.31;0.31;0.33;0.37;0.37;0.30;0.36;0.36;0.38;0.38;0.34;0.34;0.35;0.35;0.31;0.27;0.33;0.31;0.31;0.33;0.30;0.29;0.29
wrap,23,0.551786277,"Wraps a float array into a buffer. The new buffer will be backed by the given float array; that is, modifications to the buffer will cause the array to be modified and vice versa. The new buffer's capacity and limit will be array.length, its position will be zero, and its mark will be undefined. Its backing array will be the given array, and its array offset&gt; will be zero.",";java.lang.invoke.MethodType.wrap();java.nio.ByteBuffer.wrap(byte[],int,int);java.nio.ByteBuffer.wrap(byte[]);java.nio.CharBuffer.wrap(char[],int,int);java.nio.CharBuffer.wrap(char[]);java.nio.CharBuffer.wrap(CharSequence,int,int);java.nio.CharBuffer.wrap(CharSequence);java.nio.DoubleBuffer.wrap(double[],int,int);java.nio.DoubleBuffer.wrap(double[]);java.nio.FloatBuffer.wrap(float[],int,int);java.nio.FloatBuffer.wrap(float[]);java.nio.IntBuffer.wrap(int[],int,int);java.nio.IntBuffer.wrap(int[]);java.nio.LongBuffer.wrap(long[],int,int);java.nio.LongBuffer.wrap(long[]);java.nio.ShortBuffer.wrap(short[],int,int);java.nio.ShortBuffer.wrap(short[]);java.util.Base64.Decoder.wrap(InputStream);java.util.Base64.Encoder.wrap(OutputStream);javax.crypto.Cipher.wrap(Key);javax.net.ssl.SSLEngine.wrap(ByteBuffer,ByteBuffer);javax.net.ssl.SSLEngine.wrap(ByteBuffer[],ByteBuffer);javax.net.ssl.SSLEngine.wrap(ByteBuffer[],int,int,ByteBuffer)",;0.04;0.55;0.55;0.55;0.55;0.21;0.24;0.55;0.55;0.55;0.55;0.55;0.55;0.55;0.55;0.55;0.55;0.05;0.05;0.00;0.07;0.07;0.05
connect,24,0.127789065,"Connects this piped output stream to a receiver. If this object is already connected to some other piped input stream, an IOException is thrown. If snk is an unconnected piped input stream and src is an unconnected piped output stream, they may be connected by either the call: src.connect(snk) or the call: snk.connect(src) The two calls have the same effect.",";java.io.PipedInputStream.connect(PipedOutputStream);java.io.PipedOutputStream.connect(PipedInputStream);java.io.PipedReader.connect(PipedWriter);java.io.PipedWriter.connect(PipedReader);java.net.DatagramSocket.connect(InetAddress,int);java.net.DatagramSocket.connect(SocketAddress);java.net.DatagramSocketImpl.connect(InetAddress,int);java.net.Socket.connect(SocketAddress);java.net.Socket.connect(SocketAddress,int);java.net.SocketImpl.connect(String,int);java.net.SocketImpl.connect(InetAddress,int);java.net.SocketImpl.connect(SocketAddress,int);java.net.URLConnection.connect();java.nio.channels.AsynchronousSocketChannel.connect(SocketAddress,A,CompletionHandler&lt;Void,?);java.nio.channels.AsynchronousSocketChannel.connect(SocketAddress);java.nio.channels.DatagramChannel.connect(SocketAddress);java.nio.channels.SocketChannel.connect(SocketAddress);javax.management.remote.JMXConnectorFactory.connect(JMXServiceURL);javax.management.remote.JMXConnectorFactory.connect(JMXServiceURL,Map&lt;String,?&gt;);javax.management.remote.rmi.RMIConnector.connect();javax.management.remote.rmi.RMIConnector.connect(Map&lt;String,?&gt;);javax.rmi.PortableRemoteObject.connect(Remote,Remote);javax.rmi.CORBA.Stub.connect(ORB);org.omg.CORBA.ORB.connect(Object)",;0.12;0.13;0.13;0.12;0.06;0.06;0.05;0.07;0.09;0.09;0.09;0.10;0.04;0.07;0.05;0.06;0.07;0.07;0.07;0.08;0.08;0.04;0.04;0.05
installDefaults,24,0.339147169,"Initializes JTableHeader properties such as font, foreground, and background. The font, foreground, and background properties are only set if their current value is either null or a UIResource, other properties are set if the current value is null.",;javax.swing.plaf.basic.BasicComboBoxUI.installDefaults();javax.swing.plaf.basic.BasicLabelUI.installDefaults(JLabel);javax.swing.plaf.basic.BasicListUI.installDefaults();javax.swing.plaf.basic.BasicPasswordFieldUI.installDefaults();javax.swing.plaf.basic.BasicSpinnerUI.installDefaults();javax.swing.plaf.basic.BasicSplitPaneUI.installDefaults();javax.swing.plaf.basic.BasicTableHeaderUI.installDefaults();javax.swing.plaf.basic.BasicTableUI.installDefaults();javax.swing.plaf.basic.BasicTextAreaUI.installDefaults();javax.swing.plaf.basic.BasicTextUI.installDefaults();javax.swing.plaf.nimbus.NimbusStyle.installDefaults(SynthContext);javax.swing.plaf.synth.SynthComboBoxUI.installDefaults();javax.swing.plaf.synth.SynthEditorPaneUI.installDefaults();javax.swing.plaf.synth.SynthLabelUI.installDefaults(JLabel);javax.swing.plaf.synth.SynthListUI.installDefaults();javax.swing.plaf.synth.SynthSeparatorUI.installDefaults(JSeparator);javax.swing.plaf.synth.SynthSpinnerUI.installDefaults();javax.swing.plaf.synth.SynthSplitPaneUI.installDefaults();javax.swing.plaf.synth.SynthStyle.installDefaults(SynthContext);javax.swing.plaf.synth.SynthTableHeaderUI.installDefaults();javax.swing.plaf.synth.SynthTableUI.installDefaults();javax.swing.plaf.synth.SynthTextAreaUI.installDefaults();javax.swing.plaf.synth.SynthTextFieldUI.installDefaults();javax.swing.plaf.synth.SynthViewportUI.installDefaults(JComponent),;0.04;0.00;0.33;0.04;0.11;0.08;0.34;0.32;0.07;0.33;0.06;0.07;0.33;0.00;0.33;0.04;0.11;0.08;0.05;0.34;0.34;0.33;0.33;0.04
length,24,0.234104521,Returns the length of the array.,;java.io.File.length();java.io.RandomAccessFile.length();java.lang.String.length();java.lang.StringBuffer.length();java.lang.StringBuilder.length();java.nio.CharBuffer.length();java.nio.charset.CoderResult.length();java.time.Year.length();java.util.BitSet.length();java.util.StringJoiner.length();java.util.concurrent.atomic.AtomicIntegerArray.length();java.util.concurrent.atomic.AtomicLongArray.length();java.util.concurrent.atomic.AtomicReferenceArray.length();javax.imageio.stream.FileCacheImageOutputStream.length();javax.imageio.stream.FileImageInputStream.length();javax.imageio.stream.FileImageOutputStream.length();javax.imageio.stream.ImageInputStreamImpl.length();javax.imageio.stream.MemoryCacheImageOutputStream.length();javax.sql.rowset.serial.SerialBlob.length();javax.sql.rowset.serial.SerialClob.length();javax.swing.text.GapContent.length();javax.swing.text.Segment.length();javax.swing.text.StringContent.length();org.omg.CORBA.TypeCode.length(),;0.07;0.18;0.11;0.08;0.08;0.09;0.14;0.06;0.04;0.08;0.23;0.23;0.23;0.12;0.14;0.12;0.04;0.12;0.06;0.06;0.22;0.12;0.22;0.04
skip,24,0.107796455,The skip method in Java is used to skip over a specified number of bytes in an input stream.,;java.io.BufferedInputStream.skip(long);java.io.BufferedReader.skip(long);java.io.ByteArrayInputStream.skip(long);java.io.CharArrayReader.skip(long);java.io.FileInputStream.skip(long);java.io.FilterInputStream.skip(long);java.io.FilterReader.skip(long);java.io.InputStream.skip(long);java.io.LineNumberInputStream.skip(long);java.io.LineNumberReader.skip(long);java.io.PushbackInputStream.skip(long);java.io.PushbackReader.skip(long);java.io.Reader.skip(long);java.io.StringBufferInputStream.skip(long);java.io.StringReader.skip(long);java.util.Scanner.skip(Pattern);java.util.Scanner.skip(String);java.util.zip.CheckedInputStream.skip(long);java.util.zip.DeflaterInputStream.skip(long);java.util.zip.InflaterInputStream.skip(long);java.util.zip.ZipInputStream.skip(long);javax.crypto.CipherInputStream.skip(long);javax.sound.sampled.AudioInputStream.skip(long);javax.swing.ProgressMonitorInputStream.skip(long),;0.04;0.00;0.06;0.06;0.09;0.08;0.00;0.10;0.00;0.00;0.11;0.09;0.09;0.00;0.06;0.04;0.04;0.09;0.07;0.09;0.08;0.07;0.07;0.04
sort,24,0.397877833,The sort method in Java is used to sort an array or a list in ascending or descending order.,";java.util.ArrayList.sort(Comparator&lt;?);java.util.Arrays.sort(int[]);java.util.Arrays.sort(int[],int,int);java.util.Arrays.sort(long[]);java.util.Arrays.sort(long[],int,int);java.util.Arrays.sort(short[]);java.util.Arrays.sort(short[],int,int);java.util.Arrays.sort(char[]);java.util.Arrays.sort(char[],int,int);java.util.Arrays.sort(byte[]);java.util.Arrays.sort(byte[],int,int);java.util.Arrays.sort(float[]);java.util.Arrays.sort(float[],int,int);java.util.Arrays.sort(double[]);java.util.Arrays.sort(double[],int,int);java.util.Arrays.sort(Object[]);java.util.Arrays.sort(Object[],int,int);java.util.Arrays.sort(T[],Comparator&lt;?);java.util.Arrays.sort(T[],int,int,Comparator&lt;?);java.util.Collections.sort(List&lt;T&gt;);java.util.Collections.sort(List&lt;T&gt;,Comparator&lt;?);java.util.Vector.sort(Comparator&lt;?);java.util.concurrent.CopyOnWriteArrayList.sort(Comparator&lt;?);javax.swing.DefaultRowSorter.sort()",;0.12;0.36;0.40;0.36;0.40;0.36;0.40;0.36;0.40;0.36;0.40;0.30;0.32;0.30;0.32;0.17;0.19;0.17;0.19;0.08;0.08;0.12;0.12;0.04
getEnumValueTable,25,0.819988846,Returns the enumeration value table for class MediaTray.,;javax.print.attribute.EnumSyntax.getEnumValueTable();javax.print.attribute.standard.Chromaticity.getEnumValueTable();javax.print.attribute.standard.ColorSupported.getEnumValueTable();javax.print.attribute.standard.Compression.getEnumValueTable();javax.print.attribute.standard.DialogTypeSelection.getEnumValueTable();javax.print.attribute.standard.Fidelity.getEnumValueTable();javax.print.attribute.standard.Finishings.getEnumValueTable();javax.print.attribute.standard.JobSheets.getEnumValueTable();javax.print.attribute.standard.JobState.getEnumValueTable();javax.print.attribute.standard.JobStateReason.getEnumValueTable();javax.print.attribute.standard.MediaName.getEnumValueTable();javax.print.attribute.standard.MediaSizeName.getEnumValueTable();javax.print.attribute.standard.MediaTray.getEnumValueTable();javax.print.attribute.standard.MultipleDocumentHandling.getEnumValueTable();javax.print.attribute.standard.OrientationRequested.getEnumValueTable();javax.print.attribute.standard.PDLOverrideSupported.getEnumValueTable();javax.print.attribute.standard.PresentationDirection.getEnumValueTable();javax.print.attribute.standard.PrinterIsAcceptingJobs.getEnumValueTable();javax.print.attribute.standard.PrinterState.getEnumValueTable();javax.print.attribute.standard.PrinterStateReason.getEnumValueTable();javax.print.attribute.standard.PrintQuality.getEnumValueTable();javax.print.attribute.standard.ReferenceUriSchemesSupported.getEnumValueTable();javax.print.attribute.standard.Severity.getEnumValueTable();javax.print.attribute.standard.SheetCollate.getEnumValueTable();javax.print.attribute.standard.Sides.getEnumValueTable(),;0.07;0.81;0.81;0.81;0.81;0.81;0.81;0.81;0.81;0.81;0.82;0.81;0.82;0.81;0.81;0.81;0.81;0.81;0.81;0.81;0.81;0.81;0.81;0.81;0.81
getStringTable,25,0.792013906,Returns the string table for class MediaTray.,;javax.print.attribute.EnumSyntax.getStringTable();javax.print.attribute.standard.Chromaticity.getStringTable();javax.print.attribute.standard.ColorSupported.getStringTable();javax.print.attribute.standard.Compression.getStringTable();javax.print.attribute.standard.DialogTypeSelection.getStringTable();javax.print.attribute.standard.Fidelity.getStringTable();javax.print.attribute.standard.Finishings.getStringTable();javax.print.attribute.standard.JobSheets.getStringTable();javax.print.attribute.standard.JobState.getStringTable();javax.print.attribute.standard.JobStateReason.getStringTable();javax.print.attribute.standard.MediaName.getStringTable();javax.print.attribute.standard.MediaSizeName.getStringTable();javax.print.attribute.standard.MediaTray.getStringTable();javax.print.attribute.standard.MultipleDocumentHandling.getStringTable();javax.print.attribute.standard.OrientationRequested.getStringTable();javax.print.attribute.standard.PDLOverrideSupported.getStringTable();javax.print.attribute.standard.PresentationDirection.getStringTable();javax.print.attribute.standard.PrinterIsAcceptingJobs.getStringTable();javax.print.attribute.standard.PrinterState.getStringTable();javax.print.attribute.standard.PrinterStateReason.getStringTable();javax.print.attribute.standard.PrintQuality.getStringTable();javax.print.attribute.standard.ReferenceUriSchemesSupported.getStringTable();javax.print.attribute.standard.Severity.getStringTable();javax.print.attribute.standard.SheetCollate.getStringTable();javax.print.attribute.standard.Sides.getStringTable(),;0.06;0.78;0.78;0.78;0.78;0.78;0.78;0.78;0.78;0.78;0.79;0.78;0.79;0.78;0.78;0.78;0.78;0.78;0.78;0.78;0.78;0.78;0.78;0.78;0.78
setValue,25,0.112381934,"Sets the current value for the control. The default implementation simply sets the value as indicated. If the value indicated is not supported, an IllegalArgumentException is thrown. Some controls require that their line be open before they can be affected by setting a value.",";java.awt.Scrollbar.setValue(int);java.awt.ScrollPaneAdjustable.setValue(int);java.beans.Expression.setValue(Object);java.beans.FeatureDescriptor.setValue(String,Object);java.beans.PropertyEditorSupport.setValue(Object);java.net.HttpCookie.setValue(String);java.util.AbstractMap.SimpleEntry.setValue(V);java.util.AbstractMap.SimpleImmutableEntry.setValue(V);javax.sound.sampled.BooleanControl.setValue(boolean);javax.sound.sampled.EnumControl.setValue(Object);javax.sound.sampled.FloatControl.setValue(float);javax.swing.DefaultBoundedRangeModel.setValue(int);javax.swing.JFormattedTextField.setValue(Object);javax.swing.JOptionPane.setValue(Object);javax.swing.JProgressBar.setValue(int);javax.swing.JScrollBar.setValue(int);javax.swing.JSlider.setValue(int);javax.swing.JSpinner.setValue(Object);javax.swing.SpinnerDateModel.setValue(Object);javax.swing.SpinnerListModel.setValue(Object);javax.swing.SpinnerNumberModel.setValue(Object);javax.swing.Spring.setValue(int);javax.swing.table.DefaultTableCellRenderer.setValue(Object);javax.xml.bind.JAXBElement.setValue(T);org.xml.sax.helpers.AttributesImpl.setValue(int,String)",;0.05;0.05;0.05;0.04;0.04;0.04;0.05;0.06;0.09;0.11;0.11;0.06;0.04;0.04;0.08;0.04;0.08;0.06;0.06;0.05;0.07;0.04;0.04;0.04;0.04
getData,26,0.417718512,Returns the data array for the specified bank. Note that calling this method may cause this DataBuffer object to be incompatible with performance optimizations used by some implementations (such as caching an associated image in video memory).,;java.awt.color.ICC_Profile.getData();java.awt.color.ICC_Profile.getData(int);java.awt.datatransfer.Clipboard.getData(DataFlavor);java.awt.image.BufferedImage.getData();java.awt.image.BufferedImage.getData(Rectangle);java.awt.image.DataBufferByte.getData();java.awt.image.DataBufferByte.getData(int);java.awt.image.DataBufferDouble.getData();java.awt.image.DataBufferDouble.getData(int);java.awt.image.DataBufferFloat.getData();java.awt.image.DataBufferFloat.getData(int);java.awt.image.DataBufferInt.getData();java.awt.image.DataBufferInt.getData(int);java.awt.image.DataBufferShort.getData();java.awt.image.DataBufferShort.getData(int);java.awt.image.DataBufferUShort.getData();java.awt.image.DataBufferUShort.getData(int);java.net.DatagramPacket.getData();java.rmi.activation.ActivationDesc.getData();java.rmi.activation.ActivationGroupDesc.getData();javax.imageio.stream.IIOByteBuffer.getData();javax.sound.midi.MetaMessage.getData();javax.sound.midi.SoundbankResource.getData();javax.sound.midi.SysexMessage.getData();javax.swing.text.html.FormSubmitEvent.getData();javax.swing.text.html.parser.Entity.getData(),;0.04;0.04;0.04;0.07;0.07;0.40;0.42;0.40;0.42;0.40;0.42;0.38;0.42;0.40;0.42;0.40;0.42;0.04;0.04;0.04;0.04;0.05;0.04;0.05;0.04;0.00
getDescription,26,0.222439423,Customization hook: Get the description that will be used in the MBeanOperationInfo returned by this MBean. Subclasses may redefine this method in order to supply their custom description. The default implementation returns getDescription((MBeanFeatureInfo) info).,";javax.imageio.spi.IIOServiceProvider.getDescription(Locale);javax.management.MBeanFeatureInfo.getDescription();javax.management.MBeanInfo.getDescription();javax.management.StandardMBean.getDescription(MBeanInfo);javax.management.StandardMBean.getDescription(MBeanFeatureInfo);javax.management.StandardMBean.getDescription(MBeanAttributeInfo);javax.management.StandardMBean.getDescription(MBeanConstructorInfo);javax.management.StandardMBean.getDescription(MBeanConstructorInfo,MBeanParameterInfo,int);javax.management.StandardMBean.getDescription(MBeanOperationInfo);javax.management.StandardMBean.getDescription(MBeanOperationInfo,MBeanParameterInfo,int);javax.management.openmbean.CompositeType.getDescription(String);javax.management.openmbean.OpenType.getDescription();javax.management.relation.RoleInfo.getDescription();javax.sound.midi.MidiDevice.Info.getDescription();javax.sound.sampled.Mixer.Info.getDescription();javax.swing.ImageIcon.getDescription();javax.swing.JFileChooser.getDescription(File);javax.swing.LookAndFeel.getDescription();javax.swing.event.HyperlinkEvent.getDescription();javax.swing.filechooser.FileFilter.getDescription();javax.swing.filechooser.FileNameExtensionFilter.getDescription();javax.swing.filechooser.FileView.getDescription(File);javax.swing.plaf.metal.MetalLookAndFeel.getDescription();javax.swing.plaf.multi.MultiLookAndFeel.getDescription();javax.swing.plaf.nimbus.NimbusLookAndFeel.getDescription();javax.swing.plaf.synth.SynthLookAndFeel.getDescription()",;0.05;0.06;0.06;0.21;0.19;0.22;0.22;0.21;0.22;0.21;0.05;0.04;0.04;0.07;0.07;0.05;0.04;0.06;0.05;0.08;0.08;0.05;0.07;0.07;0.09;0.06
getOffset,26,0.121280525,"Gets the zone offset, such as '+01:00'. This is the offset of the local date-time from UTC/Greenwich.",";java.awt.image.ComponentSampleModel.getOffset(int,int);java.awt.image.ComponentSampleModel.getOffset(int,int,int);java.awt.image.DataBuffer.getOffset();java.awt.image.LookupTable.getOffset();java.awt.image.MultiPixelPackedSampleModel.getOffset(int,int);java.awt.image.SinglePixelPackedSampleModel.getOffset(int,int);java.io.ObjectStreamField.getOffset();java.net.DatagramPacket.getOffset();java.text.CollationElementIterator.getOffset();java.time.OffsetDateTime.getOffset();java.time.OffsetTime.getOffset();java.time.ZonedDateTime.getOffset();java.time.zone.ZoneRules.getOffset(Instant);java.util.SimpleTimeZone.getOffset(long);java.util.SimpleTimeZone.getOffset(int,int,int,int,int,int);java.util.TimeZone.getOffset(int,int,int,int,int,int);java.util.TimeZone.getOffset(long);javax.imageio.stream.IIOByteBuffer.getOffset();javax.management.monitor.CounterMonitor.getOffset();javax.print.attribute.EnumSyntax.getOffset();javax.print.attribute.standard.Finishings.getOffset();javax.print.attribute.standard.OrientationRequested.getOffset();javax.print.attribute.standard.PrintQuality.getOffset();javax.swing.text.BoxView.getOffset(int,int);javax.swing.text.DefaultStyledDocument.ElementSpec.getOffset();javax.xml.bind.helpers.ValidationEventLocatorImpl.getOffset()",;0.07;0.08;0.07;0.00;0.06;0.07;0.04;0.07;0.04;0.12;0.12;0.12;0.04;0.06;0.04;0.06;0.07;0.04;0.04;0.05;0.11;0.11;0.11;0.04;0.04;0.04
replace,26,0.230769231,The replace method in Java is used to replace all occurrences of a specified character or substring with another character or substring in a given string.,";java.lang.String.replace(char,char);java.lang.String.replace(CharSequence,CharSequence);java.lang.StringBuffer.replace(int,int,String);java.lang.StringBuilder.replace(int,int,String);java.security.Provider.replace(Object,Object,Object);java.security.Provider.replace(Object,Object);java.util.HashMap.replace(K,V,V);java.util.HashMap.replace(K,V);java.util.Hashtable.replace(K,V,V);java.util.Hashtable.replace(K,V);java.util.TreeMap.replace(K,V,V);java.util.TreeMap.replace(K,V);java.util.concurrent.ConcurrentHashMap.replace(K,V,V);java.util.concurrent.ConcurrentHashMap.replace(K,V);java.util.concurrent.ConcurrentSkipListMap.replace(K,V,V);java.util.concurrent.ConcurrentSkipListMap.replace(K,V);javax.swing.GroupLayout.replace(Component,Component);javax.swing.text.AbstractDocument.replace(int,int,String,AttributeSet);javax.swing.text.AsyncBoxView.replace(int,int,View[]);javax.swing.text.BoxView.replace(int,int,View[]);javax.swing.text.CompositeView.replace(int,int,View[]);javax.swing.text.DocumentFilter.replace(DocumentFilter.FilterBypass,int,int,String,AttributeSet);javax.swing.text.DocumentFilter.FilterBypass.replace(int,int,String,AttributeSet);javax.swing.text.GapContent.replace(int,int,Object,int);javax.swing.text.TableView.replace(int,int,View[]);javax.swing.text.View.replace(int,int,View[])",;0.04;0.04;0.08;0.08;0.10;0.09;0.23;0.23;0.23;0.23;0.23;0.23;0.13;0.13;0.13;0.13;0.04;0.05;0.04;0.04;0.07;0.04;0.04;0.04;0.04;0.07
unmarshal,26,0.461538462,The unmarshal method in Java is used to convert XML data into Java objects.,";javax.xml.bind.Binder.unmarshal(XmlNode);javax.xml.bind.Binder.unmarshal(XmlNode,Class&lt;T&gt;);javax.xml.bind.JAXB.unmarshal(File,Class&lt;T&gt;);javax.xml.bind.JAXB.unmarshal(URL,Class&lt;T&gt;);javax.xml.bind.JAXB.unmarshal(URI,Class&lt;T&gt;);javax.xml.bind.JAXB.unmarshal(String,Class&lt;T&gt;);javax.xml.bind.JAXB.unmarshal(InputStream,Class&lt;T&gt;);javax.xml.bind.JAXB.unmarshal(Reader,Class&lt;T&gt;);javax.xml.bind.JAXB.unmarshal(Source,Class&lt;T&gt;);javax.xml.bind.annotation.adapters.CollapsedStringAdapter.unmarshal(String);javax.xml.bind.annotation.adapters.HexBinaryAdapter.unmarshal(String);javax.xml.bind.annotation.adapters.NormalizedStringAdapter.unmarshal(String);javax.xml.bind.annotation.adapters.XmlAdapter.unmarshal(ValueType);javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(Source);javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(XMLReader,InputSource);javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(InputSource);javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(URL);javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(File);javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(InputStream);javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(Reader);javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(XMLEventReader);javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(XMLStreamReader);javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(Node,Class&lt;T&gt;);javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(Source,Class&lt;T&gt;);javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(XMLStreamReader,Class&lt;T&gt;);javax.xml.bind.helpers.AbstractUnmarshallerImpl.unmarshal(XMLEventReader,Class&lt;T&gt;)",;0.06;0.05;0.27;0.27;0.27;0.27;0.27;0.27;0.27;0.04;0.04;0.04;0.04;0.46;0.04;0.46;0.46;0.46;0.46;0.46;0.46;0.46;0.46;0.46;0.46;0.46
plus,27,0.3820922,The plus method in Java is used to concatenate two strings together.,";java.math.BigDecimal.plus();java.math.BigDecimal.plus(MathContext);java.time.Duration.plus(Duration);java.time.Duration.plus(long,TemporalUnit);java.time.Instant.plus(TemporalAmount);java.time.LocalDate.plus(TemporalAmount);java.time.LocalDateTime.plus(TemporalAmount);java.time.LocalDateTime.plus(long,TemporalUnit);java.time.LocalTime.plus(TemporalAmount);java.time.OffsetDateTime.plus(TemporalAmount);java.time.OffsetDateTime.plus(long,TemporalUnit);java.time.OffsetTime.plus(TemporalAmount);java.time.OffsetTime.plus(long,TemporalUnit);java.time.Period.plus(TemporalAmount);java.time.Year.plus(TemporalAmount);java.time.YearMonth.plus(TemporalAmount);java.time.ZonedDateTime.plus(TemporalAmount);java.time.ZonedDateTime.plus(long,TemporalUnit);java.time.chrono.HijrahDate.plus(TemporalAmount);java.time.chrono.HijrahDate.plus(long,TemporalUnit);java.time.chrono.JapaneseDate.plus(TemporalAmount);java.time.chrono.JapaneseDate.plus(long,TemporalUnit);java.time.chrono.MinguoDate.plus(TemporalAmount);java.time.chrono.MinguoDate.plus(long,TemporalUnit);java.time.chrono.ThaiBuddhistDate.plus(TemporalAmount);java.time.chrono.ThaiBuddhistDate.plus(long,TemporalUnit);javax.management.Query.plus(ValueExp,ValueExp)",;0.05;0.05;0.05;0.12;0.38;0.38;0.38;0.19;0.38;0.38;0.21;0.38;0.21;0.12;0.38;0.38;0.38;0.15;0.21;0.15;0.21;0.15;0.21;0.15;0.21;0.15;0.04
getProvider,28,0.541829611,The getProvider method in Java is used to retrieve the provider of a security service.,;java.security.AlgorithmParameterGenerator.getProvider();java.security.AlgorithmParameters.getProvider();java.security.KeyFactory.getProvider();java.security.KeyPairGenerator.getProvider();java.security.KeyStore.getProvider();java.security.MessageDigest.getProvider();java.security.Policy.getProvider();java.security.Provider.Service.getProvider();java.security.SecureRandom.getProvider();java.security.Security.getProvider(String);java.security.Signature.getProvider();java.security.cert.CertificateFactory.getProvider();java.security.cert.CertPathBuilder.getProvider();java.security.cert.CertPathValidator.getProvider();java.security.cert.CertStore.getProvider();javax.crypto.Cipher.getProvider();javax.crypto.ExemptionMechanism.getProvider();javax.crypto.KeyAgreement.getProvider();javax.crypto.KeyGenerator.getProvider();javax.crypto.Mac.getProvider();javax.crypto.SecretKeyFactory.getProvider();javax.net.ssl.KeyManagerFactory.getProvider();javax.net.ssl.SSLContext.getProvider();javax.net.ssl.TrustManagerFactory.getProvider();javax.security.auth.login.Configuration.getProvider();javax.xml.crypto.dsig.TransformService.getProvider();javax.xml.crypto.dsig.XMLSignatureFactory.getProvider();javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.getProvider(),;0.40;0.52;0.46;0.40;0.54;0.45;0.07;0.06;0.52;0.04;0.52;0.50;0.54;0.05;0.54;0.52;0.52;0.52;0.52;0.52;0.52;0.52;0.52;0.52;0.07;0.54;0.54;0.54
next,28,0.285714286,The next() method in Java is used to retrieve the next token or word from a scanner object.,;java.awt.CardLayout.next(Container);java.awt.geom.FlatteningPathIterator.next();java.beans.beancontext.BeanContextSupport.BCSIterator.next();java.security.SecureRandom.next(int);java.text.BreakIterator.next(int);java.text.BreakIterator.next();java.text.CollationElementIterator.next();java.text.StringCharacterIterator.next();java.time.temporal.TemporalAdjusters.next(DayOfWeek);java.util.Random.next(int);java.util.Scanner.next();java.util.Scanner.next(String);java.util.Scanner.next(Pattern);java.util.concurrent.ThreadLocalRandom.next(int);javax.print.attribute.SetOfIntegerSyntax.next(int);javax.swing.text.ElementIterator.next();javax.swing.text.Segment.next();javax.swing.text.html.HTMLDocument.Iterator.next();javax.xml.stream.util.EventReaderDelegate.next();javax.xml.stream.util.StreamReaderDelegate.next();org.omg.DynamicAny._DynAnyStub.next();org.omg.DynamicAny._DynArrayStub.next();org.omg.DynamicAny._DynEnumStub.next();org.omg.DynamicAny._DynFixedStub.next();org.omg.DynamicAny._DynSequenceStub.next();org.omg.DynamicAny._DynStructStub.next();org.omg.DynamicAny._DynUnionStub.next();org.omg.DynamicAny._DynValueStub.next(),;0.04;0.04;0.10;0.04;0.04;0.04;0.04;0.04;0.04;0.04;0.05;0.05;0.07;0.04;0.04;0.04;0.04;0.04;0.10;0.08;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29
create,29,0.094997217,The create method in Java is used to create a new object or instance of a class.,";java.awt.Graphics.create();java.beans.EventHandler.create(Class&lt;T&gt;,Object,String);java.beans.EventHandler.create(Class&lt;T&gt;,Object,String,String);java.beans.EventHandler.create(Class&lt;T&gt;,Object,String,String,String);java.net.DatagramSocketImpl.create();java.net.SocketImpl.create(boolean);java.net.URI.create(String);javax.swing.DebugGraphics.create();javax.swing.DebugGraphics.create(int,int,int,int);javax.swing.plaf.basic.BasicPasswordFieldUI.create(Element);javax.swing.plaf.basic.BasicTextAreaUI.create(Element);javax.swing.plaf.basic.BasicTextFieldUI.create(Element);javax.swing.plaf.basic.BasicTextUI.create(Element);javax.swing.plaf.basic.BasicTextUI.create(Element,int,int);javax.swing.plaf.synth.SynthPasswordFieldUI.create(Element);javax.swing.text.DefaultStyledDocument.create(DefaultStyledDocument.ElementSpec[]);javax.swing.text.html.HTMLDocument.create(DefaultStyledDocument.ElementSpec[]);javax.swing.text.html.HTMLEditorKit.HTMLFactory.create(Element);javax.xml.soap.SOAPElementFactory.create(Name);javax.xml.soap.SOAPElementFactory.create(String);javax.xml.soap.SOAPElementFactory.create(String,String,String);javax.xml.ws.Endpoint.create(Object);javax.xml.ws.Endpoint.create(Object,WebServiceFeature...);javax.xml.ws.Endpoint.create(String,Object);javax.xml.ws.Endpoint.create(String,Object,WebServiceFeature...);javax.xml.ws.Service.create(URL,QName);javax.xml.ws.Service.create(URL,QName,WebServiceFeature...);javax.xml.ws.Service.create(QName);javax.xml.ws.Service.create(QName,WebServiceFeature...)",;0.03;0.05;0.05;0.04;0.03;0.03;0.03;0.07;0.07;0.07;0.04;0.03;0.07;0.07;0.07;0.03;0.03;0.03;0.07;0.07;0.07;0.09;0.09;0.08;0.09;0.07;0.08;0.04;0.06
from,29,0.34883332,The purpose of the from method in Java is to specify the source of data for a query or operation.,";java.lang.ProcessBuilder.Redirect.from(File);java.lang.management.LockInfo.from(CompositeData);java.lang.management.MemoryNotificationInfo.from(CompositeData);java.lang.management.MemoryUsage.from(CompositeData);java.lang.management.MonitorInfo.from(CompositeData);java.lang.management.ThreadInfo.from(CompositeData);java.nio.file.attribute.FileTime.from(long,TimeUnit);java.nio.file.attribute.FileTime.from(Instant);java.sql.Timestamp.from(Instant);java.time.Duration.from(TemporalAmount);java.time.Instant.from(TemporalAccessor);java.time.LocalDate.from(TemporalAccessor);java.time.LocalDateTime.from(TemporalAccessor);java.time.LocalTime.from(TemporalAccessor);java.time.MonthDay.from(TemporalAccessor);java.time.OffsetDateTime.from(TemporalAccessor);java.time.OffsetTime.from(TemporalAccessor);java.time.Period.from(TemporalAmount);java.time.Year.from(TemporalAccessor);java.time.YearMonth.from(TemporalAccessor);java.time.ZonedDateTime.from(TemporalAccessor);java.time.ZoneId.from(TemporalAccessor);java.time.ZoneOffset.from(TemporalAccessor);java.time.chrono.HijrahDate.from(TemporalAccessor);java.time.chrono.JapaneseDate.from(TemporalAccessor);java.time.chrono.MinguoDate.from(TemporalAccessor);java.time.chrono.ThaiBuddhistDate.from(TemporalAccessor);java.util.Date.from(Instant);java.util.GregorianCalendar.from(ZonedDateTime)",;0.03;0.08;0.08;0.08;0.07;0.05;0.04;0.04;0.07;0.11;0.33;0.35;0.34;0.35;0.34;0.29;0.34;0.11;0.35;0.35;0.28;0.30;0.32;0.34;0.35;0.35;0.35;0.08;0.08
getListeners,29,0.708928563,"Returns an array of all the objects currently registered as FooListeners upon this model. FooListeners are registered using the addFooListener method. You can specify the listenerType argument with a class literal, such as FooListener.class. For example, you can query a DefaultButtonModel instance m for its action listeners with the following code: ActionListener[] als = (ActionListener[])(m.getListeners(ActionListener.class)); If no such listeners exist, this method returns an empty array.",";java.awt.AWTEventMulticaster.getListeners(EventListener,Class&lt;T&gt;);java.awt.Button.getListeners(Class&lt;T&gt;);java.awt.Checkbox.getListeners(Class&lt;T&gt;);java.awt.CheckboxMenuItem.getListeners(Class&lt;T&gt;);java.awt.Choice.getListeners(Class&lt;T&gt;);java.awt.Component.getListeners(Class&lt;T&gt;);java.awt.Container.getListeners(Class&lt;T&gt;);java.awt.List.getListeners(Class&lt;T&gt;);java.awt.MenuItem.getListeners(Class&lt;T&gt;);java.awt.Scrollbar.getListeners(Class&lt;T&gt;);java.awt.TextComponent.getListeners(Class&lt;T&gt;);java.awt.TextField.getListeners(Class&lt;T&gt;);java.awt.Window.getListeners(Class&lt;T&gt;);java.awt.dnd.DragSource.getListeners(Class&lt;T&gt;);javax.swing.AbstractListModel.getListeners(Class&lt;T&gt;);javax.swing.AbstractSpinnerModel.getListeners(Class&lt;T&gt;);javax.swing.DefaultBoundedRangeModel.getListeners(Class&lt;T&gt;);javax.swing.DefaultButtonModel.getListeners(Class&lt;T&gt;);javax.swing.DefaultListSelectionModel.getListeners(Class&lt;T&gt;);javax.swing.DefaultSingleSelectionModel.getListeners(Class&lt;T&gt;);javax.swing.JComponent.getListeners(Class&lt;T&gt;);javax.swing.Timer.getListeners(Class&lt;T&gt;);javax.swing.event.EventListenerList.getListeners(Class&lt;T&gt;);javax.swing.table.AbstractTableModel.getListeners(Class&lt;T&gt;);javax.swing.table.DefaultTableColumnModel.getListeners(Class&lt;T&gt;);javax.swing.text.AbstractDocument.getListeners(Class&lt;T&gt;);javax.swing.text.DefaultCaret.getListeners(Class&lt;T&gt;);javax.swing.tree.DefaultTreeModel.getListeners(Class&lt;T&gt;);javax.swing.tree.DefaultTreeSelectionModel.getListeners(Class&lt;T&gt;)",;0.24;0.70;0.70;0.70;0.70;0.70;0.69;0.69;0.70;0.70;0.68;0.70;0.68;0.07;0.68;0.09;0.70;0.71;0.69;0.70;0.70;0.69;0.04;0.68;0.69;0.68;0.69;0.69;0.69
flush,30,0.124158255,The flush() method in Java is used to clear the output stream and force any buffered output to be written immediately.,;java.beans.XMLEncoder.flush();java.io.BufferedOutputStream.flush();java.io.BufferedWriter.flush();java.io.CharArrayWriter.flush();java.io.Console.flush();java.io.DataOutputStream.flush();java.io.FilterOutputStream.flush();java.io.FilterWriter.flush();java.io.ObjectOutputStream.flush();java.io.OutputStream.flush();java.io.OutputStreamWriter.flush();java.io.PipedOutputStream.flush();java.io.PipedWriter.flush();java.io.PrintStream.flush();java.io.PrintWriter.flush();java.io.StringWriter.flush();java.io.Writer.flush();java.nio.charset.CharsetDecoder.flush(CharBuffer);java.nio.charset.CharsetEncoder.flush(ByteBuffer);java.util.Formatter.flush();java.util.logging.Handler.flush();java.util.logging.MemoryHandler.flush();java.util.logging.StreamHandler.flush();java.util.prefs.AbstractPreferences.flush();java.util.prefs.Preferences.flush();java.util.zip.DeflaterOutputStream.flush();java.util.zip.InflaterOutputStream.flush();javax.crypto.CipherOutputStream.flush();javax.imageio.stream.ImageInputStreamImpl.flush();javax.tools.ForwardingJavaFileManager.flush(),;0.04;0.11;0.00;0.00;0.05;0.11;0.12;0.00;0.06;0.08;0.00;0.12;0.10;0.08;0.00;0.00;0.05;0.06;0.06;0.04;0.03;0.03;0.03;0.04;0.04;0.04;0.07;0.06;0.06;0.06
getBaseline,30,0.098140042,"Returns the baseline. The baseline is measured from the top of the component. This method is primarily meant for LayoutManagers to align components along their baseline. A return value less than 0 indicates this component does not have a reasonable baseline and that LayoutManagers should not align this component on its baseline. The default implementation returns -1. Subclasses that support baseline should override appropriately. If a value &gt;= 0 is returned, then the component has a valid baseline for any size &gt;= the minimum size and getBaselineResizeBehavior can be used to determine how the baseline changes with size.",";java.awt.Component.getBaseline(int,int);java.awt.font.TextLayout.getBaseline();javax.swing.JComponent.getBaseline(int,int);javax.swing.JSpinner.DefaultEditor.getBaseline(int,int);javax.swing.border.AbstractBorder.getBaseline(Component,int,int);javax.swing.border.TitledBorder.getBaseline(Component,int,int);javax.swing.plaf.ComponentUI.getBaseline(JComponent,int,int);javax.swing.plaf.LayerUI.getBaseline(JComponent,int,int);javax.swing.plaf.basic.BasicButtonUI.getBaseline(JComponent,int,int);javax.swing.plaf.basic.BasicComboBoxUI.getBaseline(JComponent,int,int);javax.swing.plaf.basic.BasicLabelUI.getBaseline(JComponent,int,int);javax.swing.plaf.basic.BasicListUI.getBaseline(JComponent,int,int);javax.swing.plaf.basic.BasicPanelUI.getBaseline(JComponent,int,int);javax.swing.plaf.basic.BasicProgressBarUI.getBaseline(JComponent,int,int);javax.swing.plaf.basic.BasicScrollPaneUI.getBaseline(JComponent,int,int);javax.swing.plaf.basic.BasicSliderUI.getBaseline(JComponent,int,int);javax.swing.plaf.basic.BasicSpinnerUI.getBaseline(JComponent,int,int);javax.swing.plaf.basic.BasicTabbedPaneUI.getBaseline(JComponent,int,int);javax.swing.plaf.basic.BasicTabbedPaneUI.getBaseline(int);javax.swing.plaf.basic.BasicTableHeaderUI.getBaseline(JComponent,int,int);javax.swing.plaf.basic.BasicTableUI.getBaseline(JComponent,int,int);javax.swing.plaf.basic.BasicTextAreaUI.getBaseline(JComponent,int,int);javax.swing.plaf.basic.BasicTextFieldUI.getBaseline(JComponent,int,int);javax.swing.plaf.basic.BasicTreeUI.getBaseline(JComponent,int,int);javax.swing.plaf.metal.MetalComboBoxUI.getBaseline(JComponent,int,int);javax.swing.plaf.synth.SynthButtonUI.getBaseline(JComponent,int,int);javax.swing.plaf.synth.SynthLabelUI.getBaseline(JComponent,int,int);javax.swing.plaf.synth.SynthProgressBarUI.getBaseline(JComponent,int,int);javax.swing.plaf.synth.SynthSliderUI.getBaseline(JComponent,int,int);javax.swing.plaf.synth.SynthTabbedPaneUI.getBaseline(int)",;0.10;0.04;0.09;0.00;0.07;0.00;0.07;0.03;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.07;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.07
getUIs,30,1,Returns the list of UIs associated with this multiplexing UI. This allows processing of the UIs by an application aware of multiplexing UIs on components.,;javax.swing.plaf.multi.MultiButtonUI.getUIs();javax.swing.plaf.multi.MultiColorChooserUI.getUIs();javax.swing.plaf.multi.MultiComboBoxUI.getUIs();javax.swing.plaf.multi.MultiDesktopIconUI.getUIs();javax.swing.plaf.multi.MultiDesktopPaneUI.getUIs();javax.swing.plaf.multi.MultiFileChooserUI.getUIs();javax.swing.plaf.multi.MultiInternalFrameUI.getUIs();javax.swing.plaf.multi.MultiLabelUI.getUIs();javax.swing.plaf.multi.MultiListUI.getUIs();javax.swing.plaf.multi.MultiMenuBarUI.getUIs();javax.swing.plaf.multi.MultiMenuItemUI.getUIs();javax.swing.plaf.multi.MultiOptionPaneUI.getUIs();javax.swing.plaf.multi.MultiPanelUI.getUIs();javax.swing.plaf.multi.MultiPopupMenuUI.getUIs();javax.swing.plaf.multi.MultiProgressBarUI.getUIs();javax.swing.plaf.multi.MultiRootPaneUI.getUIs();javax.swing.plaf.multi.MultiScrollBarUI.getUIs();javax.swing.plaf.multi.MultiScrollPaneUI.getUIs();javax.swing.plaf.multi.MultiSeparatorUI.getUIs();javax.swing.plaf.multi.MultiSliderUI.getUIs();javax.swing.plaf.multi.MultiSpinnerUI.getUIs();javax.swing.plaf.multi.MultiSplitPaneUI.getUIs();javax.swing.plaf.multi.MultiTabbedPaneUI.getUIs();javax.swing.plaf.multi.MultiTableHeaderUI.getUIs();javax.swing.plaf.multi.MultiTableUI.getUIs();javax.swing.plaf.multi.MultiTextUI.getUIs();javax.swing.plaf.multi.MultiToolBarUI.getUIs();javax.swing.plaf.multi.MultiToolTipUI.getUIs();javax.swing.plaf.multi.MultiTreeUI.getUIs();javax.swing.plaf.multi.MultiViewportUI.getUIs(),;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00;1.00
setUI,30,0.626187369,Sets the L&amp;F object that renders this component.,;javax.swing.AbstractButton.setUI(ButtonUI);javax.swing.JColorChooser.setUI(ColorChooserUI);javax.swing.JComboBox.setUI(ComboBoxUI);javax.swing.JComponent.setUI(ComponentUI);javax.swing.JDesktopPane.setUI(DesktopPaneUI);javax.swing.JInternalFrame.setUI(InternalFrameUI);javax.swing.JInternalFrame.JDesktopIcon.setUI(DesktopIconUI);javax.swing.JLabel.setUI(LabelUI);javax.swing.JLayer.setUI(LayerUI&lt;?);javax.swing.JList.setUI(ListUI);javax.swing.JMenuBar.setUI(MenuBarUI);javax.swing.JMenuItem.setUI(MenuItemUI);javax.swing.JOptionPane.setUI(OptionPaneUI);javax.swing.JPanel.setUI(PanelUI);javax.swing.JPopupMenu.setUI(PopupMenuUI);javax.swing.JProgressBar.setUI(ProgressBarUI);javax.swing.JRootPane.setUI(RootPaneUI);javax.swing.JScrollBar.setUI(ScrollBarUI);javax.swing.JScrollPane.setUI(ScrollPaneUI);javax.swing.JSeparator.setUI(SeparatorUI);javax.swing.JSlider.setUI(SliderUI);javax.swing.JSpinner.setUI(SpinnerUI);javax.swing.JSplitPane.setUI(SplitPaneUI);javax.swing.JTabbedPane.setUI(TabbedPaneUI);javax.swing.JTable.setUI(TableUI);javax.swing.JToolBar.setUI(ToolBarUI);javax.swing.JTree.setUI(TreeUI);javax.swing.JViewport.setUI(ViewportUI);javax.swing.table.JTableHeader.setUI(TableHeaderUI);javax.swing.text.JTextComponent.setUI(TextUI),;0.63;0.63;0.63;0.05;0.63;0.03;0.41;0.63;0.03;0.35;0.63;0.41;0.24;0.49;0.63;0.41;0.63;0.63;0.15;0.63;0.24;0.49;0.63;0.24;0.54;0.63;0.44;0.63;0.49;0.03
addNotify,31,0.239839711,Creates the menu's peer. The peer allows us to modify the appearance of the menu without changing its functionality.,;java.awt.Button.addNotify();java.awt.Canvas.addNotify();java.awt.Checkbox.addNotify();java.awt.CheckboxMenuItem.addNotify();java.awt.Choice.addNotify();java.awt.Component.addNotify();java.awt.Container.addNotify();java.awt.Dialog.addNotify();java.awt.FileDialog.addNotify();java.awt.Frame.addNotify();java.awt.Label.addNotify();java.awt.List.addNotify();java.awt.Menu.addNotify();java.awt.MenuBar.addNotify();java.awt.MenuItem.addNotify();java.awt.Panel.addNotify();java.awt.PopupMenu.addNotify();java.awt.Scrollbar.addNotify();java.awt.ScrollPane.addNotify();java.awt.TextArea.addNotify();java.awt.TextComponent.addNotify();java.awt.TextField.addNotify();java.awt.Window.addNotify();java.awt.dnd.DropTarget.addNotify(java.awt.peer.ComponentPeer);java.awt.dnd.DropTargetContext.addNotify(java.awt.dnd.peer.DropTargetContextPeer);javax.swing.JComponent.addNotify();javax.swing.JLayer.addNotify();javax.swing.JMenuBar.addNotify();javax.swing.JRootPane.addNotify();javax.swing.JTable.addNotify();javax.swing.plaf.metal.MetalInternalFrameTitlePane.addNotify(),;0.13;0.13;0.16;0.14;0.17;0.15;0.16;0.16;0.21;0.16;0.21;0.17;0.24;0.16;0.23;0.20;0.16;0.17;0.03;0.20;0.15;0.23;0.13;0.03;0.03;0.15;0.15;0.03;0.15;0.03;0.03
getBounds2D,31,0.557161283,"Returns a high precision and more accurate bounding box of the Shape than the getBounds method. Note that there is no guarantee that the returned Rectangle2D is the smallest bounding box that encloses the Shape, only that the Shape lies entirely within the indicated Rectangle2D. The bounding box returned by this method is usually tighter than that returned by the getBounds method and never fails due to overflow problems since the return value can be an instance of the Rectangle2D that uses double precision values to store the dimensions. Note that the definition of insideness can lead to situations where points on the defining outline of the shape may not be considered contained in the returned bounds object, but only in cases where those points are also not considered contained in the original shape. If a point is inside the shape according to the contains(point) method, then it must be inside the returned Rectangle2D bounds object according to the contains(point) method of the bounds. Specifically: shape.contains(p) requires bounds.contains(p) If a point is not inside the shape, then it might still be contained in the bounds object: bounds.contains(p) does not imply shape.contains(p)",;java.awt.Polygon.getBounds2D();java.awt.Rectangle.getBounds2D();java.awt.font.GlyphMetrics.getBounds2D();java.awt.geom.Arc2D.getBounds2D();java.awt.geom.Area.getBounds2D();java.awt.geom.CubicCurve2D.Double.getBounds2D();java.awt.geom.CubicCurve2D.Float.getBounds2D();java.awt.geom.Ellipse2D.Double.getBounds2D();java.awt.geom.Ellipse2D.Float.getBounds2D();java.awt.geom.Line2D.Double.getBounds2D();java.awt.geom.Line2D.Float.getBounds2D();java.awt.geom.Path2D.Double.getBounds2D();java.awt.geom.Path2D.Float.getBounds2D();java.awt.geom.QuadCurve2D.Double.getBounds2D();java.awt.geom.QuadCurve2D.Float.getBounds2D();java.awt.geom.Rectangle2D.getBounds2D();java.awt.geom.Rectangle2D.Double.getBounds2D();java.awt.geom.Rectangle2D.Float.getBounds2D();java.awt.geom.RoundRectangle2D.Double.getBounds2D();java.awt.geom.RoundRectangle2D.Float.getBounds2D();java.awt.image.AffineTransformOp.getBounds2D(BufferedImage);java.awt.image.AffineTransformOp.getBounds2D(Raster);java.awt.image.BandCombineOp.getBounds2D(Raster);java.awt.image.ColorConvertOp.getBounds2D(BufferedImage);java.awt.image.ColorConvertOp.getBounds2D(Raster);java.awt.image.ConvolveOp.getBounds2D(BufferedImage);java.awt.image.ConvolveOp.getBounds2D(Raster);java.awt.image.LookupOp.getBounds2D(BufferedImage);java.awt.image.LookupOp.getBounds2D(Raster);java.awt.image.RescaleOp.getBounds2D(BufferedImage);java.awt.image.RescaleOp.getBounds2D(Raster),;0.56;0.56;0.08;0.03;0.04;0.56;0.56;0.56;0.56;0.56;0.56;0.56;0.56;0.56;0.56;0.56;0.56;0.56;0.56;0.56;0.12;0.12;0.11;0.13;0.13;0.21;0.21;0.21;0.21;0.20;0.20
getProperty,31,0.101190733,"Obtain the property value specified by the key. The concept of properties is further explained in the class description. If the specified property is not defined for a particular file format, this method returns null.",";java.awt.Image.getProperty(String,ImageObserver);java.awt.Toolkit.getProperty(String,String);java.awt.image.BufferedImage.getProperty(String,ImageObserver);java.awt.image.BufferedImage.getProperty(String);java.awt.image.renderable.RenderableImageOp.getProperty(String);java.lang.System.getProperty(String);java.lang.System.getProperty(String,String);java.security.Provider.getProperty(String);java.security.Security.getProperty(String);java.util.Properties.getProperty(String);java.util.Properties.getProperty(String,String);java.util.logging.LogManager.getProperty(String);javax.sound.midi.MidiFileFormat.getProperty(String);javax.sound.sampled.AudioFileFormat.getProperty(String);javax.sound.sampled.AudioFormat.getProperty(String);javax.swing.text.AbstractDocument.getProperty(Object);javax.xml.bind.Binder.getProperty(String);javax.xml.bind.helpers.AbstractMarshallerImpl.getProperty(String);javax.xml.bind.helpers.AbstractUnmarshallerImpl.getProperty(String);javax.xml.crypto.dom.DOMCryptoContext.getProperty(String);javax.xml.parsers.SAXParser.getProperty(String);javax.xml.soap.SOAPMessage.getProperty(String);javax.xml.stream.XMLInputFactory.getProperty(String);javax.xml.stream.XMLOutputFactory.getProperty(String);javax.xml.stream.util.EventReaderDelegate.getProperty(String);javax.xml.stream.util.StreamReaderDelegate.getProperty(String);javax.xml.validation.SchemaFactory.getProperty(String);javax.xml.validation.Validator.getProperty(String);javax.xml.validation.ValidatorHandler.getProperty(String);org.xml.sax.helpers.ParserAdapter.getProperty(String);org.xml.sax.helpers.XMLFilterImpl.getProperty(String)",;0.07;0.05;0.07;0.03;0.03;0.07;0.07;0.03;0.04;0.07;0.07;0.06;0.10;0.10;0.10;0.03;0.03;0.05;0.05;0.03;0.03;0.03;0.05;0.03;0.05;0.05;0.08;0.09;0.09;0.03;0.04
getWidth,31,0.37926267,Returns the width of the framing rectangle in double precision.,;java.awt.Component.getWidth();java.awt.Dimension.getWidth();java.awt.DisplayMode.getWidth();java.awt.Image.getWidth(ImageObserver);java.awt.Rectangle.getWidth();java.awt.geom.Arc2D.Double.getWidth();java.awt.geom.Arc2D.Float.getWidth();java.awt.geom.Dimension2D.getWidth();java.awt.geom.Ellipse2D.Double.getWidth();java.awt.geom.Ellipse2D.Float.getWidth();java.awt.geom.Rectangle2D.Double.getWidth();java.awt.geom.Rectangle2D.Float.getWidth();java.awt.geom.RectangularShape.getWidth();java.awt.geom.RoundRectangle2D.Double.getWidth();java.awt.geom.RoundRectangle2D.Float.getWidth();java.awt.image.BufferedImage.getWidth();java.awt.image.BufferedImage.getWidth(ImageObserver);java.awt.image.Kernel.getWidth();java.awt.image.PixelGrabber.getWidth();java.awt.image.Raster.getWidth();java.awt.image.SampleModel.getWidth();java.awt.image.VolatileImage.getWidth();java.awt.image.renderable.RenderableImageOp.getWidth();java.awt.print.PageFormat.getWidth();java.awt.print.Paper.getWidth();javax.imageio.ImageReader.getWidth(int);javax.print.attribute.standard.MediaPrintableArea.getWidth(int);javax.swing.JComponent.getWidth();javax.swing.SpringLayout.Constraints.getWidth();javax.swing.table.TableColumn.getWidth();javax.swing.text.BoxView.getWidth(),;0.07;0.24;0.26;0.09;0.28;0.22;0.22;0.24;0.38;0.38;0.38;0.38;0.38;0.38;0.38;0.27;0.27;0.21;0.07;0.05;0.05;0.27;0.03;0.05;0.22;0.05;0.15;0.07;0.03;0.22;0.04
iterator,31,0.316017543,Returns an iterator over the elements in this queue in proper sequence. The elements will be returned in order from first (head) to last (tail). The returned iterator is weakly consistent.,;java.awt.dnd.DragGestureEvent.iterator();java.beans.beancontext.BeanContextMembershipEvent.iterator();java.beans.beancontext.BeanContextSupport.iterator();java.util.AbstractCollection.iterator();java.util.AbstractList.iterator();java.util.AbstractSequentialList.iterator();java.util.ArrayDeque.iterator();java.util.ArrayList.iterator();java.util.HashSet.iterator();java.util.PriorityQueue.iterator();java.util.ServiceLoader.iterator();java.util.Spliterators.iterator(Spliterator&lt;?);java.util.Spliterators.iterator(Spliterator.OfInt);java.util.Spliterators.iterator(Spliterator.OfLong);java.util.Spliterators.iterator(Spliterator.OfDouble);java.util.TreeSet.iterator();java.util.Vector.iterator();java.util.concurrent.ArrayBlockingQueue.iterator();java.util.concurrent.ConcurrentHashMap.KeySetView.iterator();java.util.concurrent.ConcurrentLinkedDeque.iterator();java.util.concurrent.ConcurrentLinkedQueue.iterator();java.util.concurrent.ConcurrentSkipListSet.iterator();java.util.concurrent.CopyOnWriteArrayList.iterator();java.util.concurrent.CopyOnWriteArraySet.iterator();java.util.concurrent.DelayQueue.iterator();java.util.concurrent.LinkedBlockingDeque.iterator();java.util.concurrent.LinkedBlockingQueue.iterator();java.util.concurrent.LinkedTransferQueue.iterator();java.util.concurrent.PriorityBlockingQueue.iterator();java.util.concurrent.SynchronousQueue.iterator();javax.xml.crypto.dom.DOMCryptoContext.iterator(),;0.03;0.03;0.03;0.14;0.10;0.20;0.17;0.25;0.20;0.22;0.03;0.11;0.11;0.11;0.11;0.19;0.25;0.32;0.23;0.31;0.32;0.19;0.18;0.13;0.18;0.31;0.32;0.32;0.26;0.03;0.04
minus,31,0.385487766,"Returns a copy of this time with the specified amount subtracted. This returns a LocalTime, based on this one, with the specified amount subtracted. The amount is typically Duration but may be any other type implementing the TemporalAmount interface. The calculation is delegated to the amount object by calling TemporalAmount.subtractFrom(Temporal). The amount implementation is free to implement the subtraction in any way it wishes, however it typically calls back to minus(long, TemporalUnit). Consult the documentation of the amount implementation to determine if it can be successfully subtracted. This instance is immutable and unaffected by this method call.",";java.time.Duration.minus(Duration);java.time.Duration.minus(long,TemporalUnit);java.time.Instant.minus(TemporalAmount);java.time.Instant.minus(long,TemporalUnit);java.time.LocalDate.minus(TemporalAmount);java.time.LocalDate.minus(long,TemporalUnit);java.time.LocalDateTime.minus(TemporalAmount);java.time.LocalDateTime.minus(long,TemporalUnit);java.time.LocalTime.minus(TemporalAmount);java.time.LocalTime.minus(long,TemporalUnit);java.time.OffsetDateTime.minus(TemporalAmount);java.time.OffsetDateTime.minus(long,TemporalUnit);java.time.OffsetTime.minus(TemporalAmount);java.time.OffsetTime.minus(long,TemporalUnit);java.time.Period.minus(TemporalAmount);java.time.Year.minus(TemporalAmount);java.time.Year.minus(long,TemporalUnit);java.time.YearMonth.minus(TemporalAmount);java.time.YearMonth.minus(long,TemporalUnit);java.time.ZonedDateTime.minus(TemporalAmount);java.time.ZonedDateTime.minus(long,TemporalUnit);java.time.chrono.HijrahDate.minus(TemporalAmount);java.time.chrono.HijrahDate.minus(long,TemporalUnit);java.time.chrono.JapaneseDate.minus(TemporalAmount);java.time.chrono.JapaneseDate.minus(long,TemporalUnit);java.time.chrono.MinguoDate.minus(TemporalAmount);java.time.chrono.MinguoDate.minus(long,TemporalUnit);java.time.chrono.ThaiBuddhistDate.minus(TemporalAmount);java.time.chrono.ThaiBuddhistDate.minus(long,TemporalUnit);javax.management.Query.minus(ValueExp,ValueExp);javax.swing.Spring.minus(Spring)",;0.05;0.14;0.38;0.35;0.39;0.35;0.38;0.35;0.39;0.35;0.38;0.35;0.38;0.35;0.14;0.38;0.35;0.38;0.35;0.38;0.20;0.18;0.13;0.18;0.13;0.18;0.13;0.18;0.13;0.03;0.03
getBorderInsets,32,0.53125,Description copied from class:AbstractBorder,";javax.swing.border.AbstractBorder.getBorderInsets(Component);javax.swing.border.AbstractBorder.getBorderInsets(Component,Insets);javax.swing.border.BevelBorder.getBorderInsets(Component,Insets);javax.swing.border.CompoundBorder.getBorderInsets(Component,Insets);javax.swing.border.EmptyBorder.getBorderInsets(Component,Insets);javax.swing.border.EmptyBorder.getBorderInsets();javax.swing.border.EtchedBorder.getBorderInsets(Component,Insets);javax.swing.border.LineBorder.getBorderInsets(Component,Insets);javax.swing.border.MatteBorder.getBorderInsets(Component,Insets);javax.swing.border.MatteBorder.getBorderInsets();javax.swing.border.SoftBevelBorder.getBorderInsets(Component,Insets);javax.swing.border.StrokeBorder.getBorderInsets(Component,Insets);javax.swing.border.TitledBorder.getBorderInsets(Component,Insets);javax.swing.plaf.BorderUIResource.getBorderInsets(Component);javax.swing.plaf.basic.BasicBorders.ButtonBorder.getBorderInsets(Component,Insets);javax.swing.plaf.basic.BasicBorders.FieldBorder.getBorderInsets(Component,Insets);javax.swing.plaf.basic.BasicBorders.MarginBorder.getBorderInsets(Component,Insets);javax.swing.plaf.basic.BasicBorders.MenuBarBorder.getBorderInsets(Component,Insets);javax.swing.plaf.basic.BasicBorders.RadioButtonBorder.getBorderInsets(Component,Insets);javax.swing.plaf.basic.BasicBorders.SplitPaneBorder.getBorderInsets(Component);javax.swing.plaf.basic.BasicBorders.ToggleButtonBorder.getBorderInsets(Component,Insets);javax.swing.plaf.metal.MetalBorders.ButtonBorder.getBorderInsets(Component,Insets);javax.swing.plaf.metal.MetalBorders.Flush3DBorder.getBorderInsets(Component,Insets);javax.swing.plaf.metal.MetalBorders.InternalFrameBorder.getBorderInsets(Component,Insets);javax.swing.plaf.metal.MetalBorders.MenuBarBorder.getBorderInsets(Component,Insets);javax.swing.plaf.metal.MetalBorders.MenuItemBorder.getBorderInsets(Component,Insets);javax.swing.plaf.metal.MetalBorders.OptionDialogBorder.getBorderInsets(Component,Insets);javax.swing.plaf.metal.MetalBorders.PaletteBorder.getBorderInsets(Component,Insets);javax.swing.plaf.metal.MetalBorders.PopupMenuBorder.getBorderInsets(Component,Insets);javax.swing.plaf.metal.MetalBorders.ScrollPaneBorder.getBorderInsets(Component,Insets);javax.swing.plaf.metal.MetalBorders.TableHeaderBorder.getBorderInsets(Component,Insets);javax.swing.plaf.metal.MetalBorders.ToolBarBorder.getBorderInsets(Component,Insets)",;0.03;0.25;0.28;0.28;0.28;0.06;0.28;0.28;0.28;0.06;0.28;0.06;0.28;0.06;0.53;0.53;0.53;0.53;0.53;0.06;0.53;0.53;0.53;0.53;0.53;0.53;0.53;0.53;0.53;0.53;0.53;0.53
getHeight,32,0.360389563,Returns the height of the framing rectangle in double precision.,;java.awt.Component.getHeight();java.awt.Dimension.getHeight();java.awt.DisplayMode.getHeight();java.awt.FontMetrics.getHeight();java.awt.Image.getHeight(ImageObserver);java.awt.Rectangle.getHeight();java.awt.font.LineMetrics.getHeight();java.awt.geom.Arc2D.Double.getHeight();java.awt.geom.Arc2D.Float.getHeight();java.awt.geom.Dimension2D.getHeight();java.awt.geom.Ellipse2D.Double.getHeight();java.awt.geom.Ellipse2D.Float.getHeight();java.awt.geom.Rectangle2D.Double.getHeight();java.awt.geom.Rectangle2D.Float.getHeight();java.awt.geom.RectangularShape.getHeight();java.awt.geom.RoundRectangle2D.Double.getHeight();java.awt.geom.RoundRectangle2D.Float.getHeight();java.awt.image.BufferedImage.getHeight();java.awt.image.BufferedImage.getHeight(ImageObserver);java.awt.image.Kernel.getHeight();java.awt.image.PixelGrabber.getHeight();java.awt.image.Raster.getHeight();java.awt.image.SampleModel.getHeight();java.awt.image.VolatileImage.getHeight();java.awt.image.renderable.RenderableImageOp.getHeight();java.awt.print.PageFormat.getHeight();java.awt.print.Paper.getHeight();javax.imageio.ImageReader.getHeight(int);javax.print.attribute.standard.MediaPrintableArea.getHeight(int);javax.swing.JComponent.getHeight();javax.swing.SpringLayout.Constraints.getHeight();javax.swing.text.BoxView.getHeight(),;0.07;0.23;0.24;0.03;0.09;0.26;0.13;0.21;0.21;0.23;0.36;0.36;0.36;0.36;0.36;0.36;0.36;0.26;0.26;0.19;0.07;0.05;0.05;0.25;0.03;0.05;0.21;0.04;0.14;0.07;0.03;0.04
getUI,32,0.521781397,Returns the L&amp;F object that renders this component.,";javax.print.ServiceUIFactory.getUI(int,String);javax.swing.AbstractButton.getUI();javax.swing.JColorChooser.getUI();javax.swing.JComboBox.getUI();javax.swing.JDesktopPane.getUI();javax.swing.JFileChooser.getUI();javax.swing.JInternalFrame.getUI();javax.swing.JInternalFrame.JDesktopIcon.getUI();javax.swing.JLabel.getUI();javax.swing.JLayer.getUI();javax.swing.JList.getUI();javax.swing.JMenuBar.getUI();javax.swing.JOptionPane.getUI();javax.swing.JPanel.getUI();javax.swing.JPopupMenu.getUI();javax.swing.JProgressBar.getUI();javax.swing.JRootPane.getUI();javax.swing.JScrollBar.getUI();javax.swing.JScrollPane.getUI();javax.swing.JSeparator.getUI();javax.swing.JSlider.getUI();javax.swing.JSpinner.getUI();javax.swing.JSplitPane.getUI();javax.swing.JTabbedPane.getUI();javax.swing.JTable.getUI();javax.swing.JToolBar.getUI();javax.swing.JToolTip.getUI();javax.swing.JTree.getUI();javax.swing.JViewport.getUI();javax.swing.UIManager.getUI(JComponent);javax.swing.table.JTableHeader.getUI();javax.swing.text.JTextComponent.getUI()",;0.03;0.52;0.52;0.52;0.52;0.20;0.37;0.37;0.52;0.03;0.32;0.03;0.21;0.38;0.44;0.37;0.52;0.11;0.44;0.52;0.20;0.44;0.03;0.21;0.52;0.03;0.52;0.52;0.52;0.03;0.44;0.03
print,32,0.429978667,The print method in Java is used to output text or values to the console or other output streams.,";java.awt.Component.print(Graphics);java.awt.Container.print(Graphics);java.awt.Desktop.print(File);java.awt.print.PrinterJob.print();java.awt.print.PrinterJob.print(PrintRequestAttributeSet);java.io.PrintStream.print(boolean);java.io.PrintStream.print(char);java.io.PrintStream.print(int);java.io.PrintStream.print(long);java.io.PrintStream.print(float);java.io.PrintStream.print(double);java.io.PrintStream.print(char[]);java.io.PrintStream.print(String);java.io.PrintStream.print(Object);java.io.PrintWriter.print(boolean);java.io.PrintWriter.print(char);java.io.PrintWriter.print(int);java.io.PrintWriter.print(long);java.io.PrintWriter.print(float);java.io.PrintWriter.print(double);java.io.PrintWriter.print(char[]);java.io.PrintWriter.print(String);java.io.PrintWriter.print(Object);javax.swing.JComponent.print(Graphics);javax.swing.JTable.print();javax.swing.JTable.print(JTable.PrintMode);javax.swing.JTable.print(JTable.PrintMode,MessageFormat,MessageFormat);javax.swing.JTable.print(JTable.PrintMode,MessageFormat,MessageFormat,boolean,PrintRequestAttributeSet,boolean);javax.swing.JTable.print(JTable.PrintMode,MessageFormat,MessageFormat,boolean,PrintRequestAttributeSet,boolean,PrintService);javax.swing.text.JTextComponent.print();javax.swing.text.JTextComponent.print(MessageFormat,MessageFormat);javax.swing.text.JTextComponent.print(MessageFormat,MessageFormat,boolean,PrintService,PrintRequestAttributeSet,boolean)",;0.03;0.03;0.03;0.03;0.03;0.43;0.38;0.43;0.43;0.43;0.41;0.38;0.33;0.41;0.43;0.38;0.43;0.43;0.43;0.41;0.38;0.33;0.41;0.03;0.10;0.11;0.10;0.03;0.04;0.09;0.09;0.05
getAccessibleChild,34,0.882352941,Invokes the getAccessibleChild method on each UI handled by this object.,";javax.accessibility.AccessibleContext.getAccessibleChild(int);javax.swing.SwingUtilities.getAccessibleChild(Component,int);javax.swing.plaf.ComponentUI.getAccessibleChild(JComponent,int);javax.swing.plaf.basic.BasicComboBoxUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiButtonUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiColorChooserUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiComboBoxUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiDesktopIconUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiDesktopPaneUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiFileChooserUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiInternalFrameUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiLabelUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiListUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiMenuBarUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiMenuItemUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiOptionPaneUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiPanelUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiPopupMenuUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiProgressBarUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiRootPaneUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiScrollBarUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiScrollPaneUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiSeparatorUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiSliderUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiSpinnerUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiSplitPaneUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiTabbedPaneUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiTableHeaderUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiTableUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiTextUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiToolBarUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiToolTipUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiTreeUI.getAccessibleChild(JComponent,int);javax.swing.plaf.multi.MultiViewportUI.getAccessibleChild(JComponent,int)",;0.03;0.04;0.04;0.03;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88
getAccessibleChildrenCount,34,0.882352941,Invokes the getAccessibleChildrenCount method on each UI handled by this object.,;javax.accessibility.AccessibleContext.getAccessibleChildrenCount();javax.swing.SwingUtilities.getAccessibleChildrenCount(Component);javax.swing.plaf.ComponentUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.basic.BasicComboBoxUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiButtonUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiColorChooserUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiComboBoxUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiDesktopIconUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiDesktopPaneUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiFileChooserUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiInternalFrameUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiLabelUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiListUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiMenuBarUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiMenuItemUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiOptionPaneUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiPanelUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiPopupMenuUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiProgressBarUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiRootPaneUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiScrollBarUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiScrollPaneUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiSeparatorUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiSliderUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiSpinnerUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiSplitPaneUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiTabbedPaneUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiTableHeaderUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiTableUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiTextUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiToolBarUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiToolTipUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiTreeUI.getAccessibleChildrenCount(JComponent);javax.swing.plaf.multi.MultiViewportUI.getAccessibleChildrenCount(JComponent),;0.03;0.05;0.05;0.03;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88;0.88
getContext,34,0.941176471,Returns the Context for the specified component.,;java.security.AccessController.getContext();javax.script.AbstractScriptEngine.getContext();javax.swing.plaf.synth.SynthButtonUI.getContext(JComponent);javax.swing.plaf.synth.SynthColorChooserUI.getContext(JComponent);javax.swing.plaf.synth.SynthComboBoxUI.getContext(JComponent);javax.swing.plaf.synth.SynthDesktopIconUI.getContext(JComponent);javax.swing.plaf.synth.SynthDesktopPaneUI.getContext(JComponent);javax.swing.plaf.synth.SynthEditorPaneUI.getContext(JComponent);javax.swing.plaf.synth.SynthInternalFrameUI.getContext(JComponent);javax.swing.plaf.synth.SynthLabelUI.getContext(JComponent);javax.swing.plaf.synth.SynthListUI.getContext(JComponent);javax.swing.plaf.synth.SynthMenuBarUI.getContext(JComponent);javax.swing.plaf.synth.SynthMenuItemUI.getContext(JComponent);javax.swing.plaf.synth.SynthMenuUI.getContext(JComponent);javax.swing.plaf.synth.SynthOptionPaneUI.getContext(JComponent);javax.swing.plaf.synth.SynthPanelUI.getContext(JComponent);javax.swing.plaf.synth.SynthPopupMenuUI.getContext(JComponent);javax.swing.plaf.synth.SynthProgressBarUI.getContext(JComponent);javax.swing.plaf.synth.SynthRootPaneUI.getContext(JComponent);javax.swing.plaf.synth.SynthScrollBarUI.getContext(JComponent);javax.swing.plaf.synth.SynthScrollPaneUI.getContext(JComponent);javax.swing.plaf.synth.SynthSeparatorUI.getContext(JComponent);javax.swing.plaf.synth.SynthSliderUI.getContext(JComponent);javax.swing.plaf.synth.SynthSpinnerUI.getContext(JComponent);javax.swing.plaf.synth.SynthSplitPaneUI.getContext(JComponent);javax.swing.plaf.synth.SynthTabbedPaneUI.getContext(JComponent);javax.swing.plaf.synth.SynthTableHeaderUI.getContext(JComponent);javax.swing.plaf.synth.SynthTableUI.getContext(JComponent);javax.swing.plaf.synth.SynthTextAreaUI.getContext(JComponent);javax.swing.plaf.synth.SynthTextFieldUI.getContext(JComponent);javax.swing.plaf.synth.SynthToolBarUI.getContext(JComponent);javax.swing.plaf.synth.SynthToolTipUI.getContext(JComponent);javax.swing.plaf.synth.SynthTreeUI.getContext(JComponent);javax.swing.plaf.synth.SynthViewportUI.getContext(JComponent),;0.03;0.03;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94;0.94
insert,34,0.43682918,The insert method in Java is used to insert a specified element at a specified position in an array or a string.,";java.awt.Choice.insert(String,int);java.awt.Menu.insert(MenuItem,int);java.awt.Menu.insert(String,int);java.awt.TextArea.insert(String,int);java.lang.StringBuffer.insert(int,char[],int,int);java.lang.StringBuffer.insert(int,Object);java.lang.StringBuffer.insert(int,char[]);java.lang.StringBuffer.insert(int,CharSequence);java.lang.StringBuffer.insert(int,boolean);java.lang.StringBuffer.insert(int,char);java.lang.StringBuffer.insert(int,int);java.lang.StringBuffer.insert(int,long);java.lang.StringBuffer.insert(int,float);java.lang.StringBuffer.insert(int,double);java.lang.StringBuilder.insert(int,char[],int,int);java.lang.StringBuilder.insert(int,Object);java.lang.StringBuilder.insert(int,char[]);java.lang.StringBuilder.insert(int,CharSequence);java.lang.StringBuilder.insert(int,boolean);java.lang.StringBuilder.insert(int,char);java.lang.StringBuilder.insert(int,int);java.lang.StringBuilder.insert(int,long);java.lang.StringBuilder.insert(int,float);java.lang.StringBuilder.insert(int,double);javax.swing.JMenu.insert(String,int);javax.swing.JMenu.insert(JMenuItem,int);javax.swing.JMenu.insert(Action,int);javax.swing.JPopupMenu.insert(Action,int);javax.swing.JPopupMenu.insert(Component,int);javax.swing.JTextArea.insert(String,int);javax.swing.text.DefaultStyledDocument.insert(int,DefaultStyledDocument.ElementSpec[]);javax.swing.text.View.insert(int,View);javax.swing.text.html.HTMLDocument.insert(int,DefaultStyledDocument.ElementSpec[]);javax.swing.tree.DefaultMutableTreeNode.insert(MutableTreeNode,int)",;0.08;0.05;0.06;0.05;0.15;0.42;0.34;0.15;0.44;0.42;0.43;0.44;0.44;0.44;0.15;0.42;0.34;0.15;0.44;0.42;0.43;0.44;0.44;0.44;0.08;0.06;0.07;0.08;0.06;0.05;0.03;0.03;0.03;0.03
getAttributes,35,0.190713178,The getAttributes method in Java is used to retrieve the attributes of a file or directory.,";java.awt.Font.getAttributes();java.net.JarURLConnection.getAttributes();java.security.KeyStore.PrivateKeyEntry.getAttributes();java.security.KeyStore.SecretKeyEntry.getAttributes();java.security.KeyStore.TrustedCertificateEntry.getAttributes();java.util.jar.JarEntry.getAttributes();java.util.jar.Manifest.getAttributes(String);javax.imageio.metadata.IIOMetadataNode.getAttributes();javax.management.MBeanInfo.getAttributes();javax.management.StandardMBean.getAttributes(String[]);javax.management.loading.MLetContent.getAttributes();javax.management.modelmbean.RequiredModelMBean.getAttributes(String[]);javax.management.remote.rmi.RMIConnectionImpl.getAttributes(ObjectName,String[],Subject);javax.management.remote.rmi.RMIConnectionImpl_Stub.getAttributes(ObjectName,String[],Subject);javax.management.remote.rmi.RMIConnectorServer.getAttributes();javax.naming.directory.InitialDirContext.getAttributes(String);javax.naming.directory.InitialDirContext.getAttributes(String,String[]);javax.naming.directory.InitialDirContext.getAttributes(Name);javax.naming.directory.InitialDirContext.getAttributes(Name,String[]);javax.naming.directory.SearchResult.getAttributes();javax.naming.spi.DirStateFactory.Result.getAttributes();javax.print.SimpleDoc.getAttributes();javax.print.event.PrintJobAttributeEvent.getAttributes();javax.print.event.PrintServiceAttributeEvent.getAttributes();javax.sql.rowset.serial.SerialStruct.getAttributes();javax.sql.rowset.serial.SerialStruct.getAttributes(Map&lt;String,Class&lt;?&gt;&gt;);javax.swing.text.DefaultStyledDocument.ElementSpec.getAttributes();javax.swing.text.View.getAttributes();javax.swing.text.html.BlockView.getAttributes();javax.swing.text.html.HTMLDocument.Iterator.getAttributes();javax.swing.text.html.ImageView.getAttributes();javax.swing.text.html.InlineView.getAttributes();javax.swing.text.html.Option.getAttributes();javax.swing.text.html.ParagraphView.getAttributes();javax.swing.text.html.parser.Element.getAttributes()",;0.03;0.03;0.10;0.10;0.10;0.03;0.03;0.03;0.03;0.16;0.03;0.03;0.17;0.17;0.16;0.19;0.19;0.19;0.19;0.03;0.03;0.03;0.05;0.05;0.04;0.04;0.03;0.04;0.11;0.03;0.11;0.11;0.06;0.11;0.00
newInstance,35,0.167762287,"The purpose of the newInstance method in Java is to create a new instance of a class at runtime, without having to explicitly call the class constructor.",";java.lang.Class.newInstance();java.lang.reflect.Array.newInstance(Class&lt;?&gt;,int);java.lang.reflect.Array.newInstance(Class&lt;?&gt;,int...);java.lang.reflect.Constructor.newInstance(Object...);java.net.URLClassLoader.newInstance(URL[],ClassLoader);java.net.URLClassLoader.newInstance(URL[]);java.rmi.activation.ActivationGroup_Stub.newInstance(ActivationID,ActivationDesc);java.security.KeyStore.Builder.newInstance(KeyStore,KeyStore.ProtectionParameter);java.security.KeyStore.Builder.newInstance(String,Provider,File,KeyStore.ProtectionParameter);java.security.KeyStore.Builder.newInstance(String,Provider,KeyStore.ProtectionParameter);java.security.Provider.Service.newInstance(Object);javax.naming.ldap.InitialLdapContext.newInstance(Control[]);javax.xml.bind.JAXBContext.newInstance(String);javax.xml.bind.JAXBContext.newInstance(String,ClassLoader,Map&lt;String,?&gt;);javax.xml.bind.JAXBContext.newInstance(Class...);javax.xml.bind.JAXBContext.newInstance(Class[],Map&lt;String,?&gt;);javax.xml.datatype.DatatypeFactory.newInstance();javax.xml.datatype.DatatypeFactory.newInstance(String,ClassLoader);javax.xml.parsers.DocumentBuilderFactory.newInstance(String,ClassLoader);javax.xml.parsers.SAXParserFactory.newInstance(String,ClassLoader);javax.xml.soap.MessageFactory.newInstance(String);javax.xml.soap.SOAPConnectionFactory.newInstance();javax.xml.soap.SOAPElementFactory.newInstance();javax.xml.soap.SOAPFactory.newInstance(String);javax.xml.stream.XMLEventFactory.newInstance();javax.xml.stream.XMLEventFactory.newInstance(String,ClassLoader);javax.xml.stream.XMLInputFactory.newInstance();javax.xml.stream.XMLInputFactory.newInstance(String,ClassLoader);javax.xml.stream.XMLOutputFactory.newInstance();javax.xml.stream.XMLOutputFactory.newInstance(String,ClassLoader);javax.xml.transform.TransformerFactory.newInstance(String,ClassLoader);javax.xml.validation.SchemaFactory.newInstance(String,String,ClassLoader);javax.xml.xpath.XPathFactory.newInstance();javax.xml.xpath.XPathFactory.newInstance(String,String,ClassLoader);org.w3c.dom.bootstrap.DOMImplementationRegistry.newInstance()",;0.05;0.03;0.04;0.05;0.08;0.08;0.03;0.03;0.04;0.04;0.05;0.03;0.06;0.07;0.05;0.07;0.05;0.17;0.17;0.17;0.04;0.03;0.00;0.04;0.10;0.07;0.10;0.07;0.10;0.05;0.17;0.16;0.03;0.16;0.06
format,40,0.187038873,The purpose of the format method in Java is to format a string by replacing placeholders with specified values.,";java.io.Console.format(String,Object...);java.io.PrintStream.format(String,Object...);java.io.PrintStream.format(Locale,String,Object...);java.io.PrintWriter.format(String,Object...);java.io.PrintWriter.format(Locale,String,Object...);java.lang.String.format(String,Object...);java.lang.String.format(Locale,String,Object...);java.text.ChoiceFormat.format(long,StringBuffer,FieldPosition);java.text.ChoiceFormat.format(double,StringBuffer,FieldPosition);java.text.DateFormat.format(Object,StringBuffer,FieldPosition);java.text.DateFormat.format(Date,StringBuffer,FieldPosition);java.text.DateFormat.format(Date);java.text.DecimalFormat.format(Object,StringBuffer,FieldPosition);java.text.DecimalFormat.format(double,StringBuffer,FieldPosition);java.text.DecimalFormat.format(long,StringBuffer,FieldPosition);java.text.Format.format(Object);java.text.Format.format(Object,StringBuffer,FieldPosition);java.text.MessageFormat.format(Object[],StringBuffer,FieldPosition);java.text.MessageFormat.format(String,Object...);java.text.MessageFormat.format(Object,StringBuffer,FieldPosition);java.text.NumberFormat.format(Object,StringBuffer,FieldPosition);java.text.NumberFormat.format(double);java.text.NumberFormat.format(long);java.text.NumberFormat.format(double,StringBuffer,FieldPosition);java.text.NumberFormat.format(long,StringBuffer,FieldPosition);java.text.SimpleDateFormat.format(Date,StringBuffer,FieldPosition);java.time.LocalDate.format(DateTimeFormatter);java.time.LocalDateTime.format(DateTimeFormatter);java.time.LocalTime.format(DateTimeFormatter);java.time.MonthDay.format(DateTimeFormatter);java.time.OffsetDateTime.format(DateTimeFormatter);java.time.OffsetTime.format(DateTimeFormatter);java.time.Year.format(DateTimeFormatter);java.time.YearMonth.format(DateTimeFormatter);java.time.ZonedDateTime.format(DateTimeFormatter);java.time.format.DateTimeFormatter.format(TemporalAccessor);java.util.Formatter.format(String,Object...);java.util.Formatter.format(Locale,String,Object...);java.util.logging.Formatter.format(LogRecord);java.util.logging.XMLFormatter.format(LogRecord)",;0.10;0.10;0.09;0.09;0.09;0.09;0.07;0.03;0.03;0.03;0.06;0.06;0.03;0.05;0.05;0.07;0.03;0.03;0.03;0.03;0.03;0.00;0.00;0.00;0.00;0.04;0.17;0.19;0.18;0.16;0.19;0.18;0.17;0.16;0.19;0.03;0.09;0.09;0.03;0.03
now,41,0.588210158,Obtains the current date from the system clock in the specified time-zone. This will query the system clock to obtain the current date. Specifying the time-zone avoids dependence on the default time-zone. Using this method will prevent the ability to use an alternate clock for testing because the clock is hard-coded.,;java.time.Instant.now();java.time.Instant.now(Clock);java.time.LocalDate.now();java.time.LocalDate.now(ZoneId);java.time.LocalDate.now(Clock);java.time.LocalDateTime.now();java.time.LocalDateTime.now(ZoneId);java.time.LocalDateTime.now(Clock);java.time.LocalTime.now();java.time.LocalTime.now(ZoneId);java.time.LocalTime.now(Clock);java.time.MonthDay.now();java.time.MonthDay.now(ZoneId);java.time.MonthDay.now(Clock);java.time.OffsetDateTime.now();java.time.OffsetDateTime.now(ZoneId);java.time.OffsetDateTime.now(Clock);java.time.OffsetTime.now();java.time.OffsetTime.now(ZoneId);java.time.OffsetTime.now(Clock);java.time.Year.now();java.time.Year.now(ZoneId);java.time.Year.now(Clock);java.time.YearMonth.now();java.time.YearMonth.now(ZoneId);java.time.YearMonth.now(Clock);java.time.ZonedDateTime.now();java.time.ZonedDateTime.now(ZoneId);java.time.ZonedDateTime.now(Clock);java.time.chrono.HijrahDate.now();java.time.chrono.HijrahDate.now(ZoneId);java.time.chrono.HijrahDate.now(Clock);java.time.chrono.JapaneseDate.now();java.time.chrono.JapaneseDate.now(ZoneId);java.time.chrono.JapaneseDate.now(Clock);java.time.chrono.MinguoDate.now();java.time.chrono.MinguoDate.now(ZoneId);java.time.chrono.MinguoDate.now(Clock);java.time.chrono.ThaiBuddhistDate.now();java.time.chrono.ThaiBuddhistDate.now(ZoneId);java.time.chrono.ThaiBuddhistDate.now(Clock),;0.39;0.42;0.57;0.59;0.43;0.58;0.59;0.44;0.57;0.58;0.43;0.55;0.56;0.41;0.54;0.54;0.44;0.53;0.53;0.43;0.56;0.57;0.42;0.55;0.56;0.42;0.51;0.54;0.42;0.53;0.53;0.41;0.57;0.58;0.43;0.57;0.58;0.43;0.57;0.58;0.43
spliterator,41,0.248792082,"The spliterator method in Java is used to create a Spliterator over the elements in a collection or array, which can be used for parallel processing and iteration.",";java.util.ArrayDeque.spliterator();java.util.ArrayList.spliterator();java.util.Arrays.spliterator(T[]);java.util.Arrays.spliterator(T[],int,int);java.util.Arrays.spliterator(int[]);java.util.Arrays.spliterator(int[],int,int);java.util.Arrays.spliterator(long[]);java.util.Arrays.spliterator(long[],int,int);java.util.Arrays.spliterator(double[]);java.util.Arrays.spliterator(double[],int,int);java.util.HashSet.spliterator();java.util.LinkedHashSet.spliterator();java.util.LinkedList.spliterator();java.util.PriorityQueue.spliterator();java.util.Spliterators.spliterator(Object[],int);java.util.Spliterators.spliterator(Object[],int,int,int);java.util.Spliterators.spliterator(int[],int);java.util.Spliterators.spliterator(int[],int,int,int);java.util.Spliterators.spliterator(long[],int);java.util.Spliterators.spliterator(long[],int,int,int);java.util.Spliterators.spliterator(double[],int);java.util.Spliterators.spliterator(double[],int,int,int);java.util.Spliterators.spliterator(Collection&lt;?,int);java.util.Spliterators.spliterator(Iterator&lt;?,long,int);java.util.Spliterators.spliterator(PrimitiveIterator.OfInt,long,int);java.util.Spliterators.spliterator(PrimitiveIterator.OfLong,long,int);java.util.Spliterators.spliterator(PrimitiveIterator.OfDouble,long,int);java.util.TreeSet.spliterator();java.util.Vector.spliterator();java.util.concurrent.ArrayBlockingQueue.spliterator();java.util.concurrent.ConcurrentHashMap.KeySetView.spliterator();java.util.concurrent.ConcurrentLinkedDeque.spliterator();java.util.concurrent.ConcurrentLinkedQueue.spliterator();java.util.concurrent.ConcurrentSkipListSet.spliterator();java.util.concurrent.CopyOnWriteArrayList.spliterator();java.util.concurrent.CopyOnWriteArraySet.spliterator();java.util.concurrent.LinkedBlockingDeque.spliterator();java.util.concurrent.LinkedBlockingQueue.spliterator();java.util.concurrent.LinkedTransferQueue.spliterator();java.util.concurrent.PriorityBlockingQueue.spliterator();java.util.concurrent.SynchronousQueue.spliterator()",;0.25;0.23;0.20;0.21;0.20;0.20;0.20;0.20;0.20;0.20;0.20;0.20;0.20;0.23;0.16;0.16;0.17;0.16;0.17;0.13;0.17;0.13;0.05;0.10;0.10;0.10;0.10;0.14;0.23;0.25;0.02;0.24;0.25;0.12;0.13;0.11;0.24;0.25;0.25;0.19;0.02
updateUI,41,0.49124861,Resets the UI property to a value from the current look and feel.,;javax.swing.AbstractButton.updateUI();javax.swing.JButton.updateUI();javax.swing.JCheckBox.updateUI();javax.swing.JColorChooser.updateUI();javax.swing.JComboBox.updateUI();javax.swing.JComponent.updateUI();javax.swing.JDesktopPane.updateUI();javax.swing.JFileChooser.updateUI();javax.swing.JInternalFrame.updateUI();javax.swing.JInternalFrame.JDesktopIcon.updateUI();javax.swing.JLabel.updateUI();javax.swing.JLayer.updateUI();javax.swing.JList.updateUI();javax.swing.JMenu.updateUI();javax.swing.JMenuBar.updateUI();javax.swing.JMenuItem.updateUI();javax.swing.JOptionPane.updateUI();javax.swing.JPanel.updateUI();javax.swing.JPasswordField.updateUI();javax.swing.JPopupMenu.updateUI();javax.swing.JProgressBar.updateUI();javax.swing.JRadioButton.updateUI();javax.swing.JRootPane.updateUI();javax.swing.JScrollBar.updateUI();javax.swing.JScrollPane.updateUI();javax.swing.JSeparator.updateUI();javax.swing.JSlider.updateUI();javax.swing.JSpinner.updateUI();javax.swing.JSplitPane.updateUI();javax.swing.JTabbedPane.updateUI();javax.swing.JTable.updateUI();javax.swing.JToggleButton.updateUI();javax.swing.JToolBar.updateUI();javax.swing.JToolTip.updateUI();javax.swing.JTree.updateUI();javax.swing.JViewport.updateUI();javax.swing.plaf.LayerUI.updateUI(JLayer&lt;?);javax.swing.table.DefaultTableCellRenderer.updateUI();javax.swing.table.JTableHeader.updateUI();javax.swing.text.JTextComponent.updateUI();javax.swing.tree.DefaultTreeCellRenderer.updateUI(),;0.17;0.49;0.49;0.24;0.49;0.23;0.24;0.49;0.21;0.21;0.49;0.02;0.08;0.42;0.42;0.42;0.24;0.42;0.05;0.49;0.49;0.49;0.49;0.00;0.02;0.49;0.49;0.37;0.24;0.49;0.24;0.49;0.14;0.49;0.24;0.49;0.02;0.22;0.22;0.05;0.49
addAll,42,0.225159316,"Inserts all of the elements in the specified collection into this list, starting at the specified position. Shifts the element currently at that position (if any) and any subsequent elements to the right (increases their indices). The new elements will appear in the list in the order that they are returned by the specified collection's iterator.",";java.beans.beancontext.BeanContextSupport.addAll(Collection);java.util.AbstractCollection.addAll(Collection&lt;?);java.util.AbstractList.addAll(int,Collection&lt;?);java.util.AbstractQueue.addAll(Collection&lt;?);java.util.AbstractSequentialList.addAll(int,Collection&lt;?);java.util.ArrayList.addAll(Collection&lt;?);java.util.ArrayList.addAll(int,Collection&lt;?);java.util.Collections.addAll(Collection&lt;?,T...);java.util.LinkedList.addAll(Collection&lt;?);java.util.LinkedList.addAll(int,Collection&lt;?);java.util.TreeSet.addAll(Collection&lt;?);java.util.Vector.addAll(Collection&lt;?);java.util.Vector.addAll(int,Collection&lt;?);java.util.concurrent.ConcurrentHashMap.KeySetView.addAll(Collection&lt;?);java.util.concurrent.ConcurrentLinkedDeque.addAll(Collection&lt;?);java.util.concurrent.ConcurrentLinkedQueue.addAll(Collection&lt;?);java.util.concurrent.CopyOnWriteArrayList.addAll(Collection&lt;?);java.util.concurrent.CopyOnWriteArrayList.addAll(int,Collection&lt;?);java.util.concurrent.CopyOnWriteArraySet.addAll(Collection&lt;?);javax.accessibility.AccessibleRelationSet.addAll(AccessibleRelation[]);javax.accessibility.AccessibleStateSet.addAll(AccessibleState[]);javax.management.AttributeList.addAll(AttributeList);javax.management.AttributeList.addAll(int,AttributeList);javax.management.AttributeList.addAll(Collection&lt;?&gt;);javax.management.AttributeList.addAll(int,Collection&lt;?&gt;);javax.management.relation.RoleList.addAll(RoleList);javax.management.relation.RoleList.addAll(int,RoleList);javax.management.relation.RoleList.addAll(Collection&lt;?&gt;);javax.management.relation.RoleList.addAll(int,Collection&lt;?&gt;);javax.management.relation.RoleUnresolvedList.addAll(RoleUnresolvedList);javax.management.relation.RoleUnresolvedList.addAll(int,RoleUnresolvedList);javax.management.relation.RoleUnresolvedList.addAll(Collection&lt;?&gt;);javax.management.relation.RoleUnresolvedList.addAll(int,Collection&lt;?&gt;);javax.naming.CompositeName.addAll(Name);javax.naming.CompositeName.addAll(int,Name);javax.naming.CompoundName.addAll(Name);javax.naming.CompoundName.addAll(int,Name);javax.naming.ldap.LdapName.addAll(Name);javax.naming.ldap.LdapName.addAll(List&lt;Rdn&gt;);javax.naming.ldap.LdapName.addAll(int,Name);javax.naming.ldap.LdapName.addAll(int,List&lt;Rdn&gt;);javax.print.attribute.HashAttributeSet.addAll(AttributeSet)",;0.02;0.14;0.15;0.12;0.14;0.22;0.23;0.04;0.22;0.23;0.07;0.19;0.19;0.09;0.19;0.19;0.19;0.22;0.14;0.04;0.04;0.16;0.15;0.22;0.23;0.16;0.16;0.10;0.10;0.16;0.16;0.10;0.10;0.08;0.08;0.08;0.07;0.08;0.07;0.09;0.07;0.09
compareTo,42,0.118364469,The purpose of the compareTo method in Java is to compare two objects and return an integer value that indicates their relative order.,;java.io.File.compareTo(File);java.io.ObjectStreamField.compareTo(Object);java.lang.Boolean.compareTo(Boolean);java.lang.Byte.compareTo(Byte);java.lang.Character.compareTo(Character);java.lang.Enum.compareTo(E);java.lang.Integer.compareTo(Integer);java.lang.Long.compareTo(Long);java.lang.Short.compareTo(Short);java.lang.String.compareTo(String);java.math.BigDecimal.compareTo(BigDecimal);java.math.BigInteger.compareTo(BigInteger);java.nio.ByteBuffer.compareTo(ByteBuffer);java.nio.CharBuffer.compareTo(CharBuffer);java.nio.DoubleBuffer.compareTo(DoubleBuffer);java.nio.FloatBuffer.compareTo(FloatBuffer);java.nio.IntBuffer.compareTo(IntBuffer);java.nio.LongBuffer.compareTo(LongBuffer);java.nio.ShortBuffer.compareTo(ShortBuffer);java.nio.charset.Charset.compareTo(Charset);java.nio.file.attribute.FileTime.compareTo(FileTime);java.sql.Timestamp.compareTo(Timestamp);java.sql.Timestamp.compareTo(Date);java.text.CollationKey.compareTo(CollationKey);java.time.Duration.compareTo(Duration);java.time.Instant.compareTo(Instant);java.time.LocalDate.compareTo(ChronoLocalDate);java.time.LocalDateTime.compareTo(ChronoLocalDateTime&lt;?&gt;);java.time.LocalTime.compareTo(LocalTime);java.time.MonthDay.compareTo(MonthDay);java.time.Year.compareTo(Year);java.time.YearMonth.compareTo(YearMonth);java.time.ZoneOffset.compareTo(ZoneOffset);java.time.chrono.AbstractChronology.compareTo(Chronology);java.time.zone.ZoneOffsetTransition.compareTo(ZoneOffsetTransition);java.util.Calendar.compareTo(Calendar);java.util.Date.compareTo(Date);java.util.UUID.compareTo(UUID);javax.naming.CompositeName.compareTo(Object);javax.naming.CompoundName.compareTo(Object);javax.naming.ldap.LdapName.compareTo(Object);javax.naming.ldap.Rdn.compareTo(Object),;0.02;0.02;0.02;0.02;0.02;0.04;0.02;0.02;0.02;0.03;0.04;0.04;0.12;0.12;0.10;0.10;0.12;0.12;0.12;0.02;0.02;0.04;0.04;0.02;0.09;0.09;0.07;0.07;0.09;0.09;0.09;0.09;0.06;0.07;0.02;0.02;0.02;0.02;0.06;0.06;0.06;0.05
toArray,43,0.318703261,The toArray method in Java is used to convert a collection or list into an array.,;java.awt.dnd.DragGestureEvent.toArray();java.awt.dnd.DragGestureEvent.toArray(Object[]);java.beans.beancontext.BeanContextMembershipEvent.toArray();java.beans.beancontext.BeanContextSupport.toArray();java.beans.beancontext.BeanContextSupport.toArray(Object[]);java.util.AbstractCollection.toArray();java.util.AbstractCollection.toArray(T[]);java.util.ArrayDeque.toArray();java.util.ArrayDeque.toArray(T[]);java.util.ArrayList.toArray();java.util.ArrayList.toArray(T[]);java.util.LinkedList.toArray();java.util.LinkedList.toArray(T[]);java.util.PriorityQueue.toArray();java.util.PriorityQueue.toArray(T[]);java.util.Vector.toArray();java.util.Vector.toArray(T[]);java.util.concurrent.ArrayBlockingQueue.toArray();java.util.concurrent.ArrayBlockingQueue.toArray(T[]);java.util.concurrent.ConcurrentHashMap.KeySetView.toArray();java.util.concurrent.ConcurrentHashMap.KeySetView.toArray(T[]);java.util.concurrent.ConcurrentLinkedDeque.toArray();java.util.concurrent.ConcurrentLinkedDeque.toArray(T[]);java.util.concurrent.ConcurrentLinkedQueue.toArray();java.util.concurrent.ConcurrentLinkedQueue.toArray(T[]);java.util.concurrent.CopyOnWriteArrayList.toArray();java.util.concurrent.CopyOnWriteArrayList.toArray(T[]);java.util.concurrent.CopyOnWriteArraySet.toArray();java.util.concurrent.CopyOnWriteArraySet.toArray(T[]);java.util.concurrent.DelayQueue.toArray();java.util.concurrent.DelayQueue.toArray(T[]);java.util.concurrent.LinkedBlockingDeque.toArray();java.util.concurrent.LinkedBlockingDeque.toArray(T[]);java.util.concurrent.LinkedBlockingQueue.toArray();java.util.concurrent.LinkedBlockingQueue.toArray(T[]);java.util.concurrent.PriorityBlockingQueue.toArray();java.util.concurrent.PriorityBlockingQueue.toArray(T[]);java.util.concurrent.SynchronousQueue.toArray();java.util.concurrent.SynchronousQueue.toArray(T[]);javax.accessibility.AccessibleRelationSet.toArray();javax.accessibility.AccessibleStateSet.toArray();javax.print.attribute.HashAttributeSet.toArray();javax.swing.DefaultListModel.toArray(),;0.04;0.04;0.02;0.02;0.03;0.17;0.19;0.29;0.32;0.29;0.21;0.29;0.30;0.28;0.31;0.05;0.19;0.28;0.32;0.06;0.06;0.29;0.32;0.28;0.32;0.29;0.30;0.23;0.27;0.28;0.30;0.29;0.31;0.28;0.32;0.28;0.32;0.02;0.02;0.04;0.04;0.05;0.05
getUIClassID,44,0.626820249,Returns the name of the L&amp;F class that renders this component.,;javax.swing.JButton.getUIClassID();javax.swing.JCheckBox.getUIClassID();javax.swing.JCheckBoxMenuItem.getUIClassID();javax.swing.JColorChooser.getUIClassID();javax.swing.JComboBox.getUIClassID();javax.swing.JComponent.getUIClassID();javax.swing.JDesktopPane.getUIClassID();javax.swing.JEditorPane.getUIClassID();javax.swing.JFileChooser.getUIClassID();javax.swing.JFormattedTextField.getUIClassID();javax.swing.JInternalFrame.getUIClassID();javax.swing.JInternalFrame.JDesktopIcon.getUIClassID();javax.swing.JLabel.getUIClassID();javax.swing.JList.getUIClassID();javax.swing.JMenu.getUIClassID();javax.swing.JMenuBar.getUIClassID();javax.swing.JMenuItem.getUIClassID();javax.swing.JOptionPane.getUIClassID();javax.swing.JPanel.getUIClassID();javax.swing.JPasswordField.getUIClassID();javax.swing.JPopupMenu.getUIClassID();javax.swing.JPopupMenu.Separator.getUIClassID();javax.swing.JProgressBar.getUIClassID();javax.swing.JRadioButton.getUIClassID();javax.swing.JRadioButtonMenuItem.getUIClassID();javax.swing.JRootPane.getUIClassID();javax.swing.JScrollBar.getUIClassID();javax.swing.JScrollPane.getUIClassID();javax.swing.JSeparator.getUIClassID();javax.swing.JSlider.getUIClassID();javax.swing.JSpinner.getUIClassID();javax.swing.JSplitPane.getUIClassID();javax.swing.JTabbedPane.getUIClassID();javax.swing.JTable.getUIClassID();javax.swing.JTextArea.getUIClassID();javax.swing.JTextField.getUIClassID();javax.swing.JTextPane.getUIClassID();javax.swing.JToggleButton.getUIClassID();javax.swing.JToolBar.getUIClassID();javax.swing.JToolBar.Separator.getUIClassID();javax.swing.JToolTip.getUIClassID();javax.swing.JTree.getUIClassID();javax.swing.JViewport.getUIClassID();javax.swing.table.JTableHeader.getUIClassID(),;0.54;0.54;0.63;0.63;0.63;0.08;0.63;0.09;0.54;0.08;0.42;0.42;0.36;0.14;0.63;0.63;0.37;0.34;0.54;0.63;0.63;0.63;0.42;0.63;0.63;0.54;0.25;0.37;0.63;0.63;0.28;0.63;0.34;0.37;0.08;0.08;0.08;0.36;0.63;0.63;0.63;0.63;0.54;0.28
init,44,0.187623529,The purpose of the init method in Java is to initialize an object after it has been created.,";java.applet.Applet.init();java.security.AlgorithmParameterGenerator.init(int);java.security.AlgorithmParameterGenerator.init(int,SecureRandom);java.security.AlgorithmParameterGenerator.init(AlgorithmParameterSpec);java.security.AlgorithmParameterGenerator.init(AlgorithmParameterSpec,SecureRandom);java.security.AlgorithmParameters.init(AlgorithmParameterSpec);java.security.AlgorithmParameters.init(byte[]);java.security.AlgorithmParameters.init(byte[],String);java.security.cert.PKIXCertPathChecker.init(boolean);javax.annotation.processing.AbstractProcessor.init(ProcessingEnvironment);javax.crypto.Cipher.init(int,Key);javax.crypto.Cipher.init(int,Key,SecureRandom);javax.crypto.Cipher.init(int,Key,AlgorithmParameterSpec);javax.crypto.Cipher.init(int,Key,AlgorithmParameterSpec,SecureRandom);javax.crypto.Cipher.init(int,Key,AlgorithmParameters);javax.crypto.Cipher.init(int,Key,AlgorithmParameters,SecureRandom);javax.crypto.Cipher.init(int,Certificate);javax.crypto.Cipher.init(int,Certificate,SecureRandom);javax.crypto.ExemptionMechanism.init(Key);javax.crypto.ExemptionMechanism.init(Key,AlgorithmParameterSpec);javax.crypto.ExemptionMechanism.init(Key,AlgorithmParameters);javax.crypto.KeyAgreement.init(Key);javax.crypto.KeyAgreement.init(Key,SecureRandom);javax.crypto.KeyAgreement.init(Key,AlgorithmParameterSpec);javax.crypto.KeyAgreement.init(Key,AlgorithmParameterSpec,SecureRandom);javax.crypto.KeyGenerator.init(SecureRandom);javax.crypto.KeyGenerator.init(AlgorithmParameterSpec);javax.crypto.KeyGenerator.init(AlgorithmParameterSpec,SecureRandom);javax.crypto.KeyGenerator.init(int);javax.crypto.KeyGenerator.init(int,SecureRandom);javax.crypto.Mac.init(Key);javax.crypto.Mac.init(Key,AlgorithmParameterSpec);javax.naming.InitialContext.init(Hashtable&lt;?,?&gt;);javax.net.ssl.KeyManagerFactory.init(KeyStore,char[]);javax.net.ssl.KeyManagerFactory.init(ManagerFactoryParameters);javax.net.ssl.SSLContext.init(KeyManager[],TrustManager[],SecureRandom);javax.net.ssl.TrustManagerFactory.init(KeyStore);javax.net.ssl.TrustManagerFactory.init(ManagerFactoryParameters);javax.swing.JMenuItem.init(String,Icon);javax.xml.crypto.dsig.TransformService.init(TransformParameterSpec);javax.xml.crypto.dsig.TransformService.init(XMLStructure,XMLCryptoContext);org.omg.CORBA.ORB.init();org.omg.CORBA.ORB.init(String[],Properties);org.omg.CORBA.ORB.init(Applet,Properties)",;0.02;0.10;0.04;0.10;0.03;0.02;0.04;0.03;0.02;0.02;0.18;0.16;0.19;0.16;0.19;0.16;0.16;0.15;0.06;0.07;0.07;0.11;0.04;0.12;0.04;0.03;0.11;0.04;0.11;0.05;0.04;0.04;0.02;0.04;0.05;0.02;0.04;0.05;0.02;0.03;0.03;0.02;0.04;0.04
valueOf,45,0.116900101,The purpose of the valueOf method in Java is to convert a string representation of a value to its corresponding object type.,";java.lang.Boolean.valueOf(boolean);java.lang.Boolean.valueOf(String);java.lang.Byte.valueOf(byte);java.lang.Byte.valueOf(String,int);java.lang.Byte.valueOf(String);java.lang.Character.valueOf(char);java.lang.Double.valueOf(String);java.lang.Double.valueOf(double);java.lang.Enum.valueOf(Class&lt;T&gt;,String);java.lang.Float.valueOf(String);java.lang.Float.valueOf(float);java.lang.Integer.valueOf(String,int);java.lang.Integer.valueOf(String);java.lang.Integer.valueOf(int);java.lang.Long.valueOf(String,int);java.lang.Long.valueOf(String);java.lang.Long.valueOf(long);java.lang.Short.valueOf(String,int);java.lang.Short.valueOf(String);java.lang.Short.valueOf(short);java.lang.String.valueOf(Object);java.lang.String.valueOf(char[]);java.lang.String.valueOf(char[],int,int);java.lang.String.valueOf(boolean);java.lang.String.valueOf(char);java.lang.String.valueOf(int);java.lang.String.valueOf(long);java.lang.String.valueOf(float);java.lang.String.valueOf(double);java.math.BigDecimal.valueOf(long,int);java.math.BigDecimal.valueOf(long);java.math.BigDecimal.valueOf(double);java.math.BigInteger.valueOf(long);java.sql.Date.valueOf(String);java.sql.Date.valueOf(LocalDate);java.sql.Time.valueOf(String);java.sql.Time.valueOf(LocalTime);java.sql.Timestamp.valueOf(String);java.sql.Timestamp.valueOf(LocalDateTime);java.time.chrono.JapaneseEra.valueOf(String);java.util.BitSet.valueOf(long[]);java.util.BitSet.valueOf(LongBuffer);java.util.BitSet.valueOf(byte[]);java.util.BitSet.valueOf(ByteBuffer);javax.xml.namespace.QName.valueOf(String)",;0.09;0.02;0.10;0.12;0.11;0.11;0.04;0.11;0.02;0.04;0.11;0.11;0.11;0.11;0.11;0.11;0.10;0.12;0.11;0.11;0.06;0.06;0.04;0.06;0.06;0.09;0.09;0.09;0.09;0.05;0.05;0.02;0.05;0.04;0.04;0.04;0.03;0.03;0.04;0.02;0.05;0.05;0.05;0.05;0.02
getType,46,0.139676646,Returns the type of this event.,";java.awt.Cursor.getType();java.awt.GraphicsDevice.getType();java.awt.Window.getType();java.awt.color.ColorSpace.getType();java.awt.font.GlyphMetrics.getType();java.awt.geom.AffineTransform.getType();java.awt.image.BufferedImage.getType();java.io.ObjectStreamField.getType();java.lang.Character.getType(char);java.lang.Character.getType(int);java.lang.reflect.Field.getType();java.lang.reflect.Parameter.getType();java.security.KeyStore.getType();java.security.Policy.getType();java.security.Provider.Service.getType();java.security.cert.Certificate.getType();java.security.cert.CertificateFactory.getType();java.security.cert.CertPath.getType();java.security.cert.CertStore.getType();java.security.cert.CRL.getType();javax.management.MBeanAttributeInfo.getType();javax.management.MBeanParameterInfo.getType();javax.management.Notification.getType();javax.management.openmbean.CompositeType.getType(String);javax.naming.RefAddr.getType();javax.naming.event.NamingEvent.getType();javax.naming.ldap.Rdn.getType();javax.net.ssl.SNIMatcher.getType();javax.net.ssl.SNIServerName.getType();javax.security.auth.login.Configuration.getType();javax.sound.midi.MetaMessage.getType();javax.sound.midi.MidiFileFormat.getType();javax.sound.sampled.AudioFileFormat.getType();javax.sound.sampled.Control.getType();javax.sound.sampled.LineEvent.getType();javax.sql.rowset.BaseRowSet.getType();javax.swing.event.RowSorterEvent.getType();javax.swing.event.TableModelEvent.getType();javax.swing.text.DefaultStyledDocument.ElementSpec.getType();javax.swing.text.html.parser.Element.getType();javax.swing.text.html.parser.Entity.getType();org.xml.sax.helpers.AttributeListImpl.getType(int);org.xml.sax.helpers.AttributeListImpl.getType(String);org.xml.sax.helpers.AttributesImpl.getType(int);org.xml.sax.helpers.AttributesImpl.getType(String,String);org.xml.sax.helpers.AttributesImpl.getType(String)",;0.02;0.14;0.13;0.02;0.02;0.02;0.02;0.03;0.03;0.02;0.04;0.04;0.14;0.05;0.06;0.14;0.02;0.04;0.14;0.14;0.03;0.03;0.02;0.02;0.02;0.14;0.02;0.03;0.03;0.05;0.04;0.02;0.02;0.02;0.02;0.04;0.11;0.07;0.02;0.00;0.04;0.00;0.00;0.04;0.05;0.05
firePropertyChange,47,0.425531915,Overridden for performance reasons. See the Implementation Note for more information.,";java.awt.Component.firePropertyChange(String,Object,Object);java.awt.Component.firePropertyChange(String,boolean,boolean);java.awt.Component.firePropertyChange(String,int,int);java.awt.Component.firePropertyChange(String,byte,byte);java.awt.Component.firePropertyChange(String,char,char);java.awt.Component.firePropertyChange(String,short,short);java.awt.Component.firePropertyChange(String,long,long);java.awt.Component.firePropertyChange(String,float,float);java.awt.Component.firePropertyChange(String,double,double);java.awt.KeyboardFocusManager.firePropertyChange(String,Object,Object);java.beans.PropertyChangeSupport.firePropertyChange(String,Object,Object);java.beans.PropertyChangeSupport.firePropertyChange(String,int,int);java.beans.PropertyChangeSupport.firePropertyChange(String,boolean,boolean);java.beans.PropertyChangeSupport.firePropertyChange(PropertyChangeEvent);java.beans.PropertyEditorSupport.firePropertyChange();java.beans.beancontext.BeanContextChildSupport.firePropertyChange(String,Object,Object);javax.accessibility.AccessibleContext.firePropertyChange(String,Object,Object);javax.swing.AbstractAction.firePropertyChange(String,Object,Object);javax.swing.DefaultListCellRenderer.firePropertyChange(String,Object,Object);javax.swing.DefaultListCellRenderer.firePropertyChange(String,byte,byte);javax.swing.DefaultListCellRenderer.firePropertyChange(String,char,char);javax.swing.DefaultListCellRenderer.firePropertyChange(String,short,short);javax.swing.DefaultListCellRenderer.firePropertyChange(String,int,int);javax.swing.DefaultListCellRenderer.firePropertyChange(String,long,long);javax.swing.DefaultListCellRenderer.firePropertyChange(String,float,float);javax.swing.DefaultListCellRenderer.firePropertyChange(String,double,double);javax.swing.DefaultListCellRenderer.firePropertyChange(String,boolean,boolean);javax.swing.JComponent.firePropertyChange(String,boolean,boolean);javax.swing.JComponent.firePropertyChange(String,int,int);javax.swing.JComponent.firePropertyChange(String,char,char);javax.swing.JViewport.firePropertyChange(String,Object,Object);javax.swing.SwingWorker.firePropertyChange(String,Object,Object);javax.swing.UIDefaults.firePropertyChange(String,Object,Object);javax.swing.event.SwingPropertyChangeSupport.firePropertyChange(PropertyChangeEvent);javax.swing.plaf.LayerUI.firePropertyChange(String,Object,Object);javax.swing.plaf.basic.BasicDirectoryModel.firePropertyChange(String,Object,Object);javax.swing.table.DefaultTableCellRenderer.firePropertyChange(String,Object,Object);javax.swing.table.DefaultTableCellRenderer.firePropertyChange(String,boolean,boolean);javax.swing.tree.DefaultTreeCellRenderer.firePropertyChange(String,Object,Object);javax.swing.tree.DefaultTreeCellRenderer.firePropertyChange(String,byte,byte);javax.swing.tree.DefaultTreeCellRenderer.firePropertyChange(String,char,char);javax.swing.tree.DefaultTreeCellRenderer.firePropertyChange(String,short,short);javax.swing.tree.DefaultTreeCellRenderer.firePropertyChange(String,int,int);javax.swing.tree.DefaultTreeCellRenderer.firePropertyChange(String,long,long);javax.swing.tree.DefaultTreeCellRenderer.firePropertyChange(String,float,float);javax.swing.tree.DefaultTreeCellRenderer.firePropertyChange(String,double,double);javax.swing.tree.DefaultTreeCellRenderer.firePropertyChange(String,boolean,boolean)",;0.16;0.16;0.16;0.13;0.13;0.13;0.13;0.13;0.13;0.02;0.10;0.09;0.09;0.07;0.02;0.04;0.05;0.14;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.16;0.16;0.02;0.02;0.06;0.06;0.06;0.16;0.16;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43
isEmpty,49,0.222598309,"The purpose of the isEmpty method in Java is to check if a string or collection is empty, and it returns a boolean value indicating whether the object is empty or not.",;java.awt.Rectangle.isEmpty();java.awt.RenderingHints.isEmpty();java.awt.geom.Arc2D.Double.isEmpty();java.awt.geom.Arc2D.Float.isEmpty();java.awt.geom.Area.isEmpty();java.awt.geom.Ellipse2D.Double.isEmpty();java.awt.geom.Ellipse2D.Float.isEmpty();java.awt.geom.Rectangle2D.Double.isEmpty();java.awt.geom.Rectangle2D.Float.isEmpty();java.awt.geom.RectangularShape.isEmpty();java.awt.geom.RoundRectangle2D.Double.isEmpty();java.awt.geom.RoundRectangle2D.Float.isEmpty();java.beans.beancontext.BeanContextSupport.isEmpty();java.lang.String.isEmpty();java.util.AbstractCollection.isEmpty();java.util.AbstractMap.isEmpty();java.util.ArrayDeque.isEmpty();java.util.ArrayList.isEmpty();java.util.BitSet.isEmpty();java.util.Dictionary.isEmpty();java.util.HashMap.isEmpty();java.util.HashSet.isEmpty();java.util.Hashtable.isEmpty();java.util.IdentityHashMap.isEmpty();java.util.TreeSet.isEmpty();java.util.Vector.isEmpty();java.util.WeakHashMap.isEmpty();java.util.concurrent.ConcurrentHashMap.isEmpty();java.util.concurrent.ConcurrentHashMap.KeySetView.isEmpty();java.util.concurrent.ConcurrentLinkedDeque.isEmpty();java.util.concurrent.ConcurrentLinkedQueue.isEmpty();java.util.concurrent.ConcurrentSkipListMap.isEmpty();java.util.concurrent.ConcurrentSkipListSet.isEmpty();java.util.concurrent.CopyOnWriteArrayList.isEmpty();java.util.concurrent.CopyOnWriteArraySet.isEmpty();java.util.concurrent.LinkedTransferQueue.isEmpty();java.util.concurrent.SynchronousQueue.isEmpty();java.util.jar.Attributes.isEmpty();javax.activation.MimeTypeParameterList.isEmpty();javax.management.openmbean.TabularDataSupport.isEmpty();javax.management.timer.Timer.isEmpty();javax.naming.CompositeName.isEmpty();javax.naming.CompoundName.isEmpty();javax.naming.ldap.LdapName.isEmpty();javax.print.attribute.HashAttributeSet.isEmpty();javax.script.SimpleBindings.isEmpty();javax.swing.DefaultListModel.isEmpty();javax.swing.text.SimpleAttributeSet.isEmpty();javax.swing.text.html.parser.Element.isEmpty(),;0.20;0.19;0.20;0.20;0.02;0.20;0.20;0.20;0.20;0.20;0.20;0.20;0.02;0.02;0.14;0.22;0.19;0.20;0.12;0.03;0.22;0.22;0.02;0.17;0.22;0.02;0.08;0.22;0.02;0.20;0.20;0.22;0.22;0.20;0.22;0.20;0.02;0.17;0.02;0.16;0.02;0.03;0.03;0.02;0.17;0.22;0.02;0.02;0.00
propertyChange,49,0.514692966,This method gets called when a bound property is changed.,;java.beans.PropertyChangeListenerProxy.propertyChange(PropertyChangeEvent);java.beans.beancontext.BeanContextSupport.propertyChange(PropertyChangeEvent);javax.swing.JLayer.propertyChange(PropertyChangeEvent);javax.swing.JSpinner.DefaultEditor.propertyChange(PropertyChangeEvent);javax.swing.plaf.basic.BasicButtonListener.propertyChange(PropertyChangeEvent);javax.swing.plaf.basic.BasicDirectoryModel.propertyChange(PropertyChangeEvent);javax.swing.plaf.basic.BasicEditorPaneUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.basic.BasicLabelUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.basic.BasicRootPaneUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.basic.BasicSplitPaneDivider.propertyChange(PropertyChangeEvent);javax.swing.plaf.basic.BasicTextAreaUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.basic.BasicTextPaneUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.basic.BasicTextUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.metal.MetalRootPaneUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.metal.MetalTextFieldUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthButtonUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthColorChooserUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthComboBoxUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthDesktopIconUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthDesktopPaneUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthEditorPaneUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthInternalFrameUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthLabelUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthListUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthMenuBarUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthMenuItemUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthMenuUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthOptionPaneUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthPanelUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthPopupMenuUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthProgressBarUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthRootPaneUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthScrollBarUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthScrollPaneUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthSeparatorUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthSliderUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthSpinnerUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthSplitPaneUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthTabbedPaneUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthTableHeaderUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthTableUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthTextAreaUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthTextFieldUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthTextPaneUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthToolBarUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthToolTipUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthTreeUI.propertyChange(PropertyChangeEvent);javax.swing.plaf.synth.SynthViewportUI.propertyChange(PropertyChangeEvent);javax.swing.table.DefaultTableColumnModel.propertyChange(PropertyChangeEvent),;0.02;0.02;0.51;0.02;0.14;0.14;0.23;0.14;0.04;0.02;0.23;0.21;0.17;0.02;0.25;0.51;0.51;0.51;0.14;0.51;0.23;0.51;0.51;0.51;0.51;0.51;0.51;0.51;0.51;0.51;0.51;0.04;0.14;0.14;0.14;0.51;0.51;0.51;0.51;0.51;0.51;0.23;0.21;0.21;0.51;0.51;0.51;0.51;0.02
getValue,50,0.065008036,Returns the value of the current element of the sequence.,";java.awt.Scrollbar.getValue();java.awt.ScrollPaneAdjustable.getValue();java.awt.event.AdjustmentEvent.getValue();java.beans.Expression.getValue();java.beans.FeatureDescriptor.getValue(String);java.beans.PropertyEditorSupport.getValue();java.net.HttpCookie.getValue();java.rmi.dgc.Lease.getValue();java.text.Annotation.getValue();java.time.Year.getValue();java.time.chrono.JapaneseEra.getValue();java.util.AbstractMap.SimpleEntry.getValue();java.util.AbstractMap.SimpleImmutableEntry.getValue();java.util.jar.Attributes.getValue(String);java.util.jar.Attributes.getValue(Attributes.Name);java.util.zip.Adler32.getValue();java.util.zip.CRC32.getValue();javax.crypto.spec.PSource.PSpecified.getValue();javax.management.Attribute.getValue();javax.management.StringValueExp.getValue();javax.naming.ldap.Rdn.getValue();javax.print.attribute.DateTimeSyntax.getValue();javax.print.attribute.EnumSyntax.getValue();javax.print.attribute.IntegerSyntax.getValue();javax.print.attribute.TextSyntax.getValue();javax.sound.sampled.BooleanControl.getValue();javax.sound.sampled.EnumControl.getValue();javax.sound.sampled.FloatControl.getValue();javax.swing.AbstractAction.getValue(String);javax.swing.DefaultBoundedRangeModel.getValue();javax.swing.JFormattedTextField.getValue();javax.swing.JOptionPane.getValue();javax.swing.JProgressBar.getValue();javax.swing.JScrollBar.getValue();javax.swing.JSlider.getValue();javax.swing.JSpinner.getValue();javax.swing.RowFilter.Entry.getValue(int);javax.swing.SpinnerDateModel.getValue();javax.swing.SpinnerListModel.getValue();javax.swing.SpinnerNumberModel.getValue();javax.swing.Spring.getValue();javax.swing.text.html.Option.getValue();javax.xml.bind.JAXBElement.getValue();javax.xml.bind.JAXBIntrospector.getValue(Object);javax.xml.soap.MimeHeader.getValue();org.xml.sax.helpers.AttributeListImpl.getValue(int);org.xml.sax.helpers.AttributeListImpl.getValue(String);org.xml.sax.helpers.AttributesImpl.getValue(int);org.xml.sax.helpers.AttributesImpl.getValue(String,String);org.xml.sax.helpers.AttributesImpl.getValue(String)",;0.03;0.02;0.03;0.02;0.02;0.04;0.06;0.02;0.05;0.02;0.02;0.04;0.04;0.04;0.04;0.02;0.02;0.05;0.03;0.02;0.02;0.02;0.02;0.02;0.02;0.06;0.06;0.06;0.02;0.02;0.02;0.02;0.03;0.02;0.02;0.02;0.02;0.03;0.04;0.07;0.04;0.02;0.02;0.02;0.05;0.00;0.00;0.04;0.04;0.04
set,51,0.14125004,The purpose of the set() method in Java is to set the value of a variable or attribute in an object.,";java.awt.Insets.set(int,int,int,int);java.awt.JobAttributes.set(JobAttributes);java.awt.PageAttributes.set(PageAttributes);java.awt.image.renderable.ParameterBlock.set(Object,int);java.awt.image.renderable.ParameterBlock.set(byte,int);java.awt.image.renderable.ParameterBlock.set(char,int);java.awt.image.renderable.ParameterBlock.set(short,int);java.awt.image.renderable.ParameterBlock.set(int,int);java.awt.image.renderable.ParameterBlock.set(long,int);java.awt.image.renderable.ParameterBlock.set(float,int);java.awt.image.renderable.ParameterBlock.set(double,int);java.lang.ThreadLocal.set(T);java.lang.reflect.Array.set(Object,int,Object);java.lang.reflect.Field.set(Object,Object);java.util.AbstractList.set(int,E);java.util.AbstractSequentialList.set(int,E);java.util.ArrayList.set(int,E);java.util.BitSet.set(int);java.util.BitSet.set(int,boolean);java.util.BitSet.set(int,int);java.util.BitSet.set(int,int,boolean);java.util.Calendar.set(int,int);java.util.Calendar.set(int,int,int);java.util.Calendar.set(int,int,int,int,int);java.util.Calendar.set(int,int,int,int,int,int);java.util.Calendar.Builder.set(int,int);java.util.LinkedList.set(int,E);java.util.Vector.set(int,E);java.util.concurrent.CopyOnWriteArrayList.set(int,E);java.util.concurrent.FutureTask.set(V);java.util.concurrent.atomic.AtomicBoolean.set(boolean);java.util.concurrent.atomic.AtomicInteger.set(int);java.util.concurrent.atomic.AtomicIntegerArray.set(int,int);java.util.concurrent.atomic.AtomicIntegerFieldUpdater.set(T,int);java.util.concurrent.atomic.AtomicLong.set(long);java.util.concurrent.atomic.AtomicLongArray.set(int,long);java.util.concurrent.atomic.AtomicLongFieldUpdater.set(T,long);java.util.concurrent.atomic.AtomicMarkableReference.set(V,boolean);java.util.concurrent.atomic.AtomicReference.set(V);java.util.concurrent.atomic.AtomicReferenceArray.set(int,E);java.util.concurrent.atomic.AtomicReferenceFieldUpdater.set(T,V);java.util.concurrent.atomic.AtomicStampedReference.set(V,int);javax.activation.MimeTypeParameterList.set(String,String);javax.management.AttributeList.set(int,Attribute);javax.management.AttributeList.set(int,Object);javax.management.relation.RoleList.set(int,Role);javax.management.relation.RoleList.set(int,Object);javax.management.relation.RoleUnresolvedList.set(int,RoleUnresolved);javax.management.relation.RoleUnresolvedList.set(int,Object);javax.naming.directory.BasicAttribute.set(int,Object);javax.swing.DefaultListModel.set(int,E)",;0.02;0.04;0.04;0.13;0.14;0.14;0.14;0.14;0.14;0.14;0.14;0.02;0.02;0.02;0.09;0.05;0.12;0.03;0.04;0.04;0.04;0.04;0.05;0.05;0.05;0.03;0.12;0.10;0.12;0.03;0.07;0.09;0.09;0.06;0.09;0.09;0.06;0.04;0.09;0.09;0.06;0.04;0.02;0.05;0.12;0.07;0.04;0.07;0.04;0.02;0.08
reset,53,0.068861648,The reset() method in Java is used to reset the input stream to its initial position.,;java.awt.Polygon.reset();java.awt.geom.Area.reset();java.awt.geom.Path2D.reset();java.io.BufferedInputStream.reset();java.io.BufferedReader.reset();java.io.ByteArrayInputStream.reset();java.io.ByteArrayOutputStream.reset();java.io.CharArrayReader.reset();java.io.CharArrayWriter.reset();java.io.FilterInputStream.reset();java.io.FilterReader.reset();java.io.LineNumberInputStream.reset();java.io.LineNumberReader.reset();java.io.ObjectOutputStream.reset();java.io.PushbackInputStream.reset();java.io.PushbackReader.reset();java.io.Reader.reset();java.io.StringBufferInputStream.reset();java.io.StringReader.reset();java.nio.Buffer.reset();java.nio.charset.CharsetDecoder.reset();java.nio.charset.CharsetEncoder.reset();java.security.MessageDigest.reset();java.text.CollationElementIterator.reset();java.util.Scanner.reset();java.util.concurrent.CyclicBarrier.reset();java.util.concurrent.atomic.DoubleAccumulator.reset();java.util.concurrent.atomic.DoubleAdder.reset();java.util.concurrent.atomic.LongAccumulator.reset();java.util.concurrent.atomic.LongAdder.reset();java.util.logging.LogManager.reset();java.util.regex.Matcher.reset();java.util.regex.Matcher.reset(CharSequence);java.util.zip.Adler32.reset();java.util.zip.CRC32.reset();java.util.zip.Deflater.reset();java.util.zip.DeflaterInputStream.reset();java.util.zip.Inflater.reset();java.util.zip.InflaterInputStream.reset();javax.crypto.Mac.reset();javax.imageio.ImageReader.reset();javax.imageio.ImageWriter.reset();javax.imageio.metadata.IIOMetadata.reset();javax.imageio.stream.ImageInputStreamImpl.reset();javax.sound.sampled.AudioInputStream.reset();javax.swing.ProgressMonitorInputStream.reset();javax.xml.bind.util.ValidationEventCollector.reset();javax.xml.datatype.XMLGregorianCalendar.reset();javax.xml.parsers.DocumentBuilder.reset();javax.xml.parsers.SAXParser.reset();javax.xml.transform.Transformer.reset();javax.xml.validation.Validator.reset();org.xml.sax.helpers.NamespaceSupport.reset(),;0.02;0.02;0.03;0.02;0.04;0.02;0.02;0.05;0.02;0.03;0.00;0.00;0.04;0.02;0.04;0.02;0.02;0.00;0.05;0.02;0.04;0.04;0.02;0.03;0.02;0.02;0.07;0.07;0.07;0.07;0.02;0.04;0.04;0.02;0.02;0.03;0.02;0.03;0.04;0.02;0.03;0.03;0.02;0.02;0.03;0.02;0.02;0.03;0.06;0.06;0.06;0.06;0.02
append,54,0.246071662,The append() method in Java is used to add new elements to a list.,";java.awt.TextArea.append(String);java.awt.geom.Path2D.append(Shape,boolean);java.awt.geom.Path2D.append(PathIterator,boolean);java.awt.geom.Path2D.Double.append(PathIterator,boolean);java.awt.geom.Path2D.Float.append(PathIterator,boolean);java.awt.print.Book.append(Printable,PageFormat);java.awt.print.Book.append(Printable,PageFormat,int);java.io.CharArrayWriter.append(CharSequence);java.io.CharArrayWriter.append(CharSequence,int,int);java.io.CharArrayWriter.append(char);java.io.PrintStream.append(CharSequence);java.io.PrintStream.append(CharSequence,int,int);java.io.PrintStream.append(char);java.io.PrintWriter.append(CharSequence);java.io.PrintWriter.append(CharSequence,int,int);java.io.PrintWriter.append(char);java.io.StringWriter.append(CharSequence);java.io.StringWriter.append(CharSequence,int,int);java.io.StringWriter.append(char);java.io.Writer.append(CharSequence);java.io.Writer.append(CharSequence,int,int);java.io.Writer.append(char);java.lang.StringBuffer.append(Object);java.lang.StringBuffer.append(String);java.lang.StringBuffer.append(StringBuffer);java.lang.StringBuffer.append(CharSequence);java.lang.StringBuffer.append(CharSequence,int,int);java.lang.StringBuffer.append(char[]);java.lang.StringBuffer.append(char[],int,int);java.lang.StringBuffer.append(boolean);java.lang.StringBuffer.append(char);java.lang.StringBuffer.append(int);java.lang.StringBuffer.append(long);java.lang.StringBuffer.append(float);java.lang.StringBuffer.append(double);java.lang.StringBuilder.append(Object);java.lang.StringBuilder.append(String);java.lang.StringBuilder.append(StringBuffer);java.lang.StringBuilder.append(CharSequence);java.lang.StringBuilder.append(CharSequence,int,int);java.lang.StringBuilder.append(char[]);java.lang.StringBuilder.append(char[],int,int);java.lang.StringBuilder.append(boolean);java.lang.StringBuilder.append(char);java.lang.StringBuilder.append(int);java.lang.StringBuilder.append(long);java.lang.StringBuilder.append(float);java.lang.StringBuilder.append(double);java.nio.CharBuffer.append(CharSequence);java.nio.CharBuffer.append(CharSequence,int,int);java.nio.CharBuffer.append(char);java.time.format.DateTimeFormatterBuilder.append(DateTimeFormatter);javax.swing.JTextArea.append(String);javax.swing.text.View.append(View)",;0.02;0.07;0.07;0.07;0.07;0.02;0.03;0.18;0.19;0.17;0.17;0.18;0.15;0.18;0.19;0.17;0.18;0.19;0.17;0.18;0.18;0.17;0.23;0.11;0.10;0.07;0.10;0.22;0.19;0.24;0.21;0.25;0.25;0.25;0.25;0.23;0.11;0.11;0.02;0.10;0.22;0.19;0.24;0.21;0.25;0.25;0.25;0.25;0.16;0.16;0.13;0.02;0.03;0.02
of,57,0.159296463,The purpose of the "of" method in Java is to create a new instance of a class with the specified parameters.,";java.lang.Character.UnicodeBlock.of(char);java.lang.Character.UnicodeBlock.of(int);java.time.Duration.of(long,TemporalUnit);java.time.LocalDate.of(int,Month,int);java.time.LocalDate.of(int,int,int);java.time.LocalDateTime.of(int,Month,int,int,int);java.time.LocalDateTime.of(int,Month,int,int,int,int);java.time.LocalDateTime.of(int,Month,int,int,int,int,int);java.time.LocalDateTime.of(int,int,int,int,int);java.time.LocalDateTime.of(int,int,int,int,int,int);java.time.LocalDateTime.of(int,int,int,int,int,int,int);java.time.LocalDateTime.of(LocalDate,LocalTime);java.time.LocalTime.of(int,int);java.time.LocalTime.of(int,int,int);java.time.LocalTime.of(int,int,int,int);java.time.MonthDay.of(Month,int);java.time.MonthDay.of(int,int);java.time.OffsetDateTime.of(LocalDate,LocalTime,ZoneOffset);java.time.OffsetDateTime.of(LocalDateTime,ZoneOffset);java.time.OffsetDateTime.of(int,int,int,int,int,int,int,ZoneOffset);java.time.OffsetTime.of(LocalTime,ZoneOffset);java.time.OffsetTime.of(int,int,int,int,ZoneOffset);java.time.Period.of(int,int,int);java.time.Year.of(int);java.time.YearMonth.of(int,Month);java.time.YearMonth.of(int,int);java.time.ZonedDateTime.of(LocalDate,LocalTime,ZoneId);java.time.ZonedDateTime.of(LocalDateTime,ZoneId);java.time.ZonedDateTime.of(int,int,int,int,int,int,int,ZoneId);java.time.ZoneId.of(String,Map&lt;String,String&gt;);java.time.chrono.HijrahDate.of(int,int,int);java.time.chrono.JapaneseDate.of(JapaneseEra,int,int,int);java.time.chrono.JapaneseDate.of(int,int,int);java.time.chrono.MinguoDate.of(int,int,int);java.time.chrono.ThaiBuddhistDate.of(int,int,int);java.time.format.DecimalStyle.of(Locale);java.time.temporal.ValueRange.of(long,long);java.time.temporal.ValueRange.of(long,long,long);java.time.temporal.ValueRange.of(long,long,long,long);java.time.temporal.WeekFields.of(Locale);java.time.temporal.WeekFields.of(DayOfWeek,int);java.time.zone.ZoneOffsetTransition.of(LocalDateTime,ZoneOffset,ZoneOffset);java.time.zone.ZoneOffsetTransitionRule.of(Month,int,DayOfWeek,LocalTime,boolean,ZoneOffsetTransitionRule.TimeDefinition,ZoneOffset,ZoneOffset,ZoneOffset);java.time.zone.ZoneRules.of(ZoneOffset,ZoneOffset,List&lt;ZoneOffsetTransition&gt;,List&lt;ZoneOffsetTransition&gt;,List&lt;ZoneOffsetTransitionRule&gt;);java.time.zone.ZoneRules.of(ZoneOffset);java.util.EnumSet.of(E);java.util.EnumSet.of(E,E);java.util.EnumSet.of(E,E,E);java.util.EnumSet.of(E,E,E,E);java.util.EnumSet.of(E,E,E,E,E);java.util.EnumSet.of(E,E...);java.util.Optional.of(T);java.util.OptionalDouble.of(double);java.util.OptionalInt.of(int);java.util.OptionalLong.of(long);javax.annotation.processing.Completions.of(String,String);javax.annotation.processing.Completions.of(String)",;0.03;0.03;0.02;0.14;0.14;0.15;0.15;0.16;0.15;0.15;0.16;0.05;0.08;0.08;0.07;0.07;0.07;0.07;0.07;0.06;0.05;0.06;0.02;0.04;0.06;0.06;0.06;0.06;0.06;0.04;0.11;0.08;0.10;0.12;0.11;0.02;0.03;0.03;0.03;0.05;0.03;0.03;0.03;0.04;0.05;0.09;0.10;0.10;0.10;0.10;0.06;0.02;0.04;0.04;0.04;0.03;0.03
parse,60,0.159766584,The parse method in Java is used to convert a string representation of a data type into its corresponding primitive data type or object.,";java.net.HttpCookie.parse(String);java.text.ChoiceFormat.parse(String,ParsePosition);java.text.DateFormat.parse(String);java.text.DateFormat.parse(String,ParsePosition);java.text.MessageFormat.parse(String);java.text.NumberFormat.parse(String,ParsePosition);java.text.NumberFormat.parse(String);java.text.SimpleDateFormat.parse(String,ParsePosition);java.time.Duration.parse(CharSequence);java.time.Instant.parse(CharSequence);java.time.LocalDate.parse(CharSequence);java.time.LocalDate.parse(CharSequence,DateTimeFormatter);java.time.LocalDateTime.parse(CharSequence);java.time.LocalDateTime.parse(CharSequence,DateTimeFormatter);java.time.LocalTime.parse(CharSequence);java.time.LocalTime.parse(CharSequence,DateTimeFormatter);java.time.MonthDay.parse(CharSequence);java.time.MonthDay.parse(CharSequence,DateTimeFormatter);java.time.OffsetDateTime.parse(CharSequence);java.time.OffsetDateTime.parse(CharSequence,DateTimeFormatter);java.time.OffsetTime.parse(CharSequence);java.time.OffsetTime.parse(CharSequence,DateTimeFormatter);java.time.Period.parse(CharSequence);java.time.Year.parse(CharSequence);java.time.Year.parse(CharSequence,DateTimeFormatter);java.time.YearMonth.parse(CharSequence);java.time.YearMonth.parse(CharSequence,DateTimeFormatter);java.time.ZonedDateTime.parse(CharSequence);java.time.ZonedDateTime.parse(CharSequence,DateTimeFormatter);java.time.format.DateTimeFormatter.parse(CharSequence);java.time.format.DateTimeFormatter.parse(CharSequence,ParsePosition);java.time.format.DateTimeFormatter.parse(CharSequence,TemporalQuery&lt;T&gt;);java.util.Date.parse(String);java.util.Locale.LanguageRange.parse(String);java.util.Locale.LanguageRange.parse(String,Map&lt;String,List&lt;String&gt;&gt;);javax.activation.MimeTypeParameterList.parse(String);javax.swing.text.html.HTMLEditorKit.Parser.parse(Reader,HTMLEditorKit.ParserCallback,boolean);javax.swing.text.html.parser.Parser.parse(Reader);javax.swing.text.html.parser.ParserDelegator.parse(Reader,HTMLEditorKit.ParserCallback,boolean);javax.xml.parsers.DocumentBuilder.parse(InputStream);javax.xml.parsers.DocumentBuilder.parse(InputStream,String);javax.xml.parsers.DocumentBuilder.parse(String);javax.xml.parsers.DocumentBuilder.parse(File);javax.xml.parsers.DocumentBuilder.parse(InputSource);javax.xml.parsers.SAXParser.parse(InputStream,HandlerBase);javax.xml.parsers.SAXParser.parse(InputStream,HandlerBase,String);javax.xml.parsers.SAXParser.parse(InputStream,DefaultHandler);javax.xml.parsers.SAXParser.parse(InputStream,DefaultHandler,String);javax.xml.parsers.SAXParser.parse(String,HandlerBase);javax.xml.parsers.SAXParser.parse(String,DefaultHandler);javax.xml.parsers.SAXParser.parse(File,HandlerBase);javax.xml.parsers.SAXParser.parse(File,DefaultHandler);javax.xml.parsers.SAXParser.parse(InputSource,HandlerBase);javax.xml.parsers.SAXParser.parse(InputSource,DefaultHandler);org.xml.sax.helpers.ParserAdapter.parse(String);org.xml.sax.helpers.ParserAdapter.parse(InputSource);org.xml.sax.helpers.XMLFilterImpl.parse(InputSource);org.xml.sax.helpers.XMLFilterImpl.parse(String);org.xml.sax.helpers.XMLReaderAdapter.parse(String);org.xml.sax.helpers.XMLReaderAdapter.parse(InputSource)",;0.02;0.02;0.05;0.02;0.04;0.02;0.05;0.02;0.03;0.12;0.13;0.16;0.13;0.16;0.13;0.16;0.11;0.16;0.13;0.16;0.12;0.16;0.03;0.10;0.16;0.09;0.16;0.12;0.16;0.03;0.02;0.02;0.02;0.02;0.02;0.02;0.02;0.02;0.02;0.09;0.09;0.08;0.08;0.08;0.11;0.11;0.08;0.08;0.08;0.05;0.10;0.07;0.09;0.05;0.03;0.03;0.00;0.00;0.03;0.03
clear,62,0.260424709,Removes all of the mappings from this map. The map will be empty after this call returns.,";java.awt.List.clear();java.awt.RenderingHints.clear();java.beans.beancontext.BeanContextSupport.clear();java.lang.ref.Reference.clear();java.nio.Buffer.clear();java.security.Provider.clear();java.util.AbstractCollection.clear();java.util.AbstractList.clear();java.util.AbstractMap.clear();java.util.AbstractQueue.clear();java.util.ArrayDeque.clear();java.util.ArrayList.clear();java.util.BitSet.clear(int);java.util.BitSet.clear(int,int);java.util.BitSet.clear();java.util.Calendar.clear();java.util.Calendar.clear(int);java.util.EnumMap.clear();java.util.HashMap.clear();java.util.HashSet.clear();java.util.Hashtable.clear();java.util.IdentityHashMap.clear();java.util.LinkedHashMap.clear();java.util.LinkedList.clear();java.util.Locale.Builder.clear();java.util.PriorityQueue.clear();java.util.TreeMap.clear();java.util.TreeSet.clear();java.util.Vector.clear();java.util.WeakHashMap.clear();java.util.concurrent.ArrayBlockingQueue.clear();java.util.concurrent.ConcurrentHashMap.clear();java.util.concurrent.ConcurrentHashMap.KeySetView.clear();java.util.concurrent.ConcurrentLinkedDeque.clear();java.util.concurrent.ConcurrentSkipListMap.clear();java.util.concurrent.ConcurrentSkipListSet.clear();java.util.concurrent.CopyOnWriteArrayList.clear();java.util.concurrent.CopyOnWriteArraySet.clear();java.util.concurrent.DelayQueue.clear();java.util.concurrent.LinkedBlockingDeque.clear();java.util.concurrent.LinkedBlockingQueue.clear();java.util.concurrent.PriorityBlockingQueue.clear();java.util.concurrent.SynchronousQueue.clear();java.util.jar.Attributes.clear();java.util.jar.Manifest.clear();java.util.prefs.AbstractPreferences.clear();java.util.prefs.Preferences.clear();javax.accessibility.AccessibleRelationSet.clear();javax.accessibility.AccessibleStateSet.clear();javax.management.openmbean.TabularDataSupport.clear();javax.naming.Reference.clear();javax.naming.directory.BasicAttribute.clear();javax.print.attribute.HashAttributeSet.clear();javax.script.SimpleBindings.clear();javax.swing.ActionMap.clear();javax.swing.ComponentInputMap.clear();javax.swing.DefaultListModel.clear();javax.swing.InputMap.clear();javax.xml.datatype.XMLGregorianCalendar.clear();org.omg.CORBA.Environment.clear();org.xml.sax.helpers.AttributeListImpl.clear();org.xml.sax.helpers.AttributesImpl.clear()",;0.02;0.02;0.02;0.02;0.02;0.02;0.07;0.12;0.24;0.19;0.25;0.26;0.02;0.02;0.02;0.02;0.02;0.04;0.26;0.26;0.02;0.26;0.26;0.26;0.02;0.25;0.26;0.26;0.21;0.26;0.24;0.13;0.14;0.12;0.13;0.12;0.26;0.26;0.14;0.23;0.24;0.24;0.02;0.03;0.02;0.02;0.04;0.02;0.02;0.02;0.02;0.02;0.03;0.24;0.07;0.07;0.22;0.07;0.02;0.02;0.00;0.02
size,63,0.225532273,Returns the number of elements in this list.,;java.awt.Component.size();java.awt.RenderingHints.size();java.beans.beancontext.BeanContextMembershipEvent.size();java.beans.beancontext.BeanContextSupport.size();java.io.ByteArrayOutputStream.size();java.io.CharArrayWriter.size();java.io.DataOutputStream.size();java.nio.channels.AsynchronousFileChannel.size();java.nio.channels.FileChannel.size();java.nio.channels.FileLock.size();java.nio.file.Files.size(Path);java.security.IdentityScope.size();java.security.KeyStore.size();java.util.AbstractCollection.size();java.util.AbstractMap.size();java.util.ArrayDeque.size();java.util.ArrayList.size();java.util.BitSet.size();java.util.Dictionary.size();java.util.EnumMap.size();java.util.HashMap.size();java.util.HashSet.size();java.util.Hashtable.size();java.util.IdentityHashMap.size();java.util.LinkedList.size();java.util.PriorityQueue.size();java.util.TreeMap.size();java.util.TreeSet.size();java.util.Vector.size();java.util.WeakHashMap.size();java.util.concurrent.ArrayBlockingQueue.size();java.util.concurrent.ConcurrentHashMap.size();java.util.concurrent.ConcurrentHashMap.KeySetView.size();java.util.concurrent.ConcurrentLinkedDeque.size();java.util.concurrent.ConcurrentLinkedQueue.size();java.util.concurrent.ConcurrentSkipListMap.size();java.util.concurrent.ConcurrentSkipListSet.size();java.util.concurrent.CopyOnWriteArrayList.size();java.util.concurrent.CopyOnWriteArraySet.size();java.util.concurrent.DelayQueue.size();java.util.concurrent.LinkedBlockingDeque.size();java.util.concurrent.LinkedBlockingQueue.size();java.util.concurrent.LinkedTransferQueue.size();java.util.concurrent.PriorityBlockingQueue.size();java.util.concurrent.SynchronousQueue.size();java.util.jar.Attributes.size();java.util.zip.ZipFile.size();javax.accessibility.AccessibleRelationSet.size();javax.activation.MimeTypeParameterList.size();javax.management.openmbean.TabularDataSupport.size();javax.naming.CompositeName.size();javax.naming.CompoundName.size();javax.naming.Reference.size();javax.naming.directory.BasicAttribute.size();javax.naming.directory.BasicAttributes.size();javax.naming.ldap.LdapName.size();javax.naming.ldap.Rdn.size();javax.print.attribute.HashAttributeSet.size();javax.script.SimpleBindings.size();javax.sound.midi.Track.size();javax.swing.ActionMap.size();javax.swing.DefaultListModel.size();javax.swing.InputMap.size(),;0.02;0.18;0.02;0.02;0.05;0.05;0.02;0.05;0.05;0.02;0.02;0.00;0.06;0.10;0.14;0.22;0.23;0.06;0.15;0.19;0.19;0.19;0.16;0.16;0.23;0.10;0.19;0.19;0.20;0.08;0.22;0.14;0.10;0.09;0.08;0.09;0.09;0.23;0.22;0.10;0.22;0.22;0.09;0.10;0.02;0.16;0.15;0.14;0.02;0.15;0.07;0.07;0.04;0.08;0.08;0.07;0.04;0.10;0.14;0.02;0.16;0.20;0.14
_read,64,0.75,The purpose of the _read method in Java is to read a serialized representation of an object from an input stream.,;org.omg.CORBA.AnyHolder._read(InputStream);org.omg.CORBA.AnySeqHolder._read(InputStream);org.omg.CORBA.BooleanHolder._read(InputStream);org.omg.CORBA.BooleanSeqHolder._read(InputStream);org.omg.CORBA.ByteHolder._read(InputStream);org.omg.CORBA.CharHolder._read(InputStream);org.omg.CORBA.CharSeqHolder._read(InputStream);org.omg.CORBA.CurrentHolder._read(InputStream);org.omg.CORBA.DoubleHolder._read(InputStream);org.omg.CORBA.DoubleSeqHolder._read(InputStream);org.omg.CORBA.FixedHolder._read(InputStream);org.omg.CORBA.FloatHolder._read(InputStream);org.omg.CORBA.FloatSeqHolder._read(InputStream);org.omg.CORBA.IntHolder._read(InputStream);org.omg.CORBA.LongHolder._read(InputStream);org.omg.CORBA.LongLongSeqHolder._read(InputStream);org.omg.CORBA.LongSeqHolder._read(InputStream);org.omg.CORBA.ObjectHolder._read(InputStream);org.omg.CORBA.OctetSeqHolder._read(InputStream);org.omg.CORBA.ParameterModeHolder._read(InputStream);org.omg.CORBA.PolicyErrorHolder._read(InputStream);org.omg.CORBA.PolicyHolder._read(InputStream);org.omg.CORBA.PolicyListHolder._read(InputStream);org.omg.CORBA.PrincipalHolder._read(InputStream);org.omg.CORBA.ServiceInformationHolder._read(InputStream);org.omg.CORBA.ShortHolder._read(InputStream);org.omg.CORBA.ShortSeqHolder._read(InputStream);org.omg.CORBA.StringHolder._read(InputStream);org.omg.CORBA.StringSeqHolder._read(InputStream);org.omg.CORBA.TypeCodeHolder._read(InputStream);org.omg.CORBA.ULongLongSeqHolder._read(InputStream);org.omg.CORBA.ULongSeqHolder._read(InputStream);org.omg.CORBA.UnknownUserExceptionHolder._read(InputStream);org.omg.CORBA.UShortSeqHolder._read(InputStream);org.omg.CORBA.ValueBaseHolder._read(InputStream);org.omg.CORBA.WCharSeqHolder._read(InputStream);org.omg.CORBA.WrongTransactionHolder._read(InputStream);org.omg.CORBA.WStringSeqHolder._read(InputStream);org.omg.CosNaming.BindingHolder._read(InputStream);org.omg.CosNaming.BindingIteratorHolder._read(InputStream);org.omg.CosNaming.BindingListHolder._read(InputStream);org.omg.CosNaming.BindingTypeHolder._read(InputStream);org.omg.CosNaming.NameComponentHolder._read(InputStream);org.omg.CosNaming.NameHolder._read(InputStream);org.omg.CosNaming.NamingContextExtHolder._read(InputStream);org.omg.CosNaming.NamingContextHolder._read(InputStream);org.omg.CosNaming.NamingContextExtPackage.InvalidAddressHolder._read(InputStream);org.omg.CosNaming.NamingContextPackage.AlreadyBoundHolder._read(InputStream);org.omg.CosNaming.NamingContextPackage.CannotProceedHolder._read(InputStream);org.omg.CosNaming.NamingContextPackage.InvalidNameHolder._read(InputStream);org.omg.CosNaming.NamingContextPackage.NotEmptyHolder._read(InputStream);org.omg.CosNaming.NamingContextPackage.NotFoundHolder._read(InputStream);org.omg.CosNaming.NamingContextPackage.NotFoundReasonHolder._read(InputStream);org.omg.IOP.IORHolder._read(InputStream);org.omg.IOP.MultipleComponentProfileHolder._read(InputStream);org.omg.IOP.ServiceContextHolder._read(InputStream);org.omg.IOP.ServiceContextListHolder._read(InputStream);org.omg.IOP.TaggedComponentHolder._read(InputStream);org.omg.IOP.TaggedProfileHolder._read(InputStream);org.omg.PortableInterceptor.IORInterceptor_3_0Holder._read(InputStream);org.omg.PortableInterceptor.ObjectReferenceFactoryHolder._read(InputStream);org.omg.PortableInterceptor.ObjectReferenceTemplateHolder._read(InputStream);org.omg.PortableInterceptor.ObjectReferenceTemplateSeqHolder._read(InputStream);org.omg.PortableServer.ServantLocatorPackage.CookieHolder._read(InputStream),;0.10;0.75;0.04;0.75;0.10;0.10;0.75;0.75;0.03;0.75;0.03;0.02;0.75;0.04;0.10;0.75;0.75;0.10;0.75;0.75;0.75;0.75;0.75;0.00;0.04;0.10;0.75;0.04;0.75;0.10;0.75;0.75;0.75;0.75;0.10;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75
_type,64,0.75,The _type method in Java is used to determine the data type of a variable or expression.,;org.omg.CORBA.AnyHolder._type();org.omg.CORBA.AnySeqHolder._type();org.omg.CORBA.BooleanHolder._type();org.omg.CORBA.BooleanSeqHolder._type();org.omg.CORBA.ByteHolder._type();org.omg.CORBA.CharHolder._type();org.omg.CORBA.CharSeqHolder._type();org.omg.CORBA.CurrentHolder._type();org.omg.CORBA.DoubleHolder._type();org.omg.CORBA.DoubleSeqHolder._type();org.omg.CORBA.FixedHolder._type();org.omg.CORBA.FloatHolder._type();org.omg.CORBA.FloatSeqHolder._type();org.omg.CORBA.IntHolder._type();org.omg.CORBA.LongHolder._type();org.omg.CORBA.LongLongSeqHolder._type();org.omg.CORBA.LongSeqHolder._type();org.omg.CORBA.ObjectHolder._type();org.omg.CORBA.OctetSeqHolder._type();org.omg.CORBA.ParameterModeHolder._type();org.omg.CORBA.PolicyErrorHolder._type();org.omg.CORBA.PolicyHolder._type();org.omg.CORBA.PolicyListHolder._type();org.omg.CORBA.PrincipalHolder._type();org.omg.CORBA.ServiceInformationHolder._type();org.omg.CORBA.ShortHolder._type();org.omg.CORBA.ShortSeqHolder._type();org.omg.CORBA.StringHolder._type();org.omg.CORBA.StringSeqHolder._type();org.omg.CORBA.TypeCodeHolder._type();org.omg.CORBA.ULongLongSeqHolder._type();org.omg.CORBA.ULongSeqHolder._type();org.omg.CORBA.UnknownUserExceptionHolder._type();org.omg.CORBA.UShortSeqHolder._type();org.omg.CORBA.ValueBaseHolder._type();org.omg.CORBA.WCharSeqHolder._type();org.omg.CORBA.WrongTransactionHolder._type();org.omg.CORBA.WStringSeqHolder._type();org.omg.CosNaming.BindingHolder._type();org.omg.CosNaming.BindingIteratorHolder._type();org.omg.CosNaming.BindingListHolder._type();org.omg.CosNaming.BindingTypeHolder._type();org.omg.CosNaming.NameComponentHolder._type();org.omg.CosNaming.NameHolder._type();org.omg.CosNaming.NamingContextExtHolder._type();org.omg.CosNaming.NamingContextHolder._type();org.omg.CosNaming.NamingContextExtPackage.InvalidAddressHolder._type();org.omg.CosNaming.NamingContextPackage.AlreadyBoundHolder._type();org.omg.CosNaming.NamingContextPackage.CannotProceedHolder._type();org.omg.CosNaming.NamingContextPackage.InvalidNameHolder._type();org.omg.CosNaming.NamingContextPackage.NotEmptyHolder._type();org.omg.CosNaming.NamingContextPackage.NotFoundHolder._type();org.omg.CosNaming.NamingContextPackage.NotFoundReasonHolder._type();org.omg.IOP.IORHolder._type();org.omg.IOP.MultipleComponentProfileHolder._type();org.omg.IOP.ServiceContextHolder._type();org.omg.IOP.ServiceContextListHolder._type();org.omg.IOP.TaggedComponentHolder._type();org.omg.IOP.TaggedProfileHolder._type();org.omg.PortableInterceptor.IORInterceptor_3_0Holder._type();org.omg.PortableInterceptor.ObjectReferenceFactoryHolder._type();org.omg.PortableInterceptor.ObjectReferenceTemplateHolder._type();org.omg.PortableInterceptor.ObjectReferenceTemplateSeqHolder._type();org.omg.PortableServer.ServantLocatorPackage.CookieHolder._type(),;0.11;0.75;0.10;0.75;0.11;0.11;0.75;0.75;0.04;0.75;0.04;0.04;0.75;0.09;0.11;0.75;0.75;0.11;0.75;0.75;0.75;0.75;0.75;0.00;0.09;0.11;0.75;0.10;0.75;0.11;0.75;0.75;0.75;0.75;0.11;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75
_write,64,0.75,The purpose of the _write method in Java is to write a serialized representation of an object to an output stream. This method is typically used in object serialization to convert an object into a stream of bytes that can be transmitted or stored for later use.,;org.omg.CORBA.AnyHolder._write(OutputStream);org.omg.CORBA.AnySeqHolder._write(OutputStream);org.omg.CORBA.BooleanHolder._write(OutputStream);org.omg.CORBA.BooleanSeqHolder._write(OutputStream);org.omg.CORBA.ByteHolder._write(OutputStream);org.omg.CORBA.CharHolder._write(OutputStream);org.omg.CORBA.CharSeqHolder._write(OutputStream);org.omg.CORBA.CurrentHolder._write(OutputStream);org.omg.CORBA.DoubleHolder._write(OutputStream);org.omg.CORBA.DoubleSeqHolder._write(OutputStream);org.omg.CORBA.FixedHolder._write(OutputStream);org.omg.CORBA.FloatHolder._write(OutputStream);org.omg.CORBA.FloatSeqHolder._write(OutputStream);org.omg.CORBA.IntHolder._write(OutputStream);org.omg.CORBA.LongHolder._write(OutputStream);org.omg.CORBA.LongLongSeqHolder._write(OutputStream);org.omg.CORBA.LongSeqHolder._write(OutputStream);org.omg.CORBA.ObjectHolder._write(OutputStream);org.omg.CORBA.OctetSeqHolder._write(OutputStream);org.omg.CORBA.ParameterModeHolder._write(OutputStream);org.omg.CORBA.PolicyErrorHolder._write(OutputStream);org.omg.CORBA.PolicyHolder._write(OutputStream);org.omg.CORBA.PolicyListHolder._write(OutputStream);org.omg.CORBA.PrincipalHolder._write(OutputStream);org.omg.CORBA.ServiceInformationHolder._write(OutputStream);org.omg.CORBA.ShortHolder._write(OutputStream);org.omg.CORBA.ShortSeqHolder._write(OutputStream);org.omg.CORBA.StringHolder._write(OutputStream);org.omg.CORBA.StringSeqHolder._write(OutputStream);org.omg.CORBA.TypeCodeHolder._write(OutputStream);org.omg.CORBA.ULongLongSeqHolder._write(OutputStream);org.omg.CORBA.ULongSeqHolder._write(OutputStream);org.omg.CORBA.UnknownUserExceptionHolder._write(OutputStream);org.omg.CORBA.UShortSeqHolder._write(OutputStream);org.omg.CORBA.ValueBaseHolder._write(OutputStream);org.omg.CORBA.WCharSeqHolder._write(OutputStream);org.omg.CORBA.WrongTransactionHolder._write(OutputStream);org.omg.CORBA.WStringSeqHolder._write(OutputStream);org.omg.CosNaming.BindingHolder._write(OutputStream);org.omg.CosNaming.BindingIteratorHolder._write(OutputStream);org.omg.CosNaming.BindingListHolder._write(OutputStream);org.omg.CosNaming.BindingTypeHolder._write(OutputStream);org.omg.CosNaming.NameComponentHolder._write(OutputStream);org.omg.CosNaming.NameHolder._write(OutputStream);org.omg.CosNaming.NamingContextExtHolder._write(OutputStream);org.omg.CosNaming.NamingContextHolder._write(OutputStream);org.omg.CosNaming.NamingContextExtPackage.InvalidAddressHolder._write(OutputStream);org.omg.CosNaming.NamingContextPackage.AlreadyBoundHolder._write(OutputStream);org.omg.CosNaming.NamingContextPackage.CannotProceedHolder._write(OutputStream);org.omg.CosNaming.NamingContextPackage.InvalidNameHolder._write(OutputStream);org.omg.CosNaming.NamingContextPackage.NotEmptyHolder._write(OutputStream);org.omg.CosNaming.NamingContextPackage.NotFoundHolder._write(OutputStream);org.omg.CosNaming.NamingContextPackage.NotFoundReasonHolder._write(OutputStream);org.omg.IOP.IORHolder._write(OutputStream);org.omg.IOP.MultipleComponentProfileHolder._write(OutputStream);org.omg.IOP.ServiceContextHolder._write(OutputStream);org.omg.IOP.ServiceContextListHolder._write(OutputStream);org.omg.IOP.TaggedComponentHolder._write(OutputStream);org.omg.IOP.TaggedProfileHolder._write(OutputStream);org.omg.PortableInterceptor.IORInterceptor_3_0Holder._write(OutputStream);org.omg.PortableInterceptor.ObjectReferenceFactoryHolder._write(OutputStream);org.omg.PortableInterceptor.ObjectReferenceTemplateHolder._write(OutputStream);org.omg.PortableInterceptor.ObjectReferenceTemplateSeqHolder._write(OutputStream);org.omg.PortableServer.ServantLocatorPackage.CookieHolder._write(OutputStream),;0.10;0.75;0.06;0.75;0.10;0.10;0.75;0.75;0.03;0.75;0.03;0.02;0.75;0.06;0.09;0.75;0.75;0.10;0.75;0.75;0.75;0.75;0.75;0.00;0.06;0.10;0.75;0.03;0.75;0.10;0.75;0.75;0.75;0.75;0.09;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75;0.75
getMaximumSize,66,0.454545455,"The purpose of the getMaximumSize method in Java is to obtain the maximum size of a component, which is the largest size that the component can be without compromising its functionality or appearance.",";java.awt.Component.getMaximumSize();java.awt.Container.getMaximumSize();javax.swing.JComponent.getMaximumSize();javax.swing.JScrollBar.getMaximumSize();javax.swing.JToolBar.Separator.getMaximumSize();javax.swing.plaf.ComponentUI.getMaximumSize(JComponent);javax.swing.plaf.LayerUI.getMaximumSize(JComponent);javax.swing.plaf.basic.BasicArrowButton.getMaximumSize();javax.swing.plaf.basic.BasicButtonUI.getMaximumSize(JComponent);javax.swing.plaf.basic.BasicComboBoxUI.getMaximumSize(JComponent);javax.swing.plaf.basic.BasicDesktopIconUI.getMaximumSize(JComponent);javax.swing.plaf.basic.BasicDesktopPaneUI.getMaximumSize(JComponent);javax.swing.plaf.basic.BasicInternalFrameUI.getMaximumSize(JComponent);javax.swing.plaf.basic.BasicLabelUI.getMaximumSize(JComponent);javax.swing.plaf.basic.BasicMenuBarUI.getMaximumSize(JComponent);javax.swing.plaf.basic.BasicMenuItemUI.getMaximumSize(JComponent);javax.swing.plaf.basic.BasicMenuUI.getMaximumSize(JComponent);javax.swing.plaf.basic.BasicProgressBarUI.getMaximumSize(JComponent);javax.swing.plaf.basic.BasicScrollBarUI.getMaximumSize(JComponent);javax.swing.plaf.basic.BasicScrollPaneUI.getMaximumSize(JComponent);javax.swing.plaf.basic.BasicSeparatorUI.getMaximumSize(JComponent);javax.swing.plaf.basic.BasicSliderUI.getMaximumSize(JComponent);javax.swing.plaf.basic.BasicSplitPaneUI.getMaximumSize(JComponent);javax.swing.plaf.basic.BasicTabbedPaneUI.getMaximumSize(JComponent);javax.swing.plaf.basic.BasicTableHeaderUI.getMaximumSize(JComponent);javax.swing.plaf.basic.BasicTableUI.getMaximumSize(JComponent);javax.swing.plaf.basic.BasicTextUI.getMaximumSize(JComponent);javax.swing.plaf.basic.BasicToolTipUI.getMaximumSize(JComponent);javax.swing.plaf.basic.BasicTreeUI.getMaximumSize(JComponent);javax.swing.plaf.metal.MetalDesktopIconUI.getMaximumSize(JComponent);javax.swing.plaf.metal.MetalFileChooserUI.getMaximumSize(JComponent);javax.swing.plaf.metal.MetalScrollButton.getMaximumSize();javax.swing.plaf.multi.MultiButtonUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiColorChooserUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiComboBoxUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiDesktopIconUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiDesktopPaneUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiFileChooserUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiInternalFrameUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiLabelUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiListUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiMenuBarUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiMenuItemUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiOptionPaneUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiPanelUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiPopupMenuUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiProgressBarUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiRootPaneUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiScrollBarUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiScrollPaneUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiSeparatorUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiSliderUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiSpinnerUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiSplitPaneUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiTabbedPaneUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiTableHeaderUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiTableUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiTextUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiToolBarUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiToolTipUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiTreeUI.getMaximumSize(JComponent);javax.swing.plaf.multi.MultiViewportUI.getMaximumSize(JComponent);javax.swing.plaf.synth.SynthButtonUI.getMaximumSize(JComponent);javax.swing.plaf.synth.SynthGraphicsUtils.getMaximumSize(SynthContext,Font,String,Icon,int,int,int,int,int,int);javax.swing.plaf.synth.SynthLabelUI.getMaximumSize(JComponent);javax.swing.plaf.synth.SynthSeparatorUI.getMaximumSize(JComponent)",;0.03;0.02;0.02;0.02;0.04;0.06;0.02;0.05;0.25;0.25;0.02;0.25;0.25;0.25;0.25;0.25;0.25;0.25;0.25;0.25;0.25;0.25;0.03;0.25;0.03;0.03;0.03;0.25;0.03;0.18;0.05;0.18;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.45;0.06;0.03;0.06;0.06
getCategory,67,0.800442245,The purpose of the getCategory method in Java is to obtain the category of a particular object.,;javax.print.attribute.standard.Chromaticity.getCategory();javax.print.attribute.standard.ColorSupported.getCategory();javax.print.attribute.standard.Compression.getCategory();javax.print.attribute.standard.Copies.getCategory();javax.print.attribute.standard.CopiesSupported.getCategory();javax.print.attribute.standard.DateTimeAtCompleted.getCategory();javax.print.attribute.standard.DateTimeAtCreation.getCategory();javax.print.attribute.standard.DateTimeAtProcessing.getCategory();javax.print.attribute.standard.Destination.getCategory();javax.print.attribute.standard.DialogTypeSelection.getCategory();javax.print.attribute.standard.DocumentName.getCategory();javax.print.attribute.standard.Fidelity.getCategory();javax.print.attribute.standard.Finishings.getCategory();javax.print.attribute.standard.JobHoldUntil.getCategory();javax.print.attribute.standard.JobImpressions.getCategory();javax.print.attribute.standard.JobImpressionsCompleted.getCategory();javax.print.attribute.standard.JobImpressionsSupported.getCategory();javax.print.attribute.standard.JobKOctets.getCategory();javax.print.attribute.standard.JobKOctetsProcessed.getCategory();javax.print.attribute.standard.JobKOctetsSupported.getCategory();javax.print.attribute.standard.JobMediaSheets.getCategory();javax.print.attribute.standard.JobMediaSheetsCompleted.getCategory();javax.print.attribute.standard.JobMediaSheetsSupported.getCategory();javax.print.attribute.standard.JobMessageFromOperator.getCategory();javax.print.attribute.standard.JobName.getCategory();javax.print.attribute.standard.JobOriginatingUserName.getCategory();javax.print.attribute.standard.JobPriority.getCategory();javax.print.attribute.standard.JobPrioritySupported.getCategory();javax.print.attribute.standard.JobSheets.getCategory();javax.print.attribute.standard.JobState.getCategory();javax.print.attribute.standard.JobStateReason.getCategory();javax.print.attribute.standard.JobStateReasons.getCategory();javax.print.attribute.standard.Media.getCategory();javax.print.attribute.standard.MediaPrintableArea.getCategory();javax.print.attribute.standard.MediaSize.getCategory();javax.print.attribute.standard.MultipleDocumentHandling.getCategory();javax.print.attribute.standard.NumberOfDocuments.getCategory();javax.print.attribute.standard.NumberOfInterveningJobs.getCategory();javax.print.attribute.standard.NumberUp.getCategory();javax.print.attribute.standard.NumberUpSupported.getCategory();javax.print.attribute.standard.OrientationRequested.getCategory();javax.print.attribute.standard.OutputDeviceAssigned.getCategory();javax.print.attribute.standard.PageRanges.getCategory();javax.print.attribute.standard.PagesPerMinute.getCategory();javax.print.attribute.standard.PagesPerMinuteColor.getCategory();javax.print.attribute.standard.PDLOverrideSupported.getCategory();javax.print.attribute.standard.PresentationDirection.getCategory();javax.print.attribute.standard.PrinterInfo.getCategory();javax.print.attribute.standard.PrinterIsAcceptingJobs.getCategory();javax.print.attribute.standard.PrinterLocation.getCategory();javax.print.attribute.standard.PrinterMakeAndModel.getCategory();javax.print.attribute.standard.PrinterMessageFromOperator.getCategory();javax.print.attribute.standard.PrinterMoreInfo.getCategory();javax.print.attribute.standard.PrinterMoreInfoManufacturer.getCategory();javax.print.attribute.standard.PrinterName.getCategory();javax.print.attribute.standard.PrinterResolution.getCategory();javax.print.attribute.standard.PrinterState.getCategory();javax.print.attribute.standard.PrinterStateReason.getCategory();javax.print.attribute.standard.PrinterStateReasons.getCategory();javax.print.attribute.standard.PrinterURI.getCategory();javax.print.attribute.standard.PrintQuality.getCategory();javax.print.attribute.standard.QueuedJobCount.getCategory();javax.print.attribute.standard.ReferenceUriSchemesSupported.getCategory();javax.print.attribute.standard.RequestingUserName.getCategory();javax.print.attribute.standard.Severity.getCategory();javax.print.attribute.standard.SheetCollate.getCategory();javax.print.attribute.standard.Sides.getCategory(),;0.75;0.80;0.73;0.80;0.80;0.80;0.80;0.80;0.80;0.80;0.80;0.80;0.73;0.80;0.80;0.80;0.80;0.80;0.80;0.80;0.73;0.80;0.80;0.80;0.80;0.80;0.80;0.80;0.73;0.73;0.73;0.80;0.73;0.80;0.73;0.73;0.80;0.80;0.80;0.80;0.80;0.80;0.80;0.80;0.80;0.73;0.80;0.80;0.80;0.80;0.80;0.80;0.80;0.80;0.80;0.80;0.80;0.73;0.80;0.73;0.73;0.80;0.73;0.80;0.80;0.80;0.80
installUI,70,0.46669629,The purpose of the installUI method in Java is to install the user interface (UI) components and listeners associated with a particular UI object. This method is typically called when a UI object is created or when a different UI object is being installed.,;javax.swing.plaf.LayerUI.installUI(JComponent);javax.swing.plaf.basic.BasicButtonUI.installUI(JComponent);javax.swing.plaf.basic.BasicColorChooserUI.installUI(JComponent);javax.swing.plaf.basic.BasicComboBoxUI.installUI(JComponent);javax.swing.plaf.basic.BasicDesktopIconUI.installUI(JComponent);javax.swing.plaf.basic.BasicDesktopPaneUI.installUI(JComponent);javax.swing.plaf.basic.BasicFileChooserUI.installUI(JComponent);javax.swing.plaf.basic.BasicInternalFrameUI.installUI(JComponent);javax.swing.plaf.basic.BasicLabelUI.installUI(JComponent);javax.swing.plaf.basic.BasicListUI.installUI(JComponent);javax.swing.plaf.basic.BasicMenuBarUI.installUI(JComponent);javax.swing.plaf.basic.BasicMenuItemUI.installUI(JComponent);javax.swing.plaf.basic.BasicOptionPaneUI.installUI(JComponent);javax.swing.plaf.basic.BasicPanelUI.installUI(JComponent);javax.swing.plaf.basic.BasicPopupMenuUI.installUI(JComponent);javax.swing.plaf.basic.BasicProgressBarUI.installUI(JComponent);javax.swing.plaf.basic.BasicRootPaneUI.installUI(JComponent);javax.swing.plaf.basic.BasicScrollBarUI.installUI(JComponent);javax.swing.plaf.basic.BasicScrollPaneUI.installUI(JComponent);javax.swing.plaf.basic.BasicSeparatorUI.installUI(JComponent);javax.swing.plaf.basic.BasicSliderUI.installUI(JComponent);javax.swing.plaf.basic.BasicSpinnerUI.installUI(JComponent);javax.swing.plaf.basic.BasicSplitPaneUI.installUI(JComponent);javax.swing.plaf.basic.BasicTabbedPaneUI.installUI(JComponent);javax.swing.plaf.basic.BasicTableHeaderUI.installUI(JComponent);javax.swing.plaf.basic.BasicTableUI.installUI(JComponent);javax.swing.plaf.basic.BasicTextPaneUI.installUI(JComponent);javax.swing.plaf.basic.BasicToolBarUI.installUI(JComponent);javax.swing.plaf.basic.BasicToolTipUI.installUI(JComponent);javax.swing.plaf.basic.BasicTreeUI.installUI(JComponent);javax.swing.plaf.basic.BasicViewportUI.installUI(JComponent);javax.swing.plaf.metal.MetalFileChooserUI.installUI(JComponent);javax.swing.plaf.metal.MetalInternalFrameUI.installUI(JComponent);javax.swing.plaf.metal.MetalMenuBarUI.installUI(JComponent);javax.swing.plaf.metal.MetalRootPaneUI.installUI(JComponent);javax.swing.plaf.metal.MetalScrollPaneUI.installUI(JComponent);javax.swing.plaf.metal.MetalSliderUI.installUI(JComponent);javax.swing.plaf.metal.MetalToolBarUI.installUI(JComponent);javax.swing.plaf.metal.MetalToolTipUI.installUI(JComponent);javax.swing.plaf.metal.MetalTreeUI.installUI(JComponent);javax.swing.plaf.multi.MultiButtonUI.installUI(JComponent);javax.swing.plaf.multi.MultiColorChooserUI.installUI(JComponent);javax.swing.plaf.multi.MultiComboBoxUI.installUI(JComponent);javax.swing.plaf.multi.MultiDesktopIconUI.installUI(JComponent);javax.swing.plaf.multi.MultiDesktopPaneUI.installUI(JComponent);javax.swing.plaf.multi.MultiFileChooserUI.installUI(JComponent);javax.swing.plaf.multi.MultiInternalFrameUI.installUI(JComponent);javax.swing.plaf.multi.MultiLabelUI.installUI(JComponent);javax.swing.plaf.multi.MultiListUI.installUI(JComponent);javax.swing.plaf.multi.MultiMenuBarUI.installUI(JComponent);javax.swing.plaf.multi.MultiMenuItemUI.installUI(JComponent);javax.swing.plaf.multi.MultiOptionPaneUI.installUI(JComponent);javax.swing.plaf.multi.MultiPanelUI.installUI(JComponent);javax.swing.plaf.multi.MultiPopupMenuUI.installUI(JComponent);javax.swing.plaf.multi.MultiProgressBarUI.installUI(JComponent);javax.swing.plaf.multi.MultiRootPaneUI.installUI(JComponent);javax.swing.plaf.multi.MultiScrollBarUI.installUI(JComponent);javax.swing.plaf.multi.MultiScrollPaneUI.installUI(JComponent);javax.swing.plaf.multi.MultiSeparatorUI.installUI(JComponent);javax.swing.plaf.multi.MultiSliderUI.installUI(JComponent);javax.swing.plaf.multi.MultiSpinnerUI.installUI(JComponent);javax.swing.plaf.multi.MultiSplitPaneUI.installUI(JComponent);javax.swing.plaf.multi.MultiTabbedPaneUI.installUI(JComponent);javax.swing.plaf.multi.MultiTableHeaderUI.installUI(JComponent);javax.swing.plaf.multi.MultiTableUI.installUI(JComponent);javax.swing.plaf.multi.MultiTextUI.installUI(JComponent);javax.swing.plaf.multi.MultiToolBarUI.installUI(JComponent);javax.swing.plaf.multi.MultiToolTipUI.installUI(JComponent);javax.swing.plaf.multi.MultiTreeUI.installUI(JComponent);javax.swing.plaf.multi.MultiViewportUI.installUI(JComponent),;0.01;0.47;0.47;0.47;0.47;0.47;0.47;0.47;0.47;0.01;0.47;0.47;0.01;0.47;0.47;0.47;0.47;0.47;0.47;0.47;0.47;0.01;0.00;0.47;0.47;0.47;0.32;0.47;0.47;0.47;0.47;0.47;0.47;0.01;0.02;0.47;0.47;0.47;0.47;0.47;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43
uninstallUI,70,0.442857143,The purpose of the uninstallUI method in Java is to remove the user interface (UI) components and listeners associated with a particular UI object. This method is typically called when a UI object is no longer needed or when a different UI object is being installed.,;javax.swing.plaf.LayerUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicButtonUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicColorChooserUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicComboBoxUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicDesktopIconUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicDesktopPaneUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicEditorPaneUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicFileChooserUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicInternalFrameUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicLabelUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicListUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicMenuBarUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicMenuItemUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicOptionPaneUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicPanelUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicPopupMenuUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicProgressBarUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicRootPaneUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicScrollBarUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicScrollPaneUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicSeparatorUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicSliderUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicSpinnerUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicSplitPaneUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicTabbedPaneUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicTableHeaderUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicTableUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicTextUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicToolBarUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicToolTipUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicTreeUI.uninstallUI(JComponent);javax.swing.plaf.basic.BasicViewportUI.uninstallUI(JComponent);javax.swing.plaf.metal.MetalFileChooserUI.uninstallUI(JComponent);javax.swing.plaf.metal.MetalInternalFrameUI.uninstallUI(JComponent);javax.swing.plaf.metal.MetalMenuBarUI.uninstallUI(JComponent);javax.swing.plaf.metal.MetalRootPaneUI.uninstallUI(JComponent);javax.swing.plaf.metal.MetalScrollPaneUI.uninstallUI(JComponent);javax.swing.plaf.metal.MetalToolBarUI.uninstallUI(JComponent);javax.swing.plaf.metal.MetalToolTipUI.uninstallUI(JComponent);javax.swing.plaf.metal.MetalTreeUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiButtonUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiColorChooserUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiComboBoxUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiDesktopIconUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiDesktopPaneUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiFileChooserUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiInternalFrameUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiLabelUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiListUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiMenuBarUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiMenuItemUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiOptionPaneUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiPanelUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiPopupMenuUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiProgressBarUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiRootPaneUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiScrollBarUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiScrollPaneUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiSeparatorUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiSliderUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiSpinnerUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiSplitPaneUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiTabbedPaneUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiTableHeaderUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiTableUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiTextUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiToolBarUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiToolTipUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiTreeUI.uninstallUI(JComponent);javax.swing.plaf.multi.MultiViewportUI.uninstallUI(JComponent),;0.01;0.44;0.44;0.44;0.44;0.44;0.03;0.44;0.44;0.44;0.01;0.44;0.44;0.01;0.44;0.44;0.44;0.44;0.44;0.44;0.44;0.44;0.01;0.00;0.44;0.44;0.44;0.03;0.44;0.44;0.44;0.44;0.44;0.44;0.01;0.01;0.44;0.44;0.44;0.44;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43;0.43
getMinimumSize,75,0.4,"The purpose of the getMinimumSize method in Java is to obtain the minimum size of a component, which is the smallest size that the component can be without compromising its functionality or appearance.",";java.awt.Component.getMinimumSize();java.awt.Container.getMinimumSize();java.awt.List.getMinimumSize(int);java.awt.List.getMinimumSize();java.awt.TextArea.getMinimumSize(int,int);java.awt.TextArea.getMinimumSize();java.awt.TextField.getMinimumSize(int);java.awt.TextField.getMinimumSize();javax.swing.JComponent.getMinimumSize();javax.swing.JScrollBar.getMinimumSize();javax.swing.JToolBar.Separator.getMinimumSize();javax.swing.border.TitledBorder.getMinimumSize(Component);javax.swing.plaf.ComponentUI.getMinimumSize(JComponent);javax.swing.plaf.LayerUI.getMinimumSize(JComponent);javax.swing.plaf.basic.BasicArrowButton.getMinimumSize();javax.swing.plaf.basic.BasicButtonUI.getMinimumSize(JComponent);javax.swing.plaf.basic.BasicComboBoxUI.getMinimumSize(JComponent);javax.swing.plaf.basic.BasicDesktopIconUI.getMinimumSize(JComponent);javax.swing.plaf.basic.BasicDesktopPaneUI.getMinimumSize(JComponent);javax.swing.plaf.basic.BasicInternalFrameUI.getMinimumSize(JComponent);javax.swing.plaf.basic.BasicLabelUI.getMinimumSize(JComponent);javax.swing.plaf.basic.BasicMenuBarUI.getMinimumSize(JComponent);javax.swing.plaf.basic.BasicMenuItemUI.getMinimumSize(JComponent);javax.swing.plaf.basic.BasicProgressBarUI.getMinimumSize(JComponent);javax.swing.plaf.basic.BasicSeparatorUI.getMinimumSize(JComponent);javax.swing.plaf.basic.BasicSliderUI.getMinimumSize(JComponent);javax.swing.plaf.basic.BasicSplitPaneDivider.getMinimumSize();javax.swing.plaf.basic.BasicSplitPaneUI.getMinimumSize(JComponent);javax.swing.plaf.basic.BasicTabbedPaneUI.getMinimumSize(JComponent);javax.swing.plaf.basic.BasicTableHeaderUI.getMinimumSize(JComponent);javax.swing.plaf.basic.BasicTableUI.getMinimumSize(JComponent);javax.swing.plaf.basic.BasicTextAreaUI.getMinimumSize(JComponent);javax.swing.plaf.basic.BasicTextUI.getMinimumSize(JComponent);javax.swing.plaf.basic.BasicToolTipUI.getMinimumSize(JComponent);javax.swing.plaf.basic.BasicTreeUI.getMinimumSize(JComponent);javax.swing.plaf.metal.MetalComboBoxButton.getMinimumSize();javax.swing.plaf.metal.MetalComboBoxUI.getMinimumSize(JComponent);javax.swing.plaf.metal.MetalDesktopIconUI.getMinimumSize(JComponent);javax.swing.plaf.metal.MetalFileChooserUI.getMinimumSize(JComponent);javax.swing.plaf.metal.MetalScrollButton.getMinimumSize();javax.swing.plaf.multi.MultiButtonUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiColorChooserUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiComboBoxUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiDesktopIconUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiDesktopPaneUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiFileChooserUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiInternalFrameUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiLabelUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiListUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiMenuBarUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiMenuItemUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiOptionPaneUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiPanelUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiPopupMenuUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiProgressBarUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiRootPaneUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiScrollBarUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiScrollPaneUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiSeparatorUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiSliderUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiSpinnerUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiSplitPaneUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiTabbedPaneUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiTableHeaderUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiTableUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiTextUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiToolBarUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiToolTipUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiTreeUI.getMinimumSize(JComponent);javax.swing.plaf.multi.MultiViewportUI.getMinimumSize(JComponent);javax.swing.plaf.synth.SynthButtonUI.getMinimumSize(JComponent);javax.swing.plaf.synth.SynthGraphicsUtils.getMinimumSize(SynthContext,Font,String,Icon,int,int,int,int,int,int);javax.swing.plaf.synth.SynthLabelUI.getMinimumSize(JComponent);javax.swing.plaf.synth.SynthSeparatorUI.getMinimumSize(JComponent);javax.swing.plaf.synth.SynthSliderUI.getMinimumSize(JComponent)",;0.05;0.02;0.03;0.04;0.04;0.04;0.03;0.02;0.02;0.01;0.04;0.01;0.07;0.01;0.05;0.19;0.01;0.19;0.19;0.19;0.19;0.19;0.19;0.01;0.19;0.19;0.01;0.03;0.19;0.03;0.03;0.01;0.03;0.19;0.03;0.14;0.14;0.19;0.05;0.14;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.40;0.07;0.03;0.07;0.07;0.07
getAccessibleContext,76,0.52568225,"The purpose of the getAccessibleContext method in Java is to obtain the AccessibleContext associated with a component, which provides information about the component's accessibility features and allows assistive technologies to interact with the component.",;java.applet.Applet.getAccessibleContext();java.awt.Button.getAccessibleContext();java.awt.Canvas.getAccessibleContext();java.awt.Checkbox.getAccessibleContext();java.awt.CheckboxMenuItem.getAccessibleContext();java.awt.Choice.getAccessibleContext();java.awt.Component.getAccessibleContext();java.awt.Dialog.getAccessibleContext();java.awt.Frame.getAccessibleContext();java.awt.Label.getAccessibleContext();java.awt.List.getAccessibleContext();java.awt.Menu.getAccessibleContext();java.awt.MenuBar.getAccessibleContext();java.awt.MenuComponent.getAccessibleContext();java.awt.MenuItem.getAccessibleContext();java.awt.Panel.getAccessibleContext();java.awt.PopupMenu.getAccessibleContext();java.awt.Scrollbar.getAccessibleContext();java.awt.ScrollPane.getAccessibleContext();java.awt.TextArea.getAccessibleContext();java.awt.TextComponent.getAccessibleContext();java.awt.TextField.getAccessibleContext();java.awt.Window.getAccessibleContext();javax.swing.Box.getAccessibleContext();javax.swing.Box.Filler.getAccessibleContext();javax.swing.CellRendererPane.getAccessibleContext();javax.swing.ImageIcon.getAccessibleContext();javax.swing.JApplet.getAccessibleContext();javax.swing.JButton.getAccessibleContext();javax.swing.JCheckBox.getAccessibleContext();javax.swing.JCheckBoxMenuItem.getAccessibleContext();javax.swing.JColorChooser.getAccessibleContext();javax.swing.JComboBox.getAccessibleContext();javax.swing.JDesktopPane.getAccessibleContext();javax.swing.JDialog.getAccessibleContext();javax.swing.JEditorPane.getAccessibleContext();javax.swing.JFileChooser.getAccessibleContext();javax.swing.JFrame.getAccessibleContext();javax.swing.JInternalFrame.getAccessibleContext();javax.swing.JInternalFrame.JDesktopIcon.getAccessibleContext();javax.swing.JLabel.getAccessibleContext();javax.swing.JLayer.getAccessibleContext();javax.swing.JLayeredPane.getAccessibleContext();javax.swing.JList.getAccessibleContext();javax.swing.JMenu.getAccessibleContext();javax.swing.JMenuBar.getAccessibleContext();javax.swing.JMenuItem.getAccessibleContext();javax.swing.JOptionPane.getAccessibleContext();javax.swing.JPanel.getAccessibleContext();javax.swing.JPasswordField.getAccessibleContext();javax.swing.JPopupMenu.getAccessibleContext();javax.swing.JProgressBar.getAccessibleContext();javax.swing.JRadioButton.getAccessibleContext();javax.swing.JRadioButtonMenuItem.getAccessibleContext();javax.swing.JRootPane.getAccessibleContext();javax.swing.JScrollBar.getAccessibleContext();javax.swing.JScrollPane.getAccessibleContext();javax.swing.JSeparator.getAccessibleContext();javax.swing.JSlider.getAccessibleContext();javax.swing.JSpinner.getAccessibleContext();javax.swing.JSplitPane.getAccessibleContext();javax.swing.JTabbedPane.getAccessibleContext();javax.swing.JTable.getAccessibleContext();javax.swing.JTextArea.getAccessibleContext();javax.swing.JTextField.getAccessibleContext();javax.swing.JToggleButton.getAccessibleContext();javax.swing.JToolBar.getAccessibleContext();javax.swing.JToolTip.getAccessibleContext();javax.swing.JTree.getAccessibleContext();javax.swing.JViewport.getAccessibleContext();javax.swing.JWindow.getAccessibleContext();javax.swing.ProgressMonitor.getAccessibleContext();javax.swing.plaf.basic.BasicComboPopup.getAccessibleContext();javax.swing.table.JTableHeader.getAccessibleContext();javax.swing.text.JTextComponent.getAccessibleContext();javax.swing.text.html.HTMLEditorKit.getAccessibleContext(),;0.52;0.53;0.52;0.49;0.48;0.51;0.18;0.52;0.53;0.52;0.52;0.52;0.51;0.18;0.51;0.52;0.08;0.52;0.52;0.48;0.51;0.51;0.52;0.53;0.49;0.52;0.51;0.52;0.52;0.52;0.52;0.51;0.51;0.52;0.52;0.52;0.51;0.52;0.49;0.51;0.01;0.08;0.52;0.52;0.52;0.52;0.49;0.48;0.52;0.48;0.52;0.51;0.52;0.52;0.52;0.52;0.52;0.52;0.52;0.02;0.52;0.52;0.52;0.52;0.52;0.51;0.51;0.51;0.52;0.52;0.52;0.02;0.19;0.52;0.51;0.08
paintBorder,78,0.256410256,The paintBorder() method in Java is used to draw the border of a Swing component.,";javax.swing.AbstractButton.paintBorder(Graphics);javax.swing.JComponent.paintBorder(Graphics);javax.swing.JMenuBar.paintBorder(Graphics);javax.swing.JPopupMenu.paintBorder(Graphics);javax.swing.JProgressBar.paintBorder(Graphics);javax.swing.JToolBar.paintBorder(Graphics);javax.swing.border.AbstractBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.border.BevelBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.border.CompoundBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.border.EmptyBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.border.EtchedBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.border.LineBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.border.MatteBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.border.SoftBevelBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.border.StrokeBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.border.TitledBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.plaf.BorderUIResource.paintBorder(Component,Graphics,int,int,int,int);javax.swing.plaf.basic.BasicBorders.ButtonBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.plaf.basic.BasicBorders.FieldBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.plaf.basic.BasicBorders.MenuBarBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.plaf.basic.BasicBorders.RadioButtonBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.plaf.basic.BasicBorders.RolloverButtonBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.plaf.basic.BasicBorders.SplitPaneBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.plaf.basic.BasicBorders.ToggleButtonBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.plaf.metal.MetalBorders.ButtonBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.plaf.metal.MetalBorders.Flush3DBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.plaf.metal.MetalBorders.InternalFrameBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.plaf.metal.MetalBorders.MenuBarBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.plaf.metal.MetalBorders.MenuItemBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.plaf.metal.MetalBorders.OptionDialogBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.plaf.metal.MetalBorders.PaletteBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.plaf.metal.MetalBorders.PopupMenuBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.plaf.metal.MetalBorders.RolloverButtonBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.plaf.metal.MetalBorders.ScrollPaneBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.plaf.metal.MetalBorders.TableHeaderBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.plaf.metal.MetalBorders.TextFieldBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.plaf.metal.MetalBorders.ToggleButtonBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.plaf.metal.MetalBorders.ToolBarBorder.paintBorder(Component,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthButtonUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthCheckBoxMenuItemUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthCheckBoxUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthColorChooserUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthComboBoxUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthDesktopIconUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthDesktopPaneUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthEditorPaneUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthFormattedTextFieldUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthInternalFrameUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthLabelUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthListUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthMenuBarUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthMenuItemUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthMenuUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthOptionPaneUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPanelUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPasswordFieldUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthPopupMenuUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthProgressBarUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthRadioButtonMenuItemUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthRadioButtonUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthRootPaneUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthScrollBarUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthScrollPaneUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthSeparatorUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthSliderUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthSpinnerUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthSplitPaneUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthTabbedPaneUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthTableHeaderUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthTableUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthTextAreaUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthTextFieldUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthTextPaneUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthToggleButtonUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthToolBarUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthToolTipUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthTreeUI.paintBorder(SynthContext,Graphics,int,int,int,int);javax.swing.plaf.synth.SynthViewportUI.paintBorder(SynthContext,Graphics,int,int,int,int)",;0.02;0.01;0.02;0.03;0.03;0.03;0.01;0.07;0.02;0.01;0.07;0.07;0.01;0.07;0.03;0.07;0.03;0.26;0.26;0.26;0.26;0.26;0.03;0.26;0.26;0.26;0.26;0.26;0.26;0.26;0.26;0.26;0.26;0.26;0.26;0.26;0.26;0.26;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.01
paramString,85,0.69600978,"Returns a string representation of this JWindow. This method is intended to be used only for debugging purposes, and the content and format of the returned string may vary between implementations. The returned string may be empty but may not be null.",;java.awt.AWTEvent.paramString();java.awt.Button.paramString();java.awt.Checkbox.paramString();java.awt.CheckboxMenuItem.paramString();java.awt.Choice.paramString();java.awt.Component.paramString();java.awt.Container.paramString();java.awt.Dialog.paramString();java.awt.Event.paramString();java.awt.FileDialog.paramString();java.awt.Frame.paramString();java.awt.Label.paramString();java.awt.List.paramString();java.awt.Menu.paramString();java.awt.MenuComponent.paramString();java.awt.MenuItem.paramString();java.awt.MenuShortcut.paramString();java.awt.Scrollbar.paramString();java.awt.ScrollPane.paramString();java.awt.ScrollPaneAdjustable.paramString();java.awt.TextArea.paramString();java.awt.TextComponent.paramString();java.awt.TextField.paramString();java.awt.event.ActionEvent.paramString();java.awt.event.AdjustmentEvent.paramString();java.awt.event.ComponentEvent.paramString();java.awt.event.ContainerEvent.paramString();java.awt.event.FocusEvent.paramString();java.awt.event.HierarchyEvent.paramString();java.awt.event.InputMethodEvent.paramString();java.awt.event.InvocationEvent.paramString();java.awt.event.ItemEvent.paramString();java.awt.event.KeyEvent.paramString();java.awt.event.MouseEvent.paramString();java.awt.event.MouseWheelEvent.paramString();java.awt.event.PaintEvent.paramString();java.awt.event.TextEvent.paramString();java.awt.event.WindowEvent.paramString();javax.swing.AbstractButton.paramString();javax.swing.JApplet.paramString();javax.swing.JButton.paramString();javax.swing.JCheckBox.paramString();javax.swing.JCheckBoxMenuItem.paramString();javax.swing.JColorChooser.paramString();javax.swing.JComboBox.paramString();javax.swing.JComponent.paramString();javax.swing.JDesktopPane.paramString();javax.swing.JDialog.paramString();javax.swing.JEditorPane.paramString();javax.swing.JFileChooser.paramString();javax.swing.JFrame.paramString();javax.swing.JInternalFrame.paramString();javax.swing.JLabel.paramString();javax.swing.JLayeredPane.paramString();javax.swing.JList.paramString();javax.swing.JMenu.paramString();javax.swing.JMenuBar.paramString();javax.swing.JMenuItem.paramString();javax.swing.JOptionPane.paramString();javax.swing.JPanel.paramString();javax.swing.JPasswordField.paramString();javax.swing.JPopupMenu.paramString();javax.swing.JProgressBar.paramString();javax.swing.JRadioButton.paramString();javax.swing.JRadioButtonMenuItem.paramString();javax.swing.JRootPane.paramString();javax.swing.JScrollBar.paramString();javax.swing.JScrollPane.paramString();javax.swing.JSeparator.paramString();javax.swing.JSlider.paramString();javax.swing.JSplitPane.paramString();javax.swing.JTabbedPane.paramString();javax.swing.JTable.paramString();javax.swing.JTextArea.paramString();javax.swing.JTextField.paramString();javax.swing.JTextPane.paramString();javax.swing.JToggleButton.paramString();javax.swing.JToolBar.paramString();javax.swing.JToolTip.paramString();javax.swing.JTree.paramString();javax.swing.JViewport.paramString();javax.swing.JWindow.paramString();javax.swing.event.InternalFrameEvent.paramString();javax.swing.table.JTableHeader.paramString();javax.swing.text.JTextComponent.paramString(),;0.67;0.67;0.67;0.67;0.66;0.67;0.67;0.67;0.44;0.66;0.67;0.67;0.04;0.67;0.67;0.67;0.04;0.67;0.67;0.67;0.67;0.67;0.67;0.13;0.02;0.15;0.15;0.15;0.15;0.06;0.15;0.13;0.15;0.15;0.15;0.02;0.13;0.15;0.55;0.70;0.70;0.62;0.70;0.70;0.70;0.70;0.70;0.70;0.70;0.70;0.70;0.70;0.70;0.70;0.57;0.70;0.70;0.70;0.70;0.70;0.70;0.70;0.63;0.70;0.70;0.70;0.70;0.70;0.70;0.70;0.70;0.70;0.70;0.70;0.70;0.70;0.70;0.70;0.70;0.70;0.70;0.70;0.15;0.55;0.55
put,85,0.149747124,The put() method in Java is used to add a key-value pair to a map.,";java.awt.RenderingHints.put(Object,Object);java.io.ObjectOutputStream.PutField.put(String,boolean);java.io.ObjectOutputStream.PutField.put(String,byte);java.io.ObjectOutputStream.PutField.put(String,char);java.io.ObjectOutputStream.PutField.put(String,short);java.io.ObjectOutputStream.PutField.put(String,int);java.io.ObjectOutputStream.PutField.put(String,long);java.io.ObjectOutputStream.PutField.put(String,float);java.io.ObjectOutputStream.PutField.put(String,double);java.io.ObjectOutputStream.PutField.put(String,Object);java.net.CookieHandler.put(URI,Map&lt;String,List&lt;String&gt;&gt;);java.net.CookieManager.put(URI,Map&lt;String,List&lt;String&gt;&gt;);java.net.ResponseCache.put(URI,URLConnection);java.nio.ByteBuffer.put(byte);java.nio.ByteBuffer.put(int,byte);java.nio.ByteBuffer.put(ByteBuffer);java.nio.ByteBuffer.put(byte[],int,int);java.nio.ByteBuffer.put(byte[]);java.nio.CharBuffer.put(char);java.nio.CharBuffer.put(int,char);java.nio.CharBuffer.put(CharBuffer);java.nio.CharBuffer.put(char[],int,int);java.nio.CharBuffer.put(char[]);java.nio.CharBuffer.put(String,int,int);java.nio.CharBuffer.put(String);java.nio.DoubleBuffer.put(double);java.nio.DoubleBuffer.put(int,double);java.nio.DoubleBuffer.put(DoubleBuffer);java.nio.DoubleBuffer.put(double[],int,int);java.nio.DoubleBuffer.put(double[]);java.nio.FloatBuffer.put(float);java.nio.FloatBuffer.put(int,float);java.nio.FloatBuffer.put(FloatBuffer);java.nio.FloatBuffer.put(float[],int,int);java.nio.FloatBuffer.put(float[]);java.nio.IntBuffer.put(int);java.nio.IntBuffer.put(int,int);java.nio.IntBuffer.put(IntBuffer);java.nio.IntBuffer.put(int[],int,int);java.nio.IntBuffer.put(int[]);java.nio.LongBuffer.put(long);java.nio.LongBuffer.put(int,long);java.nio.LongBuffer.put(LongBuffer);java.nio.LongBuffer.put(long[],int,int);java.nio.LongBuffer.put(long[]);java.nio.ShortBuffer.put(short);java.nio.ShortBuffer.put(int,short);java.nio.ShortBuffer.put(ShortBuffer);java.nio.ShortBuffer.put(short[],int,int);java.nio.ShortBuffer.put(short[]);java.security.Provider.put(Object,Object);java.util.AbstractMap.put(K,V);java.util.Dictionary.put(K,V);java.util.EnumMap.put(K,V);java.util.HashMap.put(K,V);java.util.Hashtable.put(K,V);java.util.IdentityHashMap.put(K,V);java.util.TreeMap.put(K,V);java.util.WeakHashMap.put(K,V);java.util.concurrent.ArrayBlockingQueue.put(E);java.util.concurrent.ConcurrentHashMap.put(K,V);java.util.concurrent.ConcurrentSkipListMap.put(K,V);java.util.concurrent.DelayQueue.put(E);java.util.concurrent.LinkedBlockingDeque.put(E);java.util.concurrent.LinkedBlockingQueue.put(E);java.util.concurrent.LinkedTransferQueue.put(E);java.util.concurrent.PriorityBlockingQueue.put(E);java.util.concurrent.SynchronousQueue.put(E);java.util.jar.Attributes.put(Object,Object);java.util.prefs.AbstractPreferences.put(String,String);java.util.prefs.Preferences.put(String,String);javax.management.openmbean.TabularDataSupport.put(Object,Object);javax.management.openmbean.TabularDataSupport.put(CompositeData);javax.naming.directory.BasicAttributes.put(String,Object);javax.naming.directory.BasicAttributes.put(Attribute);javax.print.attribute.standard.PrinterStateReasons.put(PrinterStateReason,Severity);javax.script.AbstractScriptEngine.put(String,Object);javax.script.ScriptEngineManager.put(String,Object);javax.script.SimpleBindings.put(String,Object);javax.swing.ActionMap.put(Object,Action);javax.swing.ComponentInputMap.put(KeyStroke,Object);javax.swing.InputMap.put(KeyStroke,Object);javax.swing.UIDefaults.put(Object,Object);javax.swing.UIManager.put(Object,Object);javax.xml.crypto.dom.DOMCryptoContext.put(Object,Object)",;0.04;0.08;0.08;0.08;0.08;0.08;0.08;0.08;0.08;0.08;0.01;0.01;0.01;0.12;0.11;0.15;0.15;0.11;0.12;0.11;0.15;0.15;0.11;0.13;0.10;0.12;0.11;0.15;0.15;0.11;0.12;0.11;0.15;0.15;0.11;0.12;0.11;0.15;0.15;0.11;0.12;0.11;0.15;0.15;0.11;0.12;0.11;0.15;0.15;0.11;0.01;0.05;0.02;0.08;0.09;0.04;0.08;0.09;0.08;0.03;0.04;0.09;0.03;0.04;0.03;0.04;0.03;0.02;0.06;0.01;0.04;0.01;0.04;0.04;0.04;0.03;0.04;0.02;0.02;0.02;0.03;0.03;0.01;0.01;0.01
close,86,0.128841472,"Closes this input stream and releases any system resources associated with the stream. Once the stream has been closed, further read(), available(), reset(), or skip() invocations will throw an IOException. Closing a previously closed stream has no effect.",;java.awt.SplashScreen.close();java.beans.XMLDecoder.close();java.beans.XMLEncoder.close();java.io.BufferedInputStream.close();java.io.BufferedReader.close();java.io.BufferedWriter.close();java.io.ByteArrayInputStream.close();java.io.ByteArrayOutputStream.close();java.io.CharArrayReader.close();java.io.CharArrayWriter.close();java.io.FileInputStream.close();java.io.FileOutputStream.close();java.io.FilterInputStream.close();java.io.FilterOutputStream.close();java.io.FilterReader.close();java.io.FilterWriter.close();java.io.InputStream.close();java.io.InputStreamReader.close();java.io.ObjectInputStream.close();java.io.ObjectOutputStream.close();java.io.OutputStream.close();java.io.OutputStreamWriter.close();java.io.PipedInputStream.close();java.io.PipedOutputStream.close();java.io.PipedReader.close();java.io.PipedWriter.close();java.io.PrintStream.close();java.io.PrintWriter.close();java.io.PushbackInputStream.close();java.io.PushbackReader.close();java.io.RandomAccessFile.close();java.io.Reader.close();java.io.SequenceInputStream.close();java.io.StringReader.close();java.io.StringWriter.close();java.io.Writer.close();java.net.DatagramSocket.close();java.net.DatagramSocketImpl.close();java.net.ServerSocket.close();java.net.Socket.close();java.net.SocketImpl.close();java.net.URLClassLoader.close();java.nio.channels.FileLock.close();java.nio.channels.Selector.close();java.nio.channels.spi.AbstractInterruptibleChannel.close();java.nio.channels.spi.AbstractSelector.close();java.nio.file.FileSystem.close();java.util.Formatter.close();java.util.Scanner.close();java.util.logging.ConsoleHandler.close();java.util.logging.FileHandler.close();java.util.logging.Handler.close();java.util.logging.MemoryHandler.close();java.util.logging.SocketHandler.close();java.util.logging.StreamHandler.close();java.util.zip.DeflaterInputStream.close();java.util.zip.DeflaterOutputStream.close();java.util.zip.GZIPInputStream.close();java.util.zip.InflaterInputStream.close();java.util.zip.InflaterOutputStream.close();java.util.zip.ZipFile.close();java.util.zip.ZipInputStream.close();java.util.zip.ZipOutputStream.close();javax.crypto.CipherInputStream.close();javax.crypto.CipherOutputStream.close();javax.imageio.stream.FileCacheImageInputStream.close();javax.imageio.stream.FileCacheImageOutputStream.close();javax.imageio.stream.FileImageInputStream.close();javax.imageio.stream.FileImageOutputStream.close();javax.imageio.stream.ImageInputStreamImpl.close();javax.imageio.stream.MemoryCacheImageInputStream.close();javax.imageio.stream.MemoryCacheImageOutputStream.close();javax.management.remote.rmi.RMIConnectionImpl.close();javax.management.remote.rmi.RMIConnectionImpl_Stub.close();javax.management.remote.rmi.RMIConnector.close();javax.management.remote.rmi.RMIServerImpl.close();javax.naming.InitialContext.close();javax.naming.ldap.StartTlsResponse.close();javax.sound.sampled.AudioInputStream.close();javax.swing.ProgressMonitor.close();javax.swing.ProgressMonitorInputStream.close();javax.tools.ForwardingJavaFileManager.close();javax.xml.soap.SOAPConnection.close();javax.xml.stream.util.EventReaderDelegate.close();javax.xml.stream.util.StreamReaderDelegate.close();javax.xml.ws.spi.http.HttpExchange.close(),;0.01;0.02;0.02;0.13;0.06;0.06;0.04;0.04;0.12;0.01;0.11;0.09;0.12;0.09;0.06;0.06;0.12;0.06;0.05;0.05;0.07;0.06;0.11;0.09;0.10;0.09;0.02;0.10;0.13;0.12;0.09;0.12;0.08;0.11;0.04;0.05;0.03;0.00;0.03;0.02;0.00;0.01;0.01;0.02;0.02;0.02;0.02;0.02;0.02;0.01;0.01;0.02;0.01;0.01;0.01;0.03;0.02;0.12;0.12;0.02;0.01;0.12;0.02;0.11;0.05;0.02;0.02;0.09;0.09;0.09;0.02;0.02;0.09;0.09;0.08;0.01;0.08;0.01;0.11;0.01;0.02;0.08;0.01;0.08;0.08;0.01
createUI,87,0.356321839,Creates a new UI object for the given component.,;javax.swing.plaf.ComponentUI.createUI(JComponent);javax.swing.plaf.basic.BasicEditorPaneUI.createUI(JComponent);javax.swing.plaf.basic.BasicFileChooserUI.createUI(JComponent);javax.swing.plaf.basic.BasicFormattedTextFieldUI.createUI(JComponent);javax.swing.plaf.basic.BasicLabelUI.createUI(JComponent);javax.swing.plaf.basic.BasicListUI.createUI(JComponent);javax.swing.plaf.basic.BasicOptionPaneUI.createUI(JComponent);javax.swing.plaf.basic.BasicPasswordFieldUI.createUI(JComponent);javax.swing.plaf.basic.BasicRadioButtonUI.createUI(JComponent);javax.swing.plaf.basic.BasicSpinnerUI.createUI(JComponent);javax.swing.plaf.basic.BasicSplitPaneUI.createUI(JComponent);javax.swing.plaf.basic.BasicTextAreaUI.createUI(JComponent);javax.swing.plaf.basic.BasicTextFieldUI.createUI(JComponent);javax.swing.plaf.basic.BasicTextPaneUI.createUI(JComponent);javax.swing.plaf.metal.MetalMenuBarUI.createUI(JComponent);javax.swing.plaf.metal.MetalRootPaneUI.createUI(JComponent);javax.swing.plaf.metal.MetalSplitPaneUI.createUI(JComponent);javax.swing.plaf.multi.MultiButtonUI.createUI(JComponent);javax.swing.plaf.multi.MultiColorChooserUI.createUI(JComponent);javax.swing.plaf.multi.MultiComboBoxUI.createUI(JComponent);javax.swing.plaf.multi.MultiDesktopIconUI.createUI(JComponent);javax.swing.plaf.multi.MultiDesktopPaneUI.createUI(JComponent);javax.swing.plaf.multi.MultiFileChooserUI.createUI(JComponent);javax.swing.plaf.multi.MultiInternalFrameUI.createUI(JComponent);javax.swing.plaf.multi.MultiLabelUI.createUI(JComponent);javax.swing.plaf.multi.MultiListUI.createUI(JComponent);javax.swing.plaf.multi.MultiMenuBarUI.createUI(JComponent);javax.swing.plaf.multi.MultiMenuItemUI.createUI(JComponent);javax.swing.plaf.multi.MultiOptionPaneUI.createUI(JComponent);javax.swing.plaf.multi.MultiPanelUI.createUI(JComponent);javax.swing.plaf.multi.MultiPopupMenuUI.createUI(JComponent);javax.swing.plaf.multi.MultiProgressBarUI.createUI(JComponent);javax.swing.plaf.multi.MultiRootPaneUI.createUI(JComponent);javax.swing.plaf.multi.MultiScrollBarUI.createUI(JComponent);javax.swing.plaf.multi.MultiScrollPaneUI.createUI(JComponent);javax.swing.plaf.multi.MultiSeparatorUI.createUI(JComponent);javax.swing.plaf.multi.MultiSliderUI.createUI(JComponent);javax.swing.plaf.multi.MultiSpinnerUI.createUI(JComponent);javax.swing.plaf.multi.MultiSplitPaneUI.createUI(JComponent);javax.swing.plaf.multi.MultiTabbedPaneUI.createUI(JComponent);javax.swing.plaf.multi.MultiTableHeaderUI.createUI(JComponent);javax.swing.plaf.multi.MultiTableUI.createUI(JComponent);javax.swing.plaf.multi.MultiTextUI.createUI(JComponent);javax.swing.plaf.multi.MultiToolBarUI.createUI(JComponent);javax.swing.plaf.multi.MultiToolTipUI.createUI(JComponent);javax.swing.plaf.multi.MultiTreeUI.createUI(JComponent);javax.swing.plaf.multi.MultiViewportUI.createUI(JComponent);javax.swing.plaf.synth.SynthButtonUI.createUI(JComponent);javax.swing.plaf.synth.SynthCheckBoxMenuItemUI.createUI(JComponent);javax.swing.plaf.synth.SynthCheckBoxUI.createUI(JComponent);javax.swing.plaf.synth.SynthColorChooserUI.createUI(JComponent);javax.swing.plaf.synth.SynthComboBoxUI.createUI(JComponent);javax.swing.plaf.synth.SynthDesktopIconUI.createUI(JComponent);javax.swing.plaf.synth.SynthDesktopPaneUI.createUI(JComponent);javax.swing.plaf.synth.SynthEditorPaneUI.createUI(JComponent);javax.swing.plaf.synth.SynthFormattedTextFieldUI.createUI(JComponent);javax.swing.plaf.synth.SynthInternalFrameUI.createUI(JComponent);javax.swing.plaf.synth.SynthLabelUI.createUI(JComponent);javax.swing.plaf.synth.SynthListUI.createUI(JComponent);javax.swing.plaf.synth.SynthLookAndFeel.createUI(JComponent);javax.swing.plaf.synth.SynthMenuBarUI.createUI(JComponent);javax.swing.plaf.synth.SynthMenuItemUI.createUI(JComponent);javax.swing.plaf.synth.SynthMenuUI.createUI(JComponent);javax.swing.plaf.synth.SynthOptionPaneUI.createUI(JComponent);javax.swing.plaf.synth.SynthPanelUI.createUI(JComponent);javax.swing.plaf.synth.SynthPasswordFieldUI.createUI(JComponent);javax.swing.plaf.synth.SynthPopupMenuUI.createUI(JComponent);javax.swing.plaf.synth.SynthProgressBarUI.createUI(JComponent);javax.swing.plaf.synth.SynthRadioButtonMenuItemUI.createUI(JComponent);javax.swing.plaf.synth.SynthRadioButtonUI.createUI(JComponent);javax.swing.plaf.synth.SynthRootPaneUI.createUI(JComponent);javax.swing.plaf.synth.SynthScrollPaneUI.createUI(JComponent);javax.swing.plaf.synth.SynthSeparatorUI.createUI(JComponent);javax.swing.plaf.synth.SynthSliderUI.createUI(JComponent);javax.swing.plaf.synth.SynthSpinnerUI.createUI(JComponent);javax.swing.plaf.synth.SynthSplitPaneUI.createUI(JComponent);javax.swing.plaf.synth.SynthTabbedPaneUI.createUI(JComponent);javax.swing.plaf.synth.SynthTableHeaderUI.createUI(JComponent);javax.swing.plaf.synth.SynthTableUI.createUI(JComponent);javax.swing.plaf.synth.SynthTextAreaUI.createUI(JComponent);javax.swing.plaf.synth.SynthTextFieldUI.createUI(JComponent);javax.swing.plaf.synth.SynthTextPaneUI.createUI(JComponent);javax.swing.plaf.synth.SynthToggleButtonUI.createUI(JComponent);javax.swing.plaf.synth.SynthToolBarUI.createUI(JComponent);javax.swing.plaf.synth.SynthToolTipUI.createUI(JComponent);javax.swing.plaf.synth.SynthTreeUI.createUI(JComponent);javax.swing.plaf.synth.SynthViewportUI.createUI(JComponent),;0.01;0.08;0.01;0.09;0.02;0.02;0.01;0.09;0.02;0.02;0.01;0.09;0.09;0.08;0.01;0.09;0.01;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.36;0.36;0.36;0.36;0.36;0.36;0.36;0.36;0.09;0.36;0.01;0.36;0.01;0.36;0.36;0.36;0.36;0.36;0.09;0.36;0.36;0.36;0.36;0.36;0.36;0.36;0.36;0.02;0.01;0.36;0.36;0.36;0.01;0.09;0.08;0.36;0.36;0.36;0.36;0.36
getPreferredSize,88,0.340909091,The getPreferredSize() method in Java is used to get the preferred size of a component.,";java.awt.Component.getPreferredSize();java.awt.Container.getPreferredSize();java.awt.List.getPreferredSize(int);java.awt.List.getPreferredSize();java.awt.TextArea.getPreferredSize(int,int);java.awt.TextArea.getPreferredSize();java.awt.TextField.getPreferredSize(int);java.awt.TextField.getPreferredSize();javax.swing.JComponent.getPreferredSize();javax.swing.JEditorPane.getPreferredSize();javax.swing.JTextArea.getPreferredSize();javax.swing.JTextField.getPreferredSize();javax.swing.JToolBar.Separator.getPreferredSize();javax.swing.plaf.ComponentUI.getPreferredSize(JComponent);javax.swing.plaf.LayerUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicArrowButton.getPreferredSize();javax.swing.plaf.basic.BasicButtonUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicComboBoxRenderer.getPreferredSize();javax.swing.plaf.basic.BasicComboBoxUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicDesktopIconUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicDesktopPaneUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicInternalFrameUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicLabelUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicListUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicMenuItemUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicOptionPaneUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicPopupMenuSeparatorUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicProgressBarUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicRadioButtonUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicScrollBarUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicSeparatorUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicSliderUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicSplitPaneDivider.getPreferredSize();javax.swing.plaf.basic.BasicSplitPaneUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicTableHeaderUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicTableUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicTextAreaUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicTextUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicToolBarSeparatorUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicToolTipUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicTreeUI.getPreferredSize(JComponent);javax.swing.plaf.basic.BasicTreeUI.getPreferredSize(JComponent,boolean);javax.swing.plaf.metal.MetalDesktopIconUI.getPreferredSize(JComponent);javax.swing.plaf.metal.MetalFileChooserUI.getPreferredSize(JComponent);javax.swing.plaf.metal.MetalPopupMenuSeparatorUI.getPreferredSize(JComponent);javax.swing.plaf.metal.MetalScrollBarUI.getPreferredSize(JComponent);javax.swing.plaf.metal.MetalScrollButton.getPreferredSize();javax.swing.plaf.metal.MetalSeparatorUI.getPreferredSize(JComponent);javax.swing.plaf.metal.MetalToolTipUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiButtonUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiColorChooserUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiComboBoxUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiDesktopIconUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiDesktopPaneUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiFileChooserUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiInternalFrameUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiLabelUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiListUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiMenuBarUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiMenuItemUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiOptionPaneUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiPanelUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiPopupMenuUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiProgressBarUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiRootPaneUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiScrollBarUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiScrollPaneUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiSeparatorUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiSliderUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiSpinnerUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiSplitPaneUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiTabbedPaneUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiTableHeaderUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiTableUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiTextUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiToolBarUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiToolTipUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiTreeUI.getPreferredSize(JComponent);javax.swing.plaf.multi.MultiViewportUI.getPreferredSize(JComponent);javax.swing.plaf.synth.SynthButtonUI.getPreferredSize(JComponent);javax.swing.plaf.synth.SynthGraphicsUtils.getPreferredSize(SynthContext,Font,String,Icon,int,int,int,int,int,int);javax.swing.plaf.synth.SynthLabelUI.getPreferredSize(JComponent);javax.swing.plaf.synth.SynthProgressBarUI.getPreferredSize(JComponent);javax.swing.plaf.synth.SynthScrollBarUI.getPreferredSize(JComponent);javax.swing.plaf.synth.SynthSeparatorUI.getPreferredSize(JComponent);javax.swing.plaf.synth.SynthSliderUI.getPreferredSize(JComponent);javax.swing.plaf.synth.SynthToolTipUI.getPreferredSize(JComponent);javax.swing.tree.DefaultTreeCellRenderer.getPreferredSize()",;0.04;0.02;0.02;0.04;0.03;0.04;0.04;0.05;0.02;0.02;0.04;0.02;0.02;0.08;0.01;0.05;0.22;0.16;0.22;0.22;0.22;0.22;0.22;0.01;0.22;0.03;0.22;0.22;0.02;0.04;0.22;0.22;0.01;0.02;0.03;0.03;0.01;0.02;0.22;0.22;0.02;0.02;0.22;0.03;0.22;0.16;0.16;0.22;0.22;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.34;0.08;0.02;0.08;0.08;0.04;0.08;0.08;0.08;0.01
contains,98,0.306122449,The contains() method in Java is used to check if a collection or string contains a specific element or substring.,";java.awt.Component.contains(int,int);java.awt.Component.contains(Point);java.awt.Polygon.contains(Point);java.awt.Polygon.contains(int,int);java.awt.Polygon.contains(double,double);java.awt.Polygon.contains(Point2D);java.awt.Rectangle.contains(Point);java.awt.Rectangle.contains(int,int);java.awt.Rectangle.contains(Rectangle);java.awt.Rectangle.contains(int,int,int,int);java.awt.geom.Arc2D.contains(double,double);java.awt.geom.Arc2D.contains(double,double,double,double);java.awt.geom.Arc2D.contains(Rectangle2D);java.awt.geom.Area.contains(double,double);java.awt.geom.Area.contains(Point2D);java.awt.geom.CubicCurve2D.contains(double,double);java.awt.geom.CubicCurve2D.contains(Point2D);java.awt.geom.Ellipse2D.contains(double,double);java.awt.geom.Line2D.contains(double,double);java.awt.geom.Line2D.contains(Point2D);java.awt.geom.Line2D.contains(double,double,double,double);java.awt.geom.Line2D.contains(Rectangle2D);java.awt.geom.Path2D.contains(PathIterator,double,double);java.awt.geom.Path2D.contains(PathIterator,Point2D);java.awt.geom.Path2D.contains(double,double);java.awt.geom.Path2D.contains(Point2D);java.awt.geom.Path2D.contains(PathIterator,double,double,double,double);java.awt.geom.Path2D.contains(PathIterator,Rectangle2D);java.awt.geom.QuadCurve2D.contains(double,double);java.awt.geom.QuadCurve2D.contains(Point2D);java.awt.geom.Rectangle2D.contains(double,double);java.awt.geom.RectangularShape.contains(Point2D);java.awt.geom.RoundRectangle2D.contains(double,double);java.beans.beancontext.BeanContextMembershipEvent.contains(Object);java.beans.beancontext.BeanContextSupport.contains(Object);java.lang.String.contains(CharSequence);java.nio.charset.Charset.contains(Charset);java.util.AbstractCollection.contains(Object);java.util.ArrayDeque.contains(Object);java.util.ArrayList.contains(Object);java.util.HashSet.contains(Object);java.util.Hashtable.contains(Object);java.util.LinkedList.contains(Object);java.util.PriorityQueue.contains(Object);java.util.TreeSet.contains(Object);java.util.Vector.contains(Object);java.util.concurrent.ArrayBlockingQueue.contains(Object);java.util.concurrent.ConcurrentHashMap.contains(Object);java.util.concurrent.ConcurrentHashMap.KeySetView.contains(Object);java.util.concurrent.ConcurrentLinkedDeque.contains(Object);java.util.concurrent.ConcurrentLinkedQueue.contains(Object);java.util.concurrent.ConcurrentSkipListSet.contains(Object);java.util.concurrent.CopyOnWriteArrayList.contains(Object);java.util.concurrent.CopyOnWriteArraySet.contains(Object);java.util.concurrent.LinkedBlockingDeque.contains(Object);java.util.concurrent.LinkedBlockingQueue.contains(Object);java.util.concurrent.LinkedTransferQueue.contains(Object);java.util.concurrent.PriorityBlockingQueue.contains(Object);java.util.concurrent.SynchronousQueue.contains(Object);javax.accessibility.AccessibleRelationSet.contains(String);javax.accessibility.AccessibleStateSet.contains(AccessibleState);javax.imageio.spi.ServiceRegistry.contains(Object);javax.naming.directory.BasicAttribute.contains(Object);javax.print.attribute.SetOfIntegerSyntax.contains(int);javax.print.attribute.SetOfIntegerSyntax.contains(IntegerSyntax);javax.swing.DefaultListModel.contains(Object);javax.swing.JComponent.contains(int,int);javax.swing.plaf.ComponentUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiButtonUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiColorChooserUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiComboBoxUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiDesktopIconUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiDesktopPaneUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiFileChooserUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiInternalFrameUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiLabelUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiListUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiMenuBarUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiMenuItemUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiOptionPaneUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiPanelUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiPopupMenuUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiProgressBarUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiRootPaneUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiScrollBarUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiScrollPaneUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiSeparatorUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiSliderUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiSpinnerUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiSplitPaneUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiTabbedPaneUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiTableHeaderUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiTableUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiTextUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiToolBarUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiToolTipUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiTreeUI.contains(JComponent,int,int);javax.swing.plaf.multi.MultiViewportUI.contains(JComponent,int,int)",;0.02;0.02;0.01;0.03;0.13;0.13;0.02;0.02;0.03;0.01;0.06;0.03;0.03;0.13;0.13;0.13;0.13;0.13;0.05;0.05;0.04;0.04;0.04;0.04;0.13;0.13;0.03;0.03;0.13;0.13;0.13;0.13;0.13;0.01;0.02;0.04;0.02;0.09;0.14;0.14;0.13;0.01;0.14;0.15;0.13;0.14;0.15;0.01;0.14;0.06;0.15;0.13;0.14;0.13;0.14;0.15;0.15;0.15;0.01;0.01;0.01;0.01;0.01;0.02;0.02;0.01;0.01;0.01;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31
update,105,0.305264448,The update() method in Java is used to update the state of a object.,";java.awt.Canvas.update(Graphics);java.awt.Component.update(Graphics);java.awt.Container.update(Graphics);java.awt.SplashScreen.update();java.security.MessageDigest.update(byte);java.security.MessageDigest.update(byte[],int,int);java.security.MessageDigest.update(byte[]);java.security.MessageDigest.update(ByteBuffer);java.security.Signature.update(byte);java.security.Signature.update(byte[]);java.security.Signature.update(byte[],int,int);java.security.Signature.update(ByteBuffer);java.util.zip.Adler32.update(int);java.util.zip.Adler32.update(byte[],int,int);java.util.zip.Adler32.update(byte[]);java.util.zip.Adler32.update(ByteBuffer);java.util.zip.CRC32.update(int);java.util.zip.CRC32.update(byte[],int,int);java.util.zip.CRC32.update(byte[]);java.util.zip.CRC32.update(ByteBuffer);javax.crypto.Cipher.update(byte[]);javax.crypto.Cipher.update(byte[],int,int);javax.crypto.Cipher.update(byte[],int,int,byte[]);javax.crypto.Cipher.update(byte[],int,int,byte[],int);javax.crypto.Cipher.update(ByteBuffer,ByteBuffer);javax.crypto.Mac.update(byte);javax.crypto.Mac.update(byte[]);javax.crypto.Mac.update(byte[],int,int);javax.crypto.Mac.update(ByteBuffer);javax.swing.CellRendererPane.update(Graphics);javax.swing.JApplet.update(Graphics);javax.swing.JComponent.update(Graphics);javax.swing.JDialog.update(Graphics);javax.swing.JFrame.update(Graphics);javax.swing.JWindow.update(Graphics);javax.swing.plaf.ComponentUI.update(Graphics,JComponent);javax.swing.plaf.basic.BasicMenuItemUI.update(Graphics,JComponent);javax.swing.plaf.basic.BasicTextUI.update(Graphics,JComponent);javax.swing.plaf.metal.MetalButtonUI.update(Graphics,JComponent);javax.swing.plaf.metal.MetalMenuBarUI.update(Graphics,JComponent);javax.swing.plaf.metal.MetalTabbedPaneUI.update(Graphics,JComponent);javax.swing.plaf.metal.MetalToggleButtonUI.update(Graphics,JComponent);javax.swing.plaf.metal.MetalToolBarUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiButtonUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiColorChooserUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiComboBoxUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiDesktopIconUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiDesktopPaneUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiFileChooserUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiInternalFrameUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiLabelUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiListUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiMenuBarUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiMenuItemUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiOptionPaneUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiPanelUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiPopupMenuUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiProgressBarUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiRootPaneUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiScrollBarUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiScrollPaneUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiSeparatorUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiSliderUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiSpinnerUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiSplitPaneUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiTabbedPaneUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiTableHeaderUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiTableUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiTextUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiToolBarUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiToolTipUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiTreeUI.update(Graphics,JComponent);javax.swing.plaf.multi.MultiViewportUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthButtonUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthColorChooserUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthComboBoxUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthDesktopIconUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthDesktopPaneUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthEditorPaneUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthInternalFrameUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthLabelUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthListUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthMenuBarUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthMenuItemUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthMenuUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthOptionPaneUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthPanelUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthPopupMenuUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthProgressBarUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthRootPaneUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthScrollBarUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthScrollPaneUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthSeparatorUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthSliderUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthSpinnerUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthSplitPaneUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthTabbedPaneUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthTableHeaderUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthTableUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthTextAreaUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthTextFieldUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthToolBarUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthToolTipUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthTreeUI.update(Graphics,JComponent);javax.swing.plaf.synth.SynthViewportUI.update(Graphics,JComponent)",;0.01;0.01;0.01;0.01;0.02;0.04;0.04;0.03;0.02;0.04;0.04;0.04;0.03;0.05;0.05;0.03;0.03;0.05;0.05;0.03;0.02;0.02;0.03;0.03;0.03;0.01;0.01;0.01;0.03;0.01;0.04;0.01;0.04;0.04;0.04;0.09;0.01;0.01;0.04;0.04;0.01;0.04;0.04;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.29;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.25;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31;0.31
getInstance,119,0.27479545,The getInstance() method in Java is used to get an instance of a class.,";java.awt.AlphaComposite.getInstance(int);java.awt.AlphaComposite.getInstance(int,float);java.awt.color.ColorSpace.getInstance(int);java.awt.color.ICC_Profile.getInstance(byte[]);java.awt.color.ICC_Profile.getInstance(int);java.awt.color.ICC_Profile.getInstance(String);java.awt.color.ICC_Profile.getInstance(InputStream);java.awt.im.InputContext.getInstance();java.security.AlgorithmParameterGenerator.getInstance(String);java.security.AlgorithmParameterGenerator.getInstance(String,String);java.security.AlgorithmParameterGenerator.getInstance(String,Provider);java.security.AlgorithmParameters.getInstance(String);java.security.AlgorithmParameters.getInstance(String,String);java.security.AlgorithmParameters.getInstance(String,Provider);java.security.KeyFactory.getInstance(String);java.security.KeyFactory.getInstance(String,String);java.security.KeyFactory.getInstance(String,Provider);java.security.KeyPairGenerator.getInstance(String);java.security.KeyPairGenerator.getInstance(String,String);java.security.KeyPairGenerator.getInstance(String,Provider);java.security.KeyStore.getInstance(String);java.security.KeyStore.getInstance(String,String);java.security.KeyStore.getInstance(String,Provider);java.security.MessageDigest.getInstance(String);java.security.MessageDigest.getInstance(String,String);java.security.MessageDigest.getInstance(String,Provider);java.security.Policy.getInstance(String,Policy.Parameters);java.security.Policy.getInstance(String,Policy.Parameters,String);java.security.Policy.getInstance(String,Policy.Parameters,Provider);java.security.SecureRandom.getInstance(String);java.security.SecureRandom.getInstance(String,String);java.security.SecureRandom.getInstance(String,Provider);java.security.Signature.getInstance(String);java.security.Signature.getInstance(String,String);java.security.Signature.getInstance(String,Provider);java.security.cert.CertificateFactory.getInstance(String);java.security.cert.CertificateFactory.getInstance(String,String);java.security.cert.CertificateFactory.getInstance(String,Provider);java.security.cert.CertPathBuilder.getInstance(String);java.security.cert.CertPathBuilder.getInstance(String,String);java.security.cert.CertPathBuilder.getInstance(String,Provider);java.security.cert.CertPathValidator.getInstance(String);java.security.cert.CertPathValidator.getInstance(String,String);java.security.cert.CertPathValidator.getInstance(String,Provider);java.security.cert.CertStore.getInstance(String,CertStoreParameters);java.security.cert.CertStore.getInstance(String,CertStoreParameters,String);java.security.cert.CertStore.getInstance(String,CertStoreParameters,Provider);java.text.Collator.getInstance();java.text.Collator.getInstance(Locale);java.text.DateFormat.getInstance();java.text.DateFormatSymbols.getInstance();java.text.DateFormatSymbols.getInstance(Locale);java.text.DecimalFormatSymbols.getInstance();java.text.DecimalFormatSymbols.getInstance(Locale);java.text.NumberFormat.getInstance();java.text.NumberFormat.getInstance(Locale);java.text.spi.CollatorProvider.getInstance(Locale);java.text.spi.DateFormatSymbolsProvider.getInstance(Locale);java.text.spi.DecimalFormatSymbolsProvider.getInstance(Locale);java.util.Calendar.getInstance();java.util.Calendar.getInstance(TimeZone);java.util.Calendar.getInstance(Locale);java.util.Calendar.getInstance(TimeZone,Locale);java.util.Currency.getInstance(String);java.util.Currency.getInstance(Locale);javax.crypto.Cipher.getInstance(String);javax.crypto.Cipher.getInstance(String,String);javax.crypto.Cipher.getInstance(String,Provider);javax.crypto.ExemptionMechanism.getInstance(String);javax.crypto.ExemptionMechanism.getInstance(String,String);javax.crypto.ExemptionMechanism.getInstance(String,Provider);javax.crypto.KeyAgreement.getInstance(String);javax.crypto.KeyAgreement.getInstance(String,String);javax.crypto.KeyAgreement.getInstance(String,Provider);javax.crypto.KeyGenerator.getInstance(String);javax.crypto.KeyGenerator.getInstance(String,String);javax.crypto.KeyGenerator.getInstance(String,Provider);javax.crypto.Mac.getInstance(String);javax.crypto.Mac.getInstance(String,String);javax.crypto.Mac.getInstance(String,Provider);javax.crypto.SecretKeyFactory.getInstance(String);javax.crypto.SecretKeyFactory.getInstance(String,String);javax.crypto.SecretKeyFactory.getInstance(String,Provider);javax.management.ObjectName.getInstance(String);javax.management.ObjectName.getInstance(String,String,String);javax.management.ObjectName.getInstance(String,Hashtable&lt;String,String&gt;);javax.management.ObjectName.getInstance(ObjectName);javax.net.ssl.KeyManagerFactory.getInstance(String);javax.net.ssl.KeyManagerFactory.getInstance(String,String);javax.net.ssl.KeyManagerFactory.getInstance(String,Provider);javax.net.ssl.SSLContext.getInstance(String);javax.net.ssl.SSLContext.getInstance(String,String);javax.net.ssl.SSLContext.getInstance(String,Provider);javax.net.ssl.TrustManagerFactory.getInstance(String);javax.net.ssl.TrustManagerFactory.getInstance(String,String);javax.net.ssl.TrustManagerFactory.getInstance(String,Provider);javax.security.auth.kerberos.KeyTab.getInstance(File);javax.security.auth.kerberos.KeyTab.getInstance(KerberosPrincipal,File);javax.security.auth.kerberos.KeyTab.getInstance();javax.security.auth.kerberos.KeyTab.getInstance(KerberosPrincipal);javax.security.auth.login.Configuration.getInstance(String,Configuration.Parameters);javax.security.auth.login.Configuration.getInstance(String,Configuration.Parameters,String);javax.security.auth.login.Configuration.getInstance(String,Configuration.Parameters,Provider);javax.security.cert.X509Certificate.getInstance(InputStream);javax.security.cert.X509Certificate.getInstance(byte[]);javax.sql.rowset.spi.SyncFactory.getInstance(String);javax.swing.LayoutStyle.getInstance();javax.xml.crypto.dsig.TransformService.getInstance(String,String);javax.xml.crypto.dsig.TransformService.getInstance(String,String,Provider);javax.xml.crypto.dsig.TransformService.getInstance(String,String,String);javax.xml.crypto.dsig.XMLSignatureFactory.getInstance(String);javax.xml.crypto.dsig.XMLSignatureFactory.getInstance(String,Provider);javax.xml.crypto.dsig.XMLSignatureFactory.getInstance(String,String);javax.xml.crypto.dsig.XMLSignatureFactory.getInstance();javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.getInstance(String);javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.getInstance(String,Provider);javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.getInstance(String,String);javax.xml.crypto.dsig.keyinfo.KeyInfoFactory.getInstance();org.ietf.jgss.GSSManager.getInstance()",;0.01;0.01;0.01;0.01;0.01;0.01;0.01;0.01;0.24;0.25;0.19;0.22;0.22;0.17;0.26;0.26;0.20;0.25;0.26;0.20;0.26;0.26;0.20;0.27;0.27;0.21;0.25;0.26;0.20;0.17;0.17;0.13;0.27;0.27;0.21;0.26;0.25;0.19;0.27;0.27;0.21;0.27;0.27;0.21;0.19;0.20;0.15;0.01;0.01;0.01;0.02;0.02;0.02;0.02;0.02;0.02;0.02;0.02;0.02;0.03;0.03;0.03;0.03;0.01;0.01;0.27;0.27;0.20;0.27;0.26;0.20;0.27;0.27;0.21;0.26;0.26;0.20;0.27;0.27;0.21;0.26;0.26;0.20;0.02;0.03;0.03;0.02;0.25;0.25;0.19;0.26;0.26;0.20;0.25;0.25;0.19;0.03;0.02;0.03;0.02;0.25;0.26;0.20;0.01;0.01;0.01;0.01;0.18;0.14;0.22;0.19;0.12;0.21;0.19;0.20;0.13;0.21;0.19;0.01
read,120,0.105572836,The read() method in Java is used to read data from an input stream.,";java.io.BufferedInputStream.read();java.io.BufferedReader.read();java.io.ByteArrayInputStream.read();java.io.ByteArrayInputStream.read(byte[],int,int);java.io.CharArrayReader.read();java.io.CharArrayReader.read(char[],int,int);java.io.DataInputStream.read(byte[]);java.io.DataInputStream.read(byte[],int,int);java.io.FileInputStream.read();java.io.FileInputStream.read(byte[]);java.io.FileInputStream.read(byte[],int,int);java.io.FilterInputStream.read();java.io.FilterInputStream.read(byte[]);java.io.FilterInputStream.read(byte[],int,int);java.io.FilterReader.read();java.io.FilterReader.read(char[],int,int);java.io.InputStream.read();java.io.InputStream.read(byte[]);java.io.InputStream.read(byte[],int,int);java.io.InputStreamReader.read();java.io.InputStreamReader.read(char[],int,int);java.io.LineNumberInputStream.read();java.io.LineNumberInputStream.read(byte[],int,int);java.io.LineNumberReader.read();java.io.LineNumberReader.read(char[],int,int);java.io.ObjectInputStream.read();java.io.ObjectInputStream.read(byte[],int,int);java.io.PipedInputStream.read();java.io.PipedInputStream.read(byte[],int,int);java.io.PipedReader.read();java.io.PipedReader.read(char[],int,int);java.io.PushbackInputStream.read();java.io.PushbackInputStream.read(byte[],int,int);java.io.PushbackReader.read();java.io.PushbackReader.read(char[],int,int);java.io.RandomAccessFile.read();java.io.RandomAccessFile.read(byte[],int,int);java.io.RandomAccessFile.read(byte[]);java.io.Reader.read(CharBuffer);java.io.Reader.read();java.io.Reader.read(char[]);java.io.Reader.read(char[],int,int);java.io.SequenceInputStream.read();java.io.SequenceInputStream.read(byte[],int,int);java.io.StringBufferInputStream.read();java.io.StringBufferInputStream.read(byte[],int,int);java.io.StringReader.read();java.io.StringReader.read(char[],int,int);java.nio.CharBuffer.read(CharBuffer);java.nio.channels.AsynchronousFileChannel.read(ByteBuffer,long,A,CompletionHandler&lt;Integer,?);java.nio.channels.AsynchronousFileChannel.read(ByteBuffer,long);java.nio.channels.AsynchronousSocketChannel.read(ByteBuffer,long,TimeUnit,A,CompletionHandler&lt;Integer,?);java.nio.channels.AsynchronousSocketChannel.read(ByteBuffer,A,CompletionHandler&lt;Integer,?);java.nio.channels.AsynchronousSocketChannel.read(ByteBuffer);java.nio.channels.AsynchronousSocketChannel.read(ByteBuffer[],int,int,long,TimeUnit,A,CompletionHandler&lt;Long,?);java.nio.channels.DatagramChannel.read(ByteBuffer);java.nio.channels.DatagramChannel.read(ByteBuffer[],int,int);java.nio.channels.DatagramChannel.read(ByteBuffer[]);java.nio.channels.FileChannel.read(ByteBuffer);java.nio.channels.FileChannel.read(ByteBuffer[],int,int);java.nio.channels.FileChannel.read(ByteBuffer[]);java.nio.channels.FileChannel.read(ByteBuffer,long);java.nio.channels.SocketChannel.read(ByteBuffer);java.nio.channels.SocketChannel.read(ByteBuffer[],int,int);java.nio.channels.SocketChannel.read(ByteBuffer[]);java.rmi.server.ObjID.read(ObjectInput);java.rmi.server.UID.read(DataInput);java.security.DigestInputStream.read();java.security.DigestInputStream.read(byte[],int,int);java.util.jar.JarInputStream.read(byte[],int,int);java.util.jar.Manifest.read(InputStream);java.util.zip.CheckedInputStream.read();java.util.zip.CheckedInputStream.read(byte[],int,int);java.util.zip.DeflaterInputStream.read();java.util.zip.DeflaterInputStream.read(byte[],int,int);java.util.zip.GZIPInputStream.read(byte[],int,int);java.util.zip.InflaterInputStream.read();java.util.zip.InflaterInputStream.read(byte[],int,int);java.util.zip.ZipInputStream.read(byte[],int,int);javax.crypto.CipherInputStream.read();javax.crypto.CipherInputStream.read(byte[]);javax.crypto.CipherInputStream.read(byte[],int,int);javax.imageio.ImageIO.read(File);javax.imageio.ImageIO.read(InputStream);javax.imageio.ImageIO.read(URL);javax.imageio.ImageIO.read(ImageInputStream);javax.imageio.ImageReader.read(int);javax.imageio.ImageReader.read(int,ImageReadParam);javax.imageio.stream.FileCacheImageInputStream.read();javax.imageio.stream.FileCacheImageInputStream.read(byte[],int,int);javax.imageio.stream.FileCacheImageOutputStream.read();javax.imageio.stream.FileCacheImageOutputStream.read(byte[],int,int);javax.imageio.stream.FileImageInputStream.read();javax.imageio.stream.FileImageInputStream.read(byte[],int,int);javax.imageio.stream.FileImageOutputStream.read();javax.imageio.stream.FileImageOutputStream.read(byte[],int,int);javax.imageio.stream.ImageInputStreamImpl.read();javax.imageio.stream.ImageInputStreamImpl.read(byte[]);javax.imageio.stream.ImageInputStreamImpl.read(byte[],int,int);javax.imageio.stream.MemoryCacheImageInputStream.read();javax.imageio.stream.MemoryCacheImageInputStream.read(byte[],int,int);javax.imageio.stream.MemoryCacheImageOutputStream.read();javax.imageio.stream.MemoryCacheImageOutputStream.read(byte[],int,int);javax.sound.sampled.AudioInputStream.read();javax.sound.sampled.AudioInputStream.read(byte[]);javax.sound.sampled.AudioInputStream.read(byte[],int,int);javax.swing.JEditorPane.read(InputStream,Object);javax.swing.ProgressMonitorInputStream.read();javax.swing.ProgressMonitorInputStream.read(byte[]);javax.swing.ProgressMonitorInputStream.read(byte[],int,int);javax.swing.text.DefaultEditorKit.read(InputStream,Document,int);javax.swing.text.DefaultEditorKit.read(Reader,Document,int);javax.swing.text.EditorKit.read(InputStream,Document,int);javax.swing.text.EditorKit.read(Reader,Document,int);javax.swing.text.JTextComponent.read(Reader,Object);javax.swing.text.html.HTMLEditorKit.read(Reader,Document,int);javax.swing.text.html.parser.DTD.read(DataInputStream);javax.swing.text.rtf.RTFEditorKit.read(InputStream,Document,int);javax.swing.text.rtf.RTFEditorKit.read(Reader,Document,int);org.omg.CORBA.portable.InputStream.read()",;0.01;0.05;0.06;0.03;0.05;0.04;0.05;0.05;0.03;0.05;0.08;0.07;0.05;0.08;0.05;0.04;0.07;0.05;0.04;0.05;0.04;0.00;0.00;0.01;0.03;0.02;0.04;0.06;0.07;0.06;0.05;0.07;0.07;0.05;0.04;0.04;0.06;0.05;0.02;0.03;0.05;0.06;0.06;0.07;0.00;0.00;0.05;0.04;0.02;0.03;0.03;0.02;0.03;0.03;0.02;0.03;0.03;0.03;0.03;0.03;0.03;0.03;0.03;0.03;0.03;0.01;0.01;0.01;0.03;0.06;0.01;0.01;0.06;0.03;0.03;0.06;0.02;0.06;0.06;0.08;0.04;0.06;0.02;0.02;0.02;0.02;0.01;0.01;0.11;0.11;0.11;0.11;0.11;0.11;0.11;0.11;0.02;0.01;0.04;0.11;0.11;0.11;0.11;0.02;0.04;0.02;0.01;0.03;0.03;0.03;0.03;0.02;0.03;0.02;0.01;0.01;0.01;0.03;0.02;0.08
write,131,0.094226729,The write() method in Java is used to write data to an output stream.,";java.awt.color.ICC_Profile.write(String);java.awt.color.ICC_Profile.write(OutputStream);java.io.BufferedOutputStream.write(int);java.io.BufferedOutputStream.write(byte[],int,int);java.io.BufferedWriter.write(int);java.io.BufferedWriter.write(char[],int,int);java.io.BufferedWriter.write(String,int,int);java.io.ByteArrayOutputStream.write(int);java.io.ByteArrayOutputStream.write(byte[],int,int);java.io.CharArrayWriter.write(int);java.io.CharArrayWriter.write(char[],int,int);java.io.CharArrayWriter.write(String,int,int);java.io.DataOutputStream.write(int);java.io.DataOutputStream.write(byte[],int,int);java.io.FileOutputStream.write(int);java.io.FileOutputStream.write(byte[]);java.io.FileOutputStream.write(byte[],int,int);java.io.FilterOutputStream.write(int);java.io.FilterOutputStream.write(byte[]);java.io.FilterOutputStream.write(byte[],int,int);java.io.FilterWriter.write(int);java.io.FilterWriter.write(char[],int,int);java.io.FilterWriter.write(String,int,int);java.io.ObjectOutputStream.write(int);java.io.ObjectOutputStream.write(byte[]);java.io.ObjectOutputStream.write(byte[],int,int);java.io.ObjectOutputStream.PutField.write(ObjectOutput);java.io.OutputStream.write(int);java.io.OutputStream.write(byte[]);java.io.OutputStream.write(byte[],int,int);java.io.OutputStreamWriter.write(int);java.io.OutputStreamWriter.write(char[],int,int);java.io.OutputStreamWriter.write(String,int,int);java.io.PipedOutputStream.write(int);java.io.PipedOutputStream.write(byte[],int,int);java.io.PipedWriter.write(int);java.io.PipedWriter.write(char[],int,int);java.io.PrintStream.write(int);java.io.PrintStream.write(byte[],int,int);java.io.PrintWriter.write(int);java.io.PrintWriter.write(char[],int,int);java.io.PrintWriter.write(char[]);java.io.PrintWriter.write(String,int,int);java.io.PrintWriter.write(String);java.io.RandomAccessFile.write(int);java.io.RandomAccessFile.write(byte[]);java.io.RandomAccessFile.write(byte[],int,int);java.io.StringWriter.write(int);java.io.StringWriter.write(char[],int,int);java.io.StringWriter.write(String);java.io.StringWriter.write(String,int,int);java.io.Writer.write(int);java.io.Writer.write(char[]);java.io.Writer.write(char[],int,int);java.io.Writer.write(String);java.io.Writer.write(String,int,int);java.nio.channels.AsynchronousFileChannel.write(ByteBuffer,long,A,CompletionHandler&lt;Integer,?);java.nio.channels.AsynchronousFileChannel.write(ByteBuffer,long);java.nio.channels.AsynchronousSocketChannel.write(ByteBuffer,long,TimeUnit,A,CompletionHandler&lt;Integer,?);java.nio.channels.AsynchronousSocketChannel.write(ByteBuffer,A,CompletionHandler&lt;Integer,?);java.nio.channels.AsynchronousSocketChannel.write(ByteBuffer);java.nio.channels.AsynchronousSocketChannel.write(ByteBuffer[],int,int,long,TimeUnit,A,CompletionHandler&lt;Long,?);java.nio.channels.DatagramChannel.write(ByteBuffer);java.nio.channels.DatagramChannel.write(ByteBuffer[],int,int);java.nio.channels.DatagramChannel.write(ByteBuffer[]);java.nio.channels.FileChannel.write(ByteBuffer);java.nio.channels.FileChannel.write(ByteBuffer[],int,int);java.nio.channels.FileChannel.write(ByteBuffer[]);java.nio.channels.FileChannel.write(ByteBuffer,long);java.nio.channels.SocketChannel.write(ByteBuffer);java.nio.channels.SocketChannel.write(ByteBuffer[],int,int);java.nio.channels.SocketChannel.write(ByteBuffer[]);java.nio.file.Files.write(Path,byte[],OpenOption...);java.nio.file.Files.write(Path,Iterable&lt;?,Charset,OpenOption...);java.nio.file.Files.write(Path,Iterable&lt;?,OpenOption...);java.rmi.server.LogStream.write(int);java.rmi.server.LogStream.write(byte[],int,int);java.rmi.server.ObjID.write(ObjectOutput);java.rmi.server.UID.write(DataOutput);java.security.DigestOutputStream.write(int);java.security.DigestOutputStream.write(byte[],int,int);java.util.jar.Manifest.write(OutputStream);java.util.zip.CheckedOutputStream.write(int);java.util.zip.CheckedOutputStream.write(byte[],int,int);java.util.zip.DeflaterOutputStream.write(int);java.util.zip.DeflaterOutputStream.write(byte[],int,int);java.util.zip.GZIPOutputStream.write(byte[],int,int);java.util.zip.InflaterOutputStream.write(int);java.util.zip.InflaterOutputStream.write(byte[],int,int);java.util.zip.ZipOutputStream.write(byte[],int,int);javax.crypto.CipherOutputStream.write(int);javax.crypto.CipherOutputStream.write(byte[]);javax.crypto.CipherOutputStream.write(byte[],int,int);javax.imageio.ImageIO.write(RenderedImage,String,ImageOutputStream);javax.imageio.ImageIO.write(RenderedImage,String,File);javax.imageio.ImageIO.write(RenderedImage,String,OutputStream);javax.imageio.ImageWriter.write(IIOMetadata,IIOImage,ImageWriteParam);javax.imageio.ImageWriter.write(IIOImage);javax.imageio.ImageWriter.write(RenderedImage);javax.imageio.stream.FileCacheImageOutputStream.write(int);javax.imageio.stream.FileCacheImageOutputStream.write(byte[],int,int);javax.imageio.stream.FileImageOutputStream.write(int);javax.imageio.stream.FileImageOutputStream.write(byte[],int,int);javax.imageio.stream.ImageOutputStreamImpl.write(int);javax.imageio.stream.ImageOutputStreamImpl.write(byte[]);javax.imageio.stream.ImageOutputStreamImpl.write(byte[],int,int);javax.imageio.stream.MemoryCacheImageOutputStream.write(int);javax.imageio.stream.MemoryCacheImageOutputStream.write(byte[],int,int);javax.sound.midi.MidiSystem.write(Sequence,int,OutputStream);javax.sound.midi.MidiSystem.write(Sequence,int,File);javax.sound.midi.spi.MidiFileWriter.write(Sequence,int,OutputStream);javax.sound.midi.spi.MidiFileWriter.write(Sequence,int,File);javax.sound.sampled.AudioSystem.write(AudioInputStream,AudioFileFormat.Type,OutputStream);javax.sound.sampled.AudioSystem.write(AudioInputStream,AudioFileFormat.Type,File);javax.sound.sampled.spi.AudioFileWriter.write(AudioInputStream,AudioFileFormat.Type,OutputStream);javax.sound.sampled.spi.AudioFileWriter.write(AudioInputStream,AudioFileFormat.Type,File);javax.swing.text.AbstractWriter.write();javax.swing.text.AbstractWriter.write(char);javax.swing.text.AbstractWriter.write(String);javax.swing.text.AbstractWriter.write(char[],int,int);javax.swing.text.DefaultEditorKit.write(OutputStream,Document,int,int);javax.swing.text.DefaultEditorKit.write(Writer,Document,int,int);javax.swing.text.EditorKit.write(OutputStream,Document,int,int);javax.swing.text.EditorKit.write(Writer,Document,int,int);javax.swing.text.JTextComponent.write(Writer);javax.swing.text.html.HTMLEditorKit.write(Writer,Document,int,int);javax.swing.text.html.HTMLWriter.write();javax.swing.text.html.MinimalHTMLWriter.write();javax.swing.text.rtf.RTFEditorKit.write(OutputStream,Document,int,int);javax.swing.text.rtf.RTFEditorKit.write(Writer,Document,int,int);org.omg.CORBA.portable.OutputStream.write(int)",;0.01;0.01;0.02;0.03;0.03;0.02;0.01;0.03;0.04;0.01;0.01;0.03;0.02;0.04;0.03;0.03;0.05;0.03;0.02;0.04;0.03;0.05;0.05;0.02;0.03;0.01;0.01;0.03;0.03;0.03;0.03;0.05;0.05;0.03;0.05;0.02;0.03;0.02;0.03;0.03;0.03;0.02;0.05;0.01;0.02;0.03;0.04;0.01;0.04;0.00;0.04;0.01;0.03;0.05;0.00;0.05;0.02;0.02;0.02;0.08;0.08;0.01;0.02;0.02;0.02;0.03;0.03;0.03;0.03;0.07;0.08;0.08;0.01;0.01;0.01;0.00;0.00;0.01;0.01;0.02;0.02;0.01;0.02;0.02;0.03;0.04;0.03;0.01;0.02;0.03;0.03;0.04;0.04;0.01;0.01;0.01;0.01;0.01;0.01;0.09;0.09;0.09;0.09;0.09;0.09;0.09;0.09;0.09;0.03;0.03;0.03;0.03;0.02;0.03;0.02;0.03;0.01;0.01;0.01;0.01;0.04;0.03;0.04;0.02;0.01;0.04;0.01;0.01;0.04;0.03;0.01
clone,134,0.104078263,Returns a copy of this object.,;java.awt.BufferCapabilities.clone();java.awt.GridBagConstraints.clone();java.awt.ImageCapabilities.clone();java.awt.Insets.clone();java.awt.JobAttributes.clone();java.awt.PageAttributes.clone();java.awt.RenderingHints.clone();java.awt.datatransfer.DataFlavor.clone();java.awt.font.TextLayout.clone();java.awt.font.TextMeasurer.clone();java.awt.geom.AffineTransform.clone();java.awt.geom.Area.clone();java.awt.geom.CubicCurve2D.clone();java.awt.geom.Dimension2D.clone();java.awt.geom.Line2D.clone();java.awt.geom.Path2D.clone();java.awt.geom.Path2D.Double.clone();java.awt.geom.Path2D.Float.clone();java.awt.geom.Point2D.clone();java.awt.geom.QuadCurve2D.clone();java.awt.geom.RectangularShape.clone();java.awt.image.ImageFilter.clone();java.awt.image.Kernel.clone();java.awt.image.renderable.ParameterBlock.clone();java.awt.image.renderable.RenderContext.clone();java.awt.print.PageFormat.clone();java.awt.print.Paper.clone();java.lang.Enum.clone();java.lang.Object.clone();java.lang.Thread.clone();java.net.HttpCookie.clone();java.rmi.server.UnicastRemoteObject.clone();java.security.MessageDigest.clone();java.security.MessageDigestSpi.clone();java.security.Signature.clone();java.security.SignatureSpi.clone();java.security.cert.CollectionCertStoreParameters.clone();java.security.cert.LDAPCertStoreParameters.clone();java.security.cert.PKIXCertPathChecker.clone();java.security.cert.PKIXCertPathValidatorResult.clone();java.security.cert.PKIXParameters.clone();java.security.cert.PKIXRevocationChecker.clone();java.security.cert.X509CertSelector.clone();java.security.cert.X509CRLSelector.clone();java.text.BreakIterator.clone();java.text.ChoiceFormat.clone();java.text.Collator.clone();java.text.DateFormat.clone();java.text.DateFormatSymbols.clone();java.text.DecimalFormat.clone();java.text.DecimalFormatSymbols.clone();java.text.Format.clone();java.text.MessageFormat.clone();java.text.NumberFormat.clone();java.text.RuleBasedCollator.clone();java.text.SimpleDateFormat.clone();java.text.StringCharacterIterator.clone();java.util.AbstractMap.clone();java.util.ArrayDeque.clone();java.util.ArrayList.clone();java.util.BitSet.clone();java.util.Calendar.clone();java.util.Date.clone();java.util.EnumMap.clone();java.util.EnumSet.clone();java.util.GregorianCalendar.clone();java.util.HashMap.clone();java.util.HashSet.clone();java.util.Hashtable.clone();java.util.IdentityHashMap.clone();java.util.LinkedList.clone();java.util.Locale.clone();java.util.SimpleTimeZone.clone();java.util.TimeZone.clone();java.util.TreeMap.clone();java.util.TreeSet.clone();java.util.Vector.clone();java.util.concurrent.ConcurrentSkipListMap.clone();java.util.concurrent.ConcurrentSkipListSet.clone();java.util.concurrent.CopyOnWriteArrayList.clone();java.util.jar.Attributes.clone();java.util.jar.Manifest.clone();java.util.zip.ZipEntry.clone();javax.crypto.Mac.clone();javax.crypto.MacSpi.clone();javax.management.ImmutableDescriptor.clone();javax.management.MBeanAttributeInfo.clone();javax.management.MBeanConstructorInfo.clone();javax.management.MBeanInfo.clone();javax.management.MBeanNotificationInfo.clone();javax.management.MBeanOperationInfo.clone();javax.management.MBeanParameterInfo.clone();javax.management.modelmbean.DescriptorSupport.clone();javax.management.modelmbean.ModelMBeanAttributeInfo.clone();javax.management.modelmbean.ModelMBeanConstructorInfo.clone();javax.management.modelmbean.ModelMBeanInfoSupport.clone();javax.management.modelmbean.ModelMBeanNotificationInfo.clone();javax.management.modelmbean.ModelMBeanOperationInfo.clone();javax.management.openmbean.TabularDataSupport.clone();javax.management.relation.Role.clone();javax.management.relation.RoleUnresolved.clone();javax.naming.CompositeName.clone();javax.naming.CompoundName.clone();javax.naming.Reference.clone();javax.naming.directory.BasicAttribute.clone();javax.naming.directory.BasicAttributes.clone();javax.naming.ldap.LdapName.clone();javax.print.attribute.EnumSyntax.clone();javax.sound.midi.MetaMessage.clone();javax.sound.midi.MidiMessage.clone();javax.sound.midi.ShortMessage.clone();javax.sound.midi.SysexMessage.clone();javax.sql.rowset.serial.SerialArray.clone();javax.sql.rowset.serial.SerialBlob.clone();javax.sql.rowset.serial.SerialClob.clone();javax.sql.rowset.serial.SerialDatalink.clone();javax.sql.rowset.serial.SerialJavaObject.clone();javax.sql.rowset.serial.SerialRef.clone();javax.sql.rowset.serial.SerialStruct.clone();javax.swing.AbstractAction.clone();javax.swing.DefaultListSelectionModel.clone();javax.swing.JFormattedTextField.AbstractFormatter.clone();javax.swing.text.DefaultFormatter.clone();javax.swing.text.EditorKit.clone();javax.swing.text.ElementIterator.clone();javax.swing.text.GlyphView.clone();javax.swing.text.InternationalFormatter.clone();javax.swing.text.Segment.clone();javax.swing.text.SimpleAttributeSet.clone();javax.swing.text.StyledEditorKit.clone();javax.swing.text.html.HTMLEditorKit.clone();javax.swing.tree.DefaultMutableTreeNode.clone();javax.swing.tree.DefaultTreeSelectionModel.clone();javax.xml.datatype.XMLGregorianCalendar.clone(),;0.05;0.08;0.05;0.10;0.09;0.09;0.04;0.03;0.10;0.05;0.08;0.01;0.07;0.07;0.07;0.07;0.07;0.07;0.08;0.08;0.08;0.00;0.00;0.01;0.01;0.07;0.08;0.01;0.01;0.01;0.08;0.02;0.04;0.04;0.04;0.04;0.05;0.03;0.02;0.10;0.04;0.04;0.10;0.10;0.08;0.00;0.00;0.00;0.00;0.01;0.00;0.10;0.10;0.00;0.01;0.05;0.10;0.06;0.09;0.05;0.01;0.10;0.09;0.05;0.09;0.04;0.06;0.05;0.03;0.05;0.06;0.00;0.03;0.10;0.06;0.06;0.04;0.06;0.06;0.05;0.02;0.03;0.09;0.03;0.04;0.01;0.04;0.04;0.04;0.04;0.04;0.04;0.02;0.04;0.04;0.02;0.04;0.04;0.03;0.01;0.00;0.04;0.03;0.03;0.05;0.05;0.02;0.02;0.08;0.08;0.08;0.08;0.04;0.03;0.03;0.03;0.03;0.03;0.04;0.01;0.03;0.01;0.04;0.02;0.00;0.01;0.04;0.01;0.01;0.04;0.04;0.03;0.03;0.10
add,136,0.074584345,"Add an element to a set. If the element already exists in the set, the set remains unchanged.",";java.awt.AWTEventMulticaster.add(ComponentListener,ComponentListener);java.awt.AWTEventMulticaster.add(ContainerListener,ContainerListener);java.awt.AWTEventMulticaster.add(FocusListener,FocusListener);java.awt.AWTEventMulticaster.add(KeyListener,KeyListener);java.awt.AWTEventMulticaster.add(MouseListener,MouseListener);java.awt.AWTEventMulticaster.add(MouseMotionListener,MouseMotionListener);java.awt.AWTEventMulticaster.add(WindowListener,WindowListener);java.awt.AWTEventMulticaster.add(WindowStateListener,WindowStateListener);java.awt.AWTEventMulticaster.add(WindowFocusListener,WindowFocusListener);java.awt.AWTEventMulticaster.add(ActionListener,ActionListener);java.awt.AWTEventMulticaster.add(ItemListener,ItemListener);java.awt.AWTEventMulticaster.add(AdjustmentListener,AdjustmentListener);java.awt.AWTEventMulticaster.add(InputMethodListener,InputMethodListener);java.awt.AWTEventMulticaster.add(HierarchyListener,HierarchyListener);java.awt.AWTEventMulticaster.add(HierarchyBoundsListener,HierarchyBoundsListener);java.awt.AWTEventMulticaster.add(MouseWheelListener,MouseWheelListener);java.awt.Choice.add(String);java.awt.Component.add(PopupMenu);java.awt.Container.add(Component);java.awt.Container.add(String,Component);java.awt.Container.add(Component,int);java.awt.Container.add(Component,Object);java.awt.Container.add(Component,Object,int);java.awt.List.add(String);java.awt.List.add(String,int);java.awt.Menu.add(MenuItem);java.awt.Menu.add(String);java.awt.MenuBar.add(Menu);java.awt.Rectangle.add(int,int);java.awt.Rectangle.add(Point);java.awt.Rectangle.add(Rectangle);java.awt.RenderingHints.add(RenderingHints);java.awt.SystemTray.add(TrayIcon);java.awt.geom.Area.add(Area);java.awt.geom.Rectangle2D.add(double,double);java.awt.geom.Rectangle2D.add(Point2D);java.awt.geom.Rectangle2D.add(Rectangle2D);java.awt.image.renderable.ParameterBlock.add(Object);java.awt.image.renderable.ParameterBlock.add(byte);java.awt.image.renderable.ParameterBlock.add(char);java.awt.image.renderable.ParameterBlock.add(short);java.awt.image.renderable.ParameterBlock.add(int);java.awt.image.renderable.ParameterBlock.add(long);java.awt.image.renderable.ParameterBlock.add(float);java.awt.image.renderable.ParameterBlock.add(double);java.beans.beancontext.BeanContextSupport.add(Object);java.math.BigDecimal.add(BigDecimal);java.math.BigDecimal.add(BigDecimal,MathContext);java.math.BigInteger.add(BigInteger);java.security.PermissionCollection.add(Permission);java.security.Permissions.add(Permission);java.util.AbstractCollection.add(E);java.util.AbstractList.add(E);java.util.AbstractList.add(int,E);java.util.AbstractQueue.add(E);java.util.AbstractSequentialList.add(int,E);java.util.ArrayDeque.add(E);java.util.ArrayList.add(E);java.util.ArrayList.add(int,E);java.util.Calendar.add(int,int);java.util.GregorianCalendar.add(int,int);java.util.HashSet.add(E);java.util.LinkedList.add(E);java.util.LinkedList.add(int,E);java.util.PriorityQueue.add(E);java.util.StringJoiner.add(CharSequence);java.util.TreeSet.add(E);java.util.Vector.add(E);java.util.Vector.add(int,E);java.util.concurrent.ArrayBlockingQueue.add(E);java.util.concurrent.ConcurrentHashMap.KeySetView.add(K);java.util.concurrent.ConcurrentLinkedDeque.add(E);java.util.concurrent.ConcurrentLinkedQueue.add(E);java.util.concurrent.ConcurrentSkipListSet.add(E);java.util.concurrent.CopyOnWriteArrayList.add(E);java.util.concurrent.CopyOnWriteArrayList.add(int,E);java.util.concurrent.CopyOnWriteArraySet.add(E);java.util.concurrent.DelayQueue.add(E);java.util.concurrent.LinkedBlockingDeque.add(E);java.util.concurrent.LinkedTransferQueue.add(E);java.util.concurrent.PriorityBlockingQueue.add(E);java.util.concurrent.atomic.DoubleAdder.add(double);java.util.concurrent.atomic.LongAdder.add(long);javax.accessibility.AccessibleRelationSet.add(AccessibleRelation);javax.accessibility.AccessibleStateSet.add(AccessibleState);javax.management.AttributeList.add(Attribute);javax.management.AttributeList.add(int,Attribute);javax.management.AttributeList.add(Object);javax.management.AttributeList.add(int,Object);javax.management.relation.RoleList.add(Role);javax.management.relation.RoleList.add(int,Role);javax.management.relation.RoleList.add(Object);javax.management.relation.RoleList.add(int,Object);javax.management.relation.RoleUnresolvedList.add(RoleUnresolved);javax.management.relation.RoleUnresolvedList.add(int,RoleUnresolved);javax.management.relation.RoleUnresolvedList.add(Object);javax.management.relation.RoleUnresolvedList.add(int,Object);javax.naming.CompositeName.add(String);javax.naming.CompositeName.add(int,String);javax.naming.CompoundName.add(String);javax.naming.CompoundName.add(int,String);javax.naming.Reference.add(RefAddr);javax.naming.Reference.add(int,RefAddr);javax.naming.directory.BasicAttribute.add(Object);javax.naming.directory.BasicAttribute.add(int,Object);javax.naming.ldap.LdapName.add(String);javax.naming.ldap.LdapName.add(Rdn);javax.naming.ldap.LdapName.add(int,String);javax.naming.ldap.LdapName.add(int,Rdn);javax.print.attribute.HashAttributeSet.add(Attribute);javax.print.attribute.standard.JobStateReasons.add(JobStateReason);javax.sound.midi.Track.add(MidiEvent);javax.swing.ButtonGroup.add(AbstractButton);javax.swing.DefaultListModel.add(int,E);javax.swing.JMenu.add(JMenuItem);javax.swing.JMenu.add(Component);javax.swing.JMenu.add(Component,int);javax.swing.JMenu.add(String);javax.swing.JMenu.add(Action);javax.swing.JMenuBar.add(JMenu);javax.swing.JPopupMenu.add(JMenuItem);javax.swing.JPopupMenu.add(String);javax.swing.JPopupMenu.add(Action);javax.swing.JTabbedPane.add(Component);javax.swing.JTabbedPane.add(String,Component);javax.swing.JTabbedPane.add(Component,int);javax.swing.JTabbedPane.add(Component,Object);javax.swing.JTabbedPane.add(Component,Object,int);javax.swing.JToolBar.add(Action);javax.swing.event.EventListenerList.add(Class&lt;T&gt;,T);javax.swing.tree.DefaultMutableTreeNode.add(MutableTreeNode);javax.xml.datatype.Duration.add(Duration);javax.xml.datatype.XMLGregorianCalendar.add(Duration);org.omg.CORBA.ContextList.add(String);org.omg.CORBA.ExceptionList.add(TypeCode);org.omg.CORBA.NVList.add(int)",;0.07;0.07;0.07;0.07;0.07;0.07;0.07;0.07;0.07;0.07;0.07;0.07;0.07;0.07;0.07;0.07;0.01;0.01;0.04;0.03;0.03;0.04;0.03;0.04;0.02;0.01;0.01;0.01;0.02;0.02;0.01;0.01;0.01;0.01;0.02;0.02;0.01;0.04;0.04;0.04;0.04;0.04;0.04;0.04;0.04;0.01;0.01;0.01;0.01;0.01;0.01;0.01;0.02;0.05;0.02;0.03;0.05;0.07;0.05;0.01;0.01;0.03;0.05;0.05;0.02;0.01;0.03;0.06;0.05;0.03;0.01;0.03;0.04;0.03;0.07;0.05;0.03;0.02;0.04;0.04;0.02;0.01;0.01;0.01;0.02;0.02;0.02;0.07;0.05;0.02;0.02;0.03;0.03;0.02;0.02;0.03;0.03;0.06;0.03;0.06;0.03;0.04;0.02;0.01;0.01;0.06;0.05;0.03;0.02;0.01;0.02;0.01;0.01;0.03;0.05;0.05;0.01;0.05;0.05;0.04;0.06;0.05;0.04;0.01;0.01;0.02;0.02;0.02;0.01;0.01;0.03;0.01;0.01;0.01;0.01;0.02
getName,140,0.374283319,Get the name of the category of which this attribute value is an instance.,";java.awt.Component.getName();java.awt.Cursor.getName();java.awt.Font.getName();java.awt.MenuComponent.getName();java.awt.color.ColorSpace.getName(int);java.awt.datatransfer.Clipboard.getName();java.beans.FeatureDescriptor.getName();java.io.File.getName();java.io.ObjectStreamClass.getName();java.io.ObjectStreamField.getName();java.lang.Character.getName(int);java.lang.Class.getName();java.lang.Package.getName();java.lang.Thread.getName();java.lang.ThreadGroup.getName();java.lang.reflect.Constructor.getName();java.lang.reflect.Executable.getName();java.lang.reflect.Field.getName();java.lang.reflect.Method.getName();java.lang.reflect.Parameter.getName();java.net.HttpCookie.getName();java.net.NetworkInterface.getName();java.security.Identity.getName();java.security.Permission.getName();java.security.PKCS12Attribute.getName();java.security.Provider.getName();java.security.spec.ECGenParameterSpec.getName();java.text.AttributedCharacterIterator.Attribute.getName();java.util.logging.Level.getName();java.util.logging.Logger.getName();java.util.zip.ZipEntry.getName();java.util.zip.ZipFile.getName();javax.activation.DataHandler.getName();javax.activation.FileDataSource.getName();javax.activation.URLDataSource.getName();javax.crypto.ExemptionMechanism.getName();javax.management.Attribute.getName();javax.management.MBeanFeatureInfo.getName();javax.management.loading.MLetContent.getName();javax.management.relation.RoleInfo.getName();javax.management.remote.JMXPrincipal.getName();javax.naming.NameClassPair.getName();javax.net.ssl.SSLSessionBindingEvent.getName();javax.print.attribute.standard.Chromaticity.getName();javax.print.attribute.standard.ColorSupported.getName();javax.print.attribute.standard.Compression.getName();javax.print.attribute.standard.Copies.getName();javax.print.attribute.standard.CopiesSupported.getName();javax.print.attribute.standard.DateTimeAtCompleted.getName();javax.print.attribute.standard.DateTimeAtCreation.getName();javax.print.attribute.standard.DateTimeAtProcessing.getName();javax.print.attribute.standard.Destination.getName();javax.print.attribute.standard.DialogTypeSelection.getName();javax.print.attribute.standard.DocumentName.getName();javax.print.attribute.standard.Fidelity.getName();javax.print.attribute.standard.Finishings.getName();javax.print.attribute.standard.JobHoldUntil.getName();javax.print.attribute.standard.JobImpressions.getName();javax.print.attribute.standard.JobImpressionsCompleted.getName();javax.print.attribute.standard.JobImpressionsSupported.getName();javax.print.attribute.standard.JobKOctets.getName();javax.print.attribute.standard.JobKOctetsProcessed.getName();javax.print.attribute.standard.JobKOctetsSupported.getName();javax.print.attribute.standard.JobMediaSheets.getName();javax.print.attribute.standard.JobMediaSheetsCompleted.getName();javax.print.attribute.standard.JobMediaSheetsSupported.getName();javax.print.attribute.standard.JobMessageFromOperator.getName();javax.print.attribute.standard.JobName.getName();javax.print.attribute.standard.JobOriginatingUserName.getName();javax.print.attribute.standard.JobPriority.getName();javax.print.attribute.standard.JobPrioritySupported.getName();javax.print.attribute.standard.JobSheets.getName();javax.print.attribute.standard.JobState.getName();javax.print.attribute.standard.JobStateReason.getName();javax.print.attribute.standard.JobStateReasons.getName();javax.print.attribute.standard.Media.getName();javax.print.attribute.standard.MediaPrintableArea.getName();javax.print.attribute.standard.MediaSize.getName();javax.print.attribute.standard.MultipleDocumentHandling.getName();javax.print.attribute.standard.NumberOfDocuments.getName();javax.print.attribute.standard.NumberOfInterveningJobs.getName();javax.print.attribute.standard.NumberUp.getName();javax.print.attribute.standard.NumberUpSupported.getName();javax.print.attribute.standard.OrientationRequested.getName();javax.print.attribute.standard.OutputDeviceAssigned.getName();javax.print.attribute.standard.PageRanges.getName();javax.print.attribute.standard.PagesPerMinute.getName();javax.print.attribute.standard.PagesPerMinuteColor.getName();javax.print.attribute.standard.PDLOverrideSupported.getName();javax.print.attribute.standard.PresentationDirection.getName();javax.print.attribute.standard.PrinterInfo.getName();javax.print.attribute.standard.PrinterIsAcceptingJobs.getName();javax.print.attribute.standard.PrinterLocation.getName();javax.print.attribute.standard.PrinterMakeAndModel.getName();javax.print.attribute.standard.PrinterMessageFromOperator.getName();javax.print.attribute.standard.PrinterMoreInfo.getName();javax.print.attribute.standard.PrinterMoreInfoManufacturer.getName();javax.print.attribute.standard.PrinterName.getName();javax.print.attribute.standard.PrinterResolution.getName();javax.print.attribute.standard.PrinterState.getName();javax.print.attribute.standard.PrinterStateReason.getName();javax.print.attribute.standard.PrinterStateReasons.getName();javax.print.attribute.standard.PrinterURI.getName();javax.print.attribute.standard.PrintQuality.getName();javax.print.attribute.standard.QueuedJobCount.getName();javax.print.attribute.standard.ReferenceUriSchemesSupported.getName();javax.print.attribute.standard.RequestingUserName.getName();javax.print.attribute.standard.Severity.getName();javax.print.attribute.standard.SheetCollate.getName();javax.print.attribute.standard.Sides.getName();javax.security.auth.callback.NameCallback.getName();javax.security.auth.kerberos.KerberosPrincipal.getName();javax.security.auth.x500.X500Principal.getName();javax.security.auth.x500.X500Principal.getName(String,Map&lt;String,String&gt;);javax.sound.midi.MidiDevice.Info.getName();javax.sound.midi.SoundbankResource.getName();javax.sound.sampled.Mixer.Info.getName();javax.sound.sampled.Port.Info.getName();javax.sound.sampled.ReverbType.getName();javax.swing.JFileChooser.getName(File);javax.swing.LookAndFeel.getName();javax.swing.UIManager.LookAndFeelInfo.getName();javax.swing.filechooser.FileView.getName(File);javax.swing.plaf.metal.DefaultMetalTheme.getName();javax.swing.plaf.metal.MetalLookAndFeel.getName();javax.swing.plaf.metal.MetalTheme.getName();javax.swing.plaf.metal.OceanTheme.getName();javax.swing.plaf.multi.MultiLookAndFeel.getName();javax.swing.plaf.nimbus.NimbusLookAndFeel.getName();javax.swing.plaf.synth.Region.getName();javax.swing.plaf.synth.SynthLookAndFeel.getName();javax.swing.text.html.parser.DTD.getName();javax.swing.text.html.parser.Element.getName();javax.swing.text.html.parser.Entity.getName();javax.tools.ForwardingFileObject.getName();javax.tools.SimpleJavaFileObject.getName();javax.xml.bind.JAXBElement.getName();javax.xml.soap.MimeHeader.getName();javax.xml.stream.util.StreamReaderDelegate.getName();org.xml.sax.helpers.AttributeListImpl.getName(int)",;0.08;0.09;0.01;0.07;0.10;0.08;0.01;0.06;0.08;0.07;0.01;0.02;0.05;0.01;0.08;0.04;0.10;0.10;0.10;0.05;0.10;0.07;0.00;0.04;0.01;0.09;0.01;0.11;0.01;0.01;0.11;0.01;0.07;0.03;0.01;0.01;0.07;0.11;0.01;0.11;0.09;0.01;0.01;0.37;0.37;0.35;0.37;0.37;0.36;0.36;0.36;0.36;0.36;0.37;0.36;0.35;0.37;0.37;0.37;0.37;0.37;0.36;0.36;0.33;0.36;0.36;0.36;0.37;0.36;0.37;0.37;0.34;0.35;0.33;0.37;0.35;0.28;0.34;0.33;0.36;0.36;0.37;0.36;0.37;0.36;0.37;0.36;0.35;0.33;0.37;0.37;0.36;0.37;0.36;0.36;0.37;0.36;0.37;0.37;0.37;0.33;0.37;0.34;0.34;0.36;0.32;0.36;0.37;0.37;0.37;0.01;0.01;0.01;0.01;0.08;0.08;0.08;0.08;0.05;0.00;0.01;0.09;0.01;0.07;0.06;0.09;0.05;0.01;0.01;0.11;0.01;0.08;0.08;0.08;0.02;0.02;0.01;0.08;0.02;0.00
get,141,0.073651887,"The get() method is used to retrieve the value of a key in a dictionary. It takes a key as an argument and returns the corresponding value. If the key is not found in the dictionary, it returns a default value (which is None by default).",";java.awt.RenderingHints.get(Object);java.beans.Encoder.get(Object);java.io.ObjectInputStream.GetField.get(String,boolean);java.io.ObjectInputStream.GetField.get(String,byte);java.io.ObjectInputStream.GetField.get(String,char);java.io.ObjectInputStream.GetField.get(String,short);java.io.ObjectInputStream.GetField.get(String,int);java.io.ObjectInputStream.GetField.get(String,long);java.io.ObjectInputStream.GetField.get(String,float);java.io.ObjectInputStream.GetField.get(String,double);java.io.ObjectInputStream.GetField.get(String,Object);java.lang.ClassValue.get(Class&lt;?&gt;);java.lang.ThreadLocal.get();java.lang.ref.PhantomReference.get();java.lang.ref.Reference.get();java.lang.ref.SoftReference.get();java.lang.reflect.Array.get(Object,int);java.lang.reflect.Field.get(Object);java.net.CookieHandler.get(URI,Map&lt;String,List&lt;String&gt;&gt;);java.net.CookieManager.get(URI,Map&lt;String,List&lt;String&gt;&gt;);java.net.ResponseCache.get(URI,String,Map&lt;String,List&lt;String&gt;&gt;);java.nio.ByteBuffer.get();java.nio.ByteBuffer.get(int);java.nio.ByteBuffer.get(byte[],int,int);java.nio.ByteBuffer.get(byte[]);java.nio.CharBuffer.get();java.nio.CharBuffer.get(int);java.nio.CharBuffer.get(char[],int,int);java.nio.CharBuffer.get(char[]);java.nio.DoubleBuffer.get();java.nio.DoubleBuffer.get(int);java.nio.DoubleBuffer.get(double[],int,int);java.nio.DoubleBuffer.get(double[]);java.nio.FloatBuffer.get();java.nio.FloatBuffer.get(int);java.nio.FloatBuffer.get(float[],int,int);java.nio.FloatBuffer.get(float[]);java.nio.IntBuffer.get();java.nio.IntBuffer.get(int);java.nio.IntBuffer.get(int[],int,int);java.nio.IntBuffer.get(int[]);java.nio.LongBuffer.get();java.nio.LongBuffer.get(int);java.nio.LongBuffer.get(long[],int,int);java.nio.LongBuffer.get(long[]);java.nio.ShortBuffer.get();java.nio.ShortBuffer.get(int);java.nio.ShortBuffer.get(short[],int,int);java.nio.ShortBuffer.get(short[]);java.nio.file.Paths.get(String,String...);java.nio.file.Paths.get(URI);java.rmi.MarshalledObject.get();java.security.Provider.get(Object);java.time.Duration.get(TemporalUnit);java.time.Instant.get(TemporalField);java.time.LocalDate.get(TemporalField);java.time.LocalDateTime.get(TemporalField);java.time.LocalTime.get(TemporalField);java.time.MonthDay.get(TemporalField);java.time.OffsetDateTime.get(TemporalField);java.time.OffsetTime.get(TemporalField);java.time.Period.get(TemporalUnit);java.time.Year.get(TemporalField);java.time.YearMonth.get(TemporalField);java.time.ZonedDateTime.get(TemporalField);java.time.ZoneOffset.get(TemporalField);java.util.AbstractList.get(int);java.util.AbstractMap.get(Object);java.util.AbstractSequentialList.get(int);java.util.ArrayList.get(int);java.util.BitSet.get(int);java.util.BitSet.get(int,int);java.util.Calendar.get(int);java.util.Dictionary.get(Object);java.util.EnumMap.get(Object);java.util.HashMap.get(Object);java.util.Hashtable.get(Object);java.util.IdentityHashMap.get(Object);java.util.LinkedHashMap.get(Object);java.util.LinkedList.get(int);java.util.Optional.get();java.util.TreeMap.get(Object);java.util.Vector.get(int);java.util.WeakHashMap.get(Object);java.util.concurrent.CompletableFuture.get();java.util.concurrent.CompletableFuture.get(long,TimeUnit);java.util.concurrent.ConcurrentHashMap.get(Object);java.util.concurrent.ConcurrentSkipListMap.get(Object);java.util.concurrent.CopyOnWriteArrayList.get(int);java.util.concurrent.ForkJoinTask.get();java.util.concurrent.ForkJoinTask.get(long,TimeUnit);java.util.concurrent.FutureTask.get();java.util.concurrent.FutureTask.get(long,TimeUnit);java.util.concurrent.atomic.AtomicBoolean.get();java.util.concurrent.atomic.AtomicInteger.get();java.util.concurrent.atomic.AtomicIntegerArray.get(int);java.util.concurrent.atomic.AtomicIntegerFieldUpdater.get(T);java.util.concurrent.atomic.AtomicLong.get();java.util.concurrent.atomic.AtomicLongArray.get(int);java.util.concurrent.atomic.AtomicLongFieldUpdater.get(T);java.util.concurrent.atomic.AtomicMarkableReference.get(boolean[]);java.util.concurrent.atomic.AtomicReference.get();java.util.concurrent.atomic.AtomicReferenceArray.get(int);java.util.concurrent.atomic.AtomicReferenceFieldUpdater.get(T);java.util.concurrent.atomic.AtomicStampedReference.get(int[]);java.util.concurrent.atomic.DoubleAccumulator.get();java.util.concurrent.atomic.LongAccumulator.get();java.util.jar.Attributes.get(Object);java.util.prefs.AbstractPreferences.get(String,String);java.util.prefs.Preferences.get(String,String);javax.accessibility.AccessibleRelationSet.get(String);javax.activation.MimeTypeParameterList.get(String);javax.management.openmbean.CompositeDataSupport.get(String);javax.management.openmbean.TabularDataSupport.get(Object);javax.management.openmbean.TabularDataSupport.get(Object[]);javax.naming.CompositeName.get(int);javax.naming.CompoundName.get(int);javax.naming.Reference.get(String);javax.naming.Reference.get(int);javax.naming.directory.BasicAttribute.get();javax.naming.directory.BasicAttribute.get(int);javax.naming.directory.BasicAttributes.get(String);javax.naming.ldap.LdapName.get(int);javax.print.attribute.HashAttributeSet.get(Class&lt;?&gt;);javax.script.AbstractScriptEngine.get(String);javax.script.ScriptEngineManager.get(String);javax.script.SimpleBindings.get(Object);javax.sound.midi.Track.get(int);javax.swing.ActionMap.get(Object);javax.swing.DefaultListModel.get(int);javax.swing.InputMap.get(KeyStroke);javax.swing.SwingWorker.get();javax.swing.SwingWorker.get(long,TimeUnit);javax.swing.UIDefaults.get(Object);javax.swing.UIDefaults.get(Object,Locale);javax.swing.UIManager.get(Object);javax.swing.UIManager.get(Object,Locale);javax.swing.plaf.nimbus.NimbusStyle.get(SynthContext,Object);javax.swing.plaf.synth.SynthStyle.get(SynthContext,Object);javax.xml.crypto.dom.DOMCryptoContext.get(Object);javax.xml.soap.SOAPConnection.get(Object)",;0.01;0.01;0.05;0.05;0.05;0.05;0.05;0.05;0.05;0.05;0.05;0.01;0.01;0.01;0.02;0.02;0.02;0.01;0.01;0.01;0.01;0.05;0.04;0.05;0.05;0.05;0.04;0.05;0.05;0.05;0.04;0.05;0.05;0.05;0.04;0.05;0.05;0.05;0.04;0.05;0.05;0.05;0.04;0.05;0.05;0.05;0.04;0.05;0.05;0.01;0.01;0.01;0.01;0.02;0.07;0.07;0.07;0.07;0.07;0.07;0.07;0.02;0.07;0.07;0.07;0.07;0.04;0.06;0.02;0.04;0.02;0.01;0.01;0.01;0.07;0.07;0.05;0.07;0.07;0.04;0.01;0.06;0.03;0.07;0.02;0.02;0.05;0.05;0.04;0.02;0.02;0.02;0.02;0.01;0.03;0.03;0.03;0.03;0.03;0.03;0.01;0.03;0.03;0.03;0.01;0.01;0.01;0.02;0.01;0.01;0.01;0.01;0.02;0.01;0.01;0.01;0.01;0.01;0.01;0.01;0.02;0.02;0.01;0.01;0.01;0.01;0.06;0.01;0.01;0.02;0.01;0.01;0.02;0.01;0.01;0.01;0.01;0.01;0.01;0.01;0.01
remove,143,0.070916113,"Removes a single instance of the specified element from this queue, if it is present. More formally, removes an element e such that o.equals(e), if this queue contains one or more such elements. Returns true if this queue contained the specified element (or equivalently, if this queue changed as a result of the call).",";java.awt.AWTEventMulticaster.remove(EventListener);java.awt.AWTEventMulticaster.remove(ComponentListener,ComponentListener);java.awt.AWTEventMulticaster.remove(ContainerListener,ContainerListener);java.awt.AWTEventMulticaster.remove(FocusListener,FocusListener);java.awt.AWTEventMulticaster.remove(KeyListener,KeyListener);java.awt.AWTEventMulticaster.remove(MouseListener,MouseListener);java.awt.AWTEventMulticaster.remove(MouseMotionListener,MouseMotionListener);java.awt.AWTEventMulticaster.remove(WindowListener,WindowListener);java.awt.AWTEventMulticaster.remove(WindowStateListener,WindowStateListener);java.awt.AWTEventMulticaster.remove(WindowFocusListener,WindowFocusListener);java.awt.AWTEventMulticaster.remove(ActionListener,ActionListener);java.awt.AWTEventMulticaster.remove(ItemListener,ItemListener);java.awt.AWTEventMulticaster.remove(AdjustmentListener,AdjustmentListener);java.awt.AWTEventMulticaster.remove(InputMethodListener,InputMethodListener);java.awt.AWTEventMulticaster.remove(HierarchyListener,HierarchyListener);java.awt.AWTEventMulticaster.remove(HierarchyBoundsListener,HierarchyBoundsListener);java.awt.AWTEventMulticaster.remove(MouseWheelListener,MouseWheelListener);java.awt.Choice.remove(String);java.awt.Choice.remove(int);java.awt.Component.remove(MenuComponent);java.awt.Container.remove(int);java.awt.Container.remove(Component);java.awt.Frame.remove(MenuComponent);java.awt.List.remove(String);java.awt.List.remove(int);java.awt.Menu.remove(int);java.awt.Menu.remove(MenuComponent);java.awt.MenuBar.remove(int);java.awt.MenuBar.remove(MenuComponent);java.awt.RenderingHints.remove(Object);java.awt.SystemTray.remove(TrayIcon);java.beans.Encoder.remove(Object);java.beans.beancontext.BeanContextSupport.remove(Object);java.beans.beancontext.BeanContextSupport.remove(Object,boolean);java.beans.beancontext.BeanContextSupport.BCSIterator.remove();java.lang.ThreadLocal.remove();java.lang.ref.ReferenceQueue.remove(long);java.lang.ref.ReferenceQueue.remove();java.security.Provider.remove(Object);java.security.Provider.remove(Object,Object);java.util.AbstractCollection.remove(Object);java.util.AbstractList.remove(int);java.util.AbstractMap.remove(Object);java.util.AbstractQueue.remove();java.util.AbstractSequentialList.remove(int);java.util.ArrayDeque.remove();java.util.ArrayDeque.remove(Object);java.util.ArrayList.remove(int);java.util.ArrayList.remove(Object);java.util.Dictionary.remove(Object);java.util.EnumMap.remove(Object);java.util.HashMap.remove(Object);java.util.HashMap.remove(Object,Object);java.util.HashSet.remove(Object);java.util.Hashtable.remove(Object);java.util.Hashtable.remove(Object,Object);java.util.IdentityHashMap.remove(Object);java.util.LinkedList.remove(Object);java.util.LinkedList.remove(int);java.util.LinkedList.remove();java.util.PriorityQueue.remove(Object);java.util.Scanner.remove();java.util.TreeMap.remove(Object);java.util.TreeSet.remove(Object);java.util.Vector.remove(Object);java.util.Vector.remove(int);java.util.WeakHashMap.remove(Object);java.util.concurrent.ArrayBlockingQueue.remove(Object);java.util.concurrent.ConcurrentHashMap.remove(Object);java.util.concurrent.ConcurrentHashMap.remove(Object,Object);java.util.concurrent.ConcurrentHashMap.KeySetView.remove(Object);java.util.concurrent.ConcurrentLinkedDeque.remove();java.util.concurrent.ConcurrentLinkedDeque.remove(Object);java.util.concurrent.ConcurrentLinkedQueue.remove(Object);java.util.concurrent.ConcurrentSkipListMap.remove(Object);java.util.concurrent.ConcurrentSkipListMap.remove(Object,Object);java.util.concurrent.ConcurrentSkipListSet.remove(Object);java.util.concurrent.CopyOnWriteArrayList.remove(int);java.util.concurrent.CopyOnWriteArrayList.remove(Object);java.util.concurrent.CopyOnWriteArraySet.remove(Object);java.util.concurrent.DelayQueue.remove(Object);java.util.concurrent.LinkedBlockingDeque.remove();java.util.concurrent.LinkedBlockingDeque.remove(Object);java.util.concurrent.LinkedBlockingQueue.remove(Object);java.util.concurrent.LinkedTransferQueue.remove(Object);java.util.concurrent.PriorityBlockingQueue.remove(Object);java.util.concurrent.SynchronousQueue.remove(Object);java.util.concurrent.ThreadPoolExecutor.remove(Runnable);java.util.jar.Attributes.remove(Object);java.util.prefs.AbstractPreferences.remove(String);java.util.prefs.Preferences.remove(String);javax.accessibility.AccessibleRelationSet.remove(AccessibleRelation);javax.accessibility.AccessibleStateSet.remove(AccessibleState);javax.activation.MimeTypeParameterList.remove(String);javax.management.openmbean.TabularDataSupport.remove(Object);javax.management.openmbean.TabularDataSupport.remove(Object[]);javax.naming.CompositeName.remove(int);javax.naming.CompoundName.remove(int);javax.naming.Reference.remove(int);javax.naming.directory.BasicAttribute.remove(Object);javax.naming.directory.BasicAttribute.remove(int);javax.naming.directory.BasicAttributes.remove(String);javax.naming.ldap.LdapName.remove(int);javax.print.attribute.HashAttributeSet.remove(Class&lt;?&gt;);javax.print.attribute.HashAttributeSet.remove(Attribute);javax.script.SimpleBindings.remove(Object);javax.sound.midi.Track.remove(MidiEvent);javax.swing.ActionMap.remove(Object);javax.swing.ButtonGroup.remove(AbstractButton);javax.swing.ComponentInputMap.remove(KeyStroke);javax.swing.DefaultListModel.remove(int);javax.swing.InputMap.remove(KeyStroke);javax.swing.JApplet.remove(Component);javax.swing.JDesktopPane.remove(Component);javax.swing.JDesktopPane.remove(int);javax.swing.JDialog.remove(Component);javax.swing.JFrame.remove(Component);javax.swing.JInternalFrame.remove(Component);javax.swing.JLayer.remove(Component);javax.swing.JLayeredPane.remove(int);javax.swing.JMenu.remove(JMenuItem);javax.swing.JMenu.remove(int);javax.swing.JMenu.remove(Component);javax.swing.JPopupMenu.remove(int);javax.swing.JSplitPane.remove(Component);javax.swing.JSplitPane.remove(int);javax.swing.JTabbedPane.remove(Component);javax.swing.JTabbedPane.remove(int);javax.swing.JViewport.remove(Component);javax.swing.JWindow.remove(Component);javax.swing.event.EventListenerList.remove(Class&lt;T&gt;,T);javax.swing.text.AbstractDocument.remove(int,int);javax.swing.text.DocumentFilter.remove(DocumentFilter.FilterBypass,int,int);javax.swing.text.DocumentFilter.FilterBypass.remove(int,int);javax.swing.text.GapContent.remove(int,int);javax.swing.text.StringContent.remove(int,int);javax.swing.text.View.remove(int);javax.swing.tree.DefaultMutableTreeNode.remove(int);javax.swing.tree.DefaultMutableTreeNode.remove(MutableTreeNode);javax.xml.stream.util.EventReaderDelegate.remove();org.omg.CORBA.ContextList.remove(int);org.omg.CORBA.ExceptionList.remove(int);org.omg.CORBA.NVList.remove(int)",;0.01;0.07;0.07;0.07;0.07;0.07;0.06;0.07;0.06;0.07;0.07;0.07;0.07;0.06;0.07;0.06;0.06;0.02;0.02;0.01;0.03;0.03;0.01;0.02;0.02;0.02;0.01;0.02;0.02;0.03;0.01;0.01;0.01;0.01;0.04;0.01;0.01;0.01;0.01;0.01;0.04;0.03;0.03;0.02;0.03;0.02;0.06;0.03;0.06;0.03;0.03;0.03;0.04;0.07;0.03;0.04;0.03;0.06;0.04;0.01;0.07;0.01;0.02;0.07;0.03;0.03;0.03;0.05;0.03;0.02;0.03;0.04;0.02;0.07;0.03;0.02;0.07;0.04;0.06;0.07;0.01;0.02;0.06;0.07;0.07;0.07;0.01;0.01;0.01;0.01;0.01;0.01;0.01;0.01;0.01;0.01;0.02;0.02;0.01;0.01;0.04;0.04;0.02;0.01;0.01;0.03;0.01;0.02;0.01;0.02;0.02;0.02;0.03;0.03;0.01;0.03;0.03;0.02;0.03;0.01;0.01;0.02;0.01;0.02;0.01;0.01;0.01;0.01;0.01;0.03;0.01;0.01;0.01;0.01;0.01;0.01;0.01;0.01;0.01;0.04;0.02;0.02;0.02
paint,155,0.198209717,The paint() method is used to draw graphics on a component in a graphical user interface (GUI).,";java.awt.Canvas.paint(Graphics);java.awt.Component.paint(Graphics);java.awt.Container.paint(Graphics);java.awt.Window.paint(Graphics);javax.swing.CellRendererPane.paint(Graphics);javax.swing.JComponent.paint(Graphics);javax.swing.JLayer.paint(Graphics);javax.swing.JLayeredPane.paint(Graphics);javax.swing.JViewport.paint(Graphics);javax.swing.colorchooser.AbstractColorChooserPanel.paint(Graphics);javax.swing.plaf.ComponentUI.paint(Graphics,JComponent);javax.swing.plaf.LayerUI.paint(Graphics,JComponent);javax.swing.plaf.basic.BasicArrowButton.paint(Graphics);javax.swing.plaf.basic.BasicButtonUI.paint(Graphics,JComponent);javax.swing.plaf.basic.BasicComboBoxUI.paint(Graphics,JComponent);javax.swing.plaf.basic.BasicDesktopPaneUI.paint(Graphics,JComponent);javax.swing.plaf.basic.BasicLabelUI.paint(Graphics,JComponent);javax.swing.plaf.basic.BasicListUI.paint(Graphics,JComponent);javax.swing.plaf.basic.BasicMenuItemUI.paint(Graphics,JComponent);javax.swing.plaf.basic.BasicPopupMenuSeparatorUI.paint(Graphics,JComponent);javax.swing.plaf.basic.BasicProgressBarUI.paint(Graphics,JComponent);javax.swing.plaf.basic.BasicRadioButtonUI.paint(Graphics,JComponent);javax.swing.plaf.basic.BasicScrollBarUI.paint(Graphics,JComponent);javax.swing.plaf.basic.BasicScrollPaneUI.paint(Graphics,JComponent);javax.swing.plaf.basic.BasicSeparatorUI.paint(Graphics,JComponent);javax.swing.plaf.basic.BasicSliderUI.paint(Graphics,JComponent);javax.swing.plaf.basic.BasicSplitPaneDivider.paint(Graphics);javax.swing.plaf.basic.BasicSplitPaneUI.paint(Graphics,JComponent);javax.swing.plaf.basic.BasicTabbedPaneUI.paint(Graphics,JComponent);javax.swing.plaf.basic.BasicTableHeaderUI.paint(Graphics,JComponent);javax.swing.plaf.basic.BasicTableUI.paint(Graphics,JComponent);javax.swing.plaf.basic.BasicTextUI.paint(Graphics,JComponent);javax.swing.plaf.basic.BasicToggleButtonUI.paint(Graphics,JComponent);javax.swing.plaf.basic.BasicToolBarSeparatorUI.paint(Graphics,JComponent);javax.swing.plaf.basic.BasicToolTipUI.paint(Graphics,JComponent);javax.swing.plaf.basic.BasicTreeUI.paint(Graphics,JComponent);javax.swing.plaf.metal.MetalComboBoxUI.paint(Graphics,JComponent);javax.swing.plaf.metal.MetalPopupMenuSeparatorUI.paint(Graphics,JComponent);javax.swing.plaf.metal.MetalRadioButtonUI.paint(Graphics,JComponent);javax.swing.plaf.metal.MetalScrollButton.paint(Graphics);javax.swing.plaf.metal.MetalSeparatorUI.paint(Graphics,JComponent);javax.swing.plaf.metal.MetalTabbedPaneUI.paint(Graphics,JComponent);javax.swing.plaf.metal.MetalToolTipUI.paint(Graphics,JComponent);javax.swing.plaf.metal.MetalTreeUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiButtonUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiColorChooserUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiComboBoxUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiDesktopIconUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiDesktopPaneUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiFileChooserUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiInternalFrameUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiLabelUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiListUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiMenuBarUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiMenuItemUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiOptionPaneUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiPanelUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiPopupMenuUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiProgressBarUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiRootPaneUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiScrollBarUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiScrollPaneUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiSeparatorUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiSliderUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiSpinnerUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiSplitPaneUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiTabbedPaneUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiTableHeaderUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiTableUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiTextUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiToolBarUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiToolTipUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiTreeUI.paint(Graphics,JComponent);javax.swing.plaf.multi.MultiViewportUI.paint(Graphics,JComponent);javax.swing.plaf.nimbus.AbstractRegionPainter.paint(Graphics2D,JComponent,int,int);javax.swing.plaf.synth.SynthButtonUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthButtonUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthColorChooserUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthColorChooserUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthComboBoxUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthComboBoxUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthDesktopIconUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthDesktopIconUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthDesktopPaneUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthDesktopPaneUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthEditorPaneUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthInternalFrameUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthInternalFrameUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthLabelUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthLabelUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthMenuBarUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthMenuBarUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthMenuItemUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthMenuItemUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthMenuUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthMenuUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthOptionPaneUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthOptionPaneUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthPanelUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthPanelUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthPopupMenuUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthPopupMenuUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthProgressBarUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthProgressBarUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthRootPaneUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthRootPaneUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthScrollBarUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthScrollBarUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthScrollPaneUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthScrollPaneUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthSeparatorUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthSeparatorUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthSliderUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthSliderUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthSpinnerUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthSpinnerUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthSplitPaneUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthSplitPaneUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthTabbedPaneUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthTabbedPaneUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthTableHeaderUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthTableHeaderUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthTableUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthTableUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthTextAreaUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthTextFieldUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthToolBarUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthToolBarUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthToolTipUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthToolTipUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthTreeUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthTreeUI.paint(SynthContext,Graphics);javax.swing.plaf.synth.SynthViewportUI.paint(Graphics,JComponent);javax.swing.plaf.synth.SynthViewportUI.paint(SynthContext,Graphics);javax.swing.text.AsyncBoxView.paint(Graphics,Shape);javax.swing.text.BoxView.paint(Graphics,Shape);javax.swing.text.ComponentView.paint(Graphics,Shape);javax.swing.text.DefaultCaret.paint(Graphics);javax.swing.text.DefaultHighlighter.paint(Graphics);javax.swing.text.DefaultHighlighter.DefaultHighlightPainter.paint(Graphics,int,int,Shape,JTextComponent);javax.swing.text.FieldView.paint(Graphics,Shape);javax.swing.text.GlyphView.paint(Graphics,Shape);javax.swing.text.GlyphView.GlyphPainter.paint(GlyphView,Graphics,Shape,int,int);javax.swing.text.IconView.paint(Graphics,Shape);javax.swing.text.ParagraphView.paint(Graphics,Shape);javax.swing.text.PlainView.paint(Graphics,Shape);javax.swing.text.View.paint(Graphics,Shape);javax.swing.text.WrappedPlainView.paint(Graphics,Shape);javax.swing.text.html.BlockView.paint(Graphics,Shape);javax.swing.text.html.ImageView.paint(Graphics,Shape);javax.swing.text.html.ListView.paint(Graphics,Shape);javax.swing.text.html.ParagraphView.paint(Graphics,Shape);javax.swing.text.html.StyleSheet.BoxPainter.paint(Graphics,float,float,float,float,View);javax.swing.text.html.StyleSheet.ListPainter.paint(Graphics,float,float,float,float,View,int);javax.swing.tree.DefaultTreeCellRenderer.paint(Graphics)",;0.01;0.01;0.01;0.01;0.01;0.01;0.01;0.01;0.01;0.00;0.04;0.04;0.11;0.15;0.15;0.15;0.01;0.01;0.15;0.15;0.01;0.01;0.15;0.15;0.15;0.15;0.00;0.04;0.15;0.15;0.01;0.01;0.15;0.15;0.15;0.15;0.15;0.15;0.11;0.11;0.15;0.15;0.15;0.15;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.19;0.01;0.20;0.13;0.20;0.08;0.20;0.13;0.20;0.12;0.20;0.12;0.13;0.20;0.12;0.20;0.13;0.20;0.12;0.20;0.13;0.20;0.12;0.20;0.12;0.20;0.12;0.20;0.12;0.20;0.13;0.20;0.12;0.20;0.13;0.20;0.13;0.20;0.13;0.20;0.13;0.20;0.12;0.20;0.12;0.20;0.13;0.20;0.13;0.20;0.13;0.13;0.03;0.20;0.00;0.20;0.13;0.20;0.13;0.20;0.12;0.01;0.02;0.01;0.01;0.00;0.00;0.03;0.01;0.01;0.01;0.03;0.03;0.03;0.03;0.03;0.00;0.02;0.03;0.01;0.01;0.01
equals,268,0.076443887,The equals() method is used to compare two objects for equality.,";java.awt.AlphaComposite.equals(Object);java.awt.AWTKeyStroke.equals(Object);java.awt.BasicStroke.equals(Object);java.awt.Color.equals(Object);java.awt.Dimension.equals(Object);java.awt.DisplayMode.equals(DisplayMode);java.awt.Font.equals(Object);java.awt.Insets.equals(Object);java.awt.JobAttributes.equals(Object);java.awt.MenuShortcut.equals(MenuShortcut);java.awt.MenuShortcut.equals(Object);java.awt.PageAttributes.equals(Object);java.awt.Point.equals(Object);java.awt.Rectangle.equals(Object);java.awt.RenderingHints.equals(Object);java.awt.RenderingHints.Key.equals(Object);java.awt.datatransfer.DataFlavor.equals(DataFlavor);java.awt.datatransfer.DataFlavor.equals(String);java.awt.font.FontRenderContext.equals(Object);java.awt.font.FontRenderContext.equals(FontRenderContext);java.awt.font.GlyphVector.equals(GlyphVector);java.awt.font.ImageGraphicAttribute.equals(Object);java.awt.font.ImageGraphicAttribute.equals(ImageGraphicAttribute);java.awt.font.NumericShaper.equals(Object);java.awt.font.ShapeGraphicAttribute.equals(Object);java.awt.font.ShapeGraphicAttribute.equals(ShapeGraphicAttribute);java.awt.font.TextHitInfo.equals(Object);java.awt.font.TextHitInfo.equals(TextHitInfo);java.awt.font.TextLayout.equals(Object);java.awt.font.TextLayout.equals(TextLayout);java.awt.font.TransformAttribute.equals(Object);java.awt.geom.AffineTransform.equals(Object);java.awt.geom.Arc2D.equals(Object);java.awt.geom.Area.equals(Area);java.awt.geom.Ellipse2D.equals(Object);java.awt.geom.Point2D.equals(Object);java.awt.geom.Rectangle2D.equals(Object);java.awt.geom.RoundRectangle2D.equals(Object);java.awt.image.ColorModel.equals(Object);java.awt.image.ComponentColorModel.equals(Object);java.awt.image.ComponentSampleModel.equals(Object);java.awt.image.MultiPixelPackedSampleModel.equals(Object);java.awt.image.PackedColorModel.equals(Object);java.awt.image.SinglePixelPackedSampleModel.equals(Object);java.beans.IndexedPropertyDescriptor.equals(Object);java.beans.PropertyDescriptor.equals(Object);java.io.File.equals(Object);java.io.FilePermission.equals(Object);java.lang.Boolean.equals(Object);java.lang.Byte.equals(Object);java.lang.Character.equals(Object);java.lang.Character.Subset.equals(Object);java.lang.Enum.equals(Object);java.lang.Integer.equals(Object);java.lang.Long.equals(Object);java.lang.ProcessBuilder.Redirect.equals(Object);java.lang.Short.equals(Object);java.lang.StackTraceElement.equals(Object);java.lang.String.equals(Object);java.lang.invoke.MethodType.equals(Object);java.lang.reflect.Constructor.equals(Object);java.lang.reflect.Field.equals(Object);java.lang.reflect.Method.equals(Object);java.lang.reflect.Parameter.equals(Object);java.math.BigDecimal.equals(Object);java.math.BigInteger.equals(Object);java.math.MathContext.equals(Object);java.net.HttpCookie.equals(Object);java.net.Inet4Address.equals(Object);java.net.Inet6Address.equals(Object);java.net.InetAddress.equals(Object);java.net.InetSocketAddress.equals(Object);java.net.InterfaceAddress.equals(Object);java.net.NetworkInterface.equals(Object);java.net.Proxy.equals(Object);java.net.SocketPermission.equals(Object);java.net.URI.equals(Object);java.net.URL.equals(Object);java.net.URLPermission.equals(Object);java.net.URLStreamHandler.equals(URL,URL);java.nio.charset.Charset.equals(Object);java.nio.file.attribute.AclEntry.equals(Object);java.nio.file.attribute.FileTime.equals(Object);java.rmi.MarshalledObject.equals(Object);java.rmi.activation.ActivationDesc.equals(Object);java.rmi.activation.ActivationGroupDesc.equals(Object);java.rmi.activation.ActivationGroupDesc.CommandEnvironment.equals(Object);java.rmi.activation.ActivationGroupID.equals(Object);java.rmi.activation.ActivationID.equals(Object);java.rmi.dgc.VMID.equals(Object);java.rmi.server.ObjID.equals(Object);java.rmi.server.RemoteObject.equals(Object);java.rmi.server.UID.equals(Object);java.security.AccessControlContext.equals(Object);java.security.AllPermission.equals(Object);java.security.BasicPermission.equals(Object);java.security.CodeSigner.equals(Object);java.security.CodeSource.equals(Object);java.security.Identity.equals(Object);java.security.Permission.equals(Object);java.security.PKCS12Attribute.equals(Object);java.security.Timestamp.equals(Object);java.security.UnresolvedPermission.equals(Object);java.security.cert.Certificate.equals(Object);java.security.cert.CertPath.equals(Object);java.security.cert.X509CRL.equals(Object);java.security.cert.X509CRLEntry.equals(Object);java.security.spec.ECFieldF2m.equals(Object);java.security.spec.ECFieldFp.equals(Object);java.security.spec.ECPoint.equals(Object);java.security.spec.EllipticCurve.equals(Object);java.sql.Timestamp.equals(Timestamp);java.sql.Timestamp.equals(Object);java.text.AttributedCharacterIterator.Attribute.equals(Object);java.text.ChoiceFormat.equals(Object);java.text.Collator.equals(String,String);java.text.Collator.equals(Object);java.text.DateFormat.equals(Object);java.text.DateFormatSymbols.equals(Object);java.text.DecimalFormat.equals(Object);java.text.DecimalFormatSymbols.equals(Object);java.text.FieldPosition.equals(Object);java.text.MessageFormat.equals(Object);java.text.NumberFormat.equals(Object);java.text.ParsePosition.equals(Object);java.text.RuleBasedCollator.equals(Object);java.text.SimpleDateFormat.equals(Object);java.text.StringCharacterIterator.equals(Object);java.time.Clock.equals(Object);java.time.Duration.equals(Object);java.time.Instant.equals(Object);java.time.LocalDate.equals(Object);java.time.LocalDateTime.equals(Object);java.time.LocalTime.equals(Object);java.time.MonthDay.equals(Object);java.time.OffsetDateTime.equals(Object);java.time.OffsetTime.equals(Object);java.time.Period.equals(Object);java.time.Year.equals(Object);java.time.YearMonth.equals(Object);java.time.ZonedDateTime.equals(Object);java.time.ZoneId.equals(Object);java.time.ZoneOffset.equals(Object);java.time.chrono.AbstractChronology.equals(Object);java.time.chrono.HijrahDate.equals(Object);java.time.chrono.JapaneseDate.equals(Object);java.time.chrono.MinguoDate.equals(Object);java.time.chrono.ThaiBuddhistDate.equals(Object);java.time.format.DecimalStyle.equals(Object);java.time.temporal.ValueRange.equals(Object);java.time.temporal.WeekFields.equals(Object);java.time.zone.ZoneOffsetTransition.equals(Object);java.time.zone.ZoneOffsetTransitionRule.equals(Object);java.time.zone.ZoneRules.equals(Object);java.util.AbstractList.equals(Object);java.util.AbstractMap.equals(Object);java.util.AbstractMap.SimpleEntry.equals(Object);java.util.AbstractMap.SimpleImmutableEntry.equals(Object);java.util.AbstractSet.equals(Object);java.util.Arrays.equals(long[],long[]);java.util.Arrays.equals(int[],int[]);java.util.Arrays.equals(short[],short[]);java.util.Arrays.equals(char[],char[]);java.util.Arrays.equals(byte[],byte[]);java.util.Arrays.equals(boolean[],boolean[]);java.util.Arrays.equals(double[],double[]);java.util.Arrays.equals(float[],float[]);java.util.Arrays.equals(Object[],Object[]);java.util.BitSet.equals(Object);java.util.Calendar.equals(Object);java.util.Date.equals(Object);java.util.EnumMap.equals(Object);java.util.GregorianCalendar.equals(Object);java.util.Hashtable.equals(Object);java.util.IdentityHashMap.equals(Object);java.util.Locale.equals(Object);java.util.Locale.LanguageRange.equals(Object);java.util.Objects.equals(Object,Object);java.util.PropertyPermission.equals(Object);java.util.SimpleTimeZone.equals(Object);java.util.UUID.equals(Object);java.util.Vector.equals(Object);java.util.concurrent.ConcurrentHashMap.equals(Object);java.util.concurrent.ConcurrentHashMap.KeySetView.equals(Object);java.util.concurrent.ConcurrentSkipListMap.equals(Object);java.util.concurrent.ConcurrentSkipListSet.equals(Object);java.util.concurrent.CopyOnWriteArrayList.equals(Object);java.util.concurrent.CopyOnWriteArraySet.equals(Object);java.util.jar.Attributes.equals(Object);java.util.jar.Attributes.Name.equals(Object);java.util.jar.Manifest.equals(Object);java.util.logging.Level.equals(Object);javax.activation.ActivationDataFlavor.equals(DataFlavor);javax.crypto.spec.RC2ParameterSpec.equals(Object);javax.crypto.spec.RC5ParameterSpec.equals(Object);javax.crypto.spec.SecretKeySpec.equals(Object);javax.imageio.ImageTypeSpecifier.equals(Object);javax.management.Attribute.equals(Object);javax.management.MBeanAttributeInfo.equals(Object);javax.management.MBeanConstructorInfo.equals(Object);javax.management.MBeanFeatureInfo.equals(Object);javax.management.MBeanInfo.equals(Object);javax.management.MBeanNotificationInfo.equals(Object);javax.management.MBeanOperationInfo.equals(Object);javax.management.MBeanParameterInfo.equals(Object);javax.management.MBeanPermission.equals(Object);javax.management.MBeanServerPermission.equals(Object);javax.management.ObjectInstance.equals(Object);javax.management.ObjectName.equals(Object);javax.management.openmbean.ArrayType.equals(Object);javax.management.openmbean.OpenType.equals(Object);javax.management.openmbean.SimpleType.equals(Object);javax.management.remote.JMXPrincipal.equals(Object);javax.management.remote.JMXServiceURL.equals(Object);javax.naming.BinaryRefAddr.equals(Object);javax.naming.CompositeName.equals(Object);javax.naming.CompoundName.equals(Object);javax.naming.Reference.equals(Object);javax.naming.directory.BasicAttribute.equals(Object);javax.naming.directory.BasicAttributes.equals(Object);javax.naming.ldap.LdapName.equals(Object);javax.net.ssl.SNIHostName.equals(Object);javax.net.ssl.SNIServerName.equals(Object);javax.print.DocFlavor.equals(Object);javax.print.attribute.HashAttributeSet.equals(Object);javax.rmi.CORBA.Stub.equals(Object);javax.rmi.ssl.SslRMIClientSocketFactory.equals(Object);javax.rmi.ssl.SslRMIServerSocketFactory.equals(Object);javax.security.auth.PrivateCredentialPermission.equals(Object);javax.security.auth.Subject.equals(Object);javax.security.auth.kerberos.DelegationPermission.equals(Object);javax.security.auth.kerberos.KerberosKey.equals(Object);javax.security.auth.kerberos.KerberosPrincipal.equals(Object);javax.security.auth.kerberos.KerberosTicket.equals(Object);javax.security.auth.kerberos.KeyTab.equals(Object);javax.security.auth.kerberos.ServicePermission.equals(Object);javax.security.auth.x500.X500Principal.equals(Object);javax.security.cert.Certificate.equals(Object);javax.sound.midi.MidiDevice.Info.equals(Object);javax.sound.midi.Sequencer.SyncMode.equals(Object);javax.sound.sampled.AudioFileFormat.Type.equals(Object);javax.sound.sampled.AudioFormat.Encoding.equals(Object);javax.sound.sampled.Control.Type.equals(Object);javax.sound.sampled.LineEvent.Type.equals(Object);javax.sound.sampled.Mixer.Info.equals(Object);javax.sound.sampled.Port.Info.equals(Object);javax.sound.sampled.ReverbType.equals(Object);javax.sql.rowset.serial.SerialArray.equals(Object);javax.sql.rowset.serial.SerialBlob.equals(Object);javax.sql.rowset.serial.SerialClob.equals(Object);javax.sql.rowset.serial.SerialDatalink.equals(Object);javax.sql.rowset.serial.SerialJavaObject.equals(Object);javax.sql.rowset.serial.SerialRef.equals(Object);javax.sql.rowset.serial.SerialStruct.equals(Object);javax.swing.RowSorter.SortKey.equals(Object);javax.swing.text.DefaultCaret.equals(Object);javax.swing.text.SimpleAttributeSet.equals(Object);javax.swing.text.TabSet.equals(Object);javax.swing.text.TabStop.equals(Object);javax.swing.text.html.HTML.UnknownTag.equals(Object);javax.swing.tree.TreePath.equals(Object);javax.xml.datatype.Duration.equals(Object);javax.xml.datatype.XMLGregorianCalendar.equals(Object);javax.xml.namespace.QName.equals(Object);org.ietf.jgss.ChannelBinding.equals(Object);org.ietf.jgss.Oid.equals(Object);org.omg.CORBA.portable.Delegate.equals(Object,Object);org.omg.CORBA.portable.ObjectImpl.equals(Object)",;0.07;0.01;0.01;0.06;0.00;0.00;0.01;0.01;0.02;0.01;0.01;0.02;0.01;0.06;0.03;0.00;0.00;0.00;0.01;0.01;0.01;0.01;0.01;0.02;0.01;0.01;0.02;0.02;0.02;0.02;0.01;0.01;0.02;0.01;0.02;0.01;0.02;0.02;0.01;0.00;0.01;0.01;0.01;0.01;0.03;0.03;0.04;0.01;0.05;0.08;0.08;0.03;0.02;0.07;0.08;0.04;0.08;0.03;0.07;0.04;0.03;0.03;0.03;0.00;0.00;0.01;0.01;0.01;0.05;0.05;0.05;0.04;0.06;0.06;0.06;0.00;0.01;0.01;0.01;0.00;0.03;0.01;0.06;0.03;0.01;0.01;0.00;0.01;0.01;0.00;0.04;0.01;0.04;0.01;0.00;0.01;0.01;0.01;0.00;0.00;0.00;0.01;0.01;0.02;0.02;0.01;0.01;0.01;0.01;0.01;0.01;0.01;0.01;0.00;0.00;0.01;0.01;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.00;0.01;0.00;0.01;0.01;0.02;0.02;0.03;0.02;0.03;0.02;0.02;0.02;0.01;0.02;0.02;0.02;0.02;0.02;0.02;0.02;0.02;0.02;0.02;0.01;0.02;0.03;0.01;0.01;0.01;0.03;0.04;0.03;0.03;0.03;0.04;0.04;0.04;0.04;0.04;0.04;0.03;0.03;0.04;0.05;0.03;0.05;0.04;0.05;0.01;0.04;0.01;0.07;0.01;0.02;0.01;0.06;0.05;0.03;0.01;0.03;0.03;0.03;0.02;0.03;0.00;0.02;0.00;0.00;0.02;0.02;0.01;0.02;0.00;0.00;0.00;0.00;0.02;0.00;0.00;0.00;0.02;0.01;0.00;0.02;0.02;0.00;0.02;0.03;0.03;0.01;0.01;0.01;0.01;0.01;0.01;0.01;0.03;0.01;0.01;0.03;0.01;0.01;0.01;0.01;0.03;0.00;0.03;0.03;0.03;0.03;0.00;0.01;0.02;0.02;0.02;0.01;0.01;0.01;0.02;0.00;0.01;0.02;0.07;0.07;0.07;0.07;0.07;0.07;0.07;0.01;0.02;0.03;0.01;0.01;0.07;0.01;0.01;0.07;0.02;0.00;0.00;0.00;0.00
hashCode,302,0.12449748,The hashCode() method is used to return a hash code value for an object.,;java.awt.AlphaComposite.hashCode();java.awt.AWTKeyStroke.hashCode();java.awt.BasicStroke.hashCode();java.awt.BufferCapabilities.FlipContents.hashCode();java.awt.Color.hashCode();java.awt.Dimension.hashCode();java.awt.Font.hashCode();java.awt.Insets.hashCode();java.awt.JobAttributes.hashCode();java.awt.JobAttributes.DefaultSelectionType.hashCode();java.awt.JobAttributes.DestinationType.hashCode();java.awt.JobAttributes.DialogType.hashCode();java.awt.JobAttributes.MultipleDocumentHandlingType.hashCode();java.awt.JobAttributes.SidesType.hashCode();java.awt.MenuShortcut.hashCode();java.awt.PageAttributes.hashCode();java.awt.PageAttributes.ColorType.hashCode();java.awt.PageAttributes.MediaType.hashCode();java.awt.PageAttributes.OrientationRequestedType.hashCode();java.awt.PageAttributes.OriginType.hashCode();java.awt.PageAttributes.PrintQualityType.hashCode();java.awt.RenderingHints.hashCode();java.awt.RenderingHints.Key.hashCode();java.awt.datatransfer.DataFlavor.hashCode();java.awt.font.FontRenderContext.hashCode();java.awt.font.ImageGraphicAttribute.hashCode();java.awt.font.NumericShaper.hashCode();java.awt.font.ShapeGraphicAttribute.hashCode();java.awt.font.TextHitInfo.hashCode();java.awt.font.TextLayout.hashCode();java.awt.font.TransformAttribute.hashCode();java.awt.geom.AffineTransform.hashCode();java.awt.geom.Arc2D.hashCode();java.awt.geom.Ellipse2D.hashCode();java.awt.geom.Point2D.hashCode();java.awt.geom.Rectangle2D.hashCode();java.awt.geom.RoundRectangle2D.hashCode();java.awt.image.BandedSampleModel.hashCode();java.awt.image.ColorModel.hashCode();java.awt.image.ComponentSampleModel.hashCode();java.awt.image.MultiPixelPackedSampleModel.hashCode();java.awt.image.PixelInterleavedSampleModel.hashCode();java.awt.image.SinglePixelPackedSampleModel.hashCode();java.beans.IndexedPropertyDescriptor.hashCode();java.beans.PropertyDescriptor.hashCode();java.io.File.hashCode();java.io.FilePermission.hashCode();java.lang.Boolean.hashCode();java.lang.Boolean.hashCode(boolean);java.lang.Byte.hashCode();java.lang.Byte.hashCode(byte);java.lang.Character.hashCode();java.lang.Character.hashCode(char);java.lang.Character.Subset.hashCode();java.lang.Double.hashCode();java.lang.Double.hashCode(double);java.lang.Enum.hashCode();java.lang.Float.hashCode();java.lang.Float.hashCode(float);java.lang.Integer.hashCode();java.lang.Integer.hashCode(int);java.lang.Long.hashCode();java.lang.Long.hashCode(long);java.lang.Package.hashCode();java.lang.ProcessBuilder.Redirect.hashCode();java.lang.Short.hashCode();java.lang.Short.hashCode(short);java.lang.StackTraceElement.hashCode();java.lang.String.hashCode();java.lang.invoke.MethodType.hashCode();java.lang.reflect.Constructor.hashCode();java.lang.reflect.Field.hashCode();java.lang.reflect.Method.hashCode();java.lang.reflect.Parameter.hashCode();java.math.BigDecimal.hashCode();java.math.BigInteger.hashCode();java.math.MathContext.hashCode();java.net.HttpCookie.hashCode();java.net.Inet4Address.hashCode();java.net.Inet6Address.hashCode();java.net.InetAddress.hashCode();java.net.InetSocketAddress.hashCode();java.net.InterfaceAddress.hashCode();java.net.NetworkInterface.hashCode();java.net.Proxy.hashCode();java.net.SocketPermission.hashCode();java.net.URI.hashCode();java.net.URL.hashCode();java.net.URLPermission.hashCode();java.net.URLStreamHandler.hashCode(URL);java.nio.ByteBuffer.hashCode();java.nio.CharBuffer.hashCode();java.nio.DoubleBuffer.hashCode();java.nio.FloatBuffer.hashCode();java.nio.IntBuffer.hashCode();java.nio.LongBuffer.hashCode();java.nio.ShortBuffer.hashCode();java.nio.charset.Charset.hashCode();java.nio.file.attribute.AclEntry.hashCode();java.nio.file.attribute.FileTime.hashCode();java.rmi.MarshalledObject.hashCode();java.rmi.activation.ActivationDesc.hashCode();java.rmi.activation.ActivationGroupDesc.hashCode();java.rmi.activation.ActivationGroupDesc.CommandEnvironment.hashCode();java.rmi.activation.ActivationGroupID.hashCode();java.rmi.activation.ActivationID.hashCode();java.rmi.dgc.VMID.hashCode();java.rmi.server.ObjID.hashCode();java.rmi.server.RemoteObject.hashCode();java.rmi.server.UID.hashCode();java.security.AccessControlContext.hashCode();java.security.AllPermission.hashCode();java.security.BasicPermission.hashCode();java.security.CodeSigner.hashCode();java.security.CodeSource.hashCode();java.security.Identity.hashCode();java.security.PKCS12Attribute.hashCode();java.security.Timestamp.hashCode();java.security.UnresolvedPermission.hashCode();java.security.cert.Certificate.hashCode();java.security.cert.CertPath.hashCode();java.security.cert.X509CRL.hashCode();java.security.cert.X509CRLEntry.hashCode();java.security.spec.ECFieldF2m.hashCode();java.security.spec.ECFieldFp.hashCode();java.security.spec.ECPoint.hashCode();java.security.spec.EllipticCurve.hashCode();java.sql.Timestamp.hashCode();java.text.AttributedCharacterIterator.Attribute.hashCode();java.text.ChoiceFormat.hashCode();java.text.Collator.hashCode();java.text.DateFormat.hashCode();java.text.DateFormatSymbols.hashCode();java.text.DecimalFormat.hashCode();java.text.DecimalFormatSymbols.hashCode();java.text.FieldPosition.hashCode();java.text.MessageFormat.hashCode();java.text.NumberFormat.hashCode();java.text.ParsePosition.hashCode();java.text.RuleBasedCollator.hashCode();java.text.SimpleDateFormat.hashCode();java.text.StringCharacterIterator.hashCode();java.time.Clock.hashCode();java.time.Duration.hashCode();java.time.Instant.hashCode();java.time.LocalDate.hashCode();java.time.LocalDateTime.hashCode();java.time.LocalTime.hashCode();java.time.MonthDay.hashCode();java.time.OffsetDateTime.hashCode();java.time.OffsetTime.hashCode();java.time.Period.hashCode();java.time.Year.hashCode();java.time.YearMonth.hashCode();java.time.ZonedDateTime.hashCode();java.time.ZoneId.hashCode();java.time.ZoneOffset.hashCode();java.time.chrono.AbstractChronology.hashCode();java.time.chrono.HijrahDate.hashCode();java.time.chrono.JapaneseDate.hashCode();java.time.chrono.MinguoDate.hashCode();java.time.chrono.ThaiBuddhistDate.hashCode();java.time.format.DecimalStyle.hashCode();java.time.temporal.ValueRange.hashCode();java.time.temporal.WeekFields.hashCode();java.time.zone.ZoneOffsetTransition.hashCode();java.time.zone.ZoneOffsetTransitionRule.hashCode();java.time.zone.ZoneRules.hashCode();java.util.AbstractList.hashCode();java.util.AbstractMap.hashCode();java.util.AbstractMap.SimpleEntry.hashCode();java.util.AbstractMap.SimpleImmutableEntry.hashCode();java.util.AbstractSet.hashCode();java.util.Arrays.hashCode(long[]);java.util.Arrays.hashCode(int[]);java.util.Arrays.hashCode(short[]);java.util.Arrays.hashCode(char[]);java.util.Arrays.hashCode(byte[]);java.util.Arrays.hashCode(boolean[]);java.util.Arrays.hashCode(float[]);java.util.Arrays.hashCode(double[]);java.util.Arrays.hashCode(Object[]);java.util.BitSet.hashCode();java.util.Calendar.hashCode();java.util.Date.hashCode();java.util.EnumMap.hashCode();java.util.GregorianCalendar.hashCode();java.util.Hashtable.hashCode();java.util.IdentityHashMap.hashCode();java.util.Locale.hashCode();java.util.Locale.LanguageRange.hashCode();java.util.Objects.hashCode(Object);java.util.Optional.hashCode();java.util.OptionalDouble.hashCode();java.util.OptionalInt.hashCode();java.util.OptionalLong.hashCode();java.util.PropertyPermission.hashCode();java.util.SimpleTimeZone.hashCode();java.util.UUID.hashCode();java.util.Vector.hashCode();java.util.concurrent.ConcurrentHashMap.hashCode();java.util.concurrent.ConcurrentHashMap.KeySetView.hashCode();java.util.concurrent.CopyOnWriteArrayList.hashCode();java.util.jar.Attributes.hashCode();java.util.jar.Attributes.Name.hashCode();java.util.jar.Manifest.hashCode();java.util.logging.Level.hashCode();java.util.zip.ZipEntry.hashCode();javax.crypto.spec.RC2ParameterSpec.hashCode();javax.crypto.spec.RC5ParameterSpec.hashCode();javax.crypto.spec.SecretKeySpec.hashCode();javax.imageio.ImageTypeSpecifier.hashCode();javax.management.Attribute.hashCode();javax.management.MBeanAttributeInfo.hashCode();javax.management.MBeanConstructorInfo.hashCode();javax.management.MBeanFeatureInfo.hashCode();javax.management.MBeanInfo.hashCode();javax.management.MBeanNotificationInfo.hashCode();javax.management.MBeanOperationInfo.hashCode();javax.management.MBeanParameterInfo.hashCode();javax.management.MBeanPermission.hashCode();javax.management.MBeanServerPermission.hashCode();javax.management.ObjectInstance.hashCode();javax.management.ObjectName.hashCode();javax.management.openmbean.ArrayType.hashCode();javax.management.openmbean.CompositeDataSupport.hashCode();javax.management.openmbean.CompositeType.hashCode();javax.management.openmbean.OpenMBeanAttributeInfoSupport.hashCode();javax.management.openmbean.OpenMBeanConstructorInfoSupport.hashCode();javax.management.openmbean.OpenMBeanInfoSupport.hashCode();javax.management.openmbean.OpenMBeanOperationInfoSupport.hashCode();javax.management.openmbean.OpenMBeanParameterInfoSupport.hashCode();javax.management.openmbean.OpenType.hashCode();javax.management.openmbean.SimpleType.hashCode();javax.management.openmbean.TabularDataSupport.hashCode();javax.management.openmbean.TabularType.hashCode();javax.management.remote.JMXPrincipal.hashCode();javax.management.remote.JMXServiceURL.hashCode();javax.naming.BinaryRefAddr.hashCode();javax.naming.CompositeName.hashCode();javax.naming.CompoundName.hashCode();javax.naming.RefAddr.hashCode();javax.naming.Reference.hashCode();javax.naming.directory.BasicAttribute.hashCode();javax.naming.directory.BasicAttributes.hashCode();javax.naming.ldap.LdapName.hashCode();javax.naming.ldap.Rdn.hashCode();javax.net.ssl.SNIHostName.hashCode();javax.net.ssl.SNIServerName.hashCode();javax.print.DocFlavor.hashCode();javax.print.attribute.DateTimeSyntax.hashCode();javax.print.attribute.EnumSyntax.hashCode();javax.print.attribute.HashAttributeSet.hashCode();javax.print.attribute.IntegerSyntax.hashCode();javax.print.attribute.ResolutionSyntax.hashCode();javax.print.attribute.SetOfIntegerSyntax.hashCode();javax.print.attribute.Size2DSyntax.hashCode();javax.print.attribute.TextSyntax.hashCode();javax.print.attribute.URISyntax.hashCode();javax.print.attribute.standard.MediaPrintableArea.hashCode();javax.rmi.CORBA.Stub.hashCode();javax.rmi.ssl.SslRMIClientSocketFactory.hashCode();javax.rmi.ssl.SslRMIServerSocketFactory.hashCode();javax.security.auth.PrivateCredentialPermission.hashCode();javax.security.auth.Subject.hashCode();javax.security.auth.kerberos.DelegationPermission.hashCode();javax.security.auth.kerberos.KerberosKey.hashCode();javax.security.auth.kerberos.KerberosPrincipal.hashCode();javax.security.auth.kerberos.KerberosTicket.hashCode();javax.security.auth.kerberos.KeyTab.hashCode();javax.security.auth.kerberos.ServicePermission.hashCode();javax.security.auth.x500.X500Principal.hashCode();javax.security.cert.Certificate.hashCode();javax.sound.midi.MidiDevice.Info.hashCode();javax.sound.midi.Sequencer.SyncMode.hashCode();javax.sound.sampled.AudioFileFormat.Type.hashCode();javax.sound.sampled.AudioFormat.Encoding.hashCode();javax.sound.sampled.Control.Type.hashCode();javax.sound.sampled.LineEvent.Type.hashCode();javax.sound.sampled.Mixer.Info.hashCode();javax.sound.sampled.Port.Info.hashCode();javax.sound.sampled.ReverbType.hashCode();javax.sql.rowset.serial.SerialArray.hashCode();javax.sql.rowset.serial.SerialBlob.hashCode();javax.sql.rowset.serial.SerialClob.hashCode();javax.sql.rowset.serial.SerialDatalink.hashCode();javax.sql.rowset.serial.SerialJavaObject.hashCode();javax.sql.rowset.serial.SerialRef.hashCode();javax.sql.rowset.serial.SerialStruct.hashCode();javax.swing.RowSorter.SortKey.hashCode();javax.swing.text.SimpleAttributeSet.hashCode();javax.swing.text.TabSet.hashCode();javax.swing.text.TabStop.hashCode();javax.swing.text.html.HTML.UnknownTag.hashCode();javax.swing.tree.TreePath.hashCode();javax.xml.datatype.Duration.hashCode();javax.xml.datatype.XMLGregorianCalendar.hashCode();javax.xml.namespace.QName.hashCode();org.ietf.jgss.ChannelBinding.hashCode();org.ietf.jgss.Oid.hashCode();org.omg.CORBA.portable.Delegate.hashCode(Object);org.omg.CORBA.portable.ObjectImpl.hashCode(),;0.02;0.01;0.02;0.10;0.08;0.11;0.05;0.11;0.10;0.10;0.10;0.10;0.10;0.10;0.02;0.10;0.10;0.10;0.10;0.10;0.10;0.05;0.01;0.03;0.03;0.05;0.12;0.05;0.04;0.04;0.10;0.02;0.02;0.02;0.02;0.02;0.02;0.10;0.11;0.10;0.10;0.10;0.10;0.07;0.07;0.02;0.10;0.11;0.06;0.08;0.06;0.08;0.06;0.00;0.03;0.06;0.11;0.04;0.06;0.12;0.06;0.04;0.06;0.00;0.10;0.08;0.06;0.09;0.03;0.04;0.02;0.02;0.02;0.03;0.04;0.11;0.11;0.03;0.04;0.04;0.04;0.04;0.04;0.10;0.05;0.10;0.06;0.01;0.00;0.00;0.03;0.03;0.03;0.03;0.03;0.03;0.03;0.03;0.06;0.04;0.09;0.00;0.00;0.00;0.02;0.02;0.08;0.07;0.01;0.09;0.05;0.10;0.05;0.05;0.10;0.00;0.02;0.05;0.10;0.01;0.02;0.01;0.01;0.09;0.09;0.09;0.10;0.04;0.05;0.04;0.08;0.00;0.03;0.00;0.00;0.12;0.04;0.00;0.12;0.02;0.09;0.03;0.02;0.09;0.12;0.10;0.09;0.09;0.08;0.09;0.09;0.09;0.09;0.08;0.09;0.07;0.09;0.03;0.10;0.10;0.10;0.10;0.09;0.09;0.09;0.01;0.01;0.01;0.04;0.05;0.04;0.04;0.04;0.03;0.03;0.03;0.03;0.03;0.03;0.03;0.03;0.02;0.03;0.12;0.05;0.06;0.07;0.06;0.03;0.00;0.09;0.03;0.04;0.04;0.04;0.04;0.05;0.02;0.12;0.09;0.05;0.10;0.06;0.09;0.01;0.11;0.00;0.09;0.04;0.04;0.04;0.11;0.11;0.10;0.10;0.10;0.10;0.10;0.10;0.10;0.10;0.07;0.10;0.11;0.04;0.04;0.05;0.04;0.04;0.04;0.04;0.04;0.10;0.05;0.04;0.05;0.12;0.10;0.01;0.03;0.02;0.02;0.02;0.02;0.02;0.03;0.03;0.06;0.05;0.10;0.06;0.07;0.05;0.07;0.10;0.05;0.09;0.04;0.04;0.11;0.05;0.10;0.10;0.10;0.05;0.10;0.05;0.03;0.05;0.05;0.10;0.05;0.01;0.02;0.02;0.01;0.01;0.01;0.02;0.02;0.01;0.02;0.05;0.12;0.12;0.06;0.06;0.12;0.05;0.11;0.04;0.04;0.00;0.03;0.03;0.04;0.04;0.03;0.01;0.01;0.00;0.10
toString,444,0.091624284,The toString() method is used to return a string representation of an object.,";java.awt.AWTEvent.toString();java.awt.AWTKeyStroke.toString();java.awt.BorderLayout.toString();java.awt.BufferCapabilities.FlipContents.toString();java.awt.CardLayout.toString();java.awt.CheckboxGroup.toString();java.awt.Color.toString();java.awt.Component.toString();java.awt.Cursor.toString();java.awt.Dimension.toString();java.awt.Event.toString();java.awt.FlowLayout.toString();java.awt.Font.toString();java.awt.FontMetrics.toString();java.awt.Graphics.toString();java.awt.GridBagLayout.toString();java.awt.GridLayout.toString();java.awt.Insets.toString();java.awt.JobAttributes.toString();java.awt.JobAttributes.DefaultSelectionType.toString();java.awt.JobAttributes.DestinationType.toString();java.awt.JobAttributes.DialogType.toString();java.awt.JobAttributes.MultipleDocumentHandlingType.toString();java.awt.JobAttributes.SidesType.toString();java.awt.MenuComponent.toString();java.awt.MenuShortcut.toString();java.awt.PageAttributes.toString();java.awt.PageAttributes.ColorType.toString();java.awt.PageAttributes.MediaType.toString();java.awt.PageAttributes.OrientationRequestedType.toString();java.awt.PageAttributes.OriginType.toString();java.awt.PageAttributes.PrintQualityType.toString();java.awt.Point.toString();java.awt.Rectangle.toString();java.awt.RenderingHints.toString();java.awt.Robot.toString();java.awt.ScrollPaneAdjustable.toString();java.awt.SystemColor.toString();java.awt.datatransfer.DataFlavor.toString();java.awt.font.NumericShaper.toString();java.awt.font.TextHitInfo.toString();java.awt.font.TextLayout.toString();java.awt.geom.AffineTransform.toString();java.awt.geom.Point2D.Double.toString();java.awt.geom.Point2D.Float.toString();java.awt.geom.Rectangle2D.Double.toString();java.awt.geom.Rectangle2D.Float.toString();java.awt.image.BufferedImage.toString();java.awt.image.ColorModel.toString();java.awt.image.DirectColorModel.toString();java.awt.image.IndexColorModel.toString();java.beans.Expression.toString();java.beans.FeatureDescriptor.toString();java.beans.PropertyChangeEvent.toString();java.beans.Statement.toString();java.io.ByteArrayOutputStream.toString();java.io.ByteArrayOutputStream.toString(String);java.io.ByteArrayOutputStream.toString(int);java.io.CharArrayWriter.toString();java.io.File.toString();java.io.ObjectStreamClass.toString();java.io.ObjectStreamField.toString();java.io.StreamTokenizer.toString();java.io.StringWriter.toString();java.lang.Boolean.toString(boolean);java.lang.Boolean.toString();java.lang.Byte.toString(byte);java.lang.Byte.toString();java.lang.Character.toString();java.lang.Character.toString(char);java.lang.Character.Subset.toString();java.lang.Class.toString();java.lang.Double.toString();java.lang.Enum.toString();java.lang.Float.toString();java.lang.Integer.toString(int,int);java.lang.Integer.toString(int);java.lang.Integer.toString();java.lang.Long.toString(long,int);java.lang.Long.toString(long);java.lang.Long.toString();java.lang.Object.toString();java.lang.Package.toString();java.lang.Short.toString(short);java.lang.Short.toString();java.lang.String.toString();java.lang.StringBuffer.toString();java.lang.StringBuilder.toString();java.lang.Thread.toString();java.lang.ThreadGroup.toString();java.lang.invoke.MethodHandle.toString();java.lang.invoke.MethodType.toString();java.lang.invoke.SerializedLambda.toString();java.lang.management.LockInfo.toString();java.lang.management.MemoryUsage.toString();java.lang.management.ThreadInfo.toString();java.lang.reflect.Constructor.toString();java.lang.reflect.Field.toString();java.lang.reflect.Method.toString();java.lang.reflect.Modifier.toString(int);java.lang.reflect.Parameter.toString();java.math.BigInteger.toString(int);java.math.BigInteger.toString();java.net.HttpCookie.toString();java.net.InetAddress.toString();java.net.InetSocketAddress.toString();java.net.InterfaceAddress.toString();java.net.NetworkInterface.toString();java.net.Proxy.toString();java.net.ServerSocket.toString();java.net.Socket.toString();java.net.SocketImpl.toString();java.net.URI.toString();java.net.URL.toString();java.net.URLConnection.toString();java.nio.ByteBuffer.toString();java.nio.ByteOrder.toString();java.nio.CharBuffer.toString();java.nio.DoubleBuffer.toString();java.nio.FloatBuffer.toString();java.nio.IntBuffer.toString();java.nio.LongBuffer.toString();java.nio.ShortBuffer.toString();java.nio.channels.FileChannel.MapMode.toString();java.nio.channels.FileLock.toString();java.nio.charset.Charset.toString();java.nio.charset.CoderResult.toString();java.nio.charset.CodingErrorAction.toString();java.nio.file.attribute.AclEntry.toString();java.nio.file.attribute.FileTime.toString();java.nio.file.attribute.PosixFilePermissions.toString(Set&lt;PosixFilePermission&gt;);java.rmi.dgc.VMID.toString();java.rmi.server.LogStream.toString();java.rmi.server.ObjID.toString();java.rmi.server.Operation.toString();java.rmi.server.RemoteObject.toString();java.rmi.server.UID.toString();java.security.AlgorithmParameters.toString();java.security.CodeSigner.toString();java.security.CodeSource.toString();java.security.DigestInputStream.toString();java.security.DigestOutputStream.toString();java.security.Identity.toString();java.security.Identity.toString(boolean);java.security.IdentityScope.toString();java.security.KeyStore.PrivateKeyEntry.toString();java.security.KeyStore.SecretKeyEntry.toString();java.security.KeyStore.TrustedCertificateEntry.toString();java.security.MessageDigest.toString();java.security.Permission.toString();java.security.PermissionCollection.toString();java.security.PKCS12Attribute.toString();java.security.ProtectionDomain.toString();java.security.Provider.toString();java.security.Provider.Service.toString();java.security.Signature.toString();java.security.Signer.toString();java.security.Timestamp.toString();java.security.UnresolvedPermission.toString();java.security.cert.Certificate.toString();java.security.cert.CertPath.toString();java.security.cert.CollectionCertStoreParameters.toString();java.security.cert.CRL.toString();java.security.cert.LDAPCertStoreParameters.toString();java.security.cert.PKIXBuilderParameters.toString();java.security.cert.PKIXCertPathBuilderResult.toString();java.security.cert.PKIXCertPathValidatorResult.toString();java.security.cert.PKIXParameters.toString();java.security.cert.PolicyQualifierInfo.toString();java.security.cert.TrustAnchor.toString();java.security.cert.X509CertSelector.toString();java.security.cert.X509CRLEntry.toString();java.security.cert.X509CRLSelector.toString();java.security.spec.PSSParameterSpec.toString();java.sql.Date.toString();java.sql.Time.toString();java.sql.Timestamp.toString();java.text.Annotation.toString();java.text.AttributedCharacterIterator.Attribute.toString();java.text.Bidi.toString();java.text.FieldPosition.toString();java.text.ParsePosition.toString();java.time.Duration.toString();java.time.Instant.toString();java.time.LocalDate.toString();java.time.MonthDay.toString();java.time.Period.toString();java.time.Year.toString();java.time.YearMonth.toString();java.time.ZonedDateTime.toString();java.time.ZoneId.toString();java.time.ZoneOffset.toString();java.time.chrono.AbstractChronology.toString();java.time.chrono.HijrahDate.toString();java.time.chrono.JapaneseDate.toString();java.time.chrono.JapaneseEra.toString();java.time.chrono.MinguoDate.toString();java.time.chrono.ThaiBuddhistDate.toString();java.time.format.DateTimeFormatter.toString();java.time.format.DecimalStyle.toString();java.time.temporal.ValueRange.toString();java.time.temporal.WeekFields.toString();java.time.zone.ZoneOffsetTransition.toString();java.time.zone.ZoneOffsetTransitionRule.toString();java.time.zone.ZoneRules.toString();java.util.AbstractCollection.toString();java.util.AbstractMap.toString();java.util.AbstractMap.SimpleEntry.toString();java.util.AbstractMap.SimpleImmutableEntry.toString();java.util.Arrays.toString(long[]);java.util.Arrays.toString(int[]);java.util.Arrays.toString(short[]);java.util.Arrays.toString(char[]);java.util.Arrays.toString(byte[]);java.util.Arrays.toString(boolean[]);java.util.Arrays.toString(float[]);java.util.Arrays.toString(double[]);java.util.Arrays.toString(Object[]);java.util.BitSet.toString();java.util.Calendar.toString();java.util.Currency.toString();java.util.DoubleSummaryStatistics.toString();java.util.EventObject.toString();java.util.Formatter.toString();java.util.Hashtable.toString();java.util.IntSummaryStatistics.toString();java.util.LongSummaryStatistics.toString();java.util.Objects.toString(Object);java.util.Objects.toString(Object,String);java.util.Optional.toString();java.util.OptionalDouble.toString();java.util.OptionalInt.toString();java.util.OptionalLong.toString();java.util.Scanner.toString();java.util.ServiceLoader.toString();java.util.SimpleTimeZone.toString();java.util.StringJoiner.toString();java.util.UUID.toString();java.util.Vector.toString();java.util.concurrent.ArrayBlockingQueue.toString();java.util.concurrent.CompletableFuture.toString();java.util.concurrent.ConcurrentHashMap.toString();java.util.concurrent.ConcurrentHashMap.KeySetView.toString();java.util.concurrent.CopyOnWriteArrayList.toString();java.util.concurrent.CountDownLatch.toString();java.util.concurrent.ForkJoinPool.toString();java.util.concurrent.LinkedBlockingDeque.toString();java.util.concurrent.LinkedBlockingQueue.toString();java.util.concurrent.Phaser.toString();java.util.concurrent.PriorityBlockingQueue.toString();java.util.concurrent.Semaphore.toString();java.util.concurrent.ThreadPoolExecutor.toString();java.util.concurrent.atomic.AtomicBoolean.toString();java.util.concurrent.atomic.AtomicInteger.toString();java.util.concurrent.atomic.AtomicIntegerArray.toString();java.util.concurrent.atomic.AtomicLong.toString();java.util.concurrent.atomic.AtomicLongArray.toString();java.util.concurrent.atomic.AtomicReference.toString();java.util.concurrent.atomic.AtomicReferenceArray.toString();java.util.concurrent.atomic.DoubleAccumulator.toString();java.util.concurrent.atomic.DoubleAdder.toString();java.util.concurrent.atomic.LongAccumulator.toString();java.util.concurrent.atomic.LongAdder.toString();java.util.concurrent.locks.AbstractQueuedLongSynchronizer.toString();java.util.concurrent.locks.AbstractQueuedSynchronizer.toString();java.util.concurrent.locks.ReentrantLock.toString();java.util.concurrent.locks.ReentrantReadWriteLock.toString();java.util.concurrent.locks.ReentrantReadWriteLock.ReadLock.toString();java.util.concurrent.locks.ReentrantReadWriteLock.WriteLock.toString();java.util.concurrent.locks.StampedLock.toString();java.util.jar.Attributes.Name.toString();java.util.logging.Level.toString();java.util.prefs.AbstractPreferences.toString();java.util.prefs.Preferences.toString();java.util.regex.Matcher.toString();java.util.regex.Pattern.toString();java.util.zip.ZipEntry.toString();javax.accessibility.AccessibleBundle.toString();javax.accessibility.AccessibleRelationSet.toString();javax.accessibility.AccessibleStateSet.toString();javax.activation.MimeType.toString();javax.activation.MimeTypeParameterList.toString();javax.imageio.plugins.jpeg.JPEGHuffmanTable.toString();javax.imageio.plugins.jpeg.JPEGQTable.toString();javax.management.Attribute.toString();javax.management.AttributeValueExp.toString();javax.management.ImmutableDescriptor.toString();javax.management.MBeanAttributeInfo.toString();javax.management.MBeanConstructorInfo.toString();javax.management.MBeanInfo.toString();javax.management.MBeanNotificationInfo.toString();javax.management.MBeanOperationInfo.toString();javax.management.MBeanParameterInfo.toString();javax.management.MBeanServerNotification.toString();javax.management.Notification.toString();javax.management.ObjectInstance.toString();javax.management.ObjectName.toString();javax.management.StringValueExp.toString();javax.management.modelmbean.DescriptorSupport.toString();javax.management.modelmbean.ModelMBeanAttributeInfo.toString();javax.management.modelmbean.ModelMBeanConstructorInfo.toString();javax.management.modelmbean.ModelMBeanNotificationInfo.toString();javax.management.modelmbean.ModelMBeanOperationInfo.toString();javax.management.openmbean.ArrayType.toString();javax.management.openmbean.CompositeDataSupport.toString();javax.management.openmbean.CompositeType.toString();javax.management.openmbean.OpenMBeanAttributeInfoSupport.toString();javax.management.openmbean.OpenMBeanConstructorInfoSupport.toString();javax.management.openmbean.OpenMBeanInfoSupport.toString();javax.management.openmbean.OpenMBeanOperationInfoSupport.toString();javax.management.openmbean.OpenMBeanParameterInfoSupport.toString();javax.management.openmbean.OpenType.toString();javax.management.openmbean.SimpleType.toString();javax.management.openmbean.TabularDataSupport.toString();javax.management.openmbean.TabularType.toString();javax.management.relation.Role.toString();javax.management.relation.RoleInfo.toString();javax.management.relation.RoleUnresolved.toString();javax.management.remote.JMXPrincipal.toString();javax.management.remote.JMXServiceURL.toString();javax.management.remote.NotificationResult.toString();javax.management.remote.TargetedNotification.toString();javax.management.remote.rmi.RMIConnectionImpl.toString();javax.management.remote.rmi.RMIConnector.toString();javax.naming.BinaryRefAddr.toString();javax.naming.Binding.toString();javax.naming.CompositeName.toString();javax.naming.CompoundName.toString();javax.naming.NameClassPair.toString();javax.naming.RefAddr.toString();javax.naming.Reference.toString();javax.naming.directory.BasicAttribute.toString();javax.naming.directory.BasicAttributes.toString();javax.naming.directory.ModificationItem.toString();javax.naming.directory.SearchResult.toString();javax.naming.ldap.LdapName.toString();javax.naming.ldap.Rdn.toString();javax.net.ssl.SNIHostName.toString();javax.net.ssl.SNIServerName.toString();javax.net.ssl.SSLEngineResult.toString();javax.print.DocFlavor.toString();javax.print.attribute.DateTimeSyntax.toString();javax.print.attribute.EnumSyntax.toString();javax.print.attribute.IntegerSyntax.toString();javax.print.attribute.ResolutionSyntax.toString(int,String);javax.print.attribute.ResolutionSyntax.toString();javax.print.attribute.SetOfIntegerSyntax.toString();javax.print.attribute.Size2DSyntax.toString(int,String);javax.print.attribute.Size2DSyntax.toString();javax.print.attribute.TextSyntax.toString();javax.print.attribute.URISyntax.toString();javax.print.attribute.standard.MediaPrintableArea.toString(int,String);javax.print.attribute.standard.MediaPrintableArea.toString();javax.print.event.PrintEvent.toString();javax.rmi.CORBA.Stub.toString();javax.security.auth.Subject.toString();javax.security.auth.kerberos.KerberosKey.toString();javax.security.auth.kerberos.KerberosPrincipal.toString();javax.security.auth.kerberos.KerberosTicket.toString();javax.security.auth.kerberos.KeyTab.toString();javax.security.auth.login.AppConfigurationEntry.LoginModuleControlFlag.toString();javax.security.auth.x500.X500Principal.toString();javax.security.cert.Certificate.toString();javax.sound.midi.MidiDevice.Info.toString();javax.sound.midi.Sequencer.SyncMode.toString();javax.sound.sampled.AudioFileFormat.toString();javax.sound.sampled.AudioFileFormat.Type.toString();javax.sound.sampled.AudioFormat.toString();javax.sound.sampled.AudioFormat.Encoding.toString();javax.sound.sampled.BooleanControl.toString();javax.sound.sampled.CompoundControl.toString();javax.sound.sampled.Control.toString();javax.sound.sampled.Control.Type.toString();javax.sound.sampled.DataLine.Info.toString();javax.sound.sampled.EnumControl.toString();javax.sound.sampled.FloatControl.toString();javax.sound.sampled.Line.Info.toString();javax.sound.sampled.LineEvent.toString();javax.sound.sampled.LineEvent.Type.toString();javax.sound.sampled.Mixer.Info.toString();javax.sound.sampled.Port.Info.toString();javax.sound.sampled.ReverbType.toString();javax.swing.DefaultBoundedRangeModel.toString();javax.swing.DefaultListModel.toString();javax.swing.DefaultListSelectionModel.toString();javax.swing.GroupLayout.toString();javax.swing.ImageIcon.toString();javax.swing.JList.DropLocation.toString();javax.swing.JTable.DropLocation.toString();javax.swing.JTree.DropLocation.toString();javax.swing.LookAndFeel.toString();javax.swing.RepaintManager.toString();javax.swing.SizeRequirements.toString();javax.swing.TransferHandler.DropLocation.toString();javax.swing.UIManager.LookAndFeelInfo.toString();javax.swing.event.DocumentEvent.EventType.toString();javax.swing.event.EventListenerList.toString();javax.swing.event.HyperlinkEvent.EventType.toString();javax.swing.event.ListDataEvent.toString();javax.swing.event.ListSelectionEvent.toString();javax.swing.event.TreeModelEvent.toString();javax.swing.filechooser.FileNameExtensionFilter.toString();javax.swing.plaf.nimbus.State.toString();javax.swing.plaf.synth.ColorType.toString();javax.swing.plaf.synth.Region.toString();javax.swing.table.TableStringConverter.toString(TableModel,int,int);javax.swing.text.DefaultCaret.toString();javax.swing.text.DefaultStyledDocument.ElementSpec.toString();javax.swing.text.JTextComponent.DropLocation.toString();javax.swing.text.Position.Bias.toString();javax.swing.text.Segment.toString();javax.swing.text.SimpleAttributeSet.toString();javax.swing.text.StyleConstants.toString();javax.swing.text.StyleContext.toString();javax.swing.text.TabSet.toString();javax.swing.text.TabStop.toString();javax.swing.text.html.CSS.Attribute.toString();javax.swing.text.html.HTML.Attribute.toString();javax.swing.text.html.HTML.Tag.toString();javax.swing.text.html.Option.toString();javax.swing.text.html.parser.AttributeList.toString();javax.swing.text.html.parser.ContentModel.toString();javax.swing.text.html.parser.DTD.toString();javax.swing.text.html.parser.Element.toString();javax.swing.tree.DefaultMutableTreeNode.toString();javax.swing.tree.DefaultTreeSelectionModel.toString();javax.swing.tree.TreePath.toString();javax.swing.undo.AbstractUndoableEdit.toString();javax.swing.undo.CompoundEdit.toString();javax.swing.undo.UndoableEditSupport.toString();javax.swing.undo.UndoManager.toString();javax.tools.SimpleJavaFileObject.toString();javax.xml.bind.helpers.ValidationEventImpl.toString();javax.xml.bind.helpers.ValidationEventLocatorImpl.toString();javax.xml.crypto.KeySelector.Purpose.toString();javax.xml.crypto.dsig.spec.XPathType.Filter.toString();javax.xml.datatype.DatatypeConstants.Field.toString();javax.xml.datatype.Duration.toString();javax.xml.datatype.XMLGregorianCalendar.toString();javax.xml.namespace.QName.toString();javax.xml.ws.EndpointReference.toString();org.ietf.jgss.Oid.toString();org.omg.CORBA.portable.Delegate.toString(Object);org.omg.CORBA.portable.ObjectImpl.toString()",;0.02;0.01;0.06;0.09;0.06;0.05;0.04;0.06;0.07;0.04;0.00;0.06;0.00;0.00;0.00;0.06;0.04;0.05;0.07;0.09;0.09;0.09;0.09;0.09;0.00;0.00;0.07;0.09;0.09;0.09;0.09;0.09;0.04;0.00;0.01;0.07;0.06;0.05;0.01;0.01;0.00;0.00;0.01;0.01;0.01;0.03;0.03;0.01;0.02;0.01;0.02;0.01;0.06;0.06;0.01;0.00;0.00;0.00;0.00;0.00;0.02;0.00;0.02;0.00;0.01;0.01;0.01;0.01;0.01;0.01;0.00;0.01;0.04;0.00;0.04;0.01;0.01;0.01;0.01;0.01;0.01;0.03;0.02;0.01;0.01;0.00;0.01;0.01;0.05;0.07;0.03;0.03;0.09;0.03;0.00;0.04;0.01;0.01;0.01;0.00;0.01;0.01;0.01;0.02;0.00;0.03;0.00;0.09;0.03;0.00;0.00;0.00;0.00;0.04;0.02;0.02;0.01;0.00;0.02;0.02;0.02;0.02;0.02;0.02;0.01;0.02;0.02;0.02;0.04;0.01;0.01;0.04;0.00;0.07;0.00;0.01;0.07;0.01;0.02;0.01;0.04;0.04;0.00;0.00;0.00;0.07;0.07;0.07;0.06;0.01;0.01;0.07;0.00;0.00;0.02;0.04;0.00;0.02;0.01;0.07;0.04;0.01;0.07;0.01;0.01;0.01;0.01;0.01;0.01;0.01;0.01;0.07;0.01;0.09;0.00;0.00;0.00;0.03;0.04;0.00;0.06;0.06;0.01;0.02;0.01;0.01;0.00;0.00;0.01;0.00;0.00;0.00;0.00;0.09;0.09;0.09;0.09;0.09;0.00;0.02;0.00;0.04;0.03;0.03;0.03;0.04;0.03;0.03;0.03;0.04;0.04;0.04;0.04;0.04;0.04;0.04;0.04;0.02;0.02;0.04;0.00;0.03;0.02;0.00;0.03;0.09;0.09;0.00;0.00;0.03;0.03;0.03;0.03;0.03;0.02;0.07;0.00;0.00;0.06;0.07;0.01;0.04;0.04;0.04;0.01;0.01;0.07;0.07;0.01;0.07;0.01;0.01;0.03;0.03;0.03;0.03;0.03;0.03;0.03;0.03;0.03;0.03;0.03;0.01;0.01;0.01;0.01;0.01;0.01;0.01;0.00;0.07;0.00;0.04;0.03;0.03;0.06;0.00;0.00;0.00;0.03;0.07;0.01;0.01;0.01;0.00;0.09;0.09;0.09;0.09;0.09;0.09;0.09;0.07;0.02;0.01;0.04;0.00;0.00;0.00;0.00;0.00;0.00;0.04;0.05;0.04;0.04;0.04;0.04;0.04;0.04;0.06;0.04;0.04;0.04;0.02;0.02;0.02;0.07;0.01;0.04;0.00;0.04;0.04;0.02;0.04;0.02;0.02;0.03;0.03;0.03;0.03;0.03;0.03;0.04;0.04;0.00;0.02;0.01;0.02;0.00;0.00;0.00;0.00;0.01;0.01;0.00;0.01;0.01;0.00;0.02;0.00;0.00;0.07;0.04;0.03;0.09;0.09;0.09;0.09;0.01;0.03;0.07;0.05;0.02;0.05;0.01;0.01;0.01;0.05;0.05;0.00;0.01;0.00;0.05;0.05;0.00;0.03;0.00;0.05;0.02;0.01;0.01;0.03;0.03;0.06;0.07;0.06;0.06;0.06;0.03;0.03;0.01;0.06;0.03;0.00;0.06;0.00;0.05;0.03;0.03;0.05;0.09;0.00;0.00;0.02;0.07;0.00;0.06;0.00;0.00;0.00;0.01;0.00;0.02;0.09;0.01;0.04;0.02;0.00;0.09;0.00;0.07;0.00;0.00;0.03;0.03;0.03;0.03;0.03;0.03;0.09;0.06;0.06;0.05;0.00;0.01;0.01;0.01;0.00;0.00;0.04;0.00;0.00
